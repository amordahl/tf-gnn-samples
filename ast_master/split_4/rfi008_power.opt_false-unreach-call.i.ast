TranslationUnitDecl 0x5623d56cce18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5623d56cd6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5623d56cd3b0 '__int128'
|-TypedefDecl 0x5623d56cd748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5623d56cd3d0 'unsigned __int128'
|-TypedefDecl 0x5623d56cda50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5623d56cd820 'struct __NSConstantString_tag'
|   `-Record 0x5623d56cd7a0 '__NSConstantString_tag'
|-TypedefDecl 0x5623d56cdaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5623d56cdab0 'char *'
|   `-BuiltinType 0x5623d56cceb0 'char'
|-TypedefDecl 0x5623d570c650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5623d56cdd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5623d56cdbd0 'struct __va_list_tag'
|     `-Record 0x5623d56cdb50 '__va_list_tag'
|-FunctionDecl 0x5623d570c770 <./split_4/rfi008_power.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x5623d570c940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5623d570c870 <col:31> col:34 'int'
|-FunctionDecl 0x5623d570cab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5623d570cbe0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5623d570cd28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5623d570cc98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5623d570cf58 <col:40, col:99>
|   |-IfStmt 0x5623d570cf28 <col:42, col:88>
|   | |-UnaryOperator 0x5623d570ce08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5623d570cdf0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5623d570cdd0 <col:47> 'int' lvalue ParmVar 0x5623d570cc98 'expression' 'int'
|   | `-CompoundStmt 0x5623d570cf10 <col:59, col:88>
|   |   `-LabelStmt 0x5623d570cef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5623d570ce88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5623d570ce70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5623d570ce20 <col:68> 'void () __attribute__((noreturn))' Function 0x5623d570cbe0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5623d570cf40 <col:89>
|   `-ReturnStmt 0x5623d570cf48 <col:91>
|-FunctionDecl 0x5623d570cfa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5623d570d060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5623d570d3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5623d570d118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5623d570d198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5623d570d218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5623d570d298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5623d570d4a0 <line:11:22>
|-FunctionDecl 0x5623d5733520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5623d570d510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5623d570d590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5623d5733350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5623d57333d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5623d57335e0 <line:14:22>
|-FunctionDecl 0x5623d5733890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5623d5733650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5623d57336d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5623d5733750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5623d5733948 <line:16:22>
|-TypedefDecl 0x5623d57339b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5623d56ccf70 'unsigned char'
|-TypedefDecl 0x5623d5733a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5623d56ccf90 'unsigned short'
|-TypedefDecl 0x5623d5733a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5623d56ccfb0 'unsigned int'
|-TypedefDecl 0x5623d5733b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-TypedefDecl 0x5623d5733b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5623d56cced0 'signed char'
|-TypedefDecl 0x5623d5733be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5623d56ccf70 'unsigned char'
|-TypedefDecl 0x5623d5733c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5623d56ccef0 'short'
|-TypedefDecl 0x5623d5733cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5623d56ccf90 'unsigned short'
|-TypedefDecl 0x5623d5733d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5623d56ccf10 'int'
|-TypedefDecl 0x5623d5733da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5623d56ccfb0 'unsigned int'
|-TypedefDecl 0x5623d5733e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d5733e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-TypedefDecl 0x5623d5733ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d5733f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-TypedefDecl 0x5623d5733fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-TypedefDecl 0x5623d5734048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5623d56ccfb0 'unsigned int'
|-TypedefDecl 0x5623d57340b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5623d56ccfb0 'unsigned int'
|-TypedefDecl 0x5623d5734128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-TypedefDecl 0x5623d5734198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-TypedefDecl 0x5623d5734208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5623d56ccfb0 'unsigned int'
|-TypedefDecl 0x5623d5734278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-TypedefDecl 0x5623d57342e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d5734378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d57343e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5623d56ccf10 'int'
|-RecordDecl 0x5623d5734440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x5623d5734588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5623d5734640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5623d57345e0 'struct __fsid_t' sugar
|   `-RecordType 0x5623d57344c0 '__fsid_t'
|     `-Record 0x5623d5734440 ''
|-TypedefDecl 0x5623d57346c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d5734738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-TypedefDecl 0x5623d57347a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-TypedefDecl 0x5623d5734818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5623d56ccfb0 'unsigned int'
|-TypedefDecl 0x5623d5734888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d57348f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5623d56ccfb0 'unsigned int'
|-TypedefDecl 0x5623d5734968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d57349d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5623d56ccf10 'int'
|-TypedefDecl 0x5623d5734a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5623d56ccf10 'int'
|-TypedefDecl 0x5623d5734ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5623d56ccf10 'int'
|-TypedefDecl 0x5623d5734b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5623d56cd630 'void *'
|   `-BuiltinType 0x5623d56cce70 'void'
|-TypedefDecl 0x5623d5734b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d5734c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d5734c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d5734ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-TypedefDecl 0x5623d5734d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-TypedefDecl 0x5623d5734dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-TypedefDecl 0x5623d5734e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-TypedefDecl 0x5623d5734ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d5734f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d5734f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d5734ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-TypedefDecl 0x5623d5735088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5623d5735050 '__off64_t' sugar
|   |-Typedef 0x5623d5734378 '__off64_t'
|   `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d5735180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5623d5735140 '__quad_t *'
|   `-TypedefType 0x5623d57350e0 '__quad_t' sugar
|     |-Typedef 0x5623d5733ef8 '__quad_t'
|     `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d57351f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5623d56cdab0 'char *'
|   `-BuiltinType 0x5623d56cceb0 'char'
|-TypedefDecl 0x5623d5735260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d57352d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5623d56ccfb0 'unsigned int'
|-FunctionDecl 0x5623d5736458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5623d5736380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5623d5736768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x5623d5736758 <line:73:3, col:34>
|     `-CallExpr 0x5623d5736718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5623d5736700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5623d5736690 <col:10> '<builtin fn type>' Function 0x5623d5736500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5623d5736740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5623d57366b0 <col:29> 'unsigned int' lvalue ParmVar 0x5623d5736380 '__bsx' 'unsigned int'
|-FunctionDecl 0x5623d5736500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5623d57365a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5623d5736610 <col:10> Implicit
| `-ConstAttr 0x5623d5736668 <col:10> Implicit
|-FunctionDecl 0x5623d57368c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5623d57367b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5623d5736bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5623d5736bc8 <line:78:3, col:34>
|     `-CallExpr 0x5623d5736b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5623d5736b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5623d5736af8 <col:10> '<builtin fn type>' Function 0x5623d5736968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5623d5736bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5623d5736b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5623d57367b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5623d5736968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5623d5736a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5623d5736a78 <col:10> Implicit
| `-ConstAttr 0x5623d5736ad0 <col:10> Implicit
|-TypedefDecl 0x5623d5736c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-TypedefDecl 0x5623d5736c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5623d5736c60 '__time_t' sugar
|   |-Typedef 0x5623d5734888 '__time_t'
|   `-BuiltinType 0x5623d56ccf30 'long'
|-RecordDecl 0x5623d5736cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x5623d5736da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5623d5736e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5623d5736ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5623d5736e90 '__pid_t' sugar
|   |-Typedef 0x5623d57343e8 '__pid_t'
|   `-BuiltinType 0x5623d56ccf10 'int'
|-RecordDecl 0x5623d5736f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5623d5736fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5623d5737030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x5623d57370f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5623d5737158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-RecordDecl 0x5623d57371b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x5623d5738480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5623d5738530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5623d57384d0 'struct cpu_set_t' sugar
|   `-RecordType 0x5623d5737230 'cpu_set_t'
|     `-Record 0x5623d57371b0 ''
|-FunctionDecl 0x5623d5738808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5623d57385d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5623d57386e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5623d57388b8 <line:108:19>
|-FunctionDecl 0x5623d5738a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5623d5738920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5623d5738b38 <col:69>
|-FunctionDecl 0x5623d5738cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5623d5738ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5623d5738d58 <col:64>
|-FunctionDecl 0x5623d5739018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5623d5738dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5623d5738ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5623d57390c8 <line:114:22>
|-FunctionDecl 0x5623d57393b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5623d5739130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5623d5739228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5623d5739460 <col:88>
|-FunctionDecl 0x5623d5739718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5623d57394c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5623d5739548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5623d57395d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5623d57397d0 <col:62>
|-FunctionDecl 0x5623d5739948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5623d5739838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5623d57399f0 <col:63>
|-FunctionDecl 0x5623d5739b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5623d5739bb8 <col:47>
|-FunctionDecl 0x5623d5739cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5623d5739c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5623d5739d68 <col:69>
|-FunctionDecl 0x5623d5739e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5623d5739dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5623d5739f18 <col:69>
|-FunctionDecl 0x5623d573a1d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5623d5739f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5623d573a0b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5623d573a288 <col:88>
|-TypedefDecl 0x5623d573a318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5623d573a2e0 '__clock_t' sugar
|   |-Typedef 0x5623d57346c8 '__clock_t'
|   `-BuiltinType 0x5623d56ccf30 'long'
|-TypedefDecl 0x5623d573a3c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5623d573a370 '__clockid_t' sugar
|   |-Typedef 0x5623d5734ab8 '__clockid_t'
|   `-BuiltinType 0x5623d56ccf10 'int'
|-TypedefDecl 0x5623d573a458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5623d573a420 '__timer_t' sugar
|   |-Typedef 0x5623d5734b28 '__timer_t'
|   `-PointerType 0x5623d56cd630 'void *'
|     `-BuiltinType 0x5623d56cce70 'void'
|-RecordDecl 0x5623d573a4b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x5623d573a570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5623d573a5d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5623d573a640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5623d573a6a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5623d573a710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5623d573a778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5623d573a7e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5623d573a848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5623d573a8b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5623d573a918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5623d573a980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5623d573a9d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x5623d573aa98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5623d573ab08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5623d573abb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5623d573ad80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5623d573ae20 <col:45>
|-FunctionDecl 0x5623d573b000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5623d573aef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5623d573b0a8 <col:54>
|-FunctionDecl 0x5623d573b2a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5623d573b110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5623d573b188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5623d573b358 <line:158:22>
| `-ConstAttr 0x5623d573bff0 <col:63>
|-FunctionDecl 0x5623d573c1f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5623d573c0e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5623d573c298 <col:56>
|-FunctionDecl 0x5623d573c640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5623d573c308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5623d573c380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5623d573c400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5623d573c4f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5623d573c700 <col:54>
|-RecordDecl 0x5623d573c758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x5623d573c808 parent 0x5623d56cce18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5623d573ca68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5623d573cb08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5623d573cb70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5623d573cbd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5623d573ccc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5623d573cde8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5623d573cd90 'struct __locale_struct *'
|   `-ElaboratedType 0x5623d573cd20 'struct __locale_struct' sugar
|     `-RecordType 0x5623d573c7e0 'struct __locale_struct'
|       `-Record 0x5623d573c758 '__locale_struct'
|-TypedefDecl 0x5623d573ce98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5623d573ce60 '__locale_t' sugar
|   |-Typedef 0x5623d573cde8 '__locale_t'
|   `-PointerType 0x5623d573cd90 'struct __locale_struct *'
|     `-ElaboratedType 0x5623d573cd20 'struct __locale_struct' sugar
|       `-RecordType 0x5623d573c7e0 'struct __locale_struct'
|         `-Record 0x5623d573c758 '__locale_struct'
|-FunctionDecl 0x5623d573e2a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5623d573cf08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5623d573cf80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5623d573e028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5623d573e0b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5623d573e130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5623d573e368 <col:40>
|-FunctionDecl 0x5623d573e558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5623d573e430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5623d573e600 <col:66>
|-FunctionDecl 0x5623d573e710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5623d573e668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5623d573e7b8 <col:69>
|-FunctionDecl 0x5623d573e9e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5623d573e820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5623d573e8b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5623d573ea98 <col:52>
|-FunctionDecl 0x5623d573ec40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5623d573eb00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5623d573eb90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5623d573ecf0 <col:55>
|-FunctionDecl 0x5623d573ee88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5623d573ed70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5623d573ef30 <col:62>
|-FunctionDecl 0x5623d573f168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5623d573ef98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5623d573f210 <col:60>
|-FunctionDecl 0x5623d573f438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5623d573f290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5623d573f310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5623d573f4e8 <col:44>
|-FunctionDecl 0x5623d573f6f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5623d573f550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5623d573f5d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5623d573f7a8 <col:49>
|-VarDecl 0x5623d573f8a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5623d573f928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5623d573f9a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5623d573fa70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5623d573fba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5623d573fc40 <col:42>
|-VarDecl 0x5623d573fcb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5623d573fd30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5623d573feb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5623d573fda8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5623d573ff60 <col:57>
|-FunctionDecl 0x5623d57400d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5623d573ffe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5623d5740178 <col:56>
|-FunctionDecl 0x5623d5740288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5623d57401f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5623d5740330 <col:59>
|-FunctionDecl 0x5623d5740438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5623d57403a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5623d57404e0 <col:48>
| `-ConstAttr 0x5623d5740538 <col:89>
|-FunctionDecl 0x5623d5740798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5623d57405e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5623d5740678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5623d57409f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5623d5740888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5623d5740918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5623d5740aa8 <col:88>
|-FunctionDecl 0x5623d5740c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5623d5740b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5623d5740ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5623d5740cf0 <col:88>
|-FunctionDecl 0x5623d5740f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5623d5740d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5623d5740de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5623d5740fb8 <line:209:22>
|-FunctionDecl 0x5623d5741358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5623d5741020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5623d57410e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5623d5741170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5623d5741200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5623d5741658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5623d5741458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5623d5741530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5623d5741708 <col:85>
|-FunctionDecl 0x5623d5741af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5623d5741770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5623d57418a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5623d57419b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5623d5741bb0 <col:52>
|-FunctionDecl 0x5623d5741d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5623d5741c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5623d5741dd0 <col:61>
|-FunctionDecl 0x5623d5742248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5623d5741e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5623d5741eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5623d5741fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5623d57420f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5623d5742308 <col:62>
|-FunctionDecl 0x5623d5742528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5623d5742370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5623d5742400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5623d57425d8 <line:222:22>
|-FunctionDecl 0x5623d57426d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5623d5742640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5623d5742780 <col:65>
|-TypedefDecl 0x5623d57427f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5623d56ccfd0 'unsigned long'
|-RecordDecl 0x5623d5742848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x5623d5742990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5623d57429f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5623d5742aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5623d5742a50 'union pthread_attr_t' sugar
|   `-RecordType 0x5623d57428d0 'union pthread_attr_t'
|     `-Record 0x5623d5742848 'pthread_attr_t'
|-RecordDecl 0x5623d5742b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5623d5742c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5623d5742cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5623d5742da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5623d5742d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5623d5742b80 'struct __pthread_internal_list'
|     `-Record 0x5623d5742b00 '__pthread_internal_list'
|-RecordDecl 0x5623d5742e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x5623d5742eb8 parent 0x5623d56cce18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5623d5742f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5623d5742ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5623d5743060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5623d5747110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5623d5747178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5623d57471e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5623d5747268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5623d5747320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5623d5747410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5623d5747478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5623d5747600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5623d57475a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5623d5742e90 'pthread_mutex_t'
|     `-Record 0x5623d5742e10 ''
|-RecordDecl 0x5623d5747670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x5623d57477b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5623d5747818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5623d57478d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5623d5747870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5623d57476f0 'pthread_mutexattr_t'
|     `-Record 0x5623d5747670 ''
|-RecordDecl 0x5623d5747940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x5623d57479e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x5623d5747ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5623d5747b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5623d5747b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5623d5747be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5623d5747c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5623d5747cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5623d5747d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5623d5747d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5623d5747e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_4/rfi008_power.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_4/rfi008_power.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x5623d5747f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5623d5747f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5623d5749130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5623d5748070 'union pthread_cond_t' sugar
|   `-RecordType 0x5623d57479c0 'pthread_cond_t'
|     `-Record 0x5623d5747940 ''
|-RecordDecl 0x5623d57491a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5623d57492a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5623d5749308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5623d57493c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5623d5749360 'union pthread_condattr_t' sugar
|   `-RecordType 0x5623d5749220 'pthread_condattr_t'
|     `-Record 0x5623d57491a0 ''
|-TypedefDecl 0x5623d5749448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5623d56ccfb0 'unsigned int'
|-TypedefDecl 0x5623d57494b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5623d56ccf10 'int'
|-RecordDecl 0x5623d5749510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5623d57495b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x5623d5749680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5623d57496e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5623d5749750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5623d57497b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5623d5749820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5623d5749888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5623d57498f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5623d5749958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5623d57499c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5623d5749a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5623d5749a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5623d5749b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_4/rfi008_power.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_4/rfi008_power.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x5623d5749be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5623d5749c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5623d5749da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5623d5749d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5623d5749590 'pthread_rwlock_t'
|     `-Record 0x5623d5749510 ''
|-RecordDecl 0x5623d5749e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x5623d5749f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5623d5749fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5623d574a070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5623d574a010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5623d5749e90 'pthread_rwlockattr_t'
|     `-Record 0x5623d5749e10 ''
|-TypedefDecl 0x5623d574b140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5623d56ccf14 'volatile int' volatile
|   `-BuiltinType 0x5623d56ccf10 'int'
|-RecordDecl 0x5623d574b198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x5623d574b2e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5623d574b348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5623d574b400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5623d574b3a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x5623d574b220 'pthread_barrier_t'
|     `-Record 0x5623d574b198 ''
|-RecordDecl 0x5623d574b470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x5623d574b570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5623d574b5d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5623d574b690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5623d574b630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5623d574b4f0 'pthread_barrierattr_t'
|     `-Record 0x5623d574b470 ''
|-TypedefDecl 0x5623d574b7a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5623d574b740 'long [8]' 8 
|   `-BuiltinType 0x5623d56ccf30 'long'
|-EnumDecl 0x5623d574b800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x5623d574b8c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5623d574b918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5623d574b968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x5623d574ba38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5623d574ba88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5623d574bad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5623d574bb28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5623d574bbb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5623d574bb98 <col:26> 'int'
| |   `-DeclRefExpr 0x5623d574bb78 <col:26> 'int' EnumConstant 0x5623d574ba38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5623d574bc38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5623d574bc20 <col:29> 'int'
| |   `-DeclRefExpr 0x5623d574bc00 <col:29> 'int' EnumConstant 0x5623d574ba88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5623d574bcc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5623d574bca8 <col:30> 'int'
| |   `-DeclRefExpr 0x5623d574bc88 <col:30> 'int' EnumConstant 0x5623d574bad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5623d574bd48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5623d574bd30 <col:27> 'int'
|     `-DeclRefExpr 0x5623d574bd10 <col:27> 'int' EnumConstant 0x5623d574bbb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5623d574bd98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x5623d574be68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5623d574bef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5623d574bed8 <col:30> 'int'
| |   `-DeclRefExpr 0x5623d574beb8 <col:30> 'int' EnumConstant 0x5623d574be68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5623d574bf40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5623d574bfc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5623d574bfb0 <col:29> 'int'
|     `-DeclRefExpr 0x5623d574bf90 <col:29> 'int' EnumConstant 0x5623d574bf40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5623d574c018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x5623d574c0e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5623d574c150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5623d574c1a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5623d574c1f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5623d574c2b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5623d574c308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5623d574c358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5623d574c3e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5623d574c3c8 <col:31> 'int'
|     `-DeclRefExpr 0x5623d574c3a8 <col:31> 'int' EnumConstant 0x5623d574c2b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5623d574c430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x5623d574c4f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5623d574c548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5623d574c598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x5623d574c668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5623d574c6b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5623d574c708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x5623d574c7d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5623d574c828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5623d574c878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5623d574cab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5623d574cb20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5623d574cb88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5623d574cca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5623d574ccf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x5623d574cdc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5623d574ce18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5623d574ce68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x5623d574cf38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5623d574cf88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5623d574d5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5623d574d080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5623d574d1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623d574d3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5623d574d420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5623d574d678 <col:47>
| |-NonNullAttr 0x5623d574d6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5623d574d708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x5623d574d830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5623d574d760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5623d574da88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5623d574d8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5623d574d968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5623d574dc58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5623d574db48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5623d574dd00 <col:60>
|-FunctionDecl 0x5623d574de50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5623d574def0 <col:54>
| `-ConstAttr 0x5623d574df48 <col:95>
|-FunctionDecl 0x5623d574f990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5623d574df80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5623d574dff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5623d574fa40 <line:395:19>
| `-ConstAttr 0x5623d574fa98 <col:60>
|-FunctionDecl 0x5623d574fc68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5623d574fb30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5623d574fd10 <col:71>
| `-NonNullAttr 0x5623d574fd68 <col:112, col:126> 1
|-FunctionDecl 0x5623d574fe70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5623d574fdb8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5623d574ff18 <line:398:22>
| `-NonNullAttr 0x5623d574ff70 <col:63, col:77> 1
|-FunctionDecl 0x5623d5750198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5623d574ffb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5623d5750038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5623d5750248 <line:401:22>
| `-NonNullAttr 0x5623d57502a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d57504a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5623d57502e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623d5750368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5623d5750558 <line:404:22>
| `-NonNullAttr 0x5623d57505b0 <col:63, col:77> 1
|-FunctionDecl 0x5623d5750808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5623d57505f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5623d57506a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5623d57508b8 <line:407:22>
| `-NonNullAttr 0x5623d5750910 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d5751b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5623d57519b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623d5751a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5623d5751c18 <line:410:22>
| `-NonNullAttr 0x5623d5751c70 <col:63, col:77> 1
|-FunctionDecl 0x5623d5751ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5623d5751cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623d5751d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5623d5751f58 <line:413:22>
| `-NonNullAttr 0x5623d5751fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d57521e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5623d5751ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623d5752088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5623d5752298 <col:37>
| `-NonNullAttr 0x5623d57522f0 <col:78, col:95> 1 2
|-FunctionDecl 0x5623d57524d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623d5752338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623d57523b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5623d5752588 <line:419:22>
| `-NonNullAttr 0x5623d57525e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d5752768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5623d5752628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623d57526a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5623d5752818 <line:421:22>
| `-NonNullAttr 0x5623d5752870 <col:63, col:77> 1
|-FunctionDecl 0x5623d5752a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623d57528b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623d5752938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5623d5752ae8 <line:424:22>
| `-NonNullAttr 0x5623d5752b40 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d5752cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5623d5752b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623d5752c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5623d5752d78 <line:427:22>
| `-NonNullAttr 0x5623d5752dd0 <col:63, col:77> 1
|-FunctionDecl 0x5623d5752f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623d5752e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623d5752e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5623d5753028 <line:430:22>
| `-NonNullAttr 0x5623d5753080 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d5753208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5623d57530c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623d5753148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5623d57532b8 <line:432:22>
| `-NonNullAttr 0x5623d5753310 <col:63, col:77> 1
|-FunctionDecl 0x5623d5753538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5623d5753358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623d57533d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5623d57535e8 <line:435:22>
| |-NonNullAttr 0x5623d5753640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5623d5753678 <col:100> "" ""
|-FunctionDecl 0x5623d5753888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5623d57536c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623d5753748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5623d5753938 <line:438:22>
| |-NonNullAttr 0x5623d5753990 <col:63, col:77> 1
| `-DeprecatedAttr 0x5623d57539d8 <col:97> "" ""
|-FunctionDecl 0x5623d5753bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5623d5753a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623d5753aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5623d5753c78 <line:441:22>
| `-NonNullAttr 0x5623d5753cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d5753e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5623d5753d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623d5753d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5623d5753f00 <line:444:22>
| `-NonNullAttr 0x5623d5753f58 <col:63, col:77> 1
|-FunctionDecl 0x5623d5754248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5623d5753fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5623d5754028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5623d57540a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5623d5754300 <line:448:22>
| `-NonNullAttr 0x5623d5754358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5623d5754608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5623d57543b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5623d5754430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5623d57544a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5623d57546c0 <col:43>
| `-NonNullAttr 0x5623d5754718 <col:84, col:98> 1
|-FunctionDecl 0x5623d5754a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5623d5754768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5623d57547e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5623d5754878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5623d5754ad8 <line:453:22>
| `-NonNullAttr 0x5623d5754b30 <col:63, col:77> 3
|-FunctionDecl 0x5623d5754e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5623d5754b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5623d5754bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5623d5754c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5623d5754ec0 <line:457:22>
| `-NonNullAttr 0x5623d5754f18 <col:63, col:80> 2 3
|-FunctionDecl 0x5623d5755108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5623d5754f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5623d5754fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5623d57551b8 <line:459:22>
|-FunctionDecl 0x5623d5755588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5623d5755280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5623d5755420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5623d5755638 <col:52, col:69> 1 2
|-FunctionDecl 0x5623d57557e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5623d57556c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5623d5755740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5623d57559f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5623d57558a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5623d5755928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5623d5755b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5623d5755ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5623d5755c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5623d5755d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x5623d5755dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x5623d5755ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5623d5755f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5623d5756100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_4/rfi008_power.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x5623d57561f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5623d57562b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5623d5756250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5623d5755db0 '__pthread_unwind_buf_t'
| |   `-Record 0x5623d5755d28 ''
| `-AlignedAttr 0x5623d5756308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5623d5756380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5623d57564e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5623d5756548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5623d57565b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5623d5756618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5623d5756820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5623d5756710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5623d5756a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5623d57568d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5623d5756bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5623d5756ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5623d5756c68 <line:488:22>
|-RecordDecl 0x5623d5756cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5623d5756fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5623d5756e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5623d5756eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5623d5757088 <col:86>
| `-ReturnsTwiceAttr 0x5623d57570e0 <col:12> Implicit
|-FunctionDecl 0x5623d5757408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5623d57571b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5623d57572c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5623d57574b8 <line:494:22>
| `-NonNullAttr 0x5623d5757510 <col:63, col:77> 1
|-FunctionDecl 0x5623d5757688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5623d5757558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5623d5757730 <line:496:22>
| `-NonNullAttr 0x5623d5757788 <col:63, col:77> 1
|-FunctionDecl 0x5623d5757890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5623d57577d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5623d5757938 <line:498:22>
| `-NonNullAttr 0x5623d5757990 <col:52, col:66> 1
|-FunctionDecl 0x5623d5758ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5623d5758a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5623d5758b80 <line:500:22>
| `-NonNullAttr 0x5623d5758bd8 <col:52, col:66> 1
|-FunctionDecl 0x5623d5758e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5623d5758c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5623d5758cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5623d5758ec8 <col:36>
| `-NonNullAttr 0x5623d5758f20 <col:66, col:83> 1 2
|-FunctionDecl 0x5623d5759020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5623d5758f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5623d57590c8 <line:505:22>
| `-NonNullAttr 0x5623d5759120 <col:52, col:66> 1
|-FunctionDecl 0x5623d57593b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623d57591d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5623d5759250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5623d5759468 <line:509:22>
| `-NonNullAttr 0x5623d57594c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d5759788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5623d5759508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5623d5759588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5623d5759608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5623d5759840 <line:513:22>
| `-NonNullAttr 0x5623d5759898 <col:63, col:80> 1 3
|-FunctionDecl 0x5623d5759a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5623d57598e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5623d5759ad8 <line:515:22>
| `-NonNullAttr 0x5623d5759b30 <col:63, col:77> 1
|-FunctionDecl 0x5623d5759d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5623d5759be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5623d5759dc0 <line:517:22>
| `-NonNullAttr 0x5623d5759e18 <col:63, col:77> 1
|-FunctionDecl 0x5623d5759f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5623d5759e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5623d5759fc8 <line:519:22>
| `-NonNullAttr 0x5623d575a020 <col:63, col:77> 1
|-FunctionDecl 0x5623d575a248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623d575a068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5623d575a0e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5623d575a2f8 <line:523:22>
| `-NonNullAttr 0x5623d575a350 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d575a558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5623d575a398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623d575a418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5623d575a608 <line:526:22>
| `-NonNullAttr 0x5623d575a660 <col:63, col:77> 1
|-FunctionDecl 0x5623d575a808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623d575a6a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5623d575a728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5623d575a8b8 <line:529:22>
| `-NonNullAttr 0x5623d575a910 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d575ab00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5623d575a958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623d575aa40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5623d575abb0 <line:531:22>
| `-NonNullAttr 0x5623d575ac08 <col:63, col:77> 1
|-FunctionDecl 0x5623d575adb8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623d575ac58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5623d575acd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5623d575ae68 <line:535:22>
| `-NonNullAttr 0x5623d575aec0 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d575b048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5623d575af08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623d575af88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5623d575b0f8 <line:538:22>
| `-NonNullAttr 0x5623d575b150 <col:63, col:77> 1
|-FunctionDecl 0x5623d575b2f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623d575b198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5623d575b218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5623d575b3a8 <line:542:22>
| `-NonNullAttr 0x5623d575b400 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d575b588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5623d575b448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623d575b4c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5623d575b638 <line:545:22>
| `-NonNullAttr 0x5623d575b690 <col:63, col:77> 1
|-FunctionDecl 0x5623d575b878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5623d575b6d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623d575b758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5623d575b928 <line:548:22>
| `-NonNullAttr 0x5623d575b980 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d575cb38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5623d575b9c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5623d575ca78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5623d575cbe8 <line:551:22>
| `-NonNullAttr 0x5623d575cc40 <col:63, col:77> 1
|-FunctionDecl 0x5623d575cf78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5623d575cd20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5623d575ce30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5623d575d028 <col:29>
| `-NonNullAttr 0x5623d575d080 <col:70, col:84> 1
|-FunctionDecl 0x5623d575d1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623d575d0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623d575d2a0 <line:556:22>
| `-NonNullAttr 0x5623d575d2f8 <col:63, col:77> 1
|-FunctionDecl 0x5623d575d400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623d575d348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623d575d4a8 <line:558:22>
| `-NonNullAttr 0x5623d575d500 <col:52, col:66> 1
|-FunctionDecl 0x5623d575d600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623d575d548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623d575d6a8 <line:560:19>
| `-NonNullAttr 0x5623d575d700 <col:49, col:63> 1
|-FunctionDecl 0x5623d575d938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5623d575d748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5623d575d7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5623d575d9e8 <col:39>
| `-NonNullAttr 0x5623d575da70 <col:69, col:86> 1 2
|-FunctionDecl 0x5623d575db70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623d575dab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623d575dc18 <line:565:22>
| `-NonNullAttr 0x5623d575dc70 <col:52, col:66> 1
|-FunctionDecl 0x5623d575dd70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623d575dcb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623d575de18 <line:567:22>
| `-NonNullAttr 0x5623d575de70 <col:52, col:66> 1
|-FunctionDecl 0x5623d575e028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5623d575deb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5623d575df48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5623d575e0d8 <col:39>
| `-NonNullAttr 0x5623d575e130 <col:69, col:86> 1 2
|-FunctionDecl 0x5623d575e230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5623d575e178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5623d575e2d8 <line:572:22>
| `-NonNullAttr 0x5623d575e330 <col:52, col:66> 1
|-FunctionDecl 0x5623d575e518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5623d575e3e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5623d575e5c0 <line:574:22>
| `-NonNullAttr 0x5623d575e618 <col:63, col:77> 1
|-FunctionDecl 0x5623d575e720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5623d575e668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5623d575e7c8 <line:576:22>
| `-NonNullAttr 0x5623d575e820 <col:63, col:77> 1
|-FunctionDecl 0x5623d575ea80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623d575e868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5623d575e8e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5623d575eb30 <line:580:22>
| `-NonNullAttr 0x5623d575eb88 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d575ed98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5623d575ebd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5623d575ec58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5623d575ee48 <line:583:22>
| `-NonNullAttr 0x5623d575eea0 <col:63, col:77> 1
|-FunctionDecl 0x5623d575f048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623d575eee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5623d575ef68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5623d575f0f8 <line:587:22>
| `-NonNullAttr 0x5623d575f150 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d575f2d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5623d575f198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5623d575f218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5623d575f388 <col:36>
| `-NonNullAttr 0x5623d575f3e0 <col:77, col:91> 1
|-FunctionDecl 0x5623d575f718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5623d575f4c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5623d575f5d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5623d575f7c8 <line:592:22>
| `-NonNullAttr 0x5623d575f820 <col:63, col:77> 1
|-FunctionDecl 0x5623d575f998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5623d575f868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5623d575fa40 <line:594:22>
| `-NonNullAttr 0x5623d575fac0 <col:63, col:77> 1
|-FunctionDecl 0x5623d575fbc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5623d575fb08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5623d575fc68 <line:596:22>
| `-NonNullAttr 0x5623d575fcc0 <col:52, col:66> 1
|-FunctionDecl 0x5623d575fdc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5623d575fd08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5623d575fe68 <line:598:22>
| `-NonNullAttr 0x5623d575fec0 <col:52, col:66> 1
|-FunctionDecl 0x5623d57600e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5623d575ff08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5623d575ff80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5623d5760198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5623d57604c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5623d5760218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5623d5760290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5623d5760320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5623d5760580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x5623d5760798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5623d5760660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5623d5760840 <line:607:22>
| `-NonNullAttr 0x5623d5760898 <col:63, col:77> 1
|-FunctionDecl 0x5623d57609a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5623d57608e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5623d5760a48 <line:609:22>
| `-NonNullAttr 0x5623d5760ad0 <col:63, col:77> 1
|-FunctionDecl 0x5623d5760cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623d5760b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5623d5760b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5623d5760da8 <line:613:22>
| `-NonNullAttr 0x5623d5760e00 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d5761008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5623d5760e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5623d5760ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5623d57610b8 <col:37>
| `-NonNullAttr 0x5623d5761110 <col:78, col:92> 1
|-FunctionDecl 0x5623d5761328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5623d5761158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5623d5761200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5623d57613d8 <line:619:22>
| `-NonNullAttr 0x5623d5761430 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d57615f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5623d5761478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5623d57614f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5623d57616a8 <line:622:22>
| `-NonNullAttr 0x5623d5761700 <col:63, col:77> 1
|-FunctionDecl 0x5623d57619a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5623d57617e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5623d5761860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5623d5761a58 <line:624:22>
| `-NonNullAttr 0x5623d5761ae0 <col:63, col:77> 1
|-FunctionDecl 0x5623d5761c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5623d5761b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5623d5761d00 <line:626:22>
| `-NonNullAttr 0x5623d5761d58 <col:63, col:77> 1
|-FunctionDecl 0x5623d5761e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5623d5761da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5623d5761f08 <line:628:22>
| `-NonNullAttr 0x5623d5761f60 <col:52, col:66> 1
|-FunctionDecl 0x5623d5762060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5623d5761fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5623d5762108 <line:630:22>
| `-NonNullAttr 0x5623d5762160 <col:52, col:66> 1
|-FunctionDecl 0x5623d5762260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5623d57621a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5623d5762308 <line:632:22>
| `-NonNullAttr 0x5623d5762360 <col:52, col:66> 1
|-FunctionDecl 0x5623d5762738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5623d5762440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5623d5762550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5623d57625d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5623d57627f0 <line:636:22>
| `-NonNullAttr 0x5623d5762848 <col:63, col:77> 1
|-FunctionDecl 0x5623d57629c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5623d5762898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5623d5762a70 <line:638:22>
| `-NonNullAttr 0x5623d5763b00 <col:63, col:77> 1
|-FunctionDecl 0x5623d5763c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5623d5763b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5623d5763ca8 <line:640:22>
| `-NonNullAttr 0x5623d5763d00 <col:52, col:66> 1
|-FunctionDecl 0x5623d5763ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5623d5763db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5623d5763f90 <line:642:22>
| `-NonNullAttr 0x5623d5763fe8 <col:63, col:77> 1
|-FunctionDecl 0x5623d57640f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5623d5764038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5623d5764198 <line:644:22>
| `-NonNullAttr 0x5623d57641f0 <col:63, col:77> 1
|-FunctionDecl 0x5623d5764418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5623d5764238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5623d57642b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5623d57644c8 <line:648:22>
| `-NonNullAttr 0x5623d5764520 <col:63, col:80> 1 2
|-FunctionDecl 0x5623d5764728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5623d5764568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5623d57645e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5623d57647d8 <line:651:22>
| `-NonNullAttr 0x5623d5764830 <col:63, col:77> 1
|-FunctionDecl 0x5623d5764b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5623d5764910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5623d5764a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5623d5764c48 <line:654:22>
| `-NonNullAttr 0x5623d5764ca0 <col:63, col:77> 1
|-FunctionDecl 0x5623d5764df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5623d5764ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5623d5764ea0 <col:69>
|-FunctionDecl 0x5623d5765018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5623d5764f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5623d57650c0 <col:72>
|-FunctionDecl 0x5623d57652f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5623d5765128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5623d57651d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5623d57653a8 <col:44>
|-FunctionDecl 0x5623d57655c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5623d5765410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5623d5765488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5623d5765678 <line:661:22>
| `-NonNullAttr 0x5623d57656d0 <col:63, col:77> 2
|-FunctionDecl 0x5623d5765b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5623d57657b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5623d57658c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5623d57659d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5623d5765be8 <col:47>
|-FunctionDecl 0x5623d5765cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5623d5765c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5623d5765e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5623d5765db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5623d5765f10 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5623d5765fd0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5623d5766090 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5623d5766148 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5623d57661c8 prev 0x5623d5766148 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5623d5766230 <col:24> 'int' 0
|-VarDecl 0x5623d5766268 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5623d57662e8 prev 0x5623d5766268 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5623d5766350 <col:27> 'int' 0
|-VarDecl 0x5623d5766388 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x5623d5766408 prev 0x5623d5766388 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x5623d5766470 <col:27> 'int' 0
|-VarDecl 0x5623d57664a8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5623d5766528 prev 0x5623d57664a8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5623d5766590 <col:27> 'int' 0
|-VarDecl 0x5623d57665c8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5623d5766648 prev 0x5623d57665c8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5623d57666b0 <col:27> 'int' 0
|-VarDecl 0x5623d57666e0 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5623d5766758 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5623d57667d8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x5623d5766858 prev 0x5623d57667d8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5623d57668c0 <col:9> 'int' 0
|-VarDecl 0x5623d57668f8 <line:685:1, col:5> col:5 used y 'int'
|-VarDecl 0x5623d5766978 prev 0x5623d57668f8 <line:686:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5623d57669e0 <col:9> 'int' 0
|-VarDecl 0x5623d5766a10 <line:687:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x5623d5766b00 <line:688:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x5623d5766b78 <line:689:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x5623d5766bf0 <line:690:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x5623d5766c68 <line:691:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x5623d5766ce0 <line:692:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x5623d5766d58 <line:693:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x5623d5766dd0 <line:694:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x5623d5766e48 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x5623d5766ec8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x5623d5766f48 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x5623d5766fc0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x5623d5767040 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x5623d57670b8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x5623d5767130 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5623d57671a8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5623d57672c0 prev 0x5623d5765cf0 <line:703:1, line:733:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5623d5767228 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5623d576a358 <line:704:1, line:733:1>
|   |-CallExpr 0x5623d57673d8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623d57673c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d5767368 <col:3> 'void ()' Function 0x5623d570cfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623d5767438 <line:706:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5623d57673f8 <col:3> 'int' lvalue Var 0x5623d5766858 'x' 'int'
|   | `-IntegerLiteral 0x5623d5767418 <col:7> 'int' 1
|   |-CallExpr 0x5623d5767490 <line:707:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623d5767478 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d5767458 <col:3> 'void ()' Function 0x5623d570d060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623d57674e8 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623d57674d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d57674b0 <col:3> 'void ()' Function 0x5623d570cfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623d5767560 <line:709:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5623d5767508 <col:3> 'int' lvalue Var 0x5623d57662e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5623d5767548 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623d5767528 <col:25> 'int' lvalue Var 0x5623d5766858 'x' 'int'
|   |-CallExpr 0x5623d57675b8 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623d57675a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d5767580 <col:3> 'void ()' Function 0x5623d570d060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623d5767610 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623d57675f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d57675d8 <col:3> 'void ()' Function 0x5623d570cfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623d57676d8 <line:712:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5623d5767630 <col:3> '_Bool' lvalue Var 0x5623d5767130 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5623d57676b8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5623d57676a0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5623d5767650 <col:19> '_Bool (void)' Function 0x5623d570c770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5623d5767770 <line:713:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5623d57676f8 <col:3> '_Bool' lvalue Var 0x5623d57671a8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5623d5767750 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5623d5767738 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5623d5767718 <col:19> '_Bool (void)' Function 0x5623d570c770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5623d57677e8 <line:714:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5623d5767790 <col:3> '_Bool' lvalue Var 0x5623d5766a10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5623d57677d0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623d57677b0 <col:21> '_Bool' lvalue Var 0x5623d57671a8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5623d5767860 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5623d5767808 <col:3> 'int' lvalue Var 0x5623d5766b00 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5623d5767848 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623d5767828 <col:15> 'int' lvalue Var 0x5623d5766978 'y' 'int'
|   |-BinaryOperator 0x5623d5767cb8 <line:716:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5623d5767880 <col:3> 'int' lvalue Var 0x5623d5766978 'y' 'int'
|   | `-ConditionalOperator 0x5623d5767c88 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5623d5767a90 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5623d57679b0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5623d57678d8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5623d57678c0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5623d57678a0 <col:8> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5623d5767990 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5623d5767928 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5623d5767910 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5623d57678f0 <col:27> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x5623d5767978 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5623d5767960 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5623d5767940 <col:46> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5623d5767a70 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5623d5767a08 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5623d57679f0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5623d57679d0 <col:65> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x5623d5767a58 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5623d5767a40 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5623d5767a20 <col:84> '_Bool' lvalue Var 0x5623d5766d58 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5623d5767c70 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623d5767ab0 <col:101> 'int' lvalue Var 0x5623d5766978 'y' 'int'
|   |   `-ParenExpr 0x5623d5767c50 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5623d5767c20 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5623d5767b90 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5623d5767b48 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5623d5767b30 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5623d5767ad0 <col:106> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5623d5767b78 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5623d5767b60 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5623d5767b10 <col:124> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5623d5767bf0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623d5767bb0 <col:141> 'int' lvalue Var 0x5623d5766f48 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5623d5767c08 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623d5767bd0 <col:153> 'int' lvalue Var 0x5623d5767040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5623d57681c8 <line:717:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5623d5767cd8 <col:3> 'int' lvalue Var 0x5623d5766f48 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5623d5768198 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5623d5768168 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5623d5768150 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5623d5767cf8 <col:15> '_Bool' lvalue Var 0x5623d57671a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5623d5768180 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623d5767d18 <col:31> 'int' lvalue Var 0x5623d5766f48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5623d5768130 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5623d5768100 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5623d5767f28 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5623d5767e48 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5623d5767d70 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5623d5767d58 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5623d5767d38 <col:45> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5623d5767e28 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5623d5767dc0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5623d5767da8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5623d5767d88 <col:64> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5623d5767e10 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5623d5767df8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5623d5767dd8 <col:83> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5623d5767f08 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5623d5767ea0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5623d5767e88 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5623d5767e68 <col:102> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5623d5767ef0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5623d5767ed8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5623d5767eb8 <col:121> '_Bool' lvalue Var 0x5623d5766d58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5623d57680e8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623d5767f48 <col:138> 'int' lvalue Var 0x5623d5766f48 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5623d57680c8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5623d5768098 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5623d5768008 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5623d5767fc0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5623d5767fa8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5623d5767f68 <col:151> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5623d5767ff0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5623d5767fd8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5623d5767f88 <col:169> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5623d5768068 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5623d5768028 <col:186> 'int' lvalue Var 0x5623d5766f48 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5623d5768080 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5623d5768048 <col:198> 'int' lvalue Var 0x5623d5766f48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5623d57686d8 <line:718:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5623d57681e8 <col:3> 'int' lvalue Var 0x5623d5767040 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5623d57686a8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5623d5768678 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5623d5768660 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5623d5768208 <col:15> '_Bool' lvalue Var 0x5623d57671a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5623d5768690 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623d5768228 <col:31> 'int' lvalue Var 0x5623d5767040 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5623d5768640 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5623d5768610 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5623d5768438 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5623d5768358 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5623d5768280 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5623d5768268 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5623d5768248 <col:45> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5623d5768338 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5623d57682d0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5623d57682b8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5623d5768298 <col:64> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5623d5768320 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5623d5768308 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5623d57682e8 <col:83> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5623d5768418 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5623d57683b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5623d5768398 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5623d5768378 <col:102> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5623d5768400 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5623d57683e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5623d57683c8 <col:121> '_Bool' lvalue Var 0x5623d5766d58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5623d57685f8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623d5768458 <col:138> 'int' lvalue Var 0x5623d5767040 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5623d57685d8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5623d57685a8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5623d5768518 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5623d57684d0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5623d57684b8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5623d5768478 <col:151> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5623d5768500 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5623d57684e8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5623d5768498 <col:169> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5623d5768578 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5623d5768538 <col:186> 'int' lvalue Var 0x5623d5767040 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5623d5768590 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5623d5768558 <col:198> 'int' lvalue Var 0x5623d5767040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5623d5768c98 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5623d57686f8 <col:3> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623d5768c80 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623d5768c50 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5623d5768c08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623d5768bf0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623d5768718 <col:20> '_Bool' lvalue Var 0x5623d57671a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623d5768c38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623d5768c20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623d5768738 <col:36> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5623d5768bd0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5623d5768ba0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5623d5768948 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623d5768868 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623d5768790 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623d5768778 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623d5768758 <col:55> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623d5768848 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623d57687e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623d57687c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623d57687a8 <col:74> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5623d5768830 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623d5768818 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623d57687f8 <col:93> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623d5768928 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623d57688c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623d57688a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623d5768888 <col:112> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5623d5768910 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623d57688f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623d57688d8 <col:131> '_Bool' lvalue Var 0x5623d5766d58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5623d5768b88 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623d5768b70 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623d5768968 <col:148> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5623d5768b50 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5623d5768b20 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5623d5768a28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623d57689e0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623d57689c8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623d5768988 <col:166> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623d5768a10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623d57689f8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623d57689a8 <col:184> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5623d5768ac0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623d5768a78 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623d5768a48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623d5768af0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5623d5768ad8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5623d5768aa0 <col:212> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5623d5769260 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5623d5768cb8 <col:3> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623d5769248 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623d5769218 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5623d57691d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623d57691b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623d5768cd8 <col:20> '_Bool' lvalue Var 0x5623d57671a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623d5769200 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623d57691e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623d5768cf8 <col:36> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5623d5769198 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5623d5769168 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5623d5768f08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623d5768e28 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623d5768d50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623d5768d38 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623d5768d18 <col:55> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623d5768e08 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623d5768da0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623d5768d88 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623d5768d68 <col:74> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5623d5768df0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623d5768dd8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623d5768db8 <col:93> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623d5768ee8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623d5768e80 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623d5768e68 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623d5768e48 <col:112> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5623d5768ed0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623d5768eb8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623d5768e98 <col:131> '_Bool' lvalue Var 0x5623d5766d58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5623d5769150 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623d5769138 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623d5768f28 <col:148> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5623d5769118 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5623d57690e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5623d5768fe8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623d5768fa0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623d5768f88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623d5768f48 <col:166> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623d5768fd0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623d5768fb8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623d5768f68 <col:184> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5623d57690b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623d5769038 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623d5769008 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623d57690d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5623d5769090 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5623d5769060 <col:219> 'int' 0
|   |-BinaryOperator 0x5623d5769808 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5623d5769280 <col:3> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5623d57697f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623d57697c0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5623d5769778 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623d5769760 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623d57692a0 <col:20> '_Bool' lvalue Var 0x5623d57671a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623d57697a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623d5769790 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623d57692c0 <col:36> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x5623d5769740 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5623d5769710 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5623d57694d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623d57693f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623d5769318 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623d5769300 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623d57692e0 <col:55> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623d57693d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623d5769368 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623d5769350 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623d5769330 <col:74> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5623d57693b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623d57693a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623d5769380 <col:93> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623d57694b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623d5769448 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623d5769430 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623d5769410 <col:112> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5623d5769498 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623d5769480 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623d5769460 <col:131> '_Bool' lvalue Var 0x5623d5766d58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5623d57696f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623d57696e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623d57694f0 <col:148> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x5623d57696c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5623d5769690 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5623d57695b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623d5769568 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623d5769550 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623d5769510 <col:166> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623d5769598 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623d5769580 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623d5769530 <col:184> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5623d5769648 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623d5769600 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623d57695d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623d5769678 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5623d5769660 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5623d5769628 <col:212> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5623d5769df0 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5623d5769828 <col:3> '_Bool' lvalue Var 0x5623d5766d58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5623d5769dd8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623d5769da8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5623d5769d60 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623d5769d48 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623d5769848 <col:20> '_Bool' lvalue Var 0x5623d57671a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623d5769d90 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623d5769d78 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623d5769868 <col:36> '_Bool' lvalue Var 0x5623d5766d58 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x5623d5769d28 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5623d5769cf8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5623d5769a78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623d5769998 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623d57698c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623d57698a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623d5769888 <col:55> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623d5769978 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623d5769910 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623d57698f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623d57698d8 <col:74> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5623d5769960 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623d5769948 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623d5769928 <col:93> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623d5769a58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623d57699f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623d57699d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623d57699b8 <col:112> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5623d5769a40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623d5769a28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623d5769a08 <col:131> '_Bool' lvalue Var 0x5623d5766d58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5623d5769ce0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623d5769cc8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623d5769a98 <col:148> '_Bool' lvalue Var 0x5623d5766d58 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x5623d5769ca8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5623d5769c78 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5623d5769b78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623d5769b30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623d5769af8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623d5769ab8 <col:166> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623d5769b60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623d5769b48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623d5769ad8 <col:184> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5623d5769c48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623d5769bc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623d5769b98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623d5769c60 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5623d5769c20 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5623d5769bf0 <col:219> 'int' 0
|   |-BinaryOperator 0x5623d5769e68 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5623d5769e10 <col:3> 'int' lvalue Var 0x5623d5766408 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x5623d5769e50 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623d5769e30 <col:25> 'int' lvalue Var 0x5623d5766978 'y' 'int'
|   |-BinaryOperator 0x5623d5769f98 <line:724:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5623d5769e88 <col:3> 'int' lvalue Var 0x5623d5766978 'y' 'int'
|   | `-ConditionalOperator 0x5623d5769f68 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5623d5769f20 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5623d5769f08 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5623d5769ea8 <col:7> '_Bool' lvalue Var 0x5623d5766a10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5623d5769f38 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623d5769ec8 <col:25> 'int' lvalue Var 0x5623d5766b00 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5623d5769f50 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5623d5769ee8 <col:37> 'int' lvalue Var 0x5623d5766978 'y' 'int'
|   |-BinaryOperator 0x5623d576a030 <line:725:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5623d5769fb8 <col:3> '_Bool' lvalue Var 0x5623d5766a10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5623d576a008 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5623d5769fd8 <col:28> 'int' 0
|   |-CallExpr 0x5623d576a088 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623d576a070 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d576a050 <col:3> 'void ()' Function 0x5623d570d060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623d576a0e0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623d576a0c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d576a0a8 <col:3> 'void ()' Function 0x5623d570cfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5623d576a138 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623d576a120 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d576a100 <col:3> 'void ()' Function 0x5623d570d060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623d576a190 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623d576a178 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d576a158 <col:3> 'void ()' Function 0x5623d570cfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623d576a248 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5623d576a1b0 <col:3> 'int' lvalue Var 0x5623d57661c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5623d576a228 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5623d576a210 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623d576a1d0 <col:22> 'int' lvalue Var 0x5623d57661c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5623d576a1f0 <col:41> 'int' 1
|   |-CallExpr 0x5623d576a2a0 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623d576a288 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d576a268 <col:3> 'void ()' Function 0x5623d570d060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5623d576a348 <line:732:3, col:36>
|     `-CallExpr 0x5623d576a328 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5623d576a310 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5623d576a2c0 <col:10> 'void *(void)' Function 0x5623d570cab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5623d576a4f8 prev 0x5623d5765e48 <line:734:1, line:777:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5623d576a460 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5623d576e6e8 <line:735:1, line:777:1>
|   |-CallExpr 0x5623d576a5d8 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623d576a5c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d576a5a0 <col:3> 'void ()' Function 0x5623d570cfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623d576a650 <line:737:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5623d576a5f8 <col:3> 'int' lvalue Var 0x5623d5767040 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5623d576a638 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623d576a618 <col:15> 'int' lvalue Var 0x5623d5766f48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5623d576a6b0 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5623d576a670 <col:3> 'int' lvalue Var 0x5623d5766f48 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x5623d576a690 <col:15> 'int' 1
|   |-BinaryOperator 0x5623d576a728 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576a6d0 <col:3> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623d576a710 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623d576a6f0 <col:20> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5623d576a7c0 <line:740:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576a748 <col:3> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5623d576a798 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5623d576a768 <col:27> 'int' 1
|   |-CallExpr 0x5623d576a948 <line:741:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5623d576a930 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5623d576a7e0 <col:3> 'void (int)' Function 0x5623d570cd28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5623d576a8e0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5623d576a8c0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5623d576a8a0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5623d576a858 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5623d576a840 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5623d576a800 <col:23> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5623d576a888 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5623d576a870 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5623d576a820 <col:41> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5623d576a9c8 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576a970 <col:3> '_Bool' lvalue Var 0x5623d5766ce0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5623d576a9b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623d576a990 <col:20> '_Bool' lvalue Var 0x5623d5766b78 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5623d576aa40 <line:743:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576a9e8 <col:3> '_Bool' lvalue Var 0x5623d5766d58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5623d576aa28 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623d576aa08 <col:20> '_Bool' lvalue Var 0x5623d5766bf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5623d576aab8 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576aa60 <col:3> '_Bool' lvalue Var 0x5623d5766dd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5623d576aaa0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623d576aa80 <col:20> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5623d576ab68 <line:745:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576aad8 <col:3> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x5623d576ab40 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5623d576aaf8 <col:27> 'int' 1
|   |-CallExpr 0x5623d576abc0 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623d576aba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d576ab88 <col:3> 'void ()' Function 0x5623d570d060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623d576ac18 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623d576ac00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d576abe0 <col:3> 'void ()' Function 0x5623d570cfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623d576acb0 <line:748:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576ac38 <col:3> '_Bool' lvalue Var 0x5623d5767130 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5623d576ac90 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5623d576ac78 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5623d576ac58 <col:19> '_Bool (void)' Function 0x5623d570c770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5623d576ad48 <line:749:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576acd0 <col:3> '_Bool' lvalue Var 0x5623d57671a8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5623d576ad28 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5623d576ad10 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5623d576acf0 <col:19> '_Bool (void)' Function 0x5623d570c770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5623d576adc0 <line:750:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576ad68 <col:3> '_Bool' lvalue Var 0x5623d5766a10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5623d576ada8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623d576ad88 <col:21> '_Bool' lvalue Var 0x5623d57671a8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5623d576ae38 <line:751:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5623d576ade0 <col:3> 'int' lvalue Var 0x5623d5766b00 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5623d576ae20 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623d576ae00 <col:15> 'int' lvalue Var 0x5623d5766978 'y' 'int'
|   |-BinaryOperator 0x5623d576b270 <line:752:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5623d576ae58 <col:3> 'int' lvalue Var 0x5623d5766978 'y' 'int'
|   | `-ConditionalOperator 0x5623d576b240 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5623d576b068 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5623d576af88 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5623d576aeb0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5623d576ae98 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5623d576ae78 <col:8> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5623d576af68 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5623d576af00 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5623d576aee8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5623d576aec8 <col:27> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x5623d576af50 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5623d576af38 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5623d576af18 <col:46> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5623d576b048 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5623d576afe0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5623d576afc8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5623d576afa8 <col:65> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5623d576b030 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5623d576b018 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5623d576aff8 <col:84> '_Bool' lvalue Var 0x5623d5766dd0 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5623d576b228 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623d576b088 <col:101> 'int' lvalue Var 0x5623d5766978 'y' 'int'
|   |   `-ParenExpr 0x5623d576b208 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5623d576b1d8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5623d576b148 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5623d576b100 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5623d576b0e8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5623d576b0a8 <col:106> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5623d576b130 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5623d576b118 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5623d576b0c8 <col:124> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5623d576b1a8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623d576b168 <col:141> 'int' lvalue Var 0x5623d5766f48 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5623d576b1c0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623d576b188 <col:153> 'int' lvalue Var 0x5623d5767040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5623d576b780 <line:753:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5623d576b290 <col:3> 'int' lvalue Var 0x5623d5766f48 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5623d576b750 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5623d576b720 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5623d576b708 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5623d576b2b0 <col:15> '_Bool' lvalue Var 0x5623d57671a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5623d576b738 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623d576b2d0 <col:31> 'int' lvalue Var 0x5623d5766f48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5623d576b6e8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5623d576b6b8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5623d576b4e0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5623d576b400 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5623d576b328 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5623d576b310 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5623d576b2f0 <col:45> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5623d576b3e0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5623d576b378 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5623d576b360 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5623d576b340 <col:64> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5623d576b3c8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5623d576b3b0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5623d576b390 <col:83> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5623d576b4c0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5623d576b458 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5623d576b440 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5623d576b420 <col:102> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5623d576b4a8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5623d576b490 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5623d576b470 <col:121> '_Bool' lvalue Var 0x5623d5766dd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5623d576b6a0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623d576b500 <col:138> 'int' lvalue Var 0x5623d5766f48 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5623d576b680 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5623d576b650 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5623d576b5c0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5623d576b578 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5623d576b560 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5623d576b520 <col:151> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5623d576b5a8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5623d576b590 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5623d576b540 <col:169> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5623d576b620 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5623d576b5e0 <col:186> 'int' lvalue Var 0x5623d5766f48 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5623d576b638 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5623d576b600 <col:198> 'int' lvalue Var 0x5623d5766f48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5623d576bcb0 <line:754:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5623d576b7a0 <col:3> 'int' lvalue Var 0x5623d5767040 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5623d576bc80 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5623d576bc50 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5623d576bc38 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5623d576b7c0 <col:15> '_Bool' lvalue Var 0x5623d57671a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5623d576bc68 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623d576b7e0 <col:31> 'int' lvalue Var 0x5623d5767040 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5623d576bc18 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5623d576bbe8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5623d576b9f0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5623d576b910 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5623d576b838 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5623d576b820 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5623d576b800 <col:45> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5623d576b8f0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5623d576b888 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5623d576b870 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5623d576b850 <col:64> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5623d576b8d8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5623d576b8c0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5623d576b8a0 <col:83> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5623d576b9d0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5623d576b968 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5623d576b950 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5623d576b930 <col:102> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5623d576b9b8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5623d576b9a0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5623d576b980 <col:121> '_Bool' lvalue Var 0x5623d5766dd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5623d576bbd0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623d576ba10 <col:138> 'int' lvalue Var 0x5623d5767040 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5623d576bbb0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5623d576bb80 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5623d576bad0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5623d576ba88 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5623d576ba70 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5623d576ba30 <col:151> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5623d576bab8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5623d576baa0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5623d576ba50 <col:169> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5623d576bb50 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5623d576baf0 <col:186> 'int' lvalue Var 0x5623d5767040 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5623d576bb68 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5623d576bb10 <col:198> 'int' lvalue Var 0x5623d5767040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5623d576c258 <line:755:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576bcd0 <col:3> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623d576c240 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623d576c210 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5623d576c1c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623d576c1b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623d576bcf0 <col:20> '_Bool' lvalue Var 0x5623d57671a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623d576c1f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623d576c1e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623d576bd10 <col:36> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5623d576c190 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5623d576c160 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5623d576bf20 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623d576be40 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623d576bd68 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623d576bd50 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623d576bd30 <col:55> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623d576be20 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623d576bdb8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623d576bda0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623d576bd80 <col:74> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5623d576be08 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623d576bdf0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623d576bdd0 <col:93> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623d576bf00 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623d576be98 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623d576be80 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623d576be60 <col:112> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5623d576bee8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623d576bed0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623d576beb0 <col:131> '_Bool' lvalue Var 0x5623d5766dd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5623d576c148 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623d576c130 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623d576bf40 <col:148> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5623d576c110 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5623d576c0e0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5623d576c000 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623d576bfb8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623d576bfa0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623d576bf60 <col:166> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623d576bfe8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623d576bfd0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623d576bf80 <col:184> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5623d576c098 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623d576c050 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623d576c020 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623d576c0c8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5623d576c0b0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5623d576c078 <col:212> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5623d576c820 <line:756:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576c278 <col:3> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623d576c808 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623d576c7d8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5623d576c790 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623d576c778 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623d576c298 <col:20> '_Bool' lvalue Var 0x5623d57671a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623d576c7c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623d576c7a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623d576c2b8 <col:36> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5623d576c758 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5623d576c728 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5623d576c4c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623d576c3e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623d576c310 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623d576c2f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623d576c2d8 <col:55> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623d576c3c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623d576c360 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623d576c348 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623d576c328 <col:74> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5623d576c3b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623d576c398 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623d576c378 <col:93> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623d576c4a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623d576c440 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623d576c428 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623d576c408 <col:112> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5623d576c490 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623d576c478 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623d576c458 <col:131> '_Bool' lvalue Var 0x5623d5766dd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5623d576c710 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623d576c6f8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623d576c4e8 <col:148> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5623d576c6d8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5623d576c6a8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5623d576c5a8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623d576c560 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623d576c548 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623d576c508 <col:166> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623d576c590 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623d576c578 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623d576c528 <col:184> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5623d576c678 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623d576c5f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623d576c5c8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623d576c690 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5623d576c650 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5623d576c620 <col:219> 'int' 0
|   |-BinaryOperator 0x5623d576cde8 <line:757:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576c840 <col:3> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5623d576cdd0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623d576cda0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5623d576cd58 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623d576cd40 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623d576c860 <col:20> '_Bool' lvalue Var 0x5623d57671a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623d576cd88 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623d576cd70 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623d576c880 <col:36> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5623d576cd20 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5623d576ccf0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5623d576ca90 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623d576c9b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623d576c8d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623d576c8c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623d576c8a0 <col:55> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623d576c990 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623d576c928 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623d576c910 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623d576c8f0 <col:74> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5623d576c978 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623d576c960 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623d576c940 <col:93> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623d576ca70 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623d576ca08 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623d576c9f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623d576c9d0 <col:112> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5623d576ca58 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623d576ca40 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623d576ca20 <col:131> '_Bool' lvalue Var 0x5623d5766dd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5623d576ccd8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623d576ccc0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623d576cab0 <col:148> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x5623d576cca0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5623d576cc70 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5623d576cb90 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623d576cb28 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623d576cb10 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623d576cad0 <col:166> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623d576cb78 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623d576cb60 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623d576caf0 <col:184> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5623d576cc28 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623d576cbe0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623d576cbb0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623d576cc58 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5623d576cc40 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5623d576cc08 <col:212> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5623d576d3b0 <line:758:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576ce08 <col:3> '_Bool' lvalue Var 0x5623d5766dd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5623d576d398 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623d576d368 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5623d576d320 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623d576d308 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623d576ce28 <col:20> '_Bool' lvalue Var 0x5623d57671a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623d576d350 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5623d576d338 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5623d576ce48 <col:36> '_Bool' lvalue Var 0x5623d5766dd0 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5623d576d2e8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5623d576d2b8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5623d576d058 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5623d576cf78 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5623d576cea0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5623d576ce88 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5623d576ce68 <col:55> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5623d576cf58 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5623d576cef0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5623d576ced8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5623d576ceb8 <col:74> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5623d576cf40 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5623d576cf28 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5623d576cf08 <col:93> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5623d576d038 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5623d576cfd0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5623d576cfb8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5623d576cf98 <col:112> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5623d576d020 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5623d576d008 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5623d576cfe8 <col:131> '_Bool' lvalue Var 0x5623d5766dd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5623d576d2a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5623d576d288 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5623d576d078 <col:148> '_Bool' lvalue Var 0x5623d5766dd0 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5623d576d268 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5623d576d238 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5623d576d138 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5623d576d0f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5623d576d0d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5623d576d098 <col:166> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5623d576d120 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5623d576d108 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5623d576d0b8 <col:184> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5623d576d208 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5623d576d188 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5623d576d158 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5623d576d220 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5623d576d1e0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5623d576d1b0 <col:219> 'int' 0
|   |-BinaryOperator 0x5623d576d428 <line:759:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5623d576d3d0 <col:3> 'int' lvalue Var 0x5623d5766528 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5623d576d410 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623d576d3f0 <col:25> 'int' lvalue Var 0x5623d5766978 'y' 'int'
|   |-BinaryOperator 0x5623d576d558 <line:760:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5623d576d448 <col:3> 'int' lvalue Var 0x5623d5766978 'y' 'int'
|   | `-ConditionalOperator 0x5623d576d528 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5623d576d4e0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5623d576d4c8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5623d576d468 <col:7> '_Bool' lvalue Var 0x5623d5766a10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5623d576d4f8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623d576d488 <col:25> 'int' lvalue Var 0x5623d5766b00 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5623d576d510 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5623d576d4a8 <col:37> 'int' lvalue Var 0x5623d5766978 'y' 'int'
|   |-BinaryOperator 0x5623d576d5f0 <line:761:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576d578 <col:3> '_Bool' lvalue Var 0x5623d5766a10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5623d576d5c8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5623d576d598 <col:28> 'int' 0
|   |-CallExpr 0x5623d576d648 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623d576d630 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d576d610 <col:3> 'void ()' Function 0x5623d570d060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623d576d6a0 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623d576d688 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d576d668 <col:3> 'void ()' Function 0x5623d570cfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623d576d718 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5623d576d6c0 <col:3> 'int' lvalue Var 0x5623d5766648 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5623d576d700 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5623d576d6e0 <col:25> 'int' lvalue Var 0x5623d5766858 'x' 'int'
|   |-CallExpr 0x5623d576d770 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623d576d758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d576d738 <col:3> 'void ()' Function 0x5623d570d060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623d576d7c8 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623d576d7b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d576d790 <col:3> 'void ()' Function 0x5623d570cfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623d576dab0 <line:767:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5623d576d7e8 <col:3> 'int' lvalue Var 0x5623d5766978 'y' 'int'
|   | `-ConditionalOperator 0x5623d576da80 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5623d576d8a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5623d576d860 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5623d576d848 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5623d576d808 <col:7> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5623d576d890 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5623d576d878 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5623d576d828 <col:25> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5623d576da68 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623d576d8c8 <col:42> 'int' lvalue Var 0x5623d5766f48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5623d576da48 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5623d576da18 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5623d576d988 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5623d576d940 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5623d576d928 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5623d576d8e8 <col:55> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5623d576d970 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5623d576d958 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5623d576d908 <col:73> '_Bool' lvalue Var 0x5623d5766dd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5623d576d9e8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5623d576d9a8 <col:90> 'int' lvalue Var 0x5623d5767040 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5623d576da00 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623d576d9c8 <col:102> 'int' lvalue Var 0x5623d5766978 'y' 'int'
|   |-BinaryOperator 0x5623d576dcc8 <line:768:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576dad0 <col:3> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623d576dcb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623d576dc80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5623d576dba0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5623d576db48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5623d576db30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5623d576daf0 <col:20> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5623d576db88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5623d576db70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5623d576db10 <col:38> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623d576dc38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5623d576dbf0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5623d576dbc0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5623d576dc68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5623d576dc50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623d576dc18 <col:66> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5623d576dfb0 <line:769:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576dce8 <col:3> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5623d576df98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623d576df68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5623d576de88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5623d576dda8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5623d576dd60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5623d576dd48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5623d576dd08 <col:20> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5623d576dd90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5623d576dd78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5623d576dd28 <col:38> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5623d576de68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5623d576de20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5623d576de08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5623d576ddc8 <col:56> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5623d576de50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5623d576de38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5623d576dde8 <col:74> '_Bool' lvalue Var 0x5623d5766dd0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623d576df20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5623d576ded8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5623d576dea8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5623d576df50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5623d576df38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623d576df00 <col:102> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5623d576e1b8 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576dfd0 <col:3> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5623d576e1a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623d576e170 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5623d576e090 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5623d576e048 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5623d576e030 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5623d576dff0 <col:20> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5623d576e078 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5623d576e060 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5623d576e010 <col:38> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623d576e128 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5623d576e0e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5623d576e0b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5623d576e158 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5623d576e140 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623d576e108 <col:66> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5623d576e4a0 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5623d576e1d8 <col:3> '_Bool' lvalue Var 0x5623d5766dd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5623d576e488 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5623d576e458 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5623d576e378 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5623d576e298 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5623d576e250 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5623d576e238 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5623d576e1f8 <col:20> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5623d576e280 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5623d576e268 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5623d576e218 <col:38> '_Bool' lvalue Var 0x5623d5766c68 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5623d576e358 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5623d576e310 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5623d576e2f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5623d576e2b8 <col:56> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5623d576e340 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5623d576e328 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5623d576e2d8 <col:74> '_Bool' lvalue Var 0x5623d5766dd0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5623d576e410 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5623d576e3c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5623d576e398 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5623d576e440 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5623d576e428 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5623d576e3f0 <col:102> '_Bool' lvalue Var 0x5623d5766dd0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5623d576e4f8 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623d576e4e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d576e4c0 <col:3> 'void ()' Function 0x5623d570d060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5623d576e550 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5623d576e538 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d576e518 <col:3> 'void ()' Function 0x5623d570cfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5623d576e608 <line:774:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5623d576e570 <col:3> 'int' lvalue Var 0x5623d57661c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5623d576e5e8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5623d576e5d0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5623d576e590 <col:22> 'int' lvalue Var 0x5623d57661c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5623d576e5b0 <col:41> 'int' 1
|   |-CallExpr 0x5623d576e660 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5623d576e648 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5623d576e628 <col:3> 'void ()' Function 0x5623d570d060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5623d576e6d8 <line:776:3, col:36>
|     `-CallExpr 0x5623d576e6b8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5623d576e6a0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5623d576e680 <col:10> 'void *(void)' Function 0x5623d570cab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5623d576e860 prev 0x5623d5765f10 <line:778:1, line:780:1> line:778:6 fence 'void ()'
| `-CompoundStmt 0x5623d576e900 <line:779:1, line:780:1>
|-FunctionDecl 0x5623d576e930 prev 0x5623d5765fd0 <line:781:1, line:783:1> line:781:6 isync 'void ()'
| `-CompoundStmt 0x5623d576e9d0 <line:782:1, line:783:1>
|-FunctionDecl 0x5623d576ea00 prev 0x5623d5766090 <line:784:1, line:786:1> line:784:6 lwfence 'void ()'
| `-CompoundStmt 0x5623d576eaa0 <line:785:1, line:786:1>
`-FunctionDecl 0x5623d576eb80 <line:787:1, line:809:1> line:787:5 main 'int ()'
  `-CompoundStmt 0x5623d57705d0 <line:788:1, line:809:1>
    |-DeclStmt 0x5623d576ec98 <line:789:3, col:18>
    | `-VarDecl 0x5623d576ec30 <col:3, col:13> col:13 used t1725 'pthread_t':'unsigned long'
    |-CallExpr 0x5623d576eea8 <line:790:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5623d576ee90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623d576ecb0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5623d574d5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5623d576ecf0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5623d576ecd0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5623d576ec30 't1725' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5623d576eee8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5623d576ed68 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5623d576ed40 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5623d576ed08 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5623d576ef00 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623d576ed88 <col:39> 'void *(void *)' Function 0x5623d57672c0 'P0' 'void *(void *)'
    | `-ParenExpr 0x5623d576ee08 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5623d576ede0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5623d576eda8 <col:52> 'int' 0
    |-DeclStmt 0x5623d576ef90 <line:791:3, col:18>
    | `-VarDecl 0x5623d576ef28 <col:3, col:13> col:13 used t1726 'pthread_t':'unsigned long'
    |-CallExpr 0x5623d576f138 <line:792:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5623d576f120 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623d576efa8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5623d574d5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5623d576efe8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5623d576efc8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5623d576ef28 't1726' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5623d576f178 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5623d576f060 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5623d576f038 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5623d576f000 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5623d576f190 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623d576f080 <col:39> 'void *(void *)' Function 0x5623d576a4f8 'P1' 'void *(void *)'
    | `-ParenExpr 0x5623d576f100 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5623d576f0d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5623d576f0a0 <col:52> 'int' 0
    |-CallExpr 0x5623d576f1e0 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5623d576f1c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623d576f1a8 <col:3> 'void ()' Function 0x5623d570cfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5623d576f2b0 <line:794:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5623d576f200 <col:3> '_Bool' lvalue Var 0x5623d57666e0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5623d576f298 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5623d576f278 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5623d576f260 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5623d576f220 <col:21> 'int' lvalue Var 0x5623d57661c8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5623d576f240 <col:41> 'int' 2
    |-CallExpr 0x5623d576f308 <line:795:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5623d576f2f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623d576f2d0 <col:3> 'void ()' Function 0x5623d570d060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5623d576f380 <line:796:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5623d576f368 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623d576f328 <col:3> 'void (int)' Function 0x5623d570c940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5623d576f3c0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5623d576f3a8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5623d576f348 <col:21> '_Bool' lvalue Var 0x5623d57666e0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5623d576f410 <line:797:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5623d576f3f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623d576f3d8 <col:3> 'void ()' Function 0x5623d570cfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5623d576f6f8 <line:798:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5623d576f430 <col:3> 'int' lvalue Var 0x5623d5766978 'y' 'int'
    | `-ConditionalOperator 0x5623d576f6c8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5623d576f4f0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5623d576f4a8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5623d576f490 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5623d576f450 <col:7> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5623d576f4d8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5623d576f4c0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5623d576f470 <col:25> '_Bool' lvalue Var 0x5623d5766b78 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5623d576f6b0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5623d576f510 <col:42> 'int' lvalue Var 0x5623d5766f48 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5623d576f690 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5623d576f660 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5623d576f5d0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5623d576f588 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5623d576f570 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5623d576f530 <col:55> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5623d576f5b8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5623d576f5a0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5623d576f550 <col:73> '_Bool' lvalue Var 0x5623d5766ce0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5623d576f630 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5623d576f5f0 <col:90> 'int' lvalue Var 0x5623d5767040 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5623d576f648 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5623d576f610 <col:102> 'int' lvalue Var 0x5623d5766978 'y' 'int'
    |-BinaryOperator 0x5623d576f900 <line:799:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5623d576f718 <col:3> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5623d576f8e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5623d576f8b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5623d576f7d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5623d576f790 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5623d576f778 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5623d576f738 <col:20> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5623d576f7c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5623d576f7a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5623d576f758 <col:38> '_Bool' lvalue Var 0x5623d5766b78 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5623d576f870 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5623d576f828 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5623d576f7f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5623d576f8a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5623d576f888 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5623d576f850 <col:66> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5623d576fc08 <line:800:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5623d576f920 <col:3> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5623d576fbf0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5623d576fbc0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5623d576fac0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5623d576f9e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5623d576f998 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5623d576f980 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5623d576f940 <col:20> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5623d576f9c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5623d576f9b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5623d576f960 <col:38> '_Bool' lvalue Var 0x5623d5766b78 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5623d576faa0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5623d576fa58 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5623d576fa40 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5623d576fa00 <col:56> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5623d576fa88 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5623d576fa70 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5623d576fa20 <col:74> '_Bool' lvalue Var 0x5623d5766ce0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5623d576fb58 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5623d576fb10 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5623d576fae0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5623d576fba8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5623d576fb90 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5623d576fb38 <col:102> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5623d576fe10 <line:801:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5623d576fc28 <col:3> '_Bool' lvalue Var 0x5623d5766b78 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5623d576fdf8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5623d576fdc8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5623d576fce8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5623d576fca0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5623d576fc88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5623d576fc48 <col:20> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5623d576fcd0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5623d576fcb8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5623d576fc68 <col:38> '_Bool' lvalue Var 0x5623d5766b78 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5623d576fd80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5623d576fd38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5623d576fd08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5623d576fdb0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5623d576fd98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5623d576fd60 <col:66> '_Bool' lvalue Var 0x5623d5766b78 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5623d57700f8 <line:802:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5623d576fe30 <col:3> '_Bool' lvalue Var 0x5623d5766ce0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5623d57700e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5623d57700b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5623d576ffd0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5623d576fef0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5623d576fea8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5623d576fe90 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5623d576fe50 <col:20> '_Bool' lvalue Var 0x5623d5766fc0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5623d576fed8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5623d576fec0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5623d576fe70 <col:38> '_Bool' lvalue Var 0x5623d5766b78 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5623d576ffb0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5623d576ff68 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5623d576ff50 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5623d576ff10 <col:56> '_Bool' lvalue Var 0x5623d57670b8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5623d576ff98 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5623d576ff80 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5623d576ff30 <col:74> '_Bool' lvalue Var 0x5623d5766ce0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5623d5770068 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5623d5770020 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5623d576fff0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5623d5770098 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5623d5770080 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5623d5770048 <col:102> '_Bool' lvalue Var 0x5623d5766ce0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5623d5770150 <line:803:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5623d5770138 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623d5770118 <col:3> 'void ()' Function 0x5623d570d060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5623d57701a8 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5623d5770190 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623d5770170 <col:3> 'void ()' Function 0x5623d570cfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5623d5770478 <line:805:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x5623d57701c8 <col:3> '_Bool' lvalue Var 0x5623d5766758 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5623d5770460 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5623d5770448 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5623d5770428 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x5623d5770408 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x5623d5770370 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x5623d57702d8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x5623d5770240 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x5623d5770228 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x5623d57701e8 <col:23> 'int' lvalue Var 0x5623d57662e8 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x5623d5770208 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x5623d57702b8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5623d57702a0 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5623d5770260 <col:51> 'int' lvalue Var 0x5623d5766408 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x5623d5770280 <col:74> 'int' 0
    |         | `-BinaryOperator 0x5623d5770350 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5623d5770338 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5623d57702f8 <col:79> 'int' lvalue Var 0x5623d5766528 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x5623d5770318 <col:102> 'int' 1
    |         `-BinaryOperator 0x5623d57703e8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x5623d57703d0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5623d5770390 <col:107> 'int' lvalue Var 0x5623d5766648 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x5623d57703b0 <col:130> 'int' 0
    |-CallExpr 0x5623d57704d0 <line:806:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5623d57704b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5623d5770498 <col:3> 'void ()' Function 0x5623d570d060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5623d5770548 <line:807:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5623d5770530 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5623d57704f0 <col:3> 'void (int)' Function 0x5623d570cd28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5623d5770588 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5623d5770570 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5623d5770510 <col:21> '_Bool' lvalue Var 0x5623d5766758 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5623d57705c0 <line:808:3, col:10>
      `-IntegerLiteral 0x5623d57705a0 <col:10> 'int' 0
