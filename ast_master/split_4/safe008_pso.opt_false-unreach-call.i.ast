TranslationUnitDecl 0x560be63d7e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x560be63d86d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x560be63d83b0 '__int128'
|-TypedefDecl 0x560be63d8748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x560be63d83d0 'unsigned __int128'
|-TypedefDecl 0x560be63d8a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x560be63d8820 'struct __NSConstantString_tag'
|   `-Record 0x560be63d87a0 '__NSConstantString_tag'
|-TypedefDecl 0x560be63d8af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x560be63d8ab0 'char *'
|   `-BuiltinType 0x560be63d7eb0 'char'
|-TypedefDecl 0x560be6417650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x560be63d8d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x560be63d8bd0 'struct __va_list_tag'
|     `-Record 0x560be63d8b50 '__va_list_tag'
|-FunctionDecl 0x560be6417790 <./split_4/safe008_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x560be64176c0 <col:31> col:34 'int'
|-FunctionDecl 0x560be6417958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x560be6417a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x560be6417bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x560be6417b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x560be6417df8 <col:40, col:99>
|   |-IfStmt 0x560be6417dc8 <col:42, col:88>
|   | |-UnaryOperator 0x560be6417ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x560be6417c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x560be6417c70 <col:47> 'int' lvalue ParmVar 0x560be6417b38 'expression' 'int'
|   | `-CompoundStmt 0x560be6417db0 <col:59, col:88>
|   |   `-LabelStmt 0x560be6417d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x560be6417d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x560be6417d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x560be6417cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x560be6417a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x560be6417de0 <col:89>
|   `-ReturnStmt 0x560be6417de8 <col:91>
|-FunctionDecl 0x560be6417e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x560be6417f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x560be6418280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560be6417fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x560be6418038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x560be64180b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560be6418138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560be6418340 <line:10:22>
|-FunctionDecl 0x560be643e390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560be64183b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x560be6418430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x560be64184b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560be6418530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560be643e450 <line:13:22>
|-FunctionDecl 0x560be643e700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560be643e4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x560be643e540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x560be643e5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x560be643e7b8 <line:15:22>
|-TypedefDecl 0x560be643e828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x560be63d7f70 'unsigned char'
|-TypedefDecl 0x560be643e898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x560be63d7f90 'unsigned short'
|-TypedefDecl 0x560be643e908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x560be63d7fb0 'unsigned int'
|-TypedefDecl 0x560be643e978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-TypedefDecl 0x560be643e9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x560be63d7ed0 'signed char'
|-TypedefDecl 0x560be643ea58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x560be63d7f70 'unsigned char'
|-TypedefDecl 0x560be643eac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x560be63d7ef0 'short'
|-TypedefDecl 0x560be643eb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x560be63d7f90 'unsigned short'
|-TypedefDecl 0x560be643eba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x560be63d7f10 'int'
|-TypedefDecl 0x560be643ec18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x560be63d7fb0 'unsigned int'
|-TypedefDecl 0x560be643ec88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be643ecf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-TypedefDecl 0x560be643ed68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be643edd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-TypedefDecl 0x560be643ee48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-TypedefDecl 0x560be643eeb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x560be63d7fb0 'unsigned int'
|-TypedefDecl 0x560be643ef28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x560be63d7fb0 'unsigned int'
|-TypedefDecl 0x560be643ef98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-TypedefDecl 0x560be643f008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-TypedefDecl 0x560be643f078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x560be63d7fb0 'unsigned int'
|-TypedefDecl 0x560be643f0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-TypedefDecl 0x560be643f158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be643f1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be643f238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x560be63d7f10 'int'
|-RecordDecl 0x560be643f290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x560be643f408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x560be643f4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x560be643f460 'struct __fsid_t' sugar
|   `-RecordType 0x560be643f310 '__fsid_t'
|     `-Record 0x560be643f290 ''
|-TypedefDecl 0x560be643f548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be643f5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-TypedefDecl 0x560be643f628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-TypedefDecl 0x560be643f698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x560be63d7fb0 'unsigned int'
|-TypedefDecl 0x560be643f708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be643f778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x560be63d7fb0 'unsigned int'
|-TypedefDecl 0x560be643f7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be643f858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x560be63d7f10 'int'
|-TypedefDecl 0x560be643f8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x560be63d7f10 'int'
|-TypedefDecl 0x560be643f938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x560be63d7f10 'int'
|-TypedefDecl 0x560be643f9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x560be63d8630 'void *'
|   `-BuiltinType 0x560be63d7e70 'void'
|-TypedefDecl 0x560be643fa18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be643fa88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be643faf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be643fb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-TypedefDecl 0x560be643fbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-TypedefDecl 0x560be643fc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-TypedefDecl 0x560be643fcb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-TypedefDecl 0x560be643fd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be643fd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be643fe08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be643fe78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-TypedefDecl 0x560be643ff08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x560be643fed0 '__off64_t' sugar
|   |-Typedef 0x560be643f1c8 '__off64_t'
|   `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be6440000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x560be643ffc0 '__quad_t *'
|   `-TypedefType 0x560be643ff60 '__quad_t' sugar
|     |-Typedef 0x560be643ed68 '__quad_t'
|     `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be6440070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x560be63d8ab0 'char *'
|   `-BuiltinType 0x560be63d7eb0 'char'
|-TypedefDecl 0x560be64400e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be6440150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x560be63d7fb0 'unsigned int'
|-FunctionDecl 0x560be6440298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x560be64401c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x560be64415e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x560be64415d8 <line:72:3, col:34>
|     `-CallExpr 0x560be6441598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x560be6441580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560be6441510 <col:10> '<builtin fn type>' Function 0x560be6441380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x560be64415c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560be6441530 <col:29> 'unsigned int' lvalue ParmVar 0x560be64401c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x560be6441380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x560be6441420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x560be6441490 <col:10> Implicit
| `-ConstAttr 0x560be64414e8 <col:10> Implicit
|-FunctionDecl 0x560be6441740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x560be6441638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x560be6441a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x560be6441a48 <line:77:3, col:34>
|     `-CallExpr 0x560be6441a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x560be64419f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560be6441978 <col:10> '<builtin fn type>' Function 0x560be64417e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x560be6441a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x560be6441998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x560be6441638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x560be64417e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x560be6441888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x560be64418f8 <col:10> Implicit
| `-ConstAttr 0x560be6441950 <col:10> Implicit
|-TypedefDecl 0x560be6441a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-TypedefDecl 0x560be6441b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x560be6441ae0 '__time_t' sugar
|   |-Typedef 0x560be643f708 '__time_t'
|   `-BuiltinType 0x560be63d7f30 'long'
|-RecordDecl 0x560be6441b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x560be6441c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x560be6441cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x560be6441d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x560be6441d10 '__pid_t' sugar
|   |-Typedef 0x560be643f238 '__pid_t'
|   `-BuiltinType 0x560be63d7f10 'int'
|-RecordDecl 0x560be6441da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x560be6441e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x560be6441eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x560be6441f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x560be6441fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-RecordDecl 0x560be6442030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x560be64422c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x560be64433a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x560be6442310 'struct cpu_set_t' sugar
|   `-RecordType 0x560be64420b0 'cpu_set_t'
|     `-Record 0x560be6442030 ''
|-FunctionDecl 0x560be6443678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x560be6443448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560be6443550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x560be6443728 <line:107:19>
|-FunctionDecl 0x560be6443900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x560be6443790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x560be64439a8 <col:69>
|-FunctionDecl 0x560be6443b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x560be6443a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x560be6443bc8 <col:64>
|-FunctionDecl 0x560be6443e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x560be6443c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560be6443d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560be6443f38 <line:113:22>
|-FunctionDecl 0x560be64441b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x560be6443fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560be6444098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x560be6444268 <col:88>
|-FunctionDecl 0x560be6444588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560be64442d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560be64443b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x560be6444440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560be6444640 <col:62>
|-FunctionDecl 0x560be64447b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x560be64446a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x560be6444860 <col:63>
|-FunctionDecl 0x560be6444988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x560be6444a28 <col:47>
|-FunctionDecl 0x560be6444b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x560be6444a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560be6444bd8 <col:69>
|-FunctionDecl 0x560be6444ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x560be6444c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560be6444d88 <col:69>
|-FunctionDecl 0x560be6445048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560be6444df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560be6444f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x560be64450f8 <col:88>
|-TypedefDecl 0x560be6445188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560be6445150 '__clock_t' sugar
|   |-Typedef 0x560be643f548 '__clock_t'
|   `-BuiltinType 0x560be63d7f30 'long'
|-TypedefDecl 0x560be6445218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x560be64451e0 '__clockid_t' sugar
|   |-Typedef 0x560be643f938 '__clockid_t'
|   `-BuiltinType 0x560be63d7f10 'int'
|-TypedefDecl 0x560be64452a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560be6445270 '__timer_t' sugar
|   |-Typedef 0x560be643f9a8 '__timer_t'
|   `-PointerType 0x560be63d8630 'void *'
|     `-BuiltinType 0x560be63d7e70 'void'
|-RecordDecl 0x560be6445300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x560be64453d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x560be6445440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x560be64454a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560be6445510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560be6445578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x560be64455e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560be6445648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x560be64456b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560be6445718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560be6445780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x560be64457e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560be6445838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x560be6445908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560be6445978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560be6445a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x560be6445bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560be6445c90 <col:45>
|-FunctionDecl 0x560be6445e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560be6445d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x560be6445f18 <col:54>
|-FunctionDecl 0x560be6446118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560be6445f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x560be6445ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x560be64461c8 <line:157:22>
| `-ConstAttr 0x560be6446220 <col:63>
|-FunctionDecl 0x560be6447050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560be6446318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560be64470f8 <col:56>
|-FunctionDecl 0x560be64474a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560be6447168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x560be64471e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560be6447260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560be6447358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560be6447560 <col:54>
|-RecordDecl 0x560be64475b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x560be6447668 parent 0x560be63d7e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x560be64478c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560be6447968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x560be64479d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560be6447a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x560be6447b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x560be6447c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x560be6447bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x560be6447b80 'struct __locale_struct' sugar
|     `-RecordType 0x560be6447640 'struct __locale_struct'
|       `-Record 0x560be64475b8 '__locale_struct'
|-TypedefDecl 0x560be6447cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x560be6447cc0 '__locale_t' sugar
|   |-Typedef 0x560be6447c48 '__locale_t'
|   `-PointerType 0x560be6447bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x560be6447b80 'struct __locale_struct' sugar
|       `-RecordType 0x560be6447640 'struct __locale_struct'
|         `-Record 0x560be64475b8 '__locale_struct'
|-FunctionDecl 0x560be6449110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x560be6447d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x560be6447de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560be6447e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x560be6447ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560be6447f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x560be64491d8 <col:40>
|-FunctionDecl 0x560be64493c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560be64492a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x560be6449470 <col:66>
|-FunctionDecl 0x560be6449580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560be64494d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x560be6449628 <col:69>
|-FunctionDecl 0x560be6449858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560be6449690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560be6449720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560be6449908 <col:52>
|-FunctionDecl 0x560be6449ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560be6449970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560be6449a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560be6449b60 <col:55>
|-FunctionDecl 0x560be6449cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x560be6449be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x560be6449da0 <col:62>
|-FunctionDecl 0x560be6449f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x560be6449e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x560be6449fc0 <col:60>
|-FunctionDecl 0x560be644a2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560be644a118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560be644a198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x560be644a368 <col:44>
|-FunctionDecl 0x560be644a578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560be644a3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560be644a450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x560be644a628 <col:49>
|-VarDecl 0x560be644a728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x560be644a7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x560be644a828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x560be644a8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x560be644aa20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x560be644aac0 <col:42>
|-VarDecl 0x560be644ab30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x560be644abb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x560be644ad38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x560be644ac28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x560be644ade0 <col:57>
|-FunctionDecl 0x560be644aef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560be644ae60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560be644af98 <col:56>
|-FunctionDecl 0x560be644b0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560be644b018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x560be644b178 <col:59>
|-FunctionDecl 0x560be644b280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x560be644b1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x560be644b328 <col:48>
| `-ConstAttr 0x560be644b380 <col:89>
|-FunctionDecl 0x560be644b5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560be644b438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x560be644b4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x560be644b848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560be644b6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560be644b768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x560be644b8f8 <col:88>
|-FunctionDecl 0x560be644ba90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560be644b960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560be644b9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x560be644bb40 <col:88>
|-FunctionDecl 0x560be644bd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x560be644bba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560be644bc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x560be644be08 <line:208:22>
|-FunctionDecl 0x560be644c178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560be644be70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560be644bef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x560be644bf80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x560be644c010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x560be644c478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x560be644c278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x560be644c350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x560be644c528 <col:85>
|-FunctionDecl 0x560be644c918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x560be644c590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560be644c6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x560be644c7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x560be644c9d0 <col:52>
|-FunctionDecl 0x560be644cb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x560be644ca38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560be644cbf0 <col:61>
|-FunctionDecl 0x560be644d0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x560be644cc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560be644ccd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x560be644ce08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x560be644cef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x560be644d1b0 <col:62>
|-FunctionDecl 0x560be644d3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x560be644d218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560be644d2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x560be644d478 <line:221:22>
|-FunctionDecl 0x560be644d578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x560be644d4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560be644d620 <col:65>
|-TypedefDecl 0x560be644d690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x560be63d7fd0 'unsigned long'
|-RecordDecl 0x560be644d6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x560be644d830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560be644d898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560be644d948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x560be644d8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x560be644d770 'union pthread_attr_t'
|     `-Record 0x560be644d6e8 'pthread_attr_t'
|-RecordDecl 0x560be644d9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560be644db18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560be644db90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x560be644dc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560be644dbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x560be644da20 'struct __pthread_internal_list'
|     `-Record 0x560be644d9a0 '__pthread_internal_list'
|-RecordDecl 0x560be644dcb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x560be644dd58 parent 0x560be63d7e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x560be644de30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560be644de98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560be644df00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560be644df68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560be644dfd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560be644e038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x560be6452110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x560be64521c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x560be64522b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x560be6452318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560be64524a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x560be6452440 'union pthread_mutex_t' sugar
|   `-RecordType 0x560be644dd30 'pthread_mutex_t'
|     `-Record 0x560be644dcb0 ''
|-RecordDecl 0x560be6452510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x560be6452650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560be64526b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560be6452770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x560be6452710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x560be6452590 'pthread_mutexattr_t'
|     `-Record 0x560be6452510 ''
|-RecordDecl 0x560be64527e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x560be6452888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x560be6452950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560be64529b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x560be6452a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x560be6452a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x560be6452af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x560be6452b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x560be6452bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x560be6452c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x560be6452ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_4/safe008_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_4/safe008_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x560be6452dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x560be6452e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x560be6452f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x560be6452f10 'union pthread_cond_t' sugar
|   `-RecordType 0x560be6452860 'pthread_cond_t'
|     `-Record 0x560be64527e0 ''
|-RecordDecl 0x560be6452fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x560be6454130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560be6454198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560be6454250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x560be64541f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x560be6453060 'pthread_condattr_t'
|     `-Record 0x560be6452fe0 ''
|-TypedefDecl 0x560be64542d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x560be63d7fb0 'unsigned int'
|-TypedefDecl 0x560be6454348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x560be63d7f10 'int'
|-RecordDecl 0x560be64543a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x560be6454448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x560be6454510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560be6454578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x560be64545e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x560be6454648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x560be64546b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x560be6454718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x560be6454780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x560be64547e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x560be6454850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x560be64548b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x560be6454920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x560be64549d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_4/safe008_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_4/safe008_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x560be6454a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560be6454ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560be6454c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x560be6454bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x560be6454420 'pthread_rwlock_t'
|     `-Record 0x560be64543a0 ''
|-RecordDecl 0x560be6454ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x560be6454de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x560be6454e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560be6454f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x560be6454ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x560be6454d20 'pthread_rwlockattr_t'
|     `-Record 0x560be6454ca0 ''
|-TypedefDecl 0x560be6454f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x560be63d7f14 'volatile int' volatile
|   `-BuiltinType 0x560be63d7f10 'int'
|-RecordDecl 0x560be6454fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x560be6456140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x560be64561a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560be6456260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x560be6456200 'union pthread_barrier_t' sugar
|   `-RecordType 0x560be6455060 'pthread_barrier_t'
|     `-Record 0x560be6454fe0 ''
|-RecordDecl 0x560be64562d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x560be64563d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560be6456438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560be64564f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560be6456490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560be6456350 'pthread_barrierattr_t'
|     `-Record 0x560be64562d0 ''
|-TypedefDecl 0x560be6456608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x560be64565a0 'long [8]' 8 
|   `-BuiltinType 0x560be63d7f30 'long'
|-EnumDecl 0x560be6456660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x560be6456728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560be6456778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x560be64567c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x560be6456898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x560be64568e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560be6456938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560be6456988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560be6456a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x560be64569f8 <col:26> 'int'
| |   `-DeclRefExpr 0x560be64569d8 <col:26> 'int' EnumConstant 0x560be6456898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560be6456a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560be6456a80 <col:29> 'int'
| |   `-DeclRefExpr 0x560be6456a60 <col:29> 'int' EnumConstant 0x560be64568e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x560be6456b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x560be6456b08 <col:30> 'int'
| |   `-DeclRefExpr 0x560be6456ae8 <col:30> 'int' EnumConstant 0x560be6456938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560be6456ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560be6456b90 <col:27> 'int'
|     `-DeclRefExpr 0x560be6456b70 <col:27> 'int' EnumConstant 0x560be6456a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x560be6456bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x560be6456cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560be6456d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x560be6456d38 <col:30> 'int'
| |   `-DeclRefExpr 0x560be6456d18 <col:30> 'int' EnumConstant 0x560be6456cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560be6456da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x560be6456e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x560be6456e10 <col:29> 'int'
|     `-DeclRefExpr 0x560be6456df0 <col:29> 'int' EnumConstant 0x560be6456da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560be6456e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x560be6456f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560be6456f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x560be6456fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560be6457038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x560be6457150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x560be64571a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x560be64571f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560be6457278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x560be6457260 <col:31> 'int'
|     `-DeclRefExpr 0x560be6457240 <col:31> 'int' EnumConstant 0x560be6457150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x560be64572c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x560be6457398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x560be64573e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x560be6457438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x560be6457508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560be6457558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x560be64575a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x560be6457678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x560be64576c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560be6457718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560be6457958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x560be64579c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560be6457a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x560be6457b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x560be6457b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x560be6457c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x560be6457cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x560be6457d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x560be6457dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x560be6457e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x560be6458488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x560be6457f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x560be6458030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560be6458270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x560be64582f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x560be6458548 <col:47>
| |-NonNullAttr 0x560be64585a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x560be64585d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x560be6458700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x560be6458630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x560be6458958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x560be64587b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x560be6458838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x560be6458b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x560be6458a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x560be6458bd0 <col:60>
|-FunctionDecl 0x560be6458d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x560be6458dc0 <col:54>
| `-ConstAttr 0x560be6458e18 <col:95>
|-FunctionDecl 0x560be6458fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x560be6458e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560be6458ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x560be6459098 <line:394:19>
| `-ConstAttr 0x560be64590f0 <col:60>
|-FunctionDecl 0x560be645ab08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560be645a9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560be645abb0 <col:71>
| `-NonNullAttr 0x560be645ac08 <col:112, col:126> 1
|-FunctionDecl 0x560be645ad10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560be645ac58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560be645adb8 <line:397:22>
| `-NonNullAttr 0x560be645ae10 <col:63, col:77> 1
|-FunctionDecl 0x560be645b038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x560be645ae58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560be645aed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x560be645b0e8 <line:400:22>
| `-NonNullAttr 0x560be645b140 <col:63, col:80> 1 2
|-FunctionDecl 0x560be645b348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560be645b188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560be645b208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x560be645b3f8 <line:403:22>
| `-NonNullAttr 0x560be645b450 <col:63, col:77> 1
|-FunctionDecl 0x560be645b6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x560be645b498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560be645b540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x560be645b758 <line:406:22>
| `-NonNullAttr 0x560be645b7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x560be645c9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560be645b7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560be645b870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560be645ca98 <line:409:22>
| `-NonNullAttr 0x560be645caf0 <col:63, col:77> 1
|-FunctionDecl 0x560be645cd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560be645cb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560be645cbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560be645cdd8 <line:412:22>
| `-NonNullAttr 0x560be645ce30 <col:63, col:80> 1 2
|-FunctionDecl 0x560be645d068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560be645ce78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x560be645cf08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x560be645d118 <col:37>
| `-NonNullAttr 0x560be645d170 <col:78, col:95> 1 2
|-FunctionDecl 0x560be645d358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560be645d1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560be645d238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x560be645d408 <line:418:22>
| `-NonNullAttr 0x560be645d460 <col:63, col:80> 1 2
|-FunctionDecl 0x560be645d5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560be645d4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560be645d528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x560be645d698 <line:420:22>
| `-NonNullAttr 0x560be645d6f0 <col:63, col:77> 1
|-FunctionDecl 0x560be645d898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560be645d738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560be645d7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x560be645d948 <line:423:22>
| `-NonNullAttr 0x560be645d9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560be645db48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560be645da08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560be645da88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560be645dbf8 <line:426:22>
| `-NonNullAttr 0x560be645dc50 <col:63, col:77> 1
|-FunctionDecl 0x560be645ddf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560be645dc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560be645dd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560be645dea8 <line:429:22>
| `-NonNullAttr 0x560be645df00 <col:63, col:80> 1 2
|-FunctionDecl 0x560be645e088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560be645df48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560be645dfc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x560be645e138 <line:431:22>
| `-NonNullAttr 0x560be645e190 <col:63, col:77> 1
|-FunctionDecl 0x560be645e3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x560be645e1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560be645e258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560be645e468 <line:434:22>
| |-NonNullAttr 0x560be645e4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x560be645e4f8 <col:100> "" ""
|-FunctionDecl 0x560be645e708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560be645e548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560be645e5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x560be645e7b8 <line:437:22>
| |-NonNullAttr 0x560be645e810 <col:63, col:77> 1
| `-DeprecatedAttr 0x560be645e848 <col:97> "" ""
|-FunctionDecl 0x560be645ea48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560be645e898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560be645e910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560be645eaf8 <line:440:22>
| `-NonNullAttr 0x560be645eb50 <col:63, col:80> 1 2
|-FunctionDecl 0x560be645ecd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560be645eb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560be645ec10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560be645ed80 <line:443:22>
| `-NonNullAttr 0x560be645edd8 <col:63, col:77> 1
|-FunctionDecl 0x560be645f0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560be645ee28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560be645eea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x560be645ef20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560be645f180 <line:447:22>
| `-NonNullAttr 0x560be645f1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x560be645f488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x560be645f230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560be645f2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x560be645f328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560be645f540 <col:43>
| `-NonNullAttr 0x560be645f598 <col:84, col:98> 1
|-FunctionDecl 0x560be645f858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560be645f5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560be645f668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x560be645f6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x560be645f910 <line:452:22>
| `-NonNullAttr 0x560be645f968 <col:63, col:77> 3
|-FunctionDecl 0x560be645fc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560be645f9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560be645fa60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x560be645faf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560be645fd30 <line:456:22>
| `-NonNullAttr 0x560be645fd88 <col:63, col:80> 2 3
|-FunctionDecl 0x560be645ff78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x560be645fdd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560be645fe58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x560be6460028 <line:458:22>
|-FunctionDecl 0x560be64603f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x560be64600f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x560be6460290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x560be64604a8 <col:52, col:69> 1 2
|-FunctionDecl 0x560be6460650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x560be6460530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x560be64605b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x560be6460838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x560be6460718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x560be6460798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x560be64609f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x560be64608f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x560be6460b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x560be6460bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x560be6460c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x560be6460d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x560be6460dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x560be6460fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_4/safe008_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x560be6461098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x560be6461150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x560be64610f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x560be6460c50 '__pthread_unwind_buf_t'
| |   `-Record 0x560be6460bd0 ''
| `-AlignedAttr 0x560be64611a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x560be6461220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x560be6461380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x560be64613e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x560be6461450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x560be64614b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x560be64616c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560be64615b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560be6461808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560be6461778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560be6461a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560be64618c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x560be6461aa8 <line:487:22>
|-RecordDecl 0x560be6461b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x560be6461e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x560be6461c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x560be6461cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x560be6461ec8 <col:86>
| `-ReturnsTwiceAttr 0x560be6461f20 <col:12> Implicit
|-FunctionDecl 0x560be6462248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560be6461ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x560be6462100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x560be64622f8 <line:493:22>
| `-NonNullAttr 0x560be6462350 <col:63, col:77> 1
|-FunctionDecl 0x560be64624c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560be6462398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560be6462570 <line:495:22>
| `-NonNullAttr 0x560be64625c8 <col:63, col:77> 1
|-FunctionDecl 0x560be64626d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560be6462618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560be6462778 <line:497:22>
| `-NonNullAttr 0x560be64627d0 <col:52, col:66> 1
|-FunctionDecl 0x560be64628d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560be6462818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560be6462978 <line:499:22>
| `-NonNullAttr 0x560be64629d0 <col:52, col:66> 1
|-FunctionDecl 0x560be6463c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560be6463a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560be6463ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560be6463cd8 <col:36>
| `-NonNullAttr 0x560be6463d30 <col:66, col:83> 1 2
|-FunctionDecl 0x560be6463e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560be6463d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560be6463ed8 <line:504:22>
| `-NonNullAttr 0x560be6463f30 <col:52, col:66> 1
|-FunctionDecl 0x560be64641c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560be6463fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560be6464060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560be6464278 <line:508:22>
| `-NonNullAttr 0x560be64642d0 <col:63, col:80> 1 2
|-FunctionDecl 0x560be6464598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x560be6464318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560be6464398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x560be6464418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x560be6464650 <line:512:22>
| `-NonNullAttr 0x560be64646a8 <col:63, col:80> 1 3
|-FunctionDecl 0x560be64647b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560be64646f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560be6464858 <line:514:22>
| `-NonNullAttr 0x560be64648b0 <col:63, col:77> 1
|-FunctionDecl 0x560be6464ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560be6464960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560be6464b80 <line:516:22>
| `-NonNullAttr 0x560be6464bd8 <col:63, col:77> 1
|-FunctionDecl 0x560be6464ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560be6464c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560be6464d88 <line:518:22>
| `-NonNullAttr 0x560be6464de0 <col:63, col:77> 1
|-FunctionDecl 0x560be6465008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560be6464e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560be6464ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x560be64650b8 <line:522:22>
| `-NonNullAttr 0x560be6465110 <col:63, col:80> 1 2
|-FunctionDecl 0x560be6465318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560be6465158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560be64651d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x560be64653c8 <line:525:22>
| `-NonNullAttr 0x560be6465420 <col:63, col:77> 1
|-FunctionDecl 0x560be64655c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560be6465468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560be64654e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560be6465678 <line:528:22>
| `-NonNullAttr 0x560be64656d0 <col:63, col:80> 1 2
|-FunctionDecl 0x560be6465858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560be6465718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560be6465798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560be6465908 <line:530:22>
| `-NonNullAttr 0x560be6465960 <col:63, col:77> 1
|-FunctionDecl 0x560be6465b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560be64659a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560be6465a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560be6465bd0 <line:534:22>
| `-NonNullAttr 0x560be6465c28 <col:63, col:80> 1 2
|-FunctionDecl 0x560be6465db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560be6465c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560be6465cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560be6465e68 <line:537:22>
| `-NonNullAttr 0x560be6465ec0 <col:63, col:77> 1
|-FunctionDecl 0x560be6466068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560be6465f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560be6465f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560be6466118 <line:541:22>
| `-NonNullAttr 0x560be6466170 <col:63, col:80> 1 2
|-FunctionDecl 0x560be64662f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560be64661b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560be6466238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x560be64663a8 <line:544:22>
| `-NonNullAttr 0x560be6466400 <col:63, col:77> 1
|-FunctionDecl 0x560be64665e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560be6466448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x560be64664c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560be6466698 <line:547:22>
| `-NonNullAttr 0x560be64666f0 <col:63, col:80> 1 2
|-FunctionDecl 0x560be6466878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560be6466738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560be64667b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x560be6466928 <line:550:22>
| `-NonNullAttr 0x560be6466980 <col:63, col:77> 1
|-FunctionDecl 0x560be6467cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x560be6467aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560be6467bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x560be6467da8 <col:29>
| `-NonNullAttr 0x560be6467e00 <col:70, col:84> 1
|-FunctionDecl 0x560be6467f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560be6467e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560be6468020 <line:555:22>
| `-NonNullAttr 0x560be6468078 <col:63, col:77> 1
|-FunctionDecl 0x560be6468180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560be64680c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560be6468228 <line:557:22>
| `-NonNullAttr 0x560be6468280 <col:52, col:66> 1
|-FunctionDecl 0x560be6468380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560be64682c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560be6468428 <line:559:19>
| `-NonNullAttr 0x560be6468480 <col:49, col:63> 1
|-FunctionDecl 0x560be64686b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560be64684c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560be6468558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560be6468768 <col:39>
| `-NonNullAttr 0x560be64687c0 <col:69, col:86> 1 2
|-FunctionDecl 0x560be64688c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560be6468808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560be6468968 <line:564:22>
| `-NonNullAttr 0x560be64689c0 <col:52, col:66> 1
|-FunctionDecl 0x560be6468b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560be6468a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560be6468bd0 <line:566:22>
| `-NonNullAttr 0x560be6468c28 <col:52, col:66> 1
|-FunctionDecl 0x560be6468de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560be6468c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560be6468d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560be6468e98 <col:39>
| `-NonNullAttr 0x560be6468ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x560be6468ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560be6468f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560be6469098 <line:571:22>
| `-NonNullAttr 0x560be64690f0 <col:52, col:66> 1
|-FunctionDecl 0x560be64692d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560be64691a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560be6469380 <line:573:22>
| `-NonNullAttr 0x560be64693d8 <col:63, col:77> 1
|-FunctionDecl 0x560be64694e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560be6469428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560be6469588 <line:575:22>
| `-NonNullAttr 0x560be64695e0 <col:63, col:77> 1
|-FunctionDecl 0x560be6469808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560be6469628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560be64696a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x560be64698b8 <line:579:22>
| `-NonNullAttr 0x560be6469910 <col:63, col:80> 1 2
|-FunctionDecl 0x560be6469b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560be6469958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560be64699d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x560be6469be8 <line:582:22>
| `-NonNullAttr 0x560be6469c40 <col:63, col:77> 1
|-FunctionDecl 0x560be6469de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560be6469c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560be6469d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x560be6469e98 <line:586:22>
| `-NonNullAttr 0x560be6469ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x560be646a078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560be6469f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560be6469fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x560be646a128 <col:36>
| `-NonNullAttr 0x560be646a180 <col:77, col:91> 1
|-FunctionDecl 0x560be646a4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x560be646a260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560be646a370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x560be646a568 <line:591:22>
| `-NonNullAttr 0x560be646a5c0 <col:63, col:77> 1
|-FunctionDecl 0x560be646a738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560be646a608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560be646a7e0 <line:593:22>
| `-NonNullAttr 0x560be646a838 <col:63, col:77> 1
|-FunctionDecl 0x560be646a940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560be646a888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560be646a9e8 <line:595:22>
| `-NonNullAttr 0x560be646aa40 <col:52, col:66> 1
|-FunctionDecl 0x560be646ab58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560be646aaa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560be646ac00 <line:597:22>
| `-NonNullAttr 0x560be646ac58 <col:52, col:66> 1
|-FunctionDecl 0x560be646ae88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x560be646aca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560be646ad20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x560be646af38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x560be646b268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560be646afb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560be646b030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560be646b0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x560be646b320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x560be646b538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560be646b400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560be646b5e0 <line:606:22>
| `-NonNullAttr 0x560be646b638 <col:63, col:77> 1
|-FunctionDecl 0x560be646b740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560be646b688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560be646b7e8 <line:608:22>
| `-NonNullAttr 0x560be646b840 <col:63, col:77> 1
|-FunctionDecl 0x560be646baa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560be646b888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560be646b908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x560be646bb50 <line:612:22>
| `-NonNullAttr 0x560be646bba8 <col:63, col:80> 1 2
|-FunctionDecl 0x560be646bdb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x560be646bbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560be646bc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x560be646be68 <col:37>
| `-NonNullAttr 0x560be646bec0 <col:78, col:92> 1
|-FunctionDecl 0x560be646c0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x560be646bf08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560be646bfb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x560be646c188 <line:618:22>
| `-NonNullAttr 0x560be646c1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x560be646c3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x560be646c228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560be646c2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x560be646c458 <line:621:22>
| `-NonNullAttr 0x560be646c4b0 <col:63, col:77> 1
|-FunctionDecl 0x560be646c758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x560be646c590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x560be646c610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x560be646c808 <line:623:22>
| `-NonNullAttr 0x560be646c860 <col:63, col:77> 1
|-FunctionDecl 0x560be646c9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560be646c8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560be646cab0 <line:625:22>
| `-NonNullAttr 0x560be646cb08 <col:63, col:77> 1
|-FunctionDecl 0x560be646cc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560be646cb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560be646ccb8 <line:627:22>
| `-NonNullAttr 0x560be646cd10 <col:52, col:66> 1
|-FunctionDecl 0x560be646ce10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560be646cd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560be646ceb8 <line:629:22>
| `-NonNullAttr 0x560be646cf10 <col:52, col:66> 1
|-FunctionDecl 0x560be646d010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560be646cf58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560be646d0b8 <line:631:22>
| `-NonNullAttr 0x560be646d110 <col:52, col:66> 1
|-FunctionDecl 0x560be646d4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x560be646d1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x560be646d300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560be646d380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x560be646d5a0 <line:635:22>
| `-NonNullAttr 0x560be646d5f8 <col:63, col:77> 1
|-FunctionDecl 0x560be646d778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560be646d648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560be646d820 <line:637:22>
| `-NonNullAttr 0x560be646d878 <col:63, col:77> 1
|-FunctionDecl 0x560be646d980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560be646d8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560be646da28 <line:639:22>
| `-NonNullAttr 0x560be646da80 <col:52, col:66> 1
|-FunctionDecl 0x560be646ec88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560be646eb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560be646ed30 <line:641:22>
| `-NonNullAttr 0x560be646ed88 <col:63, col:77> 1
|-FunctionDecl 0x560be646ee90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560be646edd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560be646ef38 <line:643:22>
| `-NonNullAttr 0x560be646ef90 <col:63, col:77> 1
|-FunctionDecl 0x560be646f1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560be646efd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560be646f058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x560be646f268 <line:647:22>
| `-NonNullAttr 0x560be646f2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560be646f4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x560be646f308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x560be646f388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x560be646f578 <line:650:22>
| `-NonNullAttr 0x560be646f5d0 <col:63, col:77> 1
|-FunctionDecl 0x560be646f918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x560be646f6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x560be646f7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x560be646f9c8 <line:653:22>
| `-NonNullAttr 0x560be646fa20 <col:63, col:77> 1
|-FunctionDecl 0x560be646fb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x560be646fa68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560be646fc30 <col:69>
|-FunctionDecl 0x560be646fda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x560be646fc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560be646fe50 <col:72>
|-FunctionDecl 0x560be6470088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x560be646feb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x560be646ff68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x560be6470138 <col:44>
|-FunctionDecl 0x560be6470358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x560be64701a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560be6470218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x560be6470408 <line:660:22>
| `-NonNullAttr 0x560be6470460 <col:63, col:77> 2
|-FunctionDecl 0x560be64708a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x560be6470540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x560be6470650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x560be6470760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x560be6470960 <col:47>
|-FunctionDecl 0x560be6470af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x560be64709d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560be6470c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x560be6470bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560be6470da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x560be6470d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560be6470e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x560be6470f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x560be6470fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x560be64710a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x560be6471120 prev 0x560be64710a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x560be6471188 <col:24> 'int' 0
|-VarDecl 0x560be64711c0 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x560be6471240 prev 0x560be64711c0 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x560be64712a8 <col:27> 'int' 0
|-VarDecl 0x560be64712e0 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x560be6471360 prev 0x560be64712e0 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x560be64713c8 <col:27> 'int' 0
|-VarDecl 0x560be64713f8 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x560be6471470 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x560be64714f0 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x560be6471570 prev 0x560be64714f0 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x560be64715d8 <col:9> 'int' 0
|-VarDecl 0x560be6471610 <line:681:1, col:5> col:5 used y 'int'
|-VarDecl 0x560be6471690 prev 0x560be6471610 <line:682:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x560be64716f8 <col:9> 'int' 0
|-VarDecl 0x560be6471730 <line:683:1, col:5> col:5 used z 'int'
|-VarDecl 0x560be64717b0 prev 0x560be6471730 <line:684:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x560be6471818 <col:9> 'int' 0
|-VarDecl 0x560be6471848 <line:685:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x560be64718c8 <line:686:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x560be6471940 <line:687:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x560be64719b8 <line:688:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x560be6471a30 <line:689:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x560be6471b00 <line:690:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x560be6471b78 <line:691:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x560be6471bf0 <line:692:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x560be6471c68 <line:693:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x560be6471ce0 <line:694:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x560be6471d58 <line:695:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x560be6471dd8 <line:696:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x560be6471e58 <line:697:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x560be6471ed0 <line:698:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x560be6471f50 <line:699:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x560be6471fc8 <line:700:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x560be6472040 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x560be64720b8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x560be64721d0 prev 0x560be6470af0 <line:703:1, line:731:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x560be6472138 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560be64739f8 <line:704:1, line:731:1>
|   |-CallExpr 0x560be64722e8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560be64722d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6472278 <col:3> 'void ()' Function 0x560be6417e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560be6472360 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560be6472308 <col:3> 'int' lvalue Var 0x560be6471f50 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x560be6472348 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560be6472328 <col:15> 'int' lvalue Var 0x560be6471e58 'z$w_buff0' 'int'
|   |-BinaryOperator 0x560be64723c0 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560be6472380 <col:3> 'int' lvalue Var 0x560be6471e58 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x560be64723a0 <col:15> 'int' 2
|   |-BinaryOperator 0x560be6472438 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560be64723e0 <col:3> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560be6472420 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560be6472400 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560be64724d0 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560be6472458 <col:3> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x560be64724a8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560be6472478 <col:27> 'int' 1
|   |-CallExpr 0x560be6472658 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x560be6472640 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560be64724f0 <col:3> 'void (int)' Function 0x560be6417bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x560be64725f0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x560be64725d0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x560be64725b0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x560be6472568 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x560be6472550 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560be6472510 <col:23> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x560be6472598 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x560be6472580 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x560be6472530 <col:41> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560be64726d8 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560be6472680 <col:3> '_Bool' lvalue Var 0x560be6471b78 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x560be64726c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560be64726a0 <col:20> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x560be6472750 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560be64726f8 <col:3> '_Bool' lvalue Var 0x560be6471bf0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560be6472738 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560be6472718 <col:20> '_Bool' lvalue Var 0x560be64719b8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560be64727c8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560be6472770 <col:3> '_Bool' lvalue Var 0x560be6471c68 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560be64727b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560be6472790 <col:20> '_Bool' lvalue Var 0x560be6471a30 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560be6472840 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560be64727e8 <col:3> '_Bool' lvalue Var 0x560be6471ce0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560be6472828 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560be6472808 <col:20> '_Bool' lvalue Var 0x560be6471b00 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560be64728d8 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560be6472860 <col:3> '_Bool' lvalue Var 0x560be64719b8 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x560be64728b0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560be6472880 <col:27> 'int' 1
|   |-CallExpr 0x560be6472930 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560be6472918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be64728f8 <col:3> 'void ()' Function 0x560be6417f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560be6472988 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560be6472970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6472950 <col:3> 'void ()' Function 0x560be6417e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560be64729e8 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560be64729a8 <col:3> 'int' lvalue Var 0x560be6471570 'x' 'int'
|   | `-IntegerLiteral 0x560be64729c8 <col:7> 'int' 1
|   |-CallExpr 0x560be6472a40 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560be6472a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6472a08 <col:3> 'void ()' Function 0x560be6417f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560be6472a98 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560be6472a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6472a60 <col:3> 'void ()' Function 0x560be6417e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560be6472d98 <line:721:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560be6472ab8 <col:3> 'int' lvalue Var 0x560be64717b0 'z' 'int'
|   | `-ConditionalOperator 0x560be6472d68 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560be6472b90 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560be6472b48 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560be6472b30 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560be6472ad8 <col:7> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560be6472b78 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560be6472b60 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560be6472b10 <col:25> '_Bool' lvalue Var 0x560be64719b8 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x560be6472d50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560be6472bb0 <col:42> 'int' lvalue Var 0x560be6471e58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560be6472d30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560be6472d00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560be6472c70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560be6472c28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560be6472c10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560be6472bd0 <col:55> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560be6472c58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560be6472c40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560be6472bf0 <col:73> '_Bool' lvalue Var 0x560be6471bf0 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560be6472cd0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560be6472c90 <col:90> 'int' lvalue Var 0x560be6471f50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560be6472ce8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560be6472cb0 <col:102> 'int' lvalue Var 0x560be64717b0 'z' 'int'
|   |-BinaryOperator 0x560be6472fa0 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560be6472db8 <col:3> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560be6472f88 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560be6472f58 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560be6472e78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560be6472e30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560be6472e18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560be6472dd8 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560be6472e60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560be6472e48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560be6472df8 <col:38> '_Bool' lvalue Var 0x560be64719b8 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560be6472f10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560be6472ec8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560be6472e98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560be6472f40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560be6472f28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560be6472ef0 <col:66> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560be6473288 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560be6472fc0 <col:3> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560be6473270 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560be6473240 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560be6473160 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560be6473080 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560be6473038 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560be6473020 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560be6472fe0 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560be6473068 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560be6473050 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560be6473000 <col:38> '_Bool' lvalue Var 0x560be64719b8 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560be6473140 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560be64730f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560be64730e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560be64730a0 <col:56> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560be6473128 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560be6473110 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560be64730c0 <col:74> '_Bool' lvalue Var 0x560be6471bf0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560be64731f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560be64731b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560be6473180 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560be6473228 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560be6473210 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560be64731d8 <col:102> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560be6473490 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560be64732a8 <col:3> '_Bool' lvalue Var 0x560be64719b8 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560be6473478 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560be6473448 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560be6473368 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560be6473320 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560be6473308 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560be64732c8 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560be6473350 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560be6473338 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560be64732e8 <col:38> '_Bool' lvalue Var 0x560be64719b8 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560be6473400 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560be64733b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560be6473388 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560be6473430 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560be6473418 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560be64733e0 <col:66> '_Bool' lvalue Var 0x560be64719b8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560be6473778 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560be64734b0 <col:3> '_Bool' lvalue Var 0x560be6471bf0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560be6473760 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560be6473730 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560be6473650 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560be6473570 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560be6473528 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560be6473510 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560be64734d0 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560be6473558 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560be6473540 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560be64734f0 <col:38> '_Bool' lvalue Var 0x560be64719b8 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560be6473630 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560be64735e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560be64735d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560be6473590 <col:56> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560be6473618 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560be6473600 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560be64735b0 <col:74> '_Bool' lvalue Var 0x560be6471bf0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560be64736e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560be64736a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560be6473670 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560be6473718 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560be6473700 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560be64736c8 <col:102> '_Bool' lvalue Var 0x560be6471bf0 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x560be64737d0 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560be64737b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6473798 <col:3> 'void ()' Function 0x560be6417f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560be6473828 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560be6473810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be64737f0 <col:3> 'void ()' Function 0x560be6417e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560be64738e0 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560be6473848 <col:3> 'int' lvalue Var 0x560be6471120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560be64738c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560be64738a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560be6473868 <col:22> 'int' lvalue Var 0x560be6471120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560be6473888 <col:41> 'int' 1
|   |-CallExpr 0x560be6473938 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560be6473920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6473900 <col:3> 'void ()' Function 0x560be6417f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560be64739e8 <line:730:3, col:36>
|     `-CallExpr 0x560be64739c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560be64739b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560be6473958 <col:10> 'void *(void)' Function 0x560be6417958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560be6473bb8 prev 0x560be6470c48 <line:732:1, line:751:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x560be6473b20 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560be6474df0 <line:733:1, line:751:1>
|   |-CallExpr 0x560be6473c98 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560be6473c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6473c60 <col:3> 'void ()' Function 0x560be6417e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560be6473d10 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560be6473cb8 <col:3> 'int' lvalue Var 0x560be6471240 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x560be6473cf8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560be6473cd8 <col:25> 'int' lvalue Var 0x560be6471570 'x' 'int'
|   |-CallExpr 0x560be6473d68 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560be6473d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6473d30 <col:3> 'void ()' Function 0x560be6417f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560be6473dc0 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560be6473da8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6473d88 <col:3> 'void ()' Function 0x560be6417e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560be6473e20 <line:738:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560be6473de0 <col:3> 'int' lvalue Var 0x560be6471690 'y' 'int'
|   | `-IntegerLiteral 0x560be6473e00 <col:7> 'int' 1
|   |-CallExpr 0x560be6473e78 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560be6473e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6473e40 <col:3> 'void ()' Function 0x560be6417f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560be6473ed0 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560be6473eb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6473e98 <col:3> 'void ()' Function 0x560be6417e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560be64741b8 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560be6473ef0 <col:3> 'int' lvalue Var 0x560be64717b0 'z' 'int'
|   | `-ConditionalOperator 0x560be6474188 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560be6473fb0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560be6473f68 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560be6473f50 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560be6473f10 <col:7> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560be6473f98 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560be6473f80 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560be6473f30 <col:25> '_Bool' lvalue Var 0x560be6471a30 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x560be6474170 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560be6473fd0 <col:42> 'int' lvalue Var 0x560be6471e58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560be6474150 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560be6474120 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560be6474090 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560be6474048 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560be6474030 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560be6473ff0 <col:55> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560be6474078 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560be6474060 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560be6474010 <col:73> '_Bool' lvalue Var 0x560be6471c68 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560be64740f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560be64740b0 <col:90> 'int' lvalue Var 0x560be6471f50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560be6474108 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560be64740d0 <col:102> 'int' lvalue Var 0x560be64717b0 'z' 'int'
|   |-BinaryOperator 0x560be64743c0 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560be64741d8 <col:3> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560be64743a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560be6474378 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560be6474298 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560be6474250 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560be6474238 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560be64741f8 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560be6474280 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560be6474268 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560be6474218 <col:38> '_Bool' lvalue Var 0x560be6471a30 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560be6474330 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560be64742e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560be64742b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560be6474360 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560be6474348 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560be6474310 <col:66> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560be64746a8 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560be64743e0 <col:3> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560be6474690 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560be6474660 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560be6474580 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560be64744a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560be6474458 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560be6474440 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560be6474400 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560be6474488 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560be6474470 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560be6474420 <col:38> '_Bool' lvalue Var 0x560be6471a30 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560be6474560 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560be6474518 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560be6474500 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560be64744c0 <col:56> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560be6474548 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560be6474530 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560be64744e0 <col:74> '_Bool' lvalue Var 0x560be6471c68 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560be6474618 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560be64745d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560be64745a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560be6474648 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560be6474630 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560be64745f8 <col:102> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560be64748b0 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560be64746c8 <col:3> '_Bool' lvalue Var 0x560be6471a30 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560be6474898 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560be6474868 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560be6474788 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560be6474740 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560be6474728 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560be64746e8 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560be6474770 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560be6474758 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560be6474708 <col:38> '_Bool' lvalue Var 0x560be6471a30 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560be6474820 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560be64747d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560be64747a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560be6474850 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560be6474838 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560be6474800 <col:66> '_Bool' lvalue Var 0x560be6471a30 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560be6474ba8 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560be64748d0 <col:3> '_Bool' lvalue Var 0x560be6471c68 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560be6474b90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560be6474b60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560be6474a70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560be6474990 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560be6474948 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560be6474930 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560be64748f0 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560be6474978 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560be6474960 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560be6474910 <col:38> '_Bool' lvalue Var 0x560be6471a30 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560be6474a50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560be6474a08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560be64749f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560be64749b0 <col:56> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560be6474a38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560be6474a20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560be64749d0 <col:74> '_Bool' lvalue Var 0x560be6471c68 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560be6474b08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560be6474ac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560be6474a90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560be6474b48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560be6474b30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560be6474ae8 <col:102> '_Bool' lvalue Var 0x560be6471c68 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x560be6474c00 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560be6474be8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6474bc8 <col:3> 'void ()' Function 0x560be6417f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560be6474c58 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560be6474c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6474c20 <col:3> 'void ()' Function 0x560be6417e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560be6474d10 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560be6474c78 <col:3> 'int' lvalue Var 0x560be6471120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560be6474cf0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560be6474cd8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560be6474c98 <col:22> 'int' lvalue Var 0x560be6471120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560be6474cb8 <col:41> 'int' 1
|   |-CallExpr 0x560be6474d68 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560be6474d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6474d30 <col:3> 'void ()' Function 0x560be6417f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560be6474de0 <line:750:3, col:36>
|     `-CallExpr 0x560be6474dc0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560be6474da8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560be6474d88 <col:10> 'void *(void)' Function 0x560be6417958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560be6474f38 prev 0x560be6470da0 <line:752:1, line:771:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x560be6474ea0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560be6476178 <line:753:1, line:771:1>
|   |-CallExpr 0x560be6475018 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560be6475000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6474fe0 <col:3> 'void ()' Function 0x560be6417e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560be6475090 <line:755:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560be6475038 <col:3> 'int' lvalue Var 0x560be6471360 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x560be6475078 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560be6475058 <col:25> 'int' lvalue Var 0x560be6471690 'y' 'int'
|   |-CallExpr 0x560be64750e8 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560be64750d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be64750b0 <col:3> 'void ()' Function 0x560be6417f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560be6475140 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560be6475128 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6475108 <col:3> 'void ()' Function 0x560be6417e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560be64751a0 <line:758:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560be6475160 <col:3> 'int' lvalue Var 0x560be64717b0 'z' 'int'
|   | `-IntegerLiteral 0x560be6475180 <col:7> 'int' 1
|   |-CallExpr 0x560be64751f8 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560be64751e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be64751c0 <col:3> 'void ()' Function 0x560be6417f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560be6475250 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560be6475238 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6475218 <col:3> 'void ()' Function 0x560be6417e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560be6475538 <line:761:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560be6475270 <col:3> 'int' lvalue Var 0x560be64717b0 'z' 'int'
|   | `-ConditionalOperator 0x560be6475508 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560be6475330 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560be64752e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560be64752d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560be6475290 <col:7> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560be6475318 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560be6475300 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560be64752b0 <col:25> '_Bool' lvalue Var 0x560be6471b00 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560be64754f0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560be6475350 <col:42> 'int' lvalue Var 0x560be6471e58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560be64754d0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560be64754a0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560be6475410 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560be64753c8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560be64753b0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560be6475370 <col:55> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560be64753f8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560be64753e0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560be6475390 <col:73> '_Bool' lvalue Var 0x560be6471ce0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560be6475470 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560be6475430 <col:90> 'int' lvalue Var 0x560be6471f50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560be6475488 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560be6475450 <col:102> 'int' lvalue Var 0x560be64717b0 'z' 'int'
|   |-BinaryOperator 0x560be6475740 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560be6475558 <col:3> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560be6475728 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560be64756f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560be6475618 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560be64755d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560be64755b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560be6475578 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560be6475600 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560be64755e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560be6475598 <col:38> '_Bool' lvalue Var 0x560be6471b00 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560be64756b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560be6475668 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560be6475638 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560be64756e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560be64756c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560be6475690 <col:66> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560be6475a28 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560be6475760 <col:3> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560be6475a10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560be64759e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560be6475900 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560be6475820 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560be64757d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560be64757c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560be6475780 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560be6475808 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560be64757f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560be64757a0 <col:38> '_Bool' lvalue Var 0x560be6471b00 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560be64758e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560be6475898 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560be6475880 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560be6475840 <col:56> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560be64758c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560be64758b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560be6475860 <col:74> '_Bool' lvalue Var 0x560be6471ce0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560be6475998 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560be6475950 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560be6475920 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560be64759c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560be64759b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560be6475978 <col:102> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560be6475c48 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560be6475a48 <col:3> '_Bool' lvalue Var 0x560be6471b00 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560be6475c30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560be6475c00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560be6475b08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560be6475ac0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560be6475aa8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560be6475a68 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560be6475af0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560be6475ad8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560be6475a88 <col:38> '_Bool' lvalue Var 0x560be6471b00 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560be6475bb8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560be6475b70 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560be6475b40 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560be6475be8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560be6475bd0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560be6475b98 <col:66> '_Bool' lvalue Var 0x560be6471b00 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560be6475f30 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560be6475c68 <col:3> '_Bool' lvalue Var 0x560be6471ce0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560be6475f18 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560be6475ee8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560be6475e08 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560be6475d28 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560be6475ce0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560be6475cc8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560be6475c88 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560be6475d10 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560be6475cf8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560be6475ca8 <col:38> '_Bool' lvalue Var 0x560be6471b00 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560be6475de8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560be6475da0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560be6475d88 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560be6475d48 <col:56> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560be6475dd0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560be6475db8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560be6475d68 <col:74> '_Bool' lvalue Var 0x560be6471ce0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560be6475ea0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560be6475e58 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560be6475e28 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560be6475ed0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560be6475eb8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560be6475e80 <col:102> '_Bool' lvalue Var 0x560be6471ce0 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x560be6475f88 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560be6475f70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6475f50 <col:3> 'void ()' Function 0x560be6417f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560be6475fe0 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560be6475fc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be6475fa8 <col:3> 'void ()' Function 0x560be6417e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560be6476098 <line:768:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560be6476000 <col:3> 'int' lvalue Var 0x560be6471120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560be6476078 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560be6476060 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560be6476020 <col:22> 'int' lvalue Var 0x560be6471120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560be6476040 <col:41> 'int' 1
|   |-CallExpr 0x560be64760f0 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560be64760d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560be64760b8 <col:3> 'void ()' Function 0x560be6417f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560be6476168 <line:770:3, col:36>
|     `-CallExpr 0x560be6476148 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560be6476130 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560be6476110 <col:10> 'void *(void)' Function 0x560be6417958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560be6476230 prev 0x560be6470e68 <line:772:1, line:774:1> line:772:6 fence 'void ()'
| `-CompoundStmt 0x560be64762d0 <line:773:1, line:774:1>
|-FunctionDecl 0x560be6476300 prev 0x560be6470f28 <line:775:1, line:777:1> line:775:6 isync 'void ()'
| `-CompoundStmt 0x560be64763a0 <line:776:1, line:777:1>
|-FunctionDecl 0x560be64763d0 prev 0x560be6470fe8 <line:778:1, line:780:1> line:778:6 lwfence 'void ()'
| `-CompoundStmt 0x560be6476470 <line:779:1, line:780:1>
`-FunctionDecl 0x560be64764d8 <line:781:1, line:818:1> line:781:5 main 'int ()'
  `-CompoundStmt 0x560be647ab90 <line:782:1, line:818:1>
    |-DeclStmt 0x560be64765f0 <line:783:3, col:18>
    | `-VarDecl 0x560be6476588 <col:3, col:13> col:13 used t1972 'pthread_t':'unsigned long'
    |-CallExpr 0x560be64767f8 <line:784:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560be64767e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560be6476608 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560be6458488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560be6476648 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560be6476628 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560be6476588 't1972' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560be6476838 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560be64766c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560be6476698 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560be6476660 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560be6476850 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560be64766e0 <col:39> 'void *(void *)' Function 0x560be64721d0 'P0' 'void *(void *)'
    | `-ParenExpr 0x560be6476760 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560be6476738 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560be6476700 <col:52> 'int' 0
    |-DeclStmt 0x560be64768e0 <line:785:3, col:18>
    | `-VarDecl 0x560be6476878 <col:3, col:13> col:13 used t1973 'pthread_t':'unsigned long'
    |-CallExpr 0x560be6476a88 <line:786:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560be6476a70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560be64768f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560be6458488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560be6476938 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560be6476918 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560be6476878 't1973' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560be6476ac8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560be64769b0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560be6476988 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560be6476950 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560be6476ae0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560be64769d0 <col:39> 'void *(void *)' Function 0x560be6473bb8 'P1' 'void *(void *)'
    | `-ParenExpr 0x560be6476a50 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560be6476a28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560be64769f0 <col:52> 'int' 0
    |-DeclStmt 0x560be6476bb8 <line:787:3, col:18>
    | `-VarDecl 0x560be6476b50 <col:3, col:13> col:13 used t1974 'pthread_t':'unsigned long'
    |-CallExpr 0x560be6476d60 <line:788:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560be6476d48 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560be6476bd0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560be6458488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560be6476c10 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560be6476bf0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560be6476b50 't1974' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560be6476da0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560be6476c88 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560be6476c60 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560be6476c28 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560be6476db8 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560be6476ca8 <col:39> 'void *(void *)' Function 0x560be6474f38 'P2' 'void *(void *)'
    | `-ParenExpr 0x560be6476d28 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560be6476d00 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560be6476cc8 <col:52> 'int' 0
    |-CallExpr 0x560be6476e08 <line:789:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560be6476df0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560be6476dd0 <col:3> 'void ()' Function 0x560be6417e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560be6476ed8 <line:790:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x560be6476e28 <col:3> '_Bool' lvalue Var 0x560be64713f8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x560be6476ec0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x560be6476ea0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x560be6476e88 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x560be6476e48 <col:21> 'int' lvalue Var 0x560be6471120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x560be6476e68 <col:41> 'int' 3
    |-CallExpr 0x560be6476f30 <line:791:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560be6476f18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560be6476ef8 <col:3> 'void ()' Function 0x560be6417f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560be6476fa8 <line:792:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560be6476f90 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560be6476f50 <col:3> 'void (int)' Function 0x560be6417790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x560be6476fe8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560be6476fd0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560be6476f70 <col:21> '_Bool' lvalue Var 0x560be64713f8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x560be6477038 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560be6477020 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560be6477000 <col:3> 'void ()' Function 0x560be6417e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560be6477320 <line:794:3, col:103> 'int' '='
    | |-DeclRefExpr 0x560be6477058 <col:3> 'int' lvalue Var 0x560be64717b0 'z' 'int'
    | `-ConditionalOperator 0x560be64772f0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x560be6477118 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x560be64770d0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x560be64770b8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x560be6477078 <col:7> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x560be6477100 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x560be64770e8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560be6477098 <col:25> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560be64772d8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560be6477138 <col:42> 'int' lvalue Var 0x560be6471e58 'z$w_buff0' 'int'
    |   `-ParenExpr 0x560be64772b8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x560be6477288 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x560be64771f8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560be64771b0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560be6477198 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560be6477158 <col:55> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560be64771e0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560be64771c8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560be6477178 <col:73> '_Bool' lvalue Var 0x560be6471b78 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560be6477258 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560be6477218 <col:90> 'int' lvalue Var 0x560be6471f50 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x560be6477270 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560be6477238 <col:102> 'int' lvalue Var 0x560be64717b0 'z' 'int'
    |-BinaryOperator 0x560be6477528 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560be6477340 <col:3> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560be6477510 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560be64774e0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560be6477400 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560be64773b8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560be64773a0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560be6477360 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560be64773e8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560be64773d0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560be6477380 <col:38> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560be6477498 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560be6477450 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560be6477420 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560be64774c8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560be64774b0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560be6477478 <col:66> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560be6477810 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560be6477548 <col:3> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560be64777f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560be64777c8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560be64776e8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560be6477608 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560be64775c0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560be64775a8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560be6477568 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560be64775f0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560be64775d8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560be6477588 <col:38> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560be64776c8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560be6477680 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560be6477668 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560be6477628 <col:56> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560be64776b0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560be6477698 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560be6477648 <col:74> '_Bool' lvalue Var 0x560be6471b78 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560be6477780 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560be6477738 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560be6477708 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560be64777b0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560be6477798 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560be6477760 <col:102> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x560be6477a18 <line:797:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560be6477830 <col:3> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560be6477a00 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560be64779d0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560be64778f0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560be64778a8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560be6477890 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560be6477850 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560be64778d8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560be64778c0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560be6477870 <col:38> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560be6477988 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560be6477940 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560be6477910 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560be64779b8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560be64779a0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560be6477968 <col:66> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560be6477d28 <line:798:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560be6477a38 <col:3> '_Bool' lvalue Var 0x560be6471b78 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560be6477d10 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560be6477ce0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560be6477c00 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560be6477af8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560be6477ab0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560be6477a98 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560be6477a58 <col:20> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560be6477ae0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560be6477ac8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560be6477a78 <col:38> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560be6477be0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560be6477b98 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560be6477b80 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560be6477b18 <col:56> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560be6477bc8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560be6477bb0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560be6477b60 <col:74> '_Bool' lvalue Var 0x560be6471b78 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560be6477c98 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560be6477c50 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560be6477c20 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560be6477cc8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560be6477cb0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560be6477c78 <col:102> '_Bool' lvalue Var 0x560be6471b78 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x560be6477d80 <line:799:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560be6477d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560be6477d48 <col:3> 'void ()' Function 0x560be6417f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560be6477dd8 <line:800:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560be6477dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560be6477da0 <col:3> 'void ()' Function 0x560be6417e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560be6477e88 <line:801:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x560be6477df8 <col:3> '_Bool' lvalue Var 0x560be6472040 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x560be6477e70 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x560be6477e50 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x560be6477e38 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x560be6477e18 <col:19> 'void *(void)' Function 0x560be6417958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x560be6477f38 <line:802:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x560be6477ea8 <col:3> '_Bool' lvalue Var 0x560be64720b8 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x560be6477f20 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x560be6477f00 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x560be6477ee8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x560be6477ec8 <col:19> 'void *(void)' Function 0x560be6417958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x560be6477fb0 <line:803:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x560be6477f58 <col:3> '_Bool' lvalue Var 0x560be6471848 'z$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x560be6477f98 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x560be6477f78 <col:21> '_Bool' lvalue Var 0x560be64720b8 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x560be6478028 <line:804:3, col:15> 'int' '='
    | |-DeclRefExpr 0x560be6477fd0 <col:3> 'int' lvalue Var 0x560be64718c8 'z$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x560be6478010 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x560be6477ff0 <col:15> 'int' lvalue Var 0x560be64717b0 'z' 'int'
    |-BinaryOperator 0x560be6478460 <line:805:3, col:162> 'int' '='
    | |-DeclRefExpr 0x560be6478048 <col:3> 'int' lvalue Var 0x560be64717b0 'z' 'int'
    | `-ConditionalOperator 0x560be6478430 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x560be6478258 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x560be6478178 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x560be64780a0 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x560be6478088 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x560be6478068 <col:8> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x560be6478158 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x560be64780f0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x560be64780d8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x560be64780b8 <col:27> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x560be6478140 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x560be6478128 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x560be6478108 <col:46> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x560be6478238 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x560be64781d0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x560be64781b8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x560be6478198 <col:65> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x560be6478220 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x560be6478208 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x560be64781e8 <col:84> '_Bool' lvalue Var 0x560be6471b78 'z$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560be6478418 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560be6478278 <col:101> 'int' lvalue Var 0x560be64717b0 'z' 'int'
    |   `-ParenExpr 0x560be64783f8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x560be64783c8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x560be6478338 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560be64782f0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560be64782d8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560be6478298 <col:106> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560be6478320 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560be6478308 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560be64782b8 <col:124> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560be6478398 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560be6478358 <col:141> 'int' lvalue Var 0x560be6471e58 'z$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x560be64783b0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560be6478378 <col:153> 'int' lvalue Var 0x560be6471f50 'z$w_buff1' 'int'
    |-BinaryOperator 0x560be6478970 <line:806:3, col:208> 'int' '='
    | |-DeclRefExpr 0x560be6478480 <col:3> 'int' lvalue Var 0x560be6471e58 'z$w_buff0' 'int'
    | `-ConditionalOperator 0x560be6478940 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x560be6478910 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560be64788f8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560be64784a0 <col:15> '_Bool' lvalue Var 0x560be64720b8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x560be6478928 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560be64784c0 <col:31> 'int' lvalue Var 0x560be6471e58 'z$w_buff0' 'int'
    |   `-ParenExpr 0x560be64788d8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x560be64788a8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x560be64786d0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x560be64785f0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x560be6478518 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x560be6478500 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x560be64784e0 <col:45> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x560be64785d0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x560be6478568 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x560be6478550 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x560be6478530 <col:64> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x560be64785b8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x560be64785a0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x560be6478580 <col:83> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x560be64786b0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x560be6478648 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x560be6478630 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x560be6478610 <col:102> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x560be6478698 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x560be6478680 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x560be6478660 <col:121> '_Bool' lvalue Var 0x560be6471b78 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560be6478890 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560be64786f0 <col:138> 'int' lvalue Var 0x560be6471e58 'z$w_buff0' 'int'
    |       `-ParenExpr 0x560be6478870 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x560be6478840 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x560be64787b0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x560be6478768 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x560be6478750 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x560be6478710 <col:151> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x560be6478798 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x560be6478780 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x560be6478730 <col:169> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x560be6478810 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560be64787d0 <col:186> 'int' lvalue Var 0x560be6471e58 'z$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x560be6478828 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x560be64787f0 <col:198> 'int' lvalue Var 0x560be6471e58 'z$w_buff0' 'int'
    |-BinaryOperator 0x560be6478e98 <line:807:3, col:208> 'int' '='
    | |-DeclRefExpr 0x560be6478990 <col:3> 'int' lvalue Var 0x560be6471f50 'z$w_buff1' 'int'
    | `-ConditionalOperator 0x560be6478e68 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x560be6478e38 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560be6478e20 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560be64789b0 <col:15> '_Bool' lvalue Var 0x560be64720b8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x560be6478e50 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560be64789d0 <col:31> 'int' lvalue Var 0x560be6471f50 'z$w_buff1' 'int'
    |   `-ParenExpr 0x560be6478e00 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x560be6478dd0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x560be6478bf8 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x560be6478b00 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x560be6478a28 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x560be6478a10 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x560be64789f0 <col:45> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x560be6478ae0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x560be6478a78 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x560be6478a60 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x560be6478a40 <col:64> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x560be6478ac8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x560be6478ab0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x560be6478a90 <col:83> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x560be6478bd8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x560be6478b70 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x560be6478b40 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x560be6478b20 <col:102> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x560be6478bc0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x560be6478ba8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x560be6478b88 <col:121> '_Bool' lvalue Var 0x560be6471b78 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560be6478db8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560be6478c18 <col:138> 'int' lvalue Var 0x560be6471f50 'z$w_buff1' 'int'
    |       `-ParenExpr 0x560be6478d98 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x560be6478d68 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x560be6478cd8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x560be6478c90 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x560be6478c78 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x560be6478c38 <col:151> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x560be6478cc0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x560be6478ca8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x560be6478c58 <col:169> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x560be6478d38 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560be6478cf8 <col:186> 'int' lvalue Var 0x560be6471f50 'z$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x560be6478d50 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x560be6478d18 <col:198> 'int' lvalue Var 0x560be6471f50 'z$w_buff1' 'int'
    |-BinaryOperator 0x560be6479440 <line:808:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x560be6478eb8 <col:3> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560be6479428 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560be64793f8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x560be64793b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560be6479398 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560be6478ed8 <col:20> '_Bool' lvalue Var 0x560be64720b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560be64793e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560be64793c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560be6478ef8 <col:36> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x560be6479378 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x560be6479348 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x560be6479108 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560be6479028 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560be6478f50 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560be6478f38 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560be6478f18 <col:55> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560be6479008 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560be6478fa0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560be6478f88 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560be6478f68 <col:74> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560be6478ff0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560be6478fd8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560be6478fb8 <col:93> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560be64790e8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560be6479080 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560be6479068 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560be6479048 <col:112> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560be64790d0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560be64790b8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560be6479098 <col:131> '_Bool' lvalue Var 0x560be6471b78 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560be6479330 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560be6479318 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560be6479128 <col:148> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x560be64792f8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x560be64792c8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x560be64791e8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560be64791a0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560be6479188 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560be6479148 <col:166> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560be64791d0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560be64791b8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560be6479168 <col:184> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560be6479280 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560be6479238 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560be6479208 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560be64792b0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x560be6479298 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x560be6479260 <col:212> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560be6479a08 <line:809:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x560be6479460 <col:3> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560be64799f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560be64799c0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x560be6479978 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560be6479960 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560be6479480 <col:20> '_Bool' lvalue Var 0x560be64720b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560be64799a8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560be6479990 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560be64794a0 <col:36> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x560be6479940 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x560be6479910 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x560be64796b0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560be64795d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560be64794f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560be64794e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560be64794c0 <col:55> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560be64795b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560be6479548 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560be6479530 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560be6479510 <col:74> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560be6479598 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560be6479580 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560be6479560 <col:93> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560be6479690 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560be6479628 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560be6479610 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560be64795f0 <col:112> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560be6479678 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560be6479660 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560be6479640 <col:131> '_Bool' lvalue Var 0x560be6471b78 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560be64798f8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560be64798e0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560be64796d0 <col:148> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x560be64798c0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x560be6479890 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x560be6479790 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560be6479748 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560be6479730 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560be64796f0 <col:166> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560be6479778 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560be6479760 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560be6479710 <col:184> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560be6479860 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560be64797e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560be64797b0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560be6479878 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x560be6479838 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x560be6479808 <col:219> 'int' 0
    |-BinaryOperator 0x560be6479fd0 <line:810:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x560be6479a28 <col:3> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560be6479fb8 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560be6479f88 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x560be6479f40 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560be6479f28 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560be6479a48 <col:20> '_Bool' lvalue Var 0x560be64720b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560be6479f70 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560be6479f58 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560be6479a68 <col:36> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x560be6479f08 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x560be6479ed8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x560be6479c98 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560be6479bb8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560be6479ac0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560be6479aa8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560be6479a88 <col:55> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560be6479b98 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560be6479b10 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560be6479af8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560be6479ad8 <col:74> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560be6479b80 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560be6479b48 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560be6479b28 <col:93> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560be6479c78 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560be6479c10 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560be6479bf8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560be6479bd8 <col:112> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560be6479c60 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560be6479c48 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560be6479c28 <col:131> '_Bool' lvalue Var 0x560be6471b78 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560be6479ec0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560be6479ea8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560be6479cb8 <col:148> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x560be6479e88 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x560be6479e58 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x560be6479d78 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560be6479d30 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560be6479d18 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560be6479cd8 <col:166> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560be6479d60 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560be6479d48 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560be6479cf8 <col:184> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560be6479e10 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560be6479dc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560be6479d98 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560be6479e40 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x560be6479e28 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x560be6479df0 <col:212> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560be647a598 <line:811:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x560be6479ff0 <col:3> '_Bool' lvalue Var 0x560be6471b78 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560be647a580 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560be647a550 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x560be647a508 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560be647a4f0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560be647a010 <col:20> '_Bool' lvalue Var 0x560be64720b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560be647a538 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560be647a520 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560be647a030 <col:36> '_Bool' lvalue Var 0x560be6471b78 'z$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x560be647a4d0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x560be647a4a0 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x560be647a240 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560be647a160 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560be647a088 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560be647a070 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560be647a050 <col:55> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560be647a140 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560be647a0d8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560be647a0c0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560be647a0a0 <col:74> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560be647a128 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560be647a110 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560be647a0f0 <col:93> '_Bool' lvalue Var 0x560be6471fc8 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560be647a220 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560be647a1b8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560be647a1a0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560be647a180 <col:112> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560be647a208 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560be647a1f0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560be647a1d0 <col:131> '_Bool' lvalue Var 0x560be6471b78 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560be647a488 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560be647a470 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560be647a260 <col:148> '_Bool' lvalue Var 0x560be6471b78 'z$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x560be647a450 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x560be647a420 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x560be647a320 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560be647a2d8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560be647a2c0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560be647a280 <col:166> '_Bool' lvalue Var 0x560be6471ed0 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560be647a308 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560be647a2f0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560be647a2a0 <col:184> '_Bool' lvalue Var 0x560be6471940 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560be647a3f0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560be647a370 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560be647a340 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560be647a408 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x560be647a3c8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x560be647a398 <col:219> 'int' 0
    |-BinaryOperator 0x560be647a7d0 <line:812:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x560be647a5b8 <col:3> '_Bool' lvalue Var 0x560be6471470 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x560be647a7b8 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x560be647a7a0 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x560be647a780 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x560be647a760 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x560be647a6c8 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x560be647a630 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x560be647a618 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x560be647a5d8 <col:23> 'int' lvalue Var 0x560be64717b0 'z' 'int'
    |         | | `-IntegerLiteral 0x560be647a5f8 <col:28> 'int' 2
    |         | `-BinaryOperator 0x560be647a6a8 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x560be647a690 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x560be647a650 <col:33> 'int' lvalue Var 0x560be6471240 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x560be647a670 <col:56> 'int' 1
    |         `-BinaryOperator 0x560be647a740 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x560be647a728 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560be647a6e8 <col:61> 'int' lvalue Var 0x560be6471360 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x560be647a708 <col:84> 'int' 1
    |-BinaryOperator 0x560be647a900 <line:813:3, col:37> 'int' '='
    | |-DeclRefExpr 0x560be647a7f0 <col:3> 'int' lvalue Var 0x560be64717b0 'z' 'int'
    | `-ConditionalOperator 0x560be647a8d0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x560be647a888 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560be647a870 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560be647a810 <col:7> '_Bool' lvalue Var 0x560be6471848 'z$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x560be647a8a0 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560be647a830 <col:25> 'int' lvalue Var 0x560be64718c8 'z$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x560be647a8b8 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x560be647a850 <col:37> 'int' lvalue Var 0x560be64717b0 'z' 'int'
    |-BinaryOperator 0x560be647a998 <line:814:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x560be647a920 <col:3> '_Bool' lvalue Var 0x560be6471848 'z$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x560be647a970 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x560be647a940 <col:28> 'int' 0
    |-CallExpr 0x560be647a9f0 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560be647a9d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560be647a9b8 <col:3> 'void ()' Function 0x560be6417f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560be647aa68 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560be647aa50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560be647aa10 <col:3> 'void (int)' Function 0x560be6417bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x560be647aaa8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560be647aa90 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560be647aa30 <col:21> '_Bool' lvalue Var 0x560be6471470 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x560be647aae0 <line:817:3, col:10>
      `-IntegerLiteral 0x560be647aac0 <col:10> 'int' 0
