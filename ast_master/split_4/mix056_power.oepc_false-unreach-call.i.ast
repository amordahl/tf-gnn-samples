TranslationUnitDecl 0x5568c3a52e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5568c3a536d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5568c3a533b0 '__int128'
|-TypedefDecl 0x5568c3a53748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5568c3a533d0 'unsigned __int128'
|-TypedefDecl 0x5568c3a53a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5568c3a53820 'struct __NSConstantString_tag'
|   `-Record 0x5568c3a537a0 '__NSConstantString_tag'
|-TypedefDecl 0x5568c3a53af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5568c3a53ab0 'char *'
|   `-BuiltinType 0x5568c3a52eb0 'char'
|-TypedefDecl 0x5568c3a92650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5568c3a53d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5568c3a53bd0 'struct __va_list_tag'
|     `-Record 0x5568c3a53b50 '__va_list_tag'
|-FunctionDecl 0x5568c3a92790 <./split_4/mix056_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5568c3a926c0 <col:31> col:34 'int'
|-FunctionDecl 0x5568c3a92958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5568c3a92a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5568c3a92bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5568c3a92b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5568c3a92df8 <col:40, col:99>
|   |-IfStmt 0x5568c3a92dc8 <col:42, col:88>
|   | |-UnaryOperator 0x5568c3a92ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5568c3a92c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5568c3a92c70 <col:47> 'int' lvalue ParmVar 0x5568c3a92b38 'expression' 'int'
|   | `-CompoundStmt 0x5568c3a92db0 <col:59, col:88>
|   |   `-LabelStmt 0x5568c3a92d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5568c3a92d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5568c3a92d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5568c3a92cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5568c3a92a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5568c3a92de0 <col:89>
|   `-ReturnStmt 0x5568c3a92de8 <col:91>
|-FunctionDecl 0x5568c3a92e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5568c3a92f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5568c3a93280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5568c3a92fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5568c3a93038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5568c3a930b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5568c3a93138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5568c3a93340 <line:10:22>
|-FunctionDecl 0x5568c3ab9390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5568c3a933b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5568c3a93430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5568c3a934b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5568c3a93530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5568c3ab9450 <line:13:22>
|-FunctionDecl 0x5568c3ab9700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5568c3ab94c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5568c3ab9540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5568c3ab95c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5568c3ab97b8 <line:15:22>
|-TypedefDecl 0x5568c3ab9828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5568c3a52f70 'unsigned char'
|-TypedefDecl 0x5568c3ab9898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5568c3a52f90 'unsigned short'
|-TypedefDecl 0x5568c3ab9908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5568c3a52fb0 'unsigned int'
|-TypedefDecl 0x5568c3ab9978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-TypedefDecl 0x5568c3ab99e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5568c3a52ed0 'signed char'
|-TypedefDecl 0x5568c3ab9a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5568c3a52f70 'unsigned char'
|-TypedefDecl 0x5568c3ab9ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5568c3a52ef0 'short'
|-TypedefDecl 0x5568c3ab9b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5568c3a52f90 'unsigned short'
|-TypedefDecl 0x5568c3ab9ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5568c3a52f10 'int'
|-TypedefDecl 0x5568c3ab9c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5568c3a52fb0 'unsigned int'
|-TypedefDecl 0x5568c3ab9c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3ab9cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-TypedefDecl 0x5568c3ab9d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3ab9dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-TypedefDecl 0x5568c3ab9e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-TypedefDecl 0x5568c3ab9eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5568c3a52fb0 'unsigned int'
|-TypedefDecl 0x5568c3ab9f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5568c3a52fb0 'unsigned int'
|-TypedefDecl 0x5568c3ab9f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-TypedefDecl 0x5568c3aba008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-TypedefDecl 0x5568c3aba078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5568c3a52fb0 'unsigned int'
|-TypedefDecl 0x5568c3aba0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-TypedefDecl 0x5568c3aba158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3aba1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3aba238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5568c3a52f10 'int'
|-RecordDecl 0x5568c3aba290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5568c3aba408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5568c3aba4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5568c3aba460 'struct __fsid_t' sugar
|   `-RecordType 0x5568c3aba310 '__fsid_t'
|     `-Record 0x5568c3aba290 ''
|-TypedefDecl 0x5568c3aba548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3aba5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-TypedefDecl 0x5568c3aba628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-TypedefDecl 0x5568c3aba698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5568c3a52fb0 'unsigned int'
|-TypedefDecl 0x5568c3aba708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3aba778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5568c3a52fb0 'unsigned int'
|-TypedefDecl 0x5568c3aba7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3aba858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5568c3a52f10 'int'
|-TypedefDecl 0x5568c3aba8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5568c3a52f10 'int'
|-TypedefDecl 0x5568c3aba938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5568c3a52f10 'int'
|-TypedefDecl 0x5568c3aba9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5568c3a53630 'void *'
|   `-BuiltinType 0x5568c3a52e70 'void'
|-TypedefDecl 0x5568c3abaa18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3abaa88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3abaaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3abab68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-TypedefDecl 0x5568c3ababd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-TypedefDecl 0x5568c3abac48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-TypedefDecl 0x5568c3abacb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-TypedefDecl 0x5568c3abad28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3abad98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3abae08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3abae78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-TypedefDecl 0x5568c3abaf08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5568c3abaed0 '__off64_t' sugar
|   |-Typedef 0x5568c3aba1c8 '__off64_t'
|   `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3abb000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5568c3abafc0 '__quad_t *'
|   `-TypedefType 0x5568c3abaf60 '__quad_t' sugar
|     |-Typedef 0x5568c3ab9d68 '__quad_t'
|     `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3abb070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5568c3a53ab0 'char *'
|   `-BuiltinType 0x5568c3a52eb0 'char'
|-TypedefDecl 0x5568c3abb0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3abb150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5568c3a52fb0 'unsigned int'
|-FunctionDecl 0x5568c3abb298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5568c3abb1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5568c3abc5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5568c3abc5d8 <line:72:3, col:34>
|     `-CallExpr 0x5568c3abc598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5568c3abc580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5568c3abc510 <col:10> '<builtin fn type>' Function 0x5568c3abc380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5568c3abc5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5568c3abc530 <col:29> 'unsigned int' lvalue ParmVar 0x5568c3abb1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5568c3abc380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5568c3abc420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5568c3abc490 <col:10> Implicit
| `-ConstAttr 0x5568c3abc4e8 <col:10> Implicit
|-FunctionDecl 0x5568c3abc740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5568c3abc638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5568c3abca58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5568c3abca48 <line:77:3, col:34>
|     `-CallExpr 0x5568c3abca08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5568c3abc9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5568c3abc978 <col:10> '<builtin fn type>' Function 0x5568c3abc7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5568c3abca30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5568c3abc998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5568c3abc638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5568c3abc7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5568c3abc888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5568c3abc8f8 <col:10> Implicit
| `-ConstAttr 0x5568c3abc950 <col:10> Implicit
|-TypedefDecl 0x5568c3abca88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-TypedefDecl 0x5568c3abcb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5568c3abcae0 '__time_t' sugar
|   |-Typedef 0x5568c3aba708 '__time_t'
|   `-BuiltinType 0x5568c3a52f30 'long'
|-RecordDecl 0x5568c3abcb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5568c3abcc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5568c3abccb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5568c3abcd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5568c3abcd10 '__pid_t' sugar
|   |-Typedef 0x5568c3aba238 '__pid_t'
|   `-BuiltinType 0x5568c3a52f10 'int'
|-RecordDecl 0x5568c3abcda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5568c3abce60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5568c3abceb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5568c3abcf70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5568c3abcfd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-RecordDecl 0x5568c3abd030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5568c3abd2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5568c3abe3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5568c3abd310 'struct cpu_set_t' sugar
|   `-RecordType 0x5568c3abd0b0 'cpu_set_t'
|     `-Record 0x5568c3abd030 ''
|-FunctionDecl 0x5568c3abe678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5568c3abe448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5568c3abe550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5568c3abe728 <line:107:19>
|-FunctionDecl 0x5568c3abe900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5568c3abe790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5568c3abe9a8 <col:69>
|-FunctionDecl 0x5568c3abeb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5568c3abea10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5568c3abebc8 <col:64>
|-FunctionDecl 0x5568c3abee88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5568c3abec30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5568c3abed68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5568c3abef38 <line:113:22>
|-FunctionDecl 0x5568c3abf1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5568c3abefa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5568c3abf098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5568c3abf268 <col:88>
|-FunctionDecl 0x5568c3abf588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5568c3abf2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5568c3abf3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5568c3abf440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5568c3abf640 <col:62>
|-FunctionDecl 0x5568c3abf7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5568c3abf6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5568c3abf860 <col:63>
|-FunctionDecl 0x5568c3abf988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5568c3abfa28 <col:47>
|-FunctionDecl 0x5568c3abfb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5568c3abfa98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5568c3abfbd8 <col:69>
|-FunctionDecl 0x5568c3abfce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5568c3abfc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5568c3abfd88 <col:69>
|-FunctionDecl 0x5568c3ac0048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5568c3abfdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5568c3abff28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5568c3ac00f8 <col:88>
|-TypedefDecl 0x5568c3ac0188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5568c3ac0150 '__clock_t' sugar
|   |-Typedef 0x5568c3aba548 '__clock_t'
|   `-BuiltinType 0x5568c3a52f30 'long'
|-TypedefDecl 0x5568c3ac0218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5568c3ac01e0 '__clockid_t' sugar
|   |-Typedef 0x5568c3aba938 '__clockid_t'
|   `-BuiltinType 0x5568c3a52f10 'int'
|-TypedefDecl 0x5568c3ac02a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5568c3ac0270 '__timer_t' sugar
|   |-Typedef 0x5568c3aba9a8 '__timer_t'
|   `-PointerType 0x5568c3a53630 'void *'
|     `-BuiltinType 0x5568c3a52e70 'void'
|-RecordDecl 0x5568c3ac0300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5568c3ac03d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5568c3ac0440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5568c3ac04a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5568c3ac0510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5568c3ac0578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5568c3ac05e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5568c3ac0648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5568c3ac06b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5568c3ac0718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5568c3ac0780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5568c3ac07e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5568c3ac0838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5568c3ac0908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5568c3ac0978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5568c3ac0a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5568c3ac0bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5568c3ac0c90 <col:45>
|-FunctionDecl 0x5568c3ac0e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5568c3ac0d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5568c3ac0f18 <col:54>
|-FunctionDecl 0x5568c3ac1118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5568c3ac0f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5568c3ac0ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5568c3ac11c8 <line:157:22>
| `-ConstAttr 0x5568c3ac1220 <col:63>
|-FunctionDecl 0x5568c3ac2050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5568c3ac1318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5568c3ac20f8 <col:56>
|-FunctionDecl 0x5568c3ac24a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5568c3ac2168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5568c3ac21e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5568c3ac2260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5568c3ac2358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5568c3ac2560 <col:54>
|-RecordDecl 0x5568c3ac25b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5568c3ac2668 parent 0x5568c3a52e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5568c3ac28c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5568c3ac2968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5568c3ac29d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5568c3ac2a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5568c3ac2b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5568c3ac2c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5568c3ac2bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5568c3ac2b80 'struct __locale_struct' sugar
|     `-RecordType 0x5568c3ac2640 'struct __locale_struct'
|       `-Record 0x5568c3ac25b8 '__locale_struct'
|-TypedefDecl 0x5568c3ac2cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5568c3ac2cc0 '__locale_t' sugar
|   |-Typedef 0x5568c3ac2c48 '__locale_t'
|   `-PointerType 0x5568c3ac2bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5568c3ac2b80 'struct __locale_struct' sugar
|       `-RecordType 0x5568c3ac2640 'struct __locale_struct'
|         `-Record 0x5568c3ac25b8 '__locale_struct'
|-FunctionDecl 0x5568c3ac4110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5568c3ac2d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5568c3ac2de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5568c3ac2e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5568c3ac2ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5568c3ac2f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5568c3ac41d8 <col:40>
|-FunctionDecl 0x5568c3ac43c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5568c3ac42a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5568c3ac4470 <col:66>
|-FunctionDecl 0x5568c3ac4580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5568c3ac44d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5568c3ac4628 <col:69>
|-FunctionDecl 0x5568c3ac4858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5568c3ac4690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5568c3ac4720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5568c3ac4908 <col:52>
|-FunctionDecl 0x5568c3ac4ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5568c3ac4970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5568c3ac4a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5568c3ac4b60 <col:55>
|-FunctionDecl 0x5568c3ac4cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5568c3ac4be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5568c3ac4da0 <col:62>
|-FunctionDecl 0x5568c3ac4f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5568c3ac4e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5568c3ac4fc0 <col:60>
|-FunctionDecl 0x5568c3ac52b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5568c3ac5118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5568c3ac5198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5568c3ac5368 <col:44>
|-FunctionDecl 0x5568c3ac5578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5568c3ac53d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5568c3ac5450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5568c3ac5628 <col:49>
|-VarDecl 0x5568c3ac5728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5568c3ac57a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5568c3ac5828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5568c3ac58f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5568c3ac5a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5568c3ac5ac0 <col:42>
|-VarDecl 0x5568c3ac5b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5568c3ac5bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5568c3ac5d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5568c3ac5c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5568c3ac5de0 <col:57>
|-FunctionDecl 0x5568c3ac5ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5568c3ac5e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5568c3ac5f98 <col:56>
|-FunctionDecl 0x5568c3ac60d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5568c3ac6018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5568c3ac6178 <col:59>
|-FunctionDecl 0x5568c3ac6280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5568c3ac61e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5568c3ac6328 <col:48>
| `-ConstAttr 0x5568c3ac6380 <col:89>
|-FunctionDecl 0x5568c3ac65e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5568c3ac6438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5568c3ac64c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5568c3ac6848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5568c3ac66d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5568c3ac6768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5568c3ac68f8 <col:88>
|-FunctionDecl 0x5568c3ac6a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5568c3ac6960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5568c3ac69f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5568c3ac6b40 <col:88>
|-FunctionDecl 0x5568c3ac6d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5568c3ac6ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5568c3ac6c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5568c3ac6e08 <line:208:22>
|-FunctionDecl 0x5568c3ac7178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5568c3ac6e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5568c3ac6ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5568c3ac6f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5568c3ac7010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5568c3ac7478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5568c3ac7278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5568c3ac7350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5568c3ac7528 <col:85>
|-FunctionDecl 0x5568c3ac7918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5568c3ac7590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5568c3ac76c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5568c3ac77d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5568c3ac79d0 <col:52>
|-FunctionDecl 0x5568c3ac7b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5568c3ac7a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5568c3ac7bf0 <col:61>
|-FunctionDecl 0x5568c3ac80f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5568c3ac7c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5568c3ac7cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5568c3ac7e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5568c3ac7ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5568c3ac81b0 <col:62>
|-FunctionDecl 0x5568c3ac83c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5568c3ac8218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5568c3ac82a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5568c3ac8478 <line:221:22>
|-FunctionDecl 0x5568c3ac8578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5568c3ac84e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5568c3ac8620 <col:65>
|-TypedefDecl 0x5568c3ac8690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5568c3a52fd0 'unsigned long'
|-RecordDecl 0x5568c3ac86e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5568c3ac8830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5568c3ac8898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5568c3ac8948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5568c3ac88f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5568c3ac8770 'union pthread_attr_t'
|     `-Record 0x5568c3ac86e8 'pthread_attr_t'
|-RecordDecl 0x5568c3ac89a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5568c3ac8b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5568c3ac8b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5568c3ac8c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5568c3ac8be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5568c3ac8a20 'struct __pthread_internal_list'
|     `-Record 0x5568c3ac89a0 '__pthread_internal_list'
|-RecordDecl 0x5568c3ac8cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5568c3ac8d58 parent 0x5568c3a52e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5568c3ac8e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5568c3ac8e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5568c3ac8f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5568c3ac8f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5568c3ac8fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5568c3ac9038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5568c3acd110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5568c3acd1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5568c3acd2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5568c3acd318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5568c3acd4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5568c3acd440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5568c3ac8d30 'pthread_mutex_t'
|     `-Record 0x5568c3ac8cb0 ''
|-RecordDecl 0x5568c3acd510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5568c3acd650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5568c3acd6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5568c3acd770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5568c3acd710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5568c3acd590 'pthread_mutexattr_t'
|     `-Record 0x5568c3acd510 ''
|-RecordDecl 0x5568c3acd7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5568c3acd888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5568c3acd950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5568c3acd9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5568c3acda20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5568c3acda88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5568c3acdaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5568c3acdb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5568c3acdbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5568c3acdc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5568c3acdce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_4/mix056_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_4/mix056_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5568c3acddd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5568c3acde38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5568c3acdf70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5568c3acdf10 'union pthread_cond_t' sugar
|   `-RecordType 0x5568c3acd860 'pthread_cond_t'
|     `-Record 0x5568c3acd7e0 ''
|-RecordDecl 0x5568c3acdfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5568c3acf130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5568c3acf198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5568c3acf250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5568c3acf1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5568c3ace060 'pthread_condattr_t'
|     `-Record 0x5568c3acdfe0 ''
|-TypedefDecl 0x5568c3acf2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5568c3a52fb0 'unsigned int'
|-TypedefDecl 0x5568c3acf348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5568c3a52f10 'int'
|-RecordDecl 0x5568c3acf3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5568c3acf448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5568c3acf510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5568c3acf578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5568c3acf5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5568c3acf648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5568c3acf6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5568c3acf718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5568c3acf780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5568c3acf7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5568c3acf850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5568c3acf8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5568c3acf920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5568c3acf9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_4/mix056_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_4/mix056_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5568c3acfa78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5568c3acfae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5568c3acfc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5568c3acfbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5568c3acf420 'pthread_rwlock_t'
|     `-Record 0x5568c3acf3a0 ''
|-RecordDecl 0x5568c3acfca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5568c3acfde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5568c3acfe48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5568c3acff00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5568c3acfea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5568c3acfd20 'pthread_rwlockattr_t'
|     `-Record 0x5568c3acfca0 ''
|-TypedefDecl 0x5568c3acff88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5568c3a52f14 'volatile int' volatile
|   `-BuiltinType 0x5568c3a52f10 'int'
|-RecordDecl 0x5568c3acffe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5568c3ad1140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5568c3ad11a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5568c3ad1260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5568c3ad1200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5568c3ad0060 'pthread_barrier_t'
|     `-Record 0x5568c3acffe0 ''
|-RecordDecl 0x5568c3ad12d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5568c3ad13d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5568c3ad1438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5568c3ad14f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5568c3ad1490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5568c3ad1350 'pthread_barrierattr_t'
|     `-Record 0x5568c3ad12d0 ''
|-TypedefDecl 0x5568c3ad1608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5568c3ad15a0 'long [8]' 8 
|   `-BuiltinType 0x5568c3a52f30 'long'
|-EnumDecl 0x5568c3ad1660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5568c3ad1728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5568c3ad1778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5568c3ad17c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5568c3ad1898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5568c3ad18e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5568c3ad1938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5568c3ad1988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5568c3ad1a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5568c3ad19f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5568c3ad19d8 <col:26> 'int' EnumConstant 0x5568c3ad1898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5568c3ad1a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5568c3ad1a80 <col:29> 'int'
| |   `-DeclRefExpr 0x5568c3ad1a60 <col:29> 'int' EnumConstant 0x5568c3ad18e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5568c3ad1b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5568c3ad1b08 <col:30> 'int'
| |   `-DeclRefExpr 0x5568c3ad1ae8 <col:30> 'int' EnumConstant 0x5568c3ad1938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5568c3ad1ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5568c3ad1b90 <col:27> 'int'
|     `-DeclRefExpr 0x5568c3ad1b70 <col:27> 'int' EnumConstant 0x5568c3ad1a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5568c3ad1bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5568c3ad1cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5568c3ad1d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5568c3ad1d38 <col:30> 'int'
| |   `-DeclRefExpr 0x5568c3ad1d18 <col:30> 'int' EnumConstant 0x5568c3ad1cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5568c3ad1da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5568c3ad1e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5568c3ad1e10 <col:29> 'int'
|     `-DeclRefExpr 0x5568c3ad1df0 <col:29> 'int' EnumConstant 0x5568c3ad1da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5568c3ad1e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5568c3ad1f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5568c3ad1f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5568c3ad1fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5568c3ad2038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5568c3ad2150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5568c3ad21a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5568c3ad21f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5568c3ad2278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5568c3ad2260 <col:31> 'int'
|     `-DeclRefExpr 0x5568c3ad2240 <col:31> 'int' EnumConstant 0x5568c3ad2150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5568c3ad22c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5568c3ad2398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5568c3ad23e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5568c3ad2438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5568c3ad2508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5568c3ad2558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5568c3ad25a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5568c3ad2678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5568c3ad26c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5568c3ad2718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5568c3ad2958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5568c3ad29c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5568c3ad2a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5568c3ad2b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5568c3ad2b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5568c3ad2c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5568c3ad2cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5568c3ad2d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5568c3ad2dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5568c3ad2e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5568c3ad3488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5568c3ad2f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5568c3ad3030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568c3ad3270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5568c3ad32f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5568c3ad3548 <col:47>
| |-NonNullAttr 0x5568c3ad35a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5568c3ad35d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5568c3ad3700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5568c3ad3630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5568c3ad3958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5568c3ad37b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5568c3ad3838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5568c3ad3b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5568c3ad3a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5568c3ad3bd0 <col:60>
|-FunctionDecl 0x5568c3ad3d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5568c3ad3dc0 <col:54>
| `-ConstAttr 0x5568c3ad3e18 <col:95>
|-FunctionDecl 0x5568c3ad3fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5568c3ad3e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5568c3ad3ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5568c3ad4098 <line:394:19>
| `-ConstAttr 0x5568c3ad40f0 <col:60>
|-FunctionDecl 0x5568c3ad5b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5568c3ad59d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5568c3ad5bb0 <col:71>
| `-NonNullAttr 0x5568c3ad5c08 <col:112, col:126> 1
|-FunctionDecl 0x5568c3ad5d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5568c3ad5c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5568c3ad5db8 <line:397:22>
| `-NonNullAttr 0x5568c3ad5e10 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ad6038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5568c3ad5e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5568c3ad5ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5568c3ad60e8 <line:400:22>
| `-NonNullAttr 0x5568c3ad6140 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3ad6348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5568c3ad6188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5568c3ad6208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5568c3ad63f8 <line:403:22>
| `-NonNullAttr 0x5568c3ad6450 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ad66a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5568c3ad6498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5568c3ad6540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5568c3ad6758 <line:406:22>
| `-NonNullAttr 0x5568c3ad67b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3ad79e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5568c3ad67f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5568c3ad6870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5568c3ad7a98 <line:409:22>
| `-NonNullAttr 0x5568c3ad7af0 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ad7d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5568c3ad7b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568c3ad7bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5568c3ad7dd8 <line:412:22>
| `-NonNullAttr 0x5568c3ad7e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3ad8068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5568c3ad7e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568c3ad7f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5568c3ad8118 <col:37>
| `-NonNullAttr 0x5568c3ad8170 <col:78, col:95> 1 2
|-FunctionDecl 0x5568c3ad8358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568c3ad81b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568c3ad8238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5568c3ad8408 <line:418:22>
| `-NonNullAttr 0x5568c3ad8460 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3ad85e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5568c3ad84a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5568c3ad8528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5568c3ad8698 <line:420:22>
| `-NonNullAttr 0x5568c3ad86f0 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ad8898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568c3ad8738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568c3ad87b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5568c3ad8948 <line:423:22>
| `-NonNullAttr 0x5568c3ad89c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3ad8b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5568c3ad8a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5568c3ad8a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5568c3ad8bf8 <line:426:22>
| `-NonNullAttr 0x5568c3ad8c50 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ad8df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568c3ad8c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568c3ad8d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5568c3ad8ea8 <line:429:22>
| `-NonNullAttr 0x5568c3ad8f00 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3ad9088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5568c3ad8f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5568c3ad8fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5568c3ad9138 <line:431:22>
| `-NonNullAttr 0x5568c3ad9190 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ad93b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5568c3ad91d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568c3ad9258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5568c3ad9468 <line:434:22>
| |-NonNullAttr 0x5568c3ad94c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5568c3ad94f8 <col:100> "" ""
|-FunctionDecl 0x5568c3ad9708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5568c3ad9548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5568c3ad95c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5568c3ad97b8 <line:437:22>
| |-NonNullAttr 0x5568c3ad9810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5568c3ad9848 <col:97> "" ""
|-FunctionDecl 0x5568c3ad9a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5568c3ad9898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568c3ad9910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5568c3ad9af8 <line:440:22>
| `-NonNullAttr 0x5568c3ad9b50 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3ad9cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5568c3ad9b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5568c3ad9c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5568c3ad9d80 <line:443:22>
| `-NonNullAttr 0x5568c3ad9dd8 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ada0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5568c3ad9e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5568c3ad9ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5568c3ad9f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5568c3ada180 <line:447:22>
| `-NonNullAttr 0x5568c3ada1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5568c3ada488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5568c3ada230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5568c3ada2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5568c3ada328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5568c3ada540 <col:43>
| `-NonNullAttr 0x5568c3ada598 <col:84, col:98> 1
|-FunctionDecl 0x5568c3ada858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5568c3ada5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5568c3ada668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5568c3ada6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5568c3ada910 <line:452:22>
| `-NonNullAttr 0x5568c3ada968 <col:63, col:77> 3
|-FunctionDecl 0x5568c3adac78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5568c3ada9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5568c3adaa60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5568c3adaaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5568c3adad30 <line:456:22>
| `-NonNullAttr 0x5568c3adad88 <col:63, col:80> 2 3
|-FunctionDecl 0x5568c3adaf78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5568c3adadd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5568c3adae58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5568c3adb028 <line:458:22>
|-FunctionDecl 0x5568c3adb3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5568c3adb0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5568c3adb290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5568c3adb4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5568c3adb650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5568c3adb530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5568c3adb5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5568c3adb838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5568c3adb718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5568c3adb798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5568c3adb9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5568c3adb8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5568c3adbb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5568c3adbbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5568c3adbc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5568c3adbd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5568c3adbdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5568c3adbfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_4/mix056_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5568c3adc098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5568c3adc150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5568c3adc0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5568c3adbc50 '__pthread_unwind_buf_t'
| |   `-Record 0x5568c3adbbd0 ''
| `-AlignedAttr 0x5568c3adc1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5568c3adc220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5568c3adc380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5568c3adc3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5568c3adc450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5568c3adc4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5568c3adc6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5568c3adc5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5568c3adc808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5568c3adc778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5568c3adca00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5568c3adc8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5568c3adcaa8 <line:487:22>
|-RecordDecl 0x5568c3adcb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5568c3adce18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5568c3adcc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5568c3adccf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5568c3adcec8 <col:86>
| `-ReturnsTwiceAttr 0x5568c3adcf20 <col:12> Implicit
|-FunctionDecl 0x5568c3add248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5568c3adcff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5568c3add100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5568c3add2f8 <line:493:22>
| `-NonNullAttr 0x5568c3add350 <col:63, col:77> 1
|-FunctionDecl 0x5568c3add4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5568c3add398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5568c3add570 <line:495:22>
| `-NonNullAttr 0x5568c3add5c8 <col:63, col:77> 1
|-FunctionDecl 0x5568c3add6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5568c3add618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5568c3add778 <line:497:22>
| `-NonNullAttr 0x5568c3add7d0 <col:52, col:66> 1
|-FunctionDecl 0x5568c3add8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5568c3add818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5568c3add978 <line:499:22>
| `-NonNullAttr 0x5568c3add9d0 <col:52, col:66> 1
|-FunctionDecl 0x5568c3adec28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5568c3adea38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5568c3adeac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5568c3adecd8 <col:36>
| `-NonNullAttr 0x5568c3aded30 <col:66, col:83> 1 2
|-FunctionDecl 0x5568c3adee30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5568c3aded78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5568c3adeed8 <line:504:22>
| `-NonNullAttr 0x5568c3adef30 <col:52, col:66> 1
|-FunctionDecl 0x5568c3adf1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568c3adefe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5568c3adf060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5568c3adf278 <line:508:22>
| `-NonNullAttr 0x5568c3adf2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3adf598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5568c3adf318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5568c3adf398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5568c3adf418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5568c3adf650 <line:512:22>
| `-NonNullAttr 0x5568c3adf6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5568c3adf7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5568c3adf6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5568c3adf858 <line:514:22>
| `-NonNullAttr 0x5568c3adf8b0 <col:63, col:77> 1
|-FunctionDecl 0x5568c3adfad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5568c3adf960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5568c3adfb80 <line:516:22>
| `-NonNullAttr 0x5568c3adfbd8 <col:63, col:77> 1
|-FunctionDecl 0x5568c3adfce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5568c3adfc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5568c3adfd88 <line:518:22>
| `-NonNullAttr 0x5568c3adfde0 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae0008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568c3adfe28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5568c3adfea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5568c3ae00b8 <line:522:22>
| `-NonNullAttr 0x5568c3ae0110 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3ae0318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5568c3ae0158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5568c3ae01d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5568c3ae03c8 <line:525:22>
| `-NonNullAttr 0x5568c3ae0420 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae05c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568c3ae0468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5568c3ae04e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5568c3ae0678 <line:528:22>
| `-NonNullAttr 0x5568c3ae06d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3ae0858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5568c3ae0718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5568c3ae0798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5568c3ae0908 <line:530:22>
| `-NonNullAttr 0x5568c3ae0960 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae0b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568c3ae09a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5568c3ae0a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5568c3ae0bd0 <line:534:22>
| `-NonNullAttr 0x5568c3ae0c28 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3ae0db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5568c3ae0c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5568c3ae0cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5568c3ae0e68 <line:537:22>
| `-NonNullAttr 0x5568c3ae0ec0 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae1068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568c3ae0f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5568c3ae0f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5568c3ae1118 <line:541:22>
| `-NonNullAttr 0x5568c3ae1170 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3ae12f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5568c3ae11b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5568c3ae1238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5568c3ae13a8 <line:544:22>
| `-NonNullAttr 0x5568c3ae1400 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae15e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5568c3ae1448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5568c3ae14c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5568c3ae1698 <line:547:22>
| `-NonNullAttr 0x5568c3ae16f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3ae1878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5568c3ae1738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5568c3ae17b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5568c3ae1928 <line:550:22>
| `-NonNullAttr 0x5568c3ae1980 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae2cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5568c3ae2aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5568c3ae2bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5568c3ae2da8 <col:29>
| `-NonNullAttr 0x5568c3ae2e00 <col:70, col:84> 1
|-FunctionDecl 0x5568c3ae2f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5568c3ae2e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5568c3ae3020 <line:555:22>
| `-NonNullAttr 0x5568c3ae3078 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae3180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5568c3ae30c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5568c3ae3228 <line:557:22>
| `-NonNullAttr 0x5568c3ae3280 <col:52, col:66> 1
|-FunctionDecl 0x5568c3ae3380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5568c3ae32c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5568c3ae3428 <line:559:19>
| `-NonNullAttr 0x5568c3ae3480 <col:49, col:63> 1
|-FunctionDecl 0x5568c3ae36b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5568c3ae34c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5568c3ae3558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5568c3ae3768 <col:39>
| `-NonNullAttr 0x5568c3ae37c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5568c3ae38c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5568c3ae3808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5568c3ae3968 <line:564:22>
| `-NonNullAttr 0x5568c3ae39c0 <col:52, col:66> 1
|-FunctionDecl 0x5568c3ae3b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5568c3ae3a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5568c3ae3bd0 <line:566:22>
| `-NonNullAttr 0x5568c3ae3c28 <col:52, col:66> 1
|-FunctionDecl 0x5568c3ae3de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5568c3ae3c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5568c3ae3d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5568c3ae3e98 <col:39>
| `-NonNullAttr 0x5568c3ae3ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5568c3ae3ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5568c3ae3f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5568c3ae4098 <line:571:22>
| `-NonNullAttr 0x5568c3ae40f0 <col:52, col:66> 1
|-FunctionDecl 0x5568c3ae42d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5568c3ae41a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5568c3ae4380 <line:573:22>
| `-NonNullAttr 0x5568c3ae43d8 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae44e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5568c3ae4428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5568c3ae4588 <line:575:22>
| `-NonNullAttr 0x5568c3ae45e0 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae4808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568c3ae4628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5568c3ae46a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5568c3ae48b8 <line:579:22>
| `-NonNullAttr 0x5568c3ae4910 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3ae4b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5568c3ae4958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5568c3ae49d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5568c3ae4be8 <line:582:22>
| `-NonNullAttr 0x5568c3ae4c40 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae4de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568c3ae4c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5568c3ae4d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5568c3ae4e98 <line:586:22>
| `-NonNullAttr 0x5568c3ae4ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3ae5078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5568c3ae4f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5568c3ae4fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5568c3ae5128 <col:36>
| `-NonNullAttr 0x5568c3ae5180 <col:77, col:91> 1
|-FunctionDecl 0x5568c3ae54b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5568c3ae5260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5568c3ae5370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5568c3ae5568 <line:591:22>
| `-NonNullAttr 0x5568c3ae55c0 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae5738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5568c3ae5608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5568c3ae57e0 <line:593:22>
| `-NonNullAttr 0x5568c3ae5838 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae5940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5568c3ae5888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5568c3ae59e8 <line:595:22>
| `-NonNullAttr 0x5568c3ae5a40 <col:52, col:66> 1
|-FunctionDecl 0x5568c3ae5b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5568c3ae5aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5568c3ae5c00 <line:597:22>
| `-NonNullAttr 0x5568c3ae5c58 <col:52, col:66> 1
|-FunctionDecl 0x5568c3ae5e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5568c3ae5ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5568c3ae5d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5568c3ae5f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5568c3ae6268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5568c3ae5fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5568c3ae6030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5568c3ae60c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5568c3ae6320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5568c3ae6538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5568c3ae6400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5568c3ae65e0 <line:606:22>
| `-NonNullAttr 0x5568c3ae6638 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae6740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5568c3ae6688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5568c3ae67e8 <line:608:22>
| `-NonNullAttr 0x5568c3ae6840 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae6aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568c3ae6888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5568c3ae6908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5568c3ae6b50 <line:612:22>
| `-NonNullAttr 0x5568c3ae6ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3ae6db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5568c3ae6bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5568c3ae6c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5568c3ae6e68 <col:37>
| `-NonNullAttr 0x5568c3ae6ec0 <col:78, col:92> 1
|-FunctionDecl 0x5568c3ae70d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5568c3ae6f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5568c3ae6fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5568c3ae7188 <line:618:22>
| `-NonNullAttr 0x5568c3ae71e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3ae73a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5568c3ae7228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5568c3ae72a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5568c3ae7458 <line:621:22>
| `-NonNullAttr 0x5568c3ae74b0 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae7758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5568c3ae7590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5568c3ae7610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5568c3ae7808 <line:623:22>
| `-NonNullAttr 0x5568c3ae7860 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae79d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5568c3ae78a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5568c3ae7ab0 <line:625:22>
| `-NonNullAttr 0x5568c3ae7b08 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae7c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5568c3ae7b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5568c3ae7cb8 <line:627:22>
| `-NonNullAttr 0x5568c3ae7d10 <col:52, col:66> 1
|-FunctionDecl 0x5568c3ae7e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5568c3ae7d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5568c3ae7eb8 <line:629:22>
| `-NonNullAttr 0x5568c3ae7f10 <col:52, col:66> 1
|-FunctionDecl 0x5568c3ae8010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5568c3ae7f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5568c3ae80b8 <line:631:22>
| `-NonNullAttr 0x5568c3ae8110 <col:52, col:66> 1
|-FunctionDecl 0x5568c3ae84e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5568c3ae81f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5568c3ae8300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5568c3ae8380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5568c3ae85a0 <line:635:22>
| `-NonNullAttr 0x5568c3ae85f8 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae8778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5568c3ae8648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5568c3ae8820 <line:637:22>
| `-NonNullAttr 0x5568c3ae8878 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae8980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5568c3ae88c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5568c3ae8a28 <line:639:22>
| `-NonNullAttr 0x5568c3ae8a80 <col:52, col:66> 1
|-FunctionDecl 0x5568c3ae9c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5568c3ae9b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5568c3ae9d30 <line:641:22>
| `-NonNullAttr 0x5568c3ae9d88 <col:63, col:77> 1
|-FunctionDecl 0x5568c3ae9e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5568c3ae9dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5568c3ae9f38 <line:643:22>
| `-NonNullAttr 0x5568c3ae9f90 <col:63, col:77> 1
|-FunctionDecl 0x5568c3aea1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5568c3ae9fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5568c3aea058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5568c3aea268 <line:647:22>
| `-NonNullAttr 0x5568c3aea2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5568c3aea4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5568c3aea308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5568c3aea388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5568c3aea578 <line:650:22>
| `-NonNullAttr 0x5568c3aea5d0 <col:63, col:77> 1
|-FunctionDecl 0x5568c3aea918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5568c3aea6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5568c3aea7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5568c3aea9c8 <line:653:22>
| `-NonNullAttr 0x5568c3aeaa20 <col:63, col:77> 1
|-FunctionDecl 0x5568c3aeab88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5568c3aeaa68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5568c3aeac30 <col:69>
|-FunctionDecl 0x5568c3aeada8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5568c3aeac98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5568c3aeae50 <col:72>
|-FunctionDecl 0x5568c3aeb088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5568c3aeaeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5568c3aeaf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5568c3aeb138 <col:44>
|-FunctionDecl 0x5568c3aeb358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5568c3aeb1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5568c3aeb218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5568c3aeb408 <line:660:22>
| `-NonNullAttr 0x5568c3aeb460 <col:63, col:77> 2
|-FunctionDecl 0x5568c3aeb8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5568c3aeb540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5568c3aeb650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5568c3aeb760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5568c3aeb960 <col:47>
|-FunctionDecl 0x5568c3aebaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5568c3aeb9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5568c3aebc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5568c3aebbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5568c3aebda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5568c3aebd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5568c3aebe68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5568c3aebf28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5568c3aebfe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5568c3aec0a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5568c3aec120 prev 0x5568c3aec0a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5568c3aec188 <col:24> 'int' 0
|-VarDecl 0x5568c3aec1c0 <line:673:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5568c3aec240 prev 0x5568c3aec1c0 <line:674:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5568c3aec2a8 <col:27> 'int' 0
|-VarDecl 0x5568c3aec2d8 <line:675:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5568c3aec350 <line:676:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5568c3aec3d0 <line:677:1, col:5> col:5 used x 'int'
|-VarDecl 0x5568c3aec450 prev 0x5568c3aec3d0 <line:678:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5568c3aec4b8 <col:9> 'int' 0
|-VarDecl 0x5568c3aec4f0 <line:679:1, col:5> col:5 used y 'int'
|-VarDecl 0x5568c3aec570 prev 0x5568c3aec4f0 <line:680:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5568c3aec5d8 <col:9> 'int' 0
|-VarDecl 0x5568c3aec610 <line:681:1, col:5> col:5 used z 'int'
|-VarDecl 0x5568c3aec690 prev 0x5568c3aec610 <line:682:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5568c3aec6f8 <col:9> 'int' 0
|-VarDecl 0x5568c3aec728 <line:683:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x5568c3aec7a8 <line:684:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x5568c3aec820 <line:685:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x5568c3aec898 <line:686:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x5568c3aec910 <line:687:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x5568c3aec988 <line:688:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x5568c3aeca00 <line:689:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x5568c3aeca78 <line:690:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x5568c3aecb00 <line:691:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x5568c3aecb78 <line:692:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x5568c3aecbf0 <line:693:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x5568c3aecc70 <line:694:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x5568c3aeccf0 <line:695:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x5568c3aecd68 <line:696:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x5568c3aecde8 <line:697:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x5568c3aece60 <line:698:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x5568c3aeced8 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5568c3aecf50 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5568c3aed068 prev 0x5568c3aebaf0 <line:701:1, line:729:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5568c3aecfd0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5568c3aee898 <line:702:1, line:729:1>
|   |-CallExpr 0x5568c3aed178 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568c3aed160 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aed110 <col:3> 'void ()' Function 0x5568c3a92e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568c3aed1f0 <line:704:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5568c3aed198 <col:3> 'int' lvalue Var 0x5568c3aecde8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5568c3aed1d8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568c3aed1b8 <col:15> 'int' lvalue Var 0x5568c3aeccf0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5568c3aed250 <line:705:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5568c3aed210 <col:3> 'int' lvalue Var 0x5568c3aeccf0 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x5568c3aed230 <col:15> 'int' 1
|   |-BinaryOperator 0x5568c3aed2c8 <line:706:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3aed270 <col:3> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3aed2b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568c3aed290 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5568c3aed360 <line:707:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3aed2e8 <col:3> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5568c3aed338 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5568c3aed308 <col:27> 'int' 1
|   |-CallExpr 0x5568c3aed4e8 <line:708:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5568c3aed4d0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5568c3aed380 <col:3> 'void (int)' Function 0x5568c3a92bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5568c3aed480 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5568c3aed460 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5568c3aed440 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5568c3aed3f8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5568c3aed3e0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5568c3aed3a0 <col:23> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5568c3aed428 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5568c3aed410 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5568c3aed3c0 <col:41> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5568c3aed568 <line:709:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3aed510 <col:3> '_Bool' lvalue Var 0x5568c3aeca00 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3aed550 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568c3aed530 <col:20> '_Bool' lvalue Var 0x5568c3aec820 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5568c3aed5e0 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3aed588 <col:3> '_Bool' lvalue Var 0x5568c3aeca78 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3aed5c8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568c3aed5a8 <col:20> '_Bool' lvalue Var 0x5568c3aec898 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5568c3aed658 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3aed600 <col:3> '_Bool' lvalue Var 0x5568c3aecb00 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3aed640 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568c3aed620 <col:20> '_Bool' lvalue Var 0x5568c3aec910 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5568c3aed6d0 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3aed678 <col:3> '_Bool' lvalue Var 0x5568c3aecb78 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3aed6b8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568c3aed698 <col:20> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5568c3aed768 <line:713:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3aed6f0 <col:3> '_Bool' lvalue Var 0x5568c3aec898 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5568c3aed740 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5568c3aed710 <col:27> 'int' 1
|   |-CallExpr 0x5568c3aed7c0 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568c3aed7a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aed788 <col:3> 'void ()' Function 0x5568c3a92f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568c3aed818 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568c3aed800 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aed7e0 <col:3> 'void ()' Function 0x5568c3a92e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568c3aed878 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5568c3aed838 <col:3> 'int' lvalue Var 0x5568c3aec450 'x' 'int'
|   | `-IntegerLiteral 0x5568c3aed858 <col:7> 'int' 1
|   |-CallExpr 0x5568c3aed8d0 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568c3aed8b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aed898 <col:3> 'void ()' Function 0x5568c3a92f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568c3aed928 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568c3aed910 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aed8f0 <col:3> 'void ()' Function 0x5568c3a92e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568c3aedc38 <line:719:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5568c3aed948 <col:3> 'int' lvalue Var 0x5568c3aec690 'z' 'int'
|   | `-ConditionalOperator 0x5568c3aedc08 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5568c3aeda08 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5568c3aed9c0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5568c3aed9a8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5568c3aed968 <col:7> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5568c3aed9f0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5568c3aed9d8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5568c3aed988 <col:25> '_Bool' lvalue Var 0x5568c3aec898 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5568c3aedbf0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568c3aeda28 <col:42> 'int' lvalue Var 0x5568c3aeccf0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5568c3aedbd0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5568c3aedba0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5568c3aedb10 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5568c3aedaa0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5568c3aeda88 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5568c3aeda48 <col:55> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5568c3aedad0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5568c3aedab8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5568c3aeda68 <col:73> '_Bool' lvalue Var 0x5568c3aeca78 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5568c3aedb70 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5568c3aedb30 <col:90> 'int' lvalue Var 0x5568c3aecde8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5568c3aedb88 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568c3aedb50 <col:102> 'int' lvalue Var 0x5568c3aec690 'z' 'int'
|   |-BinaryOperator 0x5568c3aede40 <line:720:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3aedc58 <col:3> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3aede28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568c3aeddf8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5568c3aedd18 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5568c3aedcd0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5568c3aedcb8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5568c3aedc78 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5568c3aedd00 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5568c3aedce8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5568c3aedc98 <col:38> '_Bool' lvalue Var 0x5568c3aec898 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5568c3aeddb0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568c3aedd68 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568c3aedd38 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5568c3aedde0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568c3aeddc8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568c3aedd90 <col:66> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5568c3aee128 <line:721:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3aede60 <col:3> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3aee110 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568c3aee0e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5568c3aee000 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5568c3aedf20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5568c3aeded8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5568c3aedec0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5568c3aede80 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5568c3aedf08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5568c3aedef0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5568c3aedea0 <col:38> '_Bool' lvalue Var 0x5568c3aec898 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5568c3aedfe0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5568c3aedf98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5568c3aedf80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5568c3aedf40 <col:56> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5568c3aedfc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5568c3aedfb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5568c3aedf60 <col:74> '_Bool' lvalue Var 0x5568c3aeca78 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5568c3aee098 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568c3aee050 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568c3aee020 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5568c3aee0c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568c3aee0b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568c3aee078 <col:102> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5568c3aee330 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3aee148 <col:3> '_Bool' lvalue Var 0x5568c3aec898 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3aee318 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568c3aee2e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5568c3aee208 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5568c3aee1c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5568c3aee1a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5568c3aee168 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5568c3aee1f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5568c3aee1d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5568c3aee188 <col:38> '_Bool' lvalue Var 0x5568c3aec898 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5568c3aee2a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568c3aee258 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568c3aee228 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5568c3aee2d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568c3aee2b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568c3aee280 <col:66> '_Bool' lvalue Var 0x5568c3aec898 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5568c3aee618 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3aee350 <col:3> '_Bool' lvalue Var 0x5568c3aeca78 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3aee600 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568c3aee5d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5568c3aee4f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5568c3aee410 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5568c3aee3c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5568c3aee3b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5568c3aee370 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5568c3aee3f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5568c3aee3e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5568c3aee390 <col:38> '_Bool' lvalue Var 0x5568c3aec898 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5568c3aee4d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5568c3aee488 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5568c3aee470 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5568c3aee430 <col:56> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5568c3aee4b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5568c3aee4a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5568c3aee450 <col:74> '_Bool' lvalue Var 0x5568c3aeca78 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5568c3aee588 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568c3aee540 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568c3aee510 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5568c3aee5b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568c3aee5a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568c3aee568 <col:102> '_Bool' lvalue Var 0x5568c3aeca78 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5568c3aee670 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568c3aee658 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aee638 <col:3> 'void ()' Function 0x5568c3a92f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568c3aee6c8 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568c3aee6b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aee690 <col:3> 'void ()' Function 0x5568c3a92e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568c3aee780 <line:726:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5568c3aee6e8 <col:3> 'int' lvalue Var 0x5568c3aec120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5568c3aee760 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5568c3aee748 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568c3aee708 <col:22> 'int' lvalue Var 0x5568c3aec120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5568c3aee728 <col:41> 'int' 1
|   |-CallExpr 0x5568c3aee7d8 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568c3aee7c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aee7a0 <col:3> 'void ()' Function 0x5568c3a92f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5568c3aee888 <line:728:3, col:36>
|     `-CallExpr 0x5568c3aee868 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5568c3aee850 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5568c3aee7f8 <col:10> 'void *(void)' Function 0x5568c3a92958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5568c3aeea28 prev 0x5568c3aebc48 <line:730:1, line:749:1> line:730:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5568c3aee990 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5568c3aefc68 <line:731:1, line:749:1>
|   |-CallExpr 0x5568c3aeeb20 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568c3aeeaf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aeead0 <col:3> 'void ()' Function 0x5568c3a92e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568c3aeeb80 <line:733:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5568c3aeeb40 <col:3> 'int' lvalue Var 0x5568c3aec450 'x' 'int'
|   | `-IntegerLiteral 0x5568c3aeeb60 <col:7> 'int' 2
|   |-CallExpr 0x5568c3aeebd8 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568c3aeebc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aeeba0 <col:3> 'void ()' Function 0x5568c3a92f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568c3aeec30 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568c3aeec18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aeebf8 <col:3> 'void ()' Function 0x5568c3a92e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568c3aeec90 <line:736:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5568c3aeec50 <col:3> 'int' lvalue Var 0x5568c3aec570 'y' 'int'
|   | `-IntegerLiteral 0x5568c3aeec70 <col:7> 'int' 1
|   |-CallExpr 0x5568c3aeece8 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568c3aeecd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aeecb0 <col:3> 'void ()' Function 0x5568c3a92f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568c3aeed40 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568c3aeed28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aeed08 <col:3> 'void ()' Function 0x5568c3a92e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568c3aef028 <line:739:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5568c3aeed60 <col:3> 'int' lvalue Var 0x5568c3aec690 'z' 'int'
|   | `-ConditionalOperator 0x5568c3aeeff8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5568c3aeee20 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5568c3aeedd8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5568c3aeedc0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5568c3aeed80 <col:7> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5568c3aeee08 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5568c3aeedf0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5568c3aeeda0 <col:25> '_Bool' lvalue Var 0x5568c3aec910 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5568c3aeefe0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568c3aeee40 <col:42> 'int' lvalue Var 0x5568c3aeccf0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5568c3aeefc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5568c3aeef90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5568c3aeef00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5568c3aeeeb8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5568c3aeeea0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5568c3aeee60 <col:55> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5568c3aeeee8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5568c3aeeed0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5568c3aeee80 <col:73> '_Bool' lvalue Var 0x5568c3aecb00 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5568c3aeef60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5568c3aeef20 <col:90> 'int' lvalue Var 0x5568c3aecde8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5568c3aeef78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568c3aeef40 <col:102> 'int' lvalue Var 0x5568c3aec690 'z' 'int'
|   |-BinaryOperator 0x5568c3aef230 <line:740:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3aef048 <col:3> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3aef218 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568c3aef1e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5568c3aef108 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5568c3aef0c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5568c3aef0a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5568c3aef068 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5568c3aef0f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5568c3aef0d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5568c3aef088 <col:38> '_Bool' lvalue Var 0x5568c3aec910 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5568c3aef1a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568c3aef158 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568c3aef128 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5568c3aef1d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568c3aef1b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568c3aef180 <col:66> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5568c3aef518 <line:741:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3aef250 <col:3> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3aef500 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568c3aef4d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5568c3aef3f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5568c3aef310 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5568c3aef2c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5568c3aef2b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5568c3aef270 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5568c3aef2f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5568c3aef2e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5568c3aef290 <col:38> '_Bool' lvalue Var 0x5568c3aec910 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5568c3aef3d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5568c3aef388 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5568c3aef370 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5568c3aef330 <col:56> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5568c3aef3b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5568c3aef3a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5568c3aef350 <col:74> '_Bool' lvalue Var 0x5568c3aecb00 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5568c3aef488 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568c3aef440 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568c3aef410 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5568c3aef4b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568c3aef4a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568c3aef468 <col:102> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5568c3aef720 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3aef538 <col:3> '_Bool' lvalue Var 0x5568c3aec910 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3aef708 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568c3aef6d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5568c3aef5f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5568c3aef5b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5568c3aef598 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5568c3aef558 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5568c3aef5e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5568c3aef5c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5568c3aef578 <col:38> '_Bool' lvalue Var 0x5568c3aec910 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5568c3aef690 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568c3aef648 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568c3aef618 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5568c3aef6c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568c3aef6a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568c3aef670 <col:66> '_Bool' lvalue Var 0x5568c3aec910 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5568c3aefa08 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3aef740 <col:3> '_Bool' lvalue Var 0x5568c3aecb00 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3aef9f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568c3aef9c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5568c3aef8e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5568c3aef800 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5568c3aef7b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5568c3aef7a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5568c3aef760 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5568c3aef7e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5568c3aef7d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5568c3aef780 <col:38> '_Bool' lvalue Var 0x5568c3aec910 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5568c3aef8c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5568c3aef878 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5568c3aef860 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5568c3aef820 <col:56> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5568c3aef8a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5568c3aef890 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5568c3aef840 <col:74> '_Bool' lvalue Var 0x5568c3aecb00 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5568c3aef978 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568c3aef930 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568c3aef900 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5568c3aef9a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568c3aef990 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568c3aef958 <col:102> '_Bool' lvalue Var 0x5568c3aecb00 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5568c3aefa60 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568c3aefa48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aefa28 <col:3> 'void ()' Function 0x5568c3a92f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568c3aefab8 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568c3aefaa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aefa80 <col:3> 'void ()' Function 0x5568c3a92e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568c3aefb88 <line:746:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5568c3aefad8 <col:3> 'int' lvalue Var 0x5568c3aec120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5568c3aefb68 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5568c3aefb50 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568c3aefaf8 <col:22> 'int' lvalue Var 0x5568c3aec120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5568c3aefb30 <col:41> 'int' 1
|   |-CallExpr 0x5568c3aefbe0 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568c3aefbc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aefba8 <col:3> 'void ()' Function 0x5568c3a92f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5568c3aefc58 <line:748:3, col:36>
|     `-CallExpr 0x5568c3aefc38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5568c3aefc20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5568c3aefc00 <col:10> 'void *(void)' Function 0x5568c3a92958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5568c3aefdb0 prev 0x5568c3aebda0 <line:750:1, line:782:1> line:750:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5568c3aefd18 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5568c3af39a8 <line:751:1, line:782:1>
|   |-CallExpr 0x5568c3aefe90 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568c3aefe78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aefe58 <col:3> 'void ()' Function 0x5568c3a92e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568c3aefef0 <line:753:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5568c3aefeb0 <col:3> 'int' lvalue Var 0x5568c3aec570 'y' 'int'
|   | `-IntegerLiteral 0x5568c3aefed0 <col:7> 'int' 2
|   |-CallExpr 0x5568c3aeff48 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568c3aeff30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aeff10 <col:3> 'void ()' Function 0x5568c3a92f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568c3aeffa0 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568c3aeff88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3aeff68 <col:3> 'void ()' Function 0x5568c3a92e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568c3af0050 <line:756:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3aeffc0 <col:3> '_Bool' lvalue Var 0x5568c3aeced8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3af0038 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5568c3af0018 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5568c3af0000 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5568c3aeffe0 <col:19> 'void *(void)' Function 0x5568c3a92958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5568c3af0100 <line:757:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3af0070 <col:3> '_Bool' lvalue Var 0x5568c3aecf50 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3af00e8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5568c3af00c8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5568c3af00b0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5568c3af0090 <col:19> 'void *(void)' Function 0x5568c3a92958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5568c3af0178 <line:758:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3af0120 <col:3> '_Bool' lvalue Var 0x5568c3aec728 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3af0160 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568c3af0140 <col:21> '_Bool' lvalue Var 0x5568c3aecf50 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5568c3af01f0 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5568c3af0198 <col:3> 'int' lvalue Var 0x5568c3aec7a8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5568c3af01d8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568c3af01b8 <col:15> 'int' lvalue Var 0x5568c3aec690 'z' 'int'
|   |-BinaryOperator 0x5568c3af0628 <line:760:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5568c3af0210 <col:3> 'int' lvalue Var 0x5568c3aec690 'z' 'int'
|   | `-ConditionalOperator 0x5568c3af05f8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5568c3af0420 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5568c3af0340 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5568c3af0268 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5568c3af0250 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5568c3af0230 <col:8> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5568c3af0320 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5568c3af02b8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5568c3af02a0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5568c3af0280 <col:27> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5568c3af0308 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5568c3af02f0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5568c3af02d0 <col:46> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5568c3af0400 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5568c3af0398 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5568c3af0380 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5568c3af0360 <col:65> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5568c3af03e8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5568c3af03d0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5568c3af03b0 <col:84> '_Bool' lvalue Var 0x5568c3aecb78 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5568c3af05e0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568c3af0440 <col:101> 'int' lvalue Var 0x5568c3aec690 'z' 'int'
|   |   `-ParenExpr 0x5568c3af05c0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5568c3af0590 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5568c3af0500 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5568c3af04b8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5568c3af04a0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5568c3af0460 <col:106> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5568c3af04e8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5568c3af04d0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5568c3af0480 <col:124> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5568c3af0560 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5568c3af0520 <col:141> 'int' lvalue Var 0x5568c3aeccf0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5568c3af0578 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568c3af0540 <col:153> 'int' lvalue Var 0x5568c3aecde8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5568c3af0b70 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5568c3af0648 <col:3> 'int' lvalue Var 0x5568c3aeccf0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5568c3af0b40 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5568c3af0ad8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5568c3af0ac0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5568c3af0668 <col:15> '_Bool' lvalue Var 0x5568c3aecf50 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5568c3af0af0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568c3af0688 <col:31> 'int' lvalue Var 0x5568c3aeccf0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5568c3af0aa0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5568c3af0a70 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5568c3af0898 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5568c3af07b8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5568c3af06e0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5568c3af06c8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5568c3af06a8 <col:45> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5568c3af0798 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5568c3af0730 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5568c3af0718 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5568c3af06f8 <col:64> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5568c3af0780 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5568c3af0768 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5568c3af0748 <col:83> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5568c3af0878 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5568c3af0810 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5568c3af07f8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5568c3af07d8 <col:102> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5568c3af0860 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5568c3af0848 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5568c3af0828 <col:121> '_Bool' lvalue Var 0x5568c3aecb78 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5568c3af0a58 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5568c3af08b8 <col:138> 'int' lvalue Var 0x5568c3aeccf0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5568c3af0a38 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5568c3af0a08 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5568c3af0978 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5568c3af0930 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5568c3af0918 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5568c3af08d8 <col:151> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5568c3af0960 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5568c3af0948 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5568c3af08f8 <col:169> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5568c3af09d8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5568c3af0998 <col:186> 'int' lvalue Var 0x5568c3aeccf0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5568c3af09f0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5568c3af09b8 <col:198> 'int' lvalue Var 0x5568c3aeccf0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5568c3af1080 <line:762:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5568c3af0b90 <col:3> 'int' lvalue Var 0x5568c3aecde8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5568c3af1050 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5568c3af1020 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5568c3af1008 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5568c3af0bb0 <col:15> '_Bool' lvalue Var 0x5568c3aecf50 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5568c3af1038 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568c3af0bd0 <col:31> 'int' lvalue Var 0x5568c3aecde8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5568c3af0fe8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5568c3af0fb8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5568c3af0de0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5568c3af0d00 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5568c3af0c28 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5568c3af0c10 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5568c3af0bf0 <col:45> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5568c3af0ce0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5568c3af0c78 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5568c3af0c60 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5568c3af0c40 <col:64> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5568c3af0cc8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5568c3af0cb0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5568c3af0c90 <col:83> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5568c3af0dc0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5568c3af0d58 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5568c3af0d40 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5568c3af0d20 <col:102> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5568c3af0da8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5568c3af0d90 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5568c3af0d70 <col:121> '_Bool' lvalue Var 0x5568c3aecb78 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5568c3af0fa0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5568c3af0e00 <col:138> 'int' lvalue Var 0x5568c3aecde8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5568c3af0f80 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5568c3af0f50 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5568c3af0ec0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5568c3af0e78 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5568c3af0e60 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5568c3af0e20 <col:151> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5568c3af0ea8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5568c3af0e90 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5568c3af0e40 <col:169> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5568c3af0f20 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5568c3af0ee0 <col:186> 'int' lvalue Var 0x5568c3aecde8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5568c3af0f38 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5568c3af0f00 <col:198> 'int' lvalue Var 0x5568c3aecde8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5568c3af1628 <line:763:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3af10a0 <col:3> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3af1610 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568c3af15e0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5568c3af1598 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5568c3af1580 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5568c3af10c0 <col:20> '_Bool' lvalue Var 0x5568c3aecf50 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5568c3af15c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5568c3af15b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5568c3af10e0 <col:36> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5568c3af1560 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5568c3af1530 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5568c3af12f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5568c3af1210 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5568c3af1138 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5568c3af1120 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5568c3af1100 <col:55> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5568c3af11f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5568c3af1188 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5568c3af1170 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5568c3af1150 <col:74> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5568c3af11d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5568c3af11c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5568c3af11a0 <col:93> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5568c3af12d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5568c3af1268 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5568c3af1250 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5568c3af1230 <col:112> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5568c3af12b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5568c3af12a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5568c3af1280 <col:131> '_Bool' lvalue Var 0x5568c3aecb78 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5568c3af1518 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5568c3af1500 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5568c3af1310 <col:148> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5568c3af14e0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5568c3af14b0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5568c3af13d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5568c3af1388 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5568c3af1370 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5568c3af1330 <col:166> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5568c3af13b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5568c3af13a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5568c3af1350 <col:184> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5568c3af1468 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5568c3af1420 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5568c3af13f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5568c3af1498 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5568c3af1480 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5568c3af1448 <col:212> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5568c3af1c18 <line:764:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3af1648 <col:3> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3af1c00 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568c3af1bd0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5568c3af1b88 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5568c3af1b70 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5568c3af1668 <col:20> '_Bool' lvalue Var 0x5568c3aecf50 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5568c3af1bb8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5568c3af1ba0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5568c3af1688 <col:36> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5568c3af1b50 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5568c3af1af8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5568c3af1898 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5568c3af17b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5568c3af16e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5568c3af16c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5568c3af16a8 <col:55> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5568c3af1798 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5568c3af1730 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5568c3af1718 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5568c3af16f8 <col:74> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5568c3af1780 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5568c3af1768 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5568c3af1748 <col:93> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5568c3af1878 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5568c3af1810 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5568c3af17f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5568c3af17d8 <col:112> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5568c3af1860 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5568c3af1848 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5568c3af1828 <col:131> '_Bool' lvalue Var 0x5568c3aecb78 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5568c3af1ae0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5568c3af1ac8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5568c3af18b8 <col:148> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5568c3af1aa8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5568c3af1a78 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5568c3af1978 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5568c3af1930 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5568c3af1918 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5568c3af18d8 <col:166> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5568c3af1960 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5568c3af1948 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5568c3af18f8 <col:184> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5568c3af1a48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5568c3af19c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5568c3af1998 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5568c3af1a60 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5568c3af1a20 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5568c3af19f0 <col:219> 'int' 0
|   |-BinaryOperator 0x5568c3af21c0 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3af1c38 <col:3> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3af21a8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568c3af2178 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5568c3af2130 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5568c3af2118 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5568c3af1c58 <col:20> '_Bool' lvalue Var 0x5568c3aecf50 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5568c3af2160 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5568c3af2148 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5568c3af1c78 <col:36> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5568c3af20f8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5568c3af20c8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5568c3af1e88 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5568c3af1da8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5568c3af1cd0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5568c3af1cb8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5568c3af1c98 <col:55> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5568c3af1d88 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5568c3af1d20 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5568c3af1d08 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5568c3af1ce8 <col:74> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5568c3af1d70 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5568c3af1d58 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5568c3af1d38 <col:93> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5568c3af1e68 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5568c3af1e00 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5568c3af1de8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5568c3af1dc8 <col:112> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5568c3af1e50 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5568c3af1e38 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5568c3af1e18 <col:131> '_Bool' lvalue Var 0x5568c3aecb78 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5568c3af20b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5568c3af2098 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5568c3af1ea8 <col:148> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5568c3af2078 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5568c3af2048 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5568c3af1f68 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5568c3af1f20 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5568c3af1f08 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5568c3af1ec8 <col:166> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5568c3af1f50 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5568c3af1f38 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5568c3af1ee8 <col:184> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5568c3af2000 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5568c3af1fb8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5568c3af1f88 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5568c3af2030 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5568c3af2018 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5568c3af1fe0 <col:212> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5568c3af2788 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3af21e0 <col:3> '_Bool' lvalue Var 0x5568c3aecb78 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3af2770 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568c3af2740 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5568c3af26f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5568c3af26e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5568c3af2200 <col:20> '_Bool' lvalue Var 0x5568c3aecf50 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5568c3af2728 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5568c3af2710 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5568c3af2220 <col:36> '_Bool' lvalue Var 0x5568c3aecb78 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5568c3af26c0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5568c3af2690 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5568c3af2430 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5568c3af2350 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5568c3af2278 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5568c3af2260 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5568c3af2240 <col:55> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5568c3af2330 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5568c3af22c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5568c3af22b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5568c3af2290 <col:74> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5568c3af2318 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5568c3af2300 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5568c3af22e0 <col:93> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5568c3af2410 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5568c3af23a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5568c3af2390 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5568c3af2370 <col:112> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5568c3af23f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5568c3af23e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5568c3af23c0 <col:131> '_Bool' lvalue Var 0x5568c3aecb78 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5568c3af2678 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5568c3af2660 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5568c3af2450 <col:148> '_Bool' lvalue Var 0x5568c3aecb78 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5568c3af2640 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5568c3af2610 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5568c3af2510 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5568c3af24c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5568c3af24b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5568c3af2470 <col:166> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5568c3af24f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5568c3af24e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5568c3af2490 <col:184> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5568c3af25e0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5568c3af2560 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5568c3af2530 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5568c3af25f8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5568c3af25b8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5568c3af2588 <col:219> 'int' 0
|   |-BinaryOperator 0x5568c3af2800 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5568c3af27a8 <col:3> 'int' lvalue Var 0x5568c3aec240 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5568c3af27e8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5568c3af27c8 <col:25> 'int' lvalue Var 0x5568c3aec690 'z' 'int'
|   |-BinaryOperator 0x5568c3af2930 <line:768:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5568c3af2820 <col:3> 'int' lvalue Var 0x5568c3aec690 'z' 'int'
|   | `-ConditionalOperator 0x5568c3af2900 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5568c3af28b8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5568c3af28a0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5568c3af2840 <col:7> '_Bool' lvalue Var 0x5568c3aec728 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5568c3af28d0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568c3af2860 <col:25> 'int' lvalue Var 0x5568c3aec7a8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5568c3af28e8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5568c3af2880 <col:37> 'int' lvalue Var 0x5568c3aec690 'z' 'int'
|   |-BinaryOperator 0x5568c3af29c8 <line:769:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3af2950 <col:3> '_Bool' lvalue Var 0x5568c3aec728 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5568c3af29a0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5568c3af2970 <col:28> 'int' 0
|   |-CallExpr 0x5568c3af2a20 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568c3af2a08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3af29e8 <col:3> 'void ()' Function 0x5568c3a92f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568c3af2a78 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568c3af2a60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3af2a40 <col:3> 'void ()' Function 0x5568c3a92e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568c3af2d80 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5568c3af2a98 <col:3> 'int' lvalue Var 0x5568c3aec690 'z' 'int'
|   | `-ConditionalOperator 0x5568c3af2d50 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5568c3af2b78 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5568c3af2b10 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5568c3af2af8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5568c3af2ab8 <col:7> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5568c3af2b60 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5568c3af2b28 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5568c3af2ad8 <col:25> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5568c3af2d38 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568c3af2b98 <col:42> 'int' lvalue Var 0x5568c3aeccf0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5568c3af2d18 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5568c3af2ce8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5568c3af2c58 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5568c3af2c10 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5568c3af2bf8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5568c3af2bb8 <col:55> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5568c3af2c40 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5568c3af2c28 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5568c3af2bd8 <col:73> '_Bool' lvalue Var 0x5568c3aecb78 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5568c3af2cb8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5568c3af2c78 <col:90> 'int' lvalue Var 0x5568c3aecde8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5568c3af2cd0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568c3af2c98 <col:102> 'int' lvalue Var 0x5568c3aec690 'z' 'int'
|   |-BinaryOperator 0x5568c3af2f88 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3af2da0 <col:3> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3af2f70 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568c3af2f40 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5568c3af2e60 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5568c3af2e18 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5568c3af2e00 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5568c3af2dc0 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5568c3af2e48 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5568c3af2e30 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5568c3af2de0 <col:38> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5568c3af2ef8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568c3af2eb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568c3af2e80 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5568c3af2f28 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568c3af2f10 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568c3af2ed8 <col:66> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5568c3af3270 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3af2fa8 <col:3> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3af3258 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568c3af3228 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5568c3af3148 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5568c3af3068 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5568c3af3020 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5568c3af3008 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5568c3af2fc8 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5568c3af3050 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5568c3af3038 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5568c3af2fe8 <col:38> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5568c3af3128 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5568c3af30e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5568c3af30c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5568c3af3088 <col:56> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5568c3af3110 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5568c3af30f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5568c3af30a8 <col:74> '_Bool' lvalue Var 0x5568c3aecb78 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5568c3af31e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568c3af3198 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568c3af3168 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5568c3af3210 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568c3af31f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568c3af31c0 <col:102> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5568c3af3478 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3af3290 <col:3> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3af3460 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568c3af3430 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5568c3af3350 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5568c3af3308 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5568c3af32f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5568c3af32b0 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5568c3af3338 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5568c3af3320 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5568c3af32d0 <col:38> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5568c3af33e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568c3af33a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568c3af3370 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5568c3af3418 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568c3af3400 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568c3af33c8 <col:66> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5568c3af3760 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5568c3af3498 <col:3> '_Bool' lvalue Var 0x5568c3aecb78 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5568c3af3748 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5568c3af3718 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5568c3af3638 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5568c3af3558 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5568c3af3510 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5568c3af34f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5568c3af34b8 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5568c3af3540 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5568c3af3528 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5568c3af34d8 <col:38> '_Bool' lvalue Var 0x5568c3aec988 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5568c3af3618 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5568c3af35d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5568c3af35b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5568c3af3578 <col:56> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5568c3af3600 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5568c3af35e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5568c3af3598 <col:74> '_Bool' lvalue Var 0x5568c3aecb78 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5568c3af36d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5568c3af3688 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5568c3af3658 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5568c3af3700 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5568c3af36e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5568c3af36b0 <col:102> '_Bool' lvalue Var 0x5568c3aecb78 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5568c3af37b8 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568c3af37a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3af3780 <col:3> 'void ()' Function 0x5568c3a92f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5568c3af3810 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5568c3af37f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3af37d8 <col:3> 'void ()' Function 0x5568c3a92e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5568c3af38c8 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5568c3af3830 <col:3> 'int' lvalue Var 0x5568c3aec120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5568c3af38a8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5568c3af3890 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5568c3af3850 <col:22> 'int' lvalue Var 0x5568c3aec120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5568c3af3870 <col:41> 'int' 1
|   |-CallExpr 0x5568c3af3920 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5568c3af3908 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5568c3af38e8 <col:3> 'void ()' Function 0x5568c3a92f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5568c3af3998 <line:781:3, col:36>
|     `-CallExpr 0x5568c3af3978 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5568c3af3960 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5568c3af3940 <col:10> 'void *(void)' Function 0x5568c3a92958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5568c3af3b70 prev 0x5568c3aebe68 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x5568c3af3c10 <line:784:1, line:785:1>
|-FunctionDecl 0x5568c3af3c40 prev 0x5568c3aebf28 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x5568c3af3ce0 <line:787:1, line:788:1>
|-FunctionDecl 0x5568c3af3d10 prev 0x5568c3aebfe8 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x5568c3af3db0 <line:790:1, line:791:1>
`-FunctionDecl 0x5568c3af3e18 <line:792:1, line:816:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x5568c3af5a50 <line:793:1, line:816:1>
    |-DeclStmt 0x5568c3af3f30 <line:794:3, col:18>
    | `-VarDecl 0x5568c3af3ec8 <col:3, col:13> col:13 used t1491 'pthread_t':'unsigned long'
    |-CallExpr 0x5568c3af4138 <line:795:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5568c3af4120 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5568c3af3f48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5568c3ad3488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5568c3af3f88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5568c3af3f68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5568c3af3ec8 't1491' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5568c3af4178 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5568c3af4000 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5568c3af3fd8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5568c3af3fa0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5568c3af4190 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5568c3af4020 <col:39> 'void *(void *)' Function 0x5568c3aed068 'P0' 'void *(void *)'
    | `-ParenExpr 0x5568c3af40a0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5568c3af4078 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5568c3af4040 <col:52> 'int' 0
    |-DeclStmt 0x5568c3af4220 <line:796:3, col:18>
    | `-VarDecl 0x5568c3af41b8 <col:3, col:13> col:13 used t1492 'pthread_t':'unsigned long'
    |-CallExpr 0x5568c3af43c8 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5568c3af43b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5568c3af4238 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5568c3ad3488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5568c3af4278 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5568c3af4258 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5568c3af41b8 't1492' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5568c3af4408 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5568c3af42f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5568c3af42c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5568c3af4290 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5568c3af4420 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5568c3af4310 <col:39> 'void *(void *)' Function 0x5568c3aeea28 'P1' 'void *(void *)'
    | `-ParenExpr 0x5568c3af4390 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5568c3af4368 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5568c3af4330 <col:52> 'int' 0
    |-DeclStmt 0x5568c3af44b0 <line:798:3, col:18>
    | `-VarDecl 0x5568c3af4448 <col:3, col:13> col:13 used t1493 'pthread_t':'unsigned long'
    |-CallExpr 0x5568c3af4658 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5568c3af4640 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5568c3af44c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5568c3ad3488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5568c3af4508 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5568c3af44e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5568c3af4448 't1493' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5568c3af4698 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5568c3af4580 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5568c3af4558 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5568c3af4520 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5568c3af46b0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5568c3af45a0 <col:39> 'void *(void *)' Function 0x5568c3aefdb0 'P2' 'void *(void *)'
    | `-ParenExpr 0x5568c3af4620 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5568c3af45f8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5568c3af45c0 <col:52> 'int' 0
    |-CallExpr 0x5568c3af4700 <line:800:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5568c3af46e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5568c3af46c8 <col:3> 'void ()' Function 0x5568c3a92e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5568c3af47d0 <line:801:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5568c3af4720 <col:3> '_Bool' lvalue Var 0x5568c3aec2d8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5568c3af47b8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5568c3af4798 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5568c3af4780 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5568c3af4740 <col:21> 'int' lvalue Var 0x5568c3aec120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5568c3af4760 <col:41> 'int' 3
    |-CallExpr 0x5568c3af4828 <line:802:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5568c3af4810 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5568c3af47f0 <col:3> 'void ()' Function 0x5568c3a92f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5568c3af48a0 <line:803:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5568c3af4888 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5568c3af4848 <col:3> 'void (int)' Function 0x5568c3a92790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5568c3af48e0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5568c3af48c8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5568c3af4868 <col:21> '_Bool' lvalue Var 0x5568c3aec2d8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5568c3af4930 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5568c3af4918 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5568c3af48f8 <col:3> 'void ()' Function 0x5568c3a92e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5568c3af4c30 <line:805:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5568c3af4950 <col:3> 'int' lvalue Var 0x5568c3aec690 'z' 'int'
    | `-ConditionalOperator 0x5568c3af4c00 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5568c3af4a10 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5568c3af49c8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5568c3af49b0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5568c3af4970 <col:7> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5568c3af49f8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5568c3af49e0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5568c3af4990 <col:25> '_Bool' lvalue Var 0x5568c3aec820 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5568c3af4be8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5568c3af4a30 <col:42> 'int' lvalue Var 0x5568c3aeccf0 'z$w_buff0' 'int'
    |   `-ParenExpr 0x5568c3af4bc8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5568c3af4b98 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5568c3af4af0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5568c3af4aa8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5568c3af4a90 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5568c3af4a50 <col:55> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5568c3af4ad8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5568c3af4ac0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5568c3af4a70 <col:73> '_Bool' lvalue Var 0x5568c3aeca00 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5568c3af4b50 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5568c3af4b10 <col:90> 'int' lvalue Var 0x5568c3aecde8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5568c3af4b80 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5568c3af4b30 <col:102> 'int' lvalue Var 0x5568c3aec690 'z' 'int'
    |-BinaryOperator 0x5568c3af4e38 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5568c3af4c50 <col:3> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5568c3af4e20 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5568c3af4df0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5568c3af4d10 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5568c3af4cc8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5568c3af4cb0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5568c3af4c70 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5568c3af4cf8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5568c3af4ce0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5568c3af4c90 <col:38> '_Bool' lvalue Var 0x5568c3aec820 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5568c3af4da8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5568c3af4d60 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5568c3af4d30 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5568c3af4dd8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5568c3af4dc0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5568c3af4d88 <col:66> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5568c3af5120 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5568c3af4e58 <col:3> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5568c3af5108 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5568c3af50d8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5568c3af4ff8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5568c3af4f18 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5568c3af4ed0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5568c3af4eb8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5568c3af4e78 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5568c3af4f00 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5568c3af4ee8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5568c3af4e98 <col:38> '_Bool' lvalue Var 0x5568c3aec820 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5568c3af4fd8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5568c3af4f90 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5568c3af4f78 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5568c3af4f38 <col:56> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5568c3af4fc0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5568c3af4fa8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5568c3af4f58 <col:74> '_Bool' lvalue Var 0x5568c3aeca00 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5568c3af5090 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5568c3af5048 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5568c3af5018 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5568c3af50c0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5568c3af50a8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5568c3af5070 <col:102> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5568c3af5328 <line:808:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5568c3af5140 <col:3> '_Bool' lvalue Var 0x5568c3aec820 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5568c3af5310 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5568c3af52e0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5568c3af5200 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5568c3af51b8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5568c3af51a0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5568c3af5160 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5568c3af51e8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5568c3af51d0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5568c3af5180 <col:38> '_Bool' lvalue Var 0x5568c3aec820 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5568c3af5298 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5568c3af5250 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5568c3af5220 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5568c3af52c8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5568c3af52b0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5568c3af5278 <col:66> '_Bool' lvalue Var 0x5568c3aec820 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5568c3af5610 <line:809:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5568c3af5348 <col:3> '_Bool' lvalue Var 0x5568c3aeca00 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5568c3af55f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5568c3af55c8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5568c3af54e8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5568c3af5408 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5568c3af53c0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5568c3af53a8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5568c3af5368 <col:20> '_Bool' lvalue Var 0x5568c3aecd68 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5568c3af53f0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5568c3af53d8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5568c3af5388 <col:38> '_Bool' lvalue Var 0x5568c3aec820 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5568c3af54c8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5568c3af5480 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5568c3af5468 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5568c3af5428 <col:56> '_Bool' lvalue Var 0x5568c3aece60 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5568c3af54b0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5568c3af5498 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5568c3af5448 <col:74> '_Bool' lvalue Var 0x5568c3aeca00 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5568c3af5580 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5568c3af5538 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5568c3af5508 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5568c3af55b0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5568c3af5598 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5568c3af5560 <col:102> '_Bool' lvalue Var 0x5568c3aeca00 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5568c3af5668 <line:810:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5568c3af5650 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5568c3af5630 <col:3> 'void ()' Function 0x5568c3a92f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5568c3af56c0 <line:811:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5568c3af56a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5568c3af5688 <col:3> 'void ()' Function 0x5568c3a92e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5568c3af58f8 <line:812:3, col:67> '_Bool' '='
    | |-DeclRefExpr 0x5568c3af56e0 <col:3> '_Bool' lvalue Var 0x5568c3aec350 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5568c3af58e0 <col:21, col:67> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5568c3af58c8 <col:21, col:67> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5568c3af58a8 <col:22, col:67> 'int'
    |       `-BinaryOperator 0x5568c3af5888 <col:23, col:66> 'int' '&&'
    |         |-BinaryOperator 0x5568c3af57f0 <col:23, col:38> 'int' '&&'
    |         | |-BinaryOperator 0x5568c3af5758 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x5568c3af5740 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x5568c3af5700 <col:23> 'int' lvalue Var 0x5568c3aec450 'x' 'int'
    |         | | `-IntegerLiteral 0x5568c3af5720 <col:28> 'int' 2
    |         | `-BinaryOperator 0x5568c3af57d0 <col:33, col:38> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5568c3af57b8 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5568c3af5778 <col:33> 'int' lvalue Var 0x5568c3aec570 'y' 'int'
    |         |   `-IntegerLiteral 0x5568c3af5798 <col:38> 'int' 2
    |         `-BinaryOperator 0x5568c3af5868 <col:43, col:66> 'int' '=='
    |           |-ImplicitCastExpr 0x5568c3af5850 <col:43> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5568c3af5810 <col:43> 'int' lvalue Var 0x5568c3aec240 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x5568c3af5830 <col:66> 'int' 0
    |-CallExpr 0x5568c3af5950 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5568c3af5938 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5568c3af5918 <col:3> 'void ()' Function 0x5568c3a92f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5568c3af59c8 <line:814:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5568c3af59b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5568c3af5970 <col:3> 'void (int)' Function 0x5568c3a92bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5568c3af5a08 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5568c3af59f0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5568c3af5990 <col:21> '_Bool' lvalue Var 0x5568c3aec350 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5568c3af5a40 <line:815:3, col:10>
      `-IntegerLiteral 0x5568c3af5a20 <col:10> 'int' 0
