TranslationUnitDecl 0x558d3ce68e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x558d3ce696d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x558d3ce693b0 '__int128'
|-TypedefDecl 0x558d3ce69748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x558d3ce693d0 'unsigned __int128'
|-TypedefDecl 0x558d3ce69a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x558d3ce69820 'struct __NSConstantString_tag'
|   `-Record 0x558d3ce697a0 '__NSConstantString_tag'
|-TypedefDecl 0x558d3ce69af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x558d3ce69ab0 'char *'
|   `-BuiltinType 0x558d3ce68eb0 'char'
|-TypedefDecl 0x558d3cea8650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x558d3ce69d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x558d3ce69bd0 'struct __va_list_tag'
|     `-Record 0x558d3ce69b50 '__va_list_tag'
|-FunctionDecl 0x558d3cea8790 <./split_4/mix057_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x558d3cea86c0 <col:31> col:34 'int'
|-FunctionDecl 0x558d3cea8958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x558d3cea8a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x558d3cea8bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x558d3cea8b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x558d3cea8df8 <col:40, col:99>
|   |-IfStmt 0x558d3cea8dc8 <col:42, col:88>
|   | |-UnaryOperator 0x558d3cea8ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x558d3cea8c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x558d3cea8c70 <col:47> 'int' lvalue ParmVar 0x558d3cea8b38 'expression' 'int'
|   | `-CompoundStmt 0x558d3cea8db0 <col:59, col:88>
|   |   `-LabelStmt 0x558d3cea8d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x558d3cea8d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x558d3cea8d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x558d3cea8cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x558d3cea8a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x558d3cea8de0 <col:89>
|   `-ReturnStmt 0x558d3cea8de8 <col:91>
|-FunctionDecl 0x558d3cea8e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x558d3cea8f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x558d3cea9280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558d3cea8fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x558d3cea9038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x558d3cea90b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558d3cea9138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558d3cea9340 <line:10:22>
|-FunctionDecl 0x558d3cecf390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558d3cea93b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x558d3cea9430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x558d3cea94b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558d3cea9530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558d3cecf450 <line:13:22>
|-FunctionDecl 0x558d3cecf700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558d3cecf4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x558d3cecf540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x558d3cecf5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x558d3cecf7b8 <line:15:22>
|-TypedefDecl 0x558d3cecf828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x558d3ce68f70 'unsigned char'
|-TypedefDecl 0x558d3cecf898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x558d3ce68f90 'unsigned short'
|-TypedefDecl 0x558d3cecf908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x558d3ce68fb0 'unsigned int'
|-TypedefDecl 0x558d3cecf978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-TypedefDecl 0x558d3cecf9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x558d3ce68ed0 'signed char'
|-TypedefDecl 0x558d3cecfa58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x558d3ce68f70 'unsigned char'
|-TypedefDecl 0x558d3cecfac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x558d3ce68ef0 'short'
|-TypedefDecl 0x558d3cecfb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x558d3ce68f90 'unsigned short'
|-TypedefDecl 0x558d3cecfba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x558d3ce68f10 'int'
|-TypedefDecl 0x558d3cecfc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x558d3ce68fb0 'unsigned int'
|-TypedefDecl 0x558d3cecfc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3cecfcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-TypedefDecl 0x558d3cecfd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3cecfdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-TypedefDecl 0x558d3cecfe48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-TypedefDecl 0x558d3cecfeb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x558d3ce68fb0 'unsigned int'
|-TypedefDecl 0x558d3cecff28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x558d3ce68fb0 'unsigned int'
|-TypedefDecl 0x558d3cecff98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-TypedefDecl 0x558d3ced0008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-TypedefDecl 0x558d3ced0078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x558d3ce68fb0 'unsigned int'
|-TypedefDecl 0x558d3ced00e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-TypedefDecl 0x558d3ced0158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3ced01c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3ced0238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x558d3ce68f10 'int'
|-RecordDecl 0x558d3ced0290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x558d3ced0408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x558d3ced04c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x558d3ced0460 'struct __fsid_t' sugar
|   `-RecordType 0x558d3ced0310 '__fsid_t'
|     `-Record 0x558d3ced0290 ''
|-TypedefDecl 0x558d3ced0548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3ced05b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-TypedefDecl 0x558d3ced0628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-TypedefDecl 0x558d3ced0698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x558d3ce68fb0 'unsigned int'
|-TypedefDecl 0x558d3ced0708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3ced0778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x558d3ce68fb0 'unsigned int'
|-TypedefDecl 0x558d3ced07e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3ced0858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x558d3ce68f10 'int'
|-TypedefDecl 0x558d3ced08c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x558d3ce68f10 'int'
|-TypedefDecl 0x558d3ced0938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x558d3ce68f10 'int'
|-TypedefDecl 0x558d3ced09a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x558d3ce69630 'void *'
|   `-BuiltinType 0x558d3ce68e70 'void'
|-TypedefDecl 0x558d3ced0a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3ced0a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3ced0af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3ced0b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-TypedefDecl 0x558d3ced0bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-TypedefDecl 0x558d3ced0c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-TypedefDecl 0x558d3ced0cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-TypedefDecl 0x558d3ced0d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3ced0d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3ced0e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3ced0e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-TypedefDecl 0x558d3ced0f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x558d3ced0ed0 '__off64_t' sugar
|   |-Typedef 0x558d3ced01c8 '__off64_t'
|   `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3ced1000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x558d3ced0fc0 '__quad_t *'
|   `-TypedefType 0x558d3ced0f60 '__quad_t' sugar
|     |-Typedef 0x558d3cecfd68 '__quad_t'
|     `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3ced1070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x558d3ce69ab0 'char *'
|   `-BuiltinType 0x558d3ce68eb0 'char'
|-TypedefDecl 0x558d3ced10e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3ced1150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x558d3ce68fb0 'unsigned int'
|-FunctionDecl 0x558d3ced1298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x558d3ced11c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x558d3ced25e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x558d3ced25d8 <line:72:3, col:34>
|     `-CallExpr 0x558d3ced2598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x558d3ced2580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x558d3ced2510 <col:10> '<builtin fn type>' Function 0x558d3ced2380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x558d3ced25c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558d3ced2530 <col:29> 'unsigned int' lvalue ParmVar 0x558d3ced11c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x558d3ced2380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x558d3ced2420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x558d3ced2490 <col:10> Implicit
| `-ConstAttr 0x558d3ced24e8 <col:10> Implicit
|-FunctionDecl 0x558d3ced2740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x558d3ced2638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x558d3ced2a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x558d3ced2a48 <line:77:3, col:34>
|     `-CallExpr 0x558d3ced2a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x558d3ced29f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x558d3ced2978 <col:10> '<builtin fn type>' Function 0x558d3ced27e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x558d3ced2a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x558d3ced2998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x558d3ced2638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x558d3ced27e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x558d3ced2888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x558d3ced28f8 <col:10> Implicit
| `-ConstAttr 0x558d3ced2950 <col:10> Implicit
|-TypedefDecl 0x558d3ced2a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-TypedefDecl 0x558d3ced2b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x558d3ced2ae0 '__time_t' sugar
|   |-Typedef 0x558d3ced0708 '__time_t'
|   `-BuiltinType 0x558d3ce68f30 'long'
|-RecordDecl 0x558d3ced2b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x558d3ced2c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x558d3ced2cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x558d3ced2d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x558d3ced2d10 '__pid_t' sugar
|   |-Typedef 0x558d3ced0238 '__pid_t'
|   `-BuiltinType 0x558d3ce68f10 'int'
|-RecordDecl 0x558d3ced2da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x558d3ced2e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x558d3ced2eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x558d3ced2f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x558d3ced2fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-RecordDecl 0x558d3ced3030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x558d3ced32c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x558d3ced43a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x558d3ced3310 'struct cpu_set_t' sugar
|   `-RecordType 0x558d3ced30b0 'cpu_set_t'
|     `-Record 0x558d3ced3030 ''
|-FunctionDecl 0x558d3ced4678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x558d3ced4448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558d3ced4550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x558d3ced4728 <line:107:19>
|-FunctionDecl 0x558d3ced4900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x558d3ced4790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x558d3ced49a8 <col:69>
|-FunctionDecl 0x558d3ced4b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x558d3ced4a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x558d3ced4bc8 <col:64>
|-FunctionDecl 0x558d3ced4e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x558d3ced4c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558d3ced4d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558d3ced4f38 <line:113:22>
|-FunctionDecl 0x558d3ced51b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x558d3ced4fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558d3ced5098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x558d3ced5268 <col:88>
|-FunctionDecl 0x558d3ced5588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x558d3ced52d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558d3ced53b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x558d3ced5440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558d3ced5640 <col:62>
|-FunctionDecl 0x558d3ced57b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x558d3ced56a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x558d3ced5860 <col:63>
|-FunctionDecl 0x558d3ced5988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x558d3ced5a28 <col:47>
|-FunctionDecl 0x558d3ced5b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x558d3ced5a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558d3ced5bd8 <col:69>
|-FunctionDecl 0x558d3ced5ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x558d3ced5c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558d3ced5d88 <col:69>
|-FunctionDecl 0x558d3ced6048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558d3ced5df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558d3ced5f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x558d3ced60f8 <col:88>
|-TypedefDecl 0x558d3ced6188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x558d3ced6150 '__clock_t' sugar
|   |-Typedef 0x558d3ced0548 '__clock_t'
|   `-BuiltinType 0x558d3ce68f30 'long'
|-TypedefDecl 0x558d3ced6218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x558d3ced61e0 '__clockid_t' sugar
|   |-Typedef 0x558d3ced0938 '__clockid_t'
|   `-BuiltinType 0x558d3ce68f10 'int'
|-TypedefDecl 0x558d3ced62a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x558d3ced6270 '__timer_t' sugar
|   |-Typedef 0x558d3ced09a8 '__timer_t'
|   `-PointerType 0x558d3ce69630 'void *'
|     `-BuiltinType 0x558d3ce68e70 'void'
|-RecordDecl 0x558d3ced6300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x558d3ced63d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x558d3ced6440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x558d3ced64a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x558d3ced6510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x558d3ced6578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x558d3ced65e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x558d3ced6648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x558d3ced66b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x558d3ced6718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x558d3ced6780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x558d3ced67e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x558d3ced6838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x558d3ced6908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x558d3ced6978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x558d3ced6a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x558d3ced6bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x558d3ced6c90 <col:45>
|-FunctionDecl 0x558d3ced6e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x558d3ced6d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x558d3ced6f18 <col:54>
|-FunctionDecl 0x558d3ced7118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x558d3ced6f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x558d3ced6ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x558d3ced71c8 <line:157:22>
| `-ConstAttr 0x558d3ced7220 <col:63>
|-FunctionDecl 0x558d3ced8050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558d3ced7318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558d3ced80f8 <col:56>
|-FunctionDecl 0x558d3ced84a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x558d3ced8168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x558d3ced81e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558d3ced8260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x558d3ced8358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x558d3ced8560 <col:54>
|-RecordDecl 0x558d3ced85b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x558d3ced8668 parent 0x558d3ce68e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x558d3ced88c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x558d3ced8968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x558d3ced89d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x558d3ced8a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x558d3ced8b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x558d3ced8c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x558d3ced8bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x558d3ced8b80 'struct __locale_struct' sugar
|     `-RecordType 0x558d3ced8640 'struct __locale_struct'
|       `-Record 0x558d3ced85b8 '__locale_struct'
|-TypedefDecl 0x558d3ced8cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x558d3ced8cc0 '__locale_t' sugar
|   |-Typedef 0x558d3ced8c48 '__locale_t'
|   `-PointerType 0x558d3ced8bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x558d3ced8b80 'struct __locale_struct' sugar
|       `-RecordType 0x558d3ced8640 'struct __locale_struct'
|         `-Record 0x558d3ced85b8 '__locale_struct'
|-FunctionDecl 0x558d3ceda110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x558d3ced8d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x558d3ced8de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558d3ced8e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x558d3ced8ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558d3ced8f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x558d3ceda1d8 <col:40>
|-FunctionDecl 0x558d3ceda3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x558d3ceda2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x558d3ceda470 <col:66>
|-FunctionDecl 0x558d3ceda580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x558d3ceda4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x558d3ceda628 <col:69>
|-FunctionDecl 0x558d3ceda858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558d3ceda690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558d3ceda720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558d3ceda908 <col:52>
|-FunctionDecl 0x558d3cedaab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558d3ceda970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558d3cedaa00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558d3cedab60 <col:55>
|-FunctionDecl 0x558d3cedacf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x558d3cedabe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x558d3cedada0 <col:62>
|-FunctionDecl 0x558d3cedaf18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x558d3cedae08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x558d3cedafc0 <col:60>
|-FunctionDecl 0x558d3cedb2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558d3cedb118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558d3cedb198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x558d3cedb368 <col:44>
|-FunctionDecl 0x558d3cedb578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558d3cedb3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558d3cedb450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x558d3cedb628 <col:49>
|-VarDecl 0x558d3cedb728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x558d3cedb7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x558d3cedb828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x558d3cedb8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x558d3cedba20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x558d3cedbac0 <col:42>
|-VarDecl 0x558d3cedbb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x558d3cedbbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x558d3cedbd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x558d3cedbc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x558d3cedbde0 <col:57>
|-FunctionDecl 0x558d3cedbef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558d3cedbe60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558d3cedbf98 <col:56>
|-FunctionDecl 0x558d3cedc0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558d3cedc018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x558d3cedc178 <col:59>
|-FunctionDecl 0x558d3cedc280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x558d3cedc1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x558d3cedc328 <col:48>
| `-ConstAttr 0x558d3cedc380 <col:89>
|-FunctionDecl 0x558d3cedc5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558d3cedc438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x558d3cedc4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x558d3cedc848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558d3cedc6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558d3cedc768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x558d3cedc8f8 <col:88>
|-FunctionDecl 0x558d3cedca90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558d3cedc960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558d3cedc9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x558d3cedcb40 <col:88>
|-FunctionDecl 0x558d3cedcd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x558d3cedcba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558d3cedcc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x558d3cedce08 <line:208:22>
|-FunctionDecl 0x558d3cedd178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558d3cedce70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558d3cedcef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x558d3cedcf80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x558d3cedd010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x558d3cedd478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x558d3cedd278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x558d3cedd350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x558d3cedd528 <col:85>
|-FunctionDecl 0x558d3cedd918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x558d3cedd590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558d3cedd6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x558d3cedd7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x558d3cedd9d0 <col:52>
|-FunctionDecl 0x558d3ceddb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x558d3cedda38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558d3ceddbf0 <col:61>
|-FunctionDecl 0x558d3cede0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x558d3ceddc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558d3ceddcd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x558d3cedde08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x558d3ceddef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x558d3cede1b0 <col:62>
|-FunctionDecl 0x558d3cede3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x558d3cede218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558d3cede2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x558d3cede478 <line:221:22>
|-FunctionDecl 0x558d3cede578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x558d3cede4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558d3cede620 <col:65>
|-TypedefDecl 0x558d3cede690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x558d3ce68fd0 'unsigned long'
|-RecordDecl 0x558d3cede6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x558d3cede830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x558d3cede898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558d3cede948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x558d3cede8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x558d3cede770 'union pthread_attr_t'
|     `-Record 0x558d3cede6e8 'pthread_attr_t'
|-RecordDecl 0x558d3cede9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x558d3cedeb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x558d3cedeb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x558d3cedec40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x558d3cedebe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x558d3cedea20 'struct __pthread_internal_list'
|     `-Record 0x558d3cede9a0 '__pthread_internal_list'
|-RecordDecl 0x558d3cedecb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x558d3ceded58 parent 0x558d3ce68e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x558d3cedee30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558d3cedee98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x558d3cedef00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x558d3cedef68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x558d3cedefd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x558d3cedf038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x558d3cee3110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x558d3cee31c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x558d3cee32b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x558d3cee3318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558d3cee34a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x558d3cee3440 'union pthread_mutex_t' sugar
|   `-RecordType 0x558d3ceded30 'pthread_mutex_t'
|     `-Record 0x558d3cedecb0 ''
|-RecordDecl 0x558d3cee3510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x558d3cee3650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558d3cee36b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558d3cee3770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x558d3cee3710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x558d3cee3590 'pthread_mutexattr_t'
|     `-Record 0x558d3cee3510 ''
|-RecordDecl 0x558d3cee37e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x558d3cee3888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x558d3cee3950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558d3cee39b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x558d3cee3a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x558d3cee3a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x558d3cee3af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x558d3cee3b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x558d3cee3bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x558d3cee3c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x558d3cee3ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_4/mix057_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_4/mix057_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x558d3cee3dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x558d3cee3e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x558d3cee3f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x558d3cee3f10 'union pthread_cond_t' sugar
|   `-RecordType 0x558d3cee3860 'pthread_cond_t'
|     `-Record 0x558d3cee37e0 ''
|-RecordDecl 0x558d3cee3fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x558d3cee5130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558d3cee5198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558d3cee5250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x558d3cee51f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x558d3cee4060 'pthread_condattr_t'
|     `-Record 0x558d3cee3fe0 ''
|-TypedefDecl 0x558d3cee52d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x558d3ce68fb0 'unsigned int'
|-TypedefDecl 0x558d3cee5348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x558d3ce68f10 'int'
|-RecordDecl 0x558d3cee53a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x558d3cee5448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x558d3cee5510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558d3cee5578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x558d3cee55e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x558d3cee5648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x558d3cee56b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x558d3cee5718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x558d3cee5780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x558d3cee57e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x558d3cee5850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x558d3cee58b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x558d3cee5920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x558d3cee59d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_4/mix057_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_4/mix057_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x558d3cee5a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x558d3cee5ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558d3cee5c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x558d3cee5bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x558d3cee5420 'pthread_rwlock_t'
|     `-Record 0x558d3cee53a0 ''
|-RecordDecl 0x558d3cee5ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x558d3cee5de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x558d3cee5e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558d3cee5f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x558d3cee5ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x558d3cee5d20 'pthread_rwlockattr_t'
|     `-Record 0x558d3cee5ca0 ''
|-TypedefDecl 0x558d3cee5f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x558d3ce68f14 'volatile int' volatile
|   `-BuiltinType 0x558d3ce68f10 'int'
|-RecordDecl 0x558d3cee5fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x558d3cee7140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x558d3cee71a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558d3cee7260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x558d3cee7200 'union pthread_barrier_t' sugar
|   `-RecordType 0x558d3cee6060 'pthread_barrier_t'
|     `-Record 0x558d3cee5fe0 ''
|-RecordDecl 0x558d3cee72d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x558d3cee73d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558d3cee7438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558d3cee74f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x558d3cee7490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x558d3cee7350 'pthread_barrierattr_t'
|     `-Record 0x558d3cee72d0 ''
|-TypedefDecl 0x558d3cee7608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x558d3cee75a0 'long [8]' 8 
|   `-BuiltinType 0x558d3ce68f30 'long'
|-EnumDecl 0x558d3cee7660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x558d3cee7728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x558d3cee7778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x558d3cee77c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x558d3cee7898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x558d3cee78e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x558d3cee7938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x558d3cee7988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x558d3cee7a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x558d3cee79f8 <col:26> 'int'
| |   `-DeclRefExpr 0x558d3cee79d8 <col:26> 'int' EnumConstant 0x558d3cee7898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x558d3cee7a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x558d3cee7a80 <col:29> 'int'
| |   `-DeclRefExpr 0x558d3cee7a60 <col:29> 'int' EnumConstant 0x558d3cee78e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x558d3cee7b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x558d3cee7b08 <col:30> 'int'
| |   `-DeclRefExpr 0x558d3cee7ae8 <col:30> 'int' EnumConstant 0x558d3cee7938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x558d3cee7ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x558d3cee7b90 <col:27> 'int'
|     `-DeclRefExpr 0x558d3cee7b70 <col:27> 'int' EnumConstant 0x558d3cee7a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x558d3cee7bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x558d3cee7cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x558d3cee7d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x558d3cee7d38 <col:30> 'int'
| |   `-DeclRefExpr 0x558d3cee7d18 <col:30> 'int' EnumConstant 0x558d3cee7cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x558d3cee7da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x558d3cee7e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x558d3cee7e10 <col:29> 'int'
|     `-DeclRefExpr 0x558d3cee7df0 <col:29> 'int' EnumConstant 0x558d3cee7da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x558d3cee7e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x558d3cee7f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x558d3cee7f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x558d3cee7fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x558d3cee8038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x558d3cee8150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x558d3cee81a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x558d3cee81f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x558d3cee8278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x558d3cee8260 <col:31> 'int'
|     `-DeclRefExpr 0x558d3cee8240 <col:31> 'int' EnumConstant 0x558d3cee8150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x558d3cee82c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x558d3cee8398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x558d3cee83e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x558d3cee8438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x558d3cee8508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x558d3cee8558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x558d3cee85a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x558d3cee8678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x558d3cee86c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x558d3cee8718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x558d3cee8958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x558d3cee89c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x558d3cee8a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x558d3cee8b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x558d3cee8b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x558d3cee8c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x558d3cee8cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x558d3cee8d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x558d3cee8dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x558d3cee8e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x558d3cee9488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x558d3cee8f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x558d3cee9030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d3cee9270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x558d3cee92f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x558d3cee9548 <col:47>
| |-NonNullAttr 0x558d3cee95a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x558d3cee95d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x558d3cee9700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x558d3cee9630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x558d3cee9958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x558d3cee97b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x558d3cee9838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x558d3cee9b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x558d3cee9a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x558d3cee9bd0 <col:60>
|-FunctionDecl 0x558d3cee9d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x558d3cee9dc0 <col:54>
| `-ConstAttr 0x558d3cee9e18 <col:95>
|-FunctionDecl 0x558d3cee9fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x558d3cee9e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558d3cee9ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x558d3ceea098 <line:394:19>
| `-ConstAttr 0x558d3ceea0f0 <col:60>
|-FunctionDecl 0x558d3ceebb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x558d3ceeb9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x558d3ceebbb0 <col:71>
| `-NonNullAttr 0x558d3ceebc08 <col:112, col:126> 1
|-FunctionDecl 0x558d3ceebd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x558d3ceebc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x558d3ceebdb8 <line:397:22>
| `-NonNullAttr 0x558d3ceebe10 <col:63, col:77> 1
|-FunctionDecl 0x558d3ceec038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x558d3ceebe58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x558d3ceebed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x558d3ceec0e8 <line:400:22>
| `-NonNullAttr 0x558d3ceec140 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3ceec348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558d3ceec188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558d3ceec208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x558d3ceec3f8 <line:403:22>
| `-NonNullAttr 0x558d3ceec450 <col:63, col:77> 1
|-FunctionDecl 0x558d3ceec6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x558d3ceec498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x558d3ceec540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x558d3ceec758 <line:406:22>
| `-NonNullAttr 0x558d3ceec7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3ceed9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x558d3ceec7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558d3ceec870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558d3ceeda98 <line:409:22>
| `-NonNullAttr 0x558d3ceedaf0 <col:63, col:77> 1
|-FunctionDecl 0x558d3ceedd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558d3ceedb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d3ceedbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x558d3ceeddd8 <line:412:22>
| `-NonNullAttr 0x558d3ceede30 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3ceee068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558d3ceede78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d3ceedf08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x558d3ceee118 <col:37>
| `-NonNullAttr 0x558d3ceee170 <col:78, col:95> 1 2
|-FunctionDecl 0x558d3ceee358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d3ceee1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d3ceee238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x558d3ceee408 <line:418:22>
| `-NonNullAttr 0x558d3ceee460 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3ceee5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558d3ceee4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558d3ceee528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x558d3ceee698 <line:420:22>
| `-NonNullAttr 0x558d3ceee6f0 <col:63, col:77> 1
|-FunctionDecl 0x558d3ceee898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d3ceee738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d3ceee7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x558d3ceee948 <line:423:22>
| `-NonNullAttr 0x558d3ceee9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3ceeeb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558d3ceeea08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558d3ceeea88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x558d3ceeebf8 <line:426:22>
| `-NonNullAttr 0x558d3ceeec50 <col:63, col:77> 1
|-FunctionDecl 0x558d3ceeedf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d3ceeec98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d3ceeed18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x558d3ceeeea8 <line:429:22>
| `-NonNullAttr 0x558d3ceeef00 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3ceef088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558d3ceeef48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558d3ceeefc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x558d3ceef138 <line:431:22>
| `-NonNullAttr 0x558d3ceef190 <col:63, col:77> 1
|-FunctionDecl 0x558d3ceef3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x558d3ceef1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d3ceef258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x558d3ceef468 <line:434:22>
| |-NonNullAttr 0x558d3ceef4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x558d3ceef4f8 <col:100> "" ""
|-FunctionDecl 0x558d3ceef708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x558d3ceef548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558d3ceef5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x558d3ceef7b8 <line:437:22>
| |-NonNullAttr 0x558d3ceef810 <col:63, col:77> 1
| `-DeprecatedAttr 0x558d3ceef848 <col:97> "" ""
|-FunctionDecl 0x558d3ceefa48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x558d3ceef898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d3ceef910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x558d3ceefaf8 <line:440:22>
| `-NonNullAttr 0x558d3ceefb50 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3ceefcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x558d3ceefb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558d3ceefc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558d3ceefd80 <line:443:22>
| `-NonNullAttr 0x558d3ceefdd8 <col:63, col:77> 1
|-FunctionDecl 0x558d3cef00c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x558d3ceefe28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d3ceefea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x558d3ceeff20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x558d3cef0180 <line:447:22>
| `-NonNullAttr 0x558d3cef01d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x558d3cef0488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x558d3cef0230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558d3cef02b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x558d3cef0328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558d3cef0540 <col:43>
| `-NonNullAttr 0x558d3cef0598 <col:84, col:98> 1
|-FunctionDecl 0x558d3cef0858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x558d3cef05e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558d3cef0668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x558d3cef06f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x558d3cef0910 <line:452:22>
| `-NonNullAttr 0x558d3cef0968 <col:63, col:77> 3
|-FunctionDecl 0x558d3cef0c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558d3cef09e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558d3cef0a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x558d3cef0af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x558d3cef0d30 <line:456:22>
| `-NonNullAttr 0x558d3cef0d88 <col:63, col:80> 2 3
|-FunctionDecl 0x558d3cef0f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x558d3cef0dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558d3cef0e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x558d3cef1028 <line:458:22>
|-FunctionDecl 0x558d3cef13f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x558d3cef10f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x558d3cef1290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x558d3cef14a8 <col:52, col:69> 1 2
|-FunctionDecl 0x558d3cef1650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x558d3cef1530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x558d3cef15b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x558d3cef1838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x558d3cef1718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x558d3cef1798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x558d3cef19f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x558d3cef18f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x558d3cef1b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x558d3cef1bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x558d3cef1c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x558d3cef1d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x558d3cef1dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x558d3cef1fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_4/mix057_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x558d3cef2098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x558d3cef2150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x558d3cef20f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x558d3cef1c50 '__pthread_unwind_buf_t'
| |   `-Record 0x558d3cef1bd0 ''
| `-AlignedAttr 0x558d3cef21a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x558d3cef2220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x558d3cef2380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x558d3cef23e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x558d3cef2450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x558d3cef24b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x558d3cef26c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x558d3cef25b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x558d3cef2808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x558d3cef2778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x558d3cef2a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558d3cef28c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x558d3cef2aa8 <line:487:22>
|-RecordDecl 0x558d3cef2b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x558d3cef2e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x558d3cef2c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x558d3cef2cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x558d3cef2ec8 <col:86>
| `-ReturnsTwiceAttr 0x558d3cef2f20 <col:12> Implicit
|-FunctionDecl 0x558d3cef3248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558d3cef2ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x558d3cef3100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x558d3cef32f8 <line:493:22>
| `-NonNullAttr 0x558d3cef3350 <col:63, col:77> 1
|-FunctionDecl 0x558d3cef34c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558d3cef3398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558d3cef3570 <line:495:22>
| `-NonNullAttr 0x558d3cef35c8 <col:63, col:77> 1
|-FunctionDecl 0x558d3cef36d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558d3cef3618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558d3cef3778 <line:497:22>
| `-NonNullAttr 0x558d3cef37d0 <col:52, col:66> 1
|-FunctionDecl 0x558d3cef38d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558d3cef3818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558d3cef3978 <line:499:22>
| `-NonNullAttr 0x558d3cef39d0 <col:52, col:66> 1
|-FunctionDecl 0x558d3cef4c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558d3cef4a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558d3cef4ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558d3cef4cd8 <col:36>
| `-NonNullAttr 0x558d3cef4d30 <col:66, col:83> 1 2
|-FunctionDecl 0x558d3cef4e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558d3cef4d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558d3cef4ed8 <line:504:22>
| `-NonNullAttr 0x558d3cef4f30 <col:52, col:66> 1
|-FunctionDecl 0x558d3cef51c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d3cef4fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558d3cef5060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x558d3cef5278 <line:508:22>
| `-NonNullAttr 0x558d3cef52d0 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3cef5598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x558d3cef5318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558d3cef5398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x558d3cef5418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x558d3cef5650 <line:512:22>
| `-NonNullAttr 0x558d3cef56a8 <col:63, col:80> 1 3
|-FunctionDecl 0x558d3cef57b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558d3cef56f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558d3cef5858 <line:514:22>
| `-NonNullAttr 0x558d3cef58b0 <col:63, col:77> 1
|-FunctionDecl 0x558d3cef5ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558d3cef5960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x558d3cef5b80 <line:516:22>
| `-NonNullAttr 0x558d3cef5bd8 <col:63, col:77> 1
|-FunctionDecl 0x558d3cef5ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558d3cef5c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x558d3cef5d88 <line:518:22>
| `-NonNullAttr 0x558d3cef5de0 <col:63, col:77> 1
|-FunctionDecl 0x558d3cef6008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d3cef5e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558d3cef5ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x558d3cef60b8 <line:522:22>
| `-NonNullAttr 0x558d3cef6110 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3cef6318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558d3cef6158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558d3cef61d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x558d3cef63c8 <line:525:22>
| `-NonNullAttr 0x558d3cef6420 <col:63, col:77> 1
|-FunctionDecl 0x558d3cef65c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d3cef6468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558d3cef64e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x558d3cef6678 <line:528:22>
| `-NonNullAttr 0x558d3cef66d0 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3cef6858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558d3cef6718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558d3cef6798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x558d3cef6908 <line:530:22>
| `-NonNullAttr 0x558d3cef6960 <col:63, col:77> 1
|-FunctionDecl 0x558d3cef6b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d3cef69a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558d3cef6a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x558d3cef6bd0 <line:534:22>
| `-NonNullAttr 0x558d3cef6c28 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3cef6db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558d3cef6c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558d3cef6cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x558d3cef6e68 <line:537:22>
| `-NonNullAttr 0x558d3cef6ec0 <col:63, col:77> 1
|-FunctionDecl 0x558d3cef7068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d3cef6f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558d3cef6f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x558d3cef7118 <line:541:22>
| `-NonNullAttr 0x558d3cef7170 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3cef72f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558d3cef71b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558d3cef7238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x558d3cef73a8 <line:544:22>
| `-NonNullAttr 0x558d3cef7400 <col:63, col:77> 1
|-FunctionDecl 0x558d3cef75e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x558d3cef7448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x558d3cef74c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x558d3cef7698 <line:547:22>
| `-NonNullAttr 0x558d3cef76f0 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3cef7878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558d3cef7738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558d3cef77b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x558d3cef7928 <line:550:22>
| `-NonNullAttr 0x558d3cef7980 <col:63, col:77> 1
|-FunctionDecl 0x558d3cef8cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x558d3cef8aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558d3cef8bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x558d3cef8da8 <col:29>
| `-NonNullAttr 0x558d3cef8e00 <col:70, col:84> 1
|-FunctionDecl 0x558d3cef8f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558d3cef8e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558d3cef9020 <line:555:22>
| `-NonNullAttr 0x558d3cef9078 <col:63, col:77> 1
|-FunctionDecl 0x558d3cef9180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558d3cef90c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558d3cef9228 <line:557:22>
| `-NonNullAttr 0x558d3cef9280 <col:52, col:66> 1
|-FunctionDecl 0x558d3cef9380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558d3cef92c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558d3cef9428 <line:559:19>
| `-NonNullAttr 0x558d3cef9480 <col:49, col:63> 1
|-FunctionDecl 0x558d3cef96b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558d3cef94c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558d3cef9558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558d3cef9768 <col:39>
| `-NonNullAttr 0x558d3cef97c0 <col:69, col:86> 1 2
|-FunctionDecl 0x558d3cef98c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558d3cef9808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558d3cef9968 <line:564:22>
| `-NonNullAttr 0x558d3cef99c0 <col:52, col:66> 1
|-FunctionDecl 0x558d3cef9b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558d3cef9a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558d3cef9bd0 <line:566:22>
| `-NonNullAttr 0x558d3cef9c28 <col:52, col:66> 1
|-FunctionDecl 0x558d3cef9de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558d3cef9c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558d3cef9d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558d3cef9e98 <col:39>
| `-NonNullAttr 0x558d3cef9ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x558d3cef9ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558d3cef9f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558d3cefa098 <line:571:22>
| `-NonNullAttr 0x558d3cefa0f0 <col:52, col:66> 1
|-FunctionDecl 0x558d3cefa2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x558d3cefa1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x558d3cefa380 <line:573:22>
| `-NonNullAttr 0x558d3cefa3d8 <col:63, col:77> 1
|-FunctionDecl 0x558d3cefa4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x558d3cefa428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x558d3cefa588 <line:575:22>
| `-NonNullAttr 0x558d3cefa5e0 <col:63, col:77> 1
|-FunctionDecl 0x558d3cefa808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d3cefa628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x558d3cefa6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x558d3cefa8b8 <line:579:22>
| `-NonNullAttr 0x558d3cefa910 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3cefab38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x558d3cefa958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x558d3cefa9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x558d3cefabe8 <line:582:22>
| `-NonNullAttr 0x558d3cefac40 <col:63, col:77> 1
|-FunctionDecl 0x558d3cefade8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d3cefac88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x558d3cefad08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x558d3cefae98 <line:586:22>
| `-NonNullAttr 0x558d3cefaef0 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3cefb078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x558d3cefaf38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x558d3cefafb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x558d3cefb128 <col:36>
| `-NonNullAttr 0x558d3cefb180 <col:77, col:91> 1
|-FunctionDecl 0x558d3cefb4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x558d3cefb260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558d3cefb370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x558d3cefb568 <line:591:22>
| `-NonNullAttr 0x558d3cefb5c0 <col:63, col:77> 1
|-FunctionDecl 0x558d3cefb738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558d3cefb608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558d3cefb7e0 <line:593:22>
| `-NonNullAttr 0x558d3cefb838 <col:63, col:77> 1
|-FunctionDecl 0x558d3cefb940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558d3cefb888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558d3cefb9e8 <line:595:22>
| `-NonNullAttr 0x558d3cefba40 <col:52, col:66> 1
|-FunctionDecl 0x558d3cefbb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558d3cefbaa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558d3cefbc00 <line:597:22>
| `-NonNullAttr 0x558d3cefbc58 <col:52, col:66> 1
|-FunctionDecl 0x558d3cefbe88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x558d3cefbca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558d3cefbd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x558d3cefbf38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x558d3cefc268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558d3cefbfb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558d3cefc030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558d3cefc0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x558d3cefc320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x558d3cefc538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x558d3cefc400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x558d3cefc5e0 <line:606:22>
| `-NonNullAttr 0x558d3cefc638 <col:63, col:77> 1
|-FunctionDecl 0x558d3cefc740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x558d3cefc688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x558d3cefc7e8 <line:608:22>
| `-NonNullAttr 0x558d3cefc840 <col:63, col:77> 1
|-FunctionDecl 0x558d3cefcaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d3cefc888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x558d3cefc908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x558d3cefcb50 <line:612:22>
| `-NonNullAttr 0x558d3cefcba8 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3cefcdb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x558d3cefcbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x558d3cefcc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x558d3cefce68 <col:37>
| `-NonNullAttr 0x558d3cefcec0 <col:78, col:92> 1
|-FunctionDecl 0x558d3cefd0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x558d3cefcf08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x558d3cefcfb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x558d3cefd188 <line:618:22>
| `-NonNullAttr 0x558d3cefd1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3cefd3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x558d3cefd228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x558d3cefd2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x558d3cefd458 <line:621:22>
| `-NonNullAttr 0x558d3cefd4b0 <col:63, col:77> 1
|-FunctionDecl 0x558d3cefd758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x558d3cefd590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x558d3cefd610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x558d3cefd808 <line:623:22>
| `-NonNullAttr 0x558d3cefd860 <col:63, col:77> 1
|-FunctionDecl 0x558d3cefd9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558d3cefd8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558d3cefdab0 <line:625:22>
| `-NonNullAttr 0x558d3cefdb08 <col:63, col:77> 1
|-FunctionDecl 0x558d3cefdc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558d3cefdb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558d3cefdcb8 <line:627:22>
| `-NonNullAttr 0x558d3cefdd10 <col:52, col:66> 1
|-FunctionDecl 0x558d3cefde10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558d3cefdd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558d3cefdeb8 <line:629:22>
| `-NonNullAttr 0x558d3cefdf10 <col:52, col:66> 1
|-FunctionDecl 0x558d3cefe010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558d3cefdf58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558d3cefe0b8 <line:631:22>
| `-NonNullAttr 0x558d3cefe110 <col:52, col:66> 1
|-FunctionDecl 0x558d3cefe4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x558d3cefe1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x558d3cefe300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x558d3cefe380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x558d3cefe5a0 <line:635:22>
| `-NonNullAttr 0x558d3cefe5f8 <col:63, col:77> 1
|-FunctionDecl 0x558d3cefe778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558d3cefe648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558d3cefe820 <line:637:22>
| `-NonNullAttr 0x558d3cefe878 <col:63, col:77> 1
|-FunctionDecl 0x558d3cefe980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558d3cefe8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558d3cefea28 <line:639:22>
| `-NonNullAttr 0x558d3cefea80 <col:52, col:66> 1
|-FunctionDecl 0x558d3ceffc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558d3ceffb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558d3ceffd30 <line:641:22>
| `-NonNullAttr 0x558d3ceffd88 <col:63, col:77> 1
|-FunctionDecl 0x558d3ceffe90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558d3ceffdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558d3cefff38 <line:643:22>
| `-NonNullAttr 0x558d3cefff90 <col:63, col:77> 1
|-FunctionDecl 0x558d3cf001b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d3cefffd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x558d3cf00058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x558d3cf00268 <line:647:22>
| `-NonNullAttr 0x558d3cf002c0 <col:63, col:80> 1 2
|-FunctionDecl 0x558d3cf004c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x558d3cf00308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x558d3cf00388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x558d3cf00578 <line:650:22>
| `-NonNullAttr 0x558d3cf005d0 <col:63, col:77> 1
|-FunctionDecl 0x558d3cf00918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x558d3cf006b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x558d3cf007d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x558d3cf009c8 <line:653:22>
| `-NonNullAttr 0x558d3cf00a20 <col:63, col:77> 1
|-FunctionDecl 0x558d3cf00b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x558d3cf00a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558d3cf00c30 <col:69>
|-FunctionDecl 0x558d3cf00da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x558d3cf00c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558d3cf00e50 <col:72>
|-FunctionDecl 0x558d3cf01088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x558d3cf00eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x558d3cf00f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x558d3cf01138 <col:44>
|-FunctionDecl 0x558d3cf01358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x558d3cf011a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558d3cf01218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x558d3cf01408 <line:660:22>
| `-NonNullAttr 0x558d3cf01460 <col:63, col:77> 2
|-FunctionDecl 0x558d3cf018a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x558d3cf01540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x558d3cf01650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x558d3cf01760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x558d3cf01960 <col:47>
|-FunctionDecl 0x558d3cf01af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x558d3cf019d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558d3cf01c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x558d3cf01bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558d3cf01da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x558d3cf01d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558d3cf01ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x558d3cf01e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558d3cf01fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x558d3cf02080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x558d3cf02140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x558d3cf021f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x558d3cf02278 prev 0x558d3cf021f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x558d3cf022e0 <col:24> 'int' 0
|-VarDecl 0x558d3cf02318 <line:674:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x558d3cf02398 prev 0x558d3cf02318 <line:675:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x558d3cf02400 <col:27> 'int' 0
|-VarDecl 0x558d3cf02438 <line:676:1, col:5> col:5 used a 'int'
|-VarDecl 0x558d3cf024b8 prev 0x558d3cf02438 <line:677:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x558d3cf02520 <col:9> 'int' 0
|-VarDecl 0x558d3cf02550 <line:678:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x558d3cf025d0 <line:679:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x558d3cf02648 <line:680:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x558d3cf026c0 <line:681:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x558d3cf02738 <line:682:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x558d3cf027b0 <line:683:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x558d3cf02828 <line:684:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x558d3cf028a0 <line:685:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x558d3cf02918 <line:686:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x558d3cf02990 <line:687:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x558d3cf02a08 <line:688:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x558d3cf02a80 <line:689:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x558d3cf02b10 <line:690:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x558d3cf02b90 <line:691:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x558d3cf02c10 <line:692:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x558d3cf02c88 <line:693:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x558d3cf02d08 <line:694:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x558d3cf02d80 <line:695:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x558d3cf02df8 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x558d3cf02e70 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x558d3cf02ef0 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x558d3cf02f70 prev 0x558d3cf02ef0 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x558d3cf02fd8 <col:9> 'int' 0
|-VarDecl 0x558d3cf03010 <line:700:1, col:5> col:5 used y 'int'
|-VarDecl 0x558d3cf03090 prev 0x558d3cf03010 <line:701:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x558d3cf030f8 <col:9> 'int' 0
|-VarDecl 0x558d3cf03130 <line:702:1, col:5> col:5 used z 'int'
|-VarDecl 0x558d3cf031b0 prev 0x558d3cf03130 <line:703:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x558d3cf03218 <col:9> 'int' 0
|-VarDecl 0x558d3cf03248 <line:704:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x558d3cf032c0 <line:705:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x558d3cf033d8 prev 0x558d3cf01af0 <line:706:1, line:735:1> line:706:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x558d3cf03340 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558d3cf04c88 <line:707:1, line:735:1>
|   |-CallExpr 0x558d3cf034e8 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d3cf034d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf03480 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d3cf03560 <line:709:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558d3cf03508 <col:3> 'int' lvalue Var 0x558d3cf02d08 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x558d3cf03548 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d3cf03528 <col:15> 'int' lvalue Var 0x558d3cf02c10 'a$w_buff0' 'int'
|   |-BinaryOperator 0x558d3cf035c0 <line:710:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558d3cf03580 <col:3> 'int' lvalue Var 0x558d3cf02c10 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x558d3cf035a0 <col:15> 'int' 1
|   |-BinaryOperator 0x558d3cf03638 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf035e0 <col:3> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf03620 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d3cf03600 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558d3cf036d0 <line:712:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf03658 <col:3> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x558d3cf036a8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558d3cf03678 <col:27> 'int' 1
|   |-CallExpr 0x558d3cf03858 <line:713:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x558d3cf03840 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x558d3cf036f0 <col:3> 'void (int)' Function 0x558d3cea8bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x558d3cf037f0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x558d3cf037d0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x558d3cf037b0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x558d3cf03768 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x558d3cf03750 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x558d3cf03710 <col:23> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x558d3cf03798 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x558d3cf03780 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x558d3cf03730 <col:41> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558d3cf038d8 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf03880 <col:3> '_Bool' lvalue Var 0x558d3cf028a0 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf038c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d3cf038a0 <col:20> '_Bool' lvalue Var 0x558d3cf02648 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x558d3cf03950 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf038f8 <col:3> '_Bool' lvalue Var 0x558d3cf02918 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf03938 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d3cf03918 <col:20> '_Bool' lvalue Var 0x558d3cf026c0 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558d3cf039c8 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf03970 <col:3> '_Bool' lvalue Var 0x558d3cf02990 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf039b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d3cf03990 <col:20> '_Bool' lvalue Var 0x558d3cf02738 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558d3cf03a40 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf039e8 <col:3> '_Bool' lvalue Var 0x558d3cf02a08 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf03a28 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d3cf03a08 <col:20> '_Bool' lvalue Var 0x558d3cf027b0 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558d3cf03ab8 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf03a60 <col:3> '_Bool' lvalue Var 0x558d3cf02a80 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf03aa0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d3cf03a80 <col:20> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x558d3cf03b68 <line:719:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf03ad8 <col:3> '_Bool' lvalue Var 0x558d3cf026c0 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x558d3cf03b40 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558d3cf03b10 <col:27> 'int' 1
|   |-CallExpr 0x558d3cf03bc0 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d3cf03ba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf03b88 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d3cf03c18 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d3cf03c00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf03be0 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d3cf03c78 <line:722:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558d3cf03c38 <col:3> 'int' lvalue Var 0x558d3cf02f70 'x' 'int'
|   | `-IntegerLiteral 0x558d3cf03c58 <col:7> 'int' 1
|   |-CallExpr 0x558d3cf03cd0 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d3cf03cb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf03c98 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d3cf03d28 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d3cf03d10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf03cf0 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d3cf04010 <line:725:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558d3cf03d48 <col:3> 'int' lvalue Var 0x558d3cf024b8 'a' 'int'
|   | `-ConditionalOperator 0x558d3cf03fe0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558d3cf03e08 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558d3cf03dc0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558d3cf03da8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558d3cf03d68 <col:7> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558d3cf03df0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558d3cf03dd8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558d3cf03d88 <col:25> '_Bool' lvalue Var 0x558d3cf026c0 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x558d3cf03fc8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d3cf03e28 <col:42> 'int' lvalue Var 0x558d3cf02c10 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558d3cf03fa8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558d3cf03f78 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558d3cf03ee8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558d3cf03ea0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558d3cf03e88 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558d3cf03e48 <col:55> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558d3cf03ed0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558d3cf03eb8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558d3cf03e68 <col:73> '_Bool' lvalue Var 0x558d3cf02918 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x558d3cf03f48 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558d3cf03f08 <col:90> 'int' lvalue Var 0x558d3cf02d08 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558d3cf03f60 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf03f28 <col:102> 'int' lvalue Var 0x558d3cf024b8 'a' 'int'
|   |-BinaryOperator 0x558d3cf04218 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf04030 <col:3> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf04200 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf041d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558d3cf040f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558d3cf040a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558d3cf04090 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558d3cf04050 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558d3cf040d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558d3cf040c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558d3cf04070 <col:38> '_Bool' lvalue Var 0x558d3cf026c0 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf04188 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d3cf04140 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d3cf04110 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558d3cf041b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d3cf041a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf04168 <col:66> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558d3cf04500 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf04238 <col:3> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf044e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf044b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558d3cf043d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558d3cf042f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558d3cf042b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558d3cf04298 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558d3cf04258 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558d3cf042e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558d3cf042c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558d3cf04278 <col:38> '_Bool' lvalue Var 0x558d3cf026c0 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x558d3cf043b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558d3cf04370 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558d3cf04358 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558d3cf04318 <col:56> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558d3cf043a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558d3cf04388 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558d3cf04338 <col:74> '_Bool' lvalue Var 0x558d3cf02918 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf04470 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d3cf04428 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d3cf043f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558d3cf044a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d3cf04488 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf04450 <col:102> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558d3cf04708 <line:728:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf04520 <col:3> '_Bool' lvalue Var 0x558d3cf026c0 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf046f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf046c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558d3cf045e0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558d3cf04598 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558d3cf04580 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558d3cf04540 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558d3cf045c8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558d3cf045b0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558d3cf04560 <col:38> '_Bool' lvalue Var 0x558d3cf026c0 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf04678 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d3cf04630 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d3cf04600 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558d3cf046a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d3cf04690 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf04658 <col:66> '_Bool' lvalue Var 0x558d3cf026c0 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558d3cf049f0 <line:729:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf04728 <col:3> '_Bool' lvalue Var 0x558d3cf02918 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf049d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf049a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558d3cf048c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558d3cf047e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558d3cf047a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558d3cf04788 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558d3cf04748 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558d3cf047d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558d3cf047b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558d3cf04768 <col:38> '_Bool' lvalue Var 0x558d3cf026c0 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x558d3cf048a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558d3cf04860 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558d3cf04848 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558d3cf04808 <col:56> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558d3cf04890 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558d3cf04878 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558d3cf04828 <col:74> '_Bool' lvalue Var 0x558d3cf02918 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf04960 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d3cf04918 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d3cf048e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558d3cf04990 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d3cf04978 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf04940 <col:102> '_Bool' lvalue Var 0x558d3cf02918 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x558d3cf04a48 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d3cf04a30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf04a10 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d3cf04aa0 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d3cf04a88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf04a68 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d3cf04b78 <line:732:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558d3cf04ac0 <col:3> 'int' lvalue Var 0x558d3cf02278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558d3cf04b58 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558d3cf04b40 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d3cf04ae0 <col:22> 'int' lvalue Var 0x558d3cf02278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558d3cf04b20 <col:41> 'int' 1
|   |-CallExpr 0x558d3cf04bd0 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d3cf04bb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf04b98 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558d3cf04c78 <line:734:3, col:36>
|     `-CallExpr 0x558d3cf04c58 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558d3cf04c40 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558d3cf04bf0 <col:10> 'void *(void)' Function 0x558d3cea8958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558d3cf04e20 prev 0x558d3cf01c48 <line:736:1, line:755:1> line:736:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x558d3cf04d88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558d3cf06040 <line:737:1, line:755:1>
|   |-CallExpr 0x558d3cf04f00 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d3cf04ee8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf04ec8 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d3cf04f60 <line:739:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558d3cf04f20 <col:3> 'int' lvalue Var 0x558d3cf02f70 'x' 'int'
|   | `-IntegerLiteral 0x558d3cf04f40 <col:7> 'int' 2
|   |-CallExpr 0x558d3cf04fb8 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d3cf04fa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf04f80 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d3cf05010 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d3cf04ff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf04fd8 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d3cf05070 <line:742:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558d3cf05030 <col:3> 'int' lvalue Var 0x558d3cf03090 'y' 'int'
|   | `-IntegerLiteral 0x558d3cf05050 <col:7> 'int' 1
|   |-CallExpr 0x558d3cf050c8 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d3cf050b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf05090 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d3cf05120 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d3cf05108 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf050e8 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d3cf05408 <line:745:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558d3cf05140 <col:3> 'int' lvalue Var 0x558d3cf024b8 'a' 'int'
|   | `-ConditionalOperator 0x558d3cf053d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558d3cf05200 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558d3cf051b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558d3cf051a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558d3cf05160 <col:7> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558d3cf051e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558d3cf051d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558d3cf05180 <col:25> '_Bool' lvalue Var 0x558d3cf02738 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x558d3cf053c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d3cf05220 <col:42> 'int' lvalue Var 0x558d3cf02c10 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558d3cf053a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558d3cf05370 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558d3cf052e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558d3cf05298 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558d3cf05280 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558d3cf05240 <col:55> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558d3cf052c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558d3cf052b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558d3cf05260 <col:73> '_Bool' lvalue Var 0x558d3cf02990 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x558d3cf05340 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558d3cf05300 <col:90> 'int' lvalue Var 0x558d3cf02d08 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558d3cf05358 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf05320 <col:102> 'int' lvalue Var 0x558d3cf024b8 'a' 'int'
|   |-BinaryOperator 0x558d3cf05610 <line:746:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf05428 <col:3> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf055f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf055c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558d3cf054e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558d3cf054a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558d3cf05488 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558d3cf05448 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558d3cf054d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558d3cf054b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558d3cf05468 <col:38> '_Bool' lvalue Var 0x558d3cf02738 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf05580 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d3cf05538 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d3cf05508 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558d3cf055b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d3cf05598 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf05560 <col:66> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558d3cf058f8 <line:747:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf05630 <col:3> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf058e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf058b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558d3cf057d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558d3cf056f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558d3cf056a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558d3cf05690 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558d3cf05650 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558d3cf056d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558d3cf056c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558d3cf05670 <col:38> '_Bool' lvalue Var 0x558d3cf02738 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x558d3cf057b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558d3cf05768 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558d3cf05750 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558d3cf05710 <col:56> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558d3cf05798 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558d3cf05780 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558d3cf05730 <col:74> '_Bool' lvalue Var 0x558d3cf02990 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf05868 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d3cf05820 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d3cf057f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558d3cf05898 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d3cf05880 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf05848 <col:102> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558d3cf05b00 <line:748:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf05918 <col:3> '_Bool' lvalue Var 0x558d3cf02738 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf05ae8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf05ab8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558d3cf059d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558d3cf05990 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558d3cf05978 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558d3cf05938 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558d3cf059c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558d3cf059a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558d3cf05958 <col:38> '_Bool' lvalue Var 0x558d3cf02738 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf05a70 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d3cf05a28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d3cf059f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558d3cf05aa0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d3cf05a88 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf05a50 <col:66> '_Bool' lvalue Var 0x558d3cf02738 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558d3cf05df8 <line:749:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf05b30 <col:3> '_Bool' lvalue Var 0x558d3cf02990 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf05de0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf05db0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558d3cf05cd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558d3cf05bf0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558d3cf05ba8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558d3cf05b90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558d3cf05b50 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558d3cf05bd8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558d3cf05bc0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558d3cf05b70 <col:38> '_Bool' lvalue Var 0x558d3cf02738 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x558d3cf05cb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558d3cf05c68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558d3cf05c50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558d3cf05c10 <col:56> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558d3cf05c98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558d3cf05c80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558d3cf05c30 <col:74> '_Bool' lvalue Var 0x558d3cf02990 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf05d68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d3cf05d20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d3cf05cf0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558d3cf05d98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d3cf05d80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf05d48 <col:102> '_Bool' lvalue Var 0x558d3cf02990 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x558d3cf05e50 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d3cf05e38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf05e18 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d3cf05ea8 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d3cf05e90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf05e70 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d3cf05f60 <line:752:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558d3cf05ec8 <col:3> 'int' lvalue Var 0x558d3cf02278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558d3cf05f40 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558d3cf05f28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d3cf05ee8 <col:22> 'int' lvalue Var 0x558d3cf02278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558d3cf05f08 <col:41> 'int' 1
|   |-CallExpr 0x558d3cf05fb8 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d3cf05fa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf05f80 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558d3cf06030 <line:754:3, col:36>
|     `-CallExpr 0x558d3cf06010 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558d3cf05ff8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558d3cf05fd8 <col:10> 'void *(void)' Function 0x558d3cea8958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558d3cf06188 prev 0x558d3cf01da0 <line:756:1, line:775:1> line:756:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x558d3cf060f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558d3cf073c0 <line:757:1, line:775:1>
|   |-CallExpr 0x558d3cf06268 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d3cf06250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf06230 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d3cf062c8 <line:759:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558d3cf06288 <col:3> 'int' lvalue Var 0x558d3cf03090 'y' 'int'
|   | `-IntegerLiteral 0x558d3cf062a8 <col:7> 'int' 2
|   |-CallExpr 0x558d3cf06320 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d3cf06308 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf062e8 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d3cf06378 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d3cf06360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf06340 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d3cf063d8 <line:762:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558d3cf06398 <col:3> 'int' lvalue Var 0x558d3cf031b0 'z' 'int'
|   | `-IntegerLiteral 0x558d3cf063b8 <col:7> 'int' 1
|   |-CallExpr 0x558d3cf06430 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d3cf06418 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf063f8 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d3cf06488 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d3cf06470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf06450 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d3cf06770 <line:765:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558d3cf064a8 <col:3> 'int' lvalue Var 0x558d3cf024b8 'a' 'int'
|   | `-ConditionalOperator 0x558d3cf06740 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558d3cf06568 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558d3cf06520 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558d3cf06508 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558d3cf064c8 <col:7> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558d3cf06550 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558d3cf06538 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558d3cf064e8 <col:25> '_Bool' lvalue Var 0x558d3cf027b0 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x558d3cf06728 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d3cf06588 <col:42> 'int' lvalue Var 0x558d3cf02c10 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558d3cf06708 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558d3cf066d8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558d3cf06648 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558d3cf06600 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558d3cf065e8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558d3cf065a8 <col:55> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558d3cf06630 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558d3cf06618 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558d3cf065c8 <col:73> '_Bool' lvalue Var 0x558d3cf02a08 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558d3cf066a8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558d3cf06668 <col:90> 'int' lvalue Var 0x558d3cf02d08 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558d3cf066c0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf06688 <col:102> 'int' lvalue Var 0x558d3cf024b8 'a' 'int'
|   |-BinaryOperator 0x558d3cf06978 <line:766:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf06790 <col:3> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf06960 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf06930 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558d3cf06850 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558d3cf06808 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558d3cf067f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558d3cf067b0 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558d3cf06838 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558d3cf06820 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558d3cf067d0 <col:38> '_Bool' lvalue Var 0x558d3cf027b0 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf068e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d3cf068a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d3cf06870 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558d3cf06918 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d3cf06900 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf068c8 <col:66> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558d3cf06c88 <line:767:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf06998 <col:3> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf06c70 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf06c40 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558d3cf06b60 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558d3cf06a58 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558d3cf06a10 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558d3cf069f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558d3cf069b8 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558d3cf06a40 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558d3cf06a28 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558d3cf069d8 <col:38> '_Bool' lvalue Var 0x558d3cf027b0 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x558d3cf06b40 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558d3cf06ad0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558d3cf06ab8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558d3cf06a78 <col:56> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558d3cf06b00 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558d3cf06ae8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558d3cf06a98 <col:74> '_Bool' lvalue Var 0x558d3cf02a08 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf06bf8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d3cf06bb0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d3cf06b80 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558d3cf06c28 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d3cf06c10 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf06bd8 <col:102> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558d3cf06e90 <line:768:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf06ca8 <col:3> '_Bool' lvalue Var 0x558d3cf027b0 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf06e78 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf06e48 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558d3cf06d68 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558d3cf06d20 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558d3cf06d08 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558d3cf06cc8 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558d3cf06d50 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558d3cf06d38 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558d3cf06ce8 <col:38> '_Bool' lvalue Var 0x558d3cf027b0 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf06e00 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d3cf06db8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d3cf06d88 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558d3cf06e30 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d3cf06e18 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf06de0 <col:66> '_Bool' lvalue Var 0x558d3cf027b0 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558d3cf07178 <line:769:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf06eb0 <col:3> '_Bool' lvalue Var 0x558d3cf02a08 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf07160 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf07130 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558d3cf07050 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558d3cf06f70 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558d3cf06f28 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558d3cf06f10 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558d3cf06ed0 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558d3cf06f58 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558d3cf06f40 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558d3cf06ef0 <col:38> '_Bool' lvalue Var 0x558d3cf027b0 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x558d3cf07030 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558d3cf06fe8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558d3cf06fd0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558d3cf06f90 <col:56> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558d3cf07018 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558d3cf07000 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558d3cf06fb0 <col:74> '_Bool' lvalue Var 0x558d3cf02a08 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf070e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d3cf070a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d3cf07070 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558d3cf07118 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d3cf07100 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf070c8 <col:102> '_Bool' lvalue Var 0x558d3cf02a08 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x558d3cf071d0 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d3cf071b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf07198 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d3cf07228 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d3cf07210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf071f0 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d3cf072e0 <line:772:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558d3cf07248 <col:3> 'int' lvalue Var 0x558d3cf02278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558d3cf072c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558d3cf072a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d3cf07268 <col:22> 'int' lvalue Var 0x558d3cf02278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558d3cf07288 <col:41> 'int' 1
|   |-CallExpr 0x558d3cf07338 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d3cf07320 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf07300 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558d3cf073b0 <line:774:3, col:36>
|     `-CallExpr 0x558d3cf07390 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558d3cf07378 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558d3cf07358 <col:10> 'void *(void)' Function 0x558d3cea8958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558d3cf07508 prev 0x558d3cf01ef8 <line:776:1, line:808:1> line:776:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x558d3cf07470 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558d3cf0b0f8 <line:777:1, line:808:1>
|   |-CallExpr 0x558d3cf075e8 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d3cf075d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf075b0 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d3cf07648 <line:779:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558d3cf07608 <col:3> 'int' lvalue Var 0x558d3cf031b0 'z' 'int'
|   | `-IntegerLiteral 0x558d3cf07628 <col:7> 'int' 2
|   |-CallExpr 0x558d3cf076a0 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d3cf07688 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf07668 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d3cf076f8 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d3cf076e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf076c0 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d3cf077a8 <line:782:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf07718 <col:3> '_Bool' lvalue Var 0x558d3cf03248 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf07790 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x558d3cf07770 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x558d3cf07758 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x558d3cf07738 <col:19> 'void *(void)' Function 0x558d3cea8958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x558d3cf07858 <line:783:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf077c8 <col:3> '_Bool' lvalue Var 0x558d3cf032c0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf07840 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x558d3cf07820 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x558d3cf07808 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x558d3cf077e8 <col:19> 'void *(void)' Function 0x558d3cea8958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x558d3cf078d0 <line:784:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf07878 <col:3> '_Bool' lvalue Var 0x558d3cf02550 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf078b8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d3cf07898 <col:21> '_Bool' lvalue Var 0x558d3cf032c0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x558d3cf07948 <line:785:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558d3cf078f0 <col:3> 'int' lvalue Var 0x558d3cf025d0 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x558d3cf07930 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d3cf07910 <col:15> 'int' lvalue Var 0x558d3cf024b8 'a' 'int'
|   |-BinaryOperator 0x558d3cf07d90 <line:786:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x558d3cf07968 <col:3> 'int' lvalue Var 0x558d3cf024b8 'a' 'int'
|   | `-ConditionalOperator 0x558d3cf07d60 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x558d3cf07b88 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x558d3cf07a98 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x558d3cf079c0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x558d3cf079a8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x558d3cf07988 <col:8> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x558d3cf07a78 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x558d3cf07a10 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x558d3cf079f8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x558d3cf079d8 <col:27> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x558d3cf07a60 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x558d3cf07a48 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x558d3cf07a28 <col:46> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x558d3cf07b68 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x558d3cf07af0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x558d3cf07ad8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x558d3cf07ab8 <col:65> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x558d3cf07b50 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x558d3cf07b28 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x558d3cf07b08 <col:84> '_Bool' lvalue Var 0x558d3cf02a80 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x558d3cf07d48 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d3cf07ba8 <col:101> 'int' lvalue Var 0x558d3cf024b8 'a' 'int'
|   |   `-ParenExpr 0x558d3cf07d28 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x558d3cf07cf8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x558d3cf07c68 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558d3cf07c20 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558d3cf07c08 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558d3cf07bc8 <col:106> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558d3cf07c50 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558d3cf07c38 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558d3cf07be8 <col:124> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x558d3cf07cc8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558d3cf07c88 <col:141> 'int' lvalue Var 0x558d3cf02c10 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x558d3cf07ce0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf07ca8 <col:153> 'int' lvalue Var 0x558d3cf02d08 'a$w_buff1' 'int'
|   |-BinaryOperator 0x558d3cf082a0 <line:787:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x558d3cf07db0 <col:3> 'int' lvalue Var 0x558d3cf02c10 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x558d3cf08270 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x558d3cf08240 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558d3cf08228 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558d3cf07dd0 <col:15> '_Bool' lvalue Var 0x558d3cf032c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x558d3cf08258 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d3cf07df0 <col:31> 'int' lvalue Var 0x558d3cf02c10 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558d3cf08208 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x558d3cf081d8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x558d3cf08000 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x558d3cf07f20 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x558d3cf07e48 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x558d3cf07e30 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x558d3cf07e10 <col:45> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x558d3cf07f00 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x558d3cf07e98 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x558d3cf07e80 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x558d3cf07e60 <col:64> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x558d3cf07ee8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x558d3cf07ed0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x558d3cf07eb0 <col:83> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x558d3cf07fe0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x558d3cf07f78 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x558d3cf07f60 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x558d3cf07f40 <col:102> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x558d3cf07fc8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x558d3cf07fb0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x558d3cf07f90 <col:121> '_Bool' lvalue Var 0x558d3cf02a80 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x558d3cf081c0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558d3cf08020 <col:138> 'int' lvalue Var 0x558d3cf02c10 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x558d3cf081a0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x558d3cf08170 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x558d3cf080e0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x558d3cf08098 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x558d3cf08080 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x558d3cf08040 <col:151> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x558d3cf080c8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x558d3cf080b0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558d3cf08060 <col:169> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x558d3cf08140 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x558d3cf08100 <col:186> 'int' lvalue Var 0x558d3cf02c10 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x558d3cf08158 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x558d3cf08120 <col:198> 'int' lvalue Var 0x558d3cf02c10 'a$w_buff0' 'int'
|   |-BinaryOperator 0x558d3cf087b0 <line:788:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x558d3cf082c0 <col:3> 'int' lvalue Var 0x558d3cf02d08 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x558d3cf08780 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x558d3cf08750 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558d3cf08738 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558d3cf082e0 <col:15> '_Bool' lvalue Var 0x558d3cf032c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x558d3cf08768 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d3cf08300 <col:31> 'int' lvalue Var 0x558d3cf02d08 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x558d3cf08718 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x558d3cf086e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x558d3cf08510 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x558d3cf08430 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x558d3cf08358 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x558d3cf08340 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x558d3cf08320 <col:45> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x558d3cf08410 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x558d3cf083a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x558d3cf08390 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x558d3cf08370 <col:64> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x558d3cf083f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x558d3cf083e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x558d3cf083c0 <col:83> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x558d3cf084f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x558d3cf08488 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x558d3cf08470 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x558d3cf08450 <col:102> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x558d3cf084d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x558d3cf084c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x558d3cf084a0 <col:121> '_Bool' lvalue Var 0x558d3cf02a80 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x558d3cf086d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558d3cf08530 <col:138> 'int' lvalue Var 0x558d3cf02d08 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x558d3cf086b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x558d3cf08680 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x558d3cf085f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x558d3cf085a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x558d3cf08590 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x558d3cf08550 <col:151> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x558d3cf085d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x558d3cf085c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558d3cf08570 <col:169> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x558d3cf08650 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x558d3cf08610 <col:186> 'int' lvalue Var 0x558d3cf02d08 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x558d3cf08668 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x558d3cf08630 <col:198> 'int' lvalue Var 0x558d3cf02d08 'a$w_buff1' 'int'
|   |-BinaryOperator 0x558d3cf08d68 <line:789:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf087d0 <col:3> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf08d50 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf08d20 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x558d3cf08cd8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558d3cf08cc0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558d3cf087f0 <col:20> '_Bool' lvalue Var 0x558d3cf032c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf08d08 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558d3cf08cf0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558d3cf08810 <col:36> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x558d3cf08ca0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x558d3cf08c70 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x558d3cf08a20 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558d3cf08940 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558d3cf08868 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558d3cf08850 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558d3cf08830 <col:55> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558d3cf08920 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558d3cf088b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558d3cf088a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558d3cf08880 <col:74> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x558d3cf08908 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558d3cf088f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558d3cf088d0 <col:93> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558d3cf08a00 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558d3cf08998 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558d3cf08980 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558d3cf08960 <col:112> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x558d3cf089e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558d3cf089d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558d3cf089b0 <col:131> '_Bool' lvalue Var 0x558d3cf02a80 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x558d3cf08c58 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558d3cf08c40 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558d3cf08a40 <col:148> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x558d3cf08c20 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x558d3cf08bf0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x558d3cf08b00 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558d3cf08ab8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558d3cf08aa0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558d3cf08a60 <col:166> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558d3cf08ae8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558d3cf08ad0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558d3cf08a80 <col:184> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x558d3cf08ba8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558d3cf08b60 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558d3cf08b20 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558d3cf08bd8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x558d3cf08bc0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x558d3cf08b88 <col:212> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558d3cf09330 <line:790:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf08d88 <col:3> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf09318 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf092e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x558d3cf092a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558d3cf09288 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558d3cf08da8 <col:20> '_Bool' lvalue Var 0x558d3cf032c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf092d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558d3cf092b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558d3cf08dc8 <col:36> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x558d3cf09268 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x558d3cf09238 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x558d3cf08fd8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558d3cf08ef8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558d3cf08e20 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558d3cf08e08 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558d3cf08de8 <col:55> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558d3cf08ed8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558d3cf08e70 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558d3cf08e58 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558d3cf08e38 <col:74> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x558d3cf08ec0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558d3cf08ea8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558d3cf08e88 <col:93> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558d3cf08fb8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558d3cf08f50 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558d3cf08f38 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558d3cf08f18 <col:112> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x558d3cf08fa0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558d3cf08f88 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558d3cf08f68 <col:131> '_Bool' lvalue Var 0x558d3cf02a80 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x558d3cf09220 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558d3cf09208 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558d3cf08ff8 <col:148> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x558d3cf091e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x558d3cf091b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x558d3cf090b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558d3cf09070 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558d3cf09058 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558d3cf09018 <col:166> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558d3cf090a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558d3cf09088 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558d3cf09038 <col:184> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x558d3cf09188 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558d3cf09108 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558d3cf090d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558d3cf091a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x558d3cf09160 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x558d3cf09130 <col:219> 'int' 0
|   |-BinaryOperator 0x558d3cf098d8 <line:791:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf09350 <col:3> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf098c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf09890 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x558d3cf09848 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558d3cf09830 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558d3cf09370 <col:20> '_Bool' lvalue Var 0x558d3cf032c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf09878 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558d3cf09860 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558d3cf09390 <col:36> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x558d3cf09810 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x558d3cf097e0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x558d3cf095a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558d3cf094c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558d3cf093e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558d3cf093d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558d3cf093b0 <col:55> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558d3cf094a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558d3cf09438 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558d3cf09420 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558d3cf09400 <col:74> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x558d3cf09488 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558d3cf09470 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558d3cf09450 <col:93> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558d3cf09580 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558d3cf09518 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558d3cf09500 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558d3cf094e0 <col:112> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x558d3cf09568 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558d3cf09550 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558d3cf09530 <col:131> '_Bool' lvalue Var 0x558d3cf02a80 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x558d3cf097c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558d3cf097b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558d3cf095c0 <col:148> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x558d3cf09790 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x558d3cf09760 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x558d3cf09680 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558d3cf09638 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558d3cf09620 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558d3cf095e0 <col:166> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558d3cf09668 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558d3cf09650 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558d3cf09600 <col:184> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x558d3cf09718 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558d3cf096d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558d3cf096a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558d3cf09748 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x558d3cf09730 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x558d3cf096f8 <col:212> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x558d3cf09ec8 <line:792:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf098f8 <col:3> '_Bool' lvalue Var 0x558d3cf02a80 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf09eb0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf09e80 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x558d3cf09e38 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558d3cf09e20 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558d3cf09918 <col:20> '_Bool' lvalue Var 0x558d3cf032c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf09e68 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558d3cf09e50 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558d3cf09938 <col:36> '_Bool' lvalue Var 0x558d3cf02a80 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x558d3cf09e00 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x558d3cf09dd0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x558d3cf09b70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558d3cf09a68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558d3cf09990 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558d3cf09978 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558d3cf09958 <col:55> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558d3cf09a48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558d3cf099e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558d3cf099c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558d3cf099a8 <col:74> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x558d3cf09a30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558d3cf09a18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558d3cf099f8 <col:93> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558d3cf09b28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558d3cf09ac0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558d3cf09aa8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558d3cf09a88 <col:112> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x558d3cf09b10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558d3cf09af8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558d3cf09ad8 <col:131> '_Bool' lvalue Var 0x558d3cf02a80 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x558d3cf09db8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558d3cf09da0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558d3cf09b90 <col:148> '_Bool' lvalue Var 0x558d3cf02a80 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x558d3cf09d80 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x558d3cf09d50 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x558d3cf09c50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558d3cf09c08 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558d3cf09bf0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558d3cf09bb0 <col:166> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558d3cf09c38 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558d3cf09c20 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558d3cf09bd0 <col:184> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x558d3cf09d20 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558d3cf09ca0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558d3cf09c70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558d3cf09d38 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x558d3cf09cf8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x558d3cf09cc8 <col:219> 'int' 0
|   |-BinaryOperator 0x558d3cf09f40 <line:793:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558d3cf09ee8 <col:3> 'int' lvalue Var 0x558d3cf02398 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x558d3cf09f28 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d3cf09f08 <col:25> 'int' lvalue Var 0x558d3cf024b8 'a' 'int'
|   |-BinaryOperator 0x558d3cf0a070 <line:794:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x558d3cf09f60 <col:3> 'int' lvalue Var 0x558d3cf024b8 'a' 'int'
|   | `-ConditionalOperator 0x558d3cf0a040 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x558d3cf09ff8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558d3cf09fe0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558d3cf09f80 <col:7> '_Bool' lvalue Var 0x558d3cf02550 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x558d3cf0a010 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d3cf09fa0 <col:25> 'int' lvalue Var 0x558d3cf025d0 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x558d3cf0a028 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x558d3cf09fc0 <col:37> 'int' lvalue Var 0x558d3cf024b8 'a' 'int'
|   |-BinaryOperator 0x558d3cf0a108 <line:795:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf0a090 <col:3> '_Bool' lvalue Var 0x558d3cf02550 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x558d3cf0a0e0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558d3cf0a0b0 <col:28> 'int' 0
|   |-CallExpr 0x558d3cf0a160 <line:796:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d3cf0a148 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf0a128 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d3cf0a1b8 <line:797:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d3cf0a1a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf0a180 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d3cf0a4a0 <line:798:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558d3cf0a1d8 <col:3> 'int' lvalue Var 0x558d3cf024b8 'a' 'int'
|   | `-ConditionalOperator 0x558d3cf0a470 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558d3cf0a298 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558d3cf0a250 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558d3cf0a238 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558d3cf0a1f8 <col:7> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558d3cf0a280 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558d3cf0a268 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558d3cf0a218 <col:25> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x558d3cf0a458 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d3cf0a2b8 <col:42> 'int' lvalue Var 0x558d3cf02c10 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558d3cf0a438 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558d3cf0a408 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558d3cf0a378 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558d3cf0a330 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558d3cf0a318 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558d3cf0a2d8 <col:55> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558d3cf0a360 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558d3cf0a348 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558d3cf0a2f8 <col:73> '_Bool' lvalue Var 0x558d3cf02a80 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x558d3cf0a3d8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558d3cf0a398 <col:90> 'int' lvalue Var 0x558d3cf02d08 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558d3cf0a3f0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf0a3b8 <col:102> 'int' lvalue Var 0x558d3cf024b8 'a' 'int'
|   |-BinaryOperator 0x558d3cf0a6a8 <line:799:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf0a4c0 <col:3> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf0a690 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf0a660 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558d3cf0a580 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558d3cf0a538 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558d3cf0a520 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558d3cf0a4e0 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558d3cf0a568 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558d3cf0a550 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558d3cf0a500 <col:38> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf0a618 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d3cf0a5d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d3cf0a5a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558d3cf0a648 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d3cf0a630 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf0a5f8 <col:66> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558d3cf0a990 <line:800:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf0a6c8 <col:3> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf0a978 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf0a948 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558d3cf0a868 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558d3cf0a788 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558d3cf0a740 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558d3cf0a728 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558d3cf0a6e8 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558d3cf0a770 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558d3cf0a758 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558d3cf0a708 <col:38> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x558d3cf0a848 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558d3cf0a800 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558d3cf0a7e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558d3cf0a7a8 <col:56> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558d3cf0a830 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558d3cf0a818 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558d3cf0a7c8 <col:74> '_Bool' lvalue Var 0x558d3cf02a80 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf0a900 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d3cf0a8b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d3cf0a888 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558d3cf0a930 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d3cf0a918 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf0a8e0 <col:102> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558d3cf0abc8 <line:801:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf0a9b0 <col:3> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf0abb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf0ab80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558d3cf0aa70 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558d3cf0aa28 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558d3cf0aa10 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558d3cf0a9d0 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558d3cf0aa58 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558d3cf0aa40 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558d3cf0a9f0 <col:38> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf0ab08 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d3cf0aac0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d3cf0aa90 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558d3cf0ab38 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d3cf0ab20 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf0aae8 <col:66> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x558d3cf0aeb0 <line:802:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558d3cf0abe8 <col:3> '_Bool' lvalue Var 0x558d3cf02a80 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x558d3cf0ae98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d3cf0ae68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558d3cf0ad88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558d3cf0aca8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558d3cf0ac60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558d3cf0ac48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558d3cf0ac08 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558d3cf0ac90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558d3cf0ac78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558d3cf0ac28 <col:38> '_Bool' lvalue Var 0x558d3cf02828 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x558d3cf0ad68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558d3cf0ad20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558d3cf0ad08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558d3cf0acc8 <col:56> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558d3cf0ad50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558d3cf0ad38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558d3cf0ace8 <col:74> '_Bool' lvalue Var 0x558d3cf02a80 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x558d3cf0ae20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d3cf0add8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d3cf0ada8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558d3cf0ae50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d3cf0ae38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d3cf0ae00 <col:102> '_Bool' lvalue Var 0x558d3cf02a80 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x558d3cf0af08 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d3cf0aef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf0aed0 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d3cf0af60 <line:804:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d3cf0af48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf0af28 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d3cf0b018 <line:805:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558d3cf0af80 <col:3> 'int' lvalue Var 0x558d3cf02278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558d3cf0aff8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558d3cf0afe0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d3cf0afa0 <col:22> 'int' lvalue Var 0x558d3cf02278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558d3cf0afc0 <col:41> 'int' 1
|   |-CallExpr 0x558d3cf0b070 <line:806:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d3cf0b058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d3cf0b038 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558d3cf0b0e8 <line:807:3, col:36>
|     `-CallExpr 0x558d3cf0b0c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558d3cf0b0b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558d3cf0b090 <col:10> 'void *(void)' Function 0x558d3cea8958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558d3cf0b218 prev 0x558d3cf01fc0 <line:809:1, line:811:1> line:809:6 fence 'void ()'
| `-CompoundStmt 0x558d3cf0b2b8 <line:810:1, line:811:1>
|-FunctionDecl 0x558d3cf0b2e8 prev 0x558d3cf02080 <line:812:1, line:814:1> line:812:6 isync 'void ()'
| `-CompoundStmt 0x558d3cf0b388 <line:813:1, line:814:1>
|-FunctionDecl 0x558d3cf0b3b8 prev 0x558d3cf02140 <line:815:1, line:817:1> line:815:6 lwfence 'void ()'
| `-CompoundStmt 0x558d3cf0b458 <line:816:1, line:817:1>
`-FunctionDecl 0x558d3cf0b4c8 <line:818:1, line:844:1> line:818:5 main 'int ()'
  `-CompoundStmt 0x558d3cf0d438 <line:819:1, line:844:1>
    |-DeclStmt 0x558d3cf0b5e0 <line:820:3, col:18>
    | `-VarDecl 0x558d3cf0b578 <col:3, col:13> col:13 used t1515 'pthread_t':'unsigned long'
    |-CallExpr 0x558d3cf0b7e8 <line:821:3, col:54> 'int'
    | |-ImplicitCastExpr 0x558d3cf0b7d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d3cf0b5f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558d3cee9488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558d3cf0b638 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558d3cf0b618 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558d3cf0b578 't1515' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558d3cf0b828 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558d3cf0b6b0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x558d3cf0b688 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558d3cf0b650 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x558d3cf0b840 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d3cf0b6d0 <col:39> 'void *(void *)' Function 0x558d3cf033d8 'P0' 'void *(void *)'
    | `-ParenExpr 0x558d3cf0b750 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x558d3cf0b728 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558d3cf0b6f0 <col:52> 'int' 0
    |-DeclStmt 0x558d3cf0b8d0 <line:822:3, col:18>
    | `-VarDecl 0x558d3cf0b868 <col:3, col:13> col:13 used t1516 'pthread_t':'unsigned long'
    |-CallExpr 0x558d3cf0ba78 <line:823:3, col:54> 'int'
    | |-ImplicitCastExpr 0x558d3cf0ba60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d3cf0b8e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558d3cee9488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558d3cf0b928 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558d3cf0b908 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558d3cf0b868 't1516' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558d3cf0bab8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558d3cf0b9a0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x558d3cf0b978 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558d3cf0b940 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x558d3cf0bad0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d3cf0b9c0 <col:39> 'void *(void *)' Function 0x558d3cf04e20 'P1' 'void *(void *)'
    | `-ParenExpr 0x558d3cf0ba40 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x558d3cf0ba18 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558d3cf0b9e0 <col:52> 'int' 0
    |-DeclStmt 0x558d3cf0bb60 <line:824:3, col:18>
    | `-VarDecl 0x558d3cf0baf8 <col:3, col:13> col:13 used t1517 'pthread_t':'unsigned long'
    |-CallExpr 0x558d3cf0bd20 <line:825:3, col:54> 'int'
    | |-ImplicitCastExpr 0x558d3cf0bd08 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d3cf0bb90 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558d3cee9488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558d3cf0bbd0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558d3cf0bbb0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558d3cf0baf8 't1517' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558d3cf0bd60 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558d3cf0bc48 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x558d3cf0bc20 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558d3cf0bbe8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x558d3cf0bd78 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d3cf0bc68 <col:39> 'void *(void *)' Function 0x558d3cf06188 'P2' 'void *(void *)'
    | `-ParenExpr 0x558d3cf0bce8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x558d3cf0bcc0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558d3cf0bc88 <col:52> 'int' 0
    |-DeclStmt 0x558d3cf0be08 <line:826:3, col:18>
    | `-VarDecl 0x558d3cf0bda0 <col:3, col:13> col:13 used t1518 'pthread_t':'unsigned long'
    |-CallExpr 0x558d3cf0bfb0 <line:827:3, col:54> 'int'
    | |-ImplicitCastExpr 0x558d3cf0bf98 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d3cf0be20 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558d3cee9488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558d3cf0be60 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558d3cf0be40 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558d3cf0bda0 't1518' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558d3cf0bff0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558d3cf0bed8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x558d3cf0beb0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558d3cf0be78 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x558d3cf0c008 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d3cf0bef8 <col:39> 'void *(void *)' Function 0x558d3cf07508 'P3' 'void *(void *)'
    | `-ParenExpr 0x558d3cf0bf78 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x558d3cf0bf50 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558d3cf0bf18 <col:52> 'int' 0
    |-CallExpr 0x558d3cf0c058 <line:828:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558d3cf0c040 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558d3cf0c020 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558d3cf0c128 <line:829:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x558d3cf0c078 <col:3> '_Bool' lvalue Var 0x558d3cf02df8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x558d3cf0c110 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x558d3cf0c0f0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x558d3cf0c0d8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x558d3cf0c098 <col:21> 'int' lvalue Var 0x558d3cf02278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x558d3cf0c0b8 <col:41> 'int' 4
    |-CallExpr 0x558d3cf0c180 <line:830:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558d3cf0c168 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558d3cf0c148 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558d3cf0c1f8 <line:831:3, col:36> 'void'
    | |-ImplicitCastExpr 0x558d3cf0c1e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d3cf0c1a0 <col:3> 'void (int)' Function 0x558d3cea8790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x558d3cf0c238 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x558d3cf0c220 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x558d3cf0c1c0 <col:21> '_Bool' lvalue Var 0x558d3cf02df8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x558d3cf0c288 <line:832:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558d3cf0c270 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558d3cf0c250 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558d3cf0c570 <line:833:3, col:103> 'int' '='
    | |-DeclRefExpr 0x558d3cf0c2a8 <col:3> 'int' lvalue Var 0x558d3cf024b8 'a' 'int'
    | `-ConditionalOperator 0x558d3cf0c540 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x558d3cf0c368 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x558d3cf0c320 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x558d3cf0c308 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x558d3cf0c2c8 <col:7> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x558d3cf0c350 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x558d3cf0c338 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x558d3cf0c2e8 <col:25> '_Bool' lvalue Var 0x558d3cf02648 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x558d3cf0c528 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x558d3cf0c388 <col:42> 'int' lvalue Var 0x558d3cf02c10 'a$w_buff0' 'int'
    |   `-ParenExpr 0x558d3cf0c508 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x558d3cf0c4d8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x558d3cf0c448 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x558d3cf0c400 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x558d3cf0c3e8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x558d3cf0c3a8 <col:55> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x558d3cf0c430 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x558d3cf0c418 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x558d3cf0c3c8 <col:73> '_Bool' lvalue Var 0x558d3cf028a0 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x558d3cf0c4a8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x558d3cf0c468 <col:90> 'int' lvalue Var 0x558d3cf02d08 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x558d3cf0c4c0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x558d3cf0c488 <col:102> 'int' lvalue Var 0x558d3cf024b8 'a' 'int'
    |-BinaryOperator 0x558d3cf0c778 <line:834:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x558d3cf0c590 <col:3> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x558d3cf0c760 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558d3cf0c730 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x558d3cf0c650 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x558d3cf0c608 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x558d3cf0c5f0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x558d3cf0c5b0 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x558d3cf0c638 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x558d3cf0c620 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558d3cf0c5d0 <col:38> '_Bool' lvalue Var 0x558d3cf02648 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558d3cf0c6e8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558d3cf0c6a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558d3cf0c670 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x558d3cf0c718 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558d3cf0c700 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558d3cf0c6c8 <col:66> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x558d3cf0ca60 <line:835:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x558d3cf0c798 <col:3> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x558d3cf0ca48 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558d3cf0ca18 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x558d3cf0c938 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x558d3cf0c858 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x558d3cf0c810 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x558d3cf0c7f8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x558d3cf0c7b8 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x558d3cf0c840 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x558d3cf0c828 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x558d3cf0c7d8 <col:38> '_Bool' lvalue Var 0x558d3cf02648 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x558d3cf0c918 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x558d3cf0c8d0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x558d3cf0c8b8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x558d3cf0c878 <col:56> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x558d3cf0c900 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x558d3cf0c8e8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x558d3cf0c898 <col:74> '_Bool' lvalue Var 0x558d3cf028a0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558d3cf0c9d0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558d3cf0c988 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558d3cf0c958 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x558d3cf0ca00 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558d3cf0c9e8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558d3cf0c9b0 <col:102> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x558d3cf0cc78 <line:836:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x558d3cf0ca80 <col:3> '_Bool' lvalue Var 0x558d3cf02648 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558d3cf0cc60 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558d3cf0cc30 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x558d3cf0cb40 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x558d3cf0caf8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x558d3cf0cae0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x558d3cf0caa0 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x558d3cf0cb28 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x558d3cf0cb10 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558d3cf0cac0 <col:38> '_Bool' lvalue Var 0x558d3cf02648 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558d3cf0cbe8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558d3cf0cba0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558d3cf0cb60 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x558d3cf0cc18 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558d3cf0cc00 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558d3cf0cbc8 <col:66> '_Bool' lvalue Var 0x558d3cf02648 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x558d3cf0cf60 <line:837:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x558d3cf0cc98 <col:3> '_Bool' lvalue Var 0x558d3cf028a0 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558d3cf0cf48 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558d3cf0cf18 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x558d3cf0ce38 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x558d3cf0cd58 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x558d3cf0cd10 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x558d3cf0ccf8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x558d3cf0ccb8 <col:20> '_Bool' lvalue Var 0x558d3cf02c88 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x558d3cf0cd40 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x558d3cf0cd28 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x558d3cf0ccd8 <col:38> '_Bool' lvalue Var 0x558d3cf02648 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x558d3cf0ce18 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x558d3cf0cdd0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x558d3cf0cdb8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x558d3cf0cd78 <col:56> '_Bool' lvalue Var 0x558d3cf02d80 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x558d3cf0ce00 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x558d3cf0cde8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x558d3cf0cd98 <col:74> '_Bool' lvalue Var 0x558d3cf028a0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558d3cf0ced0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558d3cf0ce88 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558d3cf0ce58 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x558d3cf0cf00 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558d3cf0cee8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558d3cf0ceb0 <col:102> '_Bool' lvalue Var 0x558d3cf028a0 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x558d3cf0cfb8 <line:838:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558d3cf0cfa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558d3cf0cf80 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558d3cf0d010 <line:839:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558d3cf0cff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558d3cf0cfd8 <col:3> 'void ()' Function 0x558d3cea8e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558d3cf0d2e0 <line:840:3, col:77> '_Bool' '='
    | |-DeclRefExpr 0x558d3cf0d030 <col:3> '_Bool' lvalue Var 0x558d3cf02e70 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x558d3cf0d2c8 <col:21, col:77> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x558d3cf0d2b0 <col:21, col:77> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x558d3cf0d290 <col:22, col:77> 'int'
    |       `-BinaryOperator 0x558d3cf0d270 <col:23, col:76> 'int' '&&'
    |         |-BinaryOperator 0x558d3cf0d1d8 <col:23, col:48> 'int' '&&'
    |         | |-BinaryOperator 0x558d3cf0d140 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x558d3cf0d0a8 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x558d3cf0d090 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x558d3cf0d050 <col:23> 'int' lvalue Var 0x558d3cf02f70 'x' 'int'
    |         | | | `-IntegerLiteral 0x558d3cf0d070 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x558d3cf0d120 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x558d3cf0d108 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x558d3cf0d0c8 <col:33> 'int' lvalue Var 0x558d3cf03090 'y' 'int'
    |         | |   `-IntegerLiteral 0x558d3cf0d0e8 <col:38> 'int' 2
    |         | `-BinaryOperator 0x558d3cf0d1b8 <col:43, col:48> 'int' '=='
    |         |   |-ImplicitCastExpr 0x558d3cf0d1a0 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x558d3cf0d160 <col:43> 'int' lvalue Var 0x558d3cf031b0 'z' 'int'
    |         |   `-IntegerLiteral 0x558d3cf0d180 <col:48> 'int' 2
    |         `-BinaryOperator 0x558d3cf0d250 <col:53, col:76> 'int' '=='
    |           |-ImplicitCastExpr 0x558d3cf0d238 <col:53> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x558d3cf0d1f8 <col:53> 'int' lvalue Var 0x558d3cf02398 '__unbuffered_p3_EAX' 'int'
    |           `-IntegerLiteral 0x558d3cf0d218 <col:76> 'int' 0
    |-CallExpr 0x558d3cf0d338 <line:841:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558d3cf0d320 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558d3cf0d300 <col:3> 'void ()' Function 0x558d3cea8f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558d3cf0d3b0 <line:842:3, col:36> 'void'
    | |-ImplicitCastExpr 0x558d3cf0d398 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d3cf0d358 <col:3> 'void (int)' Function 0x558d3cea8bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x558d3cf0d3f0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x558d3cf0d3d8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x558d3cf0d378 <col:21> '_Bool' lvalue Var 0x558d3cf02e70 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x558d3cf0d428 <line:843:3, col:10>
      `-IntegerLiteral 0x558d3cf0d408 <col:10> 'int' 0
