TranslationUnitDecl 0x561f79eeedf8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561f79eef6b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561f79eef390 '__int128'
|-TypedefDecl 0x561f79eef728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561f79eef3b0 'unsigned __int128'
|-TypedefDecl 0x561f79eefa30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561f79eef800 'struct __NSConstantString_tag'
|   `-Record 0x561f79eef780 '__NSConstantString_tag'
|-TypedefDecl 0x561f79eefad8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561f79eefa90 'char *'
|   `-BuiltinType 0x561f79eeee90 'char'
|-TypedefDecl 0x561f79f2ea90 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561f79eefd70 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561f79eefbb0 'struct __va_list_tag'
|     `-Record 0x561f79eefb30 '__va_list_tag'
|-FunctionDecl 0x561f79f2eb70 <./split_4/vogal_true-unreach-call.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x561f79f2ed40 <line:3:1, col:34> col:13 __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x561f79f2ec70 <col:31> col:34 'int'
|-FunctionDecl 0x561f79f2ee90 <line:4:1, line:9:1> line:4:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x561f79f2ee00 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x561f79f2f0e0 <col:34, line:9:1>
|   |-IfStmt 0x561f79f2f0b8 <line:5:3, line:7:3>
|   | |-UnaryOperator 0x561f79f2ef90 <line:5:7, col:13> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x561f79f2ef78 <col:8, col:13> 'int' <LValueToRValue>
|   | |   `-ParenExpr 0x561f79f2ef58 <col:8, col:13> 'int' lvalue
|   | |     `-DeclRefExpr 0x561f79f2ef38 <col:9> 'int' lvalue ParmVar 0x561f79f2ee00 'cond' 'int'
|   | `-CompoundStmt 0x561f79f2f0a0 <col:16, line:7:3>
|   |   `-LabelStmt 0x561f79f2f088 <line:6:5, col:29> 'ERROR'
|   |     `-CallExpr 0x561f79f2f018 <col:12, col:29> 'void'
|   |       `-ImplicitCastExpr 0x561f79f2f000 <col:12> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x561f79f2efa8 <col:12> 'void () __attribute__((noreturn))' Function 0x561f79f2eb70 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   `-ReturnStmt 0x561f79f2f0d0 <line:8:3>
|-FunctionDecl 0x561f79f2f150 <line:12:1, col:29> col:6 used __VERIFIER_nondet_char 'char ()'
`-FunctionDecl 0x561f79f2f2c8 <line:14:1, line:47:1> line:14:5 main 'int (void)'
  `-CompoundStmt 0x561f79f55750 <line:15:1, line:47:1>
    |-DeclStmt 0x561f79f2f9b8 <line:16:3, col:85>
    | |-VarDecl 0x561f79f2f440 <col:3, col:22> col:8 used input_string 'char [5]'
    | `-VarDecl 0x561f79f2f500 <col:3, col:84> col:25 used vogal_array 'char [11]' cinit
    |   `-InitListExpr 0x561f79f2f718 <col:39, col:84> 'char [11]'
    |     |-ImplicitCastExpr 0x561f79f2f758 <col:40> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x561f79f2f568 <col:40> 'int' 97
    |     |-ImplicitCastExpr 0x561f79f2f778 <col:44> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x561f79f2f580 <col:44> 'int' 65
    |     |-ImplicitCastExpr 0x561f79f2f7a0 <col:48> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x561f79f2f598 <col:48> 'int' 101
    |     |-ImplicitCastExpr 0x561f79f2f7d8 <col:52> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x561f79f2f5b0 <col:52> 'int' 69
    |     |-ImplicitCastExpr 0x561f79f2f7f0 <col:56> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x561f79f2f5c8 <col:56> 'int' 105
    |     |-ImplicitCastExpr 0x561f79f2f848 <col:60> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x561f79f2f5e0 <col:60> 'int' 73
    |     |-ImplicitCastExpr 0x561f79f2f860 <col:64> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x561f79f2f5f8 <col:64> 'int' 111
    |     |-ImplicitCastExpr 0x561f79f2f878 <col:68> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x561f79f2f610 <col:68> 'int' 79
    |     |-ImplicitCastExpr 0x561f79f2f890 <col:72> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x561f79f2f628 <col:72> 'int' 117
    |     |-ImplicitCastExpr 0x561f79f2f928 <col:76> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x561f79f2f640 <col:76> 'int' 85
    |     `-ImplicitCastExpr 0x561f79f2f940 <col:80> 'char' <IntegralCast>
    |       `-CharacterLiteral 0x561f79f2f658 <col:80> 'int' 0
    |-NullStmt 0x561f79f2f9d0 <col:86>
    |-DeclStmt 0x561f79f53cd8 <line:17:3, col:48>
    | |-VarDecl 0x561f79f2f9f0 <col:3, col:16> col:16 used i 'unsigned int'
    | |-VarDecl 0x561f79f53ac0 <col:3, col:18> col:18 used j 'unsigned int'
    | |-VarDecl 0x561f79f53b40 <col:3, col:20> col:20 used cont 'unsigned int'
    | |-VarDecl 0x561f79f53bc0 <col:3, col:26> col:26 tam_string 'unsigned int'
    | `-VarDecl 0x561f79f53c40 <col:3, col:38> col:38 used n_caracter 'unsigned int'
    |-ForStmt 0x561f79f53f68 <line:19:3, line:20:46>
    | |-BinaryOperator 0x561f79f53d48 <line:19:7, col:9> 'unsigned int' '='
    | | |-DeclRefExpr 0x561f79f53cf0 <col:7> 'unsigned int' lvalue Var 0x561f79f2f9f0 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x561f79f53d30 <col:9> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x561f79f53d10 <col:9> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x561f79f53dd8 <col:11, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x561f79f53da8 <col:11> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x561f79f53d68 <col:11> 'unsigned int' lvalue Var 0x561f79f2f9f0 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x561f79f53dc0 <col:13> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x561f79f53d88 <col:13> 'int' 5
    | |-UnaryOperator 0x561f79f53e18 <col:15, col:16> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x561f79f53df8 <col:15> 'unsigned int' lvalue Var 0x561f79f2f9f0 'i' 'unsigned int'
    | `-BinaryOperator 0x561f79f53f48 <line:20:5, col:46> 'char' '='
    |   |-ArraySubscriptExpr 0x561f79f53ea0 <col:5, col:19> 'char' lvalue
    |   | |-ImplicitCastExpr 0x561f79f53e70 <col:5> 'char *' <ArrayToPointerDecay>
    |   | | `-DeclRefExpr 0x561f79f53e30 <col:5> 'char [5]' lvalue Var 0x561f79f2f440 'input_string' 'char [5]'
    |   | `-ImplicitCastExpr 0x561f79f53e88 <col:18> 'unsigned int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x561f79f53e50 <col:18> 'unsigned int' lvalue Var 0x561f79f2f9f0 'i' 'unsigned int'
    |   `-CallExpr 0x561f79f53f28 <col:23, col:46> 'char'
    |     `-ImplicitCastExpr 0x561f79f53f10 <col:23> 'char (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x561f79f53ec0 <col:23> 'char ()' Function 0x561f79f2f150 '__VERIFIER_nondet_char' 'char ()'
    |-IfStmt 0x561f79f54128 <line:21:3, col:43>
    | |-UnaryOperator 0x561f79f540e0 <col:7, col:33> 'int' prefix '!' cannot overflow
    | | `-ParenExpr 0x561f79f540c0 <col:8, col:33> 'int'
    | |   `-BinaryOperator 0x561f79f540a0 <col:9, col:29> 'int' '=='
    | |     |-ImplicitCastExpr 0x561f79f54088 <col:9, col:26> 'int' <IntegralCast>
    | |     | `-ImplicitCastExpr 0x561f79f54070 <col:9, col:26> 'char' <LValueToRValue>
    | |     |   `-ArraySubscriptExpr 0x561f79f54038 <col:9, col:26> 'char' lvalue
    | |     |     |-ImplicitCastExpr 0x561f79f54020 <col:9> 'char *' <ArrayToPointerDecay>
    | |     |     | `-DeclRefExpr 0x561f79f53fa0 <col:9> 'char [5]' lvalue Var 0x561f79f2f440 'input_string' 'char [5]'
    | |     |     `-BinaryOperator 0x561f79f54000 <col:22, col:25> 'int' '-'
    | |     |       |-IntegerLiteral 0x561f79f53fc0 <col:22> 'int' 5
    | |     |       `-IntegerLiteral 0x561f79f53fe0 <col:25> 'int' 1
    | |     `-CharacterLiteral 0x561f79f54058 <col:29> 'int' 0
    | `-ReturnStmt 0x561f79f54118 <col:36, col:43>
    |   `-IntegerLiteral 0x561f79f540f8 <col:43> 'int' 0
    |-BinaryOperator 0x561f79f54198 <line:23:3, col:16> 'unsigned int' '='
    | |-DeclRefExpr 0x561f79f54140 <col:3> 'unsigned int' lvalue Var 0x561f79f53c40 'n_caracter' 'unsigned int'
    | `-ImplicitCastExpr 0x561f79f54180 <col:16> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x561f79f54160 <col:16> 'int' 0
    |-WhileStmt 0x561f79f542e8 <line:24:3, line:25:15>
    | |-BinaryOperator 0x561f79f54290 <line:24:9, col:35> 'int' '!='
    | | |-ImplicitCastExpr 0x561f79f54278 <col:9, col:32> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x561f79f54260 <col:9, col:32> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x561f79f54228 <col:9, col:32> 'char' lvalue
    | | |     |-ImplicitCastExpr 0x561f79f541f8 <col:9> 'char *' <ArrayToPointerDecay>
    | | |     | `-DeclRefExpr 0x561f79f541b8 <col:9> 'char [5]' lvalue Var 0x561f79f2f440 'input_string' 'char [5]'
    | | |     `-ImplicitCastExpr 0x561f79f54210 <col:22> 'unsigned int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x561f79f541d8 <col:22> 'unsigned int' lvalue Var 0x561f79f53c40 'n_caracter' 'unsigned int'
    | | `-CharacterLiteral 0x561f79f54248 <col:35> 'int' 0
    | `-UnaryOperator 0x561f79f542d0 <line:25:5, col:15> 'unsigned int' postfix '++'
    |   `-DeclRefExpr 0x561f79f542b0 <col:5> 'unsigned int' lvalue Var 0x561f79f53c40 'n_caracter' 'unsigned int'
    |-BinaryOperator 0x561f79f54360 <line:27:3, col:10> 'unsigned int' '='
    | |-DeclRefExpr 0x561f79f54308 <col:3> 'unsigned int' lvalue Var 0x561f79f53b40 'cont' 'unsigned int'
    | `-ImplicitCastExpr 0x561f79f54348 <col:10> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x561f79f54328 <col:10> 'int' 0
    |-ForStmt 0x561f79f54868 <line:28:3, line:31:16>
    | |-BinaryOperator 0x561f79f543d8 <line:28:7, col:9> 'unsigned int' '='
    | | |-DeclRefExpr 0x561f79f54380 <col:7> 'unsigned int' lvalue Var 0x561f79f2f9f0 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x561f79f543c0 <col:9> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x561f79f543a0 <col:9> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x561f79f54468 <col:11, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x561f79f54438 <col:11> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x561f79f543f8 <col:11> 'unsigned int' lvalue Var 0x561f79f2f9f0 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x561f79f54450 <col:13> 'unsigned int' <LValueToRValue>
    | |   `-DeclRefExpr 0x561f79f54418 <col:13> 'unsigned int' lvalue Var 0x561f79f53c40 'n_caracter' 'unsigned int'
    | |-UnaryOperator 0x561f79f544a8 <col:24, col:25> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x561f79f54488 <col:24> 'unsigned int' lvalue Var 0x561f79f2f9f0 'i' 'unsigned int'
    | `-ForStmt 0x561f79f54830 <line:29:6, line:31:16>
    |   |-BinaryOperator 0x561f79f54518 <line:29:10, col:12> 'unsigned int' '='
    |   | |-DeclRefExpr 0x561f79f544c0 <col:10> 'unsigned int' lvalue Var 0x561f79f53ac0 'j' 'unsigned int'
    |   | `-ImplicitCastExpr 0x561f79f54500 <col:12> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x561f79f544e0 <col:12> 'int' 0
    |   |-<<<NULL>>>
    |   |-BinaryOperator 0x561f79f545e8 <col:14, col:18> 'int' '<'
    |   | |-ImplicitCastExpr 0x561f79f545b8 <col:14> 'unsigned int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x561f79f54538 <col:14> 'unsigned int' lvalue Var 0x561f79f53ac0 'j' 'unsigned int'
    |   | `-ImplicitCastExpr 0x561f79f545d0 <col:16, col:18> 'unsigned int' <IntegralCast>
    |   |   `-BinaryOperator 0x561f79f54598 <col:16, col:18> 'int' '/'
    |   |     |-IntegerLiteral 0x561f79f54558 <col:16> 'int' 5
    |   |     `-IntegerLiteral 0x561f79f54578 <col:18> 'int' 2
    |   |-UnaryOperator 0x561f79f54628 <col:20, col:21> 'unsigned int' postfix '++'
    |   | `-DeclRefExpr 0x561f79f54608 <col:20> 'unsigned int' lvalue Var 0x561f79f53ac0 'j' 'unsigned int'
    |   `-IfStmt 0x561f79f54818 <line:30:9, line:31:16>
    |     |-BinaryOperator 0x561f79f547c0 <line:30:12, col:44> 'int' '=='
    |     | |-ImplicitCastExpr 0x561f79f54790 <col:12, col:26> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561f79f54760 <col:12, col:26> 'char' <LValueToRValue>
    |     | |   `-ArraySubscriptExpr 0x561f79f546b0 <col:12, col:26> 'char' lvalue
    |     | |     |-ImplicitCastExpr 0x561f79f54680 <col:12> 'char *' <ArrayToPointerDecay>
    |     | |     | `-DeclRefExpr 0x561f79f54640 <col:12> 'char [5]' lvalue Var 0x561f79f2f440 'input_string' 'char [5]'
    |     | |     `-ImplicitCastExpr 0x561f79f54698 <col:25> 'unsigned int' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x561f79f54660 <col:25> 'unsigned int' lvalue Var 0x561f79f2f9f0 'i' 'unsigned int'
    |     | `-ImplicitCastExpr 0x561f79f547a8 <col:31, col:44> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561f79f54778 <col:31, col:44> 'char' <LValueToRValue>
    |     |     `-ArraySubscriptExpr 0x561f79f54740 <col:31, col:44> 'char' lvalue
    |     |       |-ImplicitCastExpr 0x561f79f54710 <col:31> 'char *' <ArrayToPointerDecay>
    |     |       | `-DeclRefExpr 0x561f79f546d0 <col:31> 'char [11]' lvalue Var 0x561f79f2f500 'vogal_array' 'char [11]'
    |     |       `-ImplicitCastExpr 0x561f79f54728 <col:43> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x561f79f546f0 <col:43> 'unsigned int' lvalue Var 0x561f79f53ac0 'j' 'unsigned int'
    |     `-UnaryOperator 0x561f79f54800 <line:31:12, col:16> 'unsigned int' postfix '++'
    |       `-DeclRefExpr 0x561f79f547e0 <col:12> 'unsigned int' lvalue Var 0x561f79f53b40 'cont' 'unsigned int'
    |-BinaryOperator 0x561f79f548f8 <line:33:3, col:5> 'unsigned int' '='
    | |-DeclRefExpr 0x561f79f548a0 <col:3> 'unsigned int' lvalue Var 0x561f79f2f9f0 'i' 'unsigned int'
    | `-ImplicitCastExpr 0x561f79f548e0 <col:5> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x561f79f548c0 <col:5> 'int' 0
    |-DeclStmt 0x561f79f549b8 <line:34:3, col:19>
    | `-VarDecl 0x561f79f54930 <col:3, col:18> col:7 used cont_aux 'int' cinit
    |   `-IntegerLiteral 0x561f79f54998 <col:18> 'int' 0
    |-WhileStmt 0x561f79f555c8 <line:35:3, line:43:3>
    | |-BinaryOperator 0x561f79f55190 <line:35:9, col:26> 'int' '!='
    | | |-ImplicitCastExpr 0x561f79f54a90 <col:9, col:23> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x561f79f54a78 <col:9, col:23> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x561f79f54a40 <col:9, col:23> 'char' lvalue
    | | |     |-ImplicitCastExpr 0x561f79f54a10 <col:9> 'char *' <ArrayToPointerDecay>
    | | |     | `-DeclRefExpr 0x561f79f549d0 <col:9> 'char [5]' lvalue Var 0x561f79f2f440 'input_string' 'char [5]'
    | | |     `-ImplicitCastExpr 0x561f79f54a28 <col:22> 'unsigned int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x561f79f549f0 <col:22> 'unsigned int' lvalue Var 0x561f79f2f9f0 'i' 'unsigned int'
    | | `-CharacterLiteral 0x561f79f54a60 <col:26> 'int' 0
    | `-CompoundStmt 0x561f79f555a8 <line:36:3, line:43:3>
    |   |-ForStmt 0x561f79f55538 <line:37:5, line:41:5>
    |   | |-BinaryOperator 0x561f79f55208 <line:37:9, col:11> 'unsigned int' '='
    |   | | |-DeclRefExpr 0x561f79f551b0 <col:9> 'unsigned int' lvalue Var 0x561f79f53ac0 'j' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x561f79f551f0 <col:11> 'unsigned int' <IntegralCast>
    |   | |   `-IntegerLiteral 0x561f79f551d0 <col:11> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x561f79f552d8 <col:13, col:17> 'int' '<'
    |   | | |-ImplicitCastExpr 0x561f79f552a8 <col:13> 'unsigned int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x561f79f55228 <col:13> 'unsigned int' lvalue Var 0x561f79f53ac0 'j' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x561f79f552c0 <col:15, col:17> 'unsigned int' <IntegralCast>
    |   | |   `-BinaryOperator 0x561f79f55288 <col:15, col:17> 'int' '/'
    |   | |     |-IntegerLiteral 0x561f79f55248 <col:15> 'int' 5
    |   | |     `-IntegerLiteral 0x561f79f55268 <col:17> 'int' 2
    |   | |-UnaryOperator 0x561f79f55318 <col:19, col:20> 'unsigned int' postfix '++'
    |   | | `-DeclRefExpr 0x561f79f552f8 <col:19> 'unsigned int' lvalue Var 0x561f79f53ac0 'j' 'unsigned int'
    |   | `-CompoundStmt 0x561f79f55520 <line:38:5, line:41:5>
    |   |   `-IfStmt 0x561f79f55508 <line:39:9, line:40:20>
    |   |     |-BinaryOperator 0x561f79f554b0 <line:39:12, col:44> 'int' '=='
    |   |     | |-ImplicitCastExpr 0x561f79f55480 <col:12, col:26> 'int' <IntegralCast>
    |   |     | | `-ImplicitCastExpr 0x561f79f55450 <col:12, col:26> 'char' <LValueToRValue>
    |   |     | |   `-ArraySubscriptExpr 0x561f79f553a0 <col:12, col:26> 'char' lvalue
    |   |     | |     |-ImplicitCastExpr 0x561f79f55370 <col:12> 'char *' <ArrayToPointerDecay>
    |   |     | |     | `-DeclRefExpr 0x561f79f55330 <col:12> 'char [5]' lvalue Var 0x561f79f2f440 'input_string' 'char [5]'
    |   |     | |     `-ImplicitCastExpr 0x561f79f55388 <col:25> 'unsigned int' <LValueToRValue>
    |   |     | |       `-DeclRefExpr 0x561f79f55350 <col:25> 'unsigned int' lvalue Var 0x561f79f2f9f0 'i' 'unsigned int'
    |   |     | `-ImplicitCastExpr 0x561f79f55498 <col:31, col:44> 'int' <IntegralCast>
    |   |     |   `-ImplicitCastExpr 0x561f79f55468 <col:31, col:44> 'char' <LValueToRValue>
    |   |     |     `-ArraySubscriptExpr 0x561f79f55430 <col:31, col:44> 'char' lvalue
    |   |     |       |-ImplicitCastExpr 0x561f79f55400 <col:31> 'char *' <ArrayToPointerDecay>
    |   |     |       | `-DeclRefExpr 0x561f79f553c0 <col:31> 'char [11]' lvalue Var 0x561f79f2f500 'vogal_array' 'char [11]'
    |   |     |       `-ImplicitCastExpr 0x561f79f55418 <col:43> 'unsigned int' <LValueToRValue>
    |   |     |         `-DeclRefExpr 0x561f79f553e0 <col:43> 'unsigned int' lvalue Var 0x561f79f53ac0 'j' 'unsigned int'
    |   |     `-UnaryOperator 0x561f79f554f0 <line:40:12, col:20> 'int' postfix '++'
    |   |       `-DeclRefExpr 0x561f79f554d0 <col:12> 'int' lvalue Var 0x561f79f54930 'cont_aux' 'int'
    |   `-UnaryOperator 0x561f79f55590 <line:42:5, col:6> 'unsigned int' postfix '++'
    |     `-DeclRefExpr 0x561f79f55570 <col:5> 'unsigned int' lvalue Var 0x561f79f2f9f0 'i' 'unsigned int'
    |-CallExpr 0x561f79f556f8 <line:44:3, col:35> 'void'
    | |-ImplicitCastExpr 0x561f79f556e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561f79f555e8 <col:3> 'void (int)' Function 0x561f79f2ee90 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x561f79f55690 <col:21, col:31> 'int' '=='
    |   |-ImplicitCastExpr 0x561f79f55678 <col:21> 'unsigned int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x561f79f55648 <col:21> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x561f79f55608 <col:21> 'int' lvalue Var 0x561f79f54930 'cont_aux' 'int'
    |   `-ImplicitCastExpr 0x561f79f55660 <col:31> 'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x561f79f55628 <col:31> 'unsigned int' lvalue Var 0x561f79f53b40 'cont' 'unsigned int'
    `-ReturnStmt 0x561f79f55740 <line:46:3, col:10>
      `-IntegerLiteral 0x561f79f55720 <col:10> 'int' 0
