TranslationUnitDecl 0x558e62fc9e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x558e62fca6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x558e62fca3b0 '__int128'
|-TypedefDecl 0x558e62fca748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x558e62fca3d0 'unsigned __int128'
|-TypedefDecl 0x558e62fcaa50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x558e62fca820 'struct __NSConstantString_tag'
|   `-Record 0x558e62fca7a0 '__NSConstantString_tag'
|-TypedefDecl 0x558e62fcaaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x558e62fcaab0 'char *'
|   `-BuiltinType 0x558e62fc9eb0 'char'
|-TypedefDecl 0x558e63009650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x558e62fcad90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x558e62fcabd0 'struct __va_list_tag'
|     `-Record 0x558e62fcab50 '__va_list_tag'
|-FunctionDecl 0x558e63009770 <./split_4/safe005_rmo.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x558e63009940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x558e63009870 <col:31> col:34 'int'
|-FunctionDecl 0x558e63009ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x558e63009be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x558e63009d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x558e63009c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x558e63009f58 <col:40, col:99>
|   |-IfStmt 0x558e63009f28 <col:42, col:88>
|   | |-UnaryOperator 0x558e63009e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x558e63009df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x558e63009dd0 <col:47> 'int' lvalue ParmVar 0x558e63009c98 'expression' 'int'
|   | `-CompoundStmt 0x558e63009f10 <col:59, col:88>
|   |   `-LabelStmt 0x558e63009ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x558e63009e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x558e63009e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x558e63009e20 <col:68> 'void () __attribute__((noreturn))' Function 0x558e63009be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x558e63009f40 <col:89>
|   `-ReturnStmt 0x558e63009f48 <col:91>
|-FunctionDecl 0x558e63009fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x558e6300a060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x558e6300a3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558e6300a118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x558e6300a198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x558e6300a218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558e6300a298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558e6300a4a0 <line:11:22>
|-FunctionDecl 0x558e63030520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558e6300a510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x558e6300a590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x558e63030350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558e630303d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558e630305e0 <line:14:22>
|-FunctionDecl 0x558e63030890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558e63030650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x558e630306d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x558e63030750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x558e63030948 <line:16:22>
|-TypedefDecl 0x558e630309b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x558e62fc9f70 'unsigned char'
|-TypedefDecl 0x558e63030a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x558e62fc9f90 'unsigned short'
|-TypedefDecl 0x558e63030a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x558e62fc9fb0 'unsigned int'
|-TypedefDecl 0x558e63030b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-TypedefDecl 0x558e63030b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x558e62fc9ed0 'signed char'
|-TypedefDecl 0x558e63030be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x558e62fc9f70 'unsigned char'
|-TypedefDecl 0x558e63030c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x558e62fc9ef0 'short'
|-TypedefDecl 0x558e63030cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x558e62fc9f90 'unsigned short'
|-TypedefDecl 0x558e63030d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x558e62fc9f10 'int'
|-TypedefDecl 0x558e63030da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x558e62fc9fb0 'unsigned int'
|-TypedefDecl 0x558e63030e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e63030e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-TypedefDecl 0x558e63030ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e63030f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-TypedefDecl 0x558e63030fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-TypedefDecl 0x558e63031048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x558e62fc9fb0 'unsigned int'
|-TypedefDecl 0x558e630310b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x558e62fc9fb0 'unsigned int'
|-TypedefDecl 0x558e63031128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-TypedefDecl 0x558e63031198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-TypedefDecl 0x558e63031208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x558e62fc9fb0 'unsigned int'
|-TypedefDecl 0x558e63031278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-TypedefDecl 0x558e630312e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e63031378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e630313e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x558e62fc9f10 'int'
|-RecordDecl 0x558e63031440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x558e63031588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x558e63031640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x558e630315e0 'struct __fsid_t' sugar
|   `-RecordType 0x558e630314c0 '__fsid_t'
|     `-Record 0x558e63031440 ''
|-TypedefDecl 0x558e630316c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e63031738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-TypedefDecl 0x558e630317a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-TypedefDecl 0x558e63031818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x558e62fc9fb0 'unsigned int'
|-TypedefDecl 0x558e63031888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e630318f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x558e62fc9fb0 'unsigned int'
|-TypedefDecl 0x558e63031968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e630319d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x558e62fc9f10 'int'
|-TypedefDecl 0x558e63031a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x558e62fc9f10 'int'
|-TypedefDecl 0x558e63031ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x558e62fc9f10 'int'
|-TypedefDecl 0x558e63031b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x558e62fca630 'void *'
|   `-BuiltinType 0x558e62fc9e70 'void'
|-TypedefDecl 0x558e63031b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e63031c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e63031c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e63031ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-TypedefDecl 0x558e63031d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-TypedefDecl 0x558e63031dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-TypedefDecl 0x558e63031e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-TypedefDecl 0x558e63031ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e63031f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e63031f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e63031ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-TypedefDecl 0x558e63032088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x558e63032050 '__off64_t' sugar
|   |-Typedef 0x558e63031378 '__off64_t'
|   `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e63032180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x558e63032140 '__quad_t *'
|   `-TypedefType 0x558e630320e0 '__quad_t' sugar
|     |-Typedef 0x558e63030ef8 '__quad_t'
|     `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e630321f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x558e62fcaab0 'char *'
|   `-BuiltinType 0x558e62fc9eb0 'char'
|-TypedefDecl 0x558e63032260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e630322d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x558e62fc9fb0 'unsigned int'
|-FunctionDecl 0x558e63033458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x558e63033380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x558e63033768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x558e63033758 <line:73:3, col:34>
|     `-CallExpr 0x558e63033718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x558e63033700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x558e63033690 <col:10> '<builtin fn type>' Function 0x558e63033500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x558e63033740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558e630336b0 <col:29> 'unsigned int' lvalue ParmVar 0x558e63033380 '__bsx' 'unsigned int'
|-FunctionDecl 0x558e63033500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x558e630335a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x558e63033610 <col:10> Implicit
| `-ConstAttr 0x558e63033668 <col:10> Implicit
|-FunctionDecl 0x558e630338c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x558e630337b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x558e63033bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x558e63033bc8 <line:78:3, col:34>
|     `-CallExpr 0x558e63033b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x558e63033b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x558e63033af8 <col:10> '<builtin fn type>' Function 0x558e63033968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x558e63033bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x558e63033b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x558e630337b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x558e63033968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x558e63033a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x558e63033a78 <col:10> Implicit
| `-ConstAttr 0x558e63033ad0 <col:10> Implicit
|-TypedefDecl 0x558e63033c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-TypedefDecl 0x558e63033c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x558e63033c60 '__time_t' sugar
|   |-Typedef 0x558e63031888 '__time_t'
|   `-BuiltinType 0x558e62fc9f30 'long'
|-RecordDecl 0x558e63033cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x558e63033da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x558e63033e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x558e63033ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x558e63033e90 '__pid_t' sugar
|   |-Typedef 0x558e630313e8 '__pid_t'
|   `-BuiltinType 0x558e62fc9f10 'int'
|-RecordDecl 0x558e63033f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x558e63033fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x558e63034030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x558e630340f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x558e63034158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-RecordDecl 0x558e630341b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x558e63035480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x558e63035530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x558e630354d0 'struct cpu_set_t' sugar
|   `-RecordType 0x558e63034230 'cpu_set_t'
|     `-Record 0x558e630341b0 ''
|-FunctionDecl 0x558e63035808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x558e630355d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558e630356e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x558e630358b8 <line:108:19>
|-FunctionDecl 0x558e63035a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x558e63035920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x558e63035b38 <col:69>
|-FunctionDecl 0x558e63035cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x558e63035ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x558e63035d58 <col:64>
|-FunctionDecl 0x558e63036018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x558e63035dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558e63035ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558e630360c8 <line:114:22>
|-FunctionDecl 0x558e630363b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x558e63036130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558e63036228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x558e63036460 <col:88>
|-FunctionDecl 0x558e63036718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x558e630364c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558e63036548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x558e630365d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558e630367d0 <col:62>
|-FunctionDecl 0x558e63036948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x558e63036838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x558e630369f0 <col:63>
|-FunctionDecl 0x558e63036b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x558e63036bb8 <col:47>
|-FunctionDecl 0x558e63036cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x558e63036c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558e63036d68 <col:69>
|-FunctionDecl 0x558e63036e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x558e63036dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558e63036f18 <col:69>
|-FunctionDecl 0x558e630371d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558e63036f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558e630370b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x558e63037288 <col:88>
|-TypedefDecl 0x558e63037318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x558e630372e0 '__clock_t' sugar
|   |-Typedef 0x558e630316c8 '__clock_t'
|   `-BuiltinType 0x558e62fc9f30 'long'
|-TypedefDecl 0x558e630373c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x558e63037370 '__clockid_t' sugar
|   |-Typedef 0x558e63031ab8 '__clockid_t'
|   `-BuiltinType 0x558e62fc9f10 'int'
|-TypedefDecl 0x558e63037458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x558e63037420 '__timer_t' sugar
|   |-Typedef 0x558e63031b28 '__timer_t'
|   `-PointerType 0x558e62fca630 'void *'
|     `-BuiltinType 0x558e62fc9e70 'void'
|-RecordDecl 0x558e630374b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x558e63037570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x558e630375d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x558e63037640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x558e630376a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x558e63037710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x558e63037778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x558e630377e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x558e63037848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x558e630378b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x558e63037918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x558e63037980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x558e630379d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x558e63037a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x558e63037b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x558e63037bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x558e63037d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x558e63037e20 <col:45>
|-FunctionDecl 0x558e63038000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x558e63037ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x558e630380a8 <col:54>
|-FunctionDecl 0x558e630382a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x558e63038110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x558e63038188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x558e63038358 <line:158:22>
| `-ConstAttr 0x558e63038ff0 <col:63>
|-FunctionDecl 0x558e630391f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558e630390e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558e63039298 <col:56>
|-FunctionDecl 0x558e63039640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x558e63039308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x558e63039380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558e63039400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x558e630394f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x558e63039700 <col:54>
|-RecordDecl 0x558e63039758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x558e63039808 parent 0x558e62fc9e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x558e63039a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x558e63039b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x558e63039b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x558e63039bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x558e63039cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x558e63039de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x558e63039d90 'struct __locale_struct *'
|   `-ElaboratedType 0x558e63039d20 'struct __locale_struct' sugar
|     `-RecordType 0x558e630397e0 'struct __locale_struct'
|       `-Record 0x558e63039758 '__locale_struct'
|-TypedefDecl 0x558e63039e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x558e63039e60 '__locale_t' sugar
|   |-Typedef 0x558e63039de8 '__locale_t'
|   `-PointerType 0x558e63039d90 'struct __locale_struct *'
|     `-ElaboratedType 0x558e63039d20 'struct __locale_struct' sugar
|       `-RecordType 0x558e630397e0 'struct __locale_struct'
|         `-Record 0x558e63039758 '__locale_struct'
|-FunctionDecl 0x558e6303b2a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x558e63039f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x558e63039f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558e6303b028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x558e6303b0b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558e6303b130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x558e6303b368 <col:40>
|-FunctionDecl 0x558e6303b558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x558e6303b430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x558e6303b600 <col:66>
|-FunctionDecl 0x558e6303b710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x558e6303b668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x558e6303b7b8 <col:69>
|-FunctionDecl 0x558e6303b9e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558e6303b820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558e6303b8b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558e6303ba98 <col:52>
|-FunctionDecl 0x558e6303bc40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558e6303bb00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558e6303bb90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558e6303bcf0 <col:55>
|-FunctionDecl 0x558e6303be88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x558e6303bd70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x558e6303bf30 <col:62>
|-FunctionDecl 0x558e6303c168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x558e6303bf98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x558e6303c210 <col:60>
|-FunctionDecl 0x558e6303c438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558e6303c290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558e6303c310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x558e6303c4e8 <col:44>
|-FunctionDecl 0x558e6303c6f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558e6303c550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558e6303c5d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x558e6303c7a8 <col:49>
|-VarDecl 0x558e6303c8a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x558e6303c928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x558e6303c9a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x558e6303ca70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x558e6303cba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x558e6303cc40 <col:42>
|-VarDecl 0x558e6303ccb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x558e6303cd30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x558e6303ceb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x558e6303cda8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x558e6303cf60 <col:57>
|-FunctionDecl 0x558e6303d0d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558e6303cfe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558e6303d178 <col:56>
|-FunctionDecl 0x558e6303d288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558e6303d1f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x558e6303d330 <col:59>
|-FunctionDecl 0x558e6303d438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x558e6303d3a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x558e6303d4e0 <col:48>
| `-ConstAttr 0x558e6303d538 <col:89>
|-FunctionDecl 0x558e6303d798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558e6303d5e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x558e6303d678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x558e6303d9f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558e6303d888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558e6303d918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x558e6303daa8 <col:88>
|-FunctionDecl 0x558e6303dc40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558e6303db10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558e6303dba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x558e6303dcf0 <col:88>
|-FunctionDecl 0x558e6303df08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x558e6303dd58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558e6303dde8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x558e6303dfb8 <line:209:22>
|-FunctionDecl 0x558e6303e358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558e6303e020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558e6303e0e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x558e6303e170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x558e6303e200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x558e6303e658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x558e6303e458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x558e6303e530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x558e6303e708 <col:85>
|-FunctionDecl 0x558e6303eaf8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x558e6303e770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558e6303e8a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x558e6303e9b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x558e6303ebb0 <col:52>
|-FunctionDecl 0x558e6303ed28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x558e6303ec18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558e6303edd0 <col:61>
|-FunctionDecl 0x558e6303f248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x558e6303ee38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558e6303eeb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x558e6303efe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x558e6303f0f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x558e6303f308 <col:62>
|-FunctionDecl 0x558e6303f528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x558e6303f370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558e6303f400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x558e6303f5d8 <line:222:22>
|-FunctionDecl 0x558e6303f6d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x558e6303f640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558e6303f780 <col:65>
|-TypedefDecl 0x558e6303f7f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x558e62fc9fd0 'unsigned long'
|-RecordDecl 0x558e6303f848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x558e6303f990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x558e6303f9f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558e6303faa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x558e6303fa50 'union pthread_attr_t' sugar
|   `-RecordType 0x558e6303f8d0 'union pthread_attr_t'
|     `-Record 0x558e6303f848 'pthread_attr_t'
|-RecordDecl 0x558e6303fb00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x558e6303fc78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x558e6303fcf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x558e6303fda0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x558e6303fd40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x558e6303fb80 'struct __pthread_internal_list'
|     `-Record 0x558e6303fb00 '__pthread_internal_list'
|-RecordDecl 0x558e6303fe10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x558e6303feb8 parent 0x558e62fc9e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x558e6303ff90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558e6303fff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x558e63040060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x558e63044110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x558e63044178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x558e630441e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x558e63044268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x558e63044320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x558e63044410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x558e63044478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558e63044600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x558e630445a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x558e6303fe90 'pthread_mutex_t'
|     `-Record 0x558e6303fe10 ''
|-RecordDecl 0x558e63044670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x558e630447b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558e63044818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558e630448d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x558e63044870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x558e630446f0 'pthread_mutexattr_t'
|     `-Record 0x558e63044670 ''
|-RecordDecl 0x558e63044940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x558e630449e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x558e63044ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558e63044b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x558e63044b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x558e63044be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x558e63044c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x558e63044cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x558e63044d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x558e63044d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x558e63044e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_4/safe005_rmo.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_4/safe005_rmo.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x558e63044f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x558e63044f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x558e63046130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x558e63045070 'union pthread_cond_t' sugar
|   `-RecordType 0x558e630449c0 'pthread_cond_t'
|     `-Record 0x558e63044940 ''
|-RecordDecl 0x558e630461a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x558e630462a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558e63046308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558e630463c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x558e63046360 'union pthread_condattr_t' sugar
|   `-RecordType 0x558e63046220 'pthread_condattr_t'
|     `-Record 0x558e630461a0 ''
|-TypedefDecl 0x558e63046448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x558e62fc9fb0 'unsigned int'
|-TypedefDecl 0x558e630464b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x558e62fc9f10 'int'
|-RecordDecl 0x558e63046510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x558e630465b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x558e63046680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558e630466e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x558e63046750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x558e630467b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x558e63046820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x558e63046888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x558e630468f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x558e63046958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x558e630469c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x558e63046a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x558e63046a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x558e63046b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_4/safe005_rmo.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_4/safe005_rmo.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x558e63046be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x558e63046c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558e63046da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x558e63046d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x558e63046590 'pthread_rwlock_t'
|     `-Record 0x558e63046510 ''
|-RecordDecl 0x558e63046e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x558e63046f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x558e63046fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558e63047070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x558e63047010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x558e63046e90 'pthread_rwlockattr_t'
|     `-Record 0x558e63046e10 ''
|-TypedefDecl 0x558e63048140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x558e62fc9f14 'volatile int' volatile
|   `-BuiltinType 0x558e62fc9f10 'int'
|-RecordDecl 0x558e63048198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x558e630482e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x558e63048348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558e63048400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x558e630483a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x558e63048220 'pthread_barrier_t'
|     `-Record 0x558e63048198 ''
|-RecordDecl 0x558e63048470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x558e63048570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558e630485d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558e63048690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x558e63048630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x558e630484f0 'pthread_barrierattr_t'
|     `-Record 0x558e63048470 ''
|-TypedefDecl 0x558e630487a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x558e63048740 'long [8]' 8 
|   `-BuiltinType 0x558e62fc9f30 'long'
|-EnumDecl 0x558e63048800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x558e630488c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x558e63048918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x558e63048968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x558e63048a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x558e63048a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x558e63048ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x558e63048b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x558e63048bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x558e63048b98 <col:26> 'int'
| |   `-DeclRefExpr 0x558e63048b78 <col:26> 'int' EnumConstant 0x558e63048a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x558e63048c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x558e63048c20 <col:29> 'int'
| |   `-DeclRefExpr 0x558e63048c00 <col:29> 'int' EnumConstant 0x558e63048a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x558e63048cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x558e63048ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x558e63048c88 <col:30> 'int' EnumConstant 0x558e63048ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x558e63048d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x558e63048d30 <col:27> 'int'
|     `-DeclRefExpr 0x558e63048d10 <col:27> 'int' EnumConstant 0x558e63048bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x558e63048d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x558e63048e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x558e63048ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x558e63048ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x558e63048eb8 <col:30> 'int' EnumConstant 0x558e63048e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x558e63048f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x558e63048fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x558e63048fb0 <col:29> 'int'
|     `-DeclRefExpr 0x558e63048f90 <col:29> 'int' EnumConstant 0x558e63048f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x558e63049018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x558e630490e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x558e63049150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x558e630491a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x558e630491f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x558e630492b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x558e63049308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x558e63049358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x558e630493e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x558e630493c8 <col:31> 'int'
|     `-DeclRefExpr 0x558e630493a8 <col:31> 'int' EnumConstant 0x558e630492b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x558e63049430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x558e630494f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x558e63049548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x558e63049598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x558e63049668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x558e630496b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x558e63049708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x558e630497d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x558e63049828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x558e63049878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x558e63049ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x558e63049b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x558e63049b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x558e63049ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x558e63049cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x558e63049dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x558e63049e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x558e63049e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x558e63049f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x558e63049f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x558e6304a5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x558e6304a080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x558e6304a1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558e6304a3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x558e6304a420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x558e6304a678 <col:47>
| |-NonNullAttr 0x558e6304a6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x558e6304a708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x558e6304a830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x558e6304a760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x558e6304aa88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x558e6304a8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x558e6304a968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x558e6304ac58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x558e6304ab48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x558e6304ad00 <col:60>
|-FunctionDecl 0x558e6304ae50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x558e6304aef0 <col:54>
| `-ConstAttr 0x558e6304af48 <col:95>
|-FunctionDecl 0x558e6304c990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x558e6304af80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558e6304aff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x558e6304ca40 <line:395:19>
| `-ConstAttr 0x558e6304ca98 <col:60>
|-FunctionDecl 0x558e6304cc68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x558e6304cb30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x558e6304cd10 <col:71>
| `-NonNullAttr 0x558e6304cd68 <col:112, col:126> 1
|-FunctionDecl 0x558e6304ce70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x558e6304cdb8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x558e6304cf18 <line:398:22>
| `-NonNullAttr 0x558e6304cf70 <col:63, col:77> 1
|-FunctionDecl 0x558e6304d198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x558e6304cfb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x558e6304d038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x558e6304d248 <line:401:22>
| `-NonNullAttr 0x558e6304d2a0 <col:63, col:80> 1 2
|-FunctionDecl 0x558e6304d4a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558e6304d2e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558e6304d368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x558e6304d558 <line:404:22>
| `-NonNullAttr 0x558e6304d5b0 <col:63, col:77> 1
|-FunctionDecl 0x558e6304d808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x558e6304d5f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x558e6304d6a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x558e6304d8b8 <line:407:22>
| `-NonNullAttr 0x558e6304d910 <col:63, col:80> 1 2
|-FunctionDecl 0x558e6304eb68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x558e6304e9b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558e6304ea28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558e6304ec18 <line:410:22>
| `-NonNullAttr 0x558e6304ec70 <col:63, col:77> 1
|-FunctionDecl 0x558e6304eea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558e6304ecb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558e6304ed48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x558e6304ef58 <line:413:22>
| `-NonNullAttr 0x558e6304efb0 <col:63, col:80> 1 2
|-FunctionDecl 0x558e6304f1e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558e6304eff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x558e6304f088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x558e6304f298 <col:37>
| `-NonNullAttr 0x558e6304f2f0 <col:78, col:95> 1 2
|-FunctionDecl 0x558e6304f4d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558e6304f338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558e6304f3b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x558e6304f588 <line:419:22>
| `-NonNullAttr 0x558e6304f5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x558e6304f768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558e6304f628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558e6304f6a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x558e6304f818 <line:421:22>
| `-NonNullAttr 0x558e6304f870 <col:63, col:77> 1
|-FunctionDecl 0x558e6304fa38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558e6304f8b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558e6304f938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x558e6304fae8 <line:424:22>
| `-NonNullAttr 0x558e6304fb40 <col:63, col:80> 1 2
|-FunctionDecl 0x558e6304fcc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558e6304fb88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558e6304fc08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x558e6304fd78 <line:427:22>
| `-NonNullAttr 0x558e6304fdd0 <col:63, col:77> 1
|-FunctionDecl 0x558e6304ff78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558e6304fe18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558e6304fe98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x558e63050028 <line:430:22>
| `-NonNullAttr 0x558e63050080 <col:63, col:80> 1 2
|-FunctionDecl 0x558e63050208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558e630500c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558e63050148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x558e630502b8 <line:432:22>
| `-NonNullAttr 0x558e63050310 <col:63, col:77> 1
|-FunctionDecl 0x558e63050538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x558e63050358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558e630503d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x558e630505e8 <line:435:22>
| |-NonNullAttr 0x558e63050640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x558e63050678 <col:100> "" ""
|-FunctionDecl 0x558e63050888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x558e630506c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558e63050748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x558e63050938 <line:438:22>
| |-NonNullAttr 0x558e63050990 <col:63, col:77> 1
| `-DeprecatedAttr 0x558e630509d8 <col:97> "" ""
|-FunctionDecl 0x558e63050bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x558e63050a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558e63050aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x558e63050c78 <line:441:22>
| `-NonNullAttr 0x558e63050cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x558e63050e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x558e63050d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558e63050d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558e63050f00 <line:444:22>
| `-NonNullAttr 0x558e63050f58 <col:63, col:77> 1
|-FunctionDecl 0x558e63051248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x558e63050fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558e63051028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x558e630510a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x558e63051300 <line:448:22>
| `-NonNullAttr 0x558e63051358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x558e63051608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x558e630513b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558e63051430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x558e630514a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558e630516c0 <col:43>
| `-NonNullAttr 0x558e63051718 <col:84, col:98> 1
|-FunctionDecl 0x558e63051a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x558e63051768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558e630517e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x558e63051878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x558e63051ad8 <line:453:22>
| `-NonNullAttr 0x558e63051b30 <col:63, col:77> 3
|-FunctionDecl 0x558e63051e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558e63051b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558e63051bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x558e63051c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x558e63051ec0 <line:457:22>
| `-NonNullAttr 0x558e63051f18 <col:63, col:80> 2 3
|-FunctionDecl 0x558e63052108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x558e63051f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558e63051fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x558e630521b8 <line:459:22>
|-FunctionDecl 0x558e63052588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x558e63052280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x558e63052420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x558e63052638 <col:52, col:69> 1 2
|-FunctionDecl 0x558e630527e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x558e630526c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x558e63052740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x558e630529f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x558e630528a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x558e63052928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x558e63052b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x558e63052ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x558e63052c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x558e63052d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x558e63052dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x558e63052ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x558e63052f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x558e63053100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_4/safe005_rmo.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x558e630531f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x558e630532b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x558e63053250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x558e63052db0 '__pthread_unwind_buf_t'
| |   `-Record 0x558e63052d28 ''
| `-AlignedAttr 0x558e63053308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x558e63053380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x558e630534e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x558e63053548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x558e630535b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x558e63053618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x558e63053820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x558e63053710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x558e63053a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x558e630538d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x558e63053bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558e63053ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x558e63053c68 <line:488:22>
|-RecordDecl 0x558e63053cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x558e63053fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x558e63053e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x558e63053eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x558e63054088 <col:86>
| `-ReturnsTwiceAttr 0x558e630540e0 <col:12> Implicit
|-FunctionDecl 0x558e63054408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558e630541b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x558e630542c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x558e630544b8 <line:494:22>
| `-NonNullAttr 0x558e63054510 <col:63, col:77> 1
|-FunctionDecl 0x558e63054688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558e63054558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558e63054730 <line:496:22>
| `-NonNullAttr 0x558e63054788 <col:63, col:77> 1
|-FunctionDecl 0x558e63054890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558e630547d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558e63054938 <line:498:22>
| `-NonNullAttr 0x558e63054990 <col:52, col:66> 1
|-FunctionDecl 0x558e63055ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558e63055a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558e63055b80 <line:500:22>
| `-NonNullAttr 0x558e63055bd8 <col:52, col:66> 1
|-FunctionDecl 0x558e63055e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558e63055c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558e63055cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558e63055ec8 <col:36>
| `-NonNullAttr 0x558e63055f20 <col:66, col:83> 1 2
|-FunctionDecl 0x558e63056020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558e63055f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558e630560c8 <line:505:22>
| `-NonNullAttr 0x558e63056120 <col:52, col:66> 1
|-FunctionDecl 0x558e630563b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558e630561d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558e63056250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x558e63056468 <line:509:22>
| `-NonNullAttr 0x558e630564c0 <col:63, col:80> 1 2
|-FunctionDecl 0x558e63056788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x558e63056508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558e63056588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x558e63056608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x558e63056840 <line:513:22>
| `-NonNullAttr 0x558e63056898 <col:63, col:80> 1 3
|-FunctionDecl 0x558e63056a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558e630568e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558e63056ad8 <line:515:22>
| `-NonNullAttr 0x558e63056b30 <col:63, col:77> 1
|-FunctionDecl 0x558e63056d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558e63056be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x558e63056dc0 <line:517:22>
| `-NonNullAttr 0x558e63056e18 <col:63, col:77> 1
|-FunctionDecl 0x558e63056f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558e63056e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x558e63056fc8 <line:519:22>
| `-NonNullAttr 0x558e63057020 <col:63, col:77> 1
|-FunctionDecl 0x558e63057248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558e63057068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558e630570e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x558e630572f8 <line:523:22>
| `-NonNullAttr 0x558e63057350 <col:63, col:80> 1 2
|-FunctionDecl 0x558e63057558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558e63057398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558e63057418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x558e63057608 <line:526:22>
| `-NonNullAttr 0x558e63057660 <col:63, col:77> 1
|-FunctionDecl 0x558e63057808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558e630576a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558e63057728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x558e630578b8 <line:529:22>
| `-NonNullAttr 0x558e63057910 <col:63, col:80> 1 2
|-FunctionDecl 0x558e63057b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558e63057958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558e63057a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x558e63057bb0 <line:531:22>
| `-NonNullAttr 0x558e63057c08 <col:63, col:77> 1
|-FunctionDecl 0x558e63057db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558e63057c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558e63057cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x558e63057e68 <line:535:22>
| `-NonNullAttr 0x558e63057ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x558e63058048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558e63057f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558e63057f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x558e630580f8 <line:538:22>
| `-NonNullAttr 0x558e63058150 <col:63, col:77> 1
|-FunctionDecl 0x558e630582f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558e63058198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558e63058218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x558e630583a8 <line:542:22>
| `-NonNullAttr 0x558e63058400 <col:63, col:80> 1 2
|-FunctionDecl 0x558e63058588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558e63058448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558e630584c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x558e63058638 <line:545:22>
| `-NonNullAttr 0x558e63058690 <col:63, col:77> 1
|-FunctionDecl 0x558e63058878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x558e630586d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x558e63058758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x558e63058928 <line:548:22>
| `-NonNullAttr 0x558e63058980 <col:63, col:80> 1 2
|-FunctionDecl 0x558e63059b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558e630589c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558e63059a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x558e63059be8 <line:551:22>
| `-NonNullAttr 0x558e63059c40 <col:63, col:77> 1
|-FunctionDecl 0x558e63059f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x558e63059d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558e63059e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x558e6305a028 <col:29>
| `-NonNullAttr 0x558e6305a080 <col:70, col:84> 1
|-FunctionDecl 0x558e6305a1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558e6305a0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558e6305a2a0 <line:556:22>
| `-NonNullAttr 0x558e6305a2f8 <col:63, col:77> 1
|-FunctionDecl 0x558e6305a400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558e6305a348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558e6305a4a8 <line:558:22>
| `-NonNullAttr 0x558e6305a500 <col:52, col:66> 1
|-FunctionDecl 0x558e6305a600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558e6305a548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558e6305a6a8 <line:560:19>
| `-NonNullAttr 0x558e6305a700 <col:49, col:63> 1
|-FunctionDecl 0x558e6305a938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558e6305a748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558e6305a7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558e6305a9e8 <col:39>
| `-NonNullAttr 0x558e6305aa70 <col:69, col:86> 1 2
|-FunctionDecl 0x558e6305ab70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558e6305aab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558e6305ac18 <line:565:22>
| `-NonNullAttr 0x558e6305ac70 <col:52, col:66> 1
|-FunctionDecl 0x558e6305ad70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558e6305acb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558e6305ae18 <line:567:22>
| `-NonNullAttr 0x558e6305ae70 <col:52, col:66> 1
|-FunctionDecl 0x558e6305b028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558e6305aeb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558e6305af48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558e6305b0d8 <col:39>
| `-NonNullAttr 0x558e6305b130 <col:69, col:86> 1 2
|-FunctionDecl 0x558e6305b230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558e6305b178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558e6305b2d8 <line:572:22>
| `-NonNullAttr 0x558e6305b330 <col:52, col:66> 1
|-FunctionDecl 0x558e6305b518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x558e6305b3e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x558e6305b5c0 <line:574:22>
| `-NonNullAttr 0x558e6305b618 <col:63, col:77> 1
|-FunctionDecl 0x558e6305b720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x558e6305b668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x558e6305b7c8 <line:576:22>
| `-NonNullAttr 0x558e6305b820 <col:63, col:77> 1
|-FunctionDecl 0x558e6305ba80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558e6305b868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x558e6305b8e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x558e6305bb30 <line:580:22>
| `-NonNullAttr 0x558e6305bb88 <col:63, col:80> 1 2
|-FunctionDecl 0x558e6305bd98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x558e6305bbd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x558e6305bc58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x558e6305be48 <line:583:22>
| `-NonNullAttr 0x558e6305bea0 <col:63, col:77> 1
|-FunctionDecl 0x558e6305c048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558e6305bee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x558e6305bf68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x558e6305c0f8 <line:587:22>
| `-NonNullAttr 0x558e6305c150 <col:63, col:80> 1 2
|-FunctionDecl 0x558e6305c2d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x558e6305c198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x558e6305c218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x558e6305c388 <col:36>
| `-NonNullAttr 0x558e6305c3e0 <col:77, col:91> 1
|-FunctionDecl 0x558e6305c718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x558e6305c4c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558e6305c5d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x558e6305c7c8 <line:592:22>
| `-NonNullAttr 0x558e6305c820 <col:63, col:77> 1
|-FunctionDecl 0x558e6305c998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558e6305c868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558e6305ca40 <line:594:22>
| `-NonNullAttr 0x558e6305cac0 <col:63, col:77> 1
|-FunctionDecl 0x558e6305cbc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558e6305cb08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558e6305cc68 <line:596:22>
| `-NonNullAttr 0x558e6305ccc0 <col:52, col:66> 1
|-FunctionDecl 0x558e6305cdc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558e6305cd08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558e6305ce68 <line:598:22>
| `-NonNullAttr 0x558e6305cec0 <col:52, col:66> 1
|-FunctionDecl 0x558e6305d0e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x558e6305cf08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558e6305cf80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x558e6305d198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x558e6305d4c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558e6305d218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558e6305d290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558e6305d320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x558e6305d580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x558e6305d798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x558e6305d660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x558e6305d840 <line:607:22>
| `-NonNullAttr 0x558e6305d898 <col:63, col:77> 1
|-FunctionDecl 0x558e6305d9a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x558e6305d8e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x558e6305da48 <line:609:22>
| `-NonNullAttr 0x558e6305dad0 <col:63, col:77> 1
|-FunctionDecl 0x558e6305dcf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558e6305db18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x558e6305db98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x558e6305dda8 <line:613:22>
| `-NonNullAttr 0x558e6305de00 <col:63, col:80> 1 2
|-FunctionDecl 0x558e6305e008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x558e6305de48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x558e6305dec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x558e6305e0b8 <col:37>
| `-NonNullAttr 0x558e6305e110 <col:78, col:92> 1
|-FunctionDecl 0x558e6305e328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x558e6305e158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x558e6305e200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x558e6305e3d8 <line:619:22>
| `-NonNullAttr 0x558e6305e430 <col:63, col:80> 1 2
|-FunctionDecl 0x558e6305e5f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x558e6305e478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x558e6305e4f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x558e6305e6a8 <line:622:22>
| `-NonNullAttr 0x558e6305e700 <col:63, col:77> 1
|-FunctionDecl 0x558e6305e9a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x558e6305e7e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x558e6305e860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x558e6305ea58 <line:624:22>
| `-NonNullAttr 0x558e6305eae0 <col:63, col:77> 1
|-FunctionDecl 0x558e6305ec58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558e6305eb28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558e6305ed00 <line:626:22>
| `-NonNullAttr 0x558e6305ed58 <col:63, col:77> 1
|-FunctionDecl 0x558e6305ee60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558e6305eda8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558e6305ef08 <line:628:22>
| `-NonNullAttr 0x558e6305ef60 <col:52, col:66> 1
|-FunctionDecl 0x558e6305f060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558e6305efa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558e6305f108 <line:630:22>
| `-NonNullAttr 0x558e6305f160 <col:52, col:66> 1
|-FunctionDecl 0x558e6305f260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558e6305f1a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558e6305f308 <line:632:22>
| `-NonNullAttr 0x558e6305f360 <col:52, col:66> 1
|-FunctionDecl 0x558e6305f738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x558e6305f440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x558e6305f550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x558e6305f5d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x558e6305f7f0 <line:636:22>
| `-NonNullAttr 0x558e6305f848 <col:63, col:77> 1
|-FunctionDecl 0x558e6305f9c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558e6305f898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558e6305fa70 <line:638:22>
| `-NonNullAttr 0x558e63060b00 <col:63, col:77> 1
|-FunctionDecl 0x558e63060c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558e63060b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558e63060ca8 <line:640:22>
| `-NonNullAttr 0x558e63060d00 <col:52, col:66> 1
|-FunctionDecl 0x558e63060ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558e63060db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558e63060f90 <line:642:22>
| `-NonNullAttr 0x558e63060fe8 <col:63, col:77> 1
|-FunctionDecl 0x558e630610f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558e63061038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558e63061198 <line:644:22>
| `-NonNullAttr 0x558e630611f0 <col:63, col:77> 1
|-FunctionDecl 0x558e63061418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558e63061238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x558e630612b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x558e630614c8 <line:648:22>
| `-NonNullAttr 0x558e63061520 <col:63, col:80> 1 2
|-FunctionDecl 0x558e63061728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x558e63061568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x558e630615e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x558e630617d8 <line:651:22>
| `-NonNullAttr 0x558e63061830 <col:63, col:77> 1
|-FunctionDecl 0x558e63061b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x558e63061910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x558e63061a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x558e63061c48 <line:654:22>
| `-NonNullAttr 0x558e63061ca0 <col:63, col:77> 1
|-FunctionDecl 0x558e63061df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x558e63061ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558e63061ea0 <col:69>
|-FunctionDecl 0x558e63062018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x558e63061f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558e630620c0 <col:72>
|-FunctionDecl 0x558e630622f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x558e63062128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x558e630621d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x558e630623a8 <col:44>
|-FunctionDecl 0x558e630625c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x558e63062410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558e63062488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x558e63062678 <line:661:22>
| `-NonNullAttr 0x558e630626d0 <col:63, col:77> 2
|-FunctionDecl 0x558e63062b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x558e630627b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x558e630628c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x558e630629d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x558e63062be8 <col:47>
|-FunctionDecl 0x558e63062cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x558e63062c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558e63062e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x558e63062db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558e63062fa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x558e63062f08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558e63063068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x558e63063128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x558e630631e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x558e630632a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x558e63063320 prev 0x558e630632a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x558e63063388 <col:24> 'int' 0
|-VarDecl 0x558e630633c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x558e63063440 prev 0x558e630633c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x558e630634a8 <col:27> 'int' 0
|-VarDecl 0x558e630634e0 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x558e63063560 prev 0x558e630634e0 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x558e630635c8 <col:27> 'int' 0
|-VarDecl 0x558e63063600 <line:678:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x558e63063680 prev 0x558e63063600 <line:679:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x558e630636e8 <col:27> 'int' 0
|-VarDecl 0x558e63063718 <line:680:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x558e63063790 <line:681:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x558e63063810 <line:682:1, col:5> col:5 used x 'int'
|-VarDecl 0x558e63063890 prev 0x558e63063810 <line:683:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x558e630638f8 <col:9> 'int' 0
|-VarDecl 0x558e63063928 <line:684:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x558e630639a8 <line:685:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x558e63063a20 <line:686:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x558e63063b00 <line:687:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x558e63063b78 <line:688:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x558e63063bf0 <line:689:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x558e63063c68 <line:690:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x558e63063ce0 <line:691:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x558e63063d58 <line:692:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x558e63063dd0 <line:693:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x558e63063e48 <line:694:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x558e63063ec8 <line:695:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x558e63063f48 <line:696:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x558e63063fc0 <line:697:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x558e63064040 <line:698:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x558e630640b8 <line:699:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x558e63064138 <line:700:1, col:5> col:5 used y 'int'
|-VarDecl 0x558e630641b8 prev 0x558e63064138 <line:701:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x558e63064220 <col:9> 'int' 0
|-VarDecl 0x558e63064250 <line:702:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x558e630642c8 <line:703:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x558e630643e0 prev 0x558e63062cf0 <line:704:1, line:733:1> line:704:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x558e63064348 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558e63067418 <line:705:1, line:733:1>
|   |-CallExpr 0x558e630644f8 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558e630644e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63064488 <col:3> 'void ()' Function 0x558e63009fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558e63064558 <line:707:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558e63064518 <col:3> 'int' lvalue Var 0x558e630641b8 'y' 'int'
|   | `-IntegerLiteral 0x558e63064538 <col:7> 'int' 2
|   |-CallExpr 0x558e630645b0 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558e63064598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63064578 <col:3> 'void ()' Function 0x558e6300a060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558e63064608 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558e630645f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e630645d0 <col:3> 'void ()' Function 0x558e63009fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x558e63064660 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558e63064648 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63064628 <col:3> 'void ()' Function 0x558e6300a060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558e630646b8 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558e630646a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63064680 <col:3> 'void ()' Function 0x558e63009fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558e63064788 <line:712:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x558e630646d8 <col:3> '_Bool' lvalue Var 0x558e63064250 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x558e63064768 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x558e63064750 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x558e630646f8 <col:19> '_Bool (void)' Function 0x558e63009770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x558e63064820 <line:713:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x558e630647a8 <col:3> '_Bool' lvalue Var 0x558e630642c8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x558e63064800 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x558e630647e8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x558e630647c8 <col:19> '_Bool (void)' Function 0x558e63009770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x558e63064898 <line:714:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x558e63064840 <col:3> '_Bool' lvalue Var 0x558e63063928 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x558e63064880 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558e63064860 <col:21> '_Bool' lvalue Var 0x558e630642c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x558e63064910 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558e630648b8 <col:3> 'int' lvalue Var 0x558e630639a8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x558e630648f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558e630648d8 <col:15> 'int' lvalue Var 0x558e63063890 'x' 'int'
|   |-BinaryOperator 0x558e63064d68 <line:716:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x558e63064930 <col:3> 'int' lvalue Var 0x558e63063890 'x' 'int'
|   | `-ConditionalOperator 0x558e63064d38 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x558e63064b60 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x558e63064a60 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x558e63064988 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x558e63064970 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x558e63064950 <col:8> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x558e63064a40 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x558e630649d8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x558e630649c0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x558e630649a0 <col:27> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x558e63064a28 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x558e63064a10 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x558e630649f0 <col:46> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x558e63064b40 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x558e63064ab8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x558e63064aa0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x558e63064a80 <col:65> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x558e63064b28 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x558e63064b10 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x558e63064ad0 <col:84> '_Bool' lvalue Var 0x558e63063ce0 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x558e63064d20 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558e63064b80 <col:101> 'int' lvalue Var 0x558e63063890 'x' 'int'
|   |   `-ParenExpr 0x558e63064d00 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x558e63064cd0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x558e63064c40 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558e63064bf8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558e63064be0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558e63064ba0 <col:106> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558e63064c28 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558e63064c10 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558e63064bc0 <col:124> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x558e63064ca0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558e63064c60 <col:141> 'int' lvalue Var 0x558e63063f48 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x558e63064cb8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558e63064c80 <col:153> 'int' lvalue Var 0x558e63064040 'x$w_buff1' 'int'
|   |-BinaryOperator 0x558e63065278 <line:717:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x558e63064d88 <col:3> 'int' lvalue Var 0x558e63063f48 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x558e63065248 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x558e63065218 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558e63065200 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558e63064da8 <col:15> '_Bool' lvalue Var 0x558e630642c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x558e63065230 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558e63064dc8 <col:31> 'int' lvalue Var 0x558e63063f48 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x558e630651e0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x558e630651b0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x558e63064fd8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x558e63064ef8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x558e63064e20 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x558e63064e08 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x558e63064de8 <col:45> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x558e63064ed8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x558e63064e70 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x558e63064e58 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x558e63064e38 <col:64> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x558e63064ec0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x558e63064ea8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x558e63064e88 <col:83> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x558e63064fb8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x558e63064f50 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x558e63064f38 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x558e63064f18 <col:102> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x558e63064fa0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x558e63064f88 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x558e63064f68 <col:121> '_Bool' lvalue Var 0x558e63063ce0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x558e63065198 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558e63064ff8 <col:138> 'int' lvalue Var 0x558e63063f48 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x558e63065178 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x558e63065148 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x558e630650b8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x558e63065070 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x558e63065058 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x558e63065018 <col:151> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x558e630650a0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x558e63065088 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558e63065038 <col:169> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x558e63065118 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x558e630650d8 <col:186> 'int' lvalue Var 0x558e63063f48 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x558e63065130 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x558e630650f8 <col:198> 'int' lvalue Var 0x558e63063f48 'x$w_buff0' 'int'
|   |-BinaryOperator 0x558e63065788 <line:718:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x558e63065298 <col:3> 'int' lvalue Var 0x558e63064040 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x558e63065758 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x558e63065728 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558e63065710 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558e630652b8 <col:15> '_Bool' lvalue Var 0x558e630642c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x558e63065740 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558e630652d8 <col:31> 'int' lvalue Var 0x558e63064040 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x558e630656f0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x558e630656c0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x558e630654e8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x558e63065408 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x558e63065330 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x558e63065318 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x558e630652f8 <col:45> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x558e630653e8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x558e63065380 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x558e63065368 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x558e63065348 <col:64> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x558e630653d0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x558e630653b8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x558e63065398 <col:83> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x558e630654c8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x558e63065460 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x558e63065448 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x558e63065428 <col:102> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x558e630654b0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x558e63065498 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x558e63065478 <col:121> '_Bool' lvalue Var 0x558e63063ce0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x558e630656a8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558e63065508 <col:138> 'int' lvalue Var 0x558e63064040 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x558e63065688 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x558e63065658 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x558e630655c8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x558e63065580 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x558e63065568 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x558e63065528 <col:151> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x558e630655b0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x558e63065598 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558e63065548 <col:169> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x558e63065628 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x558e630655e8 <col:186> 'int' lvalue Var 0x558e63064040 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x558e63065640 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x558e63065608 <col:198> 'int' lvalue Var 0x558e63064040 'x$w_buff1' 'int'
|   |-BinaryOperator 0x558e63065d58 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x558e630657a8 <col:3> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558e63065d40 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558e63065d10 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x558e63065cc8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558e63065cb0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558e630657c8 <col:20> '_Bool' lvalue Var 0x558e630642c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558e63065cf8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558e63065ce0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558e630657e8 <col:36> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x558e63065c90 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x558e63065c60 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x558e630659f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558e63065918 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558e63065840 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558e63065828 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558e63065808 <col:55> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558e630658f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558e63065890 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558e63065878 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558e63065858 <col:74> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x558e630658e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558e630658c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558e630658a8 <col:93> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558e630659d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558e63065970 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558e63065958 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558e63065938 <col:112> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x558e630659c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558e630659a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558e63065988 <col:131> '_Bool' lvalue Var 0x558e63063ce0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x558e63065c48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558e63065c30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558e63065a18 <col:148> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x558e63065c10 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x558e63065be0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x558e63065ad8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558e63065a90 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558e63065a78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558e63065a38 <col:166> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558e63065ac0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558e63065aa8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558e63065a58 <col:184> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x558e63065b98 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558e63065b50 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558e63065b20 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558e63065bc8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x558e63065bb0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x558e63065b78 <col:212> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558e63066320 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x558e63065d78 <col:3> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558e63066308 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558e630662d8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x558e63066290 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558e63066278 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558e63065d98 <col:20> '_Bool' lvalue Var 0x558e630642c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558e630662c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558e630662a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558e63065db8 <col:36> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x558e63066258 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x558e63066228 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x558e63065fc8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558e63065ee8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558e63065e10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558e63065df8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558e63065dd8 <col:55> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558e63065ec8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558e63065e60 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558e63065e48 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558e63065e28 <col:74> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x558e63065eb0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558e63065e98 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558e63065e78 <col:93> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558e63065fa8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558e63065f40 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558e63065f28 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558e63065f08 <col:112> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x558e63065f90 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558e63065f78 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558e63065f58 <col:131> '_Bool' lvalue Var 0x558e63063ce0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x558e63066210 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558e630661f8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558e63065fe8 <col:148> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x558e630661d8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x558e630661a8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x558e630660a8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558e63066060 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558e63066048 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558e63066008 <col:166> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558e63066090 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558e63066078 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558e63066028 <col:184> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x558e63066178 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558e630660f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558e630660c8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558e63066190 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x558e63066150 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x558e63066120 <col:219> 'int' 0
|   |-BinaryOperator 0x558e630668c8 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x558e63066340 <col:3> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558e630668b0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558e63066880 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x558e63066838 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558e63066820 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558e63066360 <col:20> '_Bool' lvalue Var 0x558e630642c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558e63066868 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558e63066850 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558e63066380 <col:36> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x558e63066800 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x558e630667d0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x558e63066590 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558e630664b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558e630663d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558e630663c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558e630663a0 <col:55> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558e63066490 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558e63066428 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558e63066410 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558e630663f0 <col:74> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x558e63066478 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558e63066460 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558e63066440 <col:93> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558e63066570 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558e63066508 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558e630664f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558e630664d0 <col:112> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x558e63066558 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558e63066540 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558e63066520 <col:131> '_Bool' lvalue Var 0x558e63063ce0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x558e630667b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558e630667a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558e630665b0 <col:148> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x558e63066780 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x558e63066750 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x558e63066670 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558e63066628 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558e63066610 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558e630665d0 <col:166> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558e63066658 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558e63066640 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558e630665f0 <col:184> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x558e63066708 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558e630666c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558e63066690 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558e63066738 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x558e63066720 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x558e630666e8 <col:212> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558e63066ea8 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x558e630668e8 <col:3> '_Bool' lvalue Var 0x558e63063ce0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558e63066e90 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558e63066e60 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x558e63066e18 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558e63066e00 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558e63066908 <col:20> '_Bool' lvalue Var 0x558e630642c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558e63066e48 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558e63066e30 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558e63066928 <col:36> '_Bool' lvalue Var 0x558e63063ce0 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x558e63066de0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x558e63066db0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x558e63066b50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558e63066a58 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558e63066980 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558e63066968 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558e63066948 <col:55> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558e63066a38 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558e630669d0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558e630669b8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558e63066998 <col:74> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x558e63066a20 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558e63066a08 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558e630669e8 <col:93> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558e63066b30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558e63066ab0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558e63066a98 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558e63066a78 <col:112> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x558e63066b00 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558e63066ae8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558e63066ac8 <col:131> '_Bool' lvalue Var 0x558e63063ce0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x558e63066d98 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558e63066d80 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558e63066b70 <col:148> '_Bool' lvalue Var 0x558e63063ce0 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x558e63066d60 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x558e63066d30 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x558e63066c30 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558e63066be8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558e63066bd0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558e63066b90 <col:166> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558e63066c18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558e63066c00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558e63066bb0 <col:184> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x558e63066d00 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558e63066c80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558e63066c50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558e63066d18 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x558e63066cd8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x558e63066ca8 <col:219> 'int' 0
|   |-BinaryOperator 0x558e63066f20 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558e63066ec8 <col:3> 'int' lvalue Var 0x558e63063440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x558e63066f08 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558e63066ee8 <col:25> 'int' lvalue Var 0x558e63063890 'x' 'int'
|   |-BinaryOperator 0x558e63067050 <line:724:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x558e63066f40 <col:3> 'int' lvalue Var 0x558e63063890 'x' 'int'
|   | `-ConditionalOperator 0x558e63067020 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x558e63066fd8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558e63066fc0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558e63066f60 <col:7> '_Bool' lvalue Var 0x558e63063928 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x558e63066ff0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558e63066f80 <col:25> 'int' lvalue Var 0x558e630639a8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x558e63067008 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x558e63066fa0 <col:37> 'int' lvalue Var 0x558e63063890 'x' 'int'
|   |-BinaryOperator 0x558e630670e8 <line:725:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x558e63067070 <col:3> '_Bool' lvalue Var 0x558e63063928 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x558e630670c0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558e63067090 <col:28> 'int' 0
|   |-CallExpr 0x558e63067140 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558e63067128 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63067108 <col:3> 'void ()' Function 0x558e6300a060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558e63067198 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558e63067180 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63067160 <col:3> 'void ()' Function 0x558e63009fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x558e630671f0 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558e630671d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e630671b8 <col:3> 'void ()' Function 0x558e6300a060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558e63067248 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558e63067230 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63067210 <col:3> 'void ()' Function 0x558e63009fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558e63067300 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558e63067268 <col:3> 'int' lvalue Var 0x558e63063320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558e630672e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558e630672c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558e63067288 <col:22> 'int' lvalue Var 0x558e63063320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558e630672a8 <col:41> 'int' 1
|   |-CallExpr 0x558e63067358 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558e63067340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63067320 <col:3> 'void ()' Function 0x558e6300a060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558e63067408 <line:732:3, col:36>
|     `-CallExpr 0x558e630673e8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558e630673d0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558e63067378 <col:10> 'void *(void)' Function 0x558e63009ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558e630675b0 prev 0x558e63062e48 <line:734:1, line:762:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x558e63067518 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558e63068d78 <line:735:1, line:762:1>
|   |-CallExpr 0x558e63067690 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558e63067678 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63067658 <col:3> 'void ()' Function 0x558e63009fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558e63067708 <line:737:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558e630676b0 <col:3> 'int' lvalue Var 0x558e63064040 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x558e630676f0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558e630676d0 <col:15> 'int' lvalue Var 0x558e63063f48 'x$w_buff0' 'int'
|   |-BinaryOperator 0x558e63067768 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558e63067728 <col:3> 'int' lvalue Var 0x558e63063f48 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x558e63067748 <col:15> 'int' 1
|   |-BinaryOperator 0x558e630677e0 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558e63067788 <col:3> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558e630677c8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558e630677a8 <col:20> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558e63067878 <line:740:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558e63067800 <col:3> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x558e63067850 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558e63067820 <col:27> 'int' 1
|   |-CallExpr 0x558e630679f8 <line:741:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x558e630679e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x558e63067898 <col:3> 'void (int)' Function 0x558e63009d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x558e63067998 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x558e63067978 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x558e63067958 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x558e63067910 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x558e630678f8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x558e630678b8 <col:23> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x558e63067940 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x558e63067928 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x558e630678d8 <col:41> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558e63067a78 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558e63067a20 <col:3> '_Bool' lvalue Var 0x558e63063c68 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x558e63067a60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558e63067a40 <col:20> '_Bool' lvalue Var 0x558e63063a20 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x558e63067af0 <line:743:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558e63067a98 <col:3> '_Bool' lvalue Var 0x558e63063ce0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558e63067ad8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558e63067ab8 <col:20> '_Bool' lvalue Var 0x558e63063b00 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558e63067b78 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558e63067b10 <col:3> '_Bool' lvalue Var 0x558e63063d58 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558e63067b60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558e63067b40 <col:20> '_Bool' lvalue Var 0x558e63063b78 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558e63067bf0 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558e63067b98 <col:3> '_Bool' lvalue Var 0x558e63063dd0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558e63067bd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558e63067bb8 <col:20> '_Bool' lvalue Var 0x558e63063bf0 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558e63067c88 <line:746:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558e63067c10 <col:3> '_Bool' lvalue Var 0x558e63063b78 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x558e63067c60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558e63067c30 <col:27> 'int' 1
|   |-CallExpr 0x558e63067ce0 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558e63067cc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63067ca8 <col:3> 'void ()' Function 0x558e6300a060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558e63067d38 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558e63067d20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63067d00 <col:3> 'void ()' Function 0x558e63009fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558e63067d98 <line:749:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558e63067d58 <col:3> 'int' lvalue Var 0x558e630641b8 'y' 'int'
|   | `-IntegerLiteral 0x558e63067d78 <col:7> 'int' 1
|   |-CallExpr 0x558e63067df0 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558e63067dd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63067db8 <col:3> 'void ()' Function 0x558e6300a060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558e63067e48 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558e63067e30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63067e10 <col:3> 'void ()' Function 0x558e63009fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558e63068130 <line:752:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558e63067e68 <col:3> 'int' lvalue Var 0x558e63063890 'x' 'int'
|   | `-ConditionalOperator 0x558e63068100 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558e63067f28 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558e63067ee0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558e63067ec8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558e63067e88 <col:7> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558e63067f10 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558e63067ef8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558e63067ea8 <col:25> '_Bool' lvalue Var 0x558e63063b78 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x558e630680e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558e63067f48 <col:42> 'int' lvalue Var 0x558e63063f48 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x558e630680c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558e63068098 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558e63068008 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558e63067fc0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558e63067fa8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558e63067f68 <col:55> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558e63067ff0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558e63067fd8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558e63067f88 <col:73> '_Bool' lvalue Var 0x558e63063d58 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x558e63068068 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558e63068028 <col:90> 'int' lvalue Var 0x558e63064040 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558e63068080 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558e63068048 <col:102> 'int' lvalue Var 0x558e63063890 'x' 'int'
|   |-BinaryOperator 0x558e63068338 <line:753:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558e63068150 <col:3> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558e63068320 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558e630682f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558e63068210 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558e630681c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558e630681b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558e63068170 <col:20> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558e630681f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558e630681e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558e63068190 <col:38> '_Bool' lvalue Var 0x558e63063b78 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558e630682a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558e63068260 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558e63068230 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558e630682d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558e630682c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558e63068288 <col:66> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558e63068620 <line:754:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558e63068358 <col:3> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558e63068608 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558e630685d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558e630684f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558e63068418 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558e630683d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558e630683b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558e63068378 <col:20> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558e63068400 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558e630683e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558e63068398 <col:38> '_Bool' lvalue Var 0x558e63063b78 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x558e630684d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558e63068490 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558e63068478 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558e63068438 <col:56> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558e630684c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558e630684a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558e63068458 <col:74> '_Bool' lvalue Var 0x558e63063d58 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558e63068590 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558e63068548 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558e63068518 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558e630685c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558e630685a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558e63068570 <col:102> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558e63068828 <line:755:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558e63068640 <col:3> '_Bool' lvalue Var 0x558e63063b78 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558e63068810 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558e630687e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558e63068700 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558e630686b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558e630686a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558e63068660 <col:20> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558e630686e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558e630686d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558e63068680 <col:38> '_Bool' lvalue Var 0x558e63063b78 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558e63068798 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558e63068750 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558e63068720 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558e630687c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558e630687b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558e63068778 <col:66> '_Bool' lvalue Var 0x558e63063b78 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558e63068b10 <line:756:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558e63068848 <col:3> '_Bool' lvalue Var 0x558e63063d58 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558e63068af8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558e63068ac8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558e630689e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558e63068908 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558e630688c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558e630688a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558e63068868 <col:20> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558e630688f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558e630688d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558e63068888 <col:38> '_Bool' lvalue Var 0x558e63063b78 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x558e630689c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558e63068980 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558e63068968 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558e63068928 <col:56> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558e630689b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558e63068998 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558e63068948 <col:74> '_Bool' lvalue Var 0x558e63063d58 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558e63068a80 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558e63068a38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558e63068a08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558e63068ab0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558e63068a98 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558e63068a60 <col:102> '_Bool' lvalue Var 0x558e63063d58 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x558e63068b88 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558e63068b70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63068b50 <col:3> 'void ()' Function 0x558e6300a060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558e63068be0 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558e63068bc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63068ba8 <col:3> 'void ()' Function 0x558e63009fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558e63068c98 <line:759:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558e63068c00 <col:3> 'int' lvalue Var 0x558e63063320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558e63068c78 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558e63068c60 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558e63068c20 <col:22> 'int' lvalue Var 0x558e63063320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558e63068c40 <col:41> 'int' 1
|   |-CallExpr 0x558e63068cf0 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558e63068cd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63068cb8 <col:3> 'void ()' Function 0x558e6300a060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558e63068d68 <line:761:3, col:36>
|     `-CallExpr 0x558e63068d48 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558e63068d30 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558e63068d10 <col:10> 'void *(void)' Function 0x558e63009ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558e63068f08 prev 0x558e63062fa0 <line:763:1, line:782:1> line:763:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x558e63068e70 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558e6306a168 <line:764:1, line:782:1>
|   |-CallExpr 0x558e63068fe8 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558e63068fd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63068fb0 <col:3> 'void ()' Function 0x558e63009fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558e63069060 <line:766:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558e63069008 <col:3> 'int' lvalue Var 0x558e63063560 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x558e63069048 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558e63069028 <col:25> 'int' lvalue Var 0x558e630641b8 'y' 'int'
|   |-CallExpr 0x558e630690b8 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558e630690a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63069080 <col:3> 'void ()' Function 0x558e6300a060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558e63069110 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558e630690f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e630690d8 <col:3> 'void ()' Function 0x558e63009fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558e63069188 <line:769:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558e63069130 <col:3> 'int' lvalue Var 0x558e63063680 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x558e63069170 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558e63069150 <col:25> 'int' lvalue Var 0x558e630641b8 'y' 'int'
|   |-CallExpr 0x558e630691e0 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558e630691c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e630691a8 <col:3> 'void ()' Function 0x558e6300a060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558e63069238 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558e63069220 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63069200 <col:3> 'void ()' Function 0x558e63009fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558e63069520 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558e63069258 <col:3> 'int' lvalue Var 0x558e63063890 'x' 'int'
|   | `-ConditionalOperator 0x558e630694f0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558e63069318 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558e630692d0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558e630692b8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558e63069278 <col:7> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558e63069300 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558e630692e8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558e63069298 <col:25> '_Bool' lvalue Var 0x558e63063bf0 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x558e630694d8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558e63069338 <col:42> 'int' lvalue Var 0x558e63063f48 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x558e630694b8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558e63069488 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558e630693f8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558e630693b0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558e63069398 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558e63069358 <col:55> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558e630693e0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558e630693c8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558e63069378 <col:73> '_Bool' lvalue Var 0x558e63063dd0 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558e63069458 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558e63069418 <col:90> 'int' lvalue Var 0x558e63064040 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558e63069470 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558e63069438 <col:102> 'int' lvalue Var 0x558e63063890 'x' 'int'
|   |-BinaryOperator 0x558e63069728 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558e63069540 <col:3> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558e63069710 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558e630696e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558e63069600 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558e630695b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558e630695a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558e63069560 <col:20> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558e630695e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558e630695d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558e63069580 <col:38> '_Bool' lvalue Var 0x558e63063bf0 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558e63069698 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558e63069650 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558e63069620 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558e630696c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558e630696b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558e63069678 <col:66> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558e63069a10 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558e63069748 <col:3> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558e630699f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558e630699c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558e630698e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558e63069808 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558e630697c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558e630697a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558e63069768 <col:20> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558e630697f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558e630697d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558e63069788 <col:38> '_Bool' lvalue Var 0x558e63063bf0 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x558e630698c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558e63069880 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558e63069868 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558e63069828 <col:56> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558e630698b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558e63069898 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558e63069848 <col:74> '_Bool' lvalue Var 0x558e63063dd0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558e63069980 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558e63069938 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558e63069908 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558e630699b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558e63069998 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558e63069960 <col:102> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558e63069c38 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558e63069a30 <col:3> '_Bool' lvalue Var 0x558e63063bf0 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558e63069c20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558e63069bf0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558e63069af0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558e63069aa8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558e63069a90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558e63069a50 <col:20> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558e63069ad8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558e63069ac0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558e63069a70 <col:38> '_Bool' lvalue Var 0x558e63063bf0 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558e63069ba8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558e63069b60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558e63069b10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558e63069bd8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558e63069bc0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558e63069b88 <col:66> '_Bool' lvalue Var 0x558e63063bf0 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558e63069f20 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558e63069c58 <col:3> '_Bool' lvalue Var 0x558e63063dd0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558e63069f08 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558e63069ed8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558e63069df8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558e63069d18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558e63069cd0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558e63069cb8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558e63069c78 <col:20> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558e63069d00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558e63069ce8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558e63069c98 <col:38> '_Bool' lvalue Var 0x558e63063bf0 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x558e63069dd8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558e63069d90 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558e63069d78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558e63069d38 <col:56> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558e63069dc0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558e63069da8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558e63069d58 <col:74> '_Bool' lvalue Var 0x558e63063dd0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558e63069e90 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558e63069e48 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558e63069e18 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558e63069ec0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558e63069ea8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558e63069e70 <col:102> '_Bool' lvalue Var 0x558e63063dd0 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x558e63069f78 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558e63069f60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63069f40 <col:3> 'void ()' Function 0x558e6300a060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558e63069fd0 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558e63069fb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e63069f98 <col:3> 'void ()' Function 0x558e63009fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558e6306a088 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558e63069ff0 <col:3> 'int' lvalue Var 0x558e63063320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558e6306a068 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558e6306a050 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558e6306a010 <col:22> 'int' lvalue Var 0x558e63063320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558e6306a030 <col:41> 'int' 1
|   |-CallExpr 0x558e6306a0e0 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558e6306a0c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558e6306a0a8 <col:3> 'void ()' Function 0x558e6300a060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558e6306a158 <line:781:3, col:36>
|     `-CallExpr 0x558e6306a138 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558e6306a120 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558e6306a100 <col:10> 'void *(void)' Function 0x558e63009ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558e6306a220 prev 0x558e63063068 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x558e6306a2c0 <line:784:1, line:785:1>
|-FunctionDecl 0x558e6306a2f0 prev 0x558e63063128 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x558e6306a390 <line:787:1, line:788:1>
|-FunctionDecl 0x558e6306a3c0 prev 0x558e630631e8 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x558e6306a460 <line:790:1, line:791:1>
`-FunctionDecl 0x558e6306a4c8 <line:792:1, line:816:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x558e6306c1a0 <line:793:1, line:816:1>
    |-DeclStmt 0x558e6306a5e0 <line:794:3, col:18>
    | `-VarDecl 0x558e6306a578 <col:3, col:13> col:13 used t1911 'pthread_t':'unsigned long'
    |-CallExpr 0x558e6306a7e8 <line:795:3, col:54> 'int'
    | |-ImplicitCastExpr 0x558e6306a7d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558e6306a5f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558e6304a5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558e6306a638 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558e6306a618 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558e6306a578 't1911' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558e6306a828 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558e6306a6b0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x558e6306a688 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558e6306a650 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x558e6306a840 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558e6306a6d0 <col:39> 'void *(void *)' Function 0x558e630643e0 'P0' 'void *(void *)'
    | `-ParenExpr 0x558e6306a750 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x558e6306a728 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558e6306a6f0 <col:52> 'int' 0
    |-DeclStmt 0x558e6306a8d0 <line:796:3, col:18>
    | `-VarDecl 0x558e6306a868 <col:3, col:13> col:13 used t1912 'pthread_t':'unsigned long'
    |-CallExpr 0x558e6306aa78 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x558e6306aa60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558e6306a8e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558e6304a5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558e6306a928 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558e6306a908 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558e6306a868 't1912' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558e6306aab8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558e6306a9a0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x558e6306a978 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558e6306a940 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x558e6306aad0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558e6306a9c0 <col:39> 'void *(void *)' Function 0x558e630675b0 'P1' 'void *(void *)'
    | `-ParenExpr 0x558e6306aa40 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x558e6306aa18 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558e6306a9e0 <col:52> 'int' 0
    |-DeclStmt 0x558e6306ab70 <line:798:3, col:18>
    | `-VarDecl 0x558e6306aaf8 <col:3, col:13> col:13 used t1913 'pthread_t':'unsigned long'
    |-CallExpr 0x558e6306ad18 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x558e6306ad00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558e6306ab88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558e6304a5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558e6306abc8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558e6306aba8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558e6306aaf8 't1913' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558e6306ad58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558e6306ac40 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x558e6306ac18 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558e6306abe0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x558e6306ad70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558e6306ac60 <col:39> 'void *(void *)' Function 0x558e63068f08 'P2' 'void *(void *)'
    | `-ParenExpr 0x558e6306ace0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x558e6306acb8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558e6306ac80 <col:52> 'int' 0
    |-CallExpr 0x558e6306adc0 <line:800:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558e6306ada8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558e6306ad88 <col:3> 'void ()' Function 0x558e63009fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558e6306ae90 <line:801:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x558e6306ade0 <col:3> '_Bool' lvalue Var 0x558e63063718 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x558e6306ae78 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x558e6306ae58 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x558e6306ae40 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x558e6306ae00 <col:21> 'int' lvalue Var 0x558e63063320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x558e6306ae20 <col:41> 'int' 3
    |-CallExpr 0x558e6306aee8 <line:802:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558e6306aed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558e6306aeb0 <col:3> 'void ()' Function 0x558e6300a060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558e6306af60 <line:803:3, col:36> 'void'
    | |-ImplicitCastExpr 0x558e6306af48 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558e6306af08 <col:3> 'void (int)' Function 0x558e63009940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x558e6306afa0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x558e6306af88 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x558e6306af28 <col:21> '_Bool' lvalue Var 0x558e63063718 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x558e6306aff0 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558e6306afd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558e6306afb8 <col:3> 'void ()' Function 0x558e63009fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558e6306b2d8 <line:805:3, col:103> 'int' '='
    | |-DeclRefExpr 0x558e6306b010 <col:3> 'int' lvalue Var 0x558e63063890 'x' 'int'
    | `-ConditionalOperator 0x558e6306b2a8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x558e6306b0d0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x558e6306b088 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x558e6306b070 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x558e6306b030 <col:7> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x558e6306b0b8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x558e6306b0a0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x558e6306b050 <col:25> '_Bool' lvalue Var 0x558e63063a20 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x558e6306b290 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x558e6306b0f0 <col:42> 'int' lvalue Var 0x558e63063f48 'x$w_buff0' 'int'
    |   `-ParenExpr 0x558e6306b270 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x558e6306b240 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x558e6306b1b0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x558e6306b168 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x558e6306b150 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x558e6306b110 <col:55> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x558e6306b198 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x558e6306b180 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x558e6306b130 <col:73> '_Bool' lvalue Var 0x558e63063c68 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x558e6306b210 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x558e6306b1d0 <col:90> 'int' lvalue Var 0x558e63064040 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x558e6306b228 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x558e6306b1f0 <col:102> 'int' lvalue Var 0x558e63063890 'x' 'int'
    |-BinaryOperator 0x558e6306b4e0 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x558e6306b2f8 <col:3> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x558e6306b4c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558e6306b498 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x558e6306b3b8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x558e6306b370 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x558e6306b358 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x558e6306b318 <col:20> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x558e6306b3a0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x558e6306b388 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558e6306b338 <col:38> '_Bool' lvalue Var 0x558e63063a20 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558e6306b450 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558e6306b408 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558e6306b3d8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x558e6306b480 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558e6306b468 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558e6306b430 <col:66> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x558e6306b7c8 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x558e6306b500 <col:3> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x558e6306b7b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558e6306b780 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x558e6306b6a0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x558e6306b5c0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x558e6306b578 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x558e6306b560 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x558e6306b520 <col:20> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x558e6306b5a8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x558e6306b590 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x558e6306b540 <col:38> '_Bool' lvalue Var 0x558e63063a20 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x558e6306b680 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x558e6306b638 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x558e6306b620 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x558e6306b5e0 <col:56> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x558e6306b668 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x558e6306b650 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x558e6306b600 <col:74> '_Bool' lvalue Var 0x558e63063c68 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558e6306b738 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558e6306b6f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558e6306b6c0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x558e6306b768 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558e6306b750 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558e6306b718 <col:102> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x558e6306b9d0 <line:808:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x558e6306b7e8 <col:3> '_Bool' lvalue Var 0x558e63063a20 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558e6306b9b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558e6306b988 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x558e6306b8a8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x558e6306b860 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x558e6306b848 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x558e6306b808 <col:20> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x558e6306b890 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x558e6306b878 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558e6306b828 <col:38> '_Bool' lvalue Var 0x558e63063a20 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558e6306b940 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558e6306b8f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558e6306b8c8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x558e6306b970 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558e6306b958 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558e6306b920 <col:66> '_Bool' lvalue Var 0x558e63063a20 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x558e6306bcc8 <line:809:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x558e6306b9f0 <col:3> '_Bool' lvalue Var 0x558e63063c68 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558e6306bcb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558e6306bc80 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x558e6306bba0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x558e6306bab0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x558e6306ba68 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x558e6306ba50 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x558e6306ba10 <col:20> '_Bool' lvalue Var 0x558e63063fc0 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x558e6306ba98 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x558e6306ba80 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x558e6306ba30 <col:38> '_Bool' lvalue Var 0x558e63063a20 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x558e6306bb80 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x558e6306bb28 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x558e6306bb10 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x558e6306bad0 <col:56> '_Bool' lvalue Var 0x558e630640b8 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x558e6306bb58 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x558e6306bb40 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x558e6306baf0 <col:74> '_Bool' lvalue Var 0x558e63063c68 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558e6306bc38 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558e6306bbf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558e6306bbc0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x558e6306bc68 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558e6306bc50 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558e6306bc18 <col:102> '_Bool' lvalue Var 0x558e63063c68 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x558e6306bd20 <line:810:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558e6306bd08 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558e6306bce8 <col:3> 'void ()' Function 0x558e6300a060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558e6306bd78 <line:811:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558e6306bd60 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558e6306bd40 <col:3> 'void ()' Function 0x558e63009fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558e6306c048 <line:812:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x558e6306bd98 <col:3> '_Bool' lvalue Var 0x558e63063790 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x558e6306c030 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x558e6306c018 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x558e6306bff8 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x558e6306bfd8 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x558e6306bf40 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x558e6306bea8 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x558e6306be10 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x558e6306bdf8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x558e6306bdb8 <col:23> 'int' lvalue Var 0x558e630641b8 'y' 'int'
    |         | | | `-IntegerLiteral 0x558e6306bdd8 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x558e6306be88 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x558e6306be70 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x558e6306be30 <col:33> 'int' lvalue Var 0x558e63063440 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x558e6306be50 <col:56> 'int' 0
    |         | `-BinaryOperator 0x558e6306bf20 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x558e6306bf08 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x558e6306bec8 <col:61> 'int' lvalue Var 0x558e63063560 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x558e6306bee8 <col:84> 'int' 1
    |         `-BinaryOperator 0x558e6306bfb8 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x558e6306bfa0 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x558e6306bf60 <col:89> 'int' lvalue Var 0x558e63063680 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x558e6306bf80 <col:112> 'int' 1
    |-CallExpr 0x558e6306c0a0 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558e6306c088 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558e6306c068 <col:3> 'void ()' Function 0x558e6300a060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558e6306c118 <line:814:3, col:36> 'void'
    | |-ImplicitCastExpr 0x558e6306c100 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558e6306c0c0 <col:3> 'void (int)' Function 0x558e63009d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x558e6306c158 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x558e6306c140 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x558e6306c0e0 <col:21> '_Bool' lvalue Var 0x558e63063790 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x558e6306c190 <line:815:3, col:10>
      `-IntegerLiteral 0x558e6306c170 <col:10> 'int' 0
