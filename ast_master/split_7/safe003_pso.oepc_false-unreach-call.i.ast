TranslationUnitDecl 0x56025acd2e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56025acd36d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56025acd33b0 '__int128'
|-TypedefDecl 0x56025acd3748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56025acd33d0 'unsigned __int128'
|-TypedefDecl 0x56025acd3a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56025acd3820 'struct __NSConstantString_tag'
|   `-Record 0x56025acd37a0 '__NSConstantString_tag'
|-TypedefDecl 0x56025acd3af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56025acd3ab0 'char *'
|   `-BuiltinType 0x56025acd2eb0 'char'
|-TypedefDecl 0x56025ad12650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56025acd3d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56025acd3bd0 'struct __va_list_tag'
|     `-Record 0x56025acd3b50 '__va_list_tag'
|-FunctionDecl 0x56025ad12790 <./split_7/safe003_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56025ad126c0 <col:31> col:34 'int'
|-FunctionDecl 0x56025ad12958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56025ad12a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56025ad12bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56025ad12b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56025ad12df8 <col:40, col:99>
|   |-IfStmt 0x56025ad12dc8 <col:42, col:88>
|   | |-UnaryOperator 0x56025ad12ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56025ad12c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56025ad12c70 <col:47> 'int' lvalue ParmVar 0x56025ad12b38 'expression' 'int'
|   | `-CompoundStmt 0x56025ad12db0 <col:59, col:88>
|   |   `-LabelStmt 0x56025ad12d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56025ad12d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56025ad12d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56025ad12cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x56025ad12a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56025ad12de0 <col:89>
|   `-ReturnStmt 0x56025ad12de8 <col:91>
|-FunctionDecl 0x56025ad12e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56025ad12f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56025ad13280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56025ad12fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56025ad13038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56025ad130b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56025ad13138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56025ad13340 <line:10:22>
|-FunctionDecl 0x56025ad39390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56025ad133b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56025ad13430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56025ad134b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56025ad13530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56025ad39450 <line:13:22>
|-FunctionDecl 0x56025ad39700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56025ad394c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56025ad39540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56025ad395c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56025ad397b8 <line:15:22>
|-TypedefDecl 0x56025ad39828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56025acd2f70 'unsigned char'
|-TypedefDecl 0x56025ad39898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56025acd2f90 'unsigned short'
|-TypedefDecl 0x56025ad39908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56025acd2fb0 'unsigned int'
|-TypedefDecl 0x56025ad39978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-TypedefDecl 0x56025ad399e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56025acd2ed0 'signed char'
|-TypedefDecl 0x56025ad39a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56025acd2f70 'unsigned char'
|-TypedefDecl 0x56025ad39ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56025acd2ef0 'short'
|-TypedefDecl 0x56025ad39b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56025acd2f90 'unsigned short'
|-TypedefDecl 0x56025ad39ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56025acd2f10 'int'
|-TypedefDecl 0x56025ad39c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56025acd2fb0 'unsigned int'
|-TypedefDecl 0x56025ad39c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad39cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-TypedefDecl 0x56025ad39d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad39dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-TypedefDecl 0x56025ad39e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-TypedefDecl 0x56025ad39eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56025acd2fb0 'unsigned int'
|-TypedefDecl 0x56025ad39f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56025acd2fb0 'unsigned int'
|-TypedefDecl 0x56025ad39f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-TypedefDecl 0x56025ad3a008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-TypedefDecl 0x56025ad3a078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56025acd2fb0 'unsigned int'
|-TypedefDecl 0x56025ad3a0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-TypedefDecl 0x56025ad3a158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad3a1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad3a238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56025acd2f10 'int'
|-RecordDecl 0x56025ad3a290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56025ad3a408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56025ad3a4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56025ad3a460 'struct __fsid_t' sugar
|   `-RecordType 0x56025ad3a310 '__fsid_t'
|     `-Record 0x56025ad3a290 ''
|-TypedefDecl 0x56025ad3a548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad3a5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-TypedefDecl 0x56025ad3a628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-TypedefDecl 0x56025ad3a698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56025acd2fb0 'unsigned int'
|-TypedefDecl 0x56025ad3a708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad3a778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56025acd2fb0 'unsigned int'
|-TypedefDecl 0x56025ad3a7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad3a858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56025acd2f10 'int'
|-TypedefDecl 0x56025ad3a8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56025acd2f10 'int'
|-TypedefDecl 0x56025ad3a938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56025acd2f10 'int'
|-TypedefDecl 0x56025ad3a9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56025acd3630 'void *'
|   `-BuiltinType 0x56025acd2e70 'void'
|-TypedefDecl 0x56025ad3aa18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad3aa88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad3aaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad3ab68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-TypedefDecl 0x56025ad3abd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-TypedefDecl 0x56025ad3ac48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-TypedefDecl 0x56025ad3acb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-TypedefDecl 0x56025ad3ad28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad3ad98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad3ae08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad3ae78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-TypedefDecl 0x56025ad3af08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56025ad3aed0 '__off64_t' sugar
|   |-Typedef 0x56025ad3a1c8 '__off64_t'
|   `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad3b000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56025ad3afc0 '__quad_t *'
|   `-TypedefType 0x56025ad3af60 '__quad_t' sugar
|     |-Typedef 0x56025ad39d68 '__quad_t'
|     `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad3b070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56025acd3ab0 'char *'
|   `-BuiltinType 0x56025acd2eb0 'char'
|-TypedefDecl 0x56025ad3b0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad3b150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56025acd2fb0 'unsigned int'
|-FunctionDecl 0x56025ad3b298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56025ad3b1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56025ad3c5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56025ad3c5d8 <line:72:3, col:34>
|     `-CallExpr 0x56025ad3c598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56025ad3c580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56025ad3c510 <col:10> '<builtin fn type>' Function 0x56025ad3c380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56025ad3c5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56025ad3c530 <col:29> 'unsigned int' lvalue ParmVar 0x56025ad3b1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56025ad3c380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56025ad3c420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56025ad3c490 <col:10> Implicit
| `-ConstAttr 0x56025ad3c4e8 <col:10> Implicit
|-FunctionDecl 0x56025ad3c740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56025ad3c638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56025ad3ca58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56025ad3ca48 <line:77:3, col:34>
|     `-CallExpr 0x56025ad3ca08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56025ad3c9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56025ad3c978 <col:10> '<builtin fn type>' Function 0x56025ad3c7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56025ad3ca30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56025ad3c998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56025ad3c638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56025ad3c7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56025ad3c888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56025ad3c8f8 <col:10> Implicit
| `-ConstAttr 0x56025ad3c950 <col:10> Implicit
|-TypedefDecl 0x56025ad3ca88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-TypedefDecl 0x56025ad3cb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56025ad3cae0 '__time_t' sugar
|   |-Typedef 0x56025ad3a708 '__time_t'
|   `-BuiltinType 0x56025acd2f30 'long'
|-RecordDecl 0x56025ad3cb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56025ad3cc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56025ad3ccb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56025ad3cd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56025ad3cd10 '__pid_t' sugar
|   |-Typedef 0x56025ad3a238 '__pid_t'
|   `-BuiltinType 0x56025acd2f10 'int'
|-RecordDecl 0x56025ad3cda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56025ad3ce60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56025ad3ceb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56025ad3cf70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56025ad3cfd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-RecordDecl 0x56025ad3d030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56025ad3d2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56025ad3e3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56025ad3d310 'struct cpu_set_t' sugar
|   `-RecordType 0x56025ad3d0b0 'cpu_set_t'
|     `-Record 0x56025ad3d030 ''
|-FunctionDecl 0x56025ad3e678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56025ad3e448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56025ad3e550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56025ad3e728 <line:107:19>
|-FunctionDecl 0x56025ad3e900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56025ad3e790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56025ad3e9a8 <col:69>
|-FunctionDecl 0x56025ad3eb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56025ad3ea10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56025ad3ebc8 <col:64>
|-FunctionDecl 0x56025ad3ee88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56025ad3ec30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56025ad3ed68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56025ad3ef38 <line:113:22>
|-FunctionDecl 0x56025ad3f1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56025ad3efa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56025ad3f098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56025ad3f268 <col:88>
|-FunctionDecl 0x56025ad3f588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56025ad3f2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56025ad3f3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56025ad3f440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56025ad3f640 <col:62>
|-FunctionDecl 0x56025ad3f7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56025ad3f6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56025ad3f860 <col:63>
|-FunctionDecl 0x56025ad3f988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56025ad3fa28 <col:47>
|-FunctionDecl 0x56025ad3fb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56025ad3fa98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56025ad3fbd8 <col:69>
|-FunctionDecl 0x56025ad3fce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56025ad3fc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56025ad3fd88 <col:69>
|-FunctionDecl 0x56025ad40048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56025ad3fdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56025ad3ff28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56025ad400f8 <col:88>
|-TypedefDecl 0x56025ad40188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56025ad40150 '__clock_t' sugar
|   |-Typedef 0x56025ad3a548 '__clock_t'
|   `-BuiltinType 0x56025acd2f30 'long'
|-TypedefDecl 0x56025ad40218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56025ad401e0 '__clockid_t' sugar
|   |-Typedef 0x56025ad3a938 '__clockid_t'
|   `-BuiltinType 0x56025acd2f10 'int'
|-TypedefDecl 0x56025ad402a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56025ad40270 '__timer_t' sugar
|   |-Typedef 0x56025ad3a9a8 '__timer_t'
|   `-PointerType 0x56025acd3630 'void *'
|     `-BuiltinType 0x56025acd2e70 'void'
|-RecordDecl 0x56025ad40300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56025ad403d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56025ad40440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56025ad404a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56025ad40510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56025ad40578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56025ad405e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56025ad40648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56025ad406b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56025ad40718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56025ad40780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56025ad407e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56025ad40838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56025ad40908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56025ad40978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56025ad40a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56025ad40bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56025ad40c90 <col:45>
|-FunctionDecl 0x56025ad40e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56025ad40d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56025ad40f18 <col:54>
|-FunctionDecl 0x56025ad41118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56025ad40f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56025ad40ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56025ad411c8 <line:157:22>
| `-ConstAttr 0x56025ad41220 <col:63>
|-FunctionDecl 0x56025ad42050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56025ad41318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56025ad420f8 <col:56>
|-FunctionDecl 0x56025ad424a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56025ad42168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56025ad421e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56025ad42260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56025ad42358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56025ad42560 <col:54>
|-RecordDecl 0x56025ad425b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56025ad42668 parent 0x56025acd2e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56025ad428c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56025ad42968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56025ad429d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56025ad42a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56025ad42b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56025ad42c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56025ad42bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x56025ad42b80 'struct __locale_struct' sugar
|     `-RecordType 0x56025ad42640 'struct __locale_struct'
|       `-Record 0x56025ad425b8 '__locale_struct'
|-TypedefDecl 0x56025ad42cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56025ad42cc0 '__locale_t' sugar
|   |-Typedef 0x56025ad42c48 '__locale_t'
|   `-PointerType 0x56025ad42bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x56025ad42b80 'struct __locale_struct' sugar
|       `-RecordType 0x56025ad42640 'struct __locale_struct'
|         `-Record 0x56025ad425b8 '__locale_struct'
|-FunctionDecl 0x56025ad44110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56025ad42d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56025ad42de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56025ad42e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56025ad42ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56025ad42f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56025ad441d8 <col:40>
|-FunctionDecl 0x56025ad443c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56025ad442a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56025ad44470 <col:66>
|-FunctionDecl 0x56025ad44580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56025ad444d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56025ad44628 <col:69>
|-FunctionDecl 0x56025ad44858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56025ad44690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56025ad44720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56025ad44908 <col:52>
|-FunctionDecl 0x56025ad44ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56025ad44970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56025ad44a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56025ad44b60 <col:55>
|-FunctionDecl 0x56025ad44cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56025ad44be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56025ad44da0 <col:62>
|-FunctionDecl 0x56025ad44f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56025ad44e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56025ad44fc0 <col:60>
|-FunctionDecl 0x56025ad452b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56025ad45118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56025ad45198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56025ad45368 <col:44>
|-FunctionDecl 0x56025ad45578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56025ad453d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56025ad45450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56025ad45628 <col:49>
|-VarDecl 0x56025ad45728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56025ad457a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56025ad45828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56025ad458f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56025ad45a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56025ad45ac0 <col:42>
|-VarDecl 0x56025ad45b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56025ad45bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56025ad45d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56025ad45c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56025ad45de0 <col:57>
|-FunctionDecl 0x56025ad45ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56025ad45e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56025ad45f98 <col:56>
|-FunctionDecl 0x56025ad460d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56025ad46018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56025ad46178 <col:59>
|-FunctionDecl 0x56025ad46280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56025ad461e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56025ad46328 <col:48>
| `-ConstAttr 0x56025ad46380 <col:89>
|-FunctionDecl 0x56025ad465e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56025ad46438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56025ad464c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56025ad46848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56025ad466d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56025ad46768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56025ad468f8 <col:88>
|-FunctionDecl 0x56025ad46a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56025ad46960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56025ad469f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56025ad46b40 <col:88>
|-FunctionDecl 0x56025ad46d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56025ad46ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56025ad46c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56025ad46e08 <line:208:22>
|-FunctionDecl 0x56025ad47178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56025ad46e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56025ad46ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56025ad46f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56025ad47010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56025ad47478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56025ad47278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56025ad47350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56025ad47528 <col:85>
|-FunctionDecl 0x56025ad47918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56025ad47590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56025ad476c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56025ad477d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56025ad479d0 <col:52>
|-FunctionDecl 0x56025ad47b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56025ad47a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56025ad47bf0 <col:61>
|-FunctionDecl 0x56025ad480f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56025ad47c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56025ad47cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56025ad47e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56025ad47ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56025ad481b0 <col:62>
|-FunctionDecl 0x56025ad483c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56025ad48218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56025ad482a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56025ad48478 <line:221:22>
|-FunctionDecl 0x56025ad48578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56025ad484e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56025ad48620 <col:65>
|-TypedefDecl 0x56025ad48690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56025acd2fd0 'unsigned long'
|-RecordDecl 0x56025ad486e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56025ad48830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56025ad48898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56025ad48948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56025ad488f0 'union pthread_attr_t' sugar
|   `-RecordType 0x56025ad48770 'union pthread_attr_t'
|     `-Record 0x56025ad486e8 'pthread_attr_t'
|-RecordDecl 0x56025ad489a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56025ad48b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56025ad48b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56025ad48c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56025ad48be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56025ad48a20 'struct __pthread_internal_list'
|     `-Record 0x56025ad489a0 '__pthread_internal_list'
|-RecordDecl 0x56025ad48cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56025ad48d58 parent 0x56025acd2e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56025ad48e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56025ad48e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56025ad48f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56025ad48f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56025ad48fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56025ad49038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56025ad4d110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56025ad4d1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56025ad4d2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56025ad4d318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56025ad4d4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56025ad4d440 'union pthread_mutex_t' sugar
|   `-RecordType 0x56025ad48d30 'pthread_mutex_t'
|     `-Record 0x56025ad48cb0 ''
|-RecordDecl 0x56025ad4d510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56025ad4d650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56025ad4d6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56025ad4d770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56025ad4d710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56025ad4d590 'pthread_mutexattr_t'
|     `-Record 0x56025ad4d510 ''
|-RecordDecl 0x56025ad4d7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56025ad4d888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56025ad4d950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56025ad4d9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56025ad4da20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56025ad4da88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56025ad4daf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56025ad4db58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56025ad4dbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56025ad4dc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56025ad4dce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_7/safe003_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_7/safe003_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56025ad4ddd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56025ad4de38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56025ad4df70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56025ad4df10 'union pthread_cond_t' sugar
|   `-RecordType 0x56025ad4d860 'pthread_cond_t'
|     `-Record 0x56025ad4d7e0 ''
|-RecordDecl 0x56025ad4dfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56025ad4f130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56025ad4f198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56025ad4f250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56025ad4f1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x56025ad4e060 'pthread_condattr_t'
|     `-Record 0x56025ad4dfe0 ''
|-TypedefDecl 0x56025ad4f2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56025acd2fb0 'unsigned int'
|-TypedefDecl 0x56025ad4f348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56025acd2f10 'int'
|-RecordDecl 0x56025ad4f3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56025ad4f448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56025ad4f510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56025ad4f578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56025ad4f5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56025ad4f648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56025ad4f6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56025ad4f718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56025ad4f780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56025ad4f7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56025ad4f850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56025ad4f8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56025ad4f920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56025ad4f9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_7/safe003_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_7/safe003_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56025ad4fa78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56025ad4fae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56025ad4fc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56025ad4fbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56025ad4f420 'pthread_rwlock_t'
|     `-Record 0x56025ad4f3a0 ''
|-RecordDecl 0x56025ad4fca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56025ad4fde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56025ad4fe48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56025ad4ff00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56025ad4fea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56025ad4fd20 'pthread_rwlockattr_t'
|     `-Record 0x56025ad4fca0 ''
|-TypedefDecl 0x56025ad4ff88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56025acd2f14 'volatile int' volatile
|   `-BuiltinType 0x56025acd2f10 'int'
|-RecordDecl 0x56025ad4ffe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56025ad51140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56025ad511a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56025ad51260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56025ad51200 'union pthread_barrier_t' sugar
|   `-RecordType 0x56025ad50060 'pthread_barrier_t'
|     `-Record 0x56025ad4ffe0 ''
|-RecordDecl 0x56025ad512d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56025ad513d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56025ad51438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56025ad514f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56025ad51490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56025ad51350 'pthread_barrierattr_t'
|     `-Record 0x56025ad512d0 ''
|-TypedefDecl 0x56025ad51608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56025ad515a0 'long [8]' 8 
|   `-BuiltinType 0x56025acd2f30 'long'
|-EnumDecl 0x56025ad51660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56025ad51728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56025ad51778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56025ad517c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56025ad51898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56025ad518e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56025ad51938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56025ad51988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56025ad51a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56025ad519f8 <col:26> 'int'
| |   `-DeclRefExpr 0x56025ad519d8 <col:26> 'int' EnumConstant 0x56025ad51898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56025ad51a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56025ad51a80 <col:29> 'int'
| |   `-DeclRefExpr 0x56025ad51a60 <col:29> 'int' EnumConstant 0x56025ad518e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56025ad51b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56025ad51b08 <col:30> 'int'
| |   `-DeclRefExpr 0x56025ad51ae8 <col:30> 'int' EnumConstant 0x56025ad51938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56025ad51ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56025ad51b90 <col:27> 'int'
|     `-DeclRefExpr 0x56025ad51b70 <col:27> 'int' EnumConstant 0x56025ad51a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56025ad51bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56025ad51cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56025ad51d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56025ad51d38 <col:30> 'int'
| |   `-DeclRefExpr 0x56025ad51d18 <col:30> 'int' EnumConstant 0x56025ad51cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56025ad51da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56025ad51e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56025ad51e10 <col:29> 'int'
|     `-DeclRefExpr 0x56025ad51df0 <col:29> 'int' EnumConstant 0x56025ad51da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56025ad51e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56025ad51f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56025ad51f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56025ad51fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56025ad52038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56025ad52150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56025ad521a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56025ad521f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56025ad52278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56025ad52260 <col:31> 'int'
|     `-DeclRefExpr 0x56025ad52240 <col:31> 'int' EnumConstant 0x56025ad52150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56025ad522c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56025ad52398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56025ad523e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56025ad52438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56025ad52508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56025ad52558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56025ad525a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56025ad52678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56025ad526c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56025ad52718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56025ad52958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56025ad529c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56025ad52a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56025ad52b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56025ad52b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56025ad52c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56025ad52cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56025ad52d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56025ad52dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56025ad52e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56025ad53488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56025ad52f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56025ad53030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56025ad53270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56025ad532f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56025ad53548 <col:47>
| |-NonNullAttr 0x56025ad535a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x56025ad535d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56025ad53700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56025ad53630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56025ad53958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56025ad537b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56025ad53838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56025ad53b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56025ad53a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56025ad53bd0 <col:60>
|-FunctionDecl 0x56025ad53d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56025ad53dc0 <col:54>
| `-ConstAttr 0x56025ad53e18 <col:95>
|-FunctionDecl 0x56025ad53fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56025ad53e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56025ad53ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56025ad54098 <line:394:19>
| `-ConstAttr 0x56025ad540f0 <col:60>
|-FunctionDecl 0x56025ad55b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56025ad559d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56025ad55bb0 <col:71>
| `-NonNullAttr 0x56025ad55c08 <col:112, col:126> 1
|-FunctionDecl 0x56025ad55d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56025ad55c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56025ad55db8 <line:397:22>
| `-NonNullAttr 0x56025ad55e10 <col:63, col:77> 1
|-FunctionDecl 0x56025ad56038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56025ad55e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56025ad55ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56025ad560e8 <line:400:22>
| `-NonNullAttr 0x56025ad56140 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad56348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56025ad56188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56025ad56208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56025ad563f8 <line:403:22>
| `-NonNullAttr 0x56025ad56450 <col:63, col:77> 1
|-FunctionDecl 0x56025ad566a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56025ad56498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56025ad56540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56025ad56758 <line:406:22>
| `-NonNullAttr 0x56025ad567b0 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad579e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56025ad567f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56025ad56870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56025ad57a98 <line:409:22>
| `-NonNullAttr 0x56025ad57af0 <col:63, col:77> 1
|-FunctionDecl 0x56025ad57d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56025ad57b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56025ad57bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56025ad57dd8 <line:412:22>
| `-NonNullAttr 0x56025ad57e30 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad58068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56025ad57e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56025ad57f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56025ad58118 <col:37>
| `-NonNullAttr 0x56025ad58170 <col:78, col:95> 1 2
|-FunctionDecl 0x56025ad58358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56025ad581b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56025ad58238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56025ad58408 <line:418:22>
| `-NonNullAttr 0x56025ad58460 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad585e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56025ad584a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56025ad58528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56025ad58698 <line:420:22>
| `-NonNullAttr 0x56025ad586f0 <col:63, col:77> 1
|-FunctionDecl 0x56025ad58898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56025ad58738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56025ad587b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56025ad58948 <line:423:22>
| `-NonNullAttr 0x56025ad589c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad58b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56025ad58a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56025ad58a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56025ad58bf8 <line:426:22>
| `-NonNullAttr 0x56025ad58c50 <col:63, col:77> 1
|-FunctionDecl 0x56025ad58df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56025ad58c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56025ad58d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56025ad58ea8 <line:429:22>
| `-NonNullAttr 0x56025ad58f00 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad59088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56025ad58f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56025ad58fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56025ad59138 <line:431:22>
| `-NonNullAttr 0x56025ad59190 <col:63, col:77> 1
|-FunctionDecl 0x56025ad593b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56025ad591d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56025ad59258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56025ad59468 <line:434:22>
| |-NonNullAttr 0x56025ad594c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56025ad594f8 <col:100> "" ""
|-FunctionDecl 0x56025ad59708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56025ad59548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56025ad595c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56025ad597b8 <line:437:22>
| |-NonNullAttr 0x56025ad59810 <col:63, col:77> 1
| `-DeprecatedAttr 0x56025ad59848 <col:97> "" ""
|-FunctionDecl 0x56025ad59a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56025ad59898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56025ad59910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56025ad59af8 <line:440:22>
| `-NonNullAttr 0x56025ad59b50 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad59cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56025ad59b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56025ad59c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56025ad59d80 <line:443:22>
| `-NonNullAttr 0x56025ad59dd8 <col:63, col:77> 1
|-FunctionDecl 0x56025ad5a0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56025ad59e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56025ad59ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56025ad59f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56025ad5a180 <line:447:22>
| `-NonNullAttr 0x56025ad5a1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56025ad5a488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56025ad5a230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56025ad5a2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56025ad5a328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56025ad5a540 <col:43>
| `-NonNullAttr 0x56025ad5a598 <col:84, col:98> 1
|-FunctionDecl 0x56025ad5a858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56025ad5a5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56025ad5a668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56025ad5a6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56025ad5a910 <line:452:22>
| `-NonNullAttr 0x56025ad5a968 <col:63, col:77> 3
|-FunctionDecl 0x56025ad5ac78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56025ad5a9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56025ad5aa60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56025ad5aaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56025ad5ad30 <line:456:22>
| `-NonNullAttr 0x56025ad5ad88 <col:63, col:80> 2 3
|-FunctionDecl 0x56025ad5af78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56025ad5add8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56025ad5ae58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56025ad5b028 <line:458:22>
|-FunctionDecl 0x56025ad5b3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56025ad5b0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56025ad5b290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56025ad5b4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x56025ad5b650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56025ad5b530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56025ad5b5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56025ad5b838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56025ad5b718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56025ad5b798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56025ad5b9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56025ad5b8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56025ad5bb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56025ad5bbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56025ad5bc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56025ad5bd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56025ad5bdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56025ad5bfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_7/safe003_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56025ad5c098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56025ad5c150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56025ad5c0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56025ad5bc50 '__pthread_unwind_buf_t'
| |   `-Record 0x56025ad5bbd0 ''
| `-AlignedAttr 0x56025ad5c1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56025ad5c220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56025ad5c380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56025ad5c3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56025ad5c450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56025ad5c4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56025ad5c6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56025ad5c5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56025ad5c808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56025ad5c778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56025ad5ca00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56025ad5c8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56025ad5caa8 <line:487:22>
|-RecordDecl 0x56025ad5cb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56025ad5ce18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56025ad5cc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56025ad5ccf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56025ad5cec8 <col:86>
| `-ReturnsTwiceAttr 0x56025ad5cf20 <col:12> Implicit
|-FunctionDecl 0x56025ad5d248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56025ad5cff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56025ad5d100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56025ad5d2f8 <line:493:22>
| `-NonNullAttr 0x56025ad5d350 <col:63, col:77> 1
|-FunctionDecl 0x56025ad5d4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56025ad5d398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56025ad5d570 <line:495:22>
| `-NonNullAttr 0x56025ad5d5c8 <col:63, col:77> 1
|-FunctionDecl 0x56025ad5d6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56025ad5d618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56025ad5d778 <line:497:22>
| `-NonNullAttr 0x56025ad5d7d0 <col:52, col:66> 1
|-FunctionDecl 0x56025ad5d8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56025ad5d818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56025ad5d978 <line:499:22>
| `-NonNullAttr 0x56025ad5d9d0 <col:52, col:66> 1
|-FunctionDecl 0x56025ad5ec28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56025ad5ea38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56025ad5eac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56025ad5ecd8 <col:36>
| `-NonNullAttr 0x56025ad5ed30 <col:66, col:83> 1 2
|-FunctionDecl 0x56025ad5ee30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56025ad5ed78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56025ad5eed8 <line:504:22>
| `-NonNullAttr 0x56025ad5ef30 <col:52, col:66> 1
|-FunctionDecl 0x56025ad5f1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56025ad5efe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56025ad5f060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56025ad5f278 <line:508:22>
| `-NonNullAttr 0x56025ad5f2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad5f598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56025ad5f318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56025ad5f398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56025ad5f418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56025ad5f650 <line:512:22>
| `-NonNullAttr 0x56025ad5f6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x56025ad5f7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56025ad5f6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56025ad5f858 <line:514:22>
| `-NonNullAttr 0x56025ad5f8b0 <col:63, col:77> 1
|-FunctionDecl 0x56025ad5fad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56025ad5f960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56025ad5fb80 <line:516:22>
| `-NonNullAttr 0x56025ad5fbd8 <col:63, col:77> 1
|-FunctionDecl 0x56025ad5fce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56025ad5fc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56025ad5fd88 <line:518:22>
| `-NonNullAttr 0x56025ad5fde0 <col:63, col:77> 1
|-FunctionDecl 0x56025ad60008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56025ad5fe28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56025ad5fea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56025ad600b8 <line:522:22>
| `-NonNullAttr 0x56025ad60110 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad60318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56025ad60158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56025ad601d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56025ad603c8 <line:525:22>
| `-NonNullAttr 0x56025ad60420 <col:63, col:77> 1
|-FunctionDecl 0x56025ad605c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56025ad60468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56025ad604e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56025ad60678 <line:528:22>
| `-NonNullAttr 0x56025ad606d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad60858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56025ad60718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56025ad60798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56025ad60908 <line:530:22>
| `-NonNullAttr 0x56025ad60960 <col:63, col:77> 1
|-FunctionDecl 0x56025ad60b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56025ad609a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56025ad60a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56025ad60bd0 <line:534:22>
| `-NonNullAttr 0x56025ad60c28 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad60db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56025ad60c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56025ad60cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56025ad60e68 <line:537:22>
| `-NonNullAttr 0x56025ad60ec0 <col:63, col:77> 1
|-FunctionDecl 0x56025ad61068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56025ad60f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56025ad60f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56025ad61118 <line:541:22>
| `-NonNullAttr 0x56025ad61170 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad612f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56025ad611b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56025ad61238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56025ad613a8 <line:544:22>
| `-NonNullAttr 0x56025ad61400 <col:63, col:77> 1
|-FunctionDecl 0x56025ad615e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56025ad61448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56025ad614c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56025ad61698 <line:547:22>
| `-NonNullAttr 0x56025ad616f0 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad61878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56025ad61738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56025ad617b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56025ad61928 <line:550:22>
| `-NonNullAttr 0x56025ad61980 <col:63, col:77> 1
|-FunctionDecl 0x56025ad62cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56025ad62aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56025ad62bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56025ad62da8 <col:29>
| `-NonNullAttr 0x56025ad62e00 <col:70, col:84> 1
|-FunctionDecl 0x56025ad62f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56025ad62e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56025ad63020 <line:555:22>
| `-NonNullAttr 0x56025ad63078 <col:63, col:77> 1
|-FunctionDecl 0x56025ad63180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56025ad630c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56025ad63228 <line:557:22>
| `-NonNullAttr 0x56025ad63280 <col:52, col:66> 1
|-FunctionDecl 0x56025ad63380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56025ad632c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56025ad63428 <line:559:19>
| `-NonNullAttr 0x56025ad63480 <col:49, col:63> 1
|-FunctionDecl 0x56025ad636b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56025ad634c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56025ad63558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56025ad63768 <col:39>
| `-NonNullAttr 0x56025ad637c0 <col:69, col:86> 1 2
|-FunctionDecl 0x56025ad638c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56025ad63808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56025ad63968 <line:564:22>
| `-NonNullAttr 0x56025ad639c0 <col:52, col:66> 1
|-FunctionDecl 0x56025ad63b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56025ad63a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56025ad63bd0 <line:566:22>
| `-NonNullAttr 0x56025ad63c28 <col:52, col:66> 1
|-FunctionDecl 0x56025ad63de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56025ad63c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56025ad63d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56025ad63e98 <col:39>
| `-NonNullAttr 0x56025ad63ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x56025ad63ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56025ad63f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56025ad64098 <line:571:22>
| `-NonNullAttr 0x56025ad640f0 <col:52, col:66> 1
|-FunctionDecl 0x56025ad642d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56025ad641a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56025ad64380 <line:573:22>
| `-NonNullAttr 0x56025ad643d8 <col:63, col:77> 1
|-FunctionDecl 0x56025ad644e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56025ad64428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56025ad64588 <line:575:22>
| `-NonNullAttr 0x56025ad645e0 <col:63, col:77> 1
|-FunctionDecl 0x56025ad64808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56025ad64628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56025ad646a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56025ad648b8 <line:579:22>
| `-NonNullAttr 0x56025ad64910 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad64b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56025ad64958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56025ad649d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56025ad64be8 <line:582:22>
| `-NonNullAttr 0x56025ad64c40 <col:63, col:77> 1
|-FunctionDecl 0x56025ad64de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56025ad64c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56025ad64d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56025ad64e98 <line:586:22>
| `-NonNullAttr 0x56025ad64ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad65078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56025ad64f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56025ad64fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56025ad65128 <col:36>
| `-NonNullAttr 0x56025ad65180 <col:77, col:91> 1
|-FunctionDecl 0x56025ad654b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56025ad65260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56025ad65370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56025ad65568 <line:591:22>
| `-NonNullAttr 0x56025ad655c0 <col:63, col:77> 1
|-FunctionDecl 0x56025ad65738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56025ad65608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56025ad657e0 <line:593:22>
| `-NonNullAttr 0x56025ad65838 <col:63, col:77> 1
|-FunctionDecl 0x56025ad65940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56025ad65888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56025ad659e8 <line:595:22>
| `-NonNullAttr 0x56025ad65a40 <col:52, col:66> 1
|-FunctionDecl 0x56025ad65b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56025ad65aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56025ad65c00 <line:597:22>
| `-NonNullAttr 0x56025ad65c58 <col:52, col:66> 1
|-FunctionDecl 0x56025ad65e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56025ad65ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56025ad65d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56025ad65f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56025ad66268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56025ad65fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56025ad66030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56025ad660c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56025ad66320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56025ad66538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56025ad66400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56025ad665e0 <line:606:22>
| `-NonNullAttr 0x56025ad66638 <col:63, col:77> 1
|-FunctionDecl 0x56025ad66740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56025ad66688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56025ad667e8 <line:608:22>
| `-NonNullAttr 0x56025ad66840 <col:63, col:77> 1
|-FunctionDecl 0x56025ad66aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56025ad66888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56025ad66908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56025ad66b50 <line:612:22>
| `-NonNullAttr 0x56025ad66ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad66db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56025ad66bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56025ad66c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56025ad66e68 <col:37>
| `-NonNullAttr 0x56025ad66ec0 <col:78, col:92> 1
|-FunctionDecl 0x56025ad670d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56025ad66f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56025ad66fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56025ad67188 <line:618:22>
| `-NonNullAttr 0x56025ad671e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad673a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56025ad67228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56025ad672a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56025ad67458 <line:621:22>
| `-NonNullAttr 0x56025ad674b0 <col:63, col:77> 1
|-FunctionDecl 0x56025ad67758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56025ad67590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56025ad67610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56025ad67808 <line:623:22>
| `-NonNullAttr 0x56025ad67860 <col:63, col:77> 1
|-FunctionDecl 0x56025ad679d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56025ad678a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56025ad67ab0 <line:625:22>
| `-NonNullAttr 0x56025ad67b08 <col:63, col:77> 1
|-FunctionDecl 0x56025ad67c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56025ad67b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56025ad67cb8 <line:627:22>
| `-NonNullAttr 0x56025ad67d10 <col:52, col:66> 1
|-FunctionDecl 0x56025ad67e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56025ad67d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56025ad67eb8 <line:629:22>
| `-NonNullAttr 0x56025ad67f10 <col:52, col:66> 1
|-FunctionDecl 0x56025ad68010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56025ad67f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56025ad680b8 <line:631:22>
| `-NonNullAttr 0x56025ad68110 <col:52, col:66> 1
|-FunctionDecl 0x56025ad684e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56025ad681f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56025ad68300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56025ad68380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56025ad685a0 <line:635:22>
| `-NonNullAttr 0x56025ad685f8 <col:63, col:77> 1
|-FunctionDecl 0x56025ad68778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56025ad68648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56025ad68820 <line:637:22>
| `-NonNullAttr 0x56025ad68878 <col:63, col:77> 1
|-FunctionDecl 0x56025ad68980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56025ad688c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56025ad68a28 <line:639:22>
| `-NonNullAttr 0x56025ad68a80 <col:52, col:66> 1
|-FunctionDecl 0x56025ad69c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56025ad69b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56025ad69d30 <line:641:22>
| `-NonNullAttr 0x56025ad69d88 <col:63, col:77> 1
|-FunctionDecl 0x56025ad69e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56025ad69dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56025ad69f38 <line:643:22>
| `-NonNullAttr 0x56025ad69f90 <col:63, col:77> 1
|-FunctionDecl 0x56025ad6a1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56025ad69fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56025ad6a058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56025ad6a268 <line:647:22>
| `-NonNullAttr 0x56025ad6a2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56025ad6a4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56025ad6a308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56025ad6a388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56025ad6a578 <line:650:22>
| `-NonNullAttr 0x56025ad6a5d0 <col:63, col:77> 1
|-FunctionDecl 0x56025ad6a918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56025ad6a6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56025ad6a7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56025ad6a9c8 <line:653:22>
| `-NonNullAttr 0x56025ad6aa20 <col:63, col:77> 1
|-FunctionDecl 0x56025ad6ab88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56025ad6aa68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56025ad6ac30 <col:69>
|-FunctionDecl 0x56025ad6ada8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56025ad6ac98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56025ad6ae50 <col:72>
|-FunctionDecl 0x56025ad6b088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56025ad6aeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56025ad6af68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56025ad6b138 <col:44>
|-FunctionDecl 0x56025ad6b358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56025ad6b1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56025ad6b218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56025ad6b408 <line:660:22>
| `-NonNullAttr 0x56025ad6b460 <col:63, col:77> 2
|-FunctionDecl 0x56025ad6b8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56025ad6b540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56025ad6b650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56025ad6b760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56025ad6b960 <col:47>
|-FunctionDecl 0x56025ad6baf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56025ad6b9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56025ad6bc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56025ad6bbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56025ad6bda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56025ad6bd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56025ad6be68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56025ad6bf28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56025ad6bfe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56025ad6c0a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56025ad6c120 prev 0x56025ad6c0a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56025ad6c188 <col:24> 'int' 0
|-VarDecl 0x56025ad6c1c0 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56025ad6c240 prev 0x56025ad6c1c0 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56025ad6c2a8 <col:27> 'int' 0
|-VarDecl 0x56025ad6c2e0 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x56025ad6c360 prev 0x56025ad6c2e0 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x56025ad6c3c8 <col:27> 'int' 0
|-VarDecl 0x56025ad6c400 <line:677:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x56025ad6c480 prev 0x56025ad6c400 <line:678:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x56025ad6c4e8 <col:27> 'int' 0
|-VarDecl 0x56025ad6c518 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56025ad6c590 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56025ad6c610 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x56025ad6c690 prev 0x56025ad6c610 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56025ad6c6f8 <col:9> 'int' 0
|-VarDecl 0x56025ad6c730 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x56025ad6c7b0 prev 0x56025ad6c730 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56025ad6c818 <col:9> 'int' 0
|-VarDecl 0x56025ad6c848 <line:685:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x56025ad6c8c8 <line:686:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x56025ad6c940 <line:687:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x56025ad6c9b8 <line:688:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x56025ad6ca30 <line:689:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x56025ad6cb00 <line:690:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x56025ad6cb78 <line:691:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x56025ad6cbf0 <line:692:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x56025ad6cc68 <line:693:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x56025ad6cce0 <line:694:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x56025ad6cd58 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x56025ad6cdd8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x56025ad6ce58 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x56025ad6ced0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x56025ad6cf50 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x56025ad6cfc8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x56025ad6d040 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56025ad6d0b8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56025ad6d1d0 prev 0x56025ad6baf0 <line:703:1, line:731:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56025ad6d138 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56025ad6e9f8 <line:704:1, line:731:1>
|   |-CallExpr 0x56025ad6d2e8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56025ad6d2d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6d278 <col:3> 'void ()' Function 0x56025ad12e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56025ad6d360 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56025ad6d308 <col:3> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56025ad6d348 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56025ad6d328 <col:15> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   |-BinaryOperator 0x56025ad6d3c0 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56025ad6d380 <col:3> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x56025ad6d3a0 <col:15> 'int' 2
|   |-BinaryOperator 0x56025ad6d438 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad6d3e0 <col:3> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad6d420 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56025ad6d400 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56025ad6d4d0 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad6d458 <col:3> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56025ad6d4a8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56025ad6d478 <col:27> 'int' 1
|   |-CallExpr 0x56025ad6d658 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56025ad6d640 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56025ad6d4f0 <col:3> 'void (int)' Function 0x56025ad12bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56025ad6d5f0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56025ad6d5d0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56025ad6d5b0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56025ad6d568 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56025ad6d550 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56025ad6d510 <col:23> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56025ad6d598 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56025ad6d580 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56025ad6d530 <col:41> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56025ad6d6d8 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad6d680 <col:3> '_Bool' lvalue Var 0x56025ad6cb78 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad6d6c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56025ad6d6a0 <col:20> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56025ad6d750 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad6d6f8 <col:3> '_Bool' lvalue Var 0x56025ad6cbf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad6d738 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56025ad6d718 <col:20> '_Bool' lvalue Var 0x56025ad6c9b8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56025ad6d7c8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad6d770 <col:3> '_Bool' lvalue Var 0x56025ad6cc68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad6d7b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56025ad6d790 <col:20> '_Bool' lvalue Var 0x56025ad6ca30 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56025ad6d840 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad6d7e8 <col:3> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad6d828 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56025ad6d808 <col:20> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56025ad6d8d8 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad6d860 <col:3> '_Bool' lvalue Var 0x56025ad6c9b8 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x56025ad6d8b0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56025ad6d880 <col:27> 'int' 1
|   |-CallExpr 0x56025ad6d930 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56025ad6d918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6d8f8 <col:3> 'void ()' Function 0x56025ad12f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56025ad6d988 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56025ad6d970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6d950 <col:3> 'void ()' Function 0x56025ad12e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56025ad6d9e8 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56025ad6d9a8 <col:3> 'int' lvalue Var 0x56025ad6c690 'x' 'int'
|   | `-IntegerLiteral 0x56025ad6d9c8 <col:7> 'int' 1
|   |-CallExpr 0x56025ad6da40 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56025ad6da28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6da08 <col:3> 'void ()' Function 0x56025ad12f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56025ad6da98 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56025ad6da80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6da60 <col:3> 'void ()' Function 0x56025ad12e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56025ad6dd98 <line:721:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56025ad6dab8 <col:3> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   | `-ConditionalOperator 0x56025ad6dd68 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56025ad6db90 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56025ad6db48 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56025ad6db30 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56025ad6dad8 <col:7> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56025ad6db78 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56025ad6db60 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56025ad6db10 <col:25> '_Bool' lvalue Var 0x56025ad6c9b8 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x56025ad6dd50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56025ad6dbb0 <col:42> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56025ad6dd30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56025ad6dd00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56025ad6dc70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56025ad6dc28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56025ad6dc10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56025ad6dbd0 <col:55> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56025ad6dc58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56025ad6dc40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56025ad6dbf0 <col:73> '_Bool' lvalue Var 0x56025ad6cbf0 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56025ad6dcd0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56025ad6dc90 <col:90> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56025ad6dce8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad6dcb0 <col:102> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   |-BinaryOperator 0x56025ad6dfa0 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad6ddb8 <col:3> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad6df88 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad6df58 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56025ad6de78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56025ad6de30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56025ad6de18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56025ad6ddd8 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56025ad6de60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56025ad6de48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56025ad6ddf8 <col:38> '_Bool' lvalue Var 0x56025ad6c9b8 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad6df10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56025ad6dec8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56025ad6de98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56025ad6df40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56025ad6df28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad6def0 <col:66> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56025ad6e288 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad6dfc0 <col:3> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad6e270 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad6e240 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56025ad6e160 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56025ad6e080 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56025ad6e038 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56025ad6e020 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56025ad6dfe0 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56025ad6e068 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56025ad6e050 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56025ad6e000 <col:38> '_Bool' lvalue Var 0x56025ad6c9b8 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56025ad6e140 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56025ad6e0f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56025ad6e0e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56025ad6e0a0 <col:56> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56025ad6e128 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56025ad6e110 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56025ad6e0c0 <col:74> '_Bool' lvalue Var 0x56025ad6cbf0 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad6e1f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56025ad6e1b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56025ad6e180 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56025ad6e228 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56025ad6e210 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad6e1d8 <col:102> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56025ad6e490 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad6e2a8 <col:3> '_Bool' lvalue Var 0x56025ad6c9b8 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad6e478 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad6e448 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56025ad6e368 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56025ad6e320 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56025ad6e308 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56025ad6e2c8 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56025ad6e350 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56025ad6e338 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56025ad6e2e8 <col:38> '_Bool' lvalue Var 0x56025ad6c9b8 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad6e400 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56025ad6e3b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56025ad6e388 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56025ad6e430 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56025ad6e418 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad6e3e0 <col:66> '_Bool' lvalue Var 0x56025ad6c9b8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56025ad6e778 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad6e4b0 <col:3> '_Bool' lvalue Var 0x56025ad6cbf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad6e760 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad6e730 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56025ad6e650 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56025ad6e570 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56025ad6e528 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56025ad6e510 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56025ad6e4d0 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56025ad6e558 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56025ad6e540 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56025ad6e4f0 <col:38> '_Bool' lvalue Var 0x56025ad6c9b8 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56025ad6e630 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56025ad6e5e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56025ad6e5d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56025ad6e590 <col:56> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56025ad6e618 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56025ad6e600 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56025ad6e5b0 <col:74> '_Bool' lvalue Var 0x56025ad6cbf0 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad6e6e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56025ad6e6a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56025ad6e670 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56025ad6e718 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56025ad6e700 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad6e6c8 <col:102> '_Bool' lvalue Var 0x56025ad6cbf0 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x56025ad6e7d0 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56025ad6e7b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6e798 <col:3> 'void ()' Function 0x56025ad12f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56025ad6e828 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56025ad6e810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6e7f0 <col:3> 'void ()' Function 0x56025ad12e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56025ad6e8e0 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56025ad6e848 <col:3> 'int' lvalue Var 0x56025ad6c120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56025ad6e8c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56025ad6e8a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56025ad6e868 <col:22> 'int' lvalue Var 0x56025ad6c120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56025ad6e888 <col:41> 'int' 1
|   |-CallExpr 0x56025ad6e938 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56025ad6e920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6e900 <col:3> 'void ()' Function 0x56025ad12f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56025ad6e9e8 <line:730:3, col:36>
|     `-CallExpr 0x56025ad6e9c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56025ad6e9b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56025ad6e958 <col:10> 'void *(void)' Function 0x56025ad12958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56025ad6ebb8 prev 0x56025ad6bc48 <line:732:1, line:751:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56025ad6eb20 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56025ad6fdf0 <line:733:1, line:751:1>
|   |-CallExpr 0x56025ad6ec98 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56025ad6ec80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6ec60 <col:3> 'void ()' Function 0x56025ad12e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56025ad6ed10 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56025ad6ecb8 <col:3> 'int' lvalue Var 0x56025ad6c240 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x56025ad6ecf8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56025ad6ecd8 <col:25> 'int' lvalue Var 0x56025ad6c690 'x' 'int'
|   |-CallExpr 0x56025ad6ed68 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56025ad6ed50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6ed30 <col:3> 'void ()' Function 0x56025ad12f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56025ad6edc0 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56025ad6eda8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6ed88 <col:3> 'void ()' Function 0x56025ad12e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56025ad6ee20 <line:738:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56025ad6ede0 <col:3> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   | `-IntegerLiteral 0x56025ad6ee00 <col:7> 'int' 1
|   |-CallExpr 0x56025ad6ee78 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56025ad6ee60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6ee40 <col:3> 'void ()' Function 0x56025ad12f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56025ad6eed0 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56025ad6eeb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6ee98 <col:3> 'void ()' Function 0x56025ad12e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56025ad6f1b8 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56025ad6eef0 <col:3> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   | `-ConditionalOperator 0x56025ad6f188 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56025ad6efb0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56025ad6ef68 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56025ad6ef50 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56025ad6ef10 <col:7> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56025ad6ef98 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56025ad6ef80 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56025ad6ef30 <col:25> '_Bool' lvalue Var 0x56025ad6ca30 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56025ad6f170 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56025ad6efd0 <col:42> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56025ad6f150 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56025ad6f120 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56025ad6f090 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56025ad6f048 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56025ad6f030 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56025ad6eff0 <col:55> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56025ad6f078 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56025ad6f060 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56025ad6f010 <col:73> '_Bool' lvalue Var 0x56025ad6cc68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56025ad6f0f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56025ad6f0b0 <col:90> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56025ad6f108 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad6f0d0 <col:102> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   |-BinaryOperator 0x56025ad6f3c0 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad6f1d8 <col:3> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad6f3a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad6f378 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56025ad6f298 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56025ad6f250 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56025ad6f238 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56025ad6f1f8 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56025ad6f280 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56025ad6f268 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56025ad6f218 <col:38> '_Bool' lvalue Var 0x56025ad6ca30 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad6f330 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56025ad6f2e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56025ad6f2b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56025ad6f360 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56025ad6f348 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad6f310 <col:66> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56025ad6f6a8 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad6f3e0 <col:3> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad6f690 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad6f660 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56025ad6f580 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56025ad6f4a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56025ad6f458 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56025ad6f440 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56025ad6f400 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56025ad6f488 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56025ad6f470 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56025ad6f420 <col:38> '_Bool' lvalue Var 0x56025ad6ca30 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56025ad6f560 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56025ad6f518 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56025ad6f500 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56025ad6f4c0 <col:56> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56025ad6f548 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56025ad6f530 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56025ad6f4e0 <col:74> '_Bool' lvalue Var 0x56025ad6cc68 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad6f618 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56025ad6f5d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56025ad6f5a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56025ad6f648 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56025ad6f630 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad6f5f8 <col:102> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56025ad6f8b0 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad6f6c8 <col:3> '_Bool' lvalue Var 0x56025ad6ca30 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad6f898 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad6f868 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56025ad6f788 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56025ad6f740 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56025ad6f728 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56025ad6f6e8 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56025ad6f770 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56025ad6f758 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56025ad6f708 <col:38> '_Bool' lvalue Var 0x56025ad6ca30 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad6f820 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56025ad6f7d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56025ad6f7a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56025ad6f850 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56025ad6f838 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad6f800 <col:66> '_Bool' lvalue Var 0x56025ad6ca30 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56025ad6fba8 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad6f8d0 <col:3> '_Bool' lvalue Var 0x56025ad6cc68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad6fb90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad6fb60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56025ad6fa70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56025ad6f990 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56025ad6f948 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56025ad6f930 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56025ad6f8f0 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56025ad6f978 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56025ad6f960 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56025ad6f910 <col:38> '_Bool' lvalue Var 0x56025ad6ca30 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56025ad6fa50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56025ad6fa08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56025ad6f9f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56025ad6f9b0 <col:56> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56025ad6fa38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56025ad6fa20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56025ad6f9d0 <col:74> '_Bool' lvalue Var 0x56025ad6cc68 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad6fb08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56025ad6fac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56025ad6fa90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56025ad6fb48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56025ad6fb30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad6fae8 <col:102> '_Bool' lvalue Var 0x56025ad6cc68 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x56025ad6fc00 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56025ad6fbe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6fbc8 <col:3> 'void ()' Function 0x56025ad12f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56025ad6fc58 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56025ad6fc40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6fc20 <col:3> 'void ()' Function 0x56025ad12e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56025ad6fd10 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56025ad6fc78 <col:3> 'int' lvalue Var 0x56025ad6c120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56025ad6fcf0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56025ad6fcd8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56025ad6fc98 <col:22> 'int' lvalue Var 0x56025ad6c120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56025ad6fcb8 <col:41> 'int' 1
|   |-CallExpr 0x56025ad6fd68 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56025ad6fd50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6fd30 <col:3> 'void ()' Function 0x56025ad12f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56025ad6fde0 <line:750:3, col:36>
|     `-CallExpr 0x56025ad6fdc0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56025ad6fda8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56025ad6fd88 <col:10> 'void *(void)' Function 0x56025ad12958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56025ad6ff38 prev 0x56025ad6bda0 <line:752:1, line:797:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56025ad6fea0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56025ad764b0 <line:753:1, line:797:1>
|   |-CallExpr 0x56025ad70018 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56025ad70000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad6ffe0 <col:3> 'void ()' Function 0x56025ad12e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56025ad700c8 <line:755:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad70038 <col:3> '_Bool' lvalue Var 0x56025ad6d040 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad700b0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56025ad70090 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56025ad70078 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56025ad70058 <col:19> 'void *(void)' Function 0x56025ad12958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56025ad70178 <line:756:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad700e8 <col:3> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad70160 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56025ad70140 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56025ad70128 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56025ad70108 <col:19> 'void *(void)' Function 0x56025ad12958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56025ad701f0 <line:757:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad70198 <col:3> '_Bool' lvalue Var 0x56025ad6c848 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad701d8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56025ad701b8 <col:21> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56025ad70268 <line:758:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56025ad70210 <col:3> 'int' lvalue Var 0x56025ad6c8c8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56025ad70250 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56025ad70230 <col:15> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   |-BinaryOperator 0x56025ad706a0 <line:759:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56025ad70288 <col:3> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   | `-ConditionalOperator 0x56025ad70670 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56025ad70498 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56025ad703b8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56025ad702e0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56025ad702c8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56025ad702a8 <col:8> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56025ad70398 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56025ad70330 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56025ad70318 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56025ad702f8 <col:27> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x56025ad70380 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56025ad70368 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56025ad70348 <col:46> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56025ad70478 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56025ad70410 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56025ad703f8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56025ad703d8 <col:65> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x56025ad70460 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56025ad70448 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56025ad70428 <col:84> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56025ad70658 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56025ad704b8 <col:101> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   |   `-ParenExpr 0x56025ad70638 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56025ad70608 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56025ad70578 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56025ad70530 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56025ad70518 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56025ad704d8 <col:106> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56025ad70560 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56025ad70548 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56025ad704f8 <col:124> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56025ad705d8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56025ad70598 <col:141> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56025ad705f0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad705b8 <col:153> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56025ad70bd8 <line:760:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56025ad706c0 <col:3> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x56025ad70ba8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56025ad70b78 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56025ad70b60 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56025ad706e0 <col:15> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56025ad70b90 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56025ad70700 <col:31> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56025ad70b40 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56025ad70ae8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56025ad70910 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56025ad70830 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56025ad70758 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56025ad70740 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56025ad70720 <col:45> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56025ad70810 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56025ad707a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56025ad70790 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56025ad70770 <col:64> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56025ad707f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56025ad707e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56025ad707c0 <col:83> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56025ad708f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56025ad70888 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56025ad70870 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56025ad70850 <col:102> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56025ad708d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56025ad708c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56025ad708a0 <col:121> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56025ad70ad0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56025ad70930 <col:138> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x56025ad70ab0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56025ad70a80 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56025ad709f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56025ad709a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56025ad70990 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56025ad70950 <col:151> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56025ad709d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56025ad709c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56025ad70970 <col:169> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56025ad70a50 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56025ad70a10 <col:186> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56025ad70a68 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56025ad70a30 <col:198> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   |-BinaryOperator 0x56025ad710e8 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56025ad70bf8 <col:3> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x56025ad710b8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56025ad71088 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56025ad71070 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56025ad70c18 <col:15> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56025ad710a0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56025ad70c38 <col:31> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x56025ad71050 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56025ad71020 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56025ad70e48 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56025ad70d68 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56025ad70c90 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56025ad70c78 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56025ad70c58 <col:45> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56025ad70d48 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56025ad70ce0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56025ad70cc8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56025ad70ca8 <col:64> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56025ad70d30 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56025ad70d18 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56025ad70cf8 <col:83> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56025ad70e28 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56025ad70dc0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56025ad70da8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56025ad70d88 <col:102> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56025ad70e10 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56025ad70df8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56025ad70dd8 <col:121> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56025ad71008 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56025ad70e68 <col:138> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x56025ad70fe8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56025ad70fb8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56025ad70f28 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56025ad70ee0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56025ad70ec8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56025ad70e88 <col:151> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56025ad70f10 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56025ad70ef8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56025ad70ea8 <col:169> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56025ad70f88 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56025ad70f48 <col:186> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56025ad70fa0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56025ad70f68 <col:198> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56025ad71690 <line:762:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad71108 <col:3> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad71678 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad71648 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56025ad71600 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56025ad715e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56025ad71128 <col:20> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad71630 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56025ad71618 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56025ad71148 <col:36> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56025ad715c8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56025ad71598 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56025ad71358 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56025ad71278 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56025ad711a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56025ad71188 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56025ad71168 <col:55> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56025ad71258 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56025ad711f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56025ad711d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56025ad711b8 <col:74> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56025ad71240 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56025ad71228 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56025ad71208 <col:93> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56025ad71338 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56025ad712d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56025ad712b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56025ad71298 <col:112> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56025ad71320 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56025ad71308 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56025ad712e8 <col:131> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56025ad71580 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56025ad71568 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56025ad71378 <col:148> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56025ad71548 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56025ad71518 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56025ad71438 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56025ad713f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56025ad713d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56025ad71398 <col:166> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56025ad71420 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56025ad71408 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56025ad713b8 <col:184> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56025ad714d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56025ad71488 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56025ad71458 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56025ad71500 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56025ad714e8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56025ad714b0 <col:212> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56025ad71c78 <line:763:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad716b0 <col:3> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad71c60 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad71c30 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56025ad71be8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56025ad71bd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56025ad716d0 <col:20> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad71c18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56025ad71c00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56025ad716f0 <col:36> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56025ad71bb0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56025ad71b80 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56025ad71900 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56025ad71820 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56025ad71748 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56025ad71730 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56025ad71710 <col:55> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56025ad71800 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56025ad71798 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56025ad71780 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56025ad71760 <col:74> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56025ad717e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56025ad717d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56025ad717b0 <col:93> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56025ad718e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56025ad71878 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56025ad71860 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56025ad71840 <col:112> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56025ad718c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56025ad718b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56025ad71890 <col:131> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56025ad71b68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56025ad71b50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56025ad71920 <col:148> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56025ad71b10 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56025ad71ae0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56025ad719e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56025ad71998 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56025ad71980 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56025ad71940 <col:166> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56025ad719c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56025ad719b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56025ad71960 <col:184> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56025ad71ab0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56025ad71a30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56025ad71a00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56025ad71ac8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56025ad71a88 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56025ad71a58 <col:219> 'int' 0
|   |-BinaryOperator 0x56025ad72220 <line:764:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad71c98 <col:3> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad72208 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad721d8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56025ad72190 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56025ad72178 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56025ad71cb8 <col:20> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad721c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56025ad721a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56025ad71cd8 <col:36> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x56025ad72158 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56025ad72128 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56025ad71ee8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56025ad71e08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56025ad71d30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56025ad71d18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56025ad71cf8 <col:55> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56025ad71de8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56025ad71d80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56025ad71d68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56025ad71d48 <col:74> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56025ad71dd0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56025ad71db8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56025ad71d98 <col:93> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56025ad71ec8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56025ad71e60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56025ad71e48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56025ad71e28 <col:112> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56025ad71eb0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56025ad71e98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56025ad71e78 <col:131> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56025ad72110 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56025ad720f8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56025ad71f08 <col:148> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x56025ad720d8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56025ad720a8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56025ad71fc8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56025ad71f80 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56025ad71f68 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56025ad71f28 <col:166> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56025ad71fb0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56025ad71f98 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56025ad71f48 <col:184> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56025ad72060 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56025ad72018 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56025ad71fe8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56025ad72090 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56025ad72078 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56025ad72040 <col:212> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56025ad727e8 <line:765:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad72240 <col:3> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad727d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad727a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56025ad72758 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56025ad72740 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56025ad72260 <col:20> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad72788 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56025ad72770 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56025ad72280 <col:36> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x56025ad72720 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56025ad726f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56025ad72490 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56025ad723b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56025ad722d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56025ad722c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56025ad722a0 <col:55> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56025ad72390 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56025ad72328 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56025ad72310 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56025ad722f0 <col:74> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56025ad72378 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56025ad72360 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56025ad72340 <col:93> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56025ad72470 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56025ad72408 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56025ad723f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56025ad723d0 <col:112> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56025ad72458 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56025ad72440 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56025ad72420 <col:131> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56025ad726d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56025ad726c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56025ad724b0 <col:148> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x56025ad726a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56025ad72670 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56025ad72570 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56025ad72528 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56025ad72510 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56025ad724d0 <col:166> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56025ad72558 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56025ad72540 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56025ad724f0 <col:184> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56025ad72640 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56025ad725c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56025ad72590 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56025ad72658 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56025ad72618 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56025ad725e8 <col:219> 'int' 0
|   |-BinaryOperator 0x56025ad72860 <line:766:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56025ad72808 <col:3> 'int' lvalue Var 0x56025ad6c360 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x56025ad72848 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56025ad72828 <col:25> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   |-BinaryOperator 0x56025ad72990 <line:767:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56025ad72880 <col:3> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   | `-ConditionalOperator 0x56025ad72960 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56025ad72918 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56025ad72900 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56025ad728a0 <col:7> '_Bool' lvalue Var 0x56025ad6c848 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56025ad72930 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56025ad728c0 <col:25> 'int' lvalue Var 0x56025ad6c8c8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56025ad72948 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56025ad728e0 <col:37> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   |-BinaryOperator 0x56025ad72a28 <line:768:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad729b0 <col:3> '_Bool' lvalue Var 0x56025ad6c848 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56025ad72a00 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56025ad729d0 <col:28> 'int' 0
|   |-CallExpr 0x56025ad72a80 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56025ad72a68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad72a48 <col:3> 'void ()' Function 0x56025ad12f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56025ad72ad8 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56025ad72ac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad72aa0 <col:3> 'void ()' Function 0x56025ad12e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56025ad72b98 <line:771:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad72af8 <col:3> '_Bool' lvalue Var 0x56025ad6d040 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad72b80 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56025ad72b60 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56025ad72b38 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56025ad72b18 <col:19> 'void *(void)' Function 0x56025ad12958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56025ad72c48 <line:772:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad72bb8 <col:3> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad72c30 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56025ad72c10 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56025ad72bf8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56025ad72bd8 <col:19> 'void *(void)' Function 0x56025ad12958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56025ad72cc0 <line:773:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad72c68 <col:3> '_Bool' lvalue Var 0x56025ad6c848 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad72ca8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56025ad72c88 <col:21> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56025ad72d38 <line:774:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56025ad72ce0 <col:3> 'int' lvalue Var 0x56025ad6c8c8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56025ad72d20 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56025ad72d00 <col:15> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   |-BinaryOperator 0x56025ad73170 <line:775:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56025ad72d58 <col:3> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   | `-ConditionalOperator 0x56025ad73140 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56025ad72f68 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56025ad72e88 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56025ad72db0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56025ad72d98 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56025ad72d78 <col:8> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56025ad72e68 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56025ad72e00 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56025ad72de8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56025ad72dc8 <col:27> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x56025ad72e50 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56025ad72e38 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56025ad72e18 <col:46> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56025ad72f48 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56025ad72ee0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56025ad72ec8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56025ad72ea8 <col:65> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x56025ad72f30 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56025ad72f18 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56025ad72ef8 <col:84> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56025ad73128 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56025ad72f88 <col:101> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   |   `-ParenExpr 0x56025ad73108 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56025ad730d8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56025ad73048 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56025ad73000 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56025ad72fe8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56025ad72fa8 <col:106> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56025ad73030 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56025ad73018 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56025ad72fc8 <col:124> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56025ad730a8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56025ad73068 <col:141> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56025ad730c0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad73088 <col:153> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56025ad73680 <line:776:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56025ad73190 <col:3> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x56025ad73650 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56025ad73620 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56025ad73608 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56025ad731b0 <col:15> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56025ad73638 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56025ad731d0 <col:31> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56025ad735e8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56025ad735b8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56025ad733e0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56025ad73300 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56025ad73228 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56025ad73210 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56025ad731f0 <col:45> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56025ad732e0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56025ad73278 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56025ad73260 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56025ad73240 <col:64> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56025ad732c8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56025ad732b0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56025ad73290 <col:83> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56025ad733c0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56025ad73358 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56025ad73340 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56025ad73320 <col:102> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56025ad733a8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56025ad73390 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56025ad73370 <col:121> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56025ad735a0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56025ad73400 <col:138> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x56025ad73580 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56025ad73550 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56025ad734c0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56025ad73478 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56025ad73460 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56025ad73420 <col:151> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56025ad734a8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56025ad73490 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56025ad73440 <col:169> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56025ad73520 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56025ad734e0 <col:186> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56025ad73538 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56025ad73500 <col:198> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   |-BinaryOperator 0x56025ad73ba0 <line:777:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56025ad736a0 <col:3> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x56025ad73b70 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56025ad73b30 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56025ad73b18 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56025ad736c0 <col:15> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56025ad73b48 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56025ad736e0 <col:31> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x56025ad73af8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56025ad73ac8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56025ad738f0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56025ad73810 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56025ad73738 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56025ad73720 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56025ad73700 <col:45> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56025ad737f0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56025ad73788 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56025ad73770 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56025ad73750 <col:64> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56025ad737d8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56025ad737c0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56025ad737a0 <col:83> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56025ad738d0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56025ad73868 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56025ad73850 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56025ad73830 <col:102> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56025ad738b8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56025ad738a0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56025ad73880 <col:121> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56025ad73ab0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56025ad73910 <col:138> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x56025ad73a90 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56025ad73a60 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56025ad739d0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56025ad73988 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56025ad73970 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56025ad73930 <col:151> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56025ad739b8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56025ad739a0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56025ad73950 <col:169> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56025ad73a30 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56025ad739f0 <col:186> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56025ad73a48 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56025ad73a10 <col:198> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56025ad74148 <line:778:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad73bc0 <col:3> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad74130 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad74100 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56025ad740b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56025ad740a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56025ad73be0 <col:20> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad740e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56025ad740d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56025ad73c00 <col:36> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56025ad74080 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56025ad74050 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56025ad73e10 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56025ad73d30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56025ad73c58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56025ad73c40 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56025ad73c20 <col:55> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56025ad73d10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56025ad73ca8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56025ad73c90 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56025ad73c70 <col:74> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56025ad73cf8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56025ad73ce0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56025ad73cc0 <col:93> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56025ad73df0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56025ad73d88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56025ad73d70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56025ad73d50 <col:112> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56025ad73dd8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56025ad73dc0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56025ad73da0 <col:131> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56025ad74038 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56025ad74020 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56025ad73e30 <col:148> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56025ad74000 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56025ad73fd0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56025ad73ef0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56025ad73ea8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56025ad73e90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56025ad73e50 <col:166> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56025ad73ed8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56025ad73ec0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56025ad73e70 <col:184> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56025ad73f88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56025ad73f40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56025ad73f10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56025ad73fb8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56025ad73fa0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56025ad73f68 <col:212> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56025ad74710 <line:779:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad74168 <col:3> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad746f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad746c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56025ad74680 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56025ad74668 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56025ad74188 <col:20> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad746b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56025ad74698 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56025ad741a8 <col:36> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56025ad74648 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56025ad74618 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56025ad743b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56025ad742d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56025ad74200 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56025ad741e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56025ad741c8 <col:55> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56025ad742b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56025ad74250 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56025ad74238 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56025ad74218 <col:74> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56025ad742a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56025ad74288 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56025ad74268 <col:93> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56025ad74398 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56025ad74330 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56025ad74318 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56025ad742f8 <col:112> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56025ad74380 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56025ad74368 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56025ad74348 <col:131> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56025ad74600 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56025ad745e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56025ad743d8 <col:148> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56025ad745c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56025ad74598 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56025ad74498 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56025ad74450 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56025ad74438 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56025ad743f8 <col:166> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56025ad74480 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56025ad74468 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56025ad74418 <col:184> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56025ad74568 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56025ad744e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56025ad744b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56025ad74580 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56025ad74540 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56025ad74510 <col:219> 'int' 0
|   |-BinaryOperator 0x56025ad74cc8 <line:780:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad74730 <col:3> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad74cb0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad74c80 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56025ad74c38 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56025ad74c20 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56025ad74750 <col:20> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad74c68 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56025ad74c50 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56025ad74770 <col:36> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x56025ad74c00 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56025ad74bd0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56025ad74980 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56025ad748a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56025ad747c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56025ad747b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56025ad74790 <col:55> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56025ad74880 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56025ad74818 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56025ad74800 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56025ad747e0 <col:74> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56025ad74868 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56025ad74850 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56025ad74830 <col:93> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56025ad74960 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56025ad748f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56025ad748e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56025ad748c0 <col:112> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56025ad74948 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56025ad74930 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56025ad74910 <col:131> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56025ad74bb8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56025ad74ba0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56025ad749a0 <col:148> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x56025ad74b80 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56025ad74b40 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56025ad74a60 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56025ad74a18 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56025ad74a00 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56025ad749c0 <col:166> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56025ad74a48 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56025ad74a30 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56025ad749e0 <col:184> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56025ad74af8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56025ad74ab0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56025ad74a80 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56025ad74b28 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56025ad74b10 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56025ad74ad8 <col:212> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56025ad75290 <line:781:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad74ce8 <col:3> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad75278 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad75248 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56025ad75200 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56025ad751e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56025ad74d08 <col:20> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad75230 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56025ad75218 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56025ad74d28 <col:36> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x56025ad751c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56025ad75198 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56025ad74f38 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56025ad74e58 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56025ad74d80 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56025ad74d68 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56025ad74d48 <col:55> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56025ad74e38 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56025ad74dd0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56025ad74db8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56025ad74d98 <col:74> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56025ad74e20 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56025ad74e08 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56025ad74de8 <col:93> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56025ad74f18 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56025ad74eb0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56025ad74e98 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56025ad74e78 <col:112> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56025ad74f00 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56025ad74ee8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56025ad74ec8 <col:131> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56025ad75180 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56025ad75168 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56025ad74f58 <col:148> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x56025ad75148 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56025ad75118 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56025ad75018 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56025ad74fd0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56025ad74fb8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56025ad74f78 <col:166> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56025ad75000 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56025ad74fe8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56025ad74f98 <col:184> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56025ad750e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56025ad75068 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56025ad75038 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56025ad75100 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56025ad750c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56025ad75090 <col:219> 'int' 0
|   |-BinaryOperator 0x56025ad75308 <line:782:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56025ad752b0 <col:3> 'int' lvalue Var 0x56025ad6c480 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x56025ad752f0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56025ad752d0 <col:25> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   |-BinaryOperator 0x56025ad75438 <line:783:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56025ad75328 <col:3> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   | `-ConditionalOperator 0x56025ad75408 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56025ad753c0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56025ad753a8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56025ad75348 <col:7> '_Bool' lvalue Var 0x56025ad6c848 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56025ad753d8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56025ad75368 <col:25> 'int' lvalue Var 0x56025ad6c8c8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56025ad753f0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56025ad75388 <col:37> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   |-BinaryOperator 0x56025ad754d0 <line:784:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad75458 <col:3> '_Bool' lvalue Var 0x56025ad6c848 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56025ad754a8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56025ad75478 <col:28> 'int' 0
|   |-CallExpr 0x56025ad75528 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56025ad75510 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad754f0 <col:3> 'void ()' Function 0x56025ad12f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56025ad75580 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56025ad75568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad75548 <col:3> 'void ()' Function 0x56025ad12e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56025ad75868 <line:787:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56025ad755a0 <col:3> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   | `-ConditionalOperator 0x56025ad75838 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56025ad75660 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56025ad75618 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56025ad75600 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56025ad755c0 <col:7> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56025ad75648 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56025ad75630 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56025ad755e0 <col:25> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56025ad75820 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56025ad75680 <col:42> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56025ad75800 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56025ad757d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56025ad75740 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56025ad756f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56025ad756e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56025ad756a0 <col:55> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56025ad75728 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56025ad75710 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56025ad756c0 <col:73> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56025ad757a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56025ad75760 <col:90> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56025ad757b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad75780 <col:102> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
|   |-BinaryOperator 0x56025ad75a70 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad75888 <col:3> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad75a58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad75a28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56025ad75948 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56025ad75900 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56025ad758e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56025ad758a8 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56025ad75930 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56025ad75918 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56025ad758c8 <col:38> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad759e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56025ad75998 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56025ad75968 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56025ad75a10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56025ad759f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad759c0 <col:66> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56025ad75d78 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad75a90 <col:3> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad75d60 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad75d30 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56025ad75c50 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56025ad75b50 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56025ad75b08 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56025ad75af0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56025ad75ab0 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56025ad75b38 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56025ad75b20 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56025ad75ad0 <col:38> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56025ad75c30 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56025ad75be8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56025ad75bd0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56025ad75b90 <col:56> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56025ad75c18 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56025ad75c00 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56025ad75bb0 <col:74> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad75ce8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56025ad75ca0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56025ad75c70 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56025ad75d18 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56025ad75d00 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad75cc8 <col:102> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56025ad75f80 <line:790:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad75d98 <col:3> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad75f68 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad75f38 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56025ad75e58 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56025ad75e10 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56025ad75df8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56025ad75db8 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56025ad75e40 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56025ad75e28 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56025ad75dd8 <col:38> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad75ef0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56025ad75ea8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56025ad75e78 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56025ad75f20 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56025ad75f08 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad75ed0 <col:66> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56025ad76268 <line:791:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56025ad75fa0 <col:3> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56025ad76250 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56025ad76220 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56025ad76140 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56025ad76060 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56025ad76018 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56025ad76000 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56025ad75fc0 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56025ad76048 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56025ad76030 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56025ad75fe0 <col:38> '_Bool' lvalue Var 0x56025ad6cb00 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56025ad76120 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56025ad760d8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56025ad760c0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56025ad76080 <col:56> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56025ad76108 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56025ad760f0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56025ad760a0 <col:74> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56025ad761d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56025ad76190 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56025ad76160 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56025ad76208 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56025ad761f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56025ad761b8 <col:102> '_Bool' lvalue Var 0x56025ad6cce0 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x56025ad762c0 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56025ad762a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad76288 <col:3> 'void ()' Function 0x56025ad12f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56025ad76318 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56025ad76300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad762e0 <col:3> 'void ()' Function 0x56025ad12e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56025ad763d0 <line:794:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56025ad76338 <col:3> 'int' lvalue Var 0x56025ad6c120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56025ad763b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56025ad76398 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56025ad76358 <col:22> 'int' lvalue Var 0x56025ad6c120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56025ad76378 <col:41> 'int' 1
|   |-CallExpr 0x56025ad76428 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56025ad76410 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56025ad763f0 <col:3> 'void ()' Function 0x56025ad12f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56025ad764a0 <line:796:3, col:36>
|     `-CallExpr 0x56025ad76480 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56025ad76468 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56025ad76448 <col:10> 'void *(void)' Function 0x56025ad12958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56025ad76638 prev 0x56025ad6be68 <line:798:1, line:800:1> line:798:6 fence 'void ()'
| `-CompoundStmt 0x56025ad766d8 <line:799:1, line:800:1>
|-FunctionDecl 0x56025ad76708 prev 0x56025ad6bf28 <line:801:1, line:803:1> line:801:6 isync 'void ()'
| `-CompoundStmt 0x56025ad767a8 <line:802:1, line:803:1>
|-FunctionDecl 0x56025ad767d8 prev 0x56025ad6bfe8 <line:804:1, line:806:1> line:804:6 lwfence 'void ()'
| `-CompoundStmt 0x56025ad76878 <line:805:1, line:806:1>
`-FunctionDecl 0x56025ad768e8 <line:807:1, line:844:1> line:807:5 main 'int ()'
  `-CompoundStmt 0x56025ad7af50 <line:808:1, line:844:1>
    |-DeclStmt 0x56025ad76a00 <line:809:3, col:18>
    | `-VarDecl 0x56025ad76998 <col:3, col:13> col:13 used t1857 'pthread_t':'unsigned long'
    |-CallExpr 0x56025ad76c18 <line:810:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56025ad76c00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56025ad76a18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56025ad53488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56025ad76a58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56025ad76a38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56025ad76998 't1857' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56025ad76c58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56025ad76ad0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56025ad76aa8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56025ad76a70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56025ad76c70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56025ad76af0 <col:39> 'void *(void *)' Function 0x56025ad6d1d0 'P0' 'void *(void *)'
    | `-ParenExpr 0x56025ad76b70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56025ad76b48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56025ad76b10 <col:52> 'int' 0
    |-DeclStmt 0x56025ad76d00 <line:811:3, col:18>
    | `-VarDecl 0x56025ad76c98 <col:3, col:13> col:13 used t1858 'pthread_t':'unsigned long'
    |-CallExpr 0x56025ad76ea8 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56025ad76e90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56025ad76d18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56025ad53488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56025ad76d58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56025ad76d38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56025ad76c98 't1858' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56025ad76ee8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56025ad76dd0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56025ad76da8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56025ad76d70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56025ad76f00 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56025ad76df0 <col:39> 'void *(void *)' Function 0x56025ad6ebb8 'P1' 'void *(void *)'
    | `-ParenExpr 0x56025ad76e70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56025ad76e48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56025ad76e10 <col:52> 'int' 0
    |-DeclStmt 0x56025ad76f90 <line:813:3, col:18>
    | `-VarDecl 0x56025ad76f28 <col:3, col:13> col:13 used t1859 'pthread_t':'unsigned long'
    |-CallExpr 0x56025ad77138 <line:814:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56025ad77120 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56025ad76fa8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56025ad53488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56025ad76fe8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56025ad76fc8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56025ad76f28 't1859' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56025ad77178 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56025ad77060 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56025ad77038 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56025ad77000 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56025ad77190 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56025ad77080 <col:39> 'void *(void *)' Function 0x56025ad6ff38 'P2' 'void *(void *)'
    | `-ParenExpr 0x56025ad77100 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56025ad770d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56025ad770a0 <col:52> 'int' 0
    |-CallExpr 0x56025ad771e0 <line:815:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56025ad771c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56025ad771a8 <col:3> 'void ()' Function 0x56025ad12e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56025ad772b0 <line:816:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56025ad77200 <col:3> '_Bool' lvalue Var 0x56025ad6c518 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56025ad77298 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56025ad77278 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56025ad77260 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56025ad77220 <col:21> 'int' lvalue Var 0x56025ad6c120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56025ad77240 <col:41> 'int' 3
    |-CallExpr 0x56025ad77308 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56025ad772f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56025ad772d0 <col:3> 'void ()' Function 0x56025ad12f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56025ad77380 <line:818:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56025ad77368 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56025ad77328 <col:3> 'void (int)' Function 0x56025ad12790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56025ad773c0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56025ad773a8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56025ad77348 <col:21> '_Bool' lvalue Var 0x56025ad6c518 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56025ad77410 <line:819:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56025ad773f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56025ad773d8 <col:3> 'void ()' Function 0x56025ad12e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56025ad776f8 <line:820:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56025ad77430 <col:3> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
    | `-ConditionalOperator 0x56025ad776c8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56025ad774f0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56025ad774a8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56025ad77490 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56025ad77450 <col:7> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56025ad774d8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56025ad774c0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56025ad77470 <col:25> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56025ad776b0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56025ad77510 <col:42> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
    |   `-ParenExpr 0x56025ad77690 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56025ad77660 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56025ad775d0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56025ad77588 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56025ad77570 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56025ad77530 <col:55> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56025ad775b8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56025ad775a0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56025ad77550 <col:73> '_Bool' lvalue Var 0x56025ad6cb78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56025ad77630 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56025ad775f0 <col:90> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56025ad77648 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56025ad77610 <col:102> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
    |-BinaryOperator 0x56025ad77900 <line:821:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56025ad77718 <col:3> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56025ad778e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56025ad778b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56025ad777d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56025ad77790 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56025ad77778 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56025ad77738 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56025ad777c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56025ad777a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56025ad77758 <col:38> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56025ad77870 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56025ad77828 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56025ad777f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56025ad778a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56025ad77888 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56025ad77850 <col:66> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56025ad77bf8 <line:822:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56025ad77920 <col:3> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56025ad77be0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56025ad77bb0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56025ad77ac0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56025ad779e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56025ad77998 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56025ad77980 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56025ad77940 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56025ad779c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56025ad779b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56025ad77960 <col:38> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56025ad77aa0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56025ad77a58 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56025ad77a40 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56025ad77a00 <col:56> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56025ad77a88 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56025ad77a70 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56025ad77a20 <col:74> '_Bool' lvalue Var 0x56025ad6cb78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56025ad77b58 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56025ad77b10 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56025ad77ae0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56025ad77b88 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56025ad77b70 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56025ad77b38 <col:102> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56025ad77e00 <line:823:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56025ad77c18 <col:3> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56025ad77de8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56025ad77db8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56025ad77cd8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56025ad77c90 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56025ad77c78 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56025ad77c38 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56025ad77cc0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56025ad77ca8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56025ad77c58 <col:38> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56025ad77d70 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56025ad77d28 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56025ad77cf8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56025ad77da0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56025ad77d88 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56025ad77d50 <col:66> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56025ad780e8 <line:824:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56025ad77e20 <col:3> '_Bool' lvalue Var 0x56025ad6cb78 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56025ad780d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56025ad780a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56025ad77fc0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56025ad77ee0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56025ad77e98 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56025ad77e80 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56025ad77e40 <col:20> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56025ad77ec8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56025ad77eb0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56025ad77e60 <col:38> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56025ad77fa0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56025ad77f58 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56025ad77f40 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56025ad77f00 <col:56> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56025ad77f88 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56025ad77f70 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56025ad77f20 <col:74> '_Bool' lvalue Var 0x56025ad6cb78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56025ad78058 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56025ad78010 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56025ad77fe0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56025ad78088 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56025ad78070 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56025ad78038 <col:102> '_Bool' lvalue Var 0x56025ad6cb78 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56025ad78140 <line:825:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56025ad78128 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56025ad78108 <col:3> 'void ()' Function 0x56025ad12f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56025ad78198 <line:826:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56025ad78180 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56025ad78160 <col:3> 'void ()' Function 0x56025ad12e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56025ad78248 <line:827:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x56025ad781b8 <col:3> '_Bool' lvalue Var 0x56025ad6d040 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x56025ad78230 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x56025ad78210 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x56025ad781f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x56025ad781d8 <col:19> 'void *(void)' Function 0x56025ad12958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x56025ad782f8 <line:828:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x56025ad78268 <col:3> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x56025ad782e0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x56025ad782c0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x56025ad782a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x56025ad78288 <col:19> 'void *(void)' Function 0x56025ad12958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x56025ad78370 <line:829:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x56025ad78318 <col:3> '_Bool' lvalue Var 0x56025ad6c848 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x56025ad78358 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x56025ad78338 <col:21> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x56025ad783e8 <line:830:3, col:15> 'int' '='
    | |-DeclRefExpr 0x56025ad78390 <col:3> 'int' lvalue Var 0x56025ad6c8c8 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x56025ad783d0 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x56025ad783b0 <col:15> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
    |-BinaryOperator 0x56025ad78820 <line:831:3, col:162> 'int' '='
    | |-DeclRefExpr 0x56025ad78408 <col:3> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
    | `-ConditionalOperator 0x56025ad787f0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x56025ad78618 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x56025ad78538 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x56025ad78460 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x56025ad78448 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x56025ad78428 <col:8> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x56025ad78518 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x56025ad784b0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x56025ad78498 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x56025ad78478 <col:27> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x56025ad78500 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x56025ad784e8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x56025ad784c8 <col:46> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x56025ad785f8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x56025ad78590 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x56025ad78578 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x56025ad78558 <col:65> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x56025ad785e0 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x56025ad785c8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x56025ad785a8 <col:84> '_Bool' lvalue Var 0x56025ad6cb78 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56025ad787d8 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56025ad78638 <col:101> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
    |   `-ParenExpr 0x56025ad787b8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x56025ad78788 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x56025ad786f8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56025ad786b0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56025ad78698 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56025ad78658 <col:106> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56025ad786e0 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56025ad786c8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56025ad78678 <col:124> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56025ad78758 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56025ad78718 <col:141> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x56025ad78770 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56025ad78738 <col:153> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
    |-BinaryOperator 0x56025ad78d40 <line:832:3, col:208> 'int' '='
    | |-DeclRefExpr 0x56025ad78840 <col:3> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x56025ad78d10 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x56025ad78ce0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56025ad78cc8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56025ad78860 <col:15> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x56025ad78cf8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56025ad78880 <col:31> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
    |   `-ParenExpr 0x56025ad78ca8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x56025ad78c78 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x56025ad78a90 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x56025ad789b0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x56025ad788d8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x56025ad788c0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x56025ad788a0 <col:45> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x56025ad78990 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x56025ad78928 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x56025ad78910 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x56025ad788f0 <col:64> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x56025ad78978 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x56025ad78960 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x56025ad78940 <col:83> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x56025ad78a70 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x56025ad78a08 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x56025ad789f0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x56025ad789d0 <col:102> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x56025ad78a58 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x56025ad78a40 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x56025ad78a20 <col:121> '_Bool' lvalue Var 0x56025ad6cb78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56025ad78c60 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56025ad78ab0 <col:138> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
    |       `-ParenExpr 0x56025ad78c40 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x56025ad78c10 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x56025ad78b70 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x56025ad78b28 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x56025ad78b10 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x56025ad78ad0 <col:151> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x56025ad78b58 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x56025ad78b40 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x56025ad78af0 <col:169> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x56025ad78be0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56025ad78b90 <col:186> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x56025ad78bf8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x56025ad78bc0 <col:198> 'int' lvalue Var 0x56025ad6ce58 'y$w_buff0' 'int'
    |-BinaryOperator 0x56025ad79250 <line:833:3, col:208> 'int' '='
    | |-DeclRefExpr 0x56025ad78d60 <col:3> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x56025ad79220 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x56025ad791f0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56025ad791d8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56025ad78d80 <col:15> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x56025ad79208 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56025ad78da0 <col:31> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
    |   `-ParenExpr 0x56025ad791b8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x56025ad79188 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x56025ad78fb0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x56025ad78ed0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x56025ad78df8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x56025ad78de0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x56025ad78dc0 <col:45> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x56025ad78eb0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x56025ad78e48 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x56025ad78e30 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x56025ad78e10 <col:64> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x56025ad78e98 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x56025ad78e80 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x56025ad78e60 <col:83> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x56025ad78f90 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x56025ad78f28 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x56025ad78f10 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x56025ad78ef0 <col:102> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x56025ad78f78 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x56025ad78f60 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x56025ad78f40 <col:121> '_Bool' lvalue Var 0x56025ad6cb78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56025ad79170 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56025ad78fd0 <col:138> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
    |       `-ParenExpr 0x56025ad79150 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x56025ad79120 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x56025ad79090 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x56025ad79048 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x56025ad79030 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x56025ad78ff0 <col:151> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x56025ad79078 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x56025ad79060 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x56025ad79010 <col:169> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x56025ad790f0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56025ad790b0 <col:186> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x56025ad79108 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x56025ad790d0 <col:198> 'int' lvalue Var 0x56025ad6cf50 'y$w_buff1' 'int'
    |-BinaryOperator 0x56025ad797f8 <line:834:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x56025ad79270 <col:3> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56025ad797e0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56025ad797b0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x56025ad79768 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56025ad79750 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56025ad79290 <col:20> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56025ad79798 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56025ad79780 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56025ad792b0 <col:36> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x56025ad79730 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x56025ad79700 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x56025ad794c0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56025ad793e0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56025ad79308 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56025ad792f0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56025ad792d0 <col:55> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56025ad793c0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56025ad79358 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56025ad79340 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56025ad79320 <col:74> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56025ad793a8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56025ad79390 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56025ad79370 <col:93> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56025ad794a0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56025ad79438 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56025ad79420 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56025ad79400 <col:112> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56025ad79488 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56025ad79470 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56025ad79450 <col:131> '_Bool' lvalue Var 0x56025ad6cb78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56025ad796e8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56025ad796d0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56025ad794e0 <col:148> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x56025ad796b0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x56025ad79680 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x56025ad795a0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56025ad79558 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56025ad79540 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56025ad79500 <col:166> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56025ad79588 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56025ad79570 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56025ad79520 <col:184> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56025ad79638 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56025ad795f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56025ad795c0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56025ad79668 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x56025ad79650 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x56025ad79618 <col:212> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56025ad79dd0 <line:835:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x56025ad79818 <col:3> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56025ad79db8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56025ad79d88 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x56025ad79d40 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56025ad79d28 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56025ad79838 <col:20> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56025ad79d70 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56025ad79d58 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56025ad79858 <col:36> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x56025ad79d08 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x56025ad79cd8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x56025ad79a68 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56025ad79988 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56025ad798b0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56025ad79898 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56025ad79878 <col:55> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56025ad79968 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56025ad79900 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56025ad798e8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56025ad798c8 <col:74> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56025ad79950 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56025ad79938 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56025ad79918 <col:93> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56025ad79a48 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56025ad799e0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56025ad799c8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56025ad799a8 <col:112> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56025ad79a30 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56025ad79a18 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56025ad799f8 <col:131> '_Bool' lvalue Var 0x56025ad6cb78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56025ad79cc0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56025ad79ca8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56025ad79a88 <col:148> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x56025ad79c88 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x56025ad79c58 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x56025ad79b48 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56025ad79b00 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56025ad79ae8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56025ad79aa8 <col:166> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56025ad79b30 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56025ad79b18 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56025ad79ac8 <col:184> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56025ad79c28 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56025ad79b98 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56025ad79b68 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56025ad79c40 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x56025ad79c00 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x56025ad79bd0 <col:219> 'int' 0
    |-BinaryOperator 0x56025ad7a378 <line:836:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x56025ad79df0 <col:3> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56025ad7a360 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56025ad7a330 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x56025ad7a2e8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56025ad7a2d0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56025ad79e10 <col:20> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56025ad7a318 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56025ad7a300 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56025ad79e30 <col:36> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x56025ad7a2b0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x56025ad7a280 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x56025ad7a040 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56025ad79f60 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56025ad79e88 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56025ad79e70 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56025ad79e50 <col:55> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56025ad79f40 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56025ad79ed8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56025ad79ec0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56025ad79ea0 <col:74> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56025ad79f28 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56025ad79f10 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56025ad79ef0 <col:93> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56025ad7a020 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56025ad79fb8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56025ad79fa0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56025ad79f80 <col:112> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56025ad7a008 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56025ad79ff0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56025ad79fd0 <col:131> '_Bool' lvalue Var 0x56025ad6cb78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56025ad7a268 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56025ad7a250 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56025ad7a060 <col:148> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x56025ad7a230 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x56025ad7a200 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x56025ad7a120 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56025ad7a0d8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56025ad7a0c0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56025ad7a080 <col:166> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56025ad7a108 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56025ad7a0f0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56025ad7a0a0 <col:184> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56025ad7a1b8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56025ad7a170 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56025ad7a140 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56025ad7a1e8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x56025ad7a1d0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x56025ad7a198 <col:212> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56025ad7a940 <line:837:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x56025ad7a398 <col:3> '_Bool' lvalue Var 0x56025ad6cb78 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56025ad7a928 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56025ad7a8f8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x56025ad7a8b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56025ad7a898 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56025ad7a3b8 <col:20> '_Bool' lvalue Var 0x56025ad6d0b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56025ad7a8e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56025ad7a8c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56025ad7a3d8 <col:36> '_Bool' lvalue Var 0x56025ad6cb78 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x56025ad7a878 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x56025ad7a848 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x56025ad7a5e8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56025ad7a508 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56025ad7a430 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56025ad7a418 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56025ad7a3f8 <col:55> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56025ad7a4e8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56025ad7a480 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56025ad7a468 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56025ad7a448 <col:74> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56025ad7a4d0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56025ad7a4b8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56025ad7a498 <col:93> '_Bool' lvalue Var 0x56025ad6cfc8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56025ad7a5c8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56025ad7a560 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56025ad7a548 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56025ad7a528 <col:112> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56025ad7a5b0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56025ad7a598 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56025ad7a578 <col:131> '_Bool' lvalue Var 0x56025ad6cb78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56025ad7a830 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56025ad7a818 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56025ad7a608 <col:148> '_Bool' lvalue Var 0x56025ad6cb78 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x56025ad7a7f8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x56025ad7a7c8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x56025ad7a6c8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56025ad7a680 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56025ad7a668 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56025ad7a628 <col:166> '_Bool' lvalue Var 0x56025ad6ced0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56025ad7a6b0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56025ad7a698 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56025ad7a648 <col:184> '_Bool' lvalue Var 0x56025ad6c940 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56025ad7a798 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56025ad7a718 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56025ad7a6e8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56025ad7a7b0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x56025ad7a770 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x56025ad7a740 <col:219> 'int' 0
    |-BinaryOperator 0x56025ad7ac30 <line:838:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x56025ad7a960 <col:3> '_Bool' lvalue Var 0x56025ad6c590 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56025ad7ac18 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56025ad7ac00 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56025ad7abe0 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x56025ad7aba0 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x56025ad7ab08 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x56025ad7aa70 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x56025ad7a9d8 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x56025ad7a9c0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x56025ad7a980 <col:23> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
    |         | | | `-IntegerLiteral 0x56025ad7a9a0 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x56025ad7aa50 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x56025ad7aa38 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x56025ad7a9f8 <col:33> 'int' lvalue Var 0x56025ad6c240 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x56025ad7aa18 <col:56> 'int' 1
    |         | `-BinaryOperator 0x56025ad7aae8 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56025ad7aad0 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56025ad7aa90 <col:61> 'int' lvalue Var 0x56025ad6c360 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x56025ad7aab0 <col:84> 'int' 1
    |         `-BinaryOperator 0x56025ad7ab80 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x56025ad7ab68 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56025ad7ab28 <col:89> 'int' lvalue Var 0x56025ad6c480 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x56025ad7ab48 <col:112> 'int' 1
    |-BinaryOperator 0x56025ad7ad60 <line:839:3, col:37> 'int' '='
    | |-DeclRefExpr 0x56025ad7ac50 <col:3> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
    | `-ConditionalOperator 0x56025ad7ad30 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x56025ad7ace8 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56025ad7acd0 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56025ad7ac70 <col:7> '_Bool' lvalue Var 0x56025ad6c848 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x56025ad7ad00 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56025ad7ac90 <col:25> 'int' lvalue Var 0x56025ad6c8c8 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x56025ad7ad18 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x56025ad7acb0 <col:37> 'int' lvalue Var 0x56025ad6c7b0 'y' 'int'
    |-BinaryOperator 0x56025ad7adf8 <line:840:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x56025ad7ad80 <col:3> '_Bool' lvalue Var 0x56025ad6c848 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x56025ad7add0 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x56025ad7ada0 <col:28> 'int' 0
    |-CallExpr 0x56025ad7ae50 <line:841:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56025ad7ae38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56025ad7ae18 <col:3> 'void ()' Function 0x56025ad12f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56025ad7aec8 <line:842:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56025ad7aeb0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56025ad7ae70 <col:3> 'void (int)' Function 0x56025ad12bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56025ad7af08 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56025ad7aef0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56025ad7ae90 <col:21> '_Bool' lvalue Var 0x56025ad6c590 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56025ad7af40 <line:843:3, col:10>
      `-IntegerLiteral 0x56025ad7af20 <col:10> 'int' 0
