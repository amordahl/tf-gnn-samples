TranslationUnitDecl 0x559ed5b2ee18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x559ed5b2f6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x559ed5b2f3b0 '__int128'
|-TypedefDecl 0x559ed5b2f748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x559ed5b2f3d0 'unsigned __int128'
|-TypedefDecl 0x559ed5b2fa50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x559ed5b2f820 'struct __NSConstantString_tag'
|   `-Record 0x559ed5b2f7a0 '__NSConstantString_tag'
|-TypedefDecl 0x559ed5b2faf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x559ed5b2fab0 'char *'
|   `-BuiltinType 0x559ed5b2eeb0 'char'
|-TypedefDecl 0x559ed5b6e650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x559ed5b2fd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x559ed5b2fbd0 'struct __va_list_tag'
|     `-Record 0x559ed5b2fb50 '__va_list_tag'
|-FunctionDecl 0x559ed5b6e790 <./split_7/mix010_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x559ed5b6e6c0 <col:31> col:34 'int'
|-FunctionDecl 0x559ed5b6e958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x559ed5b6ea80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x559ed5b6ebc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x559ed5b6eb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x559ed5b6edf8 <col:40, col:99>
|   |-IfStmt 0x559ed5b6edc8 <col:42, col:88>
|   | |-UnaryOperator 0x559ed5b6eca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x559ed5b6ec90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x559ed5b6ec70 <col:47> 'int' lvalue ParmVar 0x559ed5b6eb38 'expression' 'int'
|   | `-CompoundStmt 0x559ed5b6edb0 <col:59, col:88>
|   |   `-LabelStmt 0x559ed5b6ed98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x559ed5b6ed28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x559ed5b6ed10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x559ed5b6ecc0 <col:68> 'void () __attribute__((noreturn))' Function 0x559ed5b6ea80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x559ed5b6ede0 <col:89>
|   `-ReturnStmt 0x559ed5b6ede8 <col:91>
|-FunctionDecl 0x559ed5b6ee40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x559ed5b6ef00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x559ed5b6f280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559ed5b6efb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x559ed5b6f038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x559ed5b6f0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559ed5b6f138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559ed5b6f340 <line:10:22>
|-FunctionDecl 0x559ed5b95390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559ed5b6f3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x559ed5b6f430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x559ed5b6f4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559ed5b6f530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559ed5b95450 <line:13:22>
|-FunctionDecl 0x559ed5b95700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559ed5b954c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x559ed5b95540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x559ed5b955c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x559ed5b957b8 <line:15:22>
|-TypedefDecl 0x559ed5b95828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x559ed5b2ef70 'unsigned char'
|-TypedefDecl 0x559ed5b95898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x559ed5b2ef90 'unsigned short'
|-TypedefDecl 0x559ed5b95908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x559ed5b2efb0 'unsigned int'
|-TypedefDecl 0x559ed5b95978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-TypedefDecl 0x559ed5b959e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x559ed5b2eed0 'signed char'
|-TypedefDecl 0x559ed5b95a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x559ed5b2ef70 'unsigned char'
|-TypedefDecl 0x559ed5b95ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x559ed5b2eef0 'short'
|-TypedefDecl 0x559ed5b95b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x559ed5b2ef90 'unsigned short'
|-TypedefDecl 0x559ed5b95ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x559ed5b2ef10 'int'
|-TypedefDecl 0x559ed5b95c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x559ed5b2efb0 'unsigned int'
|-TypedefDecl 0x559ed5b95c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b95cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-TypedefDecl 0x559ed5b95d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b95dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-TypedefDecl 0x559ed5b95e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-TypedefDecl 0x559ed5b95eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x559ed5b2efb0 'unsigned int'
|-TypedefDecl 0x559ed5b95f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x559ed5b2efb0 'unsigned int'
|-TypedefDecl 0x559ed5b95f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-TypedefDecl 0x559ed5b96008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-TypedefDecl 0x559ed5b96078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x559ed5b2efb0 'unsigned int'
|-TypedefDecl 0x559ed5b960e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-TypedefDecl 0x559ed5b96158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b961c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b96238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x559ed5b2ef10 'int'
|-RecordDecl 0x559ed5b96290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x559ed5b96408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x559ed5b964c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x559ed5b96460 'struct __fsid_t' sugar
|   `-RecordType 0x559ed5b96310 '__fsid_t'
|     `-Record 0x559ed5b96290 ''
|-TypedefDecl 0x559ed5b96548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b965b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-TypedefDecl 0x559ed5b96628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-TypedefDecl 0x559ed5b96698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x559ed5b2efb0 'unsigned int'
|-TypedefDecl 0x559ed5b96708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b96778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x559ed5b2efb0 'unsigned int'
|-TypedefDecl 0x559ed5b967e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b96858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x559ed5b2ef10 'int'
|-TypedefDecl 0x559ed5b968c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x559ed5b2ef10 'int'
|-TypedefDecl 0x559ed5b96938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x559ed5b2ef10 'int'
|-TypedefDecl 0x559ed5b969a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x559ed5b2f630 'void *'
|   `-BuiltinType 0x559ed5b2ee70 'void'
|-TypedefDecl 0x559ed5b96a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b96a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b96af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b96b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-TypedefDecl 0x559ed5b96bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-TypedefDecl 0x559ed5b96c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-TypedefDecl 0x559ed5b96cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-TypedefDecl 0x559ed5b96d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b96d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b96e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b96e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-TypedefDecl 0x559ed5b96f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x559ed5b96ed0 '__off64_t' sugar
|   |-Typedef 0x559ed5b961c8 '__off64_t'
|   `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b97000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x559ed5b96fc0 '__quad_t *'
|   `-TypedefType 0x559ed5b96f60 '__quad_t' sugar
|     |-Typedef 0x559ed5b95d68 '__quad_t'
|     `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b97070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x559ed5b2fab0 'char *'
|   `-BuiltinType 0x559ed5b2eeb0 'char'
|-TypedefDecl 0x559ed5b970e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b97150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x559ed5b2efb0 'unsigned int'
|-FunctionDecl 0x559ed5b97298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x559ed5b971c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x559ed5b985e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x559ed5b985d8 <line:72:3, col:34>
|     `-CallExpr 0x559ed5b98598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x559ed5b98580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559ed5b98510 <col:10> '<builtin fn type>' Function 0x559ed5b98380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x559ed5b985c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559ed5b98530 <col:29> 'unsigned int' lvalue ParmVar 0x559ed5b971c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x559ed5b98380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x559ed5b98420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x559ed5b98490 <col:10> Implicit
| `-ConstAttr 0x559ed5b984e8 <col:10> Implicit
|-FunctionDecl 0x559ed5b98740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x559ed5b98638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x559ed5b98a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x559ed5b98a48 <line:77:3, col:34>
|     `-CallExpr 0x559ed5b98a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x559ed5b989f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559ed5b98978 <col:10> '<builtin fn type>' Function 0x559ed5b987e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x559ed5b98a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x559ed5b98998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x559ed5b98638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x559ed5b987e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x559ed5b98888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x559ed5b988f8 <col:10> Implicit
| `-ConstAttr 0x559ed5b98950 <col:10> Implicit
|-TypedefDecl 0x559ed5b98a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-TypedefDecl 0x559ed5b98b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x559ed5b98ae0 '__time_t' sugar
|   |-Typedef 0x559ed5b96708 '__time_t'
|   `-BuiltinType 0x559ed5b2ef30 'long'
|-RecordDecl 0x559ed5b98b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x559ed5b98c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x559ed5b98cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x559ed5b98d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x559ed5b98d10 '__pid_t' sugar
|   |-Typedef 0x559ed5b96238 '__pid_t'
|   `-BuiltinType 0x559ed5b2ef10 'int'
|-RecordDecl 0x559ed5b98da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x559ed5b98e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x559ed5b98eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x559ed5b98f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x559ed5b98fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-RecordDecl 0x559ed5b99030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x559ed5b992c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x559ed5b9a3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x559ed5b99310 'struct cpu_set_t' sugar
|   `-RecordType 0x559ed5b990b0 'cpu_set_t'
|     `-Record 0x559ed5b99030 ''
|-FunctionDecl 0x559ed5b9a678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x559ed5b9a448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559ed5b9a550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x559ed5b9a728 <line:107:19>
|-FunctionDecl 0x559ed5b9a900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x559ed5b9a790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x559ed5b9a9a8 <col:69>
|-FunctionDecl 0x559ed5b9ab20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x559ed5b9aa10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x559ed5b9abc8 <col:64>
|-FunctionDecl 0x559ed5b9ae88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x559ed5b9ac30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559ed5b9ad68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559ed5b9af38 <line:113:22>
|-FunctionDecl 0x559ed5b9b1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x559ed5b9afa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559ed5b9b098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x559ed5b9b268 <col:88>
|-FunctionDecl 0x559ed5b9b588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559ed5b9b2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559ed5b9b3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x559ed5b9b440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559ed5b9b640 <col:62>
|-FunctionDecl 0x559ed5b9b7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x559ed5b9b6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x559ed5b9b860 <col:63>
|-FunctionDecl 0x559ed5b9b988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x559ed5b9ba28 <col:47>
|-FunctionDecl 0x559ed5b9bb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x559ed5b9ba98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559ed5b9bbd8 <col:69>
|-FunctionDecl 0x559ed5b9bce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x559ed5b9bc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559ed5b9bd88 <col:69>
|-FunctionDecl 0x559ed5b9c048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559ed5b9bdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559ed5b9bf28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x559ed5b9c0f8 <col:88>
|-TypedefDecl 0x559ed5b9c188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x559ed5b9c150 '__clock_t' sugar
|   |-Typedef 0x559ed5b96548 '__clock_t'
|   `-BuiltinType 0x559ed5b2ef30 'long'
|-TypedefDecl 0x559ed5b9c218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x559ed5b9c1e0 '__clockid_t' sugar
|   |-Typedef 0x559ed5b96938 '__clockid_t'
|   `-BuiltinType 0x559ed5b2ef10 'int'
|-TypedefDecl 0x559ed5b9c2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x559ed5b9c270 '__timer_t' sugar
|   |-Typedef 0x559ed5b969a8 '__timer_t'
|   `-PointerType 0x559ed5b2f630 'void *'
|     `-BuiltinType 0x559ed5b2ee70 'void'
|-RecordDecl 0x559ed5b9c300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x559ed5b9c3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x559ed5b9c440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x559ed5b9c4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x559ed5b9c510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x559ed5b9c578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x559ed5b9c5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x559ed5b9c648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x559ed5b9c6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x559ed5b9c718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x559ed5b9c780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x559ed5b9c7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x559ed5b9c838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x559ed5b9c908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x559ed5b9c978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x559ed5b9ca20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x559ed5b9cbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x559ed5b9cc90 <col:45>
|-FunctionDecl 0x559ed5b9ce70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x559ed5b9cd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x559ed5b9cf18 <col:54>
|-FunctionDecl 0x559ed5b9d118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x559ed5b9cf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x559ed5b9cff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x559ed5b9d1c8 <line:157:22>
| `-ConstAttr 0x559ed5b9d220 <col:63>
|-FunctionDecl 0x559ed5b9e050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559ed5b9d318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559ed5b9e0f8 <col:56>
|-FunctionDecl 0x559ed5b9e4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x559ed5b9e168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x559ed5b9e1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559ed5b9e260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x559ed5b9e358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x559ed5b9e560 <col:54>
|-RecordDecl 0x559ed5b9e5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x559ed5b9e668 parent 0x559ed5b2ee18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x559ed5b9e8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x559ed5b9e968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x559ed5b9e9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x559ed5b9ea38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x559ed5b9eb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x559ed5b9ec48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x559ed5b9ebf0 'struct __locale_struct *'
|   `-ElaboratedType 0x559ed5b9eb80 'struct __locale_struct' sugar
|     `-RecordType 0x559ed5b9e640 'struct __locale_struct'
|       `-Record 0x559ed5b9e5b8 '__locale_struct'
|-TypedefDecl 0x559ed5b9ecf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x559ed5b9ecc0 '__locale_t' sugar
|   |-Typedef 0x559ed5b9ec48 '__locale_t'
|   `-PointerType 0x559ed5b9ebf0 'struct __locale_struct *'
|     `-ElaboratedType 0x559ed5b9eb80 'struct __locale_struct' sugar
|       `-RecordType 0x559ed5b9e640 'struct __locale_struct'
|         `-Record 0x559ed5b9e5b8 '__locale_struct'
|-FunctionDecl 0x559ed5ba0110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x559ed5b9ed68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x559ed5b9ede0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559ed5b9ee60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x559ed5b9eef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559ed5b9ef68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x559ed5ba01d8 <col:40>
|-FunctionDecl 0x559ed5ba03c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559ed5ba02a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x559ed5ba0470 <col:66>
|-FunctionDecl 0x559ed5ba0580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559ed5ba04d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x559ed5ba0628 <col:69>
|-FunctionDecl 0x559ed5ba0858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559ed5ba0690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559ed5ba0720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559ed5ba0908 <col:52>
|-FunctionDecl 0x559ed5ba0ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559ed5ba0970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559ed5ba0a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559ed5ba0b60 <col:55>
|-FunctionDecl 0x559ed5ba0cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x559ed5ba0be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x559ed5ba0da0 <col:62>
|-FunctionDecl 0x559ed5ba0f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x559ed5ba0e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x559ed5ba0fc0 <col:60>
|-FunctionDecl 0x559ed5ba12b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559ed5ba1118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559ed5ba1198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x559ed5ba1368 <col:44>
|-FunctionDecl 0x559ed5ba1578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559ed5ba13d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559ed5ba1450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x559ed5ba1628 <col:49>
|-VarDecl 0x559ed5ba1728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x559ed5ba17a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x559ed5ba1828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x559ed5ba18f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x559ed5ba1a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x559ed5ba1ac0 <col:42>
|-VarDecl 0x559ed5ba1b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x559ed5ba1bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x559ed5ba1d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x559ed5ba1c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x559ed5ba1de0 <col:57>
|-FunctionDecl 0x559ed5ba1ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559ed5ba1e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559ed5ba1f98 <col:56>
|-FunctionDecl 0x559ed5ba20d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559ed5ba2018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x559ed5ba2178 <col:59>
|-FunctionDecl 0x559ed5ba2280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x559ed5ba21e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x559ed5ba2328 <col:48>
| `-ConstAttr 0x559ed5ba2380 <col:89>
|-FunctionDecl 0x559ed5ba25e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559ed5ba2438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x559ed5ba24c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x559ed5ba2848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559ed5ba26d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559ed5ba2768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x559ed5ba28f8 <col:88>
|-FunctionDecl 0x559ed5ba2a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559ed5ba2960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559ed5ba29f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x559ed5ba2b40 <col:88>
|-FunctionDecl 0x559ed5ba2d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x559ed5ba2ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559ed5ba2c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x559ed5ba2e08 <line:208:22>
|-FunctionDecl 0x559ed5ba3178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559ed5ba2e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559ed5ba2ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x559ed5ba2f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x559ed5ba3010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x559ed5ba3478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x559ed5ba3278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x559ed5ba3350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x559ed5ba3528 <col:85>
|-FunctionDecl 0x559ed5ba3918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x559ed5ba3590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559ed5ba36c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x559ed5ba37d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x559ed5ba39d0 <col:52>
|-FunctionDecl 0x559ed5ba3b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x559ed5ba3a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559ed5ba3bf0 <col:61>
|-FunctionDecl 0x559ed5ba40f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x559ed5ba3c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559ed5ba3cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x559ed5ba3e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x559ed5ba3ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x559ed5ba41b0 <col:62>
|-FunctionDecl 0x559ed5ba43c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x559ed5ba4218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559ed5ba42a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x559ed5ba4478 <line:221:22>
|-FunctionDecl 0x559ed5ba4578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x559ed5ba44e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559ed5ba4620 <col:65>
|-TypedefDecl 0x559ed5ba4690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x559ed5b2efd0 'unsigned long'
|-RecordDecl 0x559ed5ba46e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x559ed5ba4830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559ed5ba4898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559ed5ba4948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x559ed5ba48f0 'union pthread_attr_t' sugar
|   `-RecordType 0x559ed5ba4770 'union pthread_attr_t'
|     `-Record 0x559ed5ba46e8 'pthread_attr_t'
|-RecordDecl 0x559ed5ba49a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x559ed5ba4b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x559ed5ba4b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x559ed5ba4c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x559ed5ba4be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x559ed5ba4a20 'struct __pthread_internal_list'
|     `-Record 0x559ed5ba49a0 '__pthread_internal_list'
|-RecordDecl 0x559ed5ba4cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x559ed5ba4d58 parent 0x559ed5b2ee18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x559ed5ba4e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559ed5ba4e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x559ed5ba4f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x559ed5ba4f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x559ed5ba4fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x559ed5ba5038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x559ed5ba9110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x559ed5ba91c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x559ed5ba92b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x559ed5ba9318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559ed5ba94a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x559ed5ba9440 'union pthread_mutex_t' sugar
|   `-RecordType 0x559ed5ba4d30 'pthread_mutex_t'
|     `-Record 0x559ed5ba4cb0 ''
|-RecordDecl 0x559ed5ba9510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x559ed5ba9650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559ed5ba96b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559ed5ba9770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x559ed5ba9710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x559ed5ba9590 'pthread_mutexattr_t'
|     `-Record 0x559ed5ba9510 ''
|-RecordDecl 0x559ed5ba97e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x559ed5ba9888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x559ed5ba9950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559ed5ba99b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x559ed5ba9a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x559ed5ba9a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x559ed5ba9af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x559ed5ba9b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x559ed5ba9bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x559ed5ba9c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x559ed5ba9ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_7/mix010_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_7/mix010_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x559ed5ba9dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x559ed5ba9e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x559ed5ba9f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x559ed5ba9f10 'union pthread_cond_t' sugar
|   `-RecordType 0x559ed5ba9860 'pthread_cond_t'
|     `-Record 0x559ed5ba97e0 ''
|-RecordDecl 0x559ed5ba9fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x559ed5bab130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559ed5bab198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559ed5bab250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x559ed5bab1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x559ed5baa060 'pthread_condattr_t'
|     `-Record 0x559ed5ba9fe0 ''
|-TypedefDecl 0x559ed5bab2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x559ed5b2efb0 'unsigned int'
|-TypedefDecl 0x559ed5bab348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x559ed5b2ef10 'int'
|-RecordDecl 0x559ed5bab3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x559ed5bab448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x559ed5bab510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559ed5bab578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x559ed5bab5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x559ed5bab648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x559ed5bab6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x559ed5bab718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x559ed5bab780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x559ed5bab7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x559ed5bab850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x559ed5bab8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x559ed5bab920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x559ed5bab9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_7/mix010_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_7/mix010_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x559ed5baba78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559ed5babae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559ed5babc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x559ed5babbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x559ed5bab420 'pthread_rwlock_t'
|     `-Record 0x559ed5bab3a0 ''
|-RecordDecl 0x559ed5babca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x559ed5babde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x559ed5babe48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559ed5babf00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x559ed5babea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x559ed5babd20 'pthread_rwlockattr_t'
|     `-Record 0x559ed5babca0 ''
|-TypedefDecl 0x559ed5babf88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x559ed5b2ef14 'volatile int' volatile
|   `-BuiltinType 0x559ed5b2ef10 'int'
|-RecordDecl 0x559ed5babfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x559ed5bad140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x559ed5bad1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559ed5bad260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x559ed5bad200 'union pthread_barrier_t' sugar
|   `-RecordType 0x559ed5bac060 'pthread_barrier_t'
|     `-Record 0x559ed5babfe0 ''
|-RecordDecl 0x559ed5bad2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x559ed5bad3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559ed5bad438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559ed5bad4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x559ed5bad490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x559ed5bad350 'pthread_barrierattr_t'
|     `-Record 0x559ed5bad2d0 ''
|-TypedefDecl 0x559ed5bad608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x559ed5bad5a0 'long [8]' 8 
|   `-BuiltinType 0x559ed5b2ef30 'long'
|-EnumDecl 0x559ed5bad660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x559ed5bad728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x559ed5bad778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x559ed5bad7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x559ed5bad898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x559ed5bad8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x559ed5bad938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x559ed5bad988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x559ed5bada10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x559ed5bad9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x559ed5bad9d8 <col:26> 'int' EnumConstant 0x559ed5bad898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x559ed5bada98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x559ed5bada80 <col:29> 'int'
| |   `-DeclRefExpr 0x559ed5bada60 <col:29> 'int' EnumConstant 0x559ed5bad8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x559ed5badb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x559ed5badb08 <col:30> 'int'
| |   `-DeclRefExpr 0x559ed5badae8 <col:30> 'int' EnumConstant 0x559ed5bad938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x559ed5badba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x559ed5badb90 <col:27> 'int'
|     `-DeclRefExpr 0x559ed5badb70 <col:27> 'int' EnumConstant 0x559ed5bada10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x559ed5badbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x559ed5badcc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x559ed5badd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x559ed5badd38 <col:30> 'int'
| |   `-DeclRefExpr 0x559ed5badd18 <col:30> 'int' EnumConstant 0x559ed5badcc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x559ed5badda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x559ed5bade28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x559ed5bade10 <col:29> 'int'
|     `-DeclRefExpr 0x559ed5baddf0 <col:29> 'int' EnumConstant 0x559ed5badda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x559ed5bade78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x559ed5badf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x559ed5badf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x559ed5badfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x559ed5bae038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x559ed5bae150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x559ed5bae1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x559ed5bae1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x559ed5bae278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x559ed5bae260 <col:31> 'int'
|     `-DeclRefExpr 0x559ed5bae240 <col:31> 'int' EnumConstant 0x559ed5bae150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x559ed5bae2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x559ed5bae398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x559ed5bae3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x559ed5bae438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x559ed5bae508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x559ed5bae558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x559ed5bae5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x559ed5bae678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x559ed5bae6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x559ed5bae718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x559ed5bae958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x559ed5bae9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x559ed5baea28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x559ed5baeb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x559ed5baeb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x559ed5baec68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x559ed5baecb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x559ed5baed08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x559ed5baedd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x559ed5baee28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x559ed5baf488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x559ed5baef20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x559ed5baf030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559ed5baf270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x559ed5baf2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x559ed5baf548 <col:47>
| |-NonNullAttr 0x559ed5baf5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x559ed5baf5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x559ed5baf700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x559ed5baf630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x559ed5baf958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x559ed5baf7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x559ed5baf838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x559ed5bafb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x559ed5bafa18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x559ed5bafbd0 <col:60>
|-FunctionDecl 0x559ed5bafd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x559ed5bafdc0 <col:54>
| `-ConstAttr 0x559ed5bafe18 <col:95>
|-FunctionDecl 0x559ed5baffe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x559ed5bafe50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559ed5bafec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x559ed5bb0098 <line:394:19>
| `-ConstAttr 0x559ed5bb00f0 <col:60>
|-FunctionDecl 0x559ed5bb1b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559ed5bb19d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559ed5bb1bb0 <col:71>
| `-NonNullAttr 0x559ed5bb1c08 <col:112, col:126> 1
|-FunctionDecl 0x559ed5bb1d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559ed5bb1c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559ed5bb1db8 <line:397:22>
| `-NonNullAttr 0x559ed5bb1e10 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bb2038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x559ed5bb1e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559ed5bb1ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x559ed5bb20e8 <line:400:22>
| `-NonNullAttr 0x559ed5bb2140 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bb2348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559ed5bb2188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559ed5bb2208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x559ed5bb23f8 <line:403:22>
| `-NonNullAttr 0x559ed5bb2450 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bb26a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x559ed5bb2498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559ed5bb2540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x559ed5bb2758 <line:406:22>
| `-NonNullAttr 0x559ed5bb27b0 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bb39e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559ed5bb27f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559ed5bb2870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559ed5bb3a98 <line:409:22>
| `-NonNullAttr 0x559ed5bb3af0 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bb3d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559ed5bb3b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559ed5bb3bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559ed5bb3dd8 <line:412:22>
| `-NonNullAttr 0x559ed5bb3e30 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bb4068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559ed5bb3e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x559ed5bb3f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x559ed5bb4118 <col:37>
| `-NonNullAttr 0x559ed5bb4170 <col:78, col:95> 1 2
|-FunctionDecl 0x559ed5bb4358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559ed5bb41b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559ed5bb4238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x559ed5bb4408 <line:418:22>
| `-NonNullAttr 0x559ed5bb4460 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bb45e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559ed5bb44a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559ed5bb4528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x559ed5bb4698 <line:420:22>
| `-NonNullAttr 0x559ed5bb46f0 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bb4898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559ed5bb4738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559ed5bb47b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x559ed5bb4948 <line:423:22>
| `-NonNullAttr 0x559ed5bb49c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bb4b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559ed5bb4a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559ed5bb4a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x559ed5bb4bf8 <line:426:22>
| `-NonNullAttr 0x559ed5bb4c50 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bb4df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559ed5bb4c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559ed5bb4d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x559ed5bb4ea8 <line:429:22>
| `-NonNullAttr 0x559ed5bb4f00 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bb5088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559ed5bb4f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559ed5bb4fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x559ed5bb5138 <line:431:22>
| `-NonNullAttr 0x559ed5bb5190 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bb53b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x559ed5bb51d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559ed5bb5258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x559ed5bb5468 <line:434:22>
| |-NonNullAttr 0x559ed5bb54c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x559ed5bb54f8 <col:100> "" ""
|-FunctionDecl 0x559ed5bb5708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x559ed5bb5548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559ed5bb55c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x559ed5bb57b8 <line:437:22>
| |-NonNullAttr 0x559ed5bb5810 <col:63, col:77> 1
| `-DeprecatedAttr 0x559ed5bb5848 <col:97> "" ""
|-FunctionDecl 0x559ed5bb5a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559ed5bb5898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559ed5bb5910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559ed5bb5af8 <line:440:22>
| `-NonNullAttr 0x559ed5bb5b50 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bb5cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559ed5bb5b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559ed5bb5c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559ed5bb5d80 <line:443:22>
| `-NonNullAttr 0x559ed5bb5dd8 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bb60c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559ed5bb5e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559ed5bb5ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x559ed5bb5f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559ed5bb6180 <line:447:22>
| `-NonNullAttr 0x559ed5bb61d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x559ed5bb6488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x559ed5bb6230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559ed5bb62b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x559ed5bb6328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559ed5bb6540 <col:43>
| `-NonNullAttr 0x559ed5bb6598 <col:84, col:98> 1
|-FunctionDecl 0x559ed5bb6858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559ed5bb65e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559ed5bb6668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x559ed5bb66f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x559ed5bb6910 <line:452:22>
| `-NonNullAttr 0x559ed5bb6968 <col:63, col:77> 3
|-FunctionDecl 0x559ed5bb6c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559ed5bb69e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559ed5bb6a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x559ed5bb6af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559ed5bb6d30 <line:456:22>
| `-NonNullAttr 0x559ed5bb6d88 <col:63, col:80> 2 3
|-FunctionDecl 0x559ed5bb6f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x559ed5bb6dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559ed5bb6e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x559ed5bb7028 <line:458:22>
|-FunctionDecl 0x559ed5bb73f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x559ed5bb70f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x559ed5bb7290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x559ed5bb74a8 <col:52, col:69> 1 2
|-FunctionDecl 0x559ed5bb7650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x559ed5bb7530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x559ed5bb75b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x559ed5bb7838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x559ed5bb7718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x559ed5bb7798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x559ed5bb79f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x559ed5bb78f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x559ed5bb7b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x559ed5bb7bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x559ed5bb7c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x559ed5bb7d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x559ed5bb7dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x559ed5bb7fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_7/mix010_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x559ed5bb8098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x559ed5bb8150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x559ed5bb80f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x559ed5bb7c50 '__pthread_unwind_buf_t'
| |   `-Record 0x559ed5bb7bd0 ''
| `-AlignedAttr 0x559ed5bb81a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x559ed5bb8220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x559ed5bb8380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x559ed5bb83e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x559ed5bb8450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x559ed5bb84b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x559ed5bb86c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559ed5bb85b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559ed5bb8808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559ed5bb8778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559ed5bb8a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559ed5bb88c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x559ed5bb8aa8 <line:487:22>
|-RecordDecl 0x559ed5bb8b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x559ed5bb8e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x559ed5bb8c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x559ed5bb8cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x559ed5bb8ec8 <col:86>
| `-ReturnsTwiceAttr 0x559ed5bb8f20 <col:12> Implicit
|-FunctionDecl 0x559ed5bb9248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559ed5bb8ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x559ed5bb9100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x559ed5bb92f8 <line:493:22>
| `-NonNullAttr 0x559ed5bb9350 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bb94c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559ed5bb9398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559ed5bb9570 <line:495:22>
| `-NonNullAttr 0x559ed5bb95c8 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bb96d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559ed5bb9618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559ed5bb9778 <line:497:22>
| `-NonNullAttr 0x559ed5bb97d0 <col:52, col:66> 1
|-FunctionDecl 0x559ed5bb98d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559ed5bb9818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559ed5bb9978 <line:499:22>
| `-NonNullAttr 0x559ed5bb99d0 <col:52, col:66> 1
|-FunctionDecl 0x559ed5bbac28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559ed5bbaa38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559ed5bbaac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559ed5bbacd8 <col:36>
| `-NonNullAttr 0x559ed5bbad30 <col:66, col:83> 1 2
|-FunctionDecl 0x559ed5bbae30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559ed5bbad78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559ed5bbaed8 <line:504:22>
| `-NonNullAttr 0x559ed5bbaf30 <col:52, col:66> 1
|-FunctionDecl 0x559ed5bbb1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559ed5bbafe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559ed5bbb060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559ed5bbb278 <line:508:22>
| `-NonNullAttr 0x559ed5bbb2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bbb598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x559ed5bbb318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559ed5bbb398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x559ed5bbb418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x559ed5bbb650 <line:512:22>
| `-NonNullAttr 0x559ed5bbb6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x559ed5bbb7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559ed5bbb6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559ed5bbb858 <line:514:22>
| `-NonNullAttr 0x559ed5bbb8b0 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bbbad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559ed5bbb960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559ed5bbbb80 <line:516:22>
| `-NonNullAttr 0x559ed5bbbbd8 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bbbce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559ed5bbbc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559ed5bbbd88 <line:518:22>
| `-NonNullAttr 0x559ed5bbbde0 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bbc008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559ed5bbbe28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559ed5bbbea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x559ed5bbc0b8 <line:522:22>
| `-NonNullAttr 0x559ed5bbc110 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bbc318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559ed5bbc158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559ed5bbc1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x559ed5bbc3c8 <line:525:22>
| `-NonNullAttr 0x559ed5bbc420 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bbc5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559ed5bbc468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559ed5bbc4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x559ed5bbc678 <line:528:22>
| `-NonNullAttr 0x559ed5bbc6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bbc858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559ed5bbc718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559ed5bbc798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x559ed5bbc908 <line:530:22>
| `-NonNullAttr 0x559ed5bbc960 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bbcb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559ed5bbc9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559ed5bbca40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x559ed5bbcbd0 <line:534:22>
| `-NonNullAttr 0x559ed5bbcc28 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bbcdb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559ed5bbcc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559ed5bbccf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x559ed5bbce68 <line:537:22>
| `-NonNullAttr 0x559ed5bbcec0 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bbd068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559ed5bbcf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559ed5bbcf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559ed5bbd118 <line:541:22>
| `-NonNullAttr 0x559ed5bbd170 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bbd2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559ed5bbd1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559ed5bbd238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x559ed5bbd3a8 <line:544:22>
| `-NonNullAttr 0x559ed5bbd400 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bbd5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x559ed5bbd448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x559ed5bbd4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x559ed5bbd698 <line:547:22>
| `-NonNullAttr 0x559ed5bbd6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bbd878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559ed5bbd738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559ed5bbd7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x559ed5bbd928 <line:550:22>
| `-NonNullAttr 0x559ed5bbd980 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bbecf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x559ed5bbeaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559ed5bbebb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x559ed5bbeda8 <col:29>
| `-NonNullAttr 0x559ed5bbee00 <col:70, col:84> 1
|-FunctionDecl 0x559ed5bbef78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559ed5bbee48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559ed5bbf020 <line:555:22>
| `-NonNullAttr 0x559ed5bbf078 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bbf180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559ed5bbf0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559ed5bbf228 <line:557:22>
| `-NonNullAttr 0x559ed5bbf280 <col:52, col:66> 1
|-FunctionDecl 0x559ed5bbf380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559ed5bbf2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559ed5bbf428 <line:559:19>
| `-NonNullAttr 0x559ed5bbf480 <col:49, col:63> 1
|-FunctionDecl 0x559ed5bbf6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559ed5bbf4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559ed5bbf558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559ed5bbf768 <col:39>
| `-NonNullAttr 0x559ed5bbf7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x559ed5bbf8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559ed5bbf808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559ed5bbf968 <line:564:22>
| `-NonNullAttr 0x559ed5bbf9c0 <col:52, col:66> 1
|-FunctionDecl 0x559ed5bbfb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559ed5bbfa70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559ed5bbfbd0 <line:566:22>
| `-NonNullAttr 0x559ed5bbfc28 <col:52, col:66> 1
|-FunctionDecl 0x559ed5bbfde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559ed5bbfc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559ed5bbfd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559ed5bbfe98 <col:39>
| `-NonNullAttr 0x559ed5bbfef0 <col:69, col:86> 1 2
|-FunctionDecl 0x559ed5bbfff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559ed5bbff38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559ed5bc0098 <line:571:22>
| `-NonNullAttr 0x559ed5bc00f0 <col:52, col:66> 1
|-FunctionDecl 0x559ed5bc02d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559ed5bc01a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559ed5bc0380 <line:573:22>
| `-NonNullAttr 0x559ed5bc03d8 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bc04e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559ed5bc0428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559ed5bc0588 <line:575:22>
| `-NonNullAttr 0x559ed5bc05e0 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bc0808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559ed5bc0628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559ed5bc06a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x559ed5bc08b8 <line:579:22>
| `-NonNullAttr 0x559ed5bc0910 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bc0b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559ed5bc0958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559ed5bc09d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x559ed5bc0be8 <line:582:22>
| `-NonNullAttr 0x559ed5bc0c40 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bc0de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559ed5bc0c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559ed5bc0d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x559ed5bc0e98 <line:586:22>
| `-NonNullAttr 0x559ed5bc0ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bc1078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559ed5bc0f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559ed5bc0fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x559ed5bc1128 <col:36>
| `-NonNullAttr 0x559ed5bc1180 <col:77, col:91> 1
|-FunctionDecl 0x559ed5bc14b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x559ed5bc1260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559ed5bc1370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x559ed5bc1568 <line:591:22>
| `-NonNullAttr 0x559ed5bc15c0 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bc1738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559ed5bc1608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559ed5bc17e0 <line:593:22>
| `-NonNullAttr 0x559ed5bc1838 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bc1940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559ed5bc1888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559ed5bc19e8 <line:595:22>
| `-NonNullAttr 0x559ed5bc1a40 <col:52, col:66> 1
|-FunctionDecl 0x559ed5bc1b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559ed5bc1aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559ed5bc1c00 <line:597:22>
| `-NonNullAttr 0x559ed5bc1c58 <col:52, col:66> 1
|-FunctionDecl 0x559ed5bc1e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x559ed5bc1ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559ed5bc1d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x559ed5bc1f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x559ed5bc2268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559ed5bc1fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559ed5bc2030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559ed5bc20c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x559ed5bc2320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x559ed5bc2538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559ed5bc2400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559ed5bc25e0 <line:606:22>
| `-NonNullAttr 0x559ed5bc2638 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bc2740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559ed5bc2688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559ed5bc27e8 <line:608:22>
| `-NonNullAttr 0x559ed5bc2840 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bc2aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559ed5bc2888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559ed5bc2908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x559ed5bc2b50 <line:612:22>
| `-NonNullAttr 0x559ed5bc2ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bc2db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x559ed5bc2bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559ed5bc2c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x559ed5bc2e68 <col:37>
| `-NonNullAttr 0x559ed5bc2ec0 <col:78, col:92> 1
|-FunctionDecl 0x559ed5bc30d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x559ed5bc2f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559ed5bc2fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x559ed5bc3188 <line:618:22>
| `-NonNullAttr 0x559ed5bc31e0 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bc33a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x559ed5bc3228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559ed5bc32a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x559ed5bc3458 <line:621:22>
| `-NonNullAttr 0x559ed5bc34b0 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bc3758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x559ed5bc3590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x559ed5bc3610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x559ed5bc3808 <line:623:22>
| `-NonNullAttr 0x559ed5bc3860 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bc39d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559ed5bc38a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559ed5bc3ab0 <line:625:22>
| `-NonNullAttr 0x559ed5bc3b08 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bc3c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559ed5bc3b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559ed5bc3cb8 <line:627:22>
| `-NonNullAttr 0x559ed5bc3d10 <col:52, col:66> 1
|-FunctionDecl 0x559ed5bc3e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559ed5bc3d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559ed5bc3eb8 <line:629:22>
| `-NonNullAttr 0x559ed5bc3f10 <col:52, col:66> 1
|-FunctionDecl 0x559ed5bc4010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559ed5bc3f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559ed5bc40b8 <line:631:22>
| `-NonNullAttr 0x559ed5bc4110 <col:52, col:66> 1
|-FunctionDecl 0x559ed5bc44e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x559ed5bc41f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x559ed5bc4300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559ed5bc4380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x559ed5bc45a0 <line:635:22>
| `-NonNullAttr 0x559ed5bc45f8 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bc4778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559ed5bc4648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559ed5bc4820 <line:637:22>
| `-NonNullAttr 0x559ed5bc4878 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bc4980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559ed5bc48c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559ed5bc4a28 <line:639:22>
| `-NonNullAttr 0x559ed5bc4a80 <col:52, col:66> 1
|-FunctionDecl 0x559ed5bc5c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559ed5bc5b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559ed5bc5d30 <line:641:22>
| `-NonNullAttr 0x559ed5bc5d88 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bc5e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559ed5bc5dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559ed5bc5f38 <line:643:22>
| `-NonNullAttr 0x559ed5bc5f90 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bc61b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559ed5bc5fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559ed5bc6058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x559ed5bc6268 <line:647:22>
| `-NonNullAttr 0x559ed5bc62c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559ed5bc64c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x559ed5bc6308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x559ed5bc6388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x559ed5bc6578 <line:650:22>
| `-NonNullAttr 0x559ed5bc65d0 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bc6918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x559ed5bc66b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x559ed5bc67d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x559ed5bc69c8 <line:653:22>
| `-NonNullAttr 0x559ed5bc6a20 <col:63, col:77> 1
|-FunctionDecl 0x559ed5bc6b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x559ed5bc6a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559ed5bc6c30 <col:69>
|-FunctionDecl 0x559ed5bc6da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x559ed5bc6c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559ed5bc6e50 <col:72>
|-FunctionDecl 0x559ed5bc7088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x559ed5bc6eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x559ed5bc6f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x559ed5bc7138 <col:44>
|-FunctionDecl 0x559ed5bc7358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x559ed5bc71a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559ed5bc7218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x559ed5bc7408 <line:660:22>
| `-NonNullAttr 0x559ed5bc7460 <col:63, col:77> 2
|-FunctionDecl 0x559ed5bc78a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x559ed5bc7540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x559ed5bc7650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x559ed5bc7760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x559ed5bc7960 <col:47>
|-FunctionDecl 0x559ed5bc7af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x559ed5bc79d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559ed5bc7c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x559ed5bc7bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559ed5bc7da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x559ed5bc7d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559ed5bc7e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x559ed5bc7f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x559ed5bc7fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x559ed5bc80a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x559ed5bc8120 prev 0x559ed5bc80a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x559ed5bc8188 <col:24> 'int' 0
|-VarDecl 0x559ed5bc81c0 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x559ed5bc8240 prev 0x559ed5bc81c0 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x559ed5bc82a8 <col:27> 'int' 0
|-VarDecl 0x559ed5bc82e0 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x559ed5bc8360 prev 0x559ed5bc82e0 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x559ed5bc83c8 <col:27> 'int' 0
|-VarDecl 0x559ed5bc8400 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x559ed5bc8480 prev 0x559ed5bc8400 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x559ed5bc84e8 <col:27> 'int' 0
|-VarDecl 0x559ed5bc8520 <line:679:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x559ed5bc85a0 prev 0x559ed5bc8520 <line:680:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x559ed5bc8608 <col:27> 'int' 0
|-VarDecl 0x559ed5bc8640 <line:681:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x559ed5bc86c0 prev 0x559ed5bc8640 <line:682:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x559ed5bc8728 <col:27> 'int' 0
|-VarDecl 0x559ed5bc8760 <line:683:1, col:5> col:5 used a 'int'
|-VarDecl 0x559ed5bc87e0 prev 0x559ed5bc8760 <line:684:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x559ed5bc8848 <col:9> 'int' 0
|-VarDecl 0x559ed5bc8878 <line:685:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x559ed5bc88f8 <line:686:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x559ed5bc8970 <line:687:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x559ed5bc89e8 <line:688:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x559ed5bc8a60 <line:689:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x559ed5bc8b00 <line:690:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x559ed5bc8b78 <line:691:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x559ed5bc8bf0 <line:692:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x559ed5bc8c68 <line:693:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x559ed5bc8ce0 <line:694:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x559ed5bc8d58 <line:695:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x559ed5bc8dd8 <line:696:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x559ed5bc8e58 <line:697:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x559ed5bc8ed0 <line:698:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x559ed5bc8f50 <line:699:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x559ed5bc8fc8 <line:700:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x559ed5bc9040 <line:701:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x559ed5bc90b8 <line:702:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x559ed5bc9138 <line:703:1, col:5> col:5 used x 'int'
|-VarDecl 0x559ed5bc91b8 prev 0x559ed5bc9138 <line:704:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x559ed5bc9220 <col:9> 'int' 0
|-VarDecl 0x559ed5bc9258 <line:705:1, col:5> col:5 used y 'int'
|-VarDecl 0x559ed5bc92d8 prev 0x559ed5bc9258 <line:706:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x559ed5bc9340 <col:9> 'int' 0
|-VarDecl 0x559ed5bc9378 <line:707:1, col:5> col:5 used z 'int'
|-VarDecl 0x559ed5bc93f8 prev 0x559ed5bc9378 <line:708:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x559ed5bc9460 <col:9> 'int' 0
|-VarDecl 0x559ed5bc9490 <line:709:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x559ed5bc9508 <line:710:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x559ed5bc9620 prev 0x559ed5bc7af0 <line:711:1, line:739:1> line:711:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x559ed5bc9588 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559ed5bcae78 <line:712:1, line:739:1>
|   |-CallExpr 0x559ed5bc9738 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559ed5bc9720 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bc96c8 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559ed5bc97b0 <line:714:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559ed5bc9758 <col:3> 'int' lvalue Var 0x559ed5bc8f50 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x559ed5bc9798 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ed5bc9778 <col:15> 'int' lvalue Var 0x559ed5bc8e58 'a$w_buff0' 'int'
|   |-BinaryOperator 0x559ed5bc9810 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559ed5bc97d0 <col:3> 'int' lvalue Var 0x559ed5bc8e58 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x559ed5bc97f0 <col:15> 'int' 1
|   |-BinaryOperator 0x559ed5bc9888 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bc9830 <col:3> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bc9870 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ed5bc9850 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559ed5bc9920 <line:717:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bc98a8 <col:3> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x559ed5bc98f8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559ed5bc98c8 <col:27> 'int' 1
|   |-CallExpr 0x559ed5bc9aa8 <line:718:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x559ed5bc9a90 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x559ed5bc9940 <col:3> 'void (int)' Function 0x559ed5b6ebc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x559ed5bc9a40 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x559ed5bc9a20 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x559ed5bc9a00 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x559ed5bc99b8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x559ed5bc99a0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x559ed5bc9960 <col:23> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x559ed5bc99e8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x559ed5bc99d0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x559ed5bc9980 <col:41> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559ed5bc9b48 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bc9ad0 <col:3> '_Bool' lvalue Var 0x559ed5bc8b78 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bc9b30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ed5bc9b10 <col:20> '_Bool' lvalue Var 0x559ed5bc8970 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x559ed5bc9bc0 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bc9b68 <col:3> '_Bool' lvalue Var 0x559ed5bc8bf0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bc9ba8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ed5bc9b88 <col:20> '_Bool' lvalue Var 0x559ed5bc89e8 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559ed5bc9c38 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bc9be0 <col:3> '_Bool' lvalue Var 0x559ed5bc8c68 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bc9c20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ed5bc9c00 <col:20> '_Bool' lvalue Var 0x559ed5bc8a60 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559ed5bc9cb0 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bc9c58 <col:3> '_Bool' lvalue Var 0x559ed5bc8ce0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bc9c98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ed5bc9c78 <col:20> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559ed5bc9d48 <line:723:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bc9cd0 <col:3> '_Bool' lvalue Var 0x559ed5bc89e8 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x559ed5bc9d20 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559ed5bc9cf0 <col:27> 'int' 1
|   |-CallExpr 0x559ed5bc9da0 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559ed5bc9d88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bc9d68 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559ed5bc9df8 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559ed5bc9de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bc9dc0 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559ed5bc9e70 <line:726:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559ed5bc9e18 <col:3> 'int' lvalue Var 0x559ed5bc8240 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x559ed5bc9e58 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ed5bc9e38 <col:25> 'int' lvalue Var 0x559ed5bc91b8 'x' 'int'
|   |-CallExpr 0x559ed5bc9ec8 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559ed5bc9eb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bc9e90 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559ed5bc9f20 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559ed5bc9f08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bc9ee8 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559ed5bca208 <line:729:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559ed5bc9f40 <col:3> 'int' lvalue Var 0x559ed5bc87e0 'a' 'int'
|   | `-ConditionalOperator 0x559ed5bca1d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559ed5bca000 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559ed5bc9fb8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559ed5bc9fa0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559ed5bc9f60 <col:7> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559ed5bc9fe8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559ed5bc9fd0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559ed5bc9f80 <col:25> '_Bool' lvalue Var 0x559ed5bc89e8 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x559ed5bca1c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559ed5bca020 <col:42> 'int' lvalue Var 0x559ed5bc8e58 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x559ed5bca1a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559ed5bca170 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559ed5bca0e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559ed5bca098 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559ed5bca080 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559ed5bca040 <col:55> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559ed5bca0c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559ed5bca0b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559ed5bca060 <col:73> '_Bool' lvalue Var 0x559ed5bc8bf0 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559ed5bca140 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559ed5bca100 <col:90> 'int' lvalue Var 0x559ed5bc8f50 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559ed5bca158 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559ed5bca120 <col:102> 'int' lvalue Var 0x559ed5bc87e0 'a' 'int'
|   |-BinaryOperator 0x559ed5bca410 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bca228 <col:3> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bca3f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559ed5bca3c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559ed5bca2e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559ed5bca2a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559ed5bca288 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559ed5bca248 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559ed5bca2d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559ed5bca2b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559ed5bca268 <col:38> '_Bool' lvalue Var 0x559ed5bc89e8 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559ed5bca380 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559ed5bca338 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559ed5bca308 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559ed5bca3b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559ed5bca398 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559ed5bca360 <col:66> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559ed5bca6f8 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bca430 <col:3> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bca6e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559ed5bca6b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559ed5bca5d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559ed5bca4f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559ed5bca4a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559ed5bca490 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559ed5bca450 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559ed5bca4d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559ed5bca4c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559ed5bca470 <col:38> '_Bool' lvalue Var 0x559ed5bc89e8 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559ed5bca5b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559ed5bca568 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559ed5bca550 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559ed5bca510 <col:56> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559ed5bca598 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559ed5bca580 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559ed5bca530 <col:74> '_Bool' lvalue Var 0x559ed5bc8bf0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559ed5bca668 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559ed5bca620 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559ed5bca5f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559ed5bca698 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559ed5bca680 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559ed5bca648 <col:102> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559ed5bca900 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bca718 <col:3> '_Bool' lvalue Var 0x559ed5bc89e8 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bca8e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559ed5bca8b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559ed5bca7d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559ed5bca790 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559ed5bca778 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559ed5bca738 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559ed5bca7c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559ed5bca7a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559ed5bca758 <col:38> '_Bool' lvalue Var 0x559ed5bc89e8 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559ed5bca870 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559ed5bca828 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559ed5bca7f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559ed5bca8a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559ed5bca888 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559ed5bca850 <col:66> '_Bool' lvalue Var 0x559ed5bc89e8 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559ed5bcabf8 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bca920 <col:3> '_Bool' lvalue Var 0x559ed5bc8bf0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bcabe0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559ed5bcabb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559ed5bcaac0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559ed5bca9e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559ed5bca998 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559ed5bca980 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559ed5bca940 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559ed5bca9c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559ed5bca9b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559ed5bca960 <col:38> '_Bool' lvalue Var 0x559ed5bc89e8 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559ed5bcaaa0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559ed5bcaa58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559ed5bcaa40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559ed5bcaa00 <col:56> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559ed5bcaa88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559ed5bcaa70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559ed5bcaa20 <col:74> '_Bool' lvalue Var 0x559ed5bc8bf0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559ed5bcab68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559ed5bcab20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559ed5bcaae0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559ed5bcab98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559ed5bcab80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559ed5bcab48 <col:102> '_Bool' lvalue Var 0x559ed5bc8bf0 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x559ed5bcac50 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcac38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcac18 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559ed5bcaca8 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcac90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcac70 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559ed5bcad60 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559ed5bcacc8 <col:3> 'int' lvalue Var 0x559ed5bc8120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559ed5bcad40 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559ed5bcad28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559ed5bcace8 <col:22> 'int' lvalue Var 0x559ed5bc8120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559ed5bcad08 <col:41> 'int' 1
|   |-CallExpr 0x559ed5bcadb8 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcada0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcad80 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559ed5bcae68 <line:738:3, col:36>
|     `-CallExpr 0x559ed5bcae48 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559ed5bcae30 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559ed5bcadd8 <col:10> 'void *(void)' Function 0x559ed5b6e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559ed5bcb008 prev 0x559ed5bc7c48 <line:740:1, line:765:1> line:740:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x559ed5bcaf70 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559ed5bcc488 <line:741:1, line:765:1>
|   |-CallExpr 0x559ed5bcb0e8 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcb0d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcb0b0 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559ed5bcb148 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559ed5bcb108 <col:3> 'int' lvalue Var 0x559ed5bc91b8 'x' 'int'
|   | `-IntegerLiteral 0x559ed5bcb128 <col:7> 'int' 1
|   |-CallExpr 0x559ed5bcb1a0 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcb188 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcb168 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559ed5bcb1f8 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcb1e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcb1c0 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559ed5bcb258 <line:746:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559ed5bcb218 <col:3> 'int' lvalue Var 0x559ed5bc92d8 'y' 'int'
|   | `-IntegerLiteral 0x559ed5bcb238 <col:7> 'int' 1
|   |-CallExpr 0x559ed5bcb2b0 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcb298 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcb278 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559ed5bcb308 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcb2f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcb2d0 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559ed5bcb380 <line:749:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559ed5bcb328 <col:3> 'int' lvalue Var 0x559ed5bc8360 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x559ed5bcb368 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ed5bcb348 <col:25> 'int' lvalue Var 0x559ed5bc92d8 'y' 'int'
|   |-CallExpr 0x559ed5bcb3d8 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcb3c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcb3a0 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559ed5bcb430 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcb418 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcb3f8 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559ed5bcb4a8 <line:752:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559ed5bcb450 <col:3> 'int' lvalue Var 0x559ed5bc8480 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x559ed5bcb490 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ed5bcb470 <col:25> 'int' lvalue Var 0x559ed5bc93f8 'z' 'int'
|   |-CallExpr 0x559ed5bcb500 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcb4e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcb4c8 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559ed5bcb558 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcb540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcb520 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559ed5bcb840 <line:755:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559ed5bcb578 <col:3> 'int' lvalue Var 0x559ed5bc87e0 'a' 'int'
|   | `-ConditionalOperator 0x559ed5bcb810 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559ed5bcb638 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559ed5bcb5f0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559ed5bcb5d8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559ed5bcb598 <col:7> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559ed5bcb620 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559ed5bcb608 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559ed5bcb5b8 <col:25> '_Bool' lvalue Var 0x559ed5bc8a60 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x559ed5bcb7f8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559ed5bcb658 <col:42> 'int' lvalue Var 0x559ed5bc8e58 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x559ed5bcb7d8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559ed5bcb7a8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559ed5bcb718 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559ed5bcb6d0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559ed5bcb6b8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559ed5bcb678 <col:55> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559ed5bcb700 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559ed5bcb6e8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559ed5bcb698 <col:73> '_Bool' lvalue Var 0x559ed5bc8c68 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559ed5bcb778 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559ed5bcb738 <col:90> 'int' lvalue Var 0x559ed5bc8f50 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559ed5bcb790 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559ed5bcb758 <col:102> 'int' lvalue Var 0x559ed5bc87e0 'a' 'int'
|   |-BinaryOperator 0x559ed5bcba48 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bcb860 <col:3> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bcba30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559ed5bcba00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559ed5bcb920 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559ed5bcb8d8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559ed5bcb8c0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559ed5bcb880 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559ed5bcb908 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559ed5bcb8f0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559ed5bcb8a0 <col:38> '_Bool' lvalue Var 0x559ed5bc8a60 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559ed5bcb9b8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559ed5bcb970 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559ed5bcb940 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559ed5bcb9e8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559ed5bcb9d0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559ed5bcb998 <col:66> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559ed5bcbd50 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bcba68 <col:3> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bcbd38 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559ed5bcbd08 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559ed5bcbc28 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559ed5bcbb48 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559ed5bcbae0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559ed5bcbac8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559ed5bcba88 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559ed5bcbb30 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559ed5bcbaf8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559ed5bcbaa8 <col:38> '_Bool' lvalue Var 0x559ed5bc8a60 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559ed5bcbc08 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559ed5bcbbc0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559ed5bcbba8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559ed5bcbb68 <col:56> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559ed5bcbbf0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559ed5bcbbd8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559ed5bcbb88 <col:74> '_Bool' lvalue Var 0x559ed5bc8c68 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559ed5bcbcc0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559ed5bcbc78 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559ed5bcbc48 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559ed5bcbcf0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559ed5bcbcd8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559ed5bcbca0 <col:102> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559ed5bcbf58 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bcbd70 <col:3> '_Bool' lvalue Var 0x559ed5bc8a60 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bcbf40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559ed5bcbf10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559ed5bcbe30 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559ed5bcbde8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559ed5bcbdd0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559ed5bcbd90 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559ed5bcbe18 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559ed5bcbe00 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559ed5bcbdb0 <col:38> '_Bool' lvalue Var 0x559ed5bc8a60 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559ed5bcbec8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559ed5bcbe80 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559ed5bcbe50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559ed5bcbef8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559ed5bcbee0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559ed5bcbea8 <col:66> '_Bool' lvalue Var 0x559ed5bc8a60 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559ed5bcc240 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bcbf78 <col:3> '_Bool' lvalue Var 0x559ed5bc8c68 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bcc228 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559ed5bcc1f8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559ed5bcc118 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559ed5bcc038 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559ed5bcbff0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559ed5bcbfd8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559ed5bcbf98 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559ed5bcc020 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559ed5bcc008 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559ed5bcbfb8 <col:38> '_Bool' lvalue Var 0x559ed5bc8a60 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559ed5bcc0f8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559ed5bcc0b0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559ed5bcc098 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559ed5bcc058 <col:56> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559ed5bcc0e0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559ed5bcc0c8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559ed5bcc078 <col:74> '_Bool' lvalue Var 0x559ed5bc8c68 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559ed5bcc1b0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559ed5bcc168 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559ed5bcc138 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559ed5bcc1e0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559ed5bcc1c8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559ed5bcc190 <col:102> '_Bool' lvalue Var 0x559ed5bc8c68 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x559ed5bcc298 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcc280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcc260 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559ed5bcc2f0 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcc2d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcc2b8 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559ed5bcc3a8 <line:762:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559ed5bcc310 <col:3> 'int' lvalue Var 0x559ed5bc8120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559ed5bcc388 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559ed5bcc370 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559ed5bcc330 <col:22> 'int' lvalue Var 0x559ed5bc8120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559ed5bcc350 <col:41> 'int' 1
|   |-CallExpr 0x559ed5bcc400 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcc3e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcc3c8 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559ed5bcc478 <line:764:3, col:36>
|     `-CallExpr 0x559ed5bcc458 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559ed5bcc440 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559ed5bcc420 <col:10> 'void *(void)' Function 0x559ed5b6e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559ed5bcc600 prev 0x559ed5bc7da0 <line:766:1, line:801:1> line:766:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x559ed5bcc568 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559ed5bd0308 <line:767:1, line:801:1>
|   |-CallExpr 0x559ed5bcc6e0 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcc6c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcc6a8 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559ed5bcc740 <line:769:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559ed5bcc700 <col:3> 'int' lvalue Var 0x559ed5bc93f8 'z' 'int'
|   | `-IntegerLiteral 0x559ed5bcc720 <col:7> 'int' 1
|   |-CallExpr 0x559ed5bcc798 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcc780 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcc760 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559ed5bcc7f0 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcc7d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcc7b8 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559ed5bcc868 <line:772:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559ed5bcc810 <col:3> 'int' lvalue Var 0x559ed5bc85a0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x559ed5bcc850 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ed5bcc830 <col:25> 'int' lvalue Var 0x559ed5bc93f8 'z' 'int'
|   |-CallExpr 0x559ed5bcc8c0 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcc8a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcc888 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559ed5bcc918 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcc900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcc8e0 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559ed5bcc9c8 <line:775:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bcc938 <col:3> '_Bool' lvalue Var 0x559ed5bc9490 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bcc9b0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559ed5bcc990 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559ed5bcc978 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559ed5bcc958 <col:19> 'void *(void)' Function 0x559ed5b6e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559ed5bcca78 <line:776:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bcc9e8 <col:3> '_Bool' lvalue Var 0x559ed5bc9508 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bcca60 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559ed5bcca40 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559ed5bcca28 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559ed5bcca08 <col:19> 'void *(void)' Function 0x559ed5b6e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559ed5bccaf0 <line:777:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bcca98 <col:3> '_Bool' lvalue Var 0x559ed5bc8878 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bccad8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ed5bccab8 <col:21> '_Bool' lvalue Var 0x559ed5bc9508 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x559ed5bccb78 <line:778:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559ed5bccb10 <col:3> 'int' lvalue Var 0x559ed5bc88f8 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x559ed5bccb60 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ed5bccb40 <col:15> 'int' lvalue Var 0x559ed5bc87e0 'a' 'int'
|   |-BinaryOperator 0x559ed5bccfb0 <line:779:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x559ed5bccb98 <col:3> 'int' lvalue Var 0x559ed5bc87e0 'a' 'int'
|   | `-ConditionalOperator 0x559ed5bccf80 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x559ed5bccda8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x559ed5bcccc8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x559ed5bccbf0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x559ed5bccbd8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x559ed5bccbb8 <col:8> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x559ed5bccca8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x559ed5bccc40 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x559ed5bccc28 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x559ed5bccc08 <col:27> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x559ed5bccc90 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x559ed5bccc78 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x559ed5bccc58 <col:46> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x559ed5bccd88 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x559ed5bccd20 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x559ed5bccd08 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x559ed5bccce8 <col:65> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x559ed5bccd70 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x559ed5bccd58 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x559ed5bccd38 <col:84> '_Bool' lvalue Var 0x559ed5bc8ce0 'a$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x559ed5bccf68 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559ed5bccdc8 <col:101> 'int' lvalue Var 0x559ed5bc87e0 'a' 'int'
|   |   `-ParenExpr 0x559ed5bccf48 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x559ed5bccf18 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x559ed5bcce88 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559ed5bcce40 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559ed5bcce28 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559ed5bccde8 <col:106> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559ed5bcce70 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559ed5bcce58 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559ed5bcce08 <col:124> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559ed5bccee8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559ed5bccea8 <col:141> 'int' lvalue Var 0x559ed5bc8e58 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x559ed5bccf00 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559ed5bccec8 <col:153> 'int' lvalue Var 0x559ed5bc8f50 'a$w_buff1' 'int'
|   |-BinaryOperator 0x559ed5bcd4c0 <line:780:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559ed5bccfd0 <col:3> 'int' lvalue Var 0x559ed5bc8e58 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x559ed5bcd490 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559ed5bcd460 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559ed5bcd448 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559ed5bccff0 <col:15> '_Bool' lvalue Var 0x559ed5bc9508 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559ed5bcd478 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559ed5bcd010 <col:31> 'int' lvalue Var 0x559ed5bc8e58 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x559ed5bcd428 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559ed5bcd3f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559ed5bcd220 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559ed5bcd140 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559ed5bcd068 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559ed5bcd050 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559ed5bcd030 <col:45> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559ed5bcd120 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559ed5bcd0b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559ed5bcd0a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559ed5bcd080 <col:64> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x559ed5bcd108 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559ed5bcd0f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559ed5bcd0d0 <col:83> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559ed5bcd200 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559ed5bcd198 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559ed5bcd180 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559ed5bcd160 <col:102> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x559ed5bcd1e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559ed5bcd1d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559ed5bcd1b0 <col:121> '_Bool' lvalue Var 0x559ed5bc8ce0 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559ed5bcd3e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559ed5bcd240 <col:138> 'int' lvalue Var 0x559ed5bc8e58 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x559ed5bcd3c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559ed5bcd390 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559ed5bcd300 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559ed5bcd2b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559ed5bcd2a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559ed5bcd260 <col:151> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559ed5bcd2e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559ed5bcd2d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559ed5bcd280 <col:169> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x559ed5bcd360 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559ed5bcd320 <col:186> 'int' lvalue Var 0x559ed5bc8e58 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x559ed5bcd378 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559ed5bcd340 <col:198> 'int' lvalue Var 0x559ed5bc8e58 'a$w_buff0' 'int'
|   |-BinaryOperator 0x559ed5bcd9d0 <line:781:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559ed5bcd4e0 <col:3> 'int' lvalue Var 0x559ed5bc8f50 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x559ed5bcd9a0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559ed5bcd970 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559ed5bcd958 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559ed5bcd500 <col:15> '_Bool' lvalue Var 0x559ed5bc9508 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559ed5bcd988 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559ed5bcd520 <col:31> 'int' lvalue Var 0x559ed5bc8f50 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x559ed5bcd938 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559ed5bcd908 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559ed5bcd730 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559ed5bcd650 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559ed5bcd578 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559ed5bcd560 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559ed5bcd540 <col:45> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559ed5bcd630 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559ed5bcd5c8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559ed5bcd5b0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559ed5bcd590 <col:64> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x559ed5bcd618 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559ed5bcd600 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559ed5bcd5e0 <col:83> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559ed5bcd710 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559ed5bcd6a8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559ed5bcd690 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559ed5bcd670 <col:102> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x559ed5bcd6f8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559ed5bcd6e0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559ed5bcd6c0 <col:121> '_Bool' lvalue Var 0x559ed5bc8ce0 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559ed5bcd8f0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559ed5bcd750 <col:138> 'int' lvalue Var 0x559ed5bc8f50 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x559ed5bcd8d0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559ed5bcd8a0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559ed5bcd810 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559ed5bcd7c8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559ed5bcd7b0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559ed5bcd770 <col:151> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559ed5bcd7f8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559ed5bcd7e0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559ed5bcd790 <col:169> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x559ed5bcd870 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559ed5bcd830 <col:186> 'int' lvalue Var 0x559ed5bc8f50 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x559ed5bcd888 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559ed5bcd850 <col:198> 'int' lvalue Var 0x559ed5bc8f50 'a$w_buff1' 'int'
|   |-BinaryOperator 0x559ed5bcdf88 <line:782:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bcd9f0 <col:3> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bcdf70 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559ed5bcdf40 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559ed5bcdef8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559ed5bcdee0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559ed5bcda10 <col:20> '_Bool' lvalue Var 0x559ed5bc9508 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559ed5bcdf28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559ed5bcdf10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559ed5bcda30 <col:36> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x559ed5bcdec0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559ed5bcde90 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559ed5bcdc50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559ed5bcdb70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559ed5bcda88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559ed5bcda70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559ed5bcda50 <col:55> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559ed5bcdb50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559ed5bcdad8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559ed5bcdac0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559ed5bcdaa0 <col:74> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559ed5bcdb28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559ed5bcdb10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559ed5bcdaf0 <col:93> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559ed5bcdc30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559ed5bcdbc8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559ed5bcdbb0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559ed5bcdb90 <col:112> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559ed5bcdc18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559ed5bcdc00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559ed5bcdbe0 <col:131> '_Bool' lvalue Var 0x559ed5bc8ce0 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559ed5bcde78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559ed5bcde60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559ed5bcdc70 <col:148> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x559ed5bcde40 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559ed5bcde10 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559ed5bcdd30 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559ed5bcdce8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559ed5bcdcd0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559ed5bcdc90 <col:166> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559ed5bcdd18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559ed5bcdd00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559ed5bcdcb0 <col:184> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559ed5bcddc8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559ed5bcdd80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559ed5bcdd50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559ed5bcddf8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559ed5bcdde0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559ed5bcdda8 <col:212> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559ed5bce550 <line:783:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bcdfa8 <col:3> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bce538 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559ed5bce508 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559ed5bce4c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559ed5bce4a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559ed5bcdfc8 <col:20> '_Bool' lvalue Var 0x559ed5bc9508 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559ed5bce4f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559ed5bce4d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559ed5bcdfe8 <col:36> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559ed5bce488 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559ed5bce458 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559ed5bce1f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559ed5bce118 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559ed5bce040 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559ed5bce028 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559ed5bce008 <col:55> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559ed5bce0f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559ed5bce090 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559ed5bce078 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559ed5bce058 <col:74> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559ed5bce0e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559ed5bce0c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559ed5bce0a8 <col:93> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559ed5bce1d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559ed5bce170 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559ed5bce158 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559ed5bce138 <col:112> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559ed5bce1c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559ed5bce1a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559ed5bce188 <col:131> '_Bool' lvalue Var 0x559ed5bc8ce0 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559ed5bce440 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559ed5bce428 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559ed5bce218 <col:148> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x559ed5bce408 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559ed5bce3d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559ed5bce2d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559ed5bce290 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559ed5bce278 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559ed5bce238 <col:166> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559ed5bce2c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559ed5bce2a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559ed5bce258 <col:184> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559ed5bce3a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559ed5bce328 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559ed5bce2f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559ed5bce3c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559ed5bce380 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559ed5bce350 <col:219> 'int' 0
|   |-BinaryOperator 0x559ed5bceaf8 <line:784:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bce570 <col:3> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bceae0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559ed5bceab0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559ed5bcea68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559ed5bcea50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559ed5bce590 <col:20> '_Bool' lvalue Var 0x559ed5bc9508 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559ed5bcea98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559ed5bcea80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559ed5bce5b0 <col:36> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x559ed5bcea30 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559ed5bcea00 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559ed5bce7c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559ed5bce6e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559ed5bce608 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559ed5bce5f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559ed5bce5d0 <col:55> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559ed5bce6c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559ed5bce658 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559ed5bce640 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559ed5bce620 <col:74> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559ed5bce6a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559ed5bce690 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559ed5bce670 <col:93> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559ed5bce7a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559ed5bce738 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559ed5bce720 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559ed5bce700 <col:112> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559ed5bce788 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559ed5bce770 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559ed5bce750 <col:131> '_Bool' lvalue Var 0x559ed5bc8ce0 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559ed5bce9e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559ed5bce9d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559ed5bce7e0 <col:148> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x559ed5bce9b0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559ed5bce980 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559ed5bce8a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559ed5bce858 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559ed5bce840 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559ed5bce800 <col:166> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559ed5bce888 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559ed5bce870 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559ed5bce820 <col:184> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559ed5bce938 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559ed5bce8f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559ed5bce8c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559ed5bce968 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559ed5bce950 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559ed5bce918 <col:212> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559ed5bcf0e8 <line:785:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bceb18 <col:3> '_Bool' lvalue Var 0x559ed5bc8ce0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bcf0d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559ed5bcf0a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559ed5bcf058 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559ed5bcf040 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559ed5bceb60 <col:20> '_Bool' lvalue Var 0x559ed5bc9508 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559ed5bcf088 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559ed5bcf070 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559ed5bceb80 <col:36> '_Bool' lvalue Var 0x559ed5bc8ce0 'a$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x559ed5bcf020 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559ed5bceff0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559ed5bced90 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559ed5bcecb0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559ed5bcebd8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559ed5bcebc0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559ed5bceba0 <col:55> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559ed5bcec90 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559ed5bcec28 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559ed5bcec10 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559ed5bcebf0 <col:74> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559ed5bcec78 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559ed5bcec60 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559ed5bcec40 <col:93> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559ed5bced70 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559ed5bced08 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559ed5bcecf0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559ed5bcecd0 <col:112> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559ed5bced58 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559ed5bced40 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559ed5bced20 <col:131> '_Bool' lvalue Var 0x559ed5bc8ce0 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559ed5bcefd8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559ed5bcefc0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559ed5bcedb0 <col:148> '_Bool' lvalue Var 0x559ed5bc8ce0 'a$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x559ed5bcefa0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559ed5bcef70 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559ed5bcee70 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559ed5bcee28 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559ed5bcee10 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559ed5bcedd0 <col:166> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559ed5bcee58 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559ed5bcee40 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559ed5bcedf0 <col:184> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559ed5bcef40 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559ed5bceec0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559ed5bcee90 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559ed5bcef58 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559ed5bcef18 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559ed5bceee8 <col:219> 'int' 0
|   |-BinaryOperator 0x559ed5bcf160 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559ed5bcf108 <col:3> 'int' lvalue Var 0x559ed5bc86c0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x559ed5bcf148 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ed5bcf128 <col:25> 'int' lvalue Var 0x559ed5bc87e0 'a' 'int'
|   |-BinaryOperator 0x559ed5bcf290 <line:787:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x559ed5bcf180 <col:3> 'int' lvalue Var 0x559ed5bc87e0 'a' 'int'
|   | `-ConditionalOperator 0x559ed5bcf260 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559ed5bcf218 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559ed5bcf200 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559ed5bcf1a0 <col:7> '_Bool' lvalue Var 0x559ed5bc8878 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559ed5bcf230 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559ed5bcf1c0 <col:25> 'int' lvalue Var 0x559ed5bc88f8 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559ed5bcf248 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559ed5bcf1e0 <col:37> 'int' lvalue Var 0x559ed5bc87e0 'a' 'int'
|   |-BinaryOperator 0x559ed5bcf328 <line:788:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bcf2b0 <col:3> '_Bool' lvalue Var 0x559ed5bc8878 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559ed5bcf300 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559ed5bcf2d0 <col:28> 'int' 0
|   |-CallExpr 0x559ed5bcf380 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcf368 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcf348 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559ed5bcf3d8 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559ed5bcf3c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bcf3a0 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559ed5bcf6c0 <line:791:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559ed5bcf3f8 <col:3> 'int' lvalue Var 0x559ed5bc87e0 'a' 'int'
|   | `-ConditionalOperator 0x559ed5bcf690 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559ed5bcf4b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559ed5bcf470 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559ed5bcf458 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559ed5bcf418 <col:7> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559ed5bcf4a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559ed5bcf488 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559ed5bcf438 <col:25> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x559ed5bcf678 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559ed5bcf4d8 <col:42> 'int' lvalue Var 0x559ed5bc8e58 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x559ed5bcf658 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559ed5bcf628 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559ed5bcf598 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559ed5bcf550 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559ed5bcf538 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559ed5bcf4f8 <col:55> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559ed5bcf580 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559ed5bcf568 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559ed5bcf518 <col:73> '_Bool' lvalue Var 0x559ed5bc8ce0 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559ed5bcf5f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559ed5bcf5b8 <col:90> 'int' lvalue Var 0x559ed5bc8f50 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559ed5bcf610 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559ed5bcf5d8 <col:102> 'int' lvalue Var 0x559ed5bc87e0 'a' 'int'
|   |-BinaryOperator 0x559ed5bcf8c8 <line:792:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bcf6e0 <col:3> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bcf8b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559ed5bcf880 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559ed5bcf7a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559ed5bcf758 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559ed5bcf740 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559ed5bcf700 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559ed5bcf788 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559ed5bcf770 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559ed5bcf720 <col:38> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559ed5bcf838 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559ed5bcf7f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559ed5bcf7c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559ed5bcf868 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559ed5bcf850 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559ed5bcf818 <col:66> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559ed5bcfbd0 <line:793:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bcf8e8 <col:3> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bcfbb8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559ed5bcfb88 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559ed5bcfa88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559ed5bcf9a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559ed5bcf960 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559ed5bcf948 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559ed5bcf908 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559ed5bcf990 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559ed5bcf978 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559ed5bcf928 <col:38> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559ed5bcfa68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559ed5bcfa20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559ed5bcfa08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559ed5bcf9c8 <col:56> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559ed5bcfa50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559ed5bcfa38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559ed5bcf9e8 <col:74> '_Bool' lvalue Var 0x559ed5bc8ce0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559ed5bcfb20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559ed5bcfad8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559ed5bcfaa8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559ed5bcfb70 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559ed5bcfb38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559ed5bcfb00 <col:102> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559ed5bcfdd8 <line:794:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bcfbf0 <col:3> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bcfdc0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559ed5bcfd90 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559ed5bcfcb0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559ed5bcfc68 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559ed5bcfc50 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559ed5bcfc10 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559ed5bcfc98 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559ed5bcfc80 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559ed5bcfc30 <col:38> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559ed5bcfd48 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559ed5bcfd00 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559ed5bcfcd0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559ed5bcfd78 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559ed5bcfd60 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559ed5bcfd28 <col:66> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559ed5bd00c0 <line:795:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559ed5bcfdf8 <col:3> '_Bool' lvalue Var 0x559ed5bc8ce0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559ed5bd00a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559ed5bd0078 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559ed5bcff98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559ed5bcfeb8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559ed5bcfe70 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559ed5bcfe58 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559ed5bcfe18 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559ed5bcfea0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559ed5bcfe88 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559ed5bcfe38 <col:38> '_Bool' lvalue Var 0x559ed5bc8b00 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559ed5bcff78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559ed5bcff30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559ed5bcff18 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559ed5bcfed8 <col:56> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559ed5bcff60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559ed5bcff48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559ed5bcfef8 <col:74> '_Bool' lvalue Var 0x559ed5bc8ce0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559ed5bd0030 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559ed5bcffe8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559ed5bcffb8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559ed5bd0060 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559ed5bd0048 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559ed5bd0010 <col:102> '_Bool' lvalue Var 0x559ed5bc8ce0 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x559ed5bd0118 <line:796:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559ed5bd0100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bd00e0 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559ed5bd0170 <line:797:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559ed5bd0158 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bd0138 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559ed5bd0228 <line:798:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559ed5bd0190 <col:3> 'int' lvalue Var 0x559ed5bc8120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559ed5bd0208 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559ed5bd01f0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559ed5bd01b0 <col:22> 'int' lvalue Var 0x559ed5bc8120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559ed5bd01d0 <col:41> 'int' 1
|   |-CallExpr 0x559ed5bd0280 <line:799:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559ed5bd0268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ed5bd0248 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559ed5bd02f8 <line:800:3, col:36>
|     `-CallExpr 0x559ed5bd02d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559ed5bd02c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559ed5bd02a0 <col:10> 'void *(void)' Function 0x559ed5b6e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559ed5bd0440 prev 0x559ed5bc7e68 <line:802:1, line:804:1> line:802:6 fence 'void ()'
| `-CompoundStmt 0x559ed5bd04e0 <line:803:1, line:804:1>
|-FunctionDecl 0x559ed5bd0510 prev 0x559ed5bc7f28 <line:805:1, line:807:1> line:805:6 isync 'void ()'
| `-CompoundStmt 0x559ed5bd05b0 <line:806:1, line:807:1>
|-FunctionDecl 0x559ed5bd05e0 prev 0x559ed5bc7fe8 <line:808:1, line:810:1> line:808:6 lwfence 'void ()'
| `-CompoundStmt 0x559ed5bd0680 <line:809:1, line:810:1>
`-FunctionDecl 0x559ed5bd06e8 <line:811:1, line:835:1> line:811:5 main 'int ()'
  `-CompoundStmt 0x559ed5bd2478 <line:812:1, line:835:1>
    |-DeclStmt 0x559ed5bd0800 <line:813:3, col:17>
    | `-VarDecl 0x559ed5bd0798 <col:3, col:13> col:13 used t259 'pthread_t':'unsigned long'
    |-CallExpr 0x559ed5bd0a08 <line:814:3, col:53> 'int'
    | |-ImplicitCastExpr 0x559ed5bd09f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559ed5bd0818 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559ed5baf488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559ed5bd0858 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559ed5bd0838 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559ed5bd0798 't259' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559ed5bd0a48 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559ed5bd08d0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x559ed5bd08a8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559ed5bd0870 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x559ed5bd0a60 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559ed5bd08f0 <col:38> 'void *(void *)' Function 0x559ed5bc9620 'P0' 'void *(void *)'
    | `-ParenExpr 0x559ed5bd0970 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x559ed5bd0948 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559ed5bd0910 <col:51> 'int' 0
    |-DeclStmt 0x559ed5bd0af0 <line:815:3, col:17>
    | `-VarDecl 0x559ed5bd0a88 <col:3, col:13> col:13 used t260 'pthread_t':'unsigned long'
    |-CallExpr 0x559ed5bd0cb8 <line:816:3, col:53> 'int'
    | |-ImplicitCastExpr 0x559ed5bd0ca0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559ed5bd0b08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559ed5baf488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559ed5bd0b48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559ed5bd0b28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559ed5bd0a88 't260' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559ed5bd0cf8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559ed5bd0be0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x559ed5bd0bb8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559ed5bd0b80 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x559ed5bd0d10 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559ed5bd0c00 <col:38> 'void *(void *)' Function 0x559ed5bcb008 'P1' 'void *(void *)'
    | `-ParenExpr 0x559ed5bd0c80 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x559ed5bd0c58 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559ed5bd0c20 <col:51> 'int' 0
    |-DeclStmt 0x559ed5bd0da0 <line:817:3, col:17>
    | `-VarDecl 0x559ed5bd0d38 <col:3, col:13> col:13 used t261 'pthread_t':'unsigned long'
    |-CallExpr 0x559ed5bd0f48 <line:818:3, col:53> 'int'
    | |-ImplicitCastExpr 0x559ed5bd0f30 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559ed5bd0db8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559ed5baf488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559ed5bd0df8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559ed5bd0dd8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559ed5bd0d38 't261' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559ed5bd0f88 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559ed5bd0e70 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x559ed5bd0e48 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559ed5bd0e10 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x559ed5bd0fa0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559ed5bd0e90 <col:38> 'void *(void *)' Function 0x559ed5bcc600 'P2' 'void *(void *)'
    | `-ParenExpr 0x559ed5bd0f10 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x559ed5bd0ee8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559ed5bd0eb0 <col:51> 'int' 0
    |-CallExpr 0x559ed5bd0ff0 <line:819:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559ed5bd0fd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559ed5bd0fb8 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559ed5bd10c0 <line:820:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x559ed5bd1010 <col:3> '_Bool' lvalue Var 0x559ed5bc9040 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x559ed5bd10a8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x559ed5bd1088 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x559ed5bd1070 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x559ed5bd1030 <col:21> 'int' lvalue Var 0x559ed5bc8120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x559ed5bd1050 <col:41> 'int' 3
    |-CallExpr 0x559ed5bd1118 <line:821:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559ed5bd1100 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559ed5bd10e0 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559ed5bd1190 <line:822:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559ed5bd1178 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559ed5bd1138 <col:3> 'void (int)' Function 0x559ed5b6e790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x559ed5bd11d0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559ed5bd11b8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559ed5bd1158 <col:21> '_Bool' lvalue Var 0x559ed5bc9040 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x559ed5bd1220 <line:823:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559ed5bd1208 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559ed5bd11e8 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559ed5bd1508 <line:824:3, col:103> 'int' '='
    | |-DeclRefExpr 0x559ed5bd1240 <col:3> 'int' lvalue Var 0x559ed5bc87e0 'a' 'int'
    | `-ConditionalOperator 0x559ed5bd14d8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x559ed5bd1300 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x559ed5bd12b8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x559ed5bd12a0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x559ed5bd1260 <col:7> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x559ed5bd12e8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x559ed5bd12d0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x559ed5bd1280 <col:25> '_Bool' lvalue Var 0x559ed5bc8970 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x559ed5bd14c0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559ed5bd1320 <col:42> 'int' lvalue Var 0x559ed5bc8e58 'a$w_buff0' 'int'
    |   `-ParenExpr 0x559ed5bd14a0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x559ed5bd1470 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x559ed5bd13e0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x559ed5bd1398 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x559ed5bd1380 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x559ed5bd1340 <col:55> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x559ed5bd13c8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x559ed5bd13b0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x559ed5bd1360 <col:73> '_Bool' lvalue Var 0x559ed5bc8b78 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559ed5bd1440 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x559ed5bd1400 <col:90> 'int' lvalue Var 0x559ed5bc8f50 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x559ed5bd1458 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x559ed5bd1420 <col:102> 'int' lvalue Var 0x559ed5bc87e0 'a' 'int'
    |-BinaryOperator 0x559ed5bd1710 <line:825:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559ed5bd1528 <col:3> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x559ed5bd16f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559ed5bd16c8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559ed5bd15e8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559ed5bd15a0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559ed5bd1588 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559ed5bd1548 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559ed5bd15d0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559ed5bd15b8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559ed5bd1568 <col:38> '_Bool' lvalue Var 0x559ed5bc8970 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559ed5bd1680 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559ed5bd1638 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559ed5bd1608 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559ed5bd16b0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559ed5bd1698 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559ed5bd1660 <col:66> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x559ed5bd19f8 <line:826:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559ed5bd1730 <col:3> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x559ed5bd19e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559ed5bd19b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559ed5bd18d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559ed5bd17f0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559ed5bd17a8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559ed5bd1790 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559ed5bd1750 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559ed5bd17d8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559ed5bd17c0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559ed5bd1770 <col:38> '_Bool' lvalue Var 0x559ed5bc8970 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559ed5bd18b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559ed5bd1868 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559ed5bd1850 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559ed5bd1810 <col:56> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559ed5bd1898 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559ed5bd1880 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559ed5bd1830 <col:74> '_Bool' lvalue Var 0x559ed5bc8b78 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559ed5bd1968 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559ed5bd1920 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559ed5bd18f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559ed5bd1998 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559ed5bd1980 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559ed5bd1948 <col:102> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x559ed5bd1c20 <line:827:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559ed5bd1a18 <col:3> '_Bool' lvalue Var 0x559ed5bc8970 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559ed5bd1c08 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559ed5bd1bd8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559ed5bd1ad8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559ed5bd1a90 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559ed5bd1a78 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559ed5bd1a38 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559ed5bd1ac0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559ed5bd1aa8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559ed5bd1a58 <col:38> '_Bool' lvalue Var 0x559ed5bc8970 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559ed5bd1b90 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559ed5bd1b28 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559ed5bd1af8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559ed5bd1bc0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559ed5bd1ba8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559ed5bd1b50 <col:66> '_Bool' lvalue Var 0x559ed5bc8970 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x559ed5bd1f08 <line:828:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559ed5bd1c40 <col:3> '_Bool' lvalue Var 0x559ed5bc8b78 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559ed5bd1ef0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559ed5bd1ec0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559ed5bd1de0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559ed5bd1d00 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559ed5bd1cb8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559ed5bd1ca0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559ed5bd1c60 <col:20> '_Bool' lvalue Var 0x559ed5bc8ed0 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559ed5bd1ce8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559ed5bd1cd0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559ed5bd1c80 <col:38> '_Bool' lvalue Var 0x559ed5bc8970 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559ed5bd1dc0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559ed5bd1d78 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559ed5bd1d60 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559ed5bd1d20 <col:56> '_Bool' lvalue Var 0x559ed5bc8fc8 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559ed5bd1da8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559ed5bd1d90 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559ed5bd1d40 <col:74> '_Bool' lvalue Var 0x559ed5bc8b78 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559ed5bd1e78 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559ed5bd1e30 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559ed5bd1e00 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559ed5bd1ea8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559ed5bd1e90 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559ed5bd1e58 <col:102> '_Bool' lvalue Var 0x559ed5bc8b78 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x559ed5bd1f60 <line:829:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559ed5bd1f48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559ed5bd1f28 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559ed5bd1fb8 <line:830:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559ed5bd1fa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559ed5bd1f80 <col:3> 'void ()' Function 0x559ed5b6ee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559ed5bd2320 <line:831:3, col:159> '_Bool' '='
    | |-DeclRefExpr 0x559ed5bd1fd8 <col:3> '_Bool' lvalue Var 0x559ed5bc90b8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x559ed5bd2308 <col:21, col:159> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x559ed5bd22f0 <col:21, col:159> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x559ed5bd22d0 <col:22, col:159> 'int'
    |       `-BinaryOperator 0x559ed5bd22b0 <col:23, col:158> 'int' '&&'
    |         |-BinaryOperator 0x559ed5bd2218 <col:23, col:130> 'int' '&&'
    |         | |-BinaryOperator 0x559ed5bd2180 <col:23, col:102> 'int' '&&'
    |         | | |-BinaryOperator 0x559ed5bd20e8 <col:23, col:74> 'int' '&&'
    |         | | | |-BinaryOperator 0x559ed5bd2050 <col:23, col:46> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x559ed5bd2038 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x559ed5bd1ff8 <col:23> 'int' lvalue Var 0x559ed5bc8240 '__unbuffered_p0_EAX' 'int'
    |         | | | | `-IntegerLiteral 0x559ed5bd2018 <col:46> 'int' 0
    |         | | | `-BinaryOperator 0x559ed5bd20c8 <col:51, col:74> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x559ed5bd20b0 <col:51> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x559ed5bd2070 <col:51> 'int' lvalue Var 0x559ed5bc8360 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x559ed5bd2090 <col:74> 'int' 1
    |         | | `-BinaryOperator 0x559ed5bd2160 <col:79, col:102> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x559ed5bd2148 <col:79> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x559ed5bd2108 <col:79> 'int' lvalue Var 0x559ed5bc8480 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x559ed5bd2128 <col:102> 'int' 0
    |         | `-BinaryOperator 0x559ed5bd21f8 <col:107, col:130> 'int' '=='
    |         |   |-ImplicitCastExpr 0x559ed5bd21e0 <col:107> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x559ed5bd21a0 <col:107> 'int' lvalue Var 0x559ed5bc85a0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x559ed5bd21c0 <col:130> 'int' 1
    |         `-BinaryOperator 0x559ed5bd2290 <col:135, col:158> 'int' '=='
    |           |-ImplicitCastExpr 0x559ed5bd2278 <col:135> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x559ed5bd2238 <col:135> 'int' lvalue Var 0x559ed5bc86c0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x559ed5bd2258 <col:158> 'int' 0
    |-CallExpr 0x559ed5bd2378 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559ed5bd2360 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559ed5bd2340 <col:3> 'void ()' Function 0x559ed5b6ef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559ed5bd23f0 <line:833:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559ed5bd23d8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559ed5bd2398 <col:3> 'void (int)' Function 0x559ed5b6ebc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x559ed5bd2430 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559ed5bd2418 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559ed5bd23b8 <col:21> '_Bool' lvalue Var 0x559ed5bc90b8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x559ed5bd2468 <line:834:3, col:10>
      `-IntegerLiteral 0x559ed5bd2448 <col:10> 'int' 0
