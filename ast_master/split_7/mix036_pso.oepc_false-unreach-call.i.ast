TranslationUnitDecl 0x55833eef8e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55833eef96d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55833eef93b0 '__int128'
|-TypedefDecl 0x55833eef9748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55833eef93d0 'unsigned __int128'
|-TypedefDecl 0x55833eef9a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55833eef9820 'struct __NSConstantString_tag'
|   `-Record 0x55833eef97a0 '__NSConstantString_tag'
|-TypedefDecl 0x55833eef9af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55833eef9ab0 'char *'
|   `-BuiltinType 0x55833eef8eb0 'char'
|-TypedefDecl 0x55833ef38650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55833eef9d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55833eef9bd0 'struct __va_list_tag'
|     `-Record 0x55833eef9b50 '__va_list_tag'
|-FunctionDecl 0x55833ef38790 <./split_7/mix036_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55833ef386c0 <col:31> col:34 'int'
|-FunctionDecl 0x55833ef38958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55833ef38a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55833ef38bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55833ef38b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55833ef38df8 <col:40, col:99>
|   |-IfStmt 0x55833ef38dc8 <col:42, col:88>
|   | |-UnaryOperator 0x55833ef38ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55833ef38c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55833ef38c70 <col:47> 'int' lvalue ParmVar 0x55833ef38b38 'expression' 'int'
|   | `-CompoundStmt 0x55833ef38db0 <col:59, col:88>
|   |   `-LabelStmt 0x55833ef38d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55833ef38d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55833ef38d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55833ef38cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55833ef38a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55833ef38de0 <col:89>
|   `-ReturnStmt 0x55833ef38de8 <col:91>
|-FunctionDecl 0x55833ef38e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55833ef38f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55833ef39280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55833ef38fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55833ef39038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55833ef390b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55833ef39138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55833ef39340 <line:10:22>
|-FunctionDecl 0x55833ef5f390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55833ef393b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55833ef39430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55833ef394b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55833ef39530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55833ef5f450 <line:13:22>
|-FunctionDecl 0x55833ef5f700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55833ef5f4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55833ef5f540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55833ef5f5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55833ef5f7b8 <line:15:22>
|-TypedefDecl 0x55833ef5f828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55833eef8f70 'unsigned char'
|-TypedefDecl 0x55833ef5f898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55833eef8f90 'unsigned short'
|-TypedefDecl 0x55833ef5f908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55833eef8fb0 'unsigned int'
|-TypedefDecl 0x55833ef5f978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-TypedefDecl 0x55833ef5f9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55833eef8ed0 'signed char'
|-TypedefDecl 0x55833ef5fa58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55833eef8f70 'unsigned char'
|-TypedefDecl 0x55833ef5fac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55833eef8ef0 'short'
|-TypedefDecl 0x55833ef5fb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55833eef8f90 'unsigned short'
|-TypedefDecl 0x55833ef5fba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55833eef8f10 'int'
|-TypedefDecl 0x55833ef5fc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55833eef8fb0 'unsigned int'
|-TypedefDecl 0x55833ef5fc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef5fcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-TypedefDecl 0x55833ef5fd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef5fdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-TypedefDecl 0x55833ef5fe48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-TypedefDecl 0x55833ef5feb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55833eef8fb0 'unsigned int'
|-TypedefDecl 0x55833ef5ff28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55833eef8fb0 'unsigned int'
|-TypedefDecl 0x55833ef5ff98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-TypedefDecl 0x55833ef60008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-TypedefDecl 0x55833ef60078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55833eef8fb0 'unsigned int'
|-TypedefDecl 0x55833ef600e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-TypedefDecl 0x55833ef60158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef601c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef60238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55833eef8f10 'int'
|-RecordDecl 0x55833ef60290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55833ef60408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55833ef604c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55833ef60460 'struct __fsid_t' sugar
|   `-RecordType 0x55833ef60310 '__fsid_t'
|     `-Record 0x55833ef60290 ''
|-TypedefDecl 0x55833ef60548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef605b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-TypedefDecl 0x55833ef60628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-TypedefDecl 0x55833ef60698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55833eef8fb0 'unsigned int'
|-TypedefDecl 0x55833ef60708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef60778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55833eef8fb0 'unsigned int'
|-TypedefDecl 0x55833ef607e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef60858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55833eef8f10 'int'
|-TypedefDecl 0x55833ef608c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55833eef8f10 'int'
|-TypedefDecl 0x55833ef60938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55833eef8f10 'int'
|-TypedefDecl 0x55833ef609a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55833eef9630 'void *'
|   `-BuiltinType 0x55833eef8e70 'void'
|-TypedefDecl 0x55833ef60a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef60a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef60af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef60b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-TypedefDecl 0x55833ef60bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-TypedefDecl 0x55833ef60c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-TypedefDecl 0x55833ef60cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-TypedefDecl 0x55833ef60d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef60d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef60e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef60e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-TypedefDecl 0x55833ef60f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55833ef60ed0 '__off64_t' sugar
|   |-Typedef 0x55833ef601c8 '__off64_t'
|   `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef61000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55833ef60fc0 '__quad_t *'
|   `-TypedefType 0x55833ef60f60 '__quad_t' sugar
|     |-Typedef 0x55833ef5fd68 '__quad_t'
|     `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef61070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55833eef9ab0 'char *'
|   `-BuiltinType 0x55833eef8eb0 'char'
|-TypedefDecl 0x55833ef610e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef61150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55833eef8fb0 'unsigned int'
|-FunctionDecl 0x55833ef61298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55833ef611c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55833ef625e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55833ef625d8 <line:72:3, col:34>
|     `-CallExpr 0x55833ef62598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55833ef62580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55833ef62510 <col:10> '<builtin fn type>' Function 0x55833ef62380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55833ef625c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55833ef62530 <col:29> 'unsigned int' lvalue ParmVar 0x55833ef611c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55833ef62380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55833ef62420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55833ef62490 <col:10> Implicit
| `-ConstAttr 0x55833ef624e8 <col:10> Implicit
|-FunctionDecl 0x55833ef62740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55833ef62638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55833ef62a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55833ef62a48 <line:77:3, col:34>
|     `-CallExpr 0x55833ef62a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55833ef629f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55833ef62978 <col:10> '<builtin fn type>' Function 0x55833ef627e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55833ef62a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55833ef62998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55833ef62638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55833ef627e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55833ef62888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55833ef628f8 <col:10> Implicit
| `-ConstAttr 0x55833ef62950 <col:10> Implicit
|-TypedefDecl 0x55833ef62a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-TypedefDecl 0x55833ef62b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55833ef62ae0 '__time_t' sugar
|   |-Typedef 0x55833ef60708 '__time_t'
|   `-BuiltinType 0x55833eef8f30 'long'
|-RecordDecl 0x55833ef62b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55833ef62c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55833ef62cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55833ef62d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55833ef62d10 '__pid_t' sugar
|   |-Typedef 0x55833ef60238 '__pid_t'
|   `-BuiltinType 0x55833eef8f10 'int'
|-RecordDecl 0x55833ef62da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55833ef62e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55833ef62eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55833ef62f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55833ef62fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-RecordDecl 0x55833ef63030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55833ef632c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55833ef643a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55833ef63310 'struct cpu_set_t' sugar
|   `-RecordType 0x55833ef630b0 'cpu_set_t'
|     `-Record 0x55833ef63030 ''
|-FunctionDecl 0x55833ef64678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55833ef64448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55833ef64550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55833ef64728 <line:107:19>
|-FunctionDecl 0x55833ef64900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55833ef64790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55833ef649a8 <col:69>
|-FunctionDecl 0x55833ef64b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55833ef64a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55833ef64bc8 <col:64>
|-FunctionDecl 0x55833ef64e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55833ef64c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55833ef64d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55833ef64f38 <line:113:22>
|-FunctionDecl 0x55833ef651b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55833ef64fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55833ef65098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55833ef65268 <col:88>
|-FunctionDecl 0x55833ef65588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55833ef652d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55833ef653b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55833ef65440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55833ef65640 <col:62>
|-FunctionDecl 0x55833ef657b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55833ef656a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55833ef65860 <col:63>
|-FunctionDecl 0x55833ef65988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55833ef65a28 <col:47>
|-FunctionDecl 0x55833ef65b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55833ef65a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55833ef65bd8 <col:69>
|-FunctionDecl 0x55833ef65ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55833ef65c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55833ef65d88 <col:69>
|-FunctionDecl 0x55833ef66048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55833ef65df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55833ef65f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55833ef660f8 <col:88>
|-TypedefDecl 0x55833ef66188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55833ef66150 '__clock_t' sugar
|   |-Typedef 0x55833ef60548 '__clock_t'
|   `-BuiltinType 0x55833eef8f30 'long'
|-TypedefDecl 0x55833ef66218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55833ef661e0 '__clockid_t' sugar
|   |-Typedef 0x55833ef60938 '__clockid_t'
|   `-BuiltinType 0x55833eef8f10 'int'
|-TypedefDecl 0x55833ef662a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55833ef66270 '__timer_t' sugar
|   |-Typedef 0x55833ef609a8 '__timer_t'
|   `-PointerType 0x55833eef9630 'void *'
|     `-BuiltinType 0x55833eef8e70 'void'
|-RecordDecl 0x55833ef66300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55833ef663d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55833ef66440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55833ef664a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55833ef66510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55833ef66578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55833ef665e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55833ef66648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55833ef666b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55833ef66718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55833ef66780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55833ef667e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55833ef66838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55833ef66908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55833ef66978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55833ef66a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55833ef66bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55833ef66c90 <col:45>
|-FunctionDecl 0x55833ef66e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55833ef66d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55833ef66f18 <col:54>
|-FunctionDecl 0x55833ef67118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55833ef66f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55833ef66ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55833ef671c8 <line:157:22>
| `-ConstAttr 0x55833ef67220 <col:63>
|-FunctionDecl 0x55833ef68050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55833ef67318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55833ef680f8 <col:56>
|-FunctionDecl 0x55833ef684a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55833ef68168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55833ef681e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55833ef68260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55833ef68358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55833ef68560 <col:54>
|-RecordDecl 0x55833ef685b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55833ef68668 parent 0x55833eef8e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55833ef688c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55833ef68968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55833ef689d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55833ef68a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55833ef68b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55833ef68c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55833ef68bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55833ef68b80 'struct __locale_struct' sugar
|     `-RecordType 0x55833ef68640 'struct __locale_struct'
|       `-Record 0x55833ef685b8 '__locale_struct'
|-TypedefDecl 0x55833ef68cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55833ef68cc0 '__locale_t' sugar
|   |-Typedef 0x55833ef68c48 '__locale_t'
|   `-PointerType 0x55833ef68bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55833ef68b80 'struct __locale_struct' sugar
|       `-RecordType 0x55833ef68640 'struct __locale_struct'
|         `-Record 0x55833ef685b8 '__locale_struct'
|-FunctionDecl 0x55833ef6a110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55833ef68d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55833ef68de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55833ef68e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55833ef68ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55833ef68f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55833ef6a1d8 <col:40>
|-FunctionDecl 0x55833ef6a3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55833ef6a2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55833ef6a470 <col:66>
|-FunctionDecl 0x55833ef6a580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55833ef6a4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55833ef6a628 <col:69>
|-FunctionDecl 0x55833ef6a858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55833ef6a690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55833ef6a720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55833ef6a908 <col:52>
|-FunctionDecl 0x55833ef6aab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55833ef6a970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55833ef6aa00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55833ef6ab60 <col:55>
|-FunctionDecl 0x55833ef6acf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55833ef6abe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55833ef6ada0 <col:62>
|-FunctionDecl 0x55833ef6af18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55833ef6ae08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55833ef6afc0 <col:60>
|-FunctionDecl 0x55833ef6b2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55833ef6b118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55833ef6b198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55833ef6b368 <col:44>
|-FunctionDecl 0x55833ef6b578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55833ef6b3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55833ef6b450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55833ef6b628 <col:49>
|-VarDecl 0x55833ef6b728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55833ef6b7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55833ef6b828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55833ef6b8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55833ef6ba20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55833ef6bac0 <col:42>
|-VarDecl 0x55833ef6bb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55833ef6bbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55833ef6bd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55833ef6bc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55833ef6bde0 <col:57>
|-FunctionDecl 0x55833ef6bef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55833ef6be60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55833ef6bf98 <col:56>
|-FunctionDecl 0x55833ef6c0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55833ef6c018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55833ef6c178 <col:59>
|-FunctionDecl 0x55833ef6c280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55833ef6c1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55833ef6c328 <col:48>
| `-ConstAttr 0x55833ef6c380 <col:89>
|-FunctionDecl 0x55833ef6c5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55833ef6c438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55833ef6c4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55833ef6c848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55833ef6c6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55833ef6c768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55833ef6c8f8 <col:88>
|-FunctionDecl 0x55833ef6ca90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55833ef6c960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55833ef6c9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55833ef6cb40 <col:88>
|-FunctionDecl 0x55833ef6cd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55833ef6cba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55833ef6cc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55833ef6ce08 <line:208:22>
|-FunctionDecl 0x55833ef6d178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55833ef6ce70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55833ef6cef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55833ef6cf80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55833ef6d010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55833ef6d478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55833ef6d278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55833ef6d350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55833ef6d528 <col:85>
|-FunctionDecl 0x55833ef6d918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55833ef6d590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55833ef6d6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55833ef6d7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55833ef6d9d0 <col:52>
|-FunctionDecl 0x55833ef6db48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55833ef6da38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55833ef6dbf0 <col:61>
|-FunctionDecl 0x55833ef6e0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55833ef6dc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55833ef6dcd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55833ef6de08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55833ef6def8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55833ef6e1b0 <col:62>
|-FunctionDecl 0x55833ef6e3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55833ef6e218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55833ef6e2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55833ef6e478 <line:221:22>
|-FunctionDecl 0x55833ef6e578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55833ef6e4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55833ef6e620 <col:65>
|-TypedefDecl 0x55833ef6e690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55833eef8fd0 'unsigned long'
|-RecordDecl 0x55833ef6e6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55833ef6e830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55833ef6e898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55833ef6e948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55833ef6e8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55833ef6e770 'union pthread_attr_t'
|     `-Record 0x55833ef6e6e8 'pthread_attr_t'
|-RecordDecl 0x55833ef6e9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55833ef6eb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55833ef6eb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55833ef6ec40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55833ef6ebe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55833ef6ea20 'struct __pthread_internal_list'
|     `-Record 0x55833ef6e9a0 '__pthread_internal_list'
|-RecordDecl 0x55833ef6ecb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55833ef6ed58 parent 0x55833eef8e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55833ef6ee30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55833ef6ee98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55833ef6ef00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55833ef6ef68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55833ef6efd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55833ef6f038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55833ef73110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55833ef731c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55833ef732b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55833ef73318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55833ef734a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55833ef73440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55833ef6ed30 'pthread_mutex_t'
|     `-Record 0x55833ef6ecb0 ''
|-RecordDecl 0x55833ef73510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55833ef73650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55833ef736b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55833ef73770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55833ef73710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55833ef73590 'pthread_mutexattr_t'
|     `-Record 0x55833ef73510 ''
|-RecordDecl 0x55833ef737e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55833ef73888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55833ef73950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55833ef739b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55833ef73a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55833ef73a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55833ef73af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55833ef73b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55833ef73bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55833ef73c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55833ef73ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_7/mix036_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_7/mix036_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55833ef73dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55833ef73e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55833ef73f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55833ef73f10 'union pthread_cond_t' sugar
|   `-RecordType 0x55833ef73860 'pthread_cond_t'
|     `-Record 0x55833ef737e0 ''
|-RecordDecl 0x55833ef73fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55833ef75130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55833ef75198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55833ef75250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55833ef751f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55833ef74060 'pthread_condattr_t'
|     `-Record 0x55833ef73fe0 ''
|-TypedefDecl 0x55833ef752d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55833eef8fb0 'unsigned int'
|-TypedefDecl 0x55833ef75348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55833eef8f10 'int'
|-RecordDecl 0x55833ef753a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55833ef75448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55833ef75510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55833ef75578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55833ef755e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55833ef75648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55833ef756b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55833ef75718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55833ef75780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55833ef757e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55833ef75850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55833ef758b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55833ef75920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55833ef759d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_7/mix036_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_7/mix036_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55833ef75a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55833ef75ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55833ef75c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55833ef75bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55833ef75420 'pthread_rwlock_t'
|     `-Record 0x55833ef753a0 ''
|-RecordDecl 0x55833ef75ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55833ef75de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55833ef75e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55833ef75f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55833ef75ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55833ef75d20 'pthread_rwlockattr_t'
|     `-Record 0x55833ef75ca0 ''
|-TypedefDecl 0x55833ef75f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55833eef8f14 'volatile int' volatile
|   `-BuiltinType 0x55833eef8f10 'int'
|-RecordDecl 0x55833ef75fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55833ef77140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55833ef771a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55833ef77260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55833ef77200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55833ef76060 'pthread_barrier_t'
|     `-Record 0x55833ef75fe0 ''
|-RecordDecl 0x55833ef772d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55833ef773d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55833ef77438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55833ef774f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55833ef77490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55833ef77350 'pthread_barrierattr_t'
|     `-Record 0x55833ef772d0 ''
|-TypedefDecl 0x55833ef77608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55833ef775a0 'long [8]' 8 
|   `-BuiltinType 0x55833eef8f30 'long'
|-EnumDecl 0x55833ef77660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55833ef77728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55833ef77778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55833ef777c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55833ef77898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55833ef778e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55833ef77938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55833ef77988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55833ef77a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55833ef779f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55833ef779d8 <col:26> 'int' EnumConstant 0x55833ef77898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55833ef77a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55833ef77a80 <col:29> 'int'
| |   `-DeclRefExpr 0x55833ef77a60 <col:29> 'int' EnumConstant 0x55833ef778e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55833ef77b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55833ef77b08 <col:30> 'int'
| |   `-DeclRefExpr 0x55833ef77ae8 <col:30> 'int' EnumConstant 0x55833ef77938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55833ef77ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55833ef77b90 <col:27> 'int'
|     `-DeclRefExpr 0x55833ef77b70 <col:27> 'int' EnumConstant 0x55833ef77a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55833ef77bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55833ef77cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55833ef77d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55833ef77d38 <col:30> 'int'
| |   `-DeclRefExpr 0x55833ef77d18 <col:30> 'int' EnumConstant 0x55833ef77cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55833ef77da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55833ef77e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55833ef77e10 <col:29> 'int'
|     `-DeclRefExpr 0x55833ef77df0 <col:29> 'int' EnumConstant 0x55833ef77da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55833ef77e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55833ef77f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55833ef77f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55833ef77fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55833ef78038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55833ef78150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55833ef781a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55833ef781f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55833ef78278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55833ef78260 <col:31> 'int'
|     `-DeclRefExpr 0x55833ef78240 <col:31> 'int' EnumConstant 0x55833ef78150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55833ef782c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55833ef78398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55833ef783e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55833ef78438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55833ef78508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55833ef78558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55833ef785a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55833ef78678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55833ef786c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55833ef78718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55833ef78958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55833ef789c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55833ef78a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55833ef78b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55833ef78b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55833ef78c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55833ef78cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55833ef78d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55833ef78dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55833ef78e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55833ef79488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55833ef78f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55833ef79030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55833ef79270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55833ef792f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55833ef79548 <col:47>
| |-NonNullAttr 0x55833ef795a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55833ef795d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55833ef79700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55833ef79630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55833ef79958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55833ef797b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55833ef79838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55833ef79b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55833ef79a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55833ef79bd0 <col:60>
|-FunctionDecl 0x55833ef79d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55833ef79dc0 <col:54>
| `-ConstAttr 0x55833ef79e18 <col:95>
|-FunctionDecl 0x55833ef79fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55833ef79e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55833ef79ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55833ef7a098 <line:394:19>
| `-ConstAttr 0x55833ef7a0f0 <col:60>
|-FunctionDecl 0x55833ef7bb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55833ef7b9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55833ef7bbb0 <col:71>
| `-NonNullAttr 0x55833ef7bc08 <col:112, col:126> 1
|-FunctionDecl 0x55833ef7bd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55833ef7bc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55833ef7bdb8 <line:397:22>
| `-NonNullAttr 0x55833ef7be10 <col:63, col:77> 1
|-FunctionDecl 0x55833ef7c038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55833ef7be58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55833ef7bed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55833ef7c0e8 <line:400:22>
| `-NonNullAttr 0x55833ef7c140 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef7c348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55833ef7c188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55833ef7c208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55833ef7c3f8 <line:403:22>
| `-NonNullAttr 0x55833ef7c450 <col:63, col:77> 1
|-FunctionDecl 0x55833ef7c6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55833ef7c498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55833ef7c540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55833ef7c758 <line:406:22>
| `-NonNullAttr 0x55833ef7c7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef7d9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55833ef7c7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55833ef7c870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55833ef7da98 <line:409:22>
| `-NonNullAttr 0x55833ef7daf0 <col:63, col:77> 1
|-FunctionDecl 0x55833ef7dd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55833ef7db38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55833ef7dbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55833ef7ddd8 <line:412:22>
| `-NonNullAttr 0x55833ef7de30 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef7e068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55833ef7de78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55833ef7df08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55833ef7e118 <col:37>
| `-NonNullAttr 0x55833ef7e170 <col:78, col:95> 1 2
|-FunctionDecl 0x55833ef7e358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55833ef7e1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55833ef7e238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55833ef7e408 <line:418:22>
| `-NonNullAttr 0x55833ef7e460 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef7e5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55833ef7e4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55833ef7e528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55833ef7e698 <line:420:22>
| `-NonNullAttr 0x55833ef7e6f0 <col:63, col:77> 1
|-FunctionDecl 0x55833ef7e898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55833ef7e738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55833ef7e7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55833ef7e948 <line:423:22>
| `-NonNullAttr 0x55833ef7e9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef7eb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55833ef7ea08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55833ef7ea88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55833ef7ebf8 <line:426:22>
| `-NonNullAttr 0x55833ef7ec50 <col:63, col:77> 1
|-FunctionDecl 0x55833ef7edf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55833ef7ec98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55833ef7ed18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55833ef7eea8 <line:429:22>
| `-NonNullAttr 0x55833ef7ef00 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef7f088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55833ef7ef48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55833ef7efc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55833ef7f138 <line:431:22>
| `-NonNullAttr 0x55833ef7f190 <col:63, col:77> 1
|-FunctionDecl 0x55833ef7f3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55833ef7f1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55833ef7f258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55833ef7f468 <line:434:22>
| |-NonNullAttr 0x55833ef7f4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55833ef7f4f8 <col:100> "" ""
|-FunctionDecl 0x55833ef7f708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55833ef7f548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55833ef7f5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55833ef7f7b8 <line:437:22>
| |-NonNullAttr 0x55833ef7f810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55833ef7f848 <col:97> "" ""
|-FunctionDecl 0x55833ef7fa48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55833ef7f898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55833ef7f910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55833ef7faf8 <line:440:22>
| `-NonNullAttr 0x55833ef7fb50 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef7fcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55833ef7fb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55833ef7fc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55833ef7fd80 <line:443:22>
| `-NonNullAttr 0x55833ef7fdd8 <col:63, col:77> 1
|-FunctionDecl 0x55833ef800c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55833ef7fe28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55833ef7fea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55833ef7ff20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55833ef80180 <line:447:22>
| `-NonNullAttr 0x55833ef801d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55833ef80488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55833ef80230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55833ef802b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55833ef80328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55833ef80540 <col:43>
| `-NonNullAttr 0x55833ef80598 <col:84, col:98> 1
|-FunctionDecl 0x55833ef80858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55833ef805e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55833ef80668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55833ef806f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55833ef80910 <line:452:22>
| `-NonNullAttr 0x55833ef80968 <col:63, col:77> 3
|-FunctionDecl 0x55833ef80c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55833ef809e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55833ef80a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55833ef80af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55833ef80d30 <line:456:22>
| `-NonNullAttr 0x55833ef80d88 <col:63, col:80> 2 3
|-FunctionDecl 0x55833ef80f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55833ef80dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55833ef80e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55833ef81028 <line:458:22>
|-FunctionDecl 0x55833ef813f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55833ef810f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55833ef81290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55833ef814a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55833ef81650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55833ef81530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55833ef815b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55833ef81838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55833ef81718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55833ef81798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55833ef819f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55833ef818f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55833ef81b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55833ef81bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55833ef81c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55833ef81d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55833ef81dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55833ef81fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_7/mix036_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55833ef82098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55833ef82150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55833ef820f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55833ef81c50 '__pthread_unwind_buf_t'
| |   `-Record 0x55833ef81bd0 ''
| `-AlignedAttr 0x55833ef821a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55833ef82220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55833ef82380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55833ef823e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55833ef82450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55833ef824b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55833ef826c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55833ef825b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55833ef82808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55833ef82778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55833ef82a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55833ef828c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55833ef82aa8 <line:487:22>
|-RecordDecl 0x55833ef82b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55833ef82e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55833ef82c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55833ef82cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55833ef82ec8 <col:86>
| `-ReturnsTwiceAttr 0x55833ef82f20 <col:12> Implicit
|-FunctionDecl 0x55833ef83248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55833ef82ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55833ef83100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55833ef832f8 <line:493:22>
| `-NonNullAttr 0x55833ef83350 <col:63, col:77> 1
|-FunctionDecl 0x55833ef834c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55833ef83398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55833ef83570 <line:495:22>
| `-NonNullAttr 0x55833ef835c8 <col:63, col:77> 1
|-FunctionDecl 0x55833ef836d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55833ef83618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55833ef83778 <line:497:22>
| `-NonNullAttr 0x55833ef837d0 <col:52, col:66> 1
|-FunctionDecl 0x55833ef838d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55833ef83818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55833ef83978 <line:499:22>
| `-NonNullAttr 0x55833ef839d0 <col:52, col:66> 1
|-FunctionDecl 0x55833ef84c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55833ef84a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55833ef84ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55833ef84cd8 <col:36>
| `-NonNullAttr 0x55833ef84d30 <col:66, col:83> 1 2
|-FunctionDecl 0x55833ef84e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55833ef84d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55833ef84ed8 <line:504:22>
| `-NonNullAttr 0x55833ef84f30 <col:52, col:66> 1
|-FunctionDecl 0x55833ef851c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55833ef84fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55833ef85060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55833ef85278 <line:508:22>
| `-NonNullAttr 0x55833ef852d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef85598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55833ef85318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55833ef85398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55833ef85418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55833ef85650 <line:512:22>
| `-NonNullAttr 0x55833ef856a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55833ef857b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55833ef856f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55833ef85858 <line:514:22>
| `-NonNullAttr 0x55833ef858b0 <col:63, col:77> 1
|-FunctionDecl 0x55833ef85ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55833ef85960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55833ef85b80 <line:516:22>
| `-NonNullAttr 0x55833ef85bd8 <col:63, col:77> 1
|-FunctionDecl 0x55833ef85ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55833ef85c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55833ef85d88 <line:518:22>
| `-NonNullAttr 0x55833ef85de0 <col:63, col:77> 1
|-FunctionDecl 0x55833ef86008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55833ef85e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55833ef85ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55833ef860b8 <line:522:22>
| `-NonNullAttr 0x55833ef86110 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef86318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55833ef86158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55833ef861d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55833ef863c8 <line:525:22>
| `-NonNullAttr 0x55833ef86420 <col:63, col:77> 1
|-FunctionDecl 0x55833ef865c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55833ef86468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55833ef864e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55833ef86678 <line:528:22>
| `-NonNullAttr 0x55833ef866d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef86858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55833ef86718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55833ef86798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55833ef86908 <line:530:22>
| `-NonNullAttr 0x55833ef86960 <col:63, col:77> 1
|-FunctionDecl 0x55833ef86b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55833ef869a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55833ef86a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55833ef86bd0 <line:534:22>
| `-NonNullAttr 0x55833ef86c28 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef86db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55833ef86c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55833ef86cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55833ef86e68 <line:537:22>
| `-NonNullAttr 0x55833ef86ec0 <col:63, col:77> 1
|-FunctionDecl 0x55833ef87068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55833ef86f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55833ef86f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55833ef87118 <line:541:22>
| `-NonNullAttr 0x55833ef87170 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef872f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55833ef871b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55833ef87238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55833ef873a8 <line:544:22>
| `-NonNullAttr 0x55833ef87400 <col:63, col:77> 1
|-FunctionDecl 0x55833ef875e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55833ef87448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55833ef874c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55833ef87698 <line:547:22>
| `-NonNullAttr 0x55833ef876f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef87878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55833ef87738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55833ef877b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55833ef87928 <line:550:22>
| `-NonNullAttr 0x55833ef87980 <col:63, col:77> 1
|-FunctionDecl 0x55833ef88cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55833ef88aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55833ef88bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55833ef88da8 <col:29>
| `-NonNullAttr 0x55833ef88e00 <col:70, col:84> 1
|-FunctionDecl 0x55833ef88f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55833ef88e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55833ef89020 <line:555:22>
| `-NonNullAttr 0x55833ef89078 <col:63, col:77> 1
|-FunctionDecl 0x55833ef89180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55833ef890c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55833ef89228 <line:557:22>
| `-NonNullAttr 0x55833ef89280 <col:52, col:66> 1
|-FunctionDecl 0x55833ef89380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55833ef892c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55833ef89428 <line:559:19>
| `-NonNullAttr 0x55833ef89480 <col:49, col:63> 1
|-FunctionDecl 0x55833ef896b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55833ef894c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55833ef89558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55833ef89768 <col:39>
| `-NonNullAttr 0x55833ef897c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55833ef898c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55833ef89808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55833ef89968 <line:564:22>
| `-NonNullAttr 0x55833ef899c0 <col:52, col:66> 1
|-FunctionDecl 0x55833ef89b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55833ef89a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55833ef89bd0 <line:566:22>
| `-NonNullAttr 0x55833ef89c28 <col:52, col:66> 1
|-FunctionDecl 0x55833ef89de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55833ef89c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55833ef89d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55833ef89e98 <col:39>
| `-NonNullAttr 0x55833ef89ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55833ef89ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55833ef89f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55833ef8a098 <line:571:22>
| `-NonNullAttr 0x55833ef8a0f0 <col:52, col:66> 1
|-FunctionDecl 0x55833ef8a2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55833ef8a1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55833ef8a380 <line:573:22>
| `-NonNullAttr 0x55833ef8a3d8 <col:63, col:77> 1
|-FunctionDecl 0x55833ef8a4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55833ef8a428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55833ef8a588 <line:575:22>
| `-NonNullAttr 0x55833ef8a5e0 <col:63, col:77> 1
|-FunctionDecl 0x55833ef8a808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55833ef8a628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55833ef8a6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55833ef8a8b8 <line:579:22>
| `-NonNullAttr 0x55833ef8a910 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef8ab38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55833ef8a958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55833ef8a9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55833ef8abe8 <line:582:22>
| `-NonNullAttr 0x55833ef8ac40 <col:63, col:77> 1
|-FunctionDecl 0x55833ef8ade8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55833ef8ac88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55833ef8ad08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55833ef8ae98 <line:586:22>
| `-NonNullAttr 0x55833ef8aef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef8b078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55833ef8af38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55833ef8afb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55833ef8b128 <col:36>
| `-NonNullAttr 0x55833ef8b180 <col:77, col:91> 1
|-FunctionDecl 0x55833ef8b4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55833ef8b260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55833ef8b370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55833ef8b568 <line:591:22>
| `-NonNullAttr 0x55833ef8b5c0 <col:63, col:77> 1
|-FunctionDecl 0x55833ef8b738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55833ef8b608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55833ef8b7e0 <line:593:22>
| `-NonNullAttr 0x55833ef8b838 <col:63, col:77> 1
|-FunctionDecl 0x55833ef8b940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55833ef8b888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55833ef8b9e8 <line:595:22>
| `-NonNullAttr 0x55833ef8ba40 <col:52, col:66> 1
|-FunctionDecl 0x55833ef8bb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55833ef8baa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55833ef8bc00 <line:597:22>
| `-NonNullAttr 0x55833ef8bc58 <col:52, col:66> 1
|-FunctionDecl 0x55833ef8be88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55833ef8bca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55833ef8bd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55833ef8bf38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55833ef8c268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55833ef8bfb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55833ef8c030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55833ef8c0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55833ef8c320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55833ef8c538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55833ef8c400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55833ef8c5e0 <line:606:22>
| `-NonNullAttr 0x55833ef8c638 <col:63, col:77> 1
|-FunctionDecl 0x55833ef8c740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55833ef8c688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55833ef8c7e8 <line:608:22>
| `-NonNullAttr 0x55833ef8c840 <col:63, col:77> 1
|-FunctionDecl 0x55833ef8caa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55833ef8c888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55833ef8c908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55833ef8cb50 <line:612:22>
| `-NonNullAttr 0x55833ef8cba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef8cdb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55833ef8cbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55833ef8cc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55833ef8ce68 <col:37>
| `-NonNullAttr 0x55833ef8cec0 <col:78, col:92> 1
|-FunctionDecl 0x55833ef8d0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55833ef8cf08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55833ef8cfb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55833ef8d188 <line:618:22>
| `-NonNullAttr 0x55833ef8d1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef8d3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55833ef8d228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55833ef8d2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55833ef8d458 <line:621:22>
| `-NonNullAttr 0x55833ef8d4b0 <col:63, col:77> 1
|-FunctionDecl 0x55833ef8d758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55833ef8d590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55833ef8d610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55833ef8d808 <line:623:22>
| `-NonNullAttr 0x55833ef8d860 <col:63, col:77> 1
|-FunctionDecl 0x55833ef8d9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55833ef8d8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55833ef8dab0 <line:625:22>
| `-NonNullAttr 0x55833ef8db08 <col:63, col:77> 1
|-FunctionDecl 0x55833ef8dc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55833ef8db58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55833ef8dcb8 <line:627:22>
| `-NonNullAttr 0x55833ef8dd10 <col:52, col:66> 1
|-FunctionDecl 0x55833ef8de10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55833ef8dd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55833ef8deb8 <line:629:22>
| `-NonNullAttr 0x55833ef8df10 <col:52, col:66> 1
|-FunctionDecl 0x55833ef8e010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55833ef8df58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55833ef8e0b8 <line:631:22>
| `-NonNullAttr 0x55833ef8e110 <col:52, col:66> 1
|-FunctionDecl 0x55833ef8e4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55833ef8e1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55833ef8e300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55833ef8e380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55833ef8e5a0 <line:635:22>
| `-NonNullAttr 0x55833ef8e5f8 <col:63, col:77> 1
|-FunctionDecl 0x55833ef8e778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55833ef8e648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55833ef8e820 <line:637:22>
| `-NonNullAttr 0x55833ef8e878 <col:63, col:77> 1
|-FunctionDecl 0x55833ef8e980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55833ef8e8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55833ef8ea28 <line:639:22>
| `-NonNullAttr 0x55833ef8ea80 <col:52, col:66> 1
|-FunctionDecl 0x55833ef8fc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55833ef8fb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55833ef8fd30 <line:641:22>
| `-NonNullAttr 0x55833ef8fd88 <col:63, col:77> 1
|-FunctionDecl 0x55833ef8fe90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55833ef8fdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55833ef8ff38 <line:643:22>
| `-NonNullAttr 0x55833ef8ff90 <col:63, col:77> 1
|-FunctionDecl 0x55833ef901b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55833ef8ffd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55833ef90058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55833ef90268 <line:647:22>
| `-NonNullAttr 0x55833ef902c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55833ef904c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55833ef90308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55833ef90388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55833ef90578 <line:650:22>
| `-NonNullAttr 0x55833ef905d0 <col:63, col:77> 1
|-FunctionDecl 0x55833ef90918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55833ef906b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55833ef907d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55833ef909c8 <line:653:22>
| `-NonNullAttr 0x55833ef90a20 <col:63, col:77> 1
|-FunctionDecl 0x55833ef90b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55833ef90a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55833ef90c30 <col:69>
|-FunctionDecl 0x55833ef90da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55833ef90c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55833ef90e50 <col:72>
|-FunctionDecl 0x55833ef91088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55833ef90eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55833ef90f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55833ef91138 <col:44>
|-FunctionDecl 0x55833ef91358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55833ef911a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55833ef91218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55833ef91408 <line:660:22>
| `-NonNullAttr 0x55833ef91460 <col:63, col:77> 2
|-FunctionDecl 0x55833ef918a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55833ef91540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55833ef91650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55833ef91760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55833ef91960 <col:47>
|-FunctionDecl 0x55833ef91af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55833ef919d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55833ef91c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55833ef91bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55833ef91da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55833ef91d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55833ef91ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55833ef91e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55833ef91fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55833ef92080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55833ef92140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55833ef921f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55833ef92278 prev 0x55833ef921f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55833ef922e0 <col:24> 'int' 0
|-VarDecl 0x55833ef92318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55833ef92398 prev 0x55833ef92318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55833ef92400 <col:27> 'int' 0
|-VarDecl 0x55833ef92438 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55833ef924b8 prev 0x55833ef92438 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55833ef92520 <col:27> 'int' 0
|-VarDecl 0x55833ef92558 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55833ef925d8 prev 0x55833ef92558 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55833ef92640 <col:27> 'int' 0
|-VarDecl 0x55833ef92678 <line:680:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x55833ef926f8 prev 0x55833ef92678 <line:681:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x55833ef92760 <col:27> 'int' 0
|-VarDecl 0x55833ef92798 <line:682:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x55833ef92818 prev 0x55833ef92798 <line:683:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x55833ef92880 <col:27> 'int' 0
|-VarDecl 0x55833ef928b8 <line:684:1, col:5> col:5 used a 'int'
|-VarDecl 0x55833ef92938 prev 0x55833ef928b8 <line:685:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55833ef929a0 <col:9> 'int' 0
|-VarDecl 0x55833ef929d8 <line:686:1, col:5> col:5 used b 'int'
|-VarDecl 0x55833ef92a58 prev 0x55833ef929d8 <line:687:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x55833ef92ac0 <col:9> 'int' 0
|-VarDecl 0x55833ef92b00 <line:688:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x55833ef92b80 <line:689:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x55833ef92bf8 <line:690:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x55833ef92c70 <line:691:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x55833ef92ce8 <line:692:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x55833ef92d60 <line:693:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x55833ef92dd8 <line:694:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x55833ef92e50 <line:695:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x55833ef92ec8 <line:696:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x55833ef92f40 <line:697:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x55833ef92fb8 <line:698:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x55833ef93030 <line:699:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x55833ef930a8 <line:700:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x55833ef93128 <line:701:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x55833ef931a8 <line:702:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x55833ef93220 <line:703:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x55833ef932a0 <line:704:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x55833ef93318 <line:705:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x55833ef93390 <line:706:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55833ef93408 <line:707:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55833ef93488 <line:708:1, col:5> col:5 used x 'int'
|-VarDecl 0x55833ef93508 prev 0x55833ef93488 <line:709:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55833ef93570 <col:9> 'int' 0
|-VarDecl 0x55833ef935a8 <line:710:1, col:5> col:5 used y 'int'
|-VarDecl 0x55833ef93628 prev 0x55833ef935a8 <line:711:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55833ef93690 <col:9> 'int' 0
|-VarDecl 0x55833ef936c8 <line:712:1, col:5> col:5 used z 'int'
|-VarDecl 0x55833ef93748 prev 0x55833ef936c8 <line:713:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55833ef937b0 <col:9> 'int' 0
|-VarDecl 0x55833ef937e0 <line:714:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55833ef93858 <line:715:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55833ef93970 prev 0x55833ef91af0 <line:716:1, line:745:1> line:716:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55833ef938d8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55833ef95228 <line:717:1, line:745:1>
|   |-CallExpr 0x55833ef93a88 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef93a70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef93a18 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef93b10 <line:719:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55833ef93aa8 <col:3> 'int' lvalue Var 0x55833ef932a0 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55833ef93ae8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55833ef93ac8 <col:15> 'int' lvalue Var 0x55833ef931a8 'b$w_buff0' 'int'
|   |-BinaryOperator 0x55833ef93b70 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55833ef93b30 <col:3> 'int' lvalue Var 0x55833ef931a8 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x55833ef93b50 <col:15> 'int' 1
|   |-BinaryOperator 0x55833ef93be8 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef93b90 <col:3> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef93bd0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55833ef93bb0 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55833ef93c80 <line:722:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef93c08 <col:3> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55833ef93c58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55833ef93c28 <col:27> 'int' 1
|   |-CallExpr 0x55833ef93e08 <line:723:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55833ef93df0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55833ef93ca0 <col:3> 'void (int)' Function 0x55833ef38bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55833ef93da0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55833ef93d80 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55833ef93d60 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55833ef93d18 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55833ef93d00 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55833ef93cc0 <col:23> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55833ef93d48 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55833ef93d30 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55833ef93ce0 <col:41> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55833ef93e88 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef93e30 <col:3> '_Bool' lvalue Var 0x55833ef92e50 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef93e70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55833ef93e50 <col:20> '_Bool' lvalue Var 0x55833ef92bf8 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55833ef93f00 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef93ea8 <col:3> '_Bool' lvalue Var 0x55833ef92ec8 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef93ee8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55833ef93ec8 <col:20> '_Bool' lvalue Var 0x55833ef92c70 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55833ef93f78 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef93f20 <col:3> '_Bool' lvalue Var 0x55833ef92f40 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef93f60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55833ef93f40 <col:20> '_Bool' lvalue Var 0x55833ef92ce8 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55833ef93ff0 <line:727:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef93f98 <col:3> '_Bool' lvalue Var 0x55833ef92fb8 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef93fd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55833ef93fb8 <col:20> '_Bool' lvalue Var 0x55833ef92d60 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55833ef94068 <line:728:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef94010 <col:3> '_Bool' lvalue Var 0x55833ef93030 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef94050 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55833ef94030 <col:20> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55833ef94100 <line:729:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef94088 <col:3> '_Bool' lvalue Var 0x55833ef92c70 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55833ef940d8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55833ef940a8 <col:27> 'int' 1
|   |-CallExpr 0x55833ef94158 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef94140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef94120 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55833ef941b0 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef94198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef94178 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef94228 <line:732:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55833ef941d0 <col:3> 'int' lvalue Var 0x55833ef92398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55833ef94210 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55833ef941f0 <col:25> 'int' lvalue Var 0x55833ef93508 'x' 'int'
|   |-CallExpr 0x55833ef94280 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef94268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef94248 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55833ef942d8 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef942c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef942a0 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef945c0 <line:735:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55833ef942f8 <col:3> 'int' lvalue Var 0x55833ef92a58 'b' 'int'
|   | `-ConditionalOperator 0x55833ef94590 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55833ef943b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55833ef94370 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55833ef94358 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55833ef94318 <col:7> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55833ef943a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55833ef94388 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55833ef94338 <col:25> '_Bool' lvalue Var 0x55833ef92c70 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55833ef94578 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55833ef943d8 <col:42> 'int' lvalue Var 0x55833ef931a8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55833ef94558 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55833ef94528 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55833ef94498 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55833ef94450 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55833ef94438 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55833ef943f8 <col:55> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55833ef94480 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55833ef94468 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55833ef94418 <col:73> '_Bool' lvalue Var 0x55833ef92ec8 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55833ef944f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55833ef944b8 <col:90> 'int' lvalue Var 0x55833ef932a0 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55833ef94510 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef944d8 <col:102> 'int' lvalue Var 0x55833ef92a58 'b' 'int'
|   |-BinaryOperator 0x55833ef947c8 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef945e0 <col:3> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef947b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef94780 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55833ef946a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55833ef94658 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55833ef94640 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55833ef94600 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55833ef94688 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55833ef94670 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55833ef94620 <col:38> '_Bool' lvalue Var 0x55833ef92c70 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef94738 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55833ef946f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55833ef946c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55833ef94768 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55833ef94750 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef94718 <col:66> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55833ef94ab0 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef947e8 <col:3> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef94a98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef94a68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55833ef94988 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55833ef948a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55833ef94860 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55833ef94848 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55833ef94808 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55833ef94890 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55833ef94878 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55833ef94828 <col:38> '_Bool' lvalue Var 0x55833ef92c70 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55833ef94968 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55833ef94920 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55833ef94908 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55833ef948c8 <col:56> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55833ef94950 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55833ef94938 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55833ef948e8 <col:74> '_Bool' lvalue Var 0x55833ef92ec8 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef94a20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55833ef949d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55833ef949a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55833ef94a50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55833ef94a38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef94a00 <col:102> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55833ef94cc8 <line:738:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef94ad0 <col:3> '_Bool' lvalue Var 0x55833ef92c70 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef94cb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef94c80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55833ef94ba0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55833ef94b58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55833ef94b40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55833ef94af0 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55833ef94b88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55833ef94b70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55833ef94b20 <col:38> '_Bool' lvalue Var 0x55833ef92c70 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef94c38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55833ef94bf0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55833ef94bc0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55833ef94c68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55833ef94c50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef94c18 <col:66> '_Bool' lvalue Var 0x55833ef92c70 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55833ef94fb0 <line:739:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef94ce8 <col:3> '_Bool' lvalue Var 0x55833ef92ec8 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef94f98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef94f68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55833ef94e88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55833ef94da8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55833ef94d60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55833ef94d48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55833ef94d08 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55833ef94d90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55833ef94d78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55833ef94d28 <col:38> '_Bool' lvalue Var 0x55833ef92c70 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55833ef94e68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55833ef94e20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55833ef94e08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55833ef94dc8 <col:56> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55833ef94e50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55833ef94e38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55833ef94de8 <col:74> '_Bool' lvalue Var 0x55833ef92ec8 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef94f20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55833ef94ed8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55833ef94ea8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55833ef94f50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55833ef94f38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef94f00 <col:102> '_Bool' lvalue Var 0x55833ef92ec8 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55833ef95008 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef94ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef94fd0 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55833ef95060 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef95048 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef95028 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef95118 <line:742:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55833ef95080 <col:3> 'int' lvalue Var 0x55833ef92278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55833ef950f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55833ef950e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55833ef950a0 <col:22> 'int' lvalue Var 0x55833ef92278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55833ef950c0 <col:41> 'int' 1
|   |-CallExpr 0x55833ef95170 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef95158 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef95138 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55833ef95218 <line:744:3, col:36>
|     `-CallExpr 0x55833ef951f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55833ef951e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55833ef95190 <col:10> 'void *(void)' Function 0x55833ef38958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55833ef953c0 prev 0x55833ef91c48 <line:746:1, line:765:1> line:746:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55833ef95328 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55833ef96600 <line:747:1, line:765:1>
|   |-CallExpr 0x55833ef954a0 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef95488 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef95468 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef95500 <line:749:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55833ef954c0 <col:3> 'int' lvalue Var 0x55833ef93508 'x' 'int'
|   | `-IntegerLiteral 0x55833ef954e0 <col:7> 'int' 1
|   |-CallExpr 0x55833ef95558 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef95540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef95520 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55833ef955b0 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef95598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef95578 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef95628 <line:752:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55833ef955d0 <col:3> 'int' lvalue Var 0x55833ef924b8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55833ef95610 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55833ef955f0 <col:25> 'int' lvalue Var 0x55833ef93628 'y' 'int'
|   |-CallExpr 0x55833ef95680 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef95668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef95648 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55833ef956d8 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef956c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef956a0 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef959c0 <line:755:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55833ef956f8 <col:3> 'int' lvalue Var 0x55833ef92a58 'b' 'int'
|   | `-ConditionalOperator 0x55833ef95990 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55833ef957b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55833ef95770 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55833ef95758 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55833ef95718 <col:7> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55833ef957a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55833ef95788 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55833ef95738 <col:25> '_Bool' lvalue Var 0x55833ef92ce8 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55833ef95978 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55833ef957d8 <col:42> 'int' lvalue Var 0x55833ef931a8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55833ef95958 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55833ef95928 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55833ef95898 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55833ef95850 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55833ef95838 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55833ef957f8 <col:55> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55833ef95880 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55833ef95868 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55833ef95818 <col:73> '_Bool' lvalue Var 0x55833ef92f40 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55833ef958f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55833ef958b8 <col:90> 'int' lvalue Var 0x55833ef932a0 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55833ef95910 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef958d8 <col:102> 'int' lvalue Var 0x55833ef92a58 'b' 'int'
|   |-BinaryOperator 0x55833ef95be0 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef959e0 <col:3> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef95bc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef95b98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55833ef95aa0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55833ef95a58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55833ef95a40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55833ef95a00 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55833ef95a88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55833ef95a70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55833ef95a20 <col:38> '_Bool' lvalue Var 0x55833ef92ce8 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef95b50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55833ef95af0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55833ef95ac0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55833ef95b80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55833ef95b68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef95b30 <col:66> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55833ef95ec8 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef95c00 <col:3> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef95eb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef95e80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55833ef95da0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55833ef95cc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55833ef95c78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55833ef95c60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55833ef95c20 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55833ef95ca8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55833ef95c90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55833ef95c40 <col:38> '_Bool' lvalue Var 0x55833ef92ce8 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55833ef95d80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55833ef95d38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55833ef95d20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55833ef95ce0 <col:56> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55833ef95d68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55833ef95d50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55833ef95d00 <col:74> '_Bool' lvalue Var 0x55833ef92f40 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef95e38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55833ef95df0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55833ef95dc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55833ef95e68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55833ef95e50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef95e18 <col:102> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55833ef960d0 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef95ee8 <col:3> '_Bool' lvalue Var 0x55833ef92ce8 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef960b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef96088 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55833ef95fa8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55833ef95f60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55833ef95f48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55833ef95f08 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55833ef95f90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55833ef95f78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55833ef95f28 <col:38> '_Bool' lvalue Var 0x55833ef92ce8 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef96040 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55833ef95ff8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55833ef95fc8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55833ef96070 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55833ef96058 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef96020 <col:66> '_Bool' lvalue Var 0x55833ef92ce8 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55833ef963b8 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef960f0 <col:3> '_Bool' lvalue Var 0x55833ef92f40 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef963a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef96370 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55833ef96290 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55833ef961b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55833ef96168 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55833ef96150 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55833ef96110 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55833ef96198 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55833ef96180 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55833ef96130 <col:38> '_Bool' lvalue Var 0x55833ef92ce8 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55833ef96270 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55833ef96228 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55833ef96210 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55833ef961d0 <col:56> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55833ef96258 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55833ef96240 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55833ef961f0 <col:74> '_Bool' lvalue Var 0x55833ef92f40 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef96328 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55833ef962e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55833ef962b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55833ef96358 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55833ef96340 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef96308 <col:102> '_Bool' lvalue Var 0x55833ef92f40 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55833ef96410 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef963f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef963d8 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55833ef96468 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef96450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef96430 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef96520 <line:762:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55833ef96488 <col:3> 'int' lvalue Var 0x55833ef92278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55833ef96500 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55833ef964e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55833ef964a8 <col:22> 'int' lvalue Var 0x55833ef92278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55833ef964c8 <col:41> 'int' 1
|   |-CallExpr 0x55833ef96578 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef96560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef96540 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55833ef965f0 <line:764:3, col:36>
|     `-CallExpr 0x55833ef965d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55833ef965b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55833ef96598 <col:10> 'void *(void)' Function 0x55833ef38958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55833ef96748 prev 0x55833ef91da0 <line:766:1, line:785:1> line:766:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55833ef966b0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55833ef97988 <line:767:1, line:785:1>
|   |-CallExpr 0x55833ef96828 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef96810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef967f0 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef96888 <line:769:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55833ef96848 <col:3> 'int' lvalue Var 0x55833ef93628 'y' 'int'
|   | `-IntegerLiteral 0x55833ef96868 <col:7> 'int' 1
|   |-CallExpr 0x55833ef968e0 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef968c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef968a8 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55833ef96938 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef96920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef96900 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef969b0 <line:772:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55833ef96958 <col:3> 'int' lvalue Var 0x55833ef925d8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55833ef96998 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55833ef96978 <col:25> 'int' lvalue Var 0x55833ef93748 'z' 'int'
|   |-CallExpr 0x55833ef96a08 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef969f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef969d0 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55833ef96a60 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef96a48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef96a28 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef96d60 <line:775:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55833ef96a80 <col:3> 'int' lvalue Var 0x55833ef92a58 'b' 'int'
|   | `-ConditionalOperator 0x55833ef96d30 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55833ef96b58 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55833ef96af8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55833ef96ae0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55833ef96aa0 <col:7> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55833ef96b40 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55833ef96b10 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55833ef96ac0 <col:25> '_Bool' lvalue Var 0x55833ef92d60 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55833ef96d18 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55833ef96b78 <col:42> 'int' lvalue Var 0x55833ef931a8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55833ef96cf8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55833ef96cc8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55833ef96c38 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55833ef96bf0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55833ef96bd8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55833ef96b98 <col:55> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55833ef96c20 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55833ef96c08 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55833ef96bb8 <col:73> '_Bool' lvalue Var 0x55833ef92fb8 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55833ef96c98 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55833ef96c58 <col:90> 'int' lvalue Var 0x55833ef932a0 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55833ef96cb0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef96c78 <col:102> 'int' lvalue Var 0x55833ef92a58 'b' 'int'
|   |-BinaryOperator 0x55833ef96f68 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef96d80 <col:3> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef96f50 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef96f20 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55833ef96e40 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55833ef96df8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55833ef96de0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55833ef96da0 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55833ef96e28 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55833ef96e10 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55833ef96dc0 <col:38> '_Bool' lvalue Var 0x55833ef92d60 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef96ed8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55833ef96e90 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55833ef96e60 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55833ef96f08 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55833ef96ef0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef96eb8 <col:66> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55833ef97250 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef96f88 <col:3> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef97238 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef97208 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55833ef97128 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55833ef97048 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55833ef97000 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55833ef96fe8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55833ef96fa8 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55833ef97030 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55833ef97018 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55833ef96fc8 <col:38> '_Bool' lvalue Var 0x55833ef92d60 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55833ef97108 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55833ef970c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55833ef970a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55833ef97068 <col:56> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55833ef970f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55833ef970d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55833ef97088 <col:74> '_Bool' lvalue Var 0x55833ef92fb8 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef971c0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55833ef97178 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55833ef97148 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55833ef971f0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55833ef971d8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef971a0 <col:102> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55833ef97458 <line:778:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef97270 <col:3> '_Bool' lvalue Var 0x55833ef92d60 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef97440 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef97410 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55833ef97330 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55833ef972e8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55833ef972d0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55833ef97290 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55833ef97318 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55833ef97300 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55833ef972b0 <col:38> '_Bool' lvalue Var 0x55833ef92d60 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef973c8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55833ef97380 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55833ef97350 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55833ef973f8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55833ef973e0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef973a8 <col:66> '_Bool' lvalue Var 0x55833ef92d60 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55833ef97740 <line:779:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef97478 <col:3> '_Bool' lvalue Var 0x55833ef92fb8 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef97728 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef976f8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55833ef97618 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55833ef97538 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55833ef974f0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55833ef974d8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55833ef97498 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55833ef97520 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55833ef97508 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55833ef974b8 <col:38> '_Bool' lvalue Var 0x55833ef92d60 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55833ef975f8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55833ef975b0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55833ef97598 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55833ef97558 <col:56> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55833ef975e0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55833ef975c8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55833ef97578 <col:74> '_Bool' lvalue Var 0x55833ef92fb8 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef976b0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55833ef97668 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55833ef97638 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55833ef976e0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55833ef976c8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef97690 <col:102> '_Bool' lvalue Var 0x55833ef92fb8 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55833ef97798 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef97780 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef97760 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55833ef977f0 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef977d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef977b8 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef978a8 <line:782:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55833ef97810 <col:3> 'int' lvalue Var 0x55833ef92278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55833ef97888 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55833ef97870 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55833ef97830 <col:22> 'int' lvalue Var 0x55833ef92278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55833ef97850 <col:41> 'int' 1
|   |-CallExpr 0x55833ef97900 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef978e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef978c8 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55833ef97978 <line:784:3, col:36>
|     `-CallExpr 0x55833ef97958 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55833ef97940 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55833ef97920 <col:10> 'void *(void)' Function 0x55833ef38958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55833ef97b50 prev 0x55833ef91ef8 <line:786:1, line:824:1> line:786:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55833ef97a38 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55833ef9b950 <line:787:1, line:824:1>
|   |-CallExpr 0x55833ef97c30 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef97c18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef97bf8 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef97c90 <line:789:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55833ef97c50 <col:3> 'int' lvalue Var 0x55833ef93748 'z' 'int'
|   | `-IntegerLiteral 0x55833ef97c70 <col:7> 'int' 1
|   |-CallExpr 0x55833ef97ce8 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef97cd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef97cb0 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55833ef97d40 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef97d28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef97d08 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef97da0 <line:792:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55833ef97d60 <col:3> 'int' lvalue Var 0x55833ef92938 'a' 'int'
|   | `-IntegerLiteral 0x55833ef97d80 <col:7> 'int' 1
|   |-CallExpr 0x55833ef97df8 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef97de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef97dc0 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55833ef97e50 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef97e38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef97e18 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef97ec8 <line:795:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55833ef97e70 <col:3> 'int' lvalue Var 0x55833ef926f8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x55833ef97eb0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55833ef97e90 <col:25> 'int' lvalue Var 0x55833ef92938 'a' 'int'
|   |-CallExpr 0x55833ef97f20 <line:796:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef97f08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef97ee8 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55833ef97f78 <line:797:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef97f60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef97f40 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef98028 <line:798:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef97f98 <col:3> '_Bool' lvalue Var 0x55833ef937e0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef98010 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55833ef97ff0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55833ef97fd8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55833ef97fb8 <col:19> 'void *(void)' Function 0x55833ef38958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55833ef980d8 <line:799:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef98048 <col:3> '_Bool' lvalue Var 0x55833ef93858 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef980c0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55833ef980a0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55833ef98088 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55833ef98068 <col:19> 'void *(void)' Function 0x55833ef38958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55833ef98150 <line:800:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef980f8 <col:3> '_Bool' lvalue Var 0x55833ef92b00 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef98138 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55833ef98118 <col:21> '_Bool' lvalue Var 0x55833ef93858 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55833ef981c8 <line:801:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55833ef98170 <col:3> 'int' lvalue Var 0x55833ef92b80 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55833ef981b0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55833ef98190 <col:15> 'int' lvalue Var 0x55833ef92a58 'b' 'int'
|   |-BinaryOperator 0x55833ef98600 <line:802:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55833ef981e8 <col:3> 'int' lvalue Var 0x55833ef92a58 'b' 'int'
|   | `-ConditionalOperator 0x55833ef985d0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55833ef983f8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55833ef98318 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55833ef98240 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55833ef98228 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55833ef98208 <col:8> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55833ef982f8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55833ef98290 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55833ef98278 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55833ef98258 <col:27> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x55833ef982e0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55833ef982c8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55833ef982a8 <col:46> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55833ef983d8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55833ef98370 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55833ef98358 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55833ef98338 <col:65> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x55833ef983c0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55833ef983a8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55833ef98388 <col:84> '_Bool' lvalue Var 0x55833ef93030 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55833ef985b8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55833ef98418 <col:101> 'int' lvalue Var 0x55833ef92a58 'b' 'int'
|   |   `-ParenExpr 0x55833ef98598 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55833ef98568 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55833ef984d8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55833ef98490 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55833ef98478 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55833ef98438 <col:106> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55833ef984c0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55833ef984a8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55833ef98458 <col:124> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55833ef98538 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55833ef984f8 <col:141> 'int' lvalue Var 0x55833ef931a8 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55833ef98550 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef98518 <col:153> 'int' lvalue Var 0x55833ef932a0 'b$w_buff1' 'int'
|   |-BinaryOperator 0x55833ef98b10 <line:803:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55833ef98620 <col:3> 'int' lvalue Var 0x55833ef931a8 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x55833ef98ae0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55833ef98ab0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55833ef98a98 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55833ef98640 <col:15> '_Bool' lvalue Var 0x55833ef93858 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55833ef98ac8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55833ef98660 <col:31> 'int' lvalue Var 0x55833ef931a8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55833ef98a78 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55833ef98a48 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55833ef98870 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55833ef98790 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55833ef986b8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55833ef986a0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55833ef98680 <col:45> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55833ef98770 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55833ef98708 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55833ef986f0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55833ef986d0 <col:64> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55833ef98758 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55833ef98740 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55833ef98720 <col:83> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55833ef98850 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55833ef987e8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55833ef987d0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55833ef987b0 <col:102> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55833ef98838 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55833ef98820 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55833ef98800 <col:121> '_Bool' lvalue Var 0x55833ef93030 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55833ef98a30 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55833ef98890 <col:138> 'int' lvalue Var 0x55833ef931a8 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x55833ef98a10 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55833ef989e0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55833ef98950 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55833ef98908 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55833ef988f0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55833ef988b0 <col:151> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55833ef98938 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55833ef98920 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55833ef988d0 <col:169> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55833ef989b0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55833ef98970 <col:186> 'int' lvalue Var 0x55833ef931a8 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55833ef989c8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55833ef98990 <col:198> 'int' lvalue Var 0x55833ef931a8 'b$w_buff0' 'int'
|   |-BinaryOperator 0x55833ef99030 <line:804:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55833ef98b30 <col:3> 'int' lvalue Var 0x55833ef932a0 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x55833ef99000 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55833ef98fd0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55833ef98fb8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55833ef98b60 <col:15> '_Bool' lvalue Var 0x55833ef93858 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55833ef98fe8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55833ef98b80 <col:31> 'int' lvalue Var 0x55833ef932a0 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x55833ef98f98 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55833ef98f68 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55833ef98d90 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55833ef98cb0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55833ef98bd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55833ef98bc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55833ef98ba0 <col:45> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55833ef98c90 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55833ef98c28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55833ef98c10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55833ef98bf0 <col:64> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55833ef98c78 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55833ef98c60 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55833ef98c40 <col:83> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55833ef98d70 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55833ef98d08 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55833ef98cf0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55833ef98cd0 <col:102> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55833ef98d58 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55833ef98d40 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55833ef98d20 <col:121> '_Bool' lvalue Var 0x55833ef93030 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55833ef98f50 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55833ef98db0 <col:138> 'int' lvalue Var 0x55833ef932a0 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x55833ef98f30 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55833ef98f00 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55833ef98e70 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55833ef98e28 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55833ef98e10 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55833ef98dd0 <col:151> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55833ef98e58 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55833ef98e40 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55833ef98df0 <col:169> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55833ef98ed0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55833ef98e90 <col:186> 'int' lvalue Var 0x55833ef932a0 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55833ef98ee8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55833ef98eb0 <col:198> 'int' lvalue Var 0x55833ef932a0 'b$w_buff1' 'int'
|   |-BinaryOperator 0x55833ef995d8 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef99050 <col:3> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef995c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef99590 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55833ef99548 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55833ef99530 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55833ef99070 <col:20> '_Bool' lvalue Var 0x55833ef93858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef99578 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55833ef99560 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55833ef99090 <col:36> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55833ef99510 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55833ef994e0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55833ef992a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55833ef991c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55833ef990e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55833ef990d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55833ef990b0 <col:55> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55833ef991a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55833ef99138 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55833ef99120 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55833ef99100 <col:74> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55833ef99188 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55833ef99170 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55833ef99150 <col:93> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55833ef99280 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55833ef99218 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55833ef99200 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55833ef991e0 <col:112> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55833ef99268 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55833ef99250 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55833ef99230 <col:131> '_Bool' lvalue Var 0x55833ef93030 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55833ef994c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55833ef994b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55833ef992c0 <col:148> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55833ef99490 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55833ef99460 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55833ef99380 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55833ef99338 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55833ef99320 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55833ef992e0 <col:166> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55833ef99368 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55833ef99350 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55833ef99300 <col:184> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55833ef99418 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55833ef993d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55833ef993a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55833ef99448 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55833ef99430 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55833ef993f8 <col:212> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55833ef99bb8 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef995f8 <col:3> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef99ba0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef99b70 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55833ef99b10 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55833ef99af8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55833ef99618 <col:20> '_Bool' lvalue Var 0x55833ef93858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef99b40 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55833ef99b28 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55833ef99638 <col:36> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55833ef99ad8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55833ef99aa8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55833ef99848 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55833ef99768 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55833ef99690 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55833ef99678 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55833ef99658 <col:55> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55833ef99748 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55833ef996e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55833ef996c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55833ef996a8 <col:74> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55833ef99730 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55833ef99718 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55833ef996f8 <col:93> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55833ef99828 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55833ef997c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55833ef997a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55833ef99788 <col:112> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55833ef99810 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55833ef997f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55833ef997d8 <col:131> '_Bool' lvalue Var 0x55833ef93030 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55833ef99a90 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55833ef99a78 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55833ef99868 <col:148> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55833ef99a58 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55833ef99a28 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55833ef99928 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55833ef998e0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55833ef998c8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55833ef99888 <col:166> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55833ef99910 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55833ef998f8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55833ef998a8 <col:184> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55833ef999f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55833ef99978 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55833ef99948 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55833ef99a10 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55833ef999d0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55833ef999a0 <col:219> 'int' 0
|   |-BinaryOperator 0x55833ef9a160 <line:807:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef99bd8 <col:3> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef9a148 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef9a118 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55833ef9a0d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55833ef9a0b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55833ef99bf8 <col:20> '_Bool' lvalue Var 0x55833ef93858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef9a100 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55833ef9a0e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55833ef99c18 <col:36> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x55833ef9a098 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55833ef9a068 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55833ef99e28 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55833ef99d48 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55833ef99c70 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55833ef99c58 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55833ef99c38 <col:55> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55833ef99d28 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55833ef99cc0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55833ef99ca8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55833ef99c88 <col:74> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55833ef99d10 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55833ef99cf8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55833ef99cd8 <col:93> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55833ef99e08 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55833ef99da0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55833ef99d88 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55833ef99d68 <col:112> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55833ef99df0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55833ef99dd8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55833ef99db8 <col:131> '_Bool' lvalue Var 0x55833ef93030 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55833ef9a050 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55833ef9a038 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55833ef99e48 <col:148> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x55833ef9a018 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55833ef99fe8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55833ef99f08 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55833ef99ec0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55833ef99ea8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55833ef99e68 <col:166> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55833ef99ef0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55833ef99ed8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55833ef99e88 <col:184> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55833ef99fa0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55833ef99f58 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55833ef99f28 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55833ef99fd0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55833ef99fb8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55833ef99f80 <col:212> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55833ef9a728 <line:808:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef9a180 <col:3> '_Bool' lvalue Var 0x55833ef93030 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef9a710 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef9a6e0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55833ef9a698 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55833ef9a680 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55833ef9a1a0 <col:20> '_Bool' lvalue Var 0x55833ef93858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef9a6c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55833ef9a6b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55833ef9a1c0 <col:36> '_Bool' lvalue Var 0x55833ef93030 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x55833ef9a660 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55833ef9a630 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55833ef9a3d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55833ef9a2f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55833ef9a218 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55833ef9a200 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55833ef9a1e0 <col:55> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55833ef9a2d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55833ef9a268 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55833ef9a250 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55833ef9a230 <col:74> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55833ef9a2b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55833ef9a2a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55833ef9a280 <col:93> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55833ef9a3b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55833ef9a348 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55833ef9a330 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55833ef9a310 <col:112> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55833ef9a398 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55833ef9a380 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55833ef9a360 <col:131> '_Bool' lvalue Var 0x55833ef93030 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55833ef9a618 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55833ef9a600 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55833ef9a3f0 <col:148> '_Bool' lvalue Var 0x55833ef93030 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x55833ef9a5e0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55833ef9a5b0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55833ef9a4b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55833ef9a468 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55833ef9a450 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55833ef9a410 <col:166> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55833ef9a498 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55833ef9a480 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55833ef9a430 <col:184> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55833ef9a580 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55833ef9a500 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55833ef9a4d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55833ef9a598 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55833ef9a558 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55833ef9a528 <col:219> 'int' 0
|   |-BinaryOperator 0x55833ef9a7a0 <line:809:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55833ef9a748 <col:3> 'int' lvalue Var 0x55833ef92818 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x55833ef9a788 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55833ef9a768 <col:25> 'int' lvalue Var 0x55833ef92a58 'b' 'int'
|   |-BinaryOperator 0x55833ef9a8d0 <line:810:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55833ef9a7c0 <col:3> 'int' lvalue Var 0x55833ef92a58 'b' 'int'
|   | `-ConditionalOperator 0x55833ef9a8a0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55833ef9a858 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55833ef9a840 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55833ef9a7e0 <col:7> '_Bool' lvalue Var 0x55833ef92b00 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55833ef9a870 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55833ef9a800 <col:25> 'int' lvalue Var 0x55833ef92b80 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55833ef9a888 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55833ef9a820 <col:37> 'int' lvalue Var 0x55833ef92a58 'b' 'int'
|   |-BinaryOperator 0x55833ef9a968 <line:811:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef9a8f0 <col:3> '_Bool' lvalue Var 0x55833ef92b00 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55833ef9a940 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55833ef9a910 <col:28> 'int' 0
|   |-CallExpr 0x55833ef9a9c0 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef9a9a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef9a988 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55833ef9aa18 <line:813:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef9aa00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef9a9e0 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef9ad28 <line:814:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55833ef9aa38 <col:3> 'int' lvalue Var 0x55833ef92a58 'b' 'int'
|   | `-ConditionalOperator 0x55833ef9acf8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55833ef9aaf8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55833ef9aab0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55833ef9aa98 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55833ef9aa58 <col:7> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55833ef9aae0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55833ef9aac8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55833ef9aa78 <col:25> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55833ef9ace0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55833ef9ab18 <col:42> 'int' lvalue Var 0x55833ef931a8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55833ef9acc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55833ef9ac90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55833ef9ac00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55833ef9abb8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55833ef9aba0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55833ef9ab38 <col:55> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55833ef9abe8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55833ef9abd0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55833ef9ab80 <col:73> '_Bool' lvalue Var 0x55833ef93030 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55833ef9ac60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55833ef9ac20 <col:90> 'int' lvalue Var 0x55833ef932a0 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55833ef9ac78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef9ac40 <col:102> 'int' lvalue Var 0x55833ef92a58 'b' 'int'
|   |-BinaryOperator 0x55833ef9af30 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef9ad48 <col:3> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef9af18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef9aee8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55833ef9ae08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55833ef9adc0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55833ef9ada8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55833ef9ad68 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55833ef9adf0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55833ef9add8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55833ef9ad88 <col:38> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef9aea0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55833ef9ae58 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55833ef9ae28 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55833ef9aed0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55833ef9aeb8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef9ae80 <col:66> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55833ef9b218 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef9af50 <col:3> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef9b200 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef9b1d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55833ef9b0f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55833ef9b010 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55833ef9afc8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55833ef9afb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55833ef9af70 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55833ef9aff8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55833ef9afe0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55833ef9af90 <col:38> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55833ef9b0d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55833ef9b088 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55833ef9b070 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55833ef9b030 <col:56> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55833ef9b0b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55833ef9b0a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55833ef9b050 <col:74> '_Bool' lvalue Var 0x55833ef93030 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef9b188 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55833ef9b140 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55833ef9b110 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55833ef9b1b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55833ef9b1a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef9b168 <col:102> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55833ef9b420 <line:817:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef9b238 <col:3> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef9b408 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef9b3d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55833ef9b2f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55833ef9b2b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55833ef9b298 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55833ef9b258 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55833ef9b2e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55833ef9b2c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55833ef9b278 <col:38> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef9b390 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55833ef9b348 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55833ef9b318 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55833ef9b3c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55833ef9b3a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef9b370 <col:66> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55833ef9b708 <line:818:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55833ef9b440 <col:3> '_Bool' lvalue Var 0x55833ef93030 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55833ef9b6f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55833ef9b6c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55833ef9b5e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55833ef9b500 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55833ef9b4b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55833ef9b4a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55833ef9b460 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55833ef9b4e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55833ef9b4d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55833ef9b480 <col:38> '_Bool' lvalue Var 0x55833ef92dd8 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55833ef9b5c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55833ef9b578 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55833ef9b560 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55833ef9b520 <col:56> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55833ef9b5a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55833ef9b590 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55833ef9b540 <col:74> '_Bool' lvalue Var 0x55833ef93030 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55833ef9b678 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55833ef9b630 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55833ef9b600 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55833ef9b6a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55833ef9b690 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55833ef9b658 <col:102> '_Bool' lvalue Var 0x55833ef93030 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55833ef9b760 <line:819:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef9b748 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef9b728 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55833ef9b7b8 <line:820:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55833ef9b7a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef9b780 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55833ef9b870 <line:821:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55833ef9b7d8 <col:3> 'int' lvalue Var 0x55833ef92278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55833ef9b850 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55833ef9b838 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55833ef9b7f8 <col:22> 'int' lvalue Var 0x55833ef92278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55833ef9b818 <col:41> 'int' 1
|   |-CallExpr 0x55833ef9b8c8 <line:822:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55833ef9b8b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55833ef9b890 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55833ef9b940 <line:823:3, col:36>
|     `-CallExpr 0x55833ef9b920 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55833ef9b908 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55833ef9b8e8 <col:10> 'void *(void)' Function 0x55833ef38958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55833ef9baa0 prev 0x55833ef91fc0 <line:825:1, line:827:1> line:825:6 fence 'void ()'
| `-CompoundStmt 0x55833ef9bb40 <line:826:1, line:827:1>
|-FunctionDecl 0x55833ef9bb90 prev 0x55833ef92080 <line:828:1, line:830:1> line:828:6 isync 'void ()'
| `-CompoundStmt 0x55833ef9bc30 <line:829:1, line:830:1>
|-FunctionDecl 0x55833ef9bc60 prev 0x55833ef92140 <line:831:1, line:833:1> line:831:6 lwfence 'void ()'
| `-CompoundStmt 0x55833ef9bd00 <line:832:1, line:833:1>
`-FunctionDecl 0x55833ef9bd68 <line:834:1, line:860:1> line:834:5 main 'int ()'
  `-CompoundStmt 0x55833ef9dd78 <line:835:1, line:860:1>
    |-DeclStmt 0x55833ef9be80 <line:836:3, col:17>
    | `-VarDecl 0x55833ef9be18 <col:3, col:13> col:13 used t947 'pthread_t':'unsigned long'
    |-CallExpr 0x55833ef9c088 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55833ef9c070 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55833ef9be98 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55833ef79488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55833ef9bed8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55833ef9beb8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55833ef9be18 't947' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55833ef9c0c8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55833ef9bf50 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55833ef9bf28 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55833ef9bef0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55833ef9c0e0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55833ef9bf70 <col:38> 'void *(void *)' Function 0x55833ef93970 'P0' 'void *(void *)'
    | `-ParenExpr 0x55833ef9bff0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55833ef9bfc8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55833ef9bf90 <col:51> 'int' 0
    |-DeclStmt 0x55833ef9c170 <line:838:3, col:17>
    | `-VarDecl 0x55833ef9c108 <col:3, col:13> col:13 used t948 'pthread_t':'unsigned long'
    |-CallExpr 0x55833ef9c318 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55833ef9c300 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55833ef9c188 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55833ef79488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55833ef9c1c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55833ef9c1a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55833ef9c108 't948' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55833ef9c358 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55833ef9c240 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55833ef9c218 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55833ef9c1e0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55833ef9c370 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55833ef9c260 <col:38> 'void *(void *)' Function 0x55833ef953c0 'P1' 'void *(void *)'
    | `-ParenExpr 0x55833ef9c2e0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55833ef9c2b8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55833ef9c280 <col:51> 'int' 0
    |-DeclStmt 0x55833ef9c400 <line:840:3, col:17>
    | `-VarDecl 0x55833ef9c398 <col:3, col:13> col:13 used t949 'pthread_t':'unsigned long'
    |-CallExpr 0x55833ef9c5a8 <line:841:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55833ef9c590 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55833ef9c418 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55833ef79488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55833ef9c458 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55833ef9c438 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55833ef9c398 't949' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55833ef9c5e8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55833ef9c4d0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55833ef9c4a8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55833ef9c470 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55833ef9c600 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55833ef9c4f0 <col:38> 'void *(void *)' Function 0x55833ef96748 'P2' 'void *(void *)'
    | `-ParenExpr 0x55833ef9c570 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55833ef9c548 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55833ef9c510 <col:51> 'int' 0
    |-DeclStmt 0x55833ef9c690 <line:842:3, col:17>
    | `-VarDecl 0x55833ef9c628 <col:3, col:13> col:13 used t950 'pthread_t':'unsigned long'
    |-CallExpr 0x55833ef9c838 <line:843:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55833ef9c820 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55833ef9c6a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55833ef79488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55833ef9c6e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55833ef9c6c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55833ef9c628 't950' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55833ef9c878 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55833ef9c760 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55833ef9c738 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55833ef9c700 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55833ef9c890 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55833ef9c780 <col:38> 'void *(void *)' Function 0x55833ef97b50 'P3' 'void *(void *)'
    | `-ParenExpr 0x55833ef9c800 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55833ef9c7d8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55833ef9c7a0 <col:51> 'int' 0
    |-CallExpr 0x55833ef9c8e0 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55833ef9c8c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55833ef9c8a8 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55833ef9c9b0 <line:845:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55833ef9c900 <col:3> '_Bool' lvalue Var 0x55833ef93390 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55833ef9c998 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55833ef9c978 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55833ef9c960 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55833ef9c920 <col:21> 'int' lvalue Var 0x55833ef92278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55833ef9c940 <col:41> 'int' 4
    |-CallExpr 0x55833ef9ca08 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55833ef9c9f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55833ef9c9d0 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55833ef9ca80 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55833ef9ca68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55833ef9ca28 <col:3> 'void (int)' Function 0x55833ef38790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55833ef9cac0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55833ef9caa8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55833ef9ca48 <col:21> '_Bool' lvalue Var 0x55833ef93390 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55833ef9cb10 <line:848:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55833ef9caf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55833ef9cad8 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55833ef9ce08 <line:849:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55833ef9cb30 <col:3> 'int' lvalue Var 0x55833ef92a58 'b' 'int'
    | `-ConditionalOperator 0x55833ef9cdd8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55833ef9cc00 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55833ef9cbb8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55833ef9cba0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55833ef9cb50 <col:7> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55833ef9cbe8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55833ef9cbd0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55833ef9cb70 <col:25> '_Bool' lvalue Var 0x55833ef92bf8 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55833ef9cdc0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55833ef9cc20 <col:42> 'int' lvalue Var 0x55833ef931a8 'b$w_buff0' 'int'
    |   `-ParenExpr 0x55833ef9cda0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55833ef9cd70 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55833ef9cce0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55833ef9cc98 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55833ef9cc80 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55833ef9cc40 <col:55> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55833ef9ccc8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55833ef9ccb0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55833ef9cc60 <col:73> '_Bool' lvalue Var 0x55833ef92e50 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55833ef9cd40 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55833ef9cd00 <col:90> 'int' lvalue Var 0x55833ef932a0 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55833ef9cd58 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55833ef9cd20 <col:102> 'int' lvalue Var 0x55833ef92a58 'b' 'int'
    |-BinaryOperator 0x55833ef9d010 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55833ef9ce28 <col:3> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55833ef9cff8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55833ef9cfc8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55833ef9cee8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55833ef9cea0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55833ef9ce88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55833ef9ce48 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55833ef9ced0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55833ef9ceb8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55833ef9ce68 <col:38> '_Bool' lvalue Var 0x55833ef92bf8 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55833ef9cf80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55833ef9cf38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55833ef9cf08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55833ef9cfb0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55833ef9cf98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55833ef9cf60 <col:66> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55833ef9d2f8 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55833ef9d030 <col:3> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55833ef9d2e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55833ef9d2b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55833ef9d1d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55833ef9d0f0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55833ef9d0a8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55833ef9d090 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55833ef9d050 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55833ef9d0d8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55833ef9d0c0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55833ef9d070 <col:38> '_Bool' lvalue Var 0x55833ef92bf8 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55833ef9d1b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55833ef9d168 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55833ef9d150 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55833ef9d110 <col:56> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55833ef9d198 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55833ef9d180 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55833ef9d130 <col:74> '_Bool' lvalue Var 0x55833ef92e50 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55833ef9d268 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55833ef9d220 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55833ef9d1f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55833ef9d298 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55833ef9d280 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55833ef9d248 <col:102> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55833ef9d500 <line:852:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55833ef9d318 <col:3> '_Bool' lvalue Var 0x55833ef92bf8 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55833ef9d4e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55833ef9d4b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55833ef9d3d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55833ef9d390 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55833ef9d378 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55833ef9d338 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55833ef9d3c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55833ef9d3a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55833ef9d358 <col:38> '_Bool' lvalue Var 0x55833ef92bf8 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55833ef9d470 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55833ef9d428 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55833ef9d3f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55833ef9d4a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55833ef9d488 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55833ef9d450 <col:66> '_Bool' lvalue Var 0x55833ef92bf8 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55833ef9d7e8 <line:853:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55833ef9d520 <col:3> '_Bool' lvalue Var 0x55833ef92e50 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55833ef9d7d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55833ef9d7a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55833ef9d6c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55833ef9d5e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55833ef9d598 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55833ef9d580 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55833ef9d540 <col:20> '_Bool' lvalue Var 0x55833ef93220 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55833ef9d5c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55833ef9d5b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55833ef9d560 <col:38> '_Bool' lvalue Var 0x55833ef92bf8 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55833ef9d6a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55833ef9d658 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55833ef9d640 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55833ef9d600 <col:56> '_Bool' lvalue Var 0x55833ef93318 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55833ef9d688 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55833ef9d670 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55833ef9d620 <col:74> '_Bool' lvalue Var 0x55833ef92e50 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55833ef9d758 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55833ef9d710 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55833ef9d6e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55833ef9d788 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55833ef9d770 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55833ef9d738 <col:102> '_Bool' lvalue Var 0x55833ef92e50 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55833ef9d840 <line:854:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55833ef9d828 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55833ef9d808 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55833ef9d898 <line:855:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55833ef9d880 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55833ef9d860 <col:3> 'void ()' Function 0x55833ef38e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55833ef9dc20 <line:856:3, col:159> '_Bool' '='
    | |-DeclRefExpr 0x55833ef9d8b8 <col:3> '_Bool' lvalue Var 0x55833ef93408 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55833ef9dc08 <col:21, col:159> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55833ef9dbf0 <col:21, col:159> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55833ef9dbd0 <col:22, col:159> 'int'
    |       `-BinaryOperator 0x55833ef9dbb0 <col:23, col:158> 'int' '&&'
    |         |-BinaryOperator 0x55833ef9daf8 <col:23, col:130> 'int' '&&'
    |         | |-BinaryOperator 0x55833ef9da60 <col:23, col:102> 'int' '&&'
    |         | | |-BinaryOperator 0x55833ef9d9c8 <col:23, col:74> 'int' '&&'
    |         | | | |-BinaryOperator 0x55833ef9d930 <col:23, col:46> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x55833ef9d918 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x55833ef9d8d8 <col:23> 'int' lvalue Var 0x55833ef92398 '__unbuffered_p0_EAX' 'int'
    |         | | | | `-IntegerLiteral 0x55833ef9d8f8 <col:46> 'int' 0
    |         | | | `-BinaryOperator 0x55833ef9d9a8 <col:51, col:74> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55833ef9d990 <col:51> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55833ef9d950 <col:51> 'int' lvalue Var 0x55833ef924b8 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x55833ef9d970 <col:74> 'int' 0
    |         | | `-BinaryOperator 0x55833ef9da40 <col:79, col:102> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55833ef9da28 <col:79> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55833ef9d9e8 <col:79> 'int' lvalue Var 0x55833ef925d8 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55833ef9da08 <col:102> 'int' 0
    |         | `-BinaryOperator 0x55833ef9dad8 <col:107, col:130> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55833ef9dac0 <col:107> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55833ef9da80 <col:107> 'int' lvalue Var 0x55833ef926f8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x55833ef9daa0 <col:130> 'int' 1
    |         `-BinaryOperator 0x55833ef9db70 <col:135, col:158> 'int' '=='
    |           |-ImplicitCastExpr 0x55833ef9db58 <col:135> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55833ef9db18 <col:135> 'int' lvalue Var 0x55833ef92818 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x55833ef9db38 <col:158> 'int' 0
    |-CallExpr 0x55833ef9dc78 <line:857:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55833ef9dc60 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55833ef9dc40 <col:3> 'void ()' Function 0x55833ef38f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55833ef9dcf0 <line:858:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55833ef9dcd8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55833ef9dc98 <col:3> 'void (int)' Function 0x55833ef38bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55833ef9dd30 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55833ef9dd18 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55833ef9dcb8 <col:21> '_Bool' lvalue Var 0x55833ef93408 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55833ef9dd68 <line:859:3, col:10>
      `-IntegerLiteral 0x55833ef9dd48 <col:10> 'int' 0
