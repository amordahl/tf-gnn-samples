TranslationUnitDecl 0x564774aeee18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x564774aef6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x564774aef3b0 '__int128'
|-TypedefDecl 0x564774aef748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x564774aef3d0 'unsigned __int128'
|-TypedefDecl 0x564774aefa50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x564774aef820 'struct __NSConstantString_tag'
|   `-Record 0x564774aef7a0 '__NSConstantString_tag'
|-TypedefDecl 0x564774aefaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x564774aefab0 'char *'
|   `-BuiltinType 0x564774aeeeb0 'char'
|-TypedefDecl 0x564774b2e650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x564774aefd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x564774aefbd0 'struct __va_list_tag'
|     `-Record 0x564774aefb50 '__va_list_tag'
|-FunctionDecl 0x564774b2e790 <./split_7/mix054_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x564774b2e6c0 <col:31> col:34 'int'
|-FunctionDecl 0x564774b2e958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x564774b2ea80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x564774b2ebc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x564774b2eb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x564774b2edf8 <col:40, col:99>
|   |-IfStmt 0x564774b2edc8 <col:42, col:88>
|   | |-UnaryOperator 0x564774b2eca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x564774b2ec90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x564774b2ec70 <col:47> 'int' lvalue ParmVar 0x564774b2eb38 'expression' 'int'
|   | `-CompoundStmt 0x564774b2edb0 <col:59, col:88>
|   |   `-LabelStmt 0x564774b2ed98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x564774b2ed28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x564774b2ed10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x564774b2ecc0 <col:68> 'void () __attribute__((noreturn))' Function 0x564774b2ea80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x564774b2ede0 <col:89>
|   `-ReturnStmt 0x564774b2ede8 <col:91>
|-FunctionDecl 0x564774b2ee40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x564774b2ef00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x564774b2f280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564774b2efb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x564774b2f038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x564774b2f0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564774b2f138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564774b2f340 <line:10:22>
|-FunctionDecl 0x564774b55390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564774b2f3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x564774b2f430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x564774b2f4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564774b2f530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564774b55450 <line:13:22>
|-FunctionDecl 0x564774b55700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564774b554c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x564774b55540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x564774b555c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x564774b557b8 <line:15:22>
|-TypedefDecl 0x564774b55828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x564774aeef70 'unsigned char'
|-TypedefDecl 0x564774b55898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x564774aeef90 'unsigned short'
|-TypedefDecl 0x564774b55908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x564774aeefb0 'unsigned int'
|-TypedefDecl 0x564774b55978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-TypedefDecl 0x564774b559e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x564774aeeed0 'signed char'
|-TypedefDecl 0x564774b55a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x564774aeef70 'unsigned char'
|-TypedefDecl 0x564774b55ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x564774aeeef0 'short'
|-TypedefDecl 0x564774b55b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x564774aeef90 'unsigned short'
|-TypedefDecl 0x564774b55ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x564774aeef10 'int'
|-TypedefDecl 0x564774b55c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x564774aeefb0 'unsigned int'
|-TypedefDecl 0x564774b55c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b55cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-TypedefDecl 0x564774b55d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b55dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-TypedefDecl 0x564774b55e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-TypedefDecl 0x564774b55eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x564774aeefb0 'unsigned int'
|-TypedefDecl 0x564774b55f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x564774aeefb0 'unsigned int'
|-TypedefDecl 0x564774b55f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-TypedefDecl 0x564774b56008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-TypedefDecl 0x564774b56078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x564774aeefb0 'unsigned int'
|-TypedefDecl 0x564774b560e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-TypedefDecl 0x564774b56158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b561c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b56238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x564774aeef10 'int'
|-RecordDecl 0x564774b56290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x564774b56408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x564774b564c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x564774b56460 'struct __fsid_t' sugar
|   `-RecordType 0x564774b56310 '__fsid_t'
|     `-Record 0x564774b56290 ''
|-TypedefDecl 0x564774b56548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b565b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-TypedefDecl 0x564774b56628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-TypedefDecl 0x564774b56698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x564774aeefb0 'unsigned int'
|-TypedefDecl 0x564774b56708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b56778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x564774aeefb0 'unsigned int'
|-TypedefDecl 0x564774b567e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b56858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x564774aeef10 'int'
|-TypedefDecl 0x564774b568c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x564774aeef10 'int'
|-TypedefDecl 0x564774b56938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x564774aeef10 'int'
|-TypedefDecl 0x564774b569a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x564774aef630 'void *'
|   `-BuiltinType 0x564774aeee70 'void'
|-TypedefDecl 0x564774b56a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b56a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b56af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b56b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-TypedefDecl 0x564774b56bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-TypedefDecl 0x564774b56c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-TypedefDecl 0x564774b56cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-TypedefDecl 0x564774b56d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b56d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b56e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b56e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-TypedefDecl 0x564774b56f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x564774b56ed0 '__off64_t' sugar
|   |-Typedef 0x564774b561c8 '__off64_t'
|   `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b57000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x564774b56fc0 '__quad_t *'
|   `-TypedefType 0x564774b56f60 '__quad_t' sugar
|     |-Typedef 0x564774b55d68 '__quad_t'
|     `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b57070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x564774aefab0 'char *'
|   `-BuiltinType 0x564774aeeeb0 'char'
|-TypedefDecl 0x564774b570e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b57150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x564774aeefb0 'unsigned int'
|-FunctionDecl 0x564774b57298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x564774b571c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x564774b585e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x564774b585d8 <line:72:3, col:34>
|     `-CallExpr 0x564774b58598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x564774b58580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564774b58510 <col:10> '<builtin fn type>' Function 0x564774b58380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x564774b585c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564774b58530 <col:29> 'unsigned int' lvalue ParmVar 0x564774b571c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x564774b58380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x564774b58420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x564774b58490 <col:10> Implicit
| `-ConstAttr 0x564774b584e8 <col:10> Implicit
|-FunctionDecl 0x564774b58740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x564774b58638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x564774b58a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x564774b58a48 <line:77:3, col:34>
|     `-CallExpr 0x564774b58a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x564774b589f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564774b58978 <col:10> '<builtin fn type>' Function 0x564774b587e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x564774b58a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x564774b58998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x564774b58638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x564774b587e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x564774b58888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x564774b588f8 <col:10> Implicit
| `-ConstAttr 0x564774b58950 <col:10> Implicit
|-TypedefDecl 0x564774b58a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-TypedefDecl 0x564774b58b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x564774b58ae0 '__time_t' sugar
|   |-Typedef 0x564774b56708 '__time_t'
|   `-BuiltinType 0x564774aeef30 'long'
|-RecordDecl 0x564774b58b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x564774b58c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x564774b58cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x564774b58d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x564774b58d10 '__pid_t' sugar
|   |-Typedef 0x564774b56238 '__pid_t'
|   `-BuiltinType 0x564774aeef10 'int'
|-RecordDecl 0x564774b58da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x564774b58e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x564774b58eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x564774b58f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x564774b58fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-RecordDecl 0x564774b59030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x564774b592c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x564774b5a3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x564774b59310 'struct cpu_set_t' sugar
|   `-RecordType 0x564774b590b0 'cpu_set_t'
|     `-Record 0x564774b59030 ''
|-FunctionDecl 0x564774b5a678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x564774b5a448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564774b5a550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x564774b5a728 <line:107:19>
|-FunctionDecl 0x564774b5a900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x564774b5a790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x564774b5a9a8 <col:69>
|-FunctionDecl 0x564774b5ab20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x564774b5aa10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x564774b5abc8 <col:64>
|-FunctionDecl 0x564774b5ae88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x564774b5ac30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564774b5ad68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564774b5af38 <line:113:22>
|-FunctionDecl 0x564774b5b1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x564774b5afa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564774b5b098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x564774b5b268 <col:88>
|-FunctionDecl 0x564774b5b588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564774b5b2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564774b5b3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x564774b5b440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564774b5b640 <col:62>
|-FunctionDecl 0x564774b5b7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x564774b5b6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x564774b5b860 <col:63>
|-FunctionDecl 0x564774b5b988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x564774b5ba28 <col:47>
|-FunctionDecl 0x564774b5bb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x564774b5ba98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564774b5bbd8 <col:69>
|-FunctionDecl 0x564774b5bce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x564774b5bc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564774b5bd88 <col:69>
|-FunctionDecl 0x564774b5c048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564774b5bdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564774b5bf28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x564774b5c0f8 <col:88>
|-TypedefDecl 0x564774b5c188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x564774b5c150 '__clock_t' sugar
|   |-Typedef 0x564774b56548 '__clock_t'
|   `-BuiltinType 0x564774aeef30 'long'
|-TypedefDecl 0x564774b5c218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x564774b5c1e0 '__clockid_t' sugar
|   |-Typedef 0x564774b56938 '__clockid_t'
|   `-BuiltinType 0x564774aeef10 'int'
|-TypedefDecl 0x564774b5c2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x564774b5c270 '__timer_t' sugar
|   |-Typedef 0x564774b569a8 '__timer_t'
|   `-PointerType 0x564774aef630 'void *'
|     `-BuiltinType 0x564774aeee70 'void'
|-RecordDecl 0x564774b5c300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x564774b5c3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x564774b5c440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x564774b5c4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x564774b5c510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x564774b5c578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x564774b5c5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x564774b5c648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x564774b5c6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x564774b5c718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x564774b5c780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x564774b5c7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x564774b5c838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x564774b5c908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x564774b5c978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x564774b5ca20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x564774b5cbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x564774b5cc90 <col:45>
|-FunctionDecl 0x564774b5ce70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x564774b5cd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x564774b5cf18 <col:54>
|-FunctionDecl 0x564774b5d118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x564774b5cf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x564774b5cff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x564774b5d1c8 <line:157:22>
| `-ConstAttr 0x564774b5d220 <col:63>
|-FunctionDecl 0x564774b5e050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564774b5d318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564774b5e0f8 <col:56>
|-FunctionDecl 0x564774b5e4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x564774b5e168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x564774b5e1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564774b5e260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x564774b5e358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x564774b5e560 <col:54>
|-RecordDecl 0x564774b5e5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x564774b5e668 parent 0x564774aeee18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x564774b5e8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x564774b5e968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x564774b5e9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x564774b5ea38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x564774b5eb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x564774b5ec48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x564774b5ebf0 'struct __locale_struct *'
|   `-ElaboratedType 0x564774b5eb80 'struct __locale_struct' sugar
|     `-RecordType 0x564774b5e640 'struct __locale_struct'
|       `-Record 0x564774b5e5b8 '__locale_struct'
|-TypedefDecl 0x564774b5ecf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x564774b5ecc0 '__locale_t' sugar
|   |-Typedef 0x564774b5ec48 '__locale_t'
|   `-PointerType 0x564774b5ebf0 'struct __locale_struct *'
|     `-ElaboratedType 0x564774b5eb80 'struct __locale_struct' sugar
|       `-RecordType 0x564774b5e640 'struct __locale_struct'
|         `-Record 0x564774b5e5b8 '__locale_struct'
|-FunctionDecl 0x564774b60110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x564774b5ed68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x564774b5ede0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564774b5ee60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x564774b5eef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564774b5ef68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x564774b601d8 <col:40>
|-FunctionDecl 0x564774b603c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564774b602a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x564774b60470 <col:66>
|-FunctionDecl 0x564774b60580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564774b604d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x564774b60628 <col:69>
|-FunctionDecl 0x564774b60858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564774b60690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564774b60720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564774b60908 <col:52>
|-FunctionDecl 0x564774b60ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564774b60970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564774b60a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564774b60b60 <col:55>
|-FunctionDecl 0x564774b60cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x564774b60be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x564774b60da0 <col:62>
|-FunctionDecl 0x564774b60f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x564774b60e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x564774b60fc0 <col:60>
|-FunctionDecl 0x564774b612b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564774b61118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564774b61198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x564774b61368 <col:44>
|-FunctionDecl 0x564774b61578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564774b613d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564774b61450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x564774b61628 <col:49>
|-VarDecl 0x564774b61728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x564774b617a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x564774b61828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x564774b618f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x564774b61a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x564774b61ac0 <col:42>
|-VarDecl 0x564774b61b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x564774b61bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x564774b61d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x564774b61c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x564774b61de0 <col:57>
|-FunctionDecl 0x564774b61ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564774b61e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564774b61f98 <col:56>
|-FunctionDecl 0x564774b620d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564774b62018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x564774b62178 <col:59>
|-FunctionDecl 0x564774b62280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x564774b621e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x564774b62328 <col:48>
| `-ConstAttr 0x564774b62380 <col:89>
|-FunctionDecl 0x564774b625e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564774b62438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x564774b624c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x564774b62848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564774b626d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564774b62768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x564774b628f8 <col:88>
|-FunctionDecl 0x564774b62a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564774b62960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564774b629f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x564774b62b40 <col:88>
|-FunctionDecl 0x564774b62d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x564774b62ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564774b62c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x564774b62e08 <line:208:22>
|-FunctionDecl 0x564774b63178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564774b62e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564774b62ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x564774b62f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x564774b63010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x564774b63478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x564774b63278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x564774b63350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x564774b63528 <col:85>
|-FunctionDecl 0x564774b63918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x564774b63590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564774b636c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x564774b637d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x564774b639d0 <col:52>
|-FunctionDecl 0x564774b63b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x564774b63a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564774b63bf0 <col:61>
|-FunctionDecl 0x564774b640f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x564774b63c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564774b63cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x564774b63e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x564774b63ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x564774b641b0 <col:62>
|-FunctionDecl 0x564774b643c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x564774b64218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564774b642a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x564774b64478 <line:221:22>
|-FunctionDecl 0x564774b64578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x564774b644e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564774b64620 <col:65>
|-TypedefDecl 0x564774b64690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x564774aeefd0 'unsigned long'
|-RecordDecl 0x564774b646e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x564774b64830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564774b64898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564774b64948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x564774b648f0 'union pthread_attr_t' sugar
|   `-RecordType 0x564774b64770 'union pthread_attr_t'
|     `-Record 0x564774b646e8 'pthread_attr_t'
|-RecordDecl 0x564774b649a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x564774b64b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x564774b64b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x564774b64c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x564774b64be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x564774b64a20 'struct __pthread_internal_list'
|     `-Record 0x564774b649a0 '__pthread_internal_list'
|-RecordDecl 0x564774b64cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x564774b64d58 parent 0x564774aeee18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x564774b64e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564774b64e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x564774b64f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x564774b64f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x564774b64fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x564774b65038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x564774b69110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x564774b691c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x564774b692b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x564774b69318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564774b694a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x564774b69440 'union pthread_mutex_t' sugar
|   `-RecordType 0x564774b64d30 'pthread_mutex_t'
|     `-Record 0x564774b64cb0 ''
|-RecordDecl 0x564774b69510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x564774b69650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564774b696b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564774b69770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x564774b69710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x564774b69590 'pthread_mutexattr_t'
|     `-Record 0x564774b69510 ''
|-RecordDecl 0x564774b697e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x564774b69888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x564774b69950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564774b699b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x564774b69a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x564774b69a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x564774b69af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x564774b69b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x564774b69bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x564774b69c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x564774b69ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_7/mix054_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_7/mix054_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x564774b69dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x564774b69e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x564774b69f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x564774b69f10 'union pthread_cond_t' sugar
|   `-RecordType 0x564774b69860 'pthread_cond_t'
|     `-Record 0x564774b697e0 ''
|-RecordDecl 0x564774b69fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x564774b6b130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564774b6b198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564774b6b250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x564774b6b1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x564774b6a060 'pthread_condattr_t'
|     `-Record 0x564774b69fe0 ''
|-TypedefDecl 0x564774b6b2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x564774aeefb0 'unsigned int'
|-TypedefDecl 0x564774b6b348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x564774aeef10 'int'
|-RecordDecl 0x564774b6b3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x564774b6b448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x564774b6b510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564774b6b578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x564774b6b5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x564774b6b648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x564774b6b6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x564774b6b718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x564774b6b780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x564774b6b7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x564774b6b850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x564774b6b8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x564774b6b920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x564774b6b9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_7/mix054_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_7/mix054_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x564774b6ba78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564774b6bae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564774b6bc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x564774b6bbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x564774b6b420 'pthread_rwlock_t'
|     `-Record 0x564774b6b3a0 ''
|-RecordDecl 0x564774b6bca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x564774b6bde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x564774b6be48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564774b6bf00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x564774b6bea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x564774b6bd20 'pthread_rwlockattr_t'
|     `-Record 0x564774b6bca0 ''
|-TypedefDecl 0x564774b6bf88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x564774aeef14 'volatile int' volatile
|   `-BuiltinType 0x564774aeef10 'int'
|-RecordDecl 0x564774b6bfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x564774b6d140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x564774b6d1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564774b6d260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x564774b6d200 'union pthread_barrier_t' sugar
|   `-RecordType 0x564774b6c060 'pthread_barrier_t'
|     `-Record 0x564774b6bfe0 ''
|-RecordDecl 0x564774b6d2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x564774b6d3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564774b6d438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564774b6d4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x564774b6d490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x564774b6d350 'pthread_barrierattr_t'
|     `-Record 0x564774b6d2d0 ''
|-TypedefDecl 0x564774b6d608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x564774b6d5a0 'long [8]' 8 
|   `-BuiltinType 0x564774aeef30 'long'
|-EnumDecl 0x564774b6d660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x564774b6d728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x564774b6d778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x564774b6d7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x564774b6d898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x564774b6d8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x564774b6d938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x564774b6d988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x564774b6da10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x564774b6d9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x564774b6d9d8 <col:26> 'int' EnumConstant 0x564774b6d898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x564774b6da98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x564774b6da80 <col:29> 'int'
| |   `-DeclRefExpr 0x564774b6da60 <col:29> 'int' EnumConstant 0x564774b6d8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x564774b6db20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x564774b6db08 <col:30> 'int'
| |   `-DeclRefExpr 0x564774b6dae8 <col:30> 'int' EnumConstant 0x564774b6d938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x564774b6dba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x564774b6db90 <col:27> 'int'
|     `-DeclRefExpr 0x564774b6db70 <col:27> 'int' EnumConstant 0x564774b6da10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x564774b6dbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x564774b6dcc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x564774b6dd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x564774b6dd38 <col:30> 'int'
| |   `-DeclRefExpr 0x564774b6dd18 <col:30> 'int' EnumConstant 0x564774b6dcc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x564774b6dda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x564774b6de28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x564774b6de10 <col:29> 'int'
|     `-DeclRefExpr 0x564774b6ddf0 <col:29> 'int' EnumConstant 0x564774b6dda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x564774b6de78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x564774b6df48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x564774b6df98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x564774b6dfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x564774b6e038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x564774b6e150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x564774b6e1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x564774b6e1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x564774b6e278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x564774b6e260 <col:31> 'int'
|     `-DeclRefExpr 0x564774b6e240 <col:31> 'int' EnumConstant 0x564774b6e150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x564774b6e2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x564774b6e398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x564774b6e3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x564774b6e438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x564774b6e508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x564774b6e558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x564774b6e5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x564774b6e678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x564774b6e6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x564774b6e718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x564774b6e958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x564774b6e9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x564774b6ea28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x564774b6eb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x564774b6eb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x564774b6ec68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x564774b6ecb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x564774b6ed08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x564774b6edd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x564774b6ee28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x564774b6f488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x564774b6ef20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x564774b6f030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564774b6f270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x564774b6f2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x564774b6f548 <col:47>
| |-NonNullAttr 0x564774b6f5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x564774b6f5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x564774b6f700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x564774b6f630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x564774b6f958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x564774b6f7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x564774b6f838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x564774b6fb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x564774b6fa18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x564774b6fbd0 <col:60>
|-FunctionDecl 0x564774b6fd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x564774b6fdc0 <col:54>
| `-ConstAttr 0x564774b6fe18 <col:95>
|-FunctionDecl 0x564774b6ffe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x564774b6fe50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564774b6fec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x564774b70098 <line:394:19>
| `-ConstAttr 0x564774b700f0 <col:60>
|-FunctionDecl 0x564774b71b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564774b719d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564774b71bb0 <col:71>
| `-NonNullAttr 0x564774b71c08 <col:112, col:126> 1
|-FunctionDecl 0x564774b71d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564774b71c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564774b71db8 <line:397:22>
| `-NonNullAttr 0x564774b71e10 <col:63, col:77> 1
|-FunctionDecl 0x564774b72038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x564774b71e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564774b71ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x564774b720e8 <line:400:22>
| `-NonNullAttr 0x564774b72140 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b72348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564774b72188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564774b72208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x564774b723f8 <line:403:22>
| `-NonNullAttr 0x564774b72450 <col:63, col:77> 1
|-FunctionDecl 0x564774b726a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x564774b72498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564774b72540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x564774b72758 <line:406:22>
| `-NonNullAttr 0x564774b727b0 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b739e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564774b727f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564774b72870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564774b73a98 <line:409:22>
| `-NonNullAttr 0x564774b73af0 <col:63, col:77> 1
|-FunctionDecl 0x564774b73d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564774b73b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564774b73bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564774b73dd8 <line:412:22>
| `-NonNullAttr 0x564774b73e30 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b74068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564774b73e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x564774b73f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x564774b74118 <col:37>
| `-NonNullAttr 0x564774b74170 <col:78, col:95> 1 2
|-FunctionDecl 0x564774b74358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564774b741b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564774b74238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x564774b74408 <line:418:22>
| `-NonNullAttr 0x564774b74460 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b745e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564774b744a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564774b74528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x564774b74698 <line:420:22>
| `-NonNullAttr 0x564774b746f0 <col:63, col:77> 1
|-FunctionDecl 0x564774b74898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564774b74738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564774b747b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x564774b74948 <line:423:22>
| `-NonNullAttr 0x564774b749c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b74b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564774b74a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564774b74a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x564774b74bf8 <line:426:22>
| `-NonNullAttr 0x564774b74c50 <col:63, col:77> 1
|-FunctionDecl 0x564774b74df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564774b74c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564774b74d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x564774b74ea8 <line:429:22>
| `-NonNullAttr 0x564774b74f00 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b75088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564774b74f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564774b74fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x564774b75138 <line:431:22>
| `-NonNullAttr 0x564774b75190 <col:63, col:77> 1
|-FunctionDecl 0x564774b753b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x564774b751d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564774b75258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x564774b75468 <line:434:22>
| |-NonNullAttr 0x564774b754c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x564774b754f8 <col:100> "" ""
|-FunctionDecl 0x564774b75708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x564774b75548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564774b755c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x564774b757b8 <line:437:22>
| |-NonNullAttr 0x564774b75810 <col:63, col:77> 1
| `-DeprecatedAttr 0x564774b75848 <col:97> "" ""
|-FunctionDecl 0x564774b75a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564774b75898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564774b75910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564774b75af8 <line:440:22>
| `-NonNullAttr 0x564774b75b50 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b75cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564774b75b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564774b75c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564774b75d80 <line:443:22>
| `-NonNullAttr 0x564774b75dd8 <col:63, col:77> 1
|-FunctionDecl 0x564774b760c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564774b75e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564774b75ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x564774b75f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564774b76180 <line:447:22>
| `-NonNullAttr 0x564774b761d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x564774b76488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x564774b76230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564774b762b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x564774b76328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564774b76540 <col:43>
| `-NonNullAttr 0x564774b76598 <col:84, col:98> 1
|-FunctionDecl 0x564774b76858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564774b765e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564774b76668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x564774b766f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x564774b76910 <line:452:22>
| `-NonNullAttr 0x564774b76968 <col:63, col:77> 3
|-FunctionDecl 0x564774b76c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564774b769e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564774b76a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x564774b76af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564774b76d30 <line:456:22>
| `-NonNullAttr 0x564774b76d88 <col:63, col:80> 2 3
|-FunctionDecl 0x564774b76f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x564774b76dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564774b76e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x564774b77028 <line:458:22>
|-FunctionDecl 0x564774b773f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x564774b770f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x564774b77290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x564774b774a8 <col:52, col:69> 1 2
|-FunctionDecl 0x564774b77650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x564774b77530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x564774b775b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x564774b77838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x564774b77718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x564774b77798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x564774b779f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x564774b778f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x564774b77b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x564774b77bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x564774b77c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x564774b77d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x564774b77dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x564774b77fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_7/mix054_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x564774b78098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x564774b78150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x564774b780f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x564774b77c50 '__pthread_unwind_buf_t'
| |   `-Record 0x564774b77bd0 ''
| `-AlignedAttr 0x564774b781a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x564774b78220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x564774b78380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x564774b783e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x564774b78450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x564774b784b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x564774b786c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564774b785b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564774b78808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564774b78778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564774b78a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564774b788c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x564774b78aa8 <line:487:22>
|-RecordDecl 0x564774b78b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x564774b78e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x564774b78c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x564774b78cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x564774b78ec8 <col:86>
| `-ReturnsTwiceAttr 0x564774b78f20 <col:12> Implicit
|-FunctionDecl 0x564774b79248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564774b78ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x564774b79100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x564774b792f8 <line:493:22>
| `-NonNullAttr 0x564774b79350 <col:63, col:77> 1
|-FunctionDecl 0x564774b794c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564774b79398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564774b79570 <line:495:22>
| `-NonNullAttr 0x564774b795c8 <col:63, col:77> 1
|-FunctionDecl 0x564774b796d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564774b79618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564774b79778 <line:497:22>
| `-NonNullAttr 0x564774b797d0 <col:52, col:66> 1
|-FunctionDecl 0x564774b798d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564774b79818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564774b79978 <line:499:22>
| `-NonNullAttr 0x564774b799d0 <col:52, col:66> 1
|-FunctionDecl 0x564774b7ac28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564774b7aa38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564774b7aac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564774b7acd8 <col:36>
| `-NonNullAttr 0x564774b7ad30 <col:66, col:83> 1 2
|-FunctionDecl 0x564774b7ae30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564774b7ad78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564774b7aed8 <line:504:22>
| `-NonNullAttr 0x564774b7af30 <col:52, col:66> 1
|-FunctionDecl 0x564774b7b1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564774b7afe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564774b7b060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564774b7b278 <line:508:22>
| `-NonNullAttr 0x564774b7b2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b7b598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x564774b7b318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564774b7b398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x564774b7b418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x564774b7b650 <line:512:22>
| `-NonNullAttr 0x564774b7b6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x564774b7b7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564774b7b6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564774b7b858 <line:514:22>
| `-NonNullAttr 0x564774b7b8b0 <col:63, col:77> 1
|-FunctionDecl 0x564774b7bad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564774b7b960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564774b7bb80 <line:516:22>
| `-NonNullAttr 0x564774b7bbd8 <col:63, col:77> 1
|-FunctionDecl 0x564774b7bce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564774b7bc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564774b7bd88 <line:518:22>
| `-NonNullAttr 0x564774b7bde0 <col:63, col:77> 1
|-FunctionDecl 0x564774b7c008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564774b7be28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564774b7bea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x564774b7c0b8 <line:522:22>
| `-NonNullAttr 0x564774b7c110 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b7c318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564774b7c158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564774b7c1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x564774b7c3c8 <line:525:22>
| `-NonNullAttr 0x564774b7c420 <col:63, col:77> 1
|-FunctionDecl 0x564774b7c5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564774b7c468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564774b7c4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x564774b7c678 <line:528:22>
| `-NonNullAttr 0x564774b7c6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b7c858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564774b7c718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564774b7c798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x564774b7c908 <line:530:22>
| `-NonNullAttr 0x564774b7c960 <col:63, col:77> 1
|-FunctionDecl 0x564774b7cb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564774b7c9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564774b7ca40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x564774b7cbd0 <line:534:22>
| `-NonNullAttr 0x564774b7cc28 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b7cdb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564774b7cc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564774b7ccf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x564774b7ce68 <line:537:22>
| `-NonNullAttr 0x564774b7cec0 <col:63, col:77> 1
|-FunctionDecl 0x564774b7d068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564774b7cf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564774b7cf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564774b7d118 <line:541:22>
| `-NonNullAttr 0x564774b7d170 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b7d2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564774b7d1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564774b7d238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x564774b7d3a8 <line:544:22>
| `-NonNullAttr 0x564774b7d400 <col:63, col:77> 1
|-FunctionDecl 0x564774b7d5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x564774b7d448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x564774b7d4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x564774b7d698 <line:547:22>
| `-NonNullAttr 0x564774b7d6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b7d878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564774b7d738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564774b7d7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x564774b7d928 <line:550:22>
| `-NonNullAttr 0x564774b7d980 <col:63, col:77> 1
|-FunctionDecl 0x564774b7ecf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x564774b7eaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564774b7ebb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x564774b7eda8 <col:29>
| `-NonNullAttr 0x564774b7ee00 <col:70, col:84> 1
|-FunctionDecl 0x564774b7ef78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564774b7ee48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564774b7f020 <line:555:22>
| `-NonNullAttr 0x564774b7f078 <col:63, col:77> 1
|-FunctionDecl 0x564774b7f180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564774b7f0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564774b7f228 <line:557:22>
| `-NonNullAttr 0x564774b7f280 <col:52, col:66> 1
|-FunctionDecl 0x564774b7f380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564774b7f2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564774b7f428 <line:559:19>
| `-NonNullAttr 0x564774b7f480 <col:49, col:63> 1
|-FunctionDecl 0x564774b7f6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564774b7f4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564774b7f558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564774b7f768 <col:39>
| `-NonNullAttr 0x564774b7f7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x564774b7f8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564774b7f808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564774b7f968 <line:564:22>
| `-NonNullAttr 0x564774b7f9c0 <col:52, col:66> 1
|-FunctionDecl 0x564774b7fb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564774b7fa70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564774b7fbd0 <line:566:22>
| `-NonNullAttr 0x564774b7fc28 <col:52, col:66> 1
|-FunctionDecl 0x564774b7fde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564774b7fc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564774b7fd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564774b7fe98 <col:39>
| `-NonNullAttr 0x564774b7fef0 <col:69, col:86> 1 2
|-FunctionDecl 0x564774b7fff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564774b7ff38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564774b80098 <line:571:22>
| `-NonNullAttr 0x564774b800f0 <col:52, col:66> 1
|-FunctionDecl 0x564774b802d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564774b801a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564774b80380 <line:573:22>
| `-NonNullAttr 0x564774b803d8 <col:63, col:77> 1
|-FunctionDecl 0x564774b804e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564774b80428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564774b80588 <line:575:22>
| `-NonNullAttr 0x564774b805e0 <col:63, col:77> 1
|-FunctionDecl 0x564774b80808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564774b80628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564774b806a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x564774b808b8 <line:579:22>
| `-NonNullAttr 0x564774b80910 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b80b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564774b80958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564774b809d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x564774b80be8 <line:582:22>
| `-NonNullAttr 0x564774b80c40 <col:63, col:77> 1
|-FunctionDecl 0x564774b80de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564774b80c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564774b80d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x564774b80e98 <line:586:22>
| `-NonNullAttr 0x564774b80ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b81078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564774b80f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564774b80fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x564774b81128 <col:36>
| `-NonNullAttr 0x564774b81180 <col:77, col:91> 1
|-FunctionDecl 0x564774b814b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x564774b81260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564774b81370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x564774b81568 <line:591:22>
| `-NonNullAttr 0x564774b815c0 <col:63, col:77> 1
|-FunctionDecl 0x564774b81738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564774b81608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564774b817e0 <line:593:22>
| `-NonNullAttr 0x564774b81838 <col:63, col:77> 1
|-FunctionDecl 0x564774b81940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564774b81888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564774b819e8 <line:595:22>
| `-NonNullAttr 0x564774b81a40 <col:52, col:66> 1
|-FunctionDecl 0x564774b81b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564774b81aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564774b81c00 <line:597:22>
| `-NonNullAttr 0x564774b81c58 <col:52, col:66> 1
|-FunctionDecl 0x564774b81e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x564774b81ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564774b81d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x564774b81f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x564774b82268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564774b81fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564774b82030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564774b820c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x564774b82320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x564774b82538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564774b82400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564774b825e0 <line:606:22>
| `-NonNullAttr 0x564774b82638 <col:63, col:77> 1
|-FunctionDecl 0x564774b82740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564774b82688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564774b827e8 <line:608:22>
| `-NonNullAttr 0x564774b82840 <col:63, col:77> 1
|-FunctionDecl 0x564774b82aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564774b82888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564774b82908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x564774b82b50 <line:612:22>
| `-NonNullAttr 0x564774b82ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b82db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x564774b82bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564774b82c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x564774b82e68 <col:37>
| `-NonNullAttr 0x564774b82ec0 <col:78, col:92> 1
|-FunctionDecl 0x564774b830d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x564774b82f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564774b82fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x564774b83188 <line:618:22>
| `-NonNullAttr 0x564774b831e0 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b833a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x564774b83228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564774b832a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x564774b83458 <line:621:22>
| `-NonNullAttr 0x564774b834b0 <col:63, col:77> 1
|-FunctionDecl 0x564774b83758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x564774b83590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x564774b83610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x564774b83808 <line:623:22>
| `-NonNullAttr 0x564774b83860 <col:63, col:77> 1
|-FunctionDecl 0x564774b839d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564774b838a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564774b83ab0 <line:625:22>
| `-NonNullAttr 0x564774b83b08 <col:63, col:77> 1
|-FunctionDecl 0x564774b83c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564774b83b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564774b83cb8 <line:627:22>
| `-NonNullAttr 0x564774b83d10 <col:52, col:66> 1
|-FunctionDecl 0x564774b83e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564774b83d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564774b83eb8 <line:629:22>
| `-NonNullAttr 0x564774b83f10 <col:52, col:66> 1
|-FunctionDecl 0x564774b84010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564774b83f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564774b840b8 <line:631:22>
| `-NonNullAttr 0x564774b84110 <col:52, col:66> 1
|-FunctionDecl 0x564774b844e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x564774b841f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x564774b84300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564774b84380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x564774b845a0 <line:635:22>
| `-NonNullAttr 0x564774b845f8 <col:63, col:77> 1
|-FunctionDecl 0x564774b84778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564774b84648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564774b84820 <line:637:22>
| `-NonNullAttr 0x564774b84878 <col:63, col:77> 1
|-FunctionDecl 0x564774b84980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564774b848c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564774b84a28 <line:639:22>
| `-NonNullAttr 0x564774b84a80 <col:52, col:66> 1
|-FunctionDecl 0x564774b85c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564774b85b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564774b85d30 <line:641:22>
| `-NonNullAttr 0x564774b85d88 <col:63, col:77> 1
|-FunctionDecl 0x564774b85e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564774b85dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564774b85f38 <line:643:22>
| `-NonNullAttr 0x564774b85f90 <col:63, col:77> 1
|-FunctionDecl 0x564774b861b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564774b85fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564774b86058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x564774b86268 <line:647:22>
| `-NonNullAttr 0x564774b862c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564774b864c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x564774b86308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x564774b86388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x564774b86578 <line:650:22>
| `-NonNullAttr 0x564774b865d0 <col:63, col:77> 1
|-FunctionDecl 0x564774b86918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x564774b866b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x564774b867d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x564774b869c8 <line:653:22>
| `-NonNullAttr 0x564774b86a20 <col:63, col:77> 1
|-FunctionDecl 0x564774b86b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x564774b86a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564774b86c30 <col:69>
|-FunctionDecl 0x564774b86da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x564774b86c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564774b86e50 <col:72>
|-FunctionDecl 0x564774b87088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x564774b86eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x564774b86f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x564774b87138 <col:44>
|-FunctionDecl 0x564774b87358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x564774b871a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564774b87218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x564774b87408 <line:660:22>
| `-NonNullAttr 0x564774b87460 <col:63, col:77> 2
|-FunctionDecl 0x564774b878a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x564774b87540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x564774b87650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x564774b87760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x564774b87960 <col:47>
|-FunctionDecl 0x564774b87af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x564774b879d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564774b87c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x564774b87bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564774b87d10 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x564774b87dd0 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x564774b87e90 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x564774b87f48 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x564774b87fc8 prev 0x564774b87f48 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x564774b88030 <col:24> 'int' 0
|-VarDecl 0x564774b88068 <line:672:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x564774b880e8 prev 0x564774b88068 <line:673:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x564774b88150 <col:27> 'int' 0
|-VarDecl 0x564774b88180 <line:674:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x564774b881f8 <line:675:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x564774b88278 <line:676:1, col:5> col:5 used x 'int'
|-VarDecl 0x564774b882f8 prev 0x564774b88278 <line:677:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x564774b88360 <col:9> 'int' 0
|-VarDecl 0x564774b88398 <line:678:1, col:5> col:5 used y 'int'
|-VarDecl 0x564774b88418 prev 0x564774b88398 <line:679:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x564774b88480 <col:9> 'int' 0
|-VarDecl 0x564774b884b0 <line:680:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x564774b88530 <line:681:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x564774b885a8 <line:682:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x564774b88620 <line:683:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x564774b88698 <line:684:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x564774b88710 <line:685:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x564774b88788 <line:686:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x564774b88800 <line:687:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x564774b88878 <line:688:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x564774b888f8 <line:689:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x564774b88978 <line:690:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x564774b889f0 <line:691:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x564774b88a70 <line:692:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x564774b88b00 <line:693:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x564774b88b78 <line:694:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x564774b88bf0 <line:695:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x564774b88d08 prev 0x564774b87af0 <line:696:1, line:723:1> line:696:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x564774b88c70 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564774b8a4b8 <line:697:1, line:723:1>
|   |-CallExpr 0x564774b88e18 <line:698:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564774b88e00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564774b88db0 <col:3> 'void ()' Function 0x564774b2ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564774b88e90 <line:699:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564774b88e38 <col:3> 'int' lvalue Var 0x564774b88a70 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x564774b88e78 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564774b88e58 <col:15> 'int' lvalue Var 0x564774b88978 'y$w_buff0' 'int'
|   |-BinaryOperator 0x564774b88ef0 <line:700:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564774b88eb0 <col:3> 'int' lvalue Var 0x564774b88978 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x564774b88ed0 <col:15> 'int' 1
|   |-BinaryOperator 0x564774b88f68 <line:701:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564774b88f10 <col:3> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564774b88f50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564774b88f30 <col:20> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564774b89000 <line:702:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564774b88f88 <col:3> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x564774b88fd8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564774b88fa8 <col:27> 'int' 1
|   |-CallExpr 0x564774b89188 <line:703:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x564774b89170 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x564774b89020 <col:3> 'void (int)' Function 0x564774b2ebc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x564774b89120 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x564774b89100 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x564774b890e0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x564774b89098 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x564774b89080 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x564774b89040 <col:23> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x564774b890c8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x564774b890b0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x564774b89060 <col:41> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564774b89208 <line:704:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564774b891b0 <col:3> '_Bool' lvalue Var 0x564774b88710 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x564774b891f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564774b891d0 <col:20> '_Bool' lvalue Var 0x564774b885a8 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x564774b89280 <line:705:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564774b89228 <col:3> '_Bool' lvalue Var 0x564774b88788 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564774b89268 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564774b89248 <col:20> '_Bool' lvalue Var 0x564774b88620 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564774b892f8 <line:706:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564774b892a0 <col:3> '_Bool' lvalue Var 0x564774b88800 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564774b892e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564774b892c0 <col:20> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564774b89390 <line:707:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564774b89318 <col:3> '_Bool' lvalue Var 0x564774b88620 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x564774b89368 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564774b89338 <col:27> 'int' 1
|   |-CallExpr 0x564774b893e8 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564774b893d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564774b893b0 <col:3> 'void ()' Function 0x564774b2ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564774b89440 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564774b89428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564774b89408 <col:3> 'void ()' Function 0x564774b2ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564774b894a0 <line:710:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564774b89460 <col:3> 'int' lvalue Var 0x564774b882f8 'x' 'int'
|   | `-IntegerLiteral 0x564774b89480 <col:7> 'int' 1
|   |-CallExpr 0x564774b894f8 <line:711:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564774b894e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564774b894c0 <col:3> 'void ()' Function 0x564774b2ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564774b89550 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564774b89538 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564774b89518 <col:3> 'void ()' Function 0x564774b2ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564774b89838 <line:713:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564774b89570 <col:3> 'int' lvalue Var 0x564774b88418 'y' 'int'
|   | `-ConditionalOperator 0x564774b89808 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564774b89630 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564774b895e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564774b895d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564774b89590 <col:7> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564774b89618 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564774b89600 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564774b895b0 <col:25> '_Bool' lvalue Var 0x564774b88620 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x564774b897f0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564774b89650 <col:42> 'int' lvalue Var 0x564774b88978 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x564774b897d0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564774b897a0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564774b89710 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564774b896c8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564774b896b0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564774b89670 <col:55> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564774b896f8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564774b896e0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564774b89690 <col:73> '_Bool' lvalue Var 0x564774b88788 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x564774b89770 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564774b89730 <col:90> 'int' lvalue Var 0x564774b88a70 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564774b89788 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564774b89750 <col:102> 'int' lvalue Var 0x564774b88418 'y' 'int'
|   |-BinaryOperator 0x564774b89a40 <line:714:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564774b89858 <col:3> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564774b89a28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564774b899f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564774b89918 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564774b898d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564774b898b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564774b89878 <col:20> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564774b89900 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564774b898e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564774b89898 <col:38> '_Bool' lvalue Var 0x564774b88620 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564774b899b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564774b89968 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564774b89938 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564774b899e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564774b899c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564774b89990 <col:66> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564774b89d48 <line:715:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564774b89a60 <col:3> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564774b89d30 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564774b89d00 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564774b89c20 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564774b89b40 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564774b89ad8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564774b89ac0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564774b89a80 <col:20> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564774b89b28 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564774b89b10 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564774b89aa0 <col:38> '_Bool' lvalue Var 0x564774b88620 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564774b89c00 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564774b89bb8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564774b89ba0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564774b89b60 <col:56> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564774b89be8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564774b89bd0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564774b89b80 <col:74> '_Bool' lvalue Var 0x564774b88788 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564774b89cb8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564774b89c70 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564774b89c40 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564774b89ce8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564774b89cd0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564774b89c98 <col:102> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564774b89f50 <line:716:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564774b89d68 <col:3> '_Bool' lvalue Var 0x564774b88620 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564774b89f38 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564774b89f08 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564774b89e28 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564774b89de0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564774b89dc8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564774b89d88 <col:20> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564774b89e10 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564774b89df8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564774b89da8 <col:38> '_Bool' lvalue Var 0x564774b88620 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564774b89ec0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564774b89e78 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564774b89e48 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564774b89ef0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564774b89ed8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564774b89ea0 <col:66> '_Bool' lvalue Var 0x564774b88620 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564774b8a238 <line:717:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564774b89f70 <col:3> '_Bool' lvalue Var 0x564774b88788 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564774b8a220 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564774b8a1f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564774b8a110 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564774b8a030 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564774b89fe8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564774b89fd0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564774b89f90 <col:20> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564774b8a018 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564774b8a000 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564774b89fb0 <col:38> '_Bool' lvalue Var 0x564774b88620 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564774b8a0f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564774b8a0a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564774b8a090 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564774b8a050 <col:56> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564774b8a0d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564774b8a0c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564774b8a070 <col:74> '_Bool' lvalue Var 0x564774b88788 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564774b8a1a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564774b8a160 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564774b8a130 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564774b8a1d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564774b8a1c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564774b8a188 <col:102> '_Bool' lvalue Var 0x564774b88788 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x564774b8a290 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564774b8a278 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564774b8a258 <col:3> 'void ()' Function 0x564774b2ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564774b8a2e8 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564774b8a2d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564774b8a2b0 <col:3> 'void ()' Function 0x564774b2ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564774b8a3a0 <line:720:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564774b8a308 <col:3> 'int' lvalue Var 0x564774b87fc8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564774b8a380 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564774b8a368 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564774b8a328 <col:22> 'int' lvalue Var 0x564774b87fc8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564774b8a348 <col:41> 'int' 1
|   |-CallExpr 0x564774b8a3f8 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564774b8a3e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564774b8a3c0 <col:3> 'void ()' Function 0x564774b2ef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564774b8a4a8 <line:722:3, col:36>
|     `-CallExpr 0x564774b8a488 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564774b8a470 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564774b8a418 <col:10> 'void *(void)' Function 0x564774b2e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564774b8a640 prev 0x564774b87c48 <line:724:1, line:756:1> line:724:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x564774b8a5a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564774b8e208 <line:725:1, line:756:1>
|   |-CallExpr 0x564774b8a720 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564774b8a708 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564774b8a6e8 <col:3> 'void ()' Function 0x564774b2ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564774b8a780 <line:727:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564774b8a740 <col:3> 'int' lvalue Var 0x564774b882f8 'x' 'int'
|   | `-IntegerLiteral 0x564774b8a760 <col:7> 'int' 2
|   |-CallExpr 0x564774b8a7d8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564774b8a7c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564774b8a7a0 <col:3> 'void ()' Function 0x564774b2ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564774b8a830 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564774b8a818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564774b8a7f8 <col:3> 'void ()' Function 0x564774b2ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564774b8a8e0 <line:730:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564774b8a850 <col:3> '_Bool' lvalue Var 0x564774b88b78 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x564774b8a8c8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564774b8a8a8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564774b8a890 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564774b8a870 <col:19> 'void *(void)' Function 0x564774b2e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564774b8a990 <line:731:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564774b8a900 <col:3> '_Bool' lvalue Var 0x564774b88bf0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x564774b8a978 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564774b8a958 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564774b8a940 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564774b8a920 <col:19> 'void *(void)' Function 0x564774b2e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564774b8aa08 <line:732:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x564774b8a9b0 <col:3> '_Bool' lvalue Var 0x564774b884b0 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x564774b8a9f0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564774b8a9d0 <col:21> '_Bool' lvalue Var 0x564774b88bf0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x564774b8aa80 <line:733:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564774b8aa28 <col:3> 'int' lvalue Var 0x564774b88530 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x564774b8aa68 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564774b8aa48 <col:15> 'int' lvalue Var 0x564774b88418 'y' 'int'
|   |-BinaryOperator 0x564774b8aec8 <line:734:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x564774b8aaa0 <col:3> 'int' lvalue Var 0x564774b88418 'y' 'int'
|   | `-ConditionalOperator 0x564774b8ae98 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x564774b8acc0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x564774b8abe0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x564774b8aaf8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x564774b8aae0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x564774b8aac0 <col:8> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x564774b8abc0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x564774b8ab58 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x564774b8ab40 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x564774b8ab20 <col:27> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x564774b8aba8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x564774b8ab90 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x564774b8ab70 <col:46> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x564774b8aca0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x564774b8ac38 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x564774b8ac20 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x564774b8ac00 <col:65> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x564774b8ac88 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x564774b8ac70 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x564774b8ac50 <col:84> '_Bool' lvalue Var 0x564774b88800 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564774b8ae80 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564774b8ace0 <col:101> 'int' lvalue Var 0x564774b88418 'y' 'int'
|   |   `-ParenExpr 0x564774b8ae60 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x564774b8ae30 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x564774b8ada0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564774b8ad58 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564774b8ad40 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564774b8ad00 <col:106> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564774b8ad88 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564774b8ad70 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564774b8ad20 <col:124> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564774b8ae00 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564774b8adc0 <col:141> 'int' lvalue Var 0x564774b88978 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x564774b8ae18 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564774b8ade0 <col:153> 'int' lvalue Var 0x564774b88a70 'y$w_buff1' 'int'
|   |-BinaryOperator 0x564774b8b3d8 <line:735:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564774b8aee8 <col:3> 'int' lvalue Var 0x564774b88978 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x564774b8b3a8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564774b8b378 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564774b8b360 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564774b8af08 <col:15> '_Bool' lvalue Var 0x564774b88bf0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564774b8b390 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564774b8af28 <col:31> 'int' lvalue Var 0x564774b88978 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x564774b8b340 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564774b8b310 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564774b8b138 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564774b8b058 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564774b8af80 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564774b8af68 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564774b8af48 <col:45> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564774b8b038 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564774b8afd0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564774b8afb8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564774b8af98 <col:64> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x564774b8b020 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564774b8b008 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564774b8afe8 <col:83> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564774b8b118 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564774b8b0b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564774b8b098 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564774b8b078 <col:102> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x564774b8b100 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564774b8b0e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564774b8b0c8 <col:121> '_Bool' lvalue Var 0x564774b88800 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564774b8b2f8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564774b8b158 <col:138> 'int' lvalue Var 0x564774b88978 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x564774b8b2d8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564774b8b2a8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564774b8b218 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564774b8b1d0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564774b8b1b8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564774b8b178 <col:151> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564774b8b200 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564774b8b1e8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564774b8b198 <col:169> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x564774b8b278 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564774b8b238 <col:186> 'int' lvalue Var 0x564774b88978 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x564774b8b290 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564774b8b258 <col:198> 'int' lvalue Var 0x564774b88978 'y$w_buff0' 'int'
|   |-BinaryOperator 0x564774b8b8e8 <line:736:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564774b8b3f8 <col:3> 'int' lvalue Var 0x564774b88a70 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x564774b8b8b8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564774b8b888 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564774b8b870 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564774b8b418 <col:15> '_Bool' lvalue Var 0x564774b88bf0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564774b8b8a0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564774b8b438 <col:31> 'int' lvalue Var 0x564774b88a70 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x564774b8b850 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564774b8b820 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564774b8b648 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564774b8b568 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564774b8b490 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564774b8b478 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564774b8b458 <col:45> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564774b8b548 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564774b8b4e0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564774b8b4c8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564774b8b4a8 <col:64> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x564774b8b530 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564774b8b518 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564774b8b4f8 <col:83> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564774b8b628 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564774b8b5c0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564774b8b5a8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564774b8b588 <col:102> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x564774b8b610 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564774b8b5f8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564774b8b5d8 <col:121> '_Bool' lvalue Var 0x564774b88800 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564774b8b808 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564774b8b668 <col:138> 'int' lvalue Var 0x564774b88a70 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x564774b8b7e8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564774b8b7b8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564774b8b728 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564774b8b6e0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564774b8b6c8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564774b8b688 <col:151> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564774b8b710 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564774b8b6f8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564774b8b6a8 <col:169> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x564774b8b788 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564774b8b748 <col:186> 'int' lvalue Var 0x564774b88a70 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x564774b8b7a0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564774b8b768 <col:198> 'int' lvalue Var 0x564774b88a70 'y$w_buff1' 'int'
|   |-BinaryOperator 0x564774b8bea0 <line:737:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564774b8b908 <col:3> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564774b8be88 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564774b8be58 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564774b8be10 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564774b8bdf8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564774b8b928 <col:20> '_Bool' lvalue Var 0x564774b88bf0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564774b8be40 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564774b8be28 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564774b8b948 <col:36> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x564774b8bdd8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564774b8bda8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564774b8bb68 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564774b8ba78 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564774b8b9a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564774b8b988 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564774b8b968 <col:55> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564774b8ba58 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564774b8b9f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564774b8b9d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564774b8b9b8 <col:74> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564774b8ba40 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564774b8ba28 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564774b8ba08 <col:93> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564774b8bb48 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564774b8bad0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564774b8bab8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564774b8ba98 <col:112> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564774b8bb30 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564774b8bb08 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564774b8bae8 <col:131> '_Bool' lvalue Var 0x564774b88800 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564774b8bd90 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564774b8bd78 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564774b8bb88 <col:148> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x564774b8bd58 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564774b8bd28 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564774b8bc48 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564774b8bc00 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564774b8bbe8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564774b8bba8 <col:166> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564774b8bc30 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564774b8bc18 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564774b8bbc8 <col:184> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564774b8bce0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564774b8bc98 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564774b8bc68 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564774b8bd10 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564774b8bcf8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564774b8bcc0 <col:212> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564774b8c468 <line:738:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564774b8bec0 <col:3> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564774b8c450 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564774b8c420 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564774b8c3d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564774b8c3c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564774b8bee0 <col:20> '_Bool' lvalue Var 0x564774b88bf0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564774b8c408 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564774b8c3f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564774b8bf00 <col:36> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x564774b8c3a0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564774b8c370 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564774b8c110 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564774b8c030 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564774b8bf58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564774b8bf40 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564774b8bf20 <col:55> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564774b8c010 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564774b8bfa8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564774b8bf90 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564774b8bf70 <col:74> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564774b8bff8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564774b8bfe0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564774b8bfc0 <col:93> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564774b8c0f0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564774b8c088 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564774b8c070 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564774b8c050 <col:112> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564774b8c0d8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564774b8c0c0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564774b8c0a0 <col:131> '_Bool' lvalue Var 0x564774b88800 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564774b8c358 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564774b8c340 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564774b8c130 <col:148> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x564774b8c320 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564774b8c2f0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564774b8c1f0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564774b8c1a8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564774b8c190 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564774b8c150 <col:166> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564774b8c1d8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564774b8c1c0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564774b8c170 <col:184> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564774b8c2c0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564774b8c240 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564774b8c210 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564774b8c2d8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564774b8c298 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564774b8c268 <col:219> 'int' 0
|   |-BinaryOperator 0x564774b8ca10 <line:739:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564774b8c488 <col:3> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564774b8c9f8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564774b8c9c8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564774b8c980 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564774b8c968 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564774b8c4a8 <col:20> '_Bool' lvalue Var 0x564774b88bf0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564774b8c9b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564774b8c998 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564774b8c4c8 <col:36> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x564774b8c948 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564774b8c918 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564774b8c6d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564774b8c5f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564774b8c520 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564774b8c508 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564774b8c4e8 <col:55> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564774b8c5d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564774b8c570 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564774b8c558 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564774b8c538 <col:74> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564774b8c5c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564774b8c5a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564774b8c588 <col:93> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564774b8c6b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564774b8c650 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564774b8c638 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564774b8c618 <col:112> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564774b8c6a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564774b8c688 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564774b8c668 <col:131> '_Bool' lvalue Var 0x564774b88800 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564774b8c900 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564774b8c8e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564774b8c6f8 <col:148> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x564774b8c8c8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564774b8c898 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564774b8c7b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564774b8c770 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564774b8c758 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564774b8c718 <col:166> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564774b8c7a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564774b8c788 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564774b8c738 <col:184> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564774b8c850 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564774b8c808 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564774b8c7d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564774b8c880 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564774b8c868 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564774b8c830 <col:212> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564774b8cfe8 <line:740:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564774b8ca30 <col:3> '_Bool' lvalue Var 0x564774b88800 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564774b8cfd0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564774b8cfa0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564774b8cf58 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564774b8cf40 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564774b8ca50 <col:20> '_Bool' lvalue Var 0x564774b88bf0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564774b8cf88 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564774b8cf70 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564774b8ca70 <col:36> '_Bool' lvalue Var 0x564774b88800 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x564774b8cf20 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564774b8cef0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564774b8cc90 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564774b8cbb0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564774b8cac8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564774b8cab0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564774b8ca90 <col:55> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564774b8cb90 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564774b8cb18 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564774b8cb00 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564774b8cae0 <col:74> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564774b8cb78 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564774b8cb60 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564774b8cb40 <col:93> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564774b8cc70 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564774b8cc08 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564774b8cbf0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564774b8cbd0 <col:112> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564774b8cc58 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564774b8cc40 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564774b8cc20 <col:131> '_Bool' lvalue Var 0x564774b88800 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564774b8ced8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564774b8cec0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564774b8ccb0 <col:148> '_Bool' lvalue Var 0x564774b88800 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x564774b8cea0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564774b8ce70 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564774b8cd70 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564774b8cd28 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564774b8cd10 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564774b8ccd0 <col:166> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564774b8cd58 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564774b8cd40 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564774b8ccf0 <col:184> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564774b8ce40 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564774b8cdc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564774b8cd90 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564774b8ce58 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564774b8ce18 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564774b8cde8 <col:219> 'int' 0
|   |-BinaryOperator 0x564774b8d060 <line:741:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564774b8d008 <col:3> 'int' lvalue Var 0x564774b880e8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x564774b8d048 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564774b8d028 <col:25> 'int' lvalue Var 0x564774b88418 'y' 'int'
|   |-BinaryOperator 0x564774b8d190 <line:742:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x564774b8d080 <col:3> 'int' lvalue Var 0x564774b88418 'y' 'int'
|   | `-ConditionalOperator 0x564774b8d160 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x564774b8d118 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564774b8d100 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564774b8d0a0 <col:7> '_Bool' lvalue Var 0x564774b884b0 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x564774b8d130 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564774b8d0c0 <col:25> 'int' lvalue Var 0x564774b88530 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x564774b8d148 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x564774b8d0e0 <col:37> 'int' lvalue Var 0x564774b88418 'y' 'int'
|   |-BinaryOperator 0x564774b8d228 <line:743:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x564774b8d1b0 <col:3> '_Bool' lvalue Var 0x564774b884b0 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x564774b8d200 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564774b8d1d0 <col:28> 'int' 0
|   |-CallExpr 0x564774b8d280 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564774b8d268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564774b8d248 <col:3> 'void ()' Function 0x564774b2ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564774b8d2d8 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564774b8d2c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564774b8d2a0 <col:3> 'void ()' Function 0x564774b2ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564774b8d5c0 <line:746:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564774b8d2f8 <col:3> 'int' lvalue Var 0x564774b88418 'y' 'int'
|   | `-ConditionalOperator 0x564774b8d590 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564774b8d3b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564774b8d370 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564774b8d358 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564774b8d318 <col:7> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564774b8d3a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564774b8d388 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564774b8d338 <col:25> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564774b8d578 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564774b8d3d8 <col:42> 'int' lvalue Var 0x564774b88978 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x564774b8d558 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564774b8d528 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564774b8d498 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564774b8d450 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564774b8d438 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564774b8d3f8 <col:55> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564774b8d480 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564774b8d468 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564774b8d418 <col:73> '_Bool' lvalue Var 0x564774b88800 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564774b8d4f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564774b8d4b8 <col:90> 'int' lvalue Var 0x564774b88a70 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564774b8d510 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564774b8d4d8 <col:102> 'int' lvalue Var 0x564774b88418 'y' 'int'
|   |-BinaryOperator 0x564774b8d7c8 <line:747:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564774b8d5e0 <col:3> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564774b8d7b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564774b8d780 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564774b8d6a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564774b8d658 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564774b8d640 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564774b8d600 <col:20> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564774b8d688 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564774b8d670 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564774b8d620 <col:38> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564774b8d738 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564774b8d6f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564774b8d6c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564774b8d768 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564774b8d750 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564774b8d718 <col:66> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564774b8dab0 <line:748:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564774b8d7e8 <col:3> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564774b8da98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564774b8da68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564774b8d988 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564774b8d8a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564774b8d860 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564774b8d848 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564774b8d808 <col:20> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564774b8d890 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564774b8d878 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564774b8d828 <col:38> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564774b8d968 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564774b8d920 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564774b8d908 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564774b8d8c8 <col:56> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564774b8d950 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564774b8d938 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564774b8d8e8 <col:74> '_Bool' lvalue Var 0x564774b88800 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564774b8da20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564774b8d9d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564774b8d9a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564774b8da50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564774b8da38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564774b8da00 <col:102> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564774b8dcd8 <line:749:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564774b8dad0 <col:3> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564774b8dcc0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564774b8dc90 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564774b8dbb0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564774b8db68 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564774b8db50 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564774b8daf0 <col:20> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564774b8db98 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564774b8db80 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564774b8db10 <col:38> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564774b8dc48 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564774b8dc00 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564774b8dbd0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564774b8dc78 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564774b8dc60 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564774b8dc28 <col:66> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564774b8dfc0 <line:750:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564774b8dcf8 <col:3> '_Bool' lvalue Var 0x564774b88800 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564774b8dfa8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564774b8df78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564774b8de98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564774b8ddb8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564774b8dd70 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564774b8dd58 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564774b8dd18 <col:20> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564774b8dda0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564774b8dd88 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564774b8dd38 <col:38> '_Bool' lvalue Var 0x564774b88698 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564774b8de78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564774b8de30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564774b8de18 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564774b8ddd8 <col:56> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564774b8de60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564774b8de48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564774b8ddf8 <col:74> '_Bool' lvalue Var 0x564774b88800 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564774b8df30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564774b8dee8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564774b8deb8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564774b8df60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564774b8df48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564774b8df10 <col:102> '_Bool' lvalue Var 0x564774b88800 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x564774b8e018 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564774b8e000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564774b8dfe0 <col:3> 'void ()' Function 0x564774b2ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564774b8e070 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564774b8e058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564774b8e038 <col:3> 'void ()' Function 0x564774b2ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564774b8e128 <line:753:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564774b8e090 <col:3> 'int' lvalue Var 0x564774b87fc8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564774b8e108 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564774b8e0f0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564774b8e0b0 <col:22> 'int' lvalue Var 0x564774b87fc8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564774b8e0d0 <col:41> 'int' 1
|   |-CallExpr 0x564774b8e180 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564774b8e168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564774b8e148 <col:3> 'void ()' Function 0x564774b2ef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564774b8e1f8 <line:755:3, col:36>
|     `-CallExpr 0x564774b8e1d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564774b8e1c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564774b8e1a0 <col:10> 'void *(void)' Function 0x564774b2e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564774b8e328 prev 0x564774b87d10 <line:757:1, line:759:1> line:757:6 fence 'void ()'
| `-CompoundStmt 0x564774b8e3c8 <line:758:1, line:759:1>
|-FunctionDecl 0x564774b8e3f8 prev 0x564774b87dd0 <line:760:1, line:762:1> line:760:6 isync 'void ()'
| `-CompoundStmt 0x564774b8e498 <line:761:1, line:762:1>
|-FunctionDecl 0x564774b8e4c8 prev 0x564774b87e90 <line:763:1, line:765:1> line:763:6 lwfence 'void ()'
| `-CompoundStmt 0x564774b8e568 <line:764:1, line:765:1>
`-FunctionDecl 0x564774b8e5d8 <line:766:1, line:788:1> line:766:5 main 'int ()'
  `-CompoundStmt 0x564774b8fef8 <line:767:1, line:788:1>
    |-DeclStmt 0x564774b8e6f0 <line:768:3, col:18>
    | `-VarDecl 0x564774b8e688 <col:3, col:13> col:13 used t1451 'pthread_t':'unsigned long'
    |-CallExpr 0x564774b8e8f8 <line:769:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564774b8e8e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564774b8e708 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564774b6f488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564774b8e748 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564774b8e728 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564774b8e688 't1451' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564774b8e938 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564774b8e7c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564774b8e798 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564774b8e760 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564774b8e950 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564774b8e7e0 <col:39> 'void *(void *)' Function 0x564774b88d08 'P0' 'void *(void *)'
    | `-ParenExpr 0x564774b8e860 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564774b8e838 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564774b8e800 <col:52> 'int' 0
    |-DeclStmt 0x564774b8e9e0 <line:770:3, col:18>
    | `-VarDecl 0x564774b8e978 <col:3, col:13> col:13 used t1452 'pthread_t':'unsigned long'
    |-CallExpr 0x564774b8eb98 <line:771:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564774b8eb80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564774b8e9f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564774b6f488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564774b8ea38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564774b8ea18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564774b8e978 't1452' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564774b8ebd8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564774b8eab0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564774b8ea88 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564774b8ea50 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564774b8ebf0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564774b8ead0 <col:39> 'void *(void *)' Function 0x564774b8a640 'P1' 'void *(void *)'
    | `-ParenExpr 0x564774b8eb60 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564774b8eb28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564774b8eaf0 <col:52> 'int' 0
    |-CallExpr 0x564774b8ec40 <line:772:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564774b8ec28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564774b8ec08 <col:3> 'void ()' Function 0x564774b2ee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564774b8ed10 <line:773:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x564774b8ec60 <col:3> '_Bool' lvalue Var 0x564774b88180 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x564774b8ecf8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x564774b8ecd8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x564774b8ecc0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x564774b8ec80 <col:21> 'int' lvalue Var 0x564774b87fc8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x564774b8eca0 <col:41> 'int' 2
    |-CallExpr 0x564774b8ed68 <line:774:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564774b8ed50 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564774b8ed30 <col:3> 'void ()' Function 0x564774b2ef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564774b8ede0 <line:775:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564774b8edc8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564774b8ed88 <col:3> 'void (int)' Function 0x564774b2e790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x564774b8ee20 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564774b8ee08 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564774b8eda8 <col:21> '_Bool' lvalue Var 0x564774b88180 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x564774b8ee70 <line:776:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564774b8ee58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564774b8ee38 <col:3> 'void ()' Function 0x564774b2ee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564774b8f158 <line:777:3, col:103> 'int' '='
    | |-DeclRefExpr 0x564774b8ee90 <col:3> 'int' lvalue Var 0x564774b88418 'y' 'int'
    | `-ConditionalOperator 0x564774b8f128 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x564774b8ef50 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x564774b8ef08 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x564774b8eef0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x564774b8eeb0 <col:7> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x564774b8ef38 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x564774b8ef20 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x564774b8eed0 <col:25> '_Bool' lvalue Var 0x564774b885a8 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564774b8f110 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564774b8ef70 <col:42> 'int' lvalue Var 0x564774b88978 'y$w_buff0' 'int'
    |   `-ParenExpr 0x564774b8f0f0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x564774b8f0c0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x564774b8f030 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564774b8efe8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564774b8efd0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564774b8ef90 <col:55> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564774b8f018 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564774b8f000 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564774b8efb0 <col:73> '_Bool' lvalue Var 0x564774b88710 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564774b8f090 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564774b8f050 <col:90> 'int' lvalue Var 0x564774b88a70 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x564774b8f0a8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564774b8f070 <col:102> 'int' lvalue Var 0x564774b88418 'y' 'int'
    |-BinaryOperator 0x564774b8f360 <line:778:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564774b8f178 <col:3> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564774b8f348 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564774b8f318 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564774b8f238 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564774b8f1f0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564774b8f1d8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564774b8f198 <col:20> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564774b8f220 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564774b8f208 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564774b8f1b8 <col:38> '_Bool' lvalue Var 0x564774b885a8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564774b8f2d0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564774b8f288 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564774b8f258 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564774b8f300 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564774b8f2e8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564774b8f2b0 <col:66> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564774b8f648 <line:779:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564774b8f380 <col:3> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564774b8f630 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564774b8f600 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564774b8f520 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564774b8f440 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564774b8f3f8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564774b8f3e0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564774b8f3a0 <col:20> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564774b8f428 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564774b8f410 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564774b8f3c0 <col:38> '_Bool' lvalue Var 0x564774b885a8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564774b8f500 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564774b8f4b8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564774b8f4a0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564774b8f460 <col:56> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564774b8f4e8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564774b8f4d0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564774b8f480 <col:74> '_Bool' lvalue Var 0x564774b88710 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564774b8f5b8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564774b8f570 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564774b8f540 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564774b8f5e8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564774b8f5d0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564774b8f598 <col:102> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x564774b8f850 <line:780:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564774b8f668 <col:3> '_Bool' lvalue Var 0x564774b885a8 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564774b8f838 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564774b8f808 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564774b8f728 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564774b8f6e0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564774b8f6c8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564774b8f688 <col:20> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564774b8f710 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564774b8f6f8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564774b8f6a8 <col:38> '_Bool' lvalue Var 0x564774b885a8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564774b8f7c0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564774b8f778 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564774b8f748 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564774b8f7f0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564774b8f7d8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564774b8f7a0 <col:66> '_Bool' lvalue Var 0x564774b885a8 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564774b8fb38 <line:781:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564774b8f870 <col:3> '_Bool' lvalue Var 0x564774b88710 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564774b8fb20 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564774b8faf0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564774b8fa10 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564774b8f930 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564774b8f8e8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564774b8f8d0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564774b8f890 <col:20> '_Bool' lvalue Var 0x564774b889f0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564774b8f918 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564774b8f900 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564774b8f8b0 <col:38> '_Bool' lvalue Var 0x564774b885a8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564774b8f9f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564774b8f9a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564774b8f990 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564774b8f950 <col:56> '_Bool' lvalue Var 0x564774b88b00 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564774b8f9d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564774b8f9c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564774b8f970 <col:74> '_Bool' lvalue Var 0x564774b88710 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564774b8faa8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564774b8fa60 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564774b8fa30 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564774b8fad8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564774b8fac0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564774b8fa88 <col:102> '_Bool' lvalue Var 0x564774b88710 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x564774b8fba8 <line:782:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564774b8fb90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564774b8fb70 <col:3> 'void ()' Function 0x564774b2ef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564774b8fc00 <line:783:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564774b8fbe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564774b8fbc8 <col:3> 'void ()' Function 0x564774b2ee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564774b8fda0 <line:784:3, col:57> '_Bool' '='
    | |-DeclRefExpr 0x564774b8fc20 <col:3> '_Bool' lvalue Var 0x564774b881f8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x564774b8fd88 <col:21, col:57> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x564774b8fd70 <col:21, col:57> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x564774b8fd50 <col:22, col:57> 'int'
    |       `-BinaryOperator 0x564774b8fd30 <col:23, col:56> 'int' '&&'
    |         |-BinaryOperator 0x564774b8fc98 <col:23, col:28> 'int' '=='
    |         | |-ImplicitCastExpr 0x564774b8fc80 <col:23> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x564774b8fc40 <col:23> 'int' lvalue Var 0x564774b882f8 'x' 'int'
    |         | `-IntegerLiteral 0x564774b8fc60 <col:28> 'int' 2
    |         `-BinaryOperator 0x564774b8fd10 <col:33, col:56> 'int' '=='
    |           |-ImplicitCastExpr 0x564774b8fcf8 <col:33> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564774b8fcb8 <col:33> 'int' lvalue Var 0x564774b880e8 '__unbuffered_p1_EAX' 'int'
    |           `-IntegerLiteral 0x564774b8fcd8 <col:56> 'int' 0
    |-CallExpr 0x564774b8fdf8 <line:785:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564774b8fde0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564774b8fdc0 <col:3> 'void ()' Function 0x564774b2ef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564774b8fe70 <line:786:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564774b8fe58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564774b8fe18 <col:3> 'void (int)' Function 0x564774b2ebc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x564774b8feb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564774b8fe98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564774b8fe38 <col:21> '_Bool' lvalue Var 0x564774b881f8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x564774b8fee8 <line:787:3, col:10>
      `-IntegerLiteral 0x564774b8fec8 <col:10> 'int' 0
