TranslationUnitDecl 0x55982ccf92f8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55982ccf9bb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55982ccf9890 '__int128'
|-TypedefDecl 0x55982ccf9c28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55982ccf98b0 'unsigned __int128'
|-TypedefDecl 0x55982ccf9f30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55982ccf9d00 'struct __NSConstantString_tag'
|   `-Record 0x55982ccf9c80 '__NSConstantString_tag'
|-TypedefDecl 0x55982ccf9fd8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55982ccf9f90 'char *'
|   `-BuiltinType 0x55982ccf9390 'char'
|-TypedefDecl 0x55982cd38870 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55982ccfa270 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55982ccfa0b0 'struct __va_list_tag'
|     `-Record 0x55982ccfa030 '__va_list_tag'
|-FunctionDecl 0x55982cd389b0 <./split_7/podwr001_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55982cd388e0 <col:31> col:34 'int'
|-FunctionDecl 0x55982cd38b78 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55982cd38ca0 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55982cd38de8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55982cd38d58 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55982cd39018 <col:40, col:99>
|   |-IfStmt 0x55982cd38fe8 <col:42, col:88>
|   | |-UnaryOperator 0x55982cd38ec8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55982cd38eb0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55982cd38e90 <col:47> 'int' lvalue ParmVar 0x55982cd38d58 'expression' 'int'
|   | `-CompoundStmt 0x55982cd38fd0 <col:59, col:88>
|   |   `-LabelStmt 0x55982cd38fb8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55982cd38f48 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55982cd38f30 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55982cd38ee0 <col:68> 'void () __attribute__((noreturn))' Function 0x55982cd38ca0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55982cd39000 <col:89>
|   `-ReturnStmt 0x55982cd39008 <col:91>
|-FunctionDecl 0x55982cd39060 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55982cd39120 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55982cd394a0 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55982cd391d8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55982cd39258 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55982cd392d8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55982cd39358 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55982cd39560 <line:10:22>
|-FunctionDecl 0x55982cd5f5b0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55982cd395d0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55982cd39650 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55982cd396d0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55982cd39750 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55982cd5f670 <line:13:22>
|-FunctionDecl 0x55982cd5f920 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55982cd5f6e0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55982cd5f760 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55982cd5f7e0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55982cd5f9d8 <line:15:22>
|-TypedefDecl 0x55982cd5fa48 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55982ccf9450 'unsigned char'
|-TypedefDecl 0x55982cd5fab8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55982ccf9470 'unsigned short'
|-TypedefDecl 0x55982cd5fb28 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55982ccf9490 'unsigned int'
|-TypedefDecl 0x55982cd5fb98 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-TypedefDecl 0x55982cd5fc08 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55982ccf93b0 'signed char'
|-TypedefDecl 0x55982cd5fc78 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55982ccf9450 'unsigned char'
|-TypedefDecl 0x55982cd5fce8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55982ccf93d0 'short'
|-TypedefDecl 0x55982cd5fd58 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55982ccf9470 'unsigned short'
|-TypedefDecl 0x55982cd5fdc8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55982ccf93f0 'int'
|-TypedefDecl 0x55982cd5fe38 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55982ccf9490 'unsigned int'
|-TypedefDecl 0x55982cd5fea8 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd5ff18 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-TypedefDecl 0x55982cd5ff88 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd5fff8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-TypedefDecl 0x55982cd60068 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-TypedefDecl 0x55982cd600d8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55982ccf9490 'unsigned int'
|-TypedefDecl 0x55982cd60148 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55982ccf9490 'unsigned int'
|-TypedefDecl 0x55982cd601b8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-TypedefDecl 0x55982cd60228 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-TypedefDecl 0x55982cd60298 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55982ccf9490 'unsigned int'
|-TypedefDecl 0x55982cd60308 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-TypedefDecl 0x55982cd60378 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd603e8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd60458 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55982ccf93f0 'int'
|-RecordDecl 0x55982cd604b0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55982cd60628 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55982cd606e0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55982cd60680 'struct __fsid_t' sugar
|   `-RecordType 0x55982cd60530 '__fsid_t'
|     `-Record 0x55982cd604b0 ''
|-TypedefDecl 0x55982cd60768 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd607d8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-TypedefDecl 0x55982cd60848 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-TypedefDecl 0x55982cd608b8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55982ccf9490 'unsigned int'
|-TypedefDecl 0x55982cd60928 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd60998 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55982ccf9490 'unsigned int'
|-TypedefDecl 0x55982cd60a08 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd60a78 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55982ccf93f0 'int'
|-TypedefDecl 0x55982cd60ae8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55982ccf93f0 'int'
|-TypedefDecl 0x55982cd60b58 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55982ccf93f0 'int'
|-TypedefDecl 0x55982cd60bc8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55982ccf9b10 'void *'
|   `-BuiltinType 0x55982ccf9350 'void'
|-TypedefDecl 0x55982cd60c38 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd60ca8 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd60d18 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd60d88 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-TypedefDecl 0x55982cd60df8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-TypedefDecl 0x55982cd60e68 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-TypedefDecl 0x55982cd60ed8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-TypedefDecl 0x55982cd60f48 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd60fb8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd61028 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd61098 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-TypedefDecl 0x55982cd61128 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55982cd610f0 '__off64_t' sugar
|   |-Typedef 0x55982cd603e8 '__off64_t'
|   `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd61220 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55982cd611e0 '__quad_t *'
|   `-TypedefType 0x55982cd61180 '__quad_t' sugar
|     |-Typedef 0x55982cd5ff88 '__quad_t'
|     `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd61290 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55982ccf9f90 'char *'
|   `-BuiltinType 0x55982ccf9390 'char'
|-TypedefDecl 0x55982cd61300 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd61370 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55982ccf9490 'unsigned int'
|-FunctionDecl 0x55982cd614b8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55982cd613e0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55982cd62808 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55982cd627f8 <line:72:3, col:34>
|     `-CallExpr 0x55982cd627b8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55982cd627a0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55982cd62730 <col:10> '<builtin fn type>' Function 0x55982cd625a0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55982cd627e0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55982cd62750 <col:29> 'unsigned int' lvalue ParmVar 0x55982cd613e0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55982cd625a0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55982cd62640 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55982cd626b0 <col:10> Implicit
| `-ConstAttr 0x55982cd62708 <col:10> Implicit
|-FunctionDecl 0x55982cd62960 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55982cd62858 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55982cd62c78 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55982cd62c68 <line:77:3, col:34>
|     `-CallExpr 0x55982cd62c28 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55982cd62c10 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55982cd62b98 <col:10> '<builtin fn type>' Function 0x55982cd62a08 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55982cd62c50 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55982cd62bb8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55982cd62858 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55982cd62a08 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55982cd62aa8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55982cd62b18 <col:10> Implicit
| `-ConstAttr 0x55982cd62b70 <col:10> Implicit
|-TypedefDecl 0x55982cd62ca8 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-TypedefDecl 0x55982cd62d38 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55982cd62d00 '__time_t' sugar
|   |-Typedef 0x55982cd60928 '__time_t'
|   `-BuiltinType 0x55982ccf9410 'long'
|-RecordDecl 0x55982cd62d90 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55982cd62e48 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55982cd62ed8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55982cd62f68 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55982cd62f30 '__pid_t' sugar
|   |-Typedef 0x55982cd60458 '__pid_t'
|   `-BuiltinType 0x55982ccf93f0 'int'
|-RecordDecl 0x55982cd62fc0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55982cd63080 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55982cd630d0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55982cd63190 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55982cd631f8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-RecordDecl 0x55982cd63250 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55982cd634e0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55982cd645c0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55982cd63530 'struct cpu_set_t' sugar
|   `-RecordType 0x55982cd632d0 'cpu_set_t'
|     `-Record 0x55982cd63250 ''
|-FunctionDecl 0x55982cd64898 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55982cd64668 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55982cd64770 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55982cd64948 <line:107:19>
|-FunctionDecl 0x55982cd64b20 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55982cd649b0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55982cd64bc8 <col:69>
|-FunctionDecl 0x55982cd64d40 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55982cd64c30 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55982cd64de8 <col:64>
|-FunctionDecl 0x55982cd650a8 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55982cd64e50 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55982cd64f88 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55982cd65158 <line:113:22>
|-FunctionDecl 0x55982cd653d8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55982cd651c0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55982cd652b8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55982cd65488 <col:88>
|-FunctionDecl 0x55982cd657a8 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55982cd654f0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55982cd655d0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55982cd65660 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55982cd65860 <col:62>
|-FunctionDecl 0x55982cd659d8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55982cd658c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55982cd65a80 <col:63>
|-FunctionDecl 0x55982cd65ba8 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55982cd65c48 <col:47>
|-FunctionDecl 0x55982cd65d50 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55982cd65cb8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55982cd65df8 <col:69>
|-FunctionDecl 0x55982cd65f00 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55982cd65e68 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55982cd65fa8 <col:69>
|-FunctionDecl 0x55982cd66268 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55982cd66010 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55982cd66148 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55982cd66318 <col:88>
|-TypedefDecl 0x55982cd663a8 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55982cd66370 '__clock_t' sugar
|   |-Typedef 0x55982cd60768 '__clock_t'
|   `-BuiltinType 0x55982ccf9410 'long'
|-TypedefDecl 0x55982cd66438 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55982cd66400 '__clockid_t' sugar
|   |-Typedef 0x55982cd60b58 '__clockid_t'
|   `-BuiltinType 0x55982ccf93f0 'int'
|-TypedefDecl 0x55982cd664c8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55982cd66490 '__timer_t' sugar
|   |-Typedef 0x55982cd60bc8 '__timer_t'
|   `-PointerType 0x55982ccf9b10 'void *'
|     `-BuiltinType 0x55982ccf9350 'void'
|-RecordDecl 0x55982cd66520 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55982cd665f8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55982cd66660 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55982cd666c8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55982cd66730 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55982cd66798 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55982cd66800 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55982cd66868 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55982cd668d0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55982cd66938 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55982cd669a0 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55982cd66a08 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55982cd66a58 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55982cd66b28 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55982cd66b98 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55982cd66c40 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55982cd66e10 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55982cd66eb0 <col:45>
|-FunctionDecl 0x55982cd67090 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55982cd66f80 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55982cd67138 <col:54>
|-FunctionDecl 0x55982cd67338 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55982cd671a0 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55982cd67218 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55982cd673e8 <line:157:22>
| `-ConstAttr 0x55982cd67440 <col:63>
|-FunctionDecl 0x55982cd68270 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55982cd67538 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55982cd68318 <col:56>
|-FunctionDecl 0x55982cd686c0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55982cd68388 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55982cd68400 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55982cd68480 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55982cd68578 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55982cd68780 <col:54>
|-RecordDecl 0x55982cd687d8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55982cd68888 parent 0x55982ccf92f8 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55982cd68ae8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55982cd68b88 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55982cd68bf0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55982cd68c58 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55982cd68d48 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55982cd68e68 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55982cd68e10 'struct __locale_struct *'
|   `-ElaboratedType 0x55982cd68da0 'struct __locale_struct' sugar
|     `-RecordType 0x55982cd68860 'struct __locale_struct'
|       `-Record 0x55982cd687d8 '__locale_struct'
|-TypedefDecl 0x55982cd68f18 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55982cd68ee0 '__locale_t' sugar
|   |-Typedef 0x55982cd68e68 '__locale_t'
|   `-PointerType 0x55982cd68e10 'struct __locale_struct *'
|     `-ElaboratedType 0x55982cd68da0 'struct __locale_struct' sugar
|       `-RecordType 0x55982cd68860 'struct __locale_struct'
|         `-Record 0x55982cd687d8 '__locale_struct'
|-FunctionDecl 0x55982cd6a330 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55982cd68f88 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55982cd69000 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55982cd69080 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55982cd69110 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55982cd69188 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55982cd6a3f8 <col:40>
|-FunctionDecl 0x55982cd6a5e8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55982cd6a4c0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55982cd6a690 <col:66>
|-FunctionDecl 0x55982cd6a7a0 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55982cd6a6f8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55982cd6a848 <col:69>
|-FunctionDecl 0x55982cd6aa78 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55982cd6a8b0 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55982cd6a940 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55982cd6ab28 <col:52>
|-FunctionDecl 0x55982cd6acd0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55982cd6ab90 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55982cd6ac20 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55982cd6ad80 <col:55>
|-FunctionDecl 0x55982cd6af18 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55982cd6ae00 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55982cd6afc0 <col:62>
|-FunctionDecl 0x55982cd6b138 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55982cd6b028 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55982cd6b1e0 <col:60>
|-FunctionDecl 0x55982cd6b438 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55982cd6b298 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55982cd6b318 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55982cd6b4e8 <col:44>
|-FunctionDecl 0x55982cd6b6f8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55982cd6b550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55982cd6b5d0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55982cd6b7a8 <col:49>
|-VarDecl 0x55982cd6b8a8 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55982cd6b928 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55982cd6b9a8 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55982cd6ba70 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55982cd6bba0 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55982cd6bc40 <col:42>
|-VarDecl 0x55982cd6bcb0 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55982cd6bd30 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55982cd6beb8 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55982cd6bda8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55982cd6bf60 <col:57>
|-FunctionDecl 0x55982cd6c070 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55982cd6bfe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55982cd6c118 <col:56>
|-FunctionDecl 0x55982cd6c250 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55982cd6c198 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55982cd6c2f8 <col:59>
|-FunctionDecl 0x55982cd6c400 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55982cd6c368 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55982cd6c4a8 <col:48>
| `-ConstAttr 0x55982cd6c500 <col:89>
|-FunctionDecl 0x55982cd6c768 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55982cd6c5b8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55982cd6c648 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55982cd6c9c8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55982cd6c858 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55982cd6c8e8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55982cd6ca78 <col:88>
|-FunctionDecl 0x55982cd6cc10 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55982cd6cae0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55982cd6cb70 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55982cd6ccc0 <col:88>
|-FunctionDecl 0x55982cd6ced8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55982cd6cd28 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55982cd6cdb8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55982cd6cf88 <line:208:22>
|-FunctionDecl 0x55982cd6d2f8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55982cd6cff0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55982cd6d070 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55982cd6d100 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55982cd6d190 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55982cd6d5f8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55982cd6d3f8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55982cd6d4d0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55982cd6d6a8 <col:85>
|-FunctionDecl 0x55982cd6da98 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55982cd6d710 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55982cd6d848 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55982cd6d950 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55982cd6db50 <col:52>
|-FunctionDecl 0x55982cd6dcc8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55982cd6dbb8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55982cd6dd70 <col:61>
|-FunctionDecl 0x55982cd6e270 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55982cd6ddd8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55982cd6de58 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55982cd6df88 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55982cd6e078 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55982cd6e330 <col:62>
|-FunctionDecl 0x55982cd6e548 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55982cd6e398 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55982cd6e428 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55982cd6e5f8 <line:221:22>
|-FunctionDecl 0x55982cd6e6f8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55982cd6e660 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55982cd6e7a0 <col:65>
|-TypedefDecl 0x55982cd6e810 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55982ccf94b0 'unsigned long'
|-RecordDecl 0x55982cd6e868 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55982cd6e9b0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55982cd6ea18 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55982cd6eac8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55982cd6ea70 'union pthread_attr_t' sugar
|   `-RecordType 0x55982cd6e8f0 'union pthread_attr_t'
|     `-Record 0x55982cd6e868 'pthread_attr_t'
|-RecordDecl 0x55982cd6eb20 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55982cd6ec98 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55982cd6ed10 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55982cd6edc0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55982cd6ed60 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55982cd6eba0 'struct __pthread_internal_list'
|     `-Record 0x55982cd6eb20 '__pthread_internal_list'
|-RecordDecl 0x55982cd6ee30 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55982cd6eed8 parent 0x55982ccf92f8 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55982cd6efb0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55982cd6f018 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55982cd6f080 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55982cd6f0e8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55982cd6f150 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55982cd6f1b8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55982cd73290 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55982cd73340 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55982cd73430 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55982cd73498 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55982cd73620 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55982cd735c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55982cd6eeb0 'pthread_mutex_t'
|     `-Record 0x55982cd6ee30 ''
|-RecordDecl 0x55982cd73690 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55982cd737d0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55982cd73838 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55982cd738f0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55982cd73890 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55982cd73710 'pthread_mutexattr_t'
|     `-Record 0x55982cd73690 ''
|-RecordDecl 0x55982cd73960 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55982cd73a08 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55982cd73ad0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55982cd73b38 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55982cd73ba0 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55982cd73c08 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55982cd73c70 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55982cd73cd8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55982cd73d40 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55982cd73da8 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55982cd73e60 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_7/podwr001_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_7/podwr001_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55982cd73f50 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55982cd73fb8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55982cd740f0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55982cd74090 'union pthread_cond_t' sugar
|   `-RecordType 0x55982cd739e0 'pthread_cond_t'
|     `-Record 0x55982cd73960 ''
|-RecordDecl 0x55982cd74160 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55982cd752b0 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55982cd75318 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55982cd753d0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55982cd75370 'union pthread_condattr_t' sugar
|   `-RecordType 0x55982cd741e0 'pthread_condattr_t'
|     `-Record 0x55982cd74160 ''
|-TypedefDecl 0x55982cd75458 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55982ccf9490 'unsigned int'
|-TypedefDecl 0x55982cd754c8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55982ccf93f0 'int'
|-RecordDecl 0x55982cd75520 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55982cd755c8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55982cd75690 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55982cd756f8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55982cd75760 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55982cd757c8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55982cd75830 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55982cd75898 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55982cd75900 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55982cd75968 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55982cd759d0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55982cd75a38 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55982cd75aa0 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55982cd75b50 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_7/podwr001_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_7/podwr001_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55982cd75bf8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55982cd75c60 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55982cd75db0 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55982cd75d50 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55982cd755a0 'pthread_rwlock_t'
|     `-Record 0x55982cd75520 ''
|-RecordDecl 0x55982cd75e20 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55982cd75f60 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55982cd75fc8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55982cd76080 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55982cd76020 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55982cd75ea0 'pthread_rwlockattr_t'
|     `-Record 0x55982cd75e20 ''
|-TypedefDecl 0x55982cd76108 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55982ccf93f4 'volatile int' volatile
|   `-BuiltinType 0x55982ccf93f0 'int'
|-RecordDecl 0x55982cd76160 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55982cd772c0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55982cd77328 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55982cd773e0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55982cd77380 'union pthread_barrier_t' sugar
|   `-RecordType 0x55982cd761e0 'pthread_barrier_t'
|     `-Record 0x55982cd76160 ''
|-RecordDecl 0x55982cd77450 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55982cd77550 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55982cd775b8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55982cd77670 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55982cd77610 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55982cd774d0 'pthread_barrierattr_t'
|     `-Record 0x55982cd77450 ''
|-TypedefDecl 0x55982cd77788 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55982cd77720 'long [8]' 8 
|   `-BuiltinType 0x55982ccf9410 'long'
|-EnumDecl 0x55982cd777e0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55982cd778a8 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55982cd778f8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55982cd77948 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55982cd77a18 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55982cd77a68 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55982cd77ab8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55982cd77b08 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55982cd77b90 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55982cd77b78 <col:26> 'int'
| |   `-DeclRefExpr 0x55982cd77b58 <col:26> 'int' EnumConstant 0x55982cd77a18 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55982cd77c18 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55982cd77c00 <col:29> 'int'
| |   `-DeclRefExpr 0x55982cd77be0 <col:29> 'int' EnumConstant 0x55982cd77a68 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55982cd77ca0 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55982cd77c88 <col:30> 'int'
| |   `-DeclRefExpr 0x55982cd77c68 <col:30> 'int' EnumConstant 0x55982cd77ab8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55982cd77d28 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55982cd77d10 <col:27> 'int'
|     `-DeclRefExpr 0x55982cd77cf0 <col:27> 'int' EnumConstant 0x55982cd77b90 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55982cd77d78 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55982cd77e48 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55982cd77ed0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55982cd77eb8 <col:30> 'int'
| |   `-DeclRefExpr 0x55982cd77e98 <col:30> 'int' EnumConstant 0x55982cd77e48 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55982cd77f20 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55982cd77fa8 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55982cd77f90 <col:29> 'int'
|     `-DeclRefExpr 0x55982cd77f70 <col:29> 'int' EnumConstant 0x55982cd77f20 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55982cd77ff8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55982cd780c8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55982cd78118 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55982cd78168 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55982cd781b8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55982cd782d0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55982cd78320 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55982cd78370 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55982cd783f8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55982cd783e0 <col:31> 'int'
|     `-DeclRefExpr 0x55982cd783c0 <col:31> 'int' EnumConstant 0x55982cd782d0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55982cd78448 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55982cd78518 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55982cd78568 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55982cd785b8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55982cd78688 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55982cd786d8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55982cd78728 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55982cd787f8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55982cd78848 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55982cd78898 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55982cd78ad8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55982cd78b40 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55982cd78ba8 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55982cd78cc8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55982cd78d18 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55982cd78de8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55982cd78e38 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55982cd78e88 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55982cd78f58 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55982cd78fa8 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55982cd79608 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55982cd790a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55982cd791b0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55982cd793f0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55982cd79470 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55982cd796c8 <col:47>
| |-NonNullAttr 0x55982cd79720 <col:77, col:94> 1 3
| `-CallbackAttr 0x55982cd79758 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55982cd79880 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55982cd797b0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55982cd79ad8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55982cd79938 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55982cd799b8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55982cd79ca8 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55982cd79b98 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55982cd79d50 <col:60>
|-FunctionDecl 0x55982cd79ea0 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55982cd79f40 <col:54>
| `-ConstAttr 0x55982cd79f98 <col:95>
|-FunctionDecl 0x55982cd7a168 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55982cd79fd0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55982cd7a048 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55982cd7a218 <line:394:19>
| `-ConstAttr 0x55982cd7a270 <col:60>
|-FunctionDecl 0x55982cd7bc88 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55982cd7bb50 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55982cd7bd30 <col:71>
| `-NonNullAttr 0x55982cd7bd88 <col:112, col:126> 1
|-FunctionDecl 0x55982cd7be90 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55982cd7bdd8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55982cd7bf38 <line:397:22>
| `-NonNullAttr 0x55982cd7bf90 <col:63, col:77> 1
|-FunctionDecl 0x55982cd7c1b8 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55982cd7bfd8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55982cd7c058 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55982cd7c268 <line:400:22>
| `-NonNullAttr 0x55982cd7c2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd7c4c8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55982cd7c308 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55982cd7c388 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55982cd7c578 <line:403:22>
| `-NonNullAttr 0x55982cd7c5d0 <col:63, col:77> 1
|-FunctionDecl 0x55982cd7c828 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55982cd7c618 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55982cd7c6c0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55982cd7c8d8 <line:406:22>
| `-NonNullAttr 0x55982cd7c930 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd7db68 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55982cd7c978 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55982cd7c9f0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55982cd7dc18 <line:409:22>
| `-NonNullAttr 0x55982cd7dc70 <col:63, col:77> 1
|-FunctionDecl 0x55982cd7dea8 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55982cd7dcb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55982cd7dd48 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55982cd7df58 <line:412:22>
| `-NonNullAttr 0x55982cd7dfb0 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd7e1e8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55982cd7dff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55982cd7e088 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55982cd7e298 <col:37>
| `-NonNullAttr 0x55982cd7e2f0 <col:78, col:95> 1 2
|-FunctionDecl 0x55982cd7e4d8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55982cd7e338 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55982cd7e3b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55982cd7e588 <line:418:22>
| `-NonNullAttr 0x55982cd7e5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd7e768 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55982cd7e628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55982cd7e6a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55982cd7e818 <line:420:22>
| `-NonNullAttr 0x55982cd7e870 <col:63, col:77> 1
|-FunctionDecl 0x55982cd7ea18 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55982cd7e8b8 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55982cd7e938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55982cd7eac8 <line:423:22>
| `-NonNullAttr 0x55982cd7eb40 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd7ecc8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55982cd7eb88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55982cd7ec08 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55982cd7ed78 <line:426:22>
| `-NonNullAttr 0x55982cd7edd0 <col:63, col:77> 1
|-FunctionDecl 0x55982cd7ef78 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55982cd7ee18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55982cd7ee98 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55982cd7f028 <line:429:22>
| `-NonNullAttr 0x55982cd7f080 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd7f208 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55982cd7f0c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55982cd7f148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55982cd7f2b8 <line:431:22>
| `-NonNullAttr 0x55982cd7f310 <col:63, col:77> 1
|-FunctionDecl 0x55982cd7f538 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55982cd7f358 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55982cd7f3d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55982cd7f5e8 <line:434:22>
| |-NonNullAttr 0x55982cd7f640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55982cd7f678 <col:100> "" ""
|-FunctionDecl 0x55982cd7f888 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55982cd7f6c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55982cd7f748 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55982cd7f938 <line:437:22>
| |-NonNullAttr 0x55982cd7f990 <col:63, col:77> 1
| `-DeprecatedAttr 0x55982cd7f9c8 <col:97> "" ""
|-FunctionDecl 0x55982cd7fbc8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55982cd7fa18 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55982cd7fa90 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55982cd7fc78 <line:440:22>
| `-NonNullAttr 0x55982cd7fcd0 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd7fe50 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55982cd7fd18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55982cd7fd90 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55982cd7ff00 <line:443:22>
| `-NonNullAttr 0x55982cd7ff58 <col:63, col:77> 1
|-FunctionDecl 0x55982cd80248 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55982cd7ffa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55982cd80028 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55982cd800a0 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55982cd80300 <line:447:22>
| `-NonNullAttr 0x55982cd80358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55982cd80608 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55982cd803b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55982cd80430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55982cd804a8 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55982cd806c0 <col:43>
| `-NonNullAttr 0x55982cd80718 <col:84, col:98> 1
|-FunctionDecl 0x55982cd809d8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55982cd80768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55982cd807e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55982cd80878 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55982cd80a90 <line:452:22>
| `-NonNullAttr 0x55982cd80ae8 <col:63, col:77> 3
|-FunctionDecl 0x55982cd80df8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55982cd80b60 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55982cd80be0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55982cd80c70 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55982cd80eb0 <line:456:22>
| `-NonNullAttr 0x55982cd80f08 <col:63, col:80> 2 3
|-FunctionDecl 0x55982cd810f8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55982cd80f58 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55982cd80fd8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55982cd811a8 <line:458:22>
|-FunctionDecl 0x55982cd81578 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55982cd81270 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55982cd81410 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55982cd81628 <col:52, col:69> 1 2
|-FunctionDecl 0x55982cd817d0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55982cd816b0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55982cd81730 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55982cd819b8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55982cd81898 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55982cd81918 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55982cd81b70 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55982cd81a78 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55982cd81cb0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55982cd81d50 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55982cd81df8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55982cd81ee8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55982cd81f50 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55982cd82120 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_7/podwr001_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55982cd82218 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55982cd822d0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55982cd82270 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55982cd81dd0 '__pthread_unwind_buf_t'
| |   `-Record 0x55982cd81d50 ''
| `-AlignedAttr 0x55982cd82328 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55982cd823a0 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55982cd82500 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55982cd82568 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55982cd825d0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55982cd82638 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55982cd82840 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55982cd82730 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55982cd82988 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55982cd828f8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55982cd82b80 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55982cd82a40 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55982cd82c28 <line:487:22>
|-RecordDecl 0x55982cd82c80 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55982cd82f98 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55982cd82df8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55982cd82e78 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55982cd83048 <col:86>
| `-ReturnsTwiceAttr 0x55982cd830a0 <col:12> Implicit
|-FunctionDecl 0x55982cd833c8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55982cd83170 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55982cd83280 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55982cd83478 <line:493:22>
| `-NonNullAttr 0x55982cd834d0 <col:63, col:77> 1
|-FunctionDecl 0x55982cd83648 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55982cd83518 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55982cd836f0 <line:495:22>
| `-NonNullAttr 0x55982cd83748 <col:63, col:77> 1
|-FunctionDecl 0x55982cd83850 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55982cd83798 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55982cd838f8 <line:497:22>
| `-NonNullAttr 0x55982cd83950 <col:52, col:66> 1
|-FunctionDecl 0x55982cd83a50 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55982cd83998 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55982cd83af8 <line:499:22>
| `-NonNullAttr 0x55982cd83b50 <col:52, col:66> 1
|-FunctionDecl 0x55982cd84da8 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55982cd84bb8 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55982cd84c48 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55982cd84e58 <col:36>
| `-NonNullAttr 0x55982cd84eb0 <col:66, col:83> 1 2
|-FunctionDecl 0x55982cd84fb0 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55982cd84ef8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55982cd85058 <line:504:22>
| `-NonNullAttr 0x55982cd850b0 <col:52, col:66> 1
|-FunctionDecl 0x55982cd85348 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55982cd85160 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55982cd851e0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55982cd853f8 <line:508:22>
| `-NonNullAttr 0x55982cd85450 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd85718 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55982cd85498 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55982cd85518 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55982cd85598 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55982cd857d0 <line:512:22>
| `-NonNullAttr 0x55982cd85828 <col:63, col:80> 1 3
|-FunctionDecl 0x55982cd85930 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55982cd85878 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55982cd859d8 <line:514:22>
| `-NonNullAttr 0x55982cd85a30 <col:63, col:77> 1
|-FunctionDecl 0x55982cd85c58 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55982cd85ae0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55982cd85d00 <line:516:22>
| `-NonNullAttr 0x55982cd85d58 <col:63, col:77> 1
|-FunctionDecl 0x55982cd85e60 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55982cd85da8 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55982cd85f08 <line:518:22>
| `-NonNullAttr 0x55982cd85f60 <col:63, col:77> 1
|-FunctionDecl 0x55982cd86188 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55982cd85fa8 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55982cd86028 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55982cd86238 <line:522:22>
| `-NonNullAttr 0x55982cd86290 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd86498 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55982cd862d8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55982cd86358 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55982cd86548 <line:525:22>
| `-NonNullAttr 0x55982cd865a0 <col:63, col:77> 1
|-FunctionDecl 0x55982cd86748 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55982cd865e8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55982cd86668 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55982cd867f8 <line:528:22>
| `-NonNullAttr 0x55982cd86850 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd869d8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55982cd86898 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55982cd86918 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55982cd86a88 <line:530:22>
| `-NonNullAttr 0x55982cd86ae0 <col:63, col:77> 1
|-FunctionDecl 0x55982cd86ca0 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55982cd86b28 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55982cd86bc0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55982cd86d50 <line:534:22>
| `-NonNullAttr 0x55982cd86da8 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd86f38 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55982cd86df8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55982cd86e78 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55982cd86fe8 <line:537:22>
| `-NonNullAttr 0x55982cd87040 <col:63, col:77> 1
|-FunctionDecl 0x55982cd871e8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55982cd87088 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55982cd87108 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55982cd87298 <line:541:22>
| `-NonNullAttr 0x55982cd872f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd87478 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55982cd87338 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55982cd873b8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55982cd87528 <line:544:22>
| `-NonNullAttr 0x55982cd87580 <col:63, col:77> 1
|-FunctionDecl 0x55982cd87768 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55982cd875c8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55982cd87648 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55982cd87818 <line:547:22>
| `-NonNullAttr 0x55982cd87870 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd879f8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55982cd878b8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55982cd87938 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55982cd87aa8 <line:550:22>
| `-NonNullAttr 0x55982cd87b00 <col:63, col:77> 1
|-FunctionDecl 0x55982cd88e78 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55982cd88c20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55982cd88d30 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55982cd88f28 <col:29>
| `-NonNullAttr 0x55982cd88f80 <col:70, col:84> 1
|-FunctionDecl 0x55982cd890f8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55982cd88fc8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55982cd891a0 <line:555:22>
| `-NonNullAttr 0x55982cd891f8 <col:63, col:77> 1
|-FunctionDecl 0x55982cd89300 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55982cd89248 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55982cd893a8 <line:557:22>
| `-NonNullAttr 0x55982cd89400 <col:52, col:66> 1
|-FunctionDecl 0x55982cd89500 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55982cd89448 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55982cd895a8 <line:559:19>
| `-NonNullAttr 0x55982cd89600 <col:49, col:63> 1
|-FunctionDecl 0x55982cd89838 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55982cd89648 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55982cd896d8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55982cd898e8 <col:39>
| `-NonNullAttr 0x55982cd89940 <col:69, col:86> 1 2
|-FunctionDecl 0x55982cd89a40 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55982cd89988 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55982cd89ae8 <line:564:22>
| `-NonNullAttr 0x55982cd89b40 <col:52, col:66> 1
|-FunctionDecl 0x55982cd89ca8 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55982cd89bf0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55982cd89d50 <line:566:22>
| `-NonNullAttr 0x55982cd89da8 <col:52, col:66> 1
|-FunctionDecl 0x55982cd89f68 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55982cd89df8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55982cd89e88 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55982cd8a018 <col:39>
| `-NonNullAttr 0x55982cd8a070 <col:69, col:86> 1 2
|-FunctionDecl 0x55982cd8a170 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55982cd8a0b8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55982cd8a218 <line:571:22>
| `-NonNullAttr 0x55982cd8a270 <col:52, col:66> 1
|-FunctionDecl 0x55982cd8a458 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55982cd8a320 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55982cd8a500 <line:573:22>
| `-NonNullAttr 0x55982cd8a558 <col:63, col:77> 1
|-FunctionDecl 0x55982cd8a660 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55982cd8a5a8 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55982cd8a708 <line:575:22>
| `-NonNullAttr 0x55982cd8a760 <col:63, col:77> 1
|-FunctionDecl 0x55982cd8a988 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55982cd8a7a8 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55982cd8a828 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55982cd8aa38 <line:579:22>
| `-NonNullAttr 0x55982cd8aa90 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd8acb8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55982cd8aad8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55982cd8ab58 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55982cd8ad68 <line:582:22>
| `-NonNullAttr 0x55982cd8adc0 <col:63, col:77> 1
|-FunctionDecl 0x55982cd8af68 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55982cd8ae08 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55982cd8ae88 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55982cd8b018 <line:586:22>
| `-NonNullAttr 0x55982cd8b070 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd8b1f8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55982cd8b0b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55982cd8b138 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55982cd8b2a8 <col:36>
| `-NonNullAttr 0x55982cd8b300 <col:77, col:91> 1
|-FunctionDecl 0x55982cd8b638 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55982cd8b3e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55982cd8b4f0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55982cd8b6e8 <line:591:22>
| `-NonNullAttr 0x55982cd8b740 <col:63, col:77> 1
|-FunctionDecl 0x55982cd8b8b8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55982cd8b788 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55982cd8b960 <line:593:22>
| `-NonNullAttr 0x55982cd8b9b8 <col:63, col:77> 1
|-FunctionDecl 0x55982cd8bac0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55982cd8ba08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55982cd8bb68 <line:595:22>
| `-NonNullAttr 0x55982cd8bbc0 <col:52, col:66> 1
|-FunctionDecl 0x55982cd8bcd8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55982cd8bc20 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55982cd8bd80 <line:597:22>
| `-NonNullAttr 0x55982cd8bdd8 <col:52, col:66> 1
|-FunctionDecl 0x55982cd8c008 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55982cd8be28 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55982cd8bea0 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55982cd8c0b8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55982cd8c3e8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55982cd8c138 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55982cd8c1b0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55982cd8c240 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55982cd8c4a0 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55982cd8c6b8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55982cd8c580 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55982cd8c760 <line:606:22>
| `-NonNullAttr 0x55982cd8c7b8 <col:63, col:77> 1
|-FunctionDecl 0x55982cd8c8c0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55982cd8c808 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55982cd8c968 <line:608:22>
| `-NonNullAttr 0x55982cd8c9c0 <col:63, col:77> 1
|-FunctionDecl 0x55982cd8cc20 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55982cd8ca08 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55982cd8ca88 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55982cd8ccd0 <line:612:22>
| `-NonNullAttr 0x55982cd8cd28 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd8cf38 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55982cd8cd78 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55982cd8cdf8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55982cd8cfe8 <col:37>
| `-NonNullAttr 0x55982cd8d040 <col:78, col:92> 1
|-FunctionDecl 0x55982cd8d258 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55982cd8d088 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55982cd8d130 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55982cd8d308 <line:618:22>
| `-NonNullAttr 0x55982cd8d360 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd8d528 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55982cd8d3a8 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55982cd8d420 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55982cd8d5d8 <line:621:22>
| `-NonNullAttr 0x55982cd8d630 <col:63, col:77> 1
|-FunctionDecl 0x55982cd8d8d8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55982cd8d710 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55982cd8d790 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55982cd8d988 <line:623:22>
| `-NonNullAttr 0x55982cd8d9e0 <col:63, col:77> 1
|-FunctionDecl 0x55982cd8db58 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55982cd8da28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55982cd8dc30 <line:625:22>
| `-NonNullAttr 0x55982cd8dc88 <col:63, col:77> 1
|-FunctionDecl 0x55982cd8dd90 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55982cd8dcd8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55982cd8de38 <line:627:22>
| `-NonNullAttr 0x55982cd8de90 <col:52, col:66> 1
|-FunctionDecl 0x55982cd8df90 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55982cd8ded8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55982cd8e038 <line:629:22>
| `-NonNullAttr 0x55982cd8e090 <col:52, col:66> 1
|-FunctionDecl 0x55982cd8e190 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55982cd8e0d8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55982cd8e238 <line:631:22>
| `-NonNullAttr 0x55982cd8e290 <col:52, col:66> 1
|-FunctionDecl 0x55982cd8e668 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55982cd8e370 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55982cd8e480 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55982cd8e500 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55982cd8e720 <line:635:22>
| `-NonNullAttr 0x55982cd8e778 <col:63, col:77> 1
|-FunctionDecl 0x55982cd8e8f8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55982cd8e7c8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55982cd8e9a0 <line:637:22>
| `-NonNullAttr 0x55982cd8e9f8 <col:63, col:77> 1
|-FunctionDecl 0x55982cd8eb00 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55982cd8ea48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55982cd8eba8 <line:639:22>
| `-NonNullAttr 0x55982cd8ec00 <col:52, col:66> 1
|-FunctionDecl 0x55982cd8fe08 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55982cd8fcd0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55982cd8feb0 <line:641:22>
| `-NonNullAttr 0x55982cd8ff08 <col:63, col:77> 1
|-FunctionDecl 0x55982cd90010 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55982cd8ff58 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55982cd900b8 <line:643:22>
| `-NonNullAttr 0x55982cd90110 <col:63, col:77> 1
|-FunctionDecl 0x55982cd90338 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55982cd90158 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55982cd901d8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55982cd903e8 <line:647:22>
| `-NonNullAttr 0x55982cd90440 <col:63, col:80> 1 2
|-FunctionDecl 0x55982cd90648 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55982cd90488 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55982cd90508 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55982cd906f8 <line:650:22>
| `-NonNullAttr 0x55982cd90750 <col:63, col:77> 1
|-FunctionDecl 0x55982cd90a98 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55982cd90830 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55982cd90950 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55982cd90b48 <line:653:22>
| `-NonNullAttr 0x55982cd90ba0 <col:63, col:77> 1
|-FunctionDecl 0x55982cd90d08 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55982cd90be8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55982cd90db0 <col:69>
|-FunctionDecl 0x55982cd90f28 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55982cd90e18 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55982cd90fd0 <col:72>
|-FunctionDecl 0x55982cd91208 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55982cd91038 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55982cd910e8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55982cd912b8 <col:44>
|-FunctionDecl 0x55982cd914d8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55982cd91320 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55982cd91398 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55982cd91588 <line:660:22>
| `-NonNullAttr 0x55982cd915e0 <col:63, col:77> 2
|-FunctionDecl 0x55982cd91a28 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55982cd916c0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55982cd917d0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55982cd918e0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55982cd91ae0 <col:47>
|-FunctionDecl 0x55982cd91c70 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55982cd91b50 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55982cd91dc8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55982cd91d30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55982cd91f20 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55982cd91e88 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55982cd91fe8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55982cd920a8 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55982cd92168 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55982cd92220 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55982cd922a0 prev 0x55982cd92220 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55982cd92308 <col:24> 'int' 0
|-VarDecl 0x55982cd92340 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55982cd923c0 prev 0x55982cd92340 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55982cd92428 <col:27> 'int' 0
|-VarDecl 0x55982cd92460 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55982cd924e0 prev 0x55982cd92460 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55982cd92548 <col:27> 'int' 0
|-VarDecl 0x55982cd92580 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55982cd92600 prev 0x55982cd92580 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55982cd92668 <col:27> 'int' 0
|-VarDecl 0x55982cd92698 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55982cd92710 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55982cd92790 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x55982cd92810 prev 0x55982cd92790 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55982cd92878 <col:9> 'int' 0
|-VarDecl 0x55982cd928b0 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x55982cd92930 prev 0x55982cd928b0 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55982cd92998 <col:9> 'int' 0
|-VarDecl 0x55982cd929d0 <line:685:1, col:5> col:5 used z 'int'
|-VarDecl 0x55982cd92a50 prev 0x55982cd929d0 <line:686:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55982cd92ab8 <col:9> 'int' 0
|-VarDecl 0x55982cd92ae8 <line:687:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x55982cd92b68 <line:688:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x55982cd92be0 <line:689:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x55982cd92c80 <line:690:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x55982cd92cf8 <line:691:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x55982cd92d70 <line:692:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x55982cd92de8 <line:693:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x55982cd92e60 <line:694:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x55982cd92ed8 <line:695:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x55982cd92f50 <line:696:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x55982cd92fc8 <line:697:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x55982cd93048 <line:698:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x55982cd930c8 <line:699:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x55982cd93140 <line:700:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x55982cd931c0 <line:701:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x55982cd93238 <line:702:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x55982cd932b0 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55982cd93328 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55982cd93440 prev 0x55982cd91c70 <line:705:1, line:733:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55982cd933a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55982cd94ca0 <line:706:1, line:733:1>
|   |-CallExpr 0x55982cd93558 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55982cd93540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd934e8 <col:3> 'void ()' Function 0x55982cd39060 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55982cd935d0 <line:708:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55982cd93578 <col:3> 'int' lvalue Var 0x55982cd931c0 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55982cd935b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55982cd93598 <col:15> 'int' lvalue Var 0x55982cd930c8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55982cd93630 <line:709:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55982cd935f0 <col:3> 'int' lvalue Var 0x55982cd930c8 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x55982cd93610 <col:15> 'int' 1
|   |-BinaryOperator 0x55982cd936a8 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd93650 <col:3> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd93690 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55982cd93670 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55982cd93740 <line:711:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd936c8 <col:3> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55982cd93718 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55982cd936e8 <col:27> 'int' 1
|   |-CallExpr 0x55982cd938c8 <line:712:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55982cd938b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55982cd93760 <col:3> 'void (int)' Function 0x55982cd38de8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55982cd93860 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55982cd93840 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55982cd93820 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55982cd937d8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55982cd937c0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55982cd93780 <col:23> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55982cd93808 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55982cd937f0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55982cd937a0 <col:41> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55982cd93948 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd938f0 <col:3> '_Bool' lvalue Var 0x55982cd92de8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd93930 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55982cd93910 <col:20> '_Bool' lvalue Var 0x55982cd92be0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55982cd939c0 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd93968 <col:3> '_Bool' lvalue Var 0x55982cd92e60 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd939a8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55982cd93988 <col:20> '_Bool' lvalue Var 0x55982cd92c80 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55982cd93a38 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd939e0 <col:3> '_Bool' lvalue Var 0x55982cd92ed8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd93a20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55982cd93a00 <col:20> '_Bool' lvalue Var 0x55982cd92cf8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55982cd93ab0 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd93a58 <col:3> '_Bool' lvalue Var 0x55982cd92f50 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd93a98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55982cd93a78 <col:20> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55982cd93b48 <line:717:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd93ad0 <col:3> '_Bool' lvalue Var 0x55982cd92c80 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55982cd93b20 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55982cd93af0 <col:27> 'int' 1
|   |-CallExpr 0x55982cd93ba0 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55982cd93b88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd93b68 <col:3> 'void ()' Function 0x55982cd39120 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55982cd93bf8 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55982cd93be0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd93bc0 <col:3> 'void ()' Function 0x55982cd39060 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55982cd93c90 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55982cd93c18 <col:3> 'int' lvalue Var 0x55982cd923c0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55982cd93c58 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55982cd93c38 <col:25> 'int' lvalue Var 0x55982cd92810 'x' 'int'
|   |-CallExpr 0x55982cd93ce8 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55982cd93cd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd93cb0 <col:3> 'void ()' Function 0x55982cd39120 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55982cd93d40 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55982cd93d28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd93d08 <col:3> 'void ()' Function 0x55982cd39060 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55982cd94028 <line:723:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55982cd93d60 <col:3> 'int' lvalue Var 0x55982cd92a50 'z' 'int'
|   | `-ConditionalOperator 0x55982cd93ff8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55982cd93e20 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55982cd93dd8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55982cd93dc0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55982cd93d80 <col:7> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55982cd93e08 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55982cd93df0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55982cd93da0 <col:25> '_Bool' lvalue Var 0x55982cd92c80 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55982cd93fe0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55982cd93e40 <col:42> 'int' lvalue Var 0x55982cd930c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55982cd93fc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55982cd93f90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55982cd93f00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55982cd93eb8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55982cd93ea0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55982cd93e60 <col:55> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55982cd93ee8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55982cd93ed0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55982cd93e80 <col:73> '_Bool' lvalue Var 0x55982cd92e60 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55982cd93f60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55982cd93f20 <col:90> 'int' lvalue Var 0x55982cd931c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55982cd93f78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55982cd93f40 <col:102> 'int' lvalue Var 0x55982cd92a50 'z' 'int'
|   |-BinaryOperator 0x55982cd94230 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd94048 <col:3> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd94218 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55982cd941e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55982cd94108 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55982cd940c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55982cd940a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55982cd94068 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55982cd940f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55982cd940d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55982cd94088 <col:38> '_Bool' lvalue Var 0x55982cd92c80 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55982cd941a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55982cd94158 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55982cd94128 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55982cd941d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55982cd941b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55982cd94180 <col:66> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55982cd94518 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd94250 <col:3> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd94500 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55982cd944d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55982cd943f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55982cd94310 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55982cd942c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55982cd942b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55982cd94270 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55982cd942f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55982cd942e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55982cd94290 <col:38> '_Bool' lvalue Var 0x55982cd92c80 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55982cd943d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55982cd94388 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55982cd94370 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55982cd94330 <col:56> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55982cd943b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55982cd943a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55982cd94350 <col:74> '_Bool' lvalue Var 0x55982cd92e60 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55982cd94488 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55982cd94440 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55982cd94410 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55982cd944b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55982cd944a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55982cd94468 <col:102> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55982cd94720 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd94538 <col:3> '_Bool' lvalue Var 0x55982cd92c80 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd94708 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55982cd946d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55982cd945f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55982cd945b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55982cd94598 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55982cd94558 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55982cd945e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55982cd945c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55982cd94578 <col:38> '_Bool' lvalue Var 0x55982cd92c80 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55982cd94690 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55982cd94648 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55982cd94618 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55982cd946c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55982cd946a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55982cd94670 <col:66> '_Bool' lvalue Var 0x55982cd92c80 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55982cd94a08 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd94740 <col:3> '_Bool' lvalue Var 0x55982cd92e60 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd949f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55982cd949c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55982cd948e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55982cd94800 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55982cd947b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55982cd947a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55982cd94760 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55982cd947e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55982cd947d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55982cd94780 <col:38> '_Bool' lvalue Var 0x55982cd92c80 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55982cd948c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55982cd94878 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55982cd94860 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55982cd94820 <col:56> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55982cd948a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55982cd94890 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55982cd94840 <col:74> '_Bool' lvalue Var 0x55982cd92e60 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55982cd94978 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55982cd94930 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55982cd94900 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55982cd949a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55982cd94990 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55982cd94958 <col:102> '_Bool' lvalue Var 0x55982cd92e60 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55982cd94a60 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55982cd94a48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd94a28 <col:3> 'void ()' Function 0x55982cd39120 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55982cd94ab8 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55982cd94aa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd94a80 <col:3> 'void ()' Function 0x55982cd39060 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55982cd94b70 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55982cd94ad8 <col:3> 'int' lvalue Var 0x55982cd922a0 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55982cd94b50 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55982cd94b38 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55982cd94af8 <col:22> 'int' lvalue Var 0x55982cd922a0 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55982cd94b18 <col:41> 'int' 1
|   |-CallExpr 0x55982cd94bc8 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55982cd94bb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd94b90 <col:3> 'void ()' Function 0x55982cd39120 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55982cd94c78 <line:732:3, col:36>
|     `-CallExpr 0x55982cd94c58 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55982cd94c40 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55982cd94be8 <col:10> 'void *(void)' Function 0x55982cd38b78 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55982cd94e30 prev 0x55982cd91dc8 <line:734:1, line:753:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55982cd94d98 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55982cd96070 <line:735:1, line:753:1>
|   |-CallExpr 0x55982cd94f10 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55982cd94ef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd94ed8 <col:3> 'void ()' Function 0x55982cd39060 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55982cd94f70 <line:737:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55982cd94f30 <col:3> 'int' lvalue Var 0x55982cd92810 'x' 'int'
|   | `-IntegerLiteral 0x55982cd94f50 <col:7> 'int' 1
|   |-CallExpr 0x55982cd94fc8 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55982cd94fb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd94f90 <col:3> 'void ()' Function 0x55982cd39120 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55982cd95020 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55982cd95008 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd94fe8 <col:3> 'void ()' Function 0x55982cd39060 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55982cd95098 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55982cd95040 <col:3> 'int' lvalue Var 0x55982cd924e0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55982cd95080 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55982cd95060 <col:25> 'int' lvalue Var 0x55982cd92930 'y' 'int'
|   |-CallExpr 0x55982cd950f0 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55982cd950d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd950b8 <col:3> 'void ()' Function 0x55982cd39120 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55982cd95148 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55982cd95130 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd95110 <col:3> 'void ()' Function 0x55982cd39060 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55982cd95430 <line:743:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55982cd95168 <col:3> 'int' lvalue Var 0x55982cd92a50 'z' 'int'
|   | `-ConditionalOperator 0x55982cd95400 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55982cd95228 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55982cd951e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55982cd951c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55982cd95188 <col:7> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55982cd95210 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55982cd951f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55982cd951a8 <col:25> '_Bool' lvalue Var 0x55982cd92cf8 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55982cd953e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55982cd95248 <col:42> 'int' lvalue Var 0x55982cd930c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55982cd953c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55982cd95398 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55982cd95308 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55982cd952c0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55982cd952a8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55982cd95268 <col:55> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55982cd952f0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55982cd952d8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55982cd95288 <col:73> '_Bool' lvalue Var 0x55982cd92ed8 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55982cd95368 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55982cd95328 <col:90> 'int' lvalue Var 0x55982cd931c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55982cd95380 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55982cd95348 <col:102> 'int' lvalue Var 0x55982cd92a50 'z' 'int'
|   |-BinaryOperator 0x55982cd95638 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd95450 <col:3> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd95620 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55982cd955f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55982cd95510 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55982cd954c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55982cd954b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55982cd95470 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55982cd954f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55982cd954e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55982cd95490 <col:38> '_Bool' lvalue Var 0x55982cd92cf8 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55982cd955a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55982cd95560 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55982cd95530 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55982cd955d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55982cd955c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55982cd95588 <col:66> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55982cd95920 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd95658 <col:3> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd95908 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55982cd958d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55982cd957f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55982cd95718 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55982cd956d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55982cd956b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55982cd95678 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55982cd95700 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55982cd956e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55982cd95698 <col:38> '_Bool' lvalue Var 0x55982cd92cf8 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55982cd957d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55982cd95790 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55982cd95778 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55982cd95738 <col:56> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55982cd957c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55982cd957a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55982cd95758 <col:74> '_Bool' lvalue Var 0x55982cd92ed8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55982cd95890 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55982cd95848 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55982cd95818 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55982cd958c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55982cd958a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55982cd95870 <col:102> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55982cd95b28 <line:746:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd95940 <col:3> '_Bool' lvalue Var 0x55982cd92cf8 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd95b10 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55982cd95ae0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55982cd95a00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55982cd959b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55982cd959a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55982cd95960 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55982cd959e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55982cd959d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55982cd95980 <col:38> '_Bool' lvalue Var 0x55982cd92cf8 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55982cd95a98 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55982cd95a50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55982cd95a20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55982cd95ac8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55982cd95ab0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55982cd95a78 <col:66> '_Bool' lvalue Var 0x55982cd92cf8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55982cd95e28 <line:747:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd95b48 <col:3> '_Bool' lvalue Var 0x55982cd92ed8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd95e10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55982cd95de0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55982cd95d00 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55982cd95c08 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55982cd95bc0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55982cd95ba8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55982cd95b68 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55982cd95bf0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55982cd95bd8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55982cd95b88 <col:38> '_Bool' lvalue Var 0x55982cd92cf8 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55982cd95ce0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55982cd95c80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55982cd95c68 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55982cd95c28 <col:56> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55982cd95cc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55982cd95cb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55982cd95c48 <col:74> '_Bool' lvalue Var 0x55982cd92ed8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55982cd95d98 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55982cd95d50 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55982cd95d20 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55982cd95dc8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55982cd95db0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55982cd95d78 <col:102> '_Bool' lvalue Var 0x55982cd92ed8 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55982cd95e80 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55982cd95e68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd95e48 <col:3> 'void ()' Function 0x55982cd39120 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55982cd95ed8 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55982cd95ec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd95ea0 <col:3> 'void ()' Function 0x55982cd39060 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55982cd95f90 <line:750:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55982cd95ef8 <col:3> 'int' lvalue Var 0x55982cd922a0 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55982cd95f70 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55982cd95f58 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55982cd95f18 <col:22> 'int' lvalue Var 0x55982cd922a0 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55982cd95f38 <col:41> 'int' 1
|   |-CallExpr 0x55982cd95fe8 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55982cd95fd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd95fb0 <col:3> 'void ()' Function 0x55982cd39120 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55982cd96060 <line:752:3, col:36>
|     `-CallExpr 0x55982cd96040 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55982cd96028 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55982cd96008 <col:10> 'void *(void)' Function 0x55982cd38b78 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55982cd961b8 prev 0x55982cd91f20 <line:754:1, line:786:1> line:754:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55982cd96120 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55982cd99db0 <line:755:1, line:786:1>
|   |-CallExpr 0x55982cd96298 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55982cd96280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd96260 <col:3> 'void ()' Function 0x55982cd39060 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55982cd962f8 <line:757:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55982cd962b8 <col:3> 'int' lvalue Var 0x55982cd92930 'y' 'int'
|   | `-IntegerLiteral 0x55982cd962d8 <col:7> 'int' 1
|   |-CallExpr 0x55982cd96350 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55982cd96338 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd96318 <col:3> 'void ()' Function 0x55982cd39120 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55982cd963a8 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55982cd96390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd96370 <col:3> 'void ()' Function 0x55982cd39060 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55982cd96458 <line:760:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd963c8 <col:3> '_Bool' lvalue Var 0x55982cd932b0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd96440 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55982cd96420 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55982cd96408 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55982cd963e8 <col:19> 'void *(void)' Function 0x55982cd38b78 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55982cd96508 <line:761:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd96478 <col:3> '_Bool' lvalue Var 0x55982cd93328 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd964f0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55982cd964d0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55982cd964b8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55982cd96498 <col:19> 'void *(void)' Function 0x55982cd38b78 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55982cd96580 <line:762:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd96528 <col:3> '_Bool' lvalue Var 0x55982cd92ae8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd96568 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55982cd96548 <col:21> '_Bool' lvalue Var 0x55982cd93328 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55982cd965f8 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55982cd965a0 <col:3> 'int' lvalue Var 0x55982cd92b68 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55982cd965e0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55982cd965c0 <col:15> 'int' lvalue Var 0x55982cd92a50 'z' 'int'
|   |-BinaryOperator 0x55982cd96a30 <line:764:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55982cd96618 <col:3> 'int' lvalue Var 0x55982cd92a50 'z' 'int'
|   | `-ConditionalOperator 0x55982cd96a00 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55982cd96828 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55982cd96748 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55982cd96670 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55982cd96658 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55982cd96638 <col:8> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55982cd96728 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55982cd966c0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55982cd966a8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55982cd96688 <col:27> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55982cd96710 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55982cd966f8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55982cd966d8 <col:46> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55982cd96808 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55982cd967a0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55982cd96788 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55982cd96768 <col:65> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55982cd967f0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55982cd967d8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55982cd967b8 <col:84> '_Bool' lvalue Var 0x55982cd92f50 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55982cd969e8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55982cd96848 <col:101> 'int' lvalue Var 0x55982cd92a50 'z' 'int'
|   |   `-ParenExpr 0x55982cd969c8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55982cd96998 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55982cd96908 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55982cd968c0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55982cd968a8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55982cd96868 <col:106> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55982cd968f0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55982cd968d8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55982cd96888 <col:124> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55982cd96968 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55982cd96928 <col:141> 'int' lvalue Var 0x55982cd930c8 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55982cd96980 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55982cd96948 <col:153> 'int' lvalue Var 0x55982cd931c0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55982cd96f60 <line:765:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55982cd96a50 <col:3> 'int' lvalue Var 0x55982cd930c8 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55982cd96f30 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55982cd96f00 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55982cd96ee8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55982cd96a70 <col:15> '_Bool' lvalue Var 0x55982cd93328 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55982cd96f18 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55982cd96a90 <col:31> 'int' lvalue Var 0x55982cd930c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55982cd96ec8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55982cd96e98 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55982cd96cc0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55982cd96bc0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55982cd96ae8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55982cd96ad0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55982cd96ab0 <col:45> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55982cd96ba0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55982cd96b38 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55982cd96b20 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55982cd96b00 <col:64> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55982cd96b88 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55982cd96b70 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55982cd96b50 <col:83> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55982cd96c80 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55982cd96c18 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55982cd96c00 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55982cd96be0 <col:102> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55982cd96c68 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55982cd96c50 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55982cd96c30 <col:121> '_Bool' lvalue Var 0x55982cd92f50 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55982cd96e80 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55982cd96ce0 <col:138> 'int' lvalue Var 0x55982cd930c8 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55982cd96e60 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55982cd96e30 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55982cd96da0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55982cd96d58 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55982cd96d40 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55982cd96d00 <col:151> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55982cd96d88 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55982cd96d70 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55982cd96d20 <col:169> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55982cd96e00 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55982cd96dc0 <col:186> 'int' lvalue Var 0x55982cd930c8 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55982cd96e18 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55982cd96de0 <col:198> 'int' lvalue Var 0x55982cd930c8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55982cd97470 <line:766:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55982cd96f80 <col:3> 'int' lvalue Var 0x55982cd931c0 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55982cd97440 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55982cd97410 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55982cd973f8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55982cd96fa0 <col:15> '_Bool' lvalue Var 0x55982cd93328 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55982cd97428 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55982cd96fc0 <col:31> 'int' lvalue Var 0x55982cd931c0 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55982cd973d8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55982cd973a8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55982cd971d0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55982cd970f0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55982cd97018 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55982cd97000 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55982cd96fe0 <col:45> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55982cd970d0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55982cd97068 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55982cd97050 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55982cd97030 <col:64> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55982cd970b8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55982cd970a0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55982cd97080 <col:83> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55982cd971b0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55982cd97148 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55982cd97130 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55982cd97110 <col:102> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55982cd97198 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55982cd97180 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55982cd97160 <col:121> '_Bool' lvalue Var 0x55982cd92f50 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55982cd97390 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55982cd971f0 <col:138> 'int' lvalue Var 0x55982cd931c0 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55982cd97370 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55982cd97340 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55982cd972b0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55982cd97268 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55982cd97250 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55982cd97210 <col:151> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55982cd97298 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55982cd97280 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55982cd97230 <col:169> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55982cd97310 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55982cd972d0 <col:186> 'int' lvalue Var 0x55982cd931c0 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55982cd97328 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55982cd972f0 <col:198> 'int' lvalue Var 0x55982cd931c0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55982cd97a18 <line:767:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd97490 <col:3> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd97a00 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55982cd979d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55982cd97988 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55982cd97970 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55982cd974b0 <col:20> '_Bool' lvalue Var 0x55982cd93328 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55982cd979b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55982cd979a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55982cd974d0 <col:36> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55982cd97950 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55982cd97920 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55982cd976e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55982cd97600 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55982cd97528 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55982cd97510 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55982cd974f0 <col:55> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55982cd975e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55982cd97578 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55982cd97560 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55982cd97540 <col:74> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55982cd975c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55982cd975b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55982cd97590 <col:93> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55982cd976c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55982cd97658 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55982cd97640 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55982cd97620 <col:112> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55982cd976a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55982cd97690 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55982cd97670 <col:131> '_Bool' lvalue Var 0x55982cd92f50 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55982cd97908 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55982cd978f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55982cd97700 <col:148> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55982cd978d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55982cd978a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55982cd977c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55982cd97778 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55982cd97760 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55982cd97720 <col:166> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55982cd977a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55982cd97790 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55982cd97740 <col:184> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55982cd97858 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55982cd97810 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55982cd977e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55982cd97888 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55982cd97870 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55982cd97838 <col:212> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55982cd98008 <line:768:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd97a38 <col:3> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd97ff0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55982cd97fc0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55982cd97f78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55982cd97f60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55982cd97a58 <col:20> '_Bool' lvalue Var 0x55982cd93328 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55982cd97fa8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55982cd97f90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55982cd97a78 <col:36> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55982cd97f40 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55982cd97f10 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55982cd97c88 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55982cd97ba8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55982cd97ad0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55982cd97ab8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55982cd97a98 <col:55> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55982cd97b88 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55982cd97b20 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55982cd97b08 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55982cd97ae8 <col:74> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55982cd97b70 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55982cd97b58 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55982cd97b38 <col:93> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55982cd97c68 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55982cd97c00 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55982cd97be8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55982cd97bc8 <col:112> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55982cd97c50 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55982cd97c38 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55982cd97c18 <col:131> '_Bool' lvalue Var 0x55982cd92f50 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55982cd97ef8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55982cd97ee0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55982cd97cd0 <col:148> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55982cd97ec0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55982cd97e90 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55982cd97d90 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55982cd97d48 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55982cd97d30 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55982cd97cf0 <col:166> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55982cd97d78 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55982cd97d60 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55982cd97d10 <col:184> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55982cd97e60 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55982cd97de0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55982cd97db0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55982cd97e78 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55982cd97e38 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55982cd97e08 <col:219> 'int' 0
|   |-BinaryOperator 0x55982cd985b0 <line:769:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd98028 <col:3> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd98598 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55982cd98568 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55982cd98520 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55982cd98508 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55982cd98048 <col:20> '_Bool' lvalue Var 0x55982cd93328 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55982cd98550 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55982cd98538 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55982cd98068 <col:36> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55982cd984e8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55982cd984b8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55982cd98278 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55982cd98198 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55982cd980c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55982cd980a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55982cd98088 <col:55> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55982cd98178 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55982cd98110 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55982cd980f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55982cd980d8 <col:74> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55982cd98160 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55982cd98148 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55982cd98128 <col:93> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55982cd98258 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55982cd981f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55982cd981d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55982cd981b8 <col:112> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55982cd98240 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55982cd98228 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55982cd98208 <col:131> '_Bool' lvalue Var 0x55982cd92f50 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55982cd984a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55982cd98488 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55982cd98298 <col:148> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55982cd98468 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55982cd98438 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55982cd98358 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55982cd98310 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55982cd982f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55982cd982b8 <col:166> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55982cd98340 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55982cd98328 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55982cd982d8 <col:184> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55982cd983f0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55982cd983a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55982cd98378 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55982cd98420 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55982cd98408 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55982cd983d0 <col:212> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55982cd98b78 <line:770:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd985d0 <col:3> '_Bool' lvalue Var 0x55982cd92f50 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd98b60 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55982cd98b30 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55982cd98ae8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55982cd98ad0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55982cd985f0 <col:20> '_Bool' lvalue Var 0x55982cd93328 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55982cd98b18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55982cd98b00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55982cd98610 <col:36> '_Bool' lvalue Var 0x55982cd92f50 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55982cd98ab0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55982cd98a80 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55982cd98820 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55982cd98740 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55982cd98668 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55982cd98650 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55982cd98630 <col:55> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55982cd98720 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55982cd986b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55982cd986a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55982cd98680 <col:74> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55982cd98708 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55982cd986f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55982cd986d0 <col:93> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55982cd98800 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55982cd98798 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55982cd98780 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55982cd98760 <col:112> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55982cd987e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55982cd987d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55982cd987b0 <col:131> '_Bool' lvalue Var 0x55982cd92f50 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55982cd98a68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55982cd98a50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55982cd98840 <col:148> '_Bool' lvalue Var 0x55982cd92f50 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55982cd98a30 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55982cd98a00 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55982cd98900 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55982cd988b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55982cd988a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55982cd98860 <col:166> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55982cd988e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55982cd988d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55982cd98880 <col:184> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55982cd989d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55982cd98950 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55982cd98920 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55982cd989e8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55982cd989a8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55982cd98978 <col:219> 'int' 0
|   |-BinaryOperator 0x55982cd98bf0 <line:771:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55982cd98b98 <col:3> 'int' lvalue Var 0x55982cd92600 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55982cd98bd8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55982cd98bb8 <col:25> 'int' lvalue Var 0x55982cd92a50 'z' 'int'
|   |-BinaryOperator 0x55982cd98d40 <line:772:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55982cd98c10 <col:3> 'int' lvalue Var 0x55982cd92a50 'z' 'int'
|   | `-ConditionalOperator 0x55982cd98d10 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55982cd98ca8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55982cd98c90 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55982cd98c30 <col:7> '_Bool' lvalue Var 0x55982cd92ae8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55982cd98ce0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55982cd98c50 <col:25> 'int' lvalue Var 0x55982cd92b68 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55982cd98cf8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55982cd98c70 <col:37> 'int' lvalue Var 0x55982cd92a50 'z' 'int'
|   |-BinaryOperator 0x55982cd98dd8 <line:773:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd98d60 <col:3> '_Bool' lvalue Var 0x55982cd92ae8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55982cd98db0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55982cd98d80 <col:28> 'int' 0
|   |-CallExpr 0x55982cd98e30 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55982cd98e18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd98df8 <col:3> 'void ()' Function 0x55982cd39120 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55982cd98e88 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55982cd98e70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd98e50 <col:3> 'void ()' Function 0x55982cd39060 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55982cd99170 <line:776:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55982cd98ea8 <col:3> 'int' lvalue Var 0x55982cd92a50 'z' 'int'
|   | `-ConditionalOperator 0x55982cd99140 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55982cd98f68 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55982cd98f20 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55982cd98f08 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55982cd98ec8 <col:7> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55982cd98f50 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55982cd98f38 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55982cd98ee8 <col:25> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55982cd99128 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55982cd98f88 <col:42> 'int' lvalue Var 0x55982cd930c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55982cd99108 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55982cd990d8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55982cd99048 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55982cd99000 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55982cd98fe8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55982cd98fa8 <col:55> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55982cd99030 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55982cd99018 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55982cd98fc8 <col:73> '_Bool' lvalue Var 0x55982cd92f50 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55982cd990a8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55982cd99068 <col:90> 'int' lvalue Var 0x55982cd931c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55982cd990c0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55982cd99088 <col:102> 'int' lvalue Var 0x55982cd92a50 'z' 'int'
|   |-BinaryOperator 0x55982cd99378 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd99190 <col:3> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd99360 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55982cd99330 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55982cd99250 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55982cd99208 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55982cd991f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55982cd991b0 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55982cd99238 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55982cd99220 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55982cd991d0 <col:38> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55982cd992e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55982cd992a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55982cd99270 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55982cd99318 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55982cd99300 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55982cd992c8 <col:66> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55982cd99660 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd99398 <col:3> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd99648 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55982cd99618 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55982cd99538 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55982cd99458 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55982cd99410 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55982cd993f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55982cd993b8 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55982cd99440 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55982cd99428 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55982cd993d8 <col:38> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55982cd99518 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55982cd994d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55982cd994b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55982cd99478 <col:56> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55982cd99500 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55982cd994e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55982cd99498 <col:74> '_Bool' lvalue Var 0x55982cd92f50 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55982cd995d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55982cd99588 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55982cd99558 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55982cd99600 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55982cd995e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55982cd995b0 <col:102> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55982cd99868 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd99680 <col:3> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd99850 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55982cd99820 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55982cd99740 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55982cd996f8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55982cd996e0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55982cd996a0 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55982cd99728 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55982cd99710 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55982cd996c0 <col:38> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55982cd997d8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55982cd99790 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55982cd99760 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55982cd99808 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55982cd997f0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55982cd997b8 <col:66> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55982cd99b50 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55982cd99888 <col:3> '_Bool' lvalue Var 0x55982cd92f50 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55982cd99b38 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55982cd99b08 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55982cd99a28 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55982cd99948 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55982cd99900 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55982cd998e8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55982cd998a8 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55982cd99930 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55982cd99918 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55982cd998c8 <col:38> '_Bool' lvalue Var 0x55982cd92d70 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55982cd99a08 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55982cd999c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55982cd999a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55982cd99968 <col:56> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55982cd999f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55982cd999d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55982cd99988 <col:74> '_Bool' lvalue Var 0x55982cd92f50 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55982cd99ac0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55982cd99a78 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55982cd99a48 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55982cd99af0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55982cd99ad8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55982cd99aa0 <col:102> '_Bool' lvalue Var 0x55982cd92f50 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55982cd99ba8 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55982cd99b90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd99b70 <col:3> 'void ()' Function 0x55982cd39120 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55982cd99c00 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55982cd99be8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd99bc8 <col:3> 'void ()' Function 0x55982cd39060 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55982cd99cb8 <line:783:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55982cd99c20 <col:3> 'int' lvalue Var 0x55982cd922a0 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55982cd99c98 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55982cd99c80 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55982cd99c40 <col:22> 'int' lvalue Var 0x55982cd922a0 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55982cd99c60 <col:41> 'int' 1
|   |-CallExpr 0x55982cd99d28 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55982cd99d10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55982cd99cf0 <col:3> 'void ()' Function 0x55982cd39120 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55982cd99da0 <line:785:3, col:36>
|     `-CallExpr 0x55982cd99d80 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55982cd99d68 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55982cd99d48 <col:10> 'void *(void)' Function 0x55982cd38b78 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55982cd99ed0 prev 0x55982cd91fe8 <line:787:1, line:789:1> line:787:6 fence 'void ()'
| `-CompoundStmt 0x55982cd99f70 <line:788:1, line:789:1>
|-FunctionDecl 0x55982cd99fa0 prev 0x55982cd920a8 <line:790:1, line:792:1> line:790:6 isync 'void ()'
| `-CompoundStmt 0x55982cd9a040 <line:791:1, line:792:1>
|-FunctionDecl 0x55982cd9a070 prev 0x55982cd92168 <line:793:1, line:795:1> line:793:6 lwfence 'void ()'
| `-CompoundStmt 0x55982cd9a110 <line:794:1, line:795:1>
`-FunctionDecl 0x55982cd9a178 <line:796:1, line:820:1> line:796:5 main 'int ()'
  `-CompoundStmt 0x55982cd9bdd0 <line:797:1, line:820:1>
    |-DeclStmt 0x55982cd9a290 <line:798:3, col:18>
    | `-VarDecl 0x55982cd9a228 <col:3, col:13> col:13 used t1563 'pthread_t':'unsigned long'
    |-CallExpr 0x55982cd9a498 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55982cd9a480 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55982cd9a2a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55982cd79608 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55982cd9a2e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55982cd9a2c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55982cd9a228 't1563' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55982cd9a4d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55982cd9a360 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55982cd9a338 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55982cd9a300 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55982cd9a4f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55982cd9a380 <col:39> 'void *(void *)' Function 0x55982cd93440 'P0' 'void *(void *)'
    | `-ParenExpr 0x55982cd9a400 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55982cd9a3d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55982cd9a3a0 <col:52> 'int' 0
    |-DeclStmt 0x55982cd9a580 <line:800:3, col:18>
    | `-VarDecl 0x55982cd9a518 <col:3, col:13> col:13 used t1564 'pthread_t':'unsigned long'
    |-CallExpr 0x55982cd9a728 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55982cd9a710 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55982cd9a598 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55982cd79608 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55982cd9a5d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55982cd9a5b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55982cd9a518 't1564' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55982cd9a768 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55982cd9a650 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55982cd9a628 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55982cd9a5f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55982cd9a780 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55982cd9a670 <col:39> 'void *(void *)' Function 0x55982cd94e30 'P1' 'void *(void *)'
    | `-ParenExpr 0x55982cd9a6f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55982cd9a6c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55982cd9a690 <col:52> 'int' 0
    |-DeclStmt 0x55982cd9a810 <line:802:3, col:18>
    | `-VarDecl 0x55982cd9a7a8 <col:3, col:13> col:13 used t1565 'pthread_t':'unsigned long'
    |-CallExpr 0x55982cd9a9b8 <line:803:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55982cd9a9a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55982cd9a828 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55982cd79608 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55982cd9a868 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55982cd9a848 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55982cd9a7a8 't1565' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55982cd9a9f8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55982cd9a8e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55982cd9a8b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55982cd9a880 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55982cd9aa10 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55982cd9a900 <col:39> 'void *(void *)' Function 0x55982cd961b8 'P2' 'void *(void *)'
    | `-ParenExpr 0x55982cd9a980 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55982cd9a958 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55982cd9a920 <col:52> 'int' 0
    |-CallExpr 0x55982cd9aa60 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55982cd9aa48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55982cd9aa28 <col:3> 'void ()' Function 0x55982cd39060 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55982cd9ab30 <line:805:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55982cd9aa80 <col:3> '_Bool' lvalue Var 0x55982cd92698 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55982cd9ab18 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55982cd9aaf8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55982cd9aae0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55982cd9aaa0 <col:21> 'int' lvalue Var 0x55982cd922a0 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55982cd9aac0 <col:41> 'int' 3
    |-CallExpr 0x55982cd9ab88 <line:806:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55982cd9ab70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55982cd9ab50 <col:3> 'void ()' Function 0x55982cd39120 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55982cd9ac00 <line:807:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55982cd9abe8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55982cd9aba8 <col:3> 'void (int)' Function 0x55982cd389b0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55982cd9ac40 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55982cd9ac28 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55982cd9abc8 <col:21> '_Bool' lvalue Var 0x55982cd92698 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55982cd9ac90 <line:808:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55982cd9ac78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55982cd9ac58 <col:3> 'void ()' Function 0x55982cd39060 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55982cd9af88 <line:809:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55982cd9acb0 <col:3> 'int' lvalue Var 0x55982cd92a50 'z' 'int'
    | `-ConditionalOperator 0x55982cd9af58 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55982cd9ad80 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55982cd9ad38 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55982cd9ad20 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55982cd9acd0 <col:7> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55982cd9ad68 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55982cd9ad50 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55982cd9ad00 <col:25> '_Bool' lvalue Var 0x55982cd92be0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55982cd9af40 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55982cd9ada0 <col:42> 'int' lvalue Var 0x55982cd930c8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55982cd9af20 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55982cd9aef0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55982cd9ae60 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55982cd9ae18 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55982cd9ae00 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55982cd9adc0 <col:55> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55982cd9ae48 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55982cd9ae30 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55982cd9ade0 <col:73> '_Bool' lvalue Var 0x55982cd92de8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55982cd9aec0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55982cd9ae80 <col:90> 'int' lvalue Var 0x55982cd931c0 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55982cd9aed8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55982cd9aea0 <col:102> 'int' lvalue Var 0x55982cd92a50 'z' 'int'
    |-BinaryOperator 0x55982cd9b190 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55982cd9afa8 <col:3> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55982cd9b178 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55982cd9b148 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55982cd9b068 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55982cd9b020 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55982cd9b008 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55982cd9afc8 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55982cd9b050 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55982cd9b038 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55982cd9afe8 <col:38> '_Bool' lvalue Var 0x55982cd92be0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55982cd9b100 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55982cd9b0b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55982cd9b088 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55982cd9b130 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55982cd9b118 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55982cd9b0e0 <col:66> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55982cd9b478 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55982cd9b1b0 <col:3> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55982cd9b460 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55982cd9b430 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55982cd9b350 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55982cd9b270 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55982cd9b228 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55982cd9b210 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55982cd9b1d0 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55982cd9b258 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55982cd9b240 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55982cd9b1f0 <col:38> '_Bool' lvalue Var 0x55982cd92be0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55982cd9b330 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55982cd9b2e8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55982cd9b2d0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55982cd9b290 <col:56> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55982cd9b318 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55982cd9b300 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55982cd9b2b0 <col:74> '_Bool' lvalue Var 0x55982cd92de8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55982cd9b3e8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55982cd9b3a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55982cd9b370 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55982cd9b418 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55982cd9b400 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55982cd9b3c8 <col:102> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55982cd9b680 <line:812:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55982cd9b498 <col:3> '_Bool' lvalue Var 0x55982cd92be0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55982cd9b668 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55982cd9b638 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55982cd9b558 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55982cd9b510 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55982cd9b4f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55982cd9b4b8 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55982cd9b540 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55982cd9b528 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55982cd9b4d8 <col:38> '_Bool' lvalue Var 0x55982cd92be0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55982cd9b5f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55982cd9b5a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55982cd9b578 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55982cd9b620 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55982cd9b608 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55982cd9b5d0 <col:66> '_Bool' lvalue Var 0x55982cd92be0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55982cd9b968 <line:813:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55982cd9b6a0 <col:3> '_Bool' lvalue Var 0x55982cd92de8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55982cd9b950 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55982cd9b920 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55982cd9b840 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55982cd9b760 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55982cd9b718 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55982cd9b700 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55982cd9b6c0 <col:20> '_Bool' lvalue Var 0x55982cd93140 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55982cd9b748 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55982cd9b730 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55982cd9b6e0 <col:38> '_Bool' lvalue Var 0x55982cd92be0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55982cd9b820 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55982cd9b7d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55982cd9b7c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55982cd9b780 <col:56> '_Bool' lvalue Var 0x55982cd93238 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55982cd9b808 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55982cd9b7f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55982cd9b7a0 <col:74> '_Bool' lvalue Var 0x55982cd92de8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55982cd9b8d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55982cd9b890 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55982cd9b860 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55982cd9b908 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55982cd9b8f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55982cd9b8b8 <col:102> '_Bool' lvalue Var 0x55982cd92de8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55982cd9b9c0 <line:814:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55982cd9b9a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55982cd9b988 <col:3> 'void ()' Function 0x55982cd39120 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55982cd9ba18 <line:815:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55982cd9ba00 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55982cd9b9e0 <col:3> 'void ()' Function 0x55982cd39060 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55982cd9bc50 <line:816:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x55982cd9ba38 <col:3> '_Bool' lvalue Var 0x55982cd92710 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55982cd9bc38 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55982cd9bc20 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55982cd9bc00 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x55982cd9bbe0 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x55982cd9bb48 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x55982cd9bab0 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x55982cd9ba98 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x55982cd9ba58 <col:23> 'int' lvalue Var 0x55982cd923c0 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x55982cd9ba78 <col:46> 'int' 0
    |         | `-BinaryOperator 0x55982cd9bb28 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55982cd9bb10 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55982cd9bad0 <col:51> 'int' lvalue Var 0x55982cd924e0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55982cd9baf0 <col:74> 'int' 0
    |         `-BinaryOperator 0x55982cd9bbc0 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x55982cd9bba8 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55982cd9bb68 <col:79> 'int' lvalue Var 0x55982cd92600 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x55982cd9bb88 <col:102> 'int' 0
    |-CallExpr 0x55982cd9bca8 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55982cd9bc90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55982cd9bc70 <col:3> 'void ()' Function 0x55982cd39120 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55982cd9bd48 <line:818:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55982cd9bd30 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55982cd9bcc8 <col:3> 'void (int)' Function 0x55982cd38de8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55982cd9bd88 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55982cd9bd70 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55982cd9bd10 <col:21> '_Bool' lvalue Var 0x55982cd92710 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55982cd9bdc0 <line:819:3, col:10>
      `-IntegerLiteral 0x55982cd9bda0 <col:10> 'int' 0
