TranslationUnitDecl 0x565522cfde18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x565522cfe6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x565522cfe3b0 '__int128'
|-TypedefDecl 0x565522cfe748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x565522cfe3d0 'unsigned __int128'
|-TypedefDecl 0x565522cfea50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x565522cfe820 'struct __NSConstantString_tag'
|   `-Record 0x565522cfe7a0 '__NSConstantString_tag'
|-TypedefDecl 0x565522cfeaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x565522cfeab0 'char *'
|   `-BuiltinType 0x565522cfdeb0 'char'
|-TypedefDecl 0x565522d3d650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x565522cfed90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x565522cfebd0 'struct __va_list_tag'
|     `-Record 0x565522cfeb50 '__va_list_tag'
|-FunctionDecl 0x565522d3d770 <./split_7/rfi005_power.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x565522d3d940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x565522d3d870 <col:31> col:34 'int'
|-FunctionDecl 0x565522d3dab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x565522d3dbe0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x565522d3dd28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x565522d3dc98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x565522d3df58 <col:40, col:99>
|   |-IfStmt 0x565522d3df28 <col:42, col:88>
|   | |-UnaryOperator 0x565522d3de08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x565522d3ddf0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x565522d3ddd0 <col:47> 'int' lvalue ParmVar 0x565522d3dc98 'expression' 'int'
|   | `-CompoundStmt 0x565522d3df10 <col:59, col:88>
|   |   `-LabelStmt 0x565522d3def8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x565522d3de88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x565522d3de70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x565522d3de20 <col:68> 'void () __attribute__((noreturn))' Function 0x565522d3dbe0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x565522d3df40 <col:89>
|   `-ReturnStmt 0x565522d3df48 <col:91>
|-FunctionDecl 0x565522d3dfa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x565522d3e060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x565522d3e3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x565522d3e118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x565522d3e198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x565522d3e218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x565522d3e298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x565522d3e4a0 <line:11:22>
|-FunctionDecl 0x565522d64520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x565522d3e510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x565522d3e590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x565522d64350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x565522d643d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x565522d645e0 <line:14:22>
|-FunctionDecl 0x565522d64890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x565522d64650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x565522d646d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x565522d64750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x565522d64948 <line:16:22>
|-TypedefDecl 0x565522d649b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x565522cfdf70 'unsigned char'
|-TypedefDecl 0x565522d64a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x565522cfdf90 'unsigned short'
|-TypedefDecl 0x565522d64a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x565522cfdfb0 'unsigned int'
|-TypedefDecl 0x565522d64b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-TypedefDecl 0x565522d64b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x565522cfded0 'signed char'
|-TypedefDecl 0x565522d64be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x565522cfdf70 'unsigned char'
|-TypedefDecl 0x565522d64c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x565522cfdef0 'short'
|-TypedefDecl 0x565522d64cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x565522cfdf90 'unsigned short'
|-TypedefDecl 0x565522d64d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x565522cfdf10 'int'
|-TypedefDecl 0x565522d64da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x565522cfdfb0 'unsigned int'
|-TypedefDecl 0x565522d64e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d64e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-TypedefDecl 0x565522d64ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d64f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-TypedefDecl 0x565522d64fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-TypedefDecl 0x565522d65048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x565522cfdfb0 'unsigned int'
|-TypedefDecl 0x565522d650b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x565522cfdfb0 'unsigned int'
|-TypedefDecl 0x565522d65128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-TypedefDecl 0x565522d65198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-TypedefDecl 0x565522d65208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x565522cfdfb0 'unsigned int'
|-TypedefDecl 0x565522d65278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-TypedefDecl 0x565522d652e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d65378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d653e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x565522cfdf10 'int'
|-RecordDecl 0x565522d65440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x565522d65588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x565522d65640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x565522d655e0 'struct __fsid_t' sugar
|   `-RecordType 0x565522d654c0 '__fsid_t'
|     `-Record 0x565522d65440 ''
|-TypedefDecl 0x565522d656c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d65738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-TypedefDecl 0x565522d657a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-TypedefDecl 0x565522d65818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x565522cfdfb0 'unsigned int'
|-TypedefDecl 0x565522d65888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d658f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x565522cfdfb0 'unsigned int'
|-TypedefDecl 0x565522d65968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d659d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x565522cfdf10 'int'
|-TypedefDecl 0x565522d65a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x565522cfdf10 'int'
|-TypedefDecl 0x565522d65ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x565522cfdf10 'int'
|-TypedefDecl 0x565522d65b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x565522cfe630 'void *'
|   `-BuiltinType 0x565522cfde70 'void'
|-TypedefDecl 0x565522d65b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d65c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d65c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d65ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-TypedefDecl 0x565522d65d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-TypedefDecl 0x565522d65dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-TypedefDecl 0x565522d65e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-TypedefDecl 0x565522d65ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d65f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d65f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d65ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-TypedefDecl 0x565522d66088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x565522d66050 '__off64_t' sugar
|   |-Typedef 0x565522d65378 '__off64_t'
|   `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d66180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x565522d66140 '__quad_t *'
|   `-TypedefType 0x565522d660e0 '__quad_t' sugar
|     |-Typedef 0x565522d64ef8 '__quad_t'
|     `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d661f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x565522cfeab0 'char *'
|   `-BuiltinType 0x565522cfdeb0 'char'
|-TypedefDecl 0x565522d66260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d662d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x565522cfdfb0 'unsigned int'
|-FunctionDecl 0x565522d67458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x565522d67380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x565522d67768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x565522d67758 <line:73:3, col:34>
|     `-CallExpr 0x565522d67718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x565522d67700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x565522d67690 <col:10> '<builtin fn type>' Function 0x565522d67500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x565522d67740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x565522d676b0 <col:29> 'unsigned int' lvalue ParmVar 0x565522d67380 '__bsx' 'unsigned int'
|-FunctionDecl 0x565522d67500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x565522d675a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x565522d67610 <col:10> Implicit
| `-ConstAttr 0x565522d67668 <col:10> Implicit
|-FunctionDecl 0x565522d678c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x565522d677b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x565522d67bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x565522d67bc8 <line:78:3, col:34>
|     `-CallExpr 0x565522d67b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x565522d67b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x565522d67af8 <col:10> '<builtin fn type>' Function 0x565522d67968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x565522d67bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x565522d67b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x565522d677b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x565522d67968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x565522d67a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x565522d67a78 <col:10> Implicit
| `-ConstAttr 0x565522d67ad0 <col:10> Implicit
|-TypedefDecl 0x565522d67c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-TypedefDecl 0x565522d67c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x565522d67c60 '__time_t' sugar
|   |-Typedef 0x565522d65888 '__time_t'
|   `-BuiltinType 0x565522cfdf30 'long'
|-RecordDecl 0x565522d67cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x565522d67da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x565522d67e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x565522d67ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x565522d67e90 '__pid_t' sugar
|   |-Typedef 0x565522d653e8 '__pid_t'
|   `-BuiltinType 0x565522cfdf10 'int'
|-RecordDecl 0x565522d67f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x565522d67fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x565522d68030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x565522d680f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x565522d68158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-RecordDecl 0x565522d681b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x565522d69480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x565522d69530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x565522d694d0 'struct cpu_set_t' sugar
|   `-RecordType 0x565522d68230 'cpu_set_t'
|     `-Record 0x565522d681b0 ''
|-FunctionDecl 0x565522d69808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x565522d695d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x565522d696e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x565522d698b8 <line:108:19>
|-FunctionDecl 0x565522d69a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x565522d69920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x565522d69b38 <col:69>
|-FunctionDecl 0x565522d69cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x565522d69ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x565522d69d58 <col:64>
|-FunctionDecl 0x565522d6a018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x565522d69dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x565522d69ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x565522d6a0c8 <line:114:22>
|-FunctionDecl 0x565522d6a3b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x565522d6a130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x565522d6a228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x565522d6a460 <col:88>
|-FunctionDecl 0x565522d6a718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x565522d6a4c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x565522d6a548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x565522d6a5d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x565522d6a7d0 <col:62>
|-FunctionDecl 0x565522d6a948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x565522d6a838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x565522d6a9f0 <col:63>
|-FunctionDecl 0x565522d6ab18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x565522d6abb8 <col:47>
|-FunctionDecl 0x565522d6acc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x565522d6ac28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x565522d6ad68 <col:69>
|-FunctionDecl 0x565522d6ae70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x565522d6add8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x565522d6af18 <col:69>
|-FunctionDecl 0x565522d6b1d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x565522d6af80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x565522d6b0b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x565522d6b288 <col:88>
|-TypedefDecl 0x565522d6b318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x565522d6b2e0 '__clock_t' sugar
|   |-Typedef 0x565522d656c8 '__clock_t'
|   `-BuiltinType 0x565522cfdf30 'long'
|-TypedefDecl 0x565522d6b3c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x565522d6b370 '__clockid_t' sugar
|   |-Typedef 0x565522d65ab8 '__clockid_t'
|   `-BuiltinType 0x565522cfdf10 'int'
|-TypedefDecl 0x565522d6b458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x565522d6b420 '__timer_t' sugar
|   |-Typedef 0x565522d65b28 '__timer_t'
|   `-PointerType 0x565522cfe630 'void *'
|     `-BuiltinType 0x565522cfde70 'void'
|-RecordDecl 0x565522d6b4b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x565522d6b570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x565522d6b5d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x565522d6b640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x565522d6b6a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x565522d6b710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x565522d6b778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x565522d6b7e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x565522d6b848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x565522d6b8b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x565522d6b918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x565522d6b980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x565522d6b9d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x565522d6ba98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x565522d6bb08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x565522d6bbb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x565522d6bd80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x565522d6be20 <col:45>
|-FunctionDecl 0x565522d6c000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x565522d6bef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x565522d6c0a8 <col:54>
|-FunctionDecl 0x565522d6c2a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x565522d6c110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x565522d6c188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x565522d6c358 <line:158:22>
| `-ConstAttr 0x565522d6cff0 <col:63>
|-FunctionDecl 0x565522d6d1f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x565522d6d0e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x565522d6d298 <col:56>
|-FunctionDecl 0x565522d6d640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x565522d6d308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x565522d6d380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x565522d6d400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x565522d6d4f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x565522d6d700 <col:54>
|-RecordDecl 0x565522d6d758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x565522d6d808 parent 0x565522cfde18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x565522d6da68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x565522d6db08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x565522d6db70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x565522d6dbd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x565522d6dcc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x565522d6dde8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x565522d6dd90 'struct __locale_struct *'
|   `-ElaboratedType 0x565522d6dd20 'struct __locale_struct' sugar
|     `-RecordType 0x565522d6d7e0 'struct __locale_struct'
|       `-Record 0x565522d6d758 '__locale_struct'
|-TypedefDecl 0x565522d6de98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x565522d6de60 '__locale_t' sugar
|   |-Typedef 0x565522d6dde8 '__locale_t'
|   `-PointerType 0x565522d6dd90 'struct __locale_struct *'
|     `-ElaboratedType 0x565522d6dd20 'struct __locale_struct' sugar
|       `-RecordType 0x565522d6d7e0 'struct __locale_struct'
|         `-Record 0x565522d6d758 '__locale_struct'
|-FunctionDecl 0x565522d6f2a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x565522d6df08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x565522d6df80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x565522d6f028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x565522d6f0b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x565522d6f130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x565522d6f368 <col:40>
|-FunctionDecl 0x565522d6f558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x565522d6f430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x565522d6f600 <col:66>
|-FunctionDecl 0x565522d6f710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x565522d6f668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x565522d6f7b8 <col:69>
|-FunctionDecl 0x565522d6f9e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x565522d6f820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x565522d6f8b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x565522d6fa98 <col:52>
|-FunctionDecl 0x565522d6fc40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x565522d6fb00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x565522d6fb90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x565522d6fcf0 <col:55>
|-FunctionDecl 0x565522d6fe88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x565522d6fd70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x565522d6ff30 <col:62>
|-FunctionDecl 0x565522d70168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x565522d6ff98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x565522d70210 <col:60>
|-FunctionDecl 0x565522d70438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x565522d70290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x565522d70310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x565522d704e8 <col:44>
|-FunctionDecl 0x565522d706f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x565522d70550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x565522d705d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x565522d707a8 <col:49>
|-VarDecl 0x565522d708a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x565522d70928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x565522d709a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x565522d70a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x565522d70ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x565522d70c40 <col:42>
|-VarDecl 0x565522d70cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x565522d70d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x565522d70eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x565522d70da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x565522d70f60 <col:57>
|-FunctionDecl 0x565522d710d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x565522d70fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x565522d71178 <col:56>
|-FunctionDecl 0x565522d71288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x565522d711f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x565522d71330 <col:59>
|-FunctionDecl 0x565522d71438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x565522d713a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x565522d714e0 <col:48>
| `-ConstAttr 0x565522d71538 <col:89>
|-FunctionDecl 0x565522d71798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x565522d715e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x565522d71678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x565522d719f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x565522d71888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x565522d71918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x565522d71aa8 <col:88>
|-FunctionDecl 0x565522d71c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x565522d71b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x565522d71ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x565522d71cf0 <col:88>
|-FunctionDecl 0x565522d71f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x565522d71d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x565522d71de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x565522d71fb8 <line:209:22>
|-FunctionDecl 0x565522d72358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x565522d72020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x565522d720e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x565522d72170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x565522d72200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x565522d72658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x565522d72458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x565522d72530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x565522d72708 <col:85>
|-FunctionDecl 0x565522d72af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x565522d72770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x565522d728a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x565522d729b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x565522d72bb0 <col:52>
|-FunctionDecl 0x565522d72d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x565522d72c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x565522d72dd0 <col:61>
|-FunctionDecl 0x565522d73248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x565522d72e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x565522d72eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x565522d72fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x565522d730f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x565522d73308 <col:62>
|-FunctionDecl 0x565522d73528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x565522d73370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x565522d73400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x565522d735d8 <line:222:22>
|-FunctionDecl 0x565522d736d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x565522d73640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x565522d73780 <col:65>
|-TypedefDecl 0x565522d737f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x565522cfdfd0 'unsigned long'
|-RecordDecl 0x565522d73848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x565522d73990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x565522d739f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x565522d73aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x565522d73a50 'union pthread_attr_t' sugar
|   `-RecordType 0x565522d738d0 'union pthread_attr_t'
|     `-Record 0x565522d73848 'pthread_attr_t'
|-RecordDecl 0x565522d73b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x565522d73c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x565522d73cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x565522d73da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x565522d73d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x565522d73b80 'struct __pthread_internal_list'
|     `-Record 0x565522d73b00 '__pthread_internal_list'
|-RecordDecl 0x565522d73e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x565522d73eb8 parent 0x565522cfde18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x565522d73f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x565522d73ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x565522d74060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x565522d78110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x565522d78178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x565522d781e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x565522d78268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x565522d78320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x565522d78410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x565522d78478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x565522d78600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x565522d785a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x565522d73e90 'pthread_mutex_t'
|     `-Record 0x565522d73e10 ''
|-RecordDecl 0x565522d78670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x565522d787b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x565522d78818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x565522d788d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x565522d78870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x565522d786f0 'pthread_mutexattr_t'
|     `-Record 0x565522d78670 ''
|-RecordDecl 0x565522d78940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x565522d789e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x565522d78ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x565522d78b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x565522d78b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x565522d78be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x565522d78c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x565522d78cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x565522d78d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x565522d78d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x565522d78e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_7/rfi005_power.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_7/rfi005_power.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x565522d78f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x565522d78f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x565522d7a130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x565522d79070 'union pthread_cond_t' sugar
|   `-RecordType 0x565522d789c0 'pthread_cond_t'
|     `-Record 0x565522d78940 ''
|-RecordDecl 0x565522d7a1a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x565522d7a2a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x565522d7a308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x565522d7a3c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x565522d7a360 'union pthread_condattr_t' sugar
|   `-RecordType 0x565522d7a220 'pthread_condattr_t'
|     `-Record 0x565522d7a1a0 ''
|-TypedefDecl 0x565522d7a448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x565522cfdfb0 'unsigned int'
|-TypedefDecl 0x565522d7a4b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x565522cfdf10 'int'
|-RecordDecl 0x565522d7a510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x565522d7a5b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x565522d7a680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x565522d7a6e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x565522d7a750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x565522d7a7b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x565522d7a820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x565522d7a888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x565522d7a8f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x565522d7a958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x565522d7a9c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x565522d7aa28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x565522d7aa90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x565522d7ab40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_7/rfi005_power.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_7/rfi005_power.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x565522d7abe8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x565522d7ac50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x565522d7ada0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x565522d7ad40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x565522d7a590 'pthread_rwlock_t'
|     `-Record 0x565522d7a510 ''
|-RecordDecl 0x565522d7ae10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x565522d7af50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x565522d7afb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x565522d7b070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x565522d7b010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x565522d7ae90 'pthread_rwlockattr_t'
|     `-Record 0x565522d7ae10 ''
|-TypedefDecl 0x565522d7c140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x565522cfdf14 'volatile int' volatile
|   `-BuiltinType 0x565522cfdf10 'int'
|-RecordDecl 0x565522d7c198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x565522d7c2e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x565522d7c348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x565522d7c400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x565522d7c3a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x565522d7c220 'pthread_barrier_t'
|     `-Record 0x565522d7c198 ''
|-RecordDecl 0x565522d7c470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x565522d7c570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x565522d7c5d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x565522d7c690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x565522d7c630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x565522d7c4f0 'pthread_barrierattr_t'
|     `-Record 0x565522d7c470 ''
|-TypedefDecl 0x565522d7c7a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x565522d7c740 'long [8]' 8 
|   `-BuiltinType 0x565522cfdf30 'long'
|-EnumDecl 0x565522d7c800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x565522d7c8c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x565522d7c918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x565522d7c968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x565522d7ca38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x565522d7ca88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x565522d7cad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x565522d7cb28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x565522d7cbb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x565522d7cb98 <col:26> 'int'
| |   `-DeclRefExpr 0x565522d7cb78 <col:26> 'int' EnumConstant 0x565522d7ca38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x565522d7cc38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x565522d7cc20 <col:29> 'int'
| |   `-DeclRefExpr 0x565522d7cc00 <col:29> 'int' EnumConstant 0x565522d7ca88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x565522d7ccc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x565522d7cca8 <col:30> 'int'
| |   `-DeclRefExpr 0x565522d7cc88 <col:30> 'int' EnumConstant 0x565522d7cad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x565522d7cd48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x565522d7cd30 <col:27> 'int'
|     `-DeclRefExpr 0x565522d7cd10 <col:27> 'int' EnumConstant 0x565522d7cbb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x565522d7cd98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x565522d7ce68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x565522d7cef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x565522d7ced8 <col:30> 'int'
| |   `-DeclRefExpr 0x565522d7ceb8 <col:30> 'int' EnumConstant 0x565522d7ce68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x565522d7cf40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x565522d7cfc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x565522d7cfb0 <col:29> 'int'
|     `-DeclRefExpr 0x565522d7cf90 <col:29> 'int' EnumConstant 0x565522d7cf40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x565522d7d018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x565522d7d0e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x565522d7d150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x565522d7d1a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x565522d7d1f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x565522d7d2b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x565522d7d308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x565522d7d358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x565522d7d3e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x565522d7d3c8 <col:31> 'int'
|     `-DeclRefExpr 0x565522d7d3a8 <col:31> 'int' EnumConstant 0x565522d7d2b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x565522d7d430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x565522d7d4f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x565522d7d548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x565522d7d598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x565522d7d668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x565522d7d6b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x565522d7d708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x565522d7d7d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x565522d7d828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x565522d7d878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x565522d7dab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x565522d7db20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x565522d7db88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x565522d7dca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x565522d7dcf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x565522d7ddc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x565522d7de18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x565522d7de68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x565522d7df38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x565522d7df88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x565522d7e5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x565522d7e080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x565522d7e1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565522d7e3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x565522d7e420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x565522d7e678 <col:47>
| |-NonNullAttr 0x565522d7e6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x565522d7e708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x565522d7e830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x565522d7e760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x565522d7ea88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x565522d7e8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x565522d7e968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x565522d7ec58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x565522d7eb48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x565522d7ed00 <col:60>
|-FunctionDecl 0x565522d7ee50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x565522d7eef0 <col:54>
| `-ConstAttr 0x565522d7ef48 <col:95>
|-FunctionDecl 0x565522d80990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x565522d7ef80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x565522d7eff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x565522d80a40 <line:395:19>
| `-ConstAttr 0x565522d80a98 <col:60>
|-FunctionDecl 0x565522d80c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x565522d80b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x565522d80d10 <col:71>
| `-NonNullAttr 0x565522d80d68 <col:112, col:126> 1
|-FunctionDecl 0x565522d80e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x565522d80db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x565522d80f18 <line:398:22>
| `-NonNullAttr 0x565522d80f70 <col:63, col:77> 1
|-FunctionDecl 0x565522d81198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x565522d80fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x565522d81038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x565522d81248 <line:401:22>
| `-NonNullAttr 0x565522d812a0 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d814a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x565522d812e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565522d81368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x565522d81558 <line:404:22>
| `-NonNullAttr 0x565522d815b0 <col:63, col:77> 1
|-FunctionDecl 0x565522d81808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x565522d815f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x565522d816a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x565522d818b8 <line:407:22>
| `-NonNullAttr 0x565522d81910 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d82b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x565522d829b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565522d82a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x565522d82c18 <line:410:22>
| `-NonNullAttr 0x565522d82c70 <col:63, col:77> 1
|-FunctionDecl 0x565522d82ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x565522d82cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565522d82d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x565522d82f58 <line:413:22>
| `-NonNullAttr 0x565522d82fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d831e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x565522d82ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x565522d83088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x565522d83298 <col:37>
| `-NonNullAttr 0x565522d832f0 <col:78, col:95> 1 2
|-FunctionDecl 0x565522d834d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565522d83338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565522d833b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x565522d83588 <line:419:22>
| `-NonNullAttr 0x565522d835e0 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d83768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x565522d83628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565522d836a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x565522d83818 <line:421:22>
| `-NonNullAttr 0x565522d83870 <col:63, col:77> 1
|-FunctionDecl 0x565522d83a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565522d838b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565522d83938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x565522d83ae8 <line:424:22>
| `-NonNullAttr 0x565522d83b40 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d83cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x565522d83b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565522d83c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x565522d83d78 <line:427:22>
| `-NonNullAttr 0x565522d83dd0 <col:63, col:77> 1
|-FunctionDecl 0x565522d83f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565522d83e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565522d83e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x565522d84028 <line:430:22>
| `-NonNullAttr 0x565522d84080 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d84208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x565522d840c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565522d84148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x565522d842b8 <line:432:22>
| `-NonNullAttr 0x565522d84310 <col:63, col:77> 1
|-FunctionDecl 0x565522d84538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x565522d84358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565522d843d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x565522d845e8 <line:435:22>
| |-NonNullAttr 0x565522d84640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x565522d84678 <col:100> "" ""
|-FunctionDecl 0x565522d84888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x565522d846c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565522d84748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x565522d84938 <line:438:22>
| |-NonNullAttr 0x565522d84990 <col:63, col:77> 1
| `-DeprecatedAttr 0x565522d849d8 <col:97> "" ""
|-FunctionDecl 0x565522d84bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x565522d84a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565522d84aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x565522d84c78 <line:441:22>
| `-NonNullAttr 0x565522d84cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d84e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x565522d84d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565522d84d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x565522d84f00 <line:444:22>
| `-NonNullAttr 0x565522d84f58 <col:63, col:77> 1
|-FunctionDecl 0x565522d85248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x565522d84fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565522d85028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x565522d850a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x565522d85300 <line:448:22>
| `-NonNullAttr 0x565522d85358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x565522d85608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x565522d853b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565522d85430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x565522d854a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x565522d856c0 <col:43>
| `-NonNullAttr 0x565522d85718 <col:84, col:98> 1
|-FunctionDecl 0x565522d85a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x565522d85768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x565522d857e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x565522d85878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x565522d85ad8 <line:453:22>
| `-NonNullAttr 0x565522d85b30 <col:63, col:77> 3
|-FunctionDecl 0x565522d85e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x565522d85b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x565522d85bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x565522d85c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x565522d85ec0 <line:457:22>
| `-NonNullAttr 0x565522d85f18 <col:63, col:80> 2 3
|-FunctionDecl 0x565522d86108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x565522d85f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x565522d85fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x565522d861b8 <line:459:22>
|-FunctionDecl 0x565522d86588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x565522d86280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x565522d86420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x565522d86638 <col:52, col:69> 1 2
|-FunctionDecl 0x565522d867e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x565522d866c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x565522d86740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x565522d869f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x565522d868a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x565522d86928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x565522d86b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x565522d86ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x565522d86c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x565522d86d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x565522d86dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x565522d86ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x565522d86f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x565522d87100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_7/rfi005_power.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x565522d871f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x565522d872b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x565522d87250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x565522d86db0 '__pthread_unwind_buf_t'
| |   `-Record 0x565522d86d28 ''
| `-AlignedAttr 0x565522d87308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x565522d87380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x565522d874e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x565522d87548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x565522d875b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x565522d87618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x565522d87820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x565522d87710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x565522d87a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x565522d878d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x565522d87bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x565522d87ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x565522d87c68 <line:488:22>
|-RecordDecl 0x565522d87cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x565522d87fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x565522d87e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x565522d87eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x565522d88088 <col:86>
| `-ReturnsTwiceAttr 0x565522d880e0 <col:12> Implicit
|-FunctionDecl 0x565522d88408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x565522d881b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x565522d882c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x565522d884b8 <line:494:22>
| `-NonNullAttr 0x565522d88510 <col:63, col:77> 1
|-FunctionDecl 0x565522d88688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x565522d88558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x565522d88730 <line:496:22>
| `-NonNullAttr 0x565522d88788 <col:63, col:77> 1
|-FunctionDecl 0x565522d88890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x565522d887d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x565522d88938 <line:498:22>
| `-NonNullAttr 0x565522d88990 <col:52, col:66> 1
|-FunctionDecl 0x565522d89ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x565522d89a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x565522d89b80 <line:500:22>
| `-NonNullAttr 0x565522d89bd8 <col:52, col:66> 1
|-FunctionDecl 0x565522d89e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x565522d89c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x565522d89cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x565522d89ec8 <col:36>
| `-NonNullAttr 0x565522d89f20 <col:66, col:83> 1 2
|-FunctionDecl 0x565522d8a020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x565522d89f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x565522d8a0c8 <line:505:22>
| `-NonNullAttr 0x565522d8a120 <col:52, col:66> 1
|-FunctionDecl 0x565522d8a3b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565522d8a1d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x565522d8a250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x565522d8a468 <line:509:22>
| `-NonNullAttr 0x565522d8a4c0 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d8a788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x565522d8a508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x565522d8a588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x565522d8a608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x565522d8a840 <line:513:22>
| `-NonNullAttr 0x565522d8a898 <col:63, col:80> 1 3
|-FunctionDecl 0x565522d8aa30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x565522d8a8e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x565522d8aad8 <line:515:22>
| `-NonNullAttr 0x565522d8ab30 <col:63, col:77> 1
|-FunctionDecl 0x565522d8ad18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x565522d8abe0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x565522d8adc0 <line:517:22>
| `-NonNullAttr 0x565522d8ae18 <col:63, col:77> 1
|-FunctionDecl 0x565522d8af20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x565522d8ae68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x565522d8afc8 <line:519:22>
| `-NonNullAttr 0x565522d8b020 <col:63, col:77> 1
|-FunctionDecl 0x565522d8b248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565522d8b068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x565522d8b0e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x565522d8b2f8 <line:523:22>
| `-NonNullAttr 0x565522d8b350 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d8b558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x565522d8b398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x565522d8b418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x565522d8b608 <line:526:22>
| `-NonNullAttr 0x565522d8b660 <col:63, col:77> 1
|-FunctionDecl 0x565522d8b808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565522d8b6a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x565522d8b728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x565522d8b8b8 <line:529:22>
| `-NonNullAttr 0x565522d8b910 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d8bb00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x565522d8b958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x565522d8ba40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x565522d8bbb0 <line:531:22>
| `-NonNullAttr 0x565522d8bc08 <col:63, col:77> 1
|-FunctionDecl 0x565522d8bdb8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565522d8bc58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x565522d8bcd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x565522d8be68 <line:535:22>
| `-NonNullAttr 0x565522d8bec0 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d8c048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x565522d8bf08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x565522d8bf88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x565522d8c0f8 <line:538:22>
| `-NonNullAttr 0x565522d8c150 <col:63, col:77> 1
|-FunctionDecl 0x565522d8c2f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565522d8c198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x565522d8c218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x565522d8c3a8 <line:542:22>
| `-NonNullAttr 0x565522d8c400 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d8c588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x565522d8c448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x565522d8c4c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x565522d8c638 <line:545:22>
| `-NonNullAttr 0x565522d8c690 <col:63, col:77> 1
|-FunctionDecl 0x565522d8c878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x565522d8c6d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x565522d8c758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x565522d8c928 <line:548:22>
| `-NonNullAttr 0x565522d8c980 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d8db38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x565522d8c9c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x565522d8da78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x565522d8dbe8 <line:551:22>
| `-NonNullAttr 0x565522d8dc40 <col:63, col:77> 1
|-FunctionDecl 0x565522d8df78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x565522d8dd20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x565522d8de30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x565522d8e028 <col:29>
| `-NonNullAttr 0x565522d8e080 <col:70, col:84> 1
|-FunctionDecl 0x565522d8e1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x565522d8e0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x565522d8e2a0 <line:556:22>
| `-NonNullAttr 0x565522d8e2f8 <col:63, col:77> 1
|-FunctionDecl 0x565522d8e400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x565522d8e348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x565522d8e4a8 <line:558:22>
| `-NonNullAttr 0x565522d8e500 <col:52, col:66> 1
|-FunctionDecl 0x565522d8e600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x565522d8e548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x565522d8e6a8 <line:560:19>
| `-NonNullAttr 0x565522d8e700 <col:49, col:63> 1
|-FunctionDecl 0x565522d8e938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x565522d8e748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x565522d8e7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x565522d8e9e8 <col:39>
| `-NonNullAttr 0x565522d8ea70 <col:69, col:86> 1 2
|-FunctionDecl 0x565522d8eb70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x565522d8eab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x565522d8ec18 <line:565:22>
| `-NonNullAttr 0x565522d8ec70 <col:52, col:66> 1
|-FunctionDecl 0x565522d8ed70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x565522d8ecb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x565522d8ee18 <line:567:22>
| `-NonNullAttr 0x565522d8ee70 <col:52, col:66> 1
|-FunctionDecl 0x565522d8f028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x565522d8eeb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x565522d8ef48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x565522d8f0d8 <col:39>
| `-NonNullAttr 0x565522d8f130 <col:69, col:86> 1 2
|-FunctionDecl 0x565522d8f230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x565522d8f178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x565522d8f2d8 <line:572:22>
| `-NonNullAttr 0x565522d8f330 <col:52, col:66> 1
|-FunctionDecl 0x565522d8f518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x565522d8f3e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x565522d8f5c0 <line:574:22>
| `-NonNullAttr 0x565522d8f618 <col:63, col:77> 1
|-FunctionDecl 0x565522d8f720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x565522d8f668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x565522d8f7c8 <line:576:22>
| `-NonNullAttr 0x565522d8f820 <col:63, col:77> 1
|-FunctionDecl 0x565522d8fa80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565522d8f868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x565522d8f8e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x565522d8fb30 <line:580:22>
| `-NonNullAttr 0x565522d8fb88 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d8fd98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x565522d8fbd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x565522d8fc58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x565522d8fe48 <line:583:22>
| `-NonNullAttr 0x565522d8fea0 <col:63, col:77> 1
|-FunctionDecl 0x565522d90048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565522d8fee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x565522d8ff68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x565522d900f8 <line:587:22>
| `-NonNullAttr 0x565522d90150 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d902d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x565522d90198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x565522d90218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x565522d90388 <col:36>
| `-NonNullAttr 0x565522d903e0 <col:77, col:91> 1
|-FunctionDecl 0x565522d90718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x565522d904c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x565522d905d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x565522d907c8 <line:592:22>
| `-NonNullAttr 0x565522d90820 <col:63, col:77> 1
|-FunctionDecl 0x565522d90998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x565522d90868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x565522d90a40 <line:594:22>
| `-NonNullAttr 0x565522d90ac0 <col:63, col:77> 1
|-FunctionDecl 0x565522d90bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x565522d90b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x565522d90c68 <line:596:22>
| `-NonNullAttr 0x565522d90cc0 <col:52, col:66> 1
|-FunctionDecl 0x565522d90dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x565522d90d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x565522d90e68 <line:598:22>
| `-NonNullAttr 0x565522d90ec0 <col:52, col:66> 1
|-FunctionDecl 0x565522d910e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x565522d90f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x565522d90f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x565522d91198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x565522d914c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x565522d91218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x565522d91290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x565522d91320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x565522d91580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x565522d91798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x565522d91660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x565522d91840 <line:607:22>
| `-NonNullAttr 0x565522d91898 <col:63, col:77> 1
|-FunctionDecl 0x565522d919a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x565522d918e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x565522d91a48 <line:609:22>
| `-NonNullAttr 0x565522d91ad0 <col:63, col:77> 1
|-FunctionDecl 0x565522d91cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565522d91b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x565522d91b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x565522d91da8 <line:613:22>
| `-NonNullAttr 0x565522d91e00 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d92008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x565522d91e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x565522d91ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x565522d920b8 <col:37>
| `-NonNullAttr 0x565522d92110 <col:78, col:92> 1
|-FunctionDecl 0x565522d92328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x565522d92158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x565522d92200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x565522d923d8 <line:619:22>
| `-NonNullAttr 0x565522d92430 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d925f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x565522d92478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x565522d924f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x565522d926a8 <line:622:22>
| `-NonNullAttr 0x565522d92700 <col:63, col:77> 1
|-FunctionDecl 0x565522d929a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x565522d927e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x565522d92860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x565522d92a58 <line:624:22>
| `-NonNullAttr 0x565522d92ae0 <col:63, col:77> 1
|-FunctionDecl 0x565522d92c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x565522d92b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x565522d92d00 <line:626:22>
| `-NonNullAttr 0x565522d92d58 <col:63, col:77> 1
|-FunctionDecl 0x565522d92e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x565522d92da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x565522d92f08 <line:628:22>
| `-NonNullAttr 0x565522d92f60 <col:52, col:66> 1
|-FunctionDecl 0x565522d93060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x565522d92fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x565522d93108 <line:630:22>
| `-NonNullAttr 0x565522d93160 <col:52, col:66> 1
|-FunctionDecl 0x565522d93260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x565522d931a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x565522d93308 <line:632:22>
| `-NonNullAttr 0x565522d93360 <col:52, col:66> 1
|-FunctionDecl 0x565522d93738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x565522d93440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x565522d93550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x565522d935d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x565522d937f0 <line:636:22>
| `-NonNullAttr 0x565522d93848 <col:63, col:77> 1
|-FunctionDecl 0x565522d939c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x565522d93898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x565522d93a70 <line:638:22>
| `-NonNullAttr 0x565522d94b00 <col:63, col:77> 1
|-FunctionDecl 0x565522d94c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x565522d94b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x565522d94ca8 <line:640:22>
| `-NonNullAttr 0x565522d94d00 <col:52, col:66> 1
|-FunctionDecl 0x565522d94ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x565522d94db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x565522d94f90 <line:642:22>
| `-NonNullAttr 0x565522d94fe8 <col:63, col:77> 1
|-FunctionDecl 0x565522d950f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x565522d95038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x565522d95198 <line:644:22>
| `-NonNullAttr 0x565522d951f0 <col:63, col:77> 1
|-FunctionDecl 0x565522d95418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565522d95238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x565522d952b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x565522d954c8 <line:648:22>
| `-NonNullAttr 0x565522d95520 <col:63, col:80> 1 2
|-FunctionDecl 0x565522d95728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x565522d95568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x565522d955e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x565522d957d8 <line:651:22>
| `-NonNullAttr 0x565522d95830 <col:63, col:77> 1
|-FunctionDecl 0x565522d95b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x565522d95910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x565522d95a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x565522d95c48 <line:654:22>
| `-NonNullAttr 0x565522d95ca0 <col:63, col:77> 1
|-FunctionDecl 0x565522d95df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x565522d95ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x565522d95ea0 <col:69>
|-FunctionDecl 0x565522d96018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x565522d95f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x565522d960c0 <col:72>
|-FunctionDecl 0x565522d962f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x565522d96128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x565522d961d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x565522d963a8 <col:44>
|-FunctionDecl 0x565522d965c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x565522d96410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x565522d96488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x565522d96678 <line:661:22>
| `-NonNullAttr 0x565522d966d0 <col:63, col:77> 2
|-FunctionDecl 0x565522d96b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x565522d967b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x565522d968c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x565522d969d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x565522d96be8 <col:47>
|-FunctionDecl 0x565522d96cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x565522d96c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x565522d96e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x565522d96db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x565522d96f10 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x565522d96fd0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x565522d97090 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x565522d97148 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x565522d971c8 prev 0x565522d97148 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x565522d97230 <col:24> 'int' 0
|-VarDecl 0x565522d97268 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x565522d972e8 prev 0x565522d97268 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x565522d97350 <col:27> 'int' 0
|-VarDecl 0x565522d97388 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x565522d97408 prev 0x565522d97388 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x565522d97470 <col:27> 'int' 0
|-VarDecl 0x565522d974a8 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x565522d97528 prev 0x565522d974a8 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x565522d97590 <col:27> 'int' 0
|-VarDecl 0x565522d975c0 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x565522d97638 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x565522d976b8 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x565522d97738 prev 0x565522d976b8 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x565522d977a0 <col:9> 'int' 0
|-VarDecl 0x565522d977d8 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x565522d97858 prev 0x565522d977d8 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x565522d978c0 <col:9> 'int' 0
|-VarDecl 0x565522d978f0 <line:685:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x565522d97970 <line:686:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x565522d979e8 <line:687:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x565522d97a60 <line:688:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x565522d97b00 <line:689:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x565522d97b78 <line:690:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x565522d97bf0 <line:691:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x565522d97c68 <line:692:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x565522d97ce0 <line:693:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x565522d97d60 <line:694:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x565522d97de0 <line:695:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x565522d97e58 <line:696:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x565522d97ed8 <line:697:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x565522d97f50 <line:698:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x565522d97fc8 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x565522d98040 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x565522d98158 prev 0x565522d96cf0 <line:701:1, line:730:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x565522d980c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x565522d9b198 <line:702:1, line:730:1>
|   |-CallExpr 0x565522d98268 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565522d98250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d98200 <col:3> 'void ()' Function 0x565522d3dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565522d982c8 <line:704:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x565522d98288 <col:3> 'int' lvalue Var 0x565522d97738 'x' 'int'
|   | `-IntegerLiteral 0x565522d982a8 <col:7> 'int' 1
|   |-CallExpr 0x565522d98320 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565522d98308 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d982e8 <col:3> 'void ()' Function 0x565522d3e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565522d98378 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565522d98360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d98340 <col:3> 'void ()' Function 0x565522d3dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x565522d983d0 <line:707:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565522d983b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d98398 <col:3> 'void ()' Function 0x565522d3e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565522d98428 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565522d98410 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d983f0 <col:3> 'void ()' Function 0x565522d3dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565522d984f8 <line:709:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x565522d98448 <col:3> '_Bool' lvalue Var 0x565522d97fc8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x565522d984d8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x565522d984c0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x565522d98468 <col:19> '_Bool (void)' Function 0x565522d3d770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x565522d98590 <line:710:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x565522d98518 <col:3> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x565522d98570 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x565522d98558 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x565522d98538 <col:19> '_Bool (void)' Function 0x565522d3d770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x565522d98608 <line:711:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x565522d985b0 <col:3> '_Bool' lvalue Var 0x565522d978f0 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x565522d985f0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d985d0 <col:21> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x565522d98680 <line:712:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x565522d98628 <col:3> 'int' lvalue Var 0x565522d97970 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x565522d98668 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d98648 <col:15> 'int' lvalue Var 0x565522d97858 'y' 'int'
|   |-BinaryOperator 0x565522d98ab8 <line:713:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x565522d986a0 <col:3> 'int' lvalue Var 0x565522d97858 'y' 'int'
|   | `-ConditionalOperator 0x565522d98a88 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x565522d988b0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x565522d987d0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x565522d986f8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x565522d986e0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x565522d986c0 <col:8> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x565522d987b0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x565522d98748 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x565522d98730 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x565522d98710 <col:27> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x565522d98798 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x565522d98780 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x565522d98760 <col:46> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x565522d98890 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x565522d98828 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x565522d98810 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x565522d987f0 <col:65> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x565522d98878 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x565522d98860 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x565522d98840 <col:84> '_Bool' lvalue Var 0x565522d97bf0 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x565522d98a70 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565522d988d0 <col:101> 'int' lvalue Var 0x565522d97858 'y' 'int'
|   |   `-ParenExpr 0x565522d98a50 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x565522d98a20 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x565522d98990 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x565522d98948 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x565522d98930 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x565522d988f0 <col:106> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x565522d98978 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x565522d98960 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x565522d98910 <col:124> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x565522d989f0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x565522d989b0 <col:141> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x565522d98a08 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x565522d989d0 <col:153> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x565522d98fe0 <line:714:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x565522d98ad8 <col:3> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x565522d98fb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x565522d98f80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x565522d98f68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x565522d98b10 <col:15> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x565522d98f98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565522d98b30 <col:31> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x565522d98f48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x565522d98f18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x565522d98d40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x565522d98c60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x565522d98b88 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x565522d98b70 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x565522d98b50 <col:45> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x565522d98c40 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x565522d98bd8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x565522d98bc0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x565522d98ba0 <col:64> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x565522d98c28 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x565522d98c10 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x565522d98bf0 <col:83> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x565522d98d20 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x565522d98cb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x565522d98ca0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x565522d98c80 <col:102> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x565522d98d08 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x565522d98cf0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x565522d98cd0 <col:121> '_Bool' lvalue Var 0x565522d97bf0 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x565522d98f00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x565522d98d60 <col:138> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x565522d98ee0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x565522d98eb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x565522d98e20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x565522d98dd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x565522d98dc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x565522d98d80 <col:151> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x565522d98e08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x565522d98df0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x565522d98da0 <col:169> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x565522d98e80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x565522d98e40 <col:186> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x565522d98e98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x565522d98e60 <col:198> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x565522d994f0 <line:715:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x565522d99000 <col:3> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x565522d994c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x565522d99490 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x565522d99478 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x565522d99020 <col:15> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x565522d994a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565522d99040 <col:31> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x565522d99458 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x565522d99428 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x565522d99250 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x565522d99170 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x565522d99098 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x565522d99080 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x565522d99060 <col:45> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x565522d99150 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x565522d990e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x565522d990d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x565522d990b0 <col:64> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x565522d99138 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x565522d99120 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x565522d99100 <col:83> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x565522d99230 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x565522d991c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x565522d991b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x565522d99190 <col:102> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x565522d99218 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x565522d99200 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x565522d991e0 <col:121> '_Bool' lvalue Var 0x565522d97bf0 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x565522d99410 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x565522d99270 <col:138> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x565522d993f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x565522d993c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x565522d99330 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x565522d992e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x565522d992d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x565522d99290 <col:151> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x565522d99318 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x565522d99300 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x565522d992b0 <col:169> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x565522d99390 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x565522d99350 <col:186> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x565522d993a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x565522d99370 <col:198> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x565522d99a98 <line:716:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x565522d99510 <col:3> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x565522d99a80 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565522d99a50 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x565522d99a08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565522d999f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565522d99530 <col:20> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x565522d99a38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565522d99a20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565522d99550 <col:36> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x565522d999d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x565522d999a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x565522d99760 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x565522d99680 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x565522d995a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x565522d99590 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x565522d99570 <col:55> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x565522d99660 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x565522d995f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x565522d995e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x565522d995c0 <col:74> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x565522d99648 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x565522d99630 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x565522d99610 <col:93> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x565522d99740 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x565522d996d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x565522d996c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x565522d996a0 <col:112> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x565522d99728 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x565522d99710 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x565522d996f0 <col:131> '_Bool' lvalue Var 0x565522d97bf0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x565522d99988 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x565522d99970 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x565522d99780 <col:148> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x565522d99950 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x565522d99920 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x565522d99840 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x565522d997f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x565522d997e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x565522d997a0 <col:166> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x565522d99828 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x565522d99810 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x565522d997c0 <col:184> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x565522d998d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x565522d99890 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x565522d99860 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x565522d99908 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x565522d998f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x565522d998b8 <col:212> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x565522d9a088 <line:717:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x565522d99ab8 <col:3> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9a070 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565522d9a040 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x565522d99ff8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565522d99fe0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565522d99ad8 <col:20> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x565522d9a028 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565522d9a010 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565522d99b20 <col:36> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x565522d99fc0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x565522d99f90 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x565522d99d30 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x565522d99c50 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x565522d99b78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x565522d99b60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x565522d99b40 <col:55> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x565522d99c30 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x565522d99bc8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x565522d99bb0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x565522d99b90 <col:74> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x565522d99c18 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x565522d99c00 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x565522d99be0 <col:93> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x565522d99d10 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x565522d99ca8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x565522d99c90 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x565522d99c70 <col:112> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x565522d99cf8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x565522d99ce0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x565522d99cc0 <col:131> '_Bool' lvalue Var 0x565522d97bf0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x565522d99f78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x565522d99f60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x565522d99d50 <col:148> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x565522d99f40 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x565522d99f10 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x565522d99e10 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x565522d99dc8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x565522d99db0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x565522d99d70 <col:166> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x565522d99df8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x565522d99de0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x565522d99d90 <col:184> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x565522d99ee0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x565522d99e60 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x565522d99e30 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x565522d99ef8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x565522d99eb8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x565522d99e88 <col:219> 'int' 0
|   |-BinaryOperator 0x565522d9a630 <line:718:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9a0a8 <col:3> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9a618 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565522d9a5e8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x565522d9a5a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565522d9a588 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565522d9a0c8 <col:20> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x565522d9a5d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565522d9a5b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565522d9a0e8 <col:36> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x565522d9a568 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x565522d9a538 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x565522d9a2f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x565522d9a218 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x565522d9a140 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x565522d9a128 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x565522d9a108 <col:55> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x565522d9a1f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x565522d9a190 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x565522d9a178 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x565522d9a158 <col:74> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x565522d9a1e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x565522d9a1c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x565522d9a1a8 <col:93> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x565522d9a2d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x565522d9a270 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x565522d9a258 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x565522d9a238 <col:112> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x565522d9a2c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x565522d9a2a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x565522d9a288 <col:131> '_Bool' lvalue Var 0x565522d97bf0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x565522d9a520 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x565522d9a508 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x565522d9a318 <col:148> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x565522d9a4e8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x565522d9a4b8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x565522d9a3d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x565522d9a390 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x565522d9a378 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x565522d9a338 <col:166> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x565522d9a3c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x565522d9a3a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x565522d9a358 <col:184> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x565522d9a470 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x565522d9a428 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x565522d9a3f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x565522d9a4a0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x565522d9a488 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x565522d9a450 <col:212> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x565522d9ac28 <line:719:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9a650 <col:3> '_Bool' lvalue Var 0x565522d97bf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9ac10 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565522d9abe0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x565522d9ab98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565522d9ab80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565522d9a670 <col:20> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x565522d9abc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565522d9abb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565522d9a690 <col:36> '_Bool' lvalue Var 0x565522d97bf0 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x565522d9ab60 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x565522d9ab30 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x565522d9a8a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x565522d9a7c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x565522d9a6e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x565522d9a6d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x565522d9a6b0 <col:55> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x565522d9a7a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x565522d9a738 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x565522d9a720 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x565522d9a700 <col:74> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x565522d9a788 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x565522d9a770 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x565522d9a750 <col:93> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x565522d9a880 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x565522d9a818 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x565522d9a800 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x565522d9a7e0 <col:112> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x565522d9a868 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x565522d9a850 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x565522d9a830 <col:131> '_Bool' lvalue Var 0x565522d97bf0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x565522d9aae8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x565522d9aad0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x565522d9a8c0 <col:148> '_Bool' lvalue Var 0x565522d97bf0 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x565522d9aab0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x565522d9aa80 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x565522d9a980 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x565522d9a938 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x565522d9a920 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x565522d9a8e0 <col:166> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x565522d9a968 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x565522d9a950 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x565522d9a900 <col:184> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x565522d9aa50 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x565522d9a9d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x565522d9a9a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x565522d9aa68 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x565522d9aa28 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x565522d9a9f8 <col:219> 'int' 0
|   |-BinaryOperator 0x565522d9aca0 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x565522d9ac48 <col:3> 'int' lvalue Var 0x565522d972e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x565522d9ac88 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d9ac68 <col:25> 'int' lvalue Var 0x565522d97858 'y' 'int'
|   |-BinaryOperator 0x565522d9add0 <line:721:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x565522d9acc0 <col:3> 'int' lvalue Var 0x565522d97858 'y' 'int'
|   | `-ConditionalOperator 0x565522d9ada0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x565522d9ad58 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x565522d9ad40 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x565522d9ace0 <col:7> '_Bool' lvalue Var 0x565522d978f0 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x565522d9ad70 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565522d9ad00 <col:25> 'int' lvalue Var 0x565522d97970 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x565522d9ad88 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x565522d9ad20 <col:37> 'int' lvalue Var 0x565522d97858 'y' 'int'
|   |-BinaryOperator 0x565522d9ae68 <line:722:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9adf0 <col:3> '_Bool' lvalue Var 0x565522d978f0 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x565522d9ae40 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x565522d9ae10 <col:28> 'int' 0
|   |-CallExpr 0x565522d9aec0 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565522d9aea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9ae88 <col:3> 'void ()' Function 0x565522d3e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565522d9af18 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565522d9af00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9aee0 <col:3> 'void ()' Function 0x565522d3dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x565522d9af70 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565522d9af58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9af38 <col:3> 'void ()' Function 0x565522d3e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565522d9afc8 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565522d9afb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9af90 <col:3> 'void ()' Function 0x565522d3dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565522d9b080 <line:727:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x565522d9afe8 <col:3> 'int' lvalue Var 0x565522d971c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x565522d9b060 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x565522d9b048 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565522d9b008 <col:22> 'int' lvalue Var 0x565522d971c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x565522d9b028 <col:41> 'int' 1
|   |-CallExpr 0x565522d9b0d8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565522d9b0c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9b0a0 <col:3> 'void ()' Function 0x565522d3e060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x565522d9b188 <line:729:3, col:36>
|     `-CallExpr 0x565522d9b168 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x565522d9b150 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x565522d9b0f8 <col:10> 'void *(void)' Function 0x565522d3dab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x565522d9b330 prev 0x565522d96e48 <line:731:1, line:785:1> line:731:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x565522d9b298 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x565522d9fb80 <line:732:1, line:785:1>
|   |-CallExpr 0x565522d9b410 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565522d9b3f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9b3d8 <col:3> 'void ()' Function 0x565522d3dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565522d9b488 <line:734:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x565522d9b430 <col:3> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x565522d9b470 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d9b450 <col:15> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x565522d9b4e8 <line:735:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x565522d9b4a8 <col:3> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x565522d9b4c8 <col:15> 'int' 1
|   |-BinaryOperator 0x565522d9b560 <line:736:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9b508 <col:3> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9b548 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d9b528 <col:20> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x565522d9b5f8 <line:737:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9b580 <col:3> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x565522d9b5d0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x565522d9b5a0 <col:27> 'int' 1
|   |-CallExpr 0x565522d9b778 <line:738:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x565522d9b760 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x565522d9b618 <col:3> 'void (int)' Function 0x565522d3dd28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x565522d9b718 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x565522d9b6f8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x565522d9b6d8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x565522d9b690 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x565522d9b678 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x565522d9b638 <col:23> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x565522d9b6c0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x565522d9b6a8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x565522d9b658 <col:41> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x565522d9b7f8 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9b7a0 <col:3> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9b7e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d9b7c0 <col:20> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x565522d9b870 <line:740:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9b818 <col:3> '_Bool' lvalue Var 0x565522d97bf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9b858 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d9b838 <col:20> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x565522d9b8e8 <line:741:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9b890 <col:3> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9b8d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d9b8b0 <col:20> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x565522d9b980 <line:742:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9b908 <col:3> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x565522d9b958 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x565522d9b928 <col:27> 'int' 1
|   |-CallExpr 0x565522d9b9d8 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565522d9b9c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9b9a0 <col:3> 'void ()' Function 0x565522d3e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565522d9ba30 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565522d9ba18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9b9f8 <col:3> 'void ()' Function 0x565522d3dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565522d9baa8 <line:745:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x565522d9ba50 <col:3> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x565522d9ba90 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d9ba70 <col:15> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x565522d9bb08 <line:746:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x565522d9bac8 <col:3> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x565522d9bae8 <col:15> 'int' 2
|   |-BinaryOperator 0x565522d9bb98 <line:747:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9bb40 <col:3> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9bb80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d9bb60 <col:20> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x565522d9bc30 <line:748:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9bbb8 <col:3> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x565522d9bc08 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x565522d9bbd8 <col:27> 'int' 1
|   |-CallExpr 0x565522d9bd80 <line:749:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x565522d9bd68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x565522d9bc50 <col:3> 'void (int)' Function 0x565522d3dd28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x565522d9bd50 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x565522d9bd30 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x565522d9bd10 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x565522d9bcc8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x565522d9bcb0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x565522d9bc70 <col:23> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x565522d9bcf8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x565522d9bce0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x565522d9bc90 <col:41> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x565522d9be00 <line:750:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9bda8 <col:3> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9bde8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d9bdc8 <col:20> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x565522d9be78 <line:751:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9be20 <col:3> '_Bool' lvalue Var 0x565522d97bf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9be60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d9be40 <col:20> '_Bool' lvalue Var 0x565522d97a60 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x565522d9bef0 <line:752:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9be98 <col:3> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9bed8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d9beb8 <col:20> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x565522d9bf88 <line:753:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9bf10 <col:3> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x565522d9bf60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x565522d9bf30 <col:27> 'int' 1
|   |-CallExpr 0x565522d9bfe0 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565522d9bfc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9bfa8 <col:3> 'void ()' Function 0x565522d3e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565522d9c038 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565522d9c020 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9c000 <col:3> 'void ()' Function 0x565522d3dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565522d9c0d0 <line:756:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9c058 <col:3> '_Bool' lvalue Var 0x565522d97fc8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x565522d9c0b0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x565522d9c098 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x565522d9c078 <col:19> '_Bool (void)' Function 0x565522d3d770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x565522d9c168 <line:757:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9c0f0 <col:3> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x565522d9c148 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x565522d9c130 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x565522d9c110 <col:19> '_Bool (void)' Function 0x565522d3d770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x565522d9c1e0 <line:758:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9c188 <col:3> '_Bool' lvalue Var 0x565522d978f0 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9c1c8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d9c1a8 <col:21> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x565522d9c258 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x565522d9c200 <col:3> 'int' lvalue Var 0x565522d97970 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x565522d9c240 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d9c220 <col:15> 'int' lvalue Var 0x565522d97858 'y' 'int'
|   |-BinaryOperator 0x565522d9c690 <line:760:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x565522d9c278 <col:3> 'int' lvalue Var 0x565522d97858 'y' 'int'
|   | `-ConditionalOperator 0x565522d9c660 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x565522d9c488 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x565522d9c3a8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x565522d9c2d0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x565522d9c2b8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x565522d9c298 <col:8> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x565522d9c388 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x565522d9c320 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x565522d9c308 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x565522d9c2e8 <col:27> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x565522d9c370 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x565522d9c358 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x565522d9c338 <col:46> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x565522d9c468 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x565522d9c400 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x565522d9c3e8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x565522d9c3c8 <col:65> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x565522d9c450 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x565522d9c438 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x565522d9c418 <col:84> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x565522d9c648 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565522d9c4a8 <col:101> 'int' lvalue Var 0x565522d97858 'y' 'int'
|   |   `-ParenExpr 0x565522d9c628 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x565522d9c5f8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x565522d9c568 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x565522d9c520 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x565522d9c508 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x565522d9c4c8 <col:106> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x565522d9c550 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x565522d9c538 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x565522d9c4e8 <col:124> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x565522d9c5c8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x565522d9c588 <col:141> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x565522d9c5e0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x565522d9c5a8 <col:153> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x565522d9cbb0 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x565522d9c6b0 <col:3> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x565522d9cb80 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x565522d9cb50 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x565522d9cb28 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x565522d9c6d0 <col:15> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x565522d9cb68 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565522d9c6f0 <col:31> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x565522d9cb08 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x565522d9cad8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x565522d9c900 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x565522d9c820 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x565522d9c748 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x565522d9c730 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x565522d9c710 <col:45> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x565522d9c800 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x565522d9c798 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x565522d9c780 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x565522d9c760 <col:64> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x565522d9c7e8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x565522d9c7d0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x565522d9c7b0 <col:83> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x565522d9c8e0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x565522d9c878 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x565522d9c860 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x565522d9c840 <col:102> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x565522d9c8c8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x565522d9c8b0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x565522d9c890 <col:121> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x565522d9cac0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x565522d9c920 <col:138> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x565522d9caa0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x565522d9ca70 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x565522d9c9e0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x565522d9c998 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x565522d9c980 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x565522d9c940 <col:151> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x565522d9c9c8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x565522d9c9b0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x565522d9c960 <col:169> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x565522d9ca40 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x565522d9ca00 <col:186> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x565522d9ca58 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x565522d9ca20 <col:198> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x565522d9d0c0 <line:762:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x565522d9cbd0 <col:3> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x565522d9d090 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x565522d9d060 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x565522d9d048 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x565522d9cbf0 <col:15> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x565522d9d078 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565522d9cc10 <col:31> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x565522d9d028 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x565522d9cff8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x565522d9ce20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x565522d9cd40 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x565522d9cc68 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x565522d9cc50 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x565522d9cc30 <col:45> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x565522d9cd20 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x565522d9ccb8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x565522d9cca0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x565522d9cc80 <col:64> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x565522d9cd08 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x565522d9ccf0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x565522d9ccd0 <col:83> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x565522d9ce00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x565522d9cd98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x565522d9cd80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x565522d9cd60 <col:102> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x565522d9cde8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x565522d9cdd0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x565522d9cdb0 <col:121> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x565522d9cfe0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x565522d9ce40 <col:138> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x565522d9cfc0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x565522d9cf90 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x565522d9cf00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x565522d9ceb8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x565522d9cea0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x565522d9ce60 <col:151> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x565522d9cee8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x565522d9ced0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x565522d9ce80 <col:169> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x565522d9cf60 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x565522d9cf20 <col:186> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x565522d9cf78 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x565522d9cf40 <col:198> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x565522d9d668 <line:763:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9d0e0 <col:3> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9d650 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565522d9d620 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x565522d9d5d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565522d9d5c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565522d9d100 <col:20> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x565522d9d608 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565522d9d5f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565522d9d120 <col:36> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x565522d9d5a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x565522d9d570 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x565522d9d330 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x565522d9d250 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x565522d9d178 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x565522d9d160 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x565522d9d140 <col:55> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x565522d9d230 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x565522d9d1c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x565522d9d1b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x565522d9d190 <col:74> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x565522d9d218 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x565522d9d200 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x565522d9d1e0 <col:93> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x565522d9d310 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x565522d9d2a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x565522d9d290 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x565522d9d270 <col:112> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x565522d9d2f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x565522d9d2e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x565522d9d2c0 <col:131> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x565522d9d558 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x565522d9d540 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x565522d9d350 <col:148> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x565522d9d520 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x565522d9d4f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x565522d9d410 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x565522d9d3c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x565522d9d3b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x565522d9d370 <col:166> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x565522d9d3f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x565522d9d3e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x565522d9d390 <col:184> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x565522d9d4a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x565522d9d460 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x565522d9d430 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x565522d9d4d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x565522d9d4c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x565522d9d488 <col:212> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x565522d9dc58 <line:764:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9d688 <col:3> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9dc40 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565522d9dc10 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x565522d9dbc8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565522d9dbb0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565522d9d6a8 <col:20> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x565522d9dbf8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565522d9dbe0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565522d9d6c8 <col:36> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x565522d9db90 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x565522d9db60 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x565522d9d8d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x565522d9d7f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x565522d9d720 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x565522d9d708 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x565522d9d6e8 <col:55> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x565522d9d7d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x565522d9d770 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x565522d9d758 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x565522d9d738 <col:74> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x565522d9d7c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x565522d9d7a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x565522d9d788 <col:93> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x565522d9d8b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x565522d9d850 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x565522d9d838 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x565522d9d818 <col:112> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x565522d9d8a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x565522d9d888 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x565522d9d868 <col:131> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x565522d9db20 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x565522d9db08 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x565522d9d8f8 <col:148> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x565522d9dae8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x565522d9dab8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x565522d9d9b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x565522d9d970 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x565522d9d958 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x565522d9d918 <col:166> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x565522d9d9a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x565522d9d988 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x565522d9d938 <col:184> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x565522d9da88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x565522d9da08 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x565522d9d9d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x565522d9daa0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x565522d9da60 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x565522d9da30 <col:219> 'int' 0
|   |-BinaryOperator 0x565522d9e200 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9dc78 <col:3> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9e1e8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565522d9e1b8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x565522d9e170 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565522d9e158 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565522d9dc98 <col:20> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x565522d9e1a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565522d9e188 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565522d9dcb8 <col:36> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x565522d9e138 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x565522d9e108 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x565522d9dec8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x565522d9dde8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x565522d9dd10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x565522d9dcf8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x565522d9dcd8 <col:55> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x565522d9ddc8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x565522d9dd60 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x565522d9dd48 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x565522d9dd28 <col:74> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x565522d9ddb0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x565522d9dd98 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x565522d9dd78 <col:93> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x565522d9dea8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x565522d9de40 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x565522d9de28 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x565522d9de08 <col:112> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x565522d9de90 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x565522d9de78 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x565522d9de58 <col:131> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x565522d9e0f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x565522d9e0d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x565522d9dee8 <col:148> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x565522d9e0b8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x565522d9e088 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x565522d9dfa8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x565522d9df60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x565522d9df48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x565522d9df08 <col:166> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x565522d9df90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x565522d9df78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x565522d9df28 <col:184> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x565522d9e040 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x565522d9dff8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x565522d9dfc8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x565522d9e070 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x565522d9e058 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x565522d9e020 <col:212> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x565522d9e7c8 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9e220 <col:3> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9e7b0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565522d9e780 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x565522d9e738 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565522d9e720 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565522d9e240 <col:20> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x565522d9e768 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565522d9e750 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565522d9e260 <col:36> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x565522d9e700 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x565522d9e6d0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x565522d9e470 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x565522d9e390 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x565522d9e2b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x565522d9e2a0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x565522d9e280 <col:55> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x565522d9e370 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x565522d9e308 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x565522d9e2f0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x565522d9e2d0 <col:74> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x565522d9e358 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x565522d9e340 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x565522d9e320 <col:93> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x565522d9e450 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x565522d9e3e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x565522d9e3d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x565522d9e3b0 <col:112> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x565522d9e438 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x565522d9e420 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x565522d9e400 <col:131> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x565522d9e6b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x565522d9e6a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x565522d9e490 <col:148> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x565522d9e680 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x565522d9e650 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x565522d9e550 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x565522d9e508 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x565522d9e4f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x565522d9e4b0 <col:166> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x565522d9e538 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x565522d9e520 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x565522d9e4d0 <col:184> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x565522d9e620 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x565522d9e5a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x565522d9e570 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x565522d9e638 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x565522d9e5f8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x565522d9e5c8 <col:219> 'int' 0
|   |-BinaryOperator 0x565522d9e840 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x565522d9e7e8 <col:3> 'int' lvalue Var 0x565522d97408 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x565522d9e828 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d9e808 <col:25> 'int' lvalue Var 0x565522d97858 'y' 'int'
|   |-BinaryOperator 0x565522d9e970 <line:768:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x565522d9e860 <col:3> 'int' lvalue Var 0x565522d97858 'y' 'int'
|   | `-ConditionalOperator 0x565522d9e940 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x565522d9e8f8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x565522d9e8e0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x565522d9e880 <col:7> '_Bool' lvalue Var 0x565522d978f0 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x565522d9e910 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565522d9e8a0 <col:25> 'int' lvalue Var 0x565522d97970 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x565522d9e928 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x565522d9e8c0 <col:37> 'int' lvalue Var 0x565522d97858 'y' 'int'
|   |-BinaryOperator 0x565522d9ea08 <line:769:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9e990 <col:3> '_Bool' lvalue Var 0x565522d978f0 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x565522d9e9e0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x565522d9e9b0 <col:28> 'int' 0
|   |-CallExpr 0x565522d9ea60 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565522d9ea48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9ea28 <col:3> 'void ()' Function 0x565522d3e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565522d9eab8 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565522d9eaa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9ea80 <col:3> 'void ()' Function 0x565522d3dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565522d9eb30 <line:772:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x565522d9ead8 <col:3> 'int' lvalue Var 0x565522d97528 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x565522d9eb18 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x565522d9eaf8 <col:25> 'int' lvalue Var 0x565522d97738 'x' 'int'
|   |-CallExpr 0x565522d9eba8 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565522d9eb90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9eb70 <col:3> 'void ()' Function 0x565522d3e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565522d9ec00 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565522d9ebe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9ebc8 <col:3> 'void ()' Function 0x565522d3dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565522d9eee8 <line:775:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x565522d9ec20 <col:3> 'int' lvalue Var 0x565522d97858 'y' 'int'
|   | `-ConditionalOperator 0x565522d9eeb8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x565522d9ece0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x565522d9ec98 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x565522d9ec80 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x565522d9ec40 <col:7> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x565522d9ecc8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x565522d9ecb0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x565522d9ec60 <col:25> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x565522d9eea0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565522d9ed00 <col:42> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x565522d9ee80 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x565522d9ee50 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x565522d9edc0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x565522d9ed78 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x565522d9ed60 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x565522d9ed20 <col:55> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x565522d9eda8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x565522d9ed90 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x565522d9ed40 <col:73> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x565522d9ee20 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x565522d9ede0 <col:90> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x565522d9ee38 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x565522d9ee00 <col:102> 'int' lvalue Var 0x565522d97858 'y' 'int'
|   |-BinaryOperator 0x565522d9f0f0 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9ef08 <col:3> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9f0d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565522d9f0a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x565522d9efc8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x565522d9ef80 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x565522d9ef68 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x565522d9ef28 <col:20> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x565522d9efb0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x565522d9ef98 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x565522d9ef48 <col:38> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x565522d9f060 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x565522d9f018 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x565522d9efe8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x565522d9f090 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x565522d9f078 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x565522d9f040 <col:66> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x565522d9f3d8 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9f110 <col:3> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9f3c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565522d9f390 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x565522d9f2b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x565522d9f1d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x565522d9f188 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x565522d9f170 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x565522d9f130 <col:20> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x565522d9f1b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x565522d9f1a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x565522d9f150 <col:38> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x565522d9f290 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x565522d9f248 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x565522d9f230 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x565522d9f1f0 <col:56> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x565522d9f278 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x565522d9f260 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x565522d9f210 <col:74> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x565522d9f348 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x565522d9f300 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x565522d9f2d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x565522d9f378 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x565522d9f360 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x565522d9f328 <col:102> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x565522d9f5e0 <line:778:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9f3f8 <col:3> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9f5c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565522d9f598 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x565522d9f4b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x565522d9f470 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x565522d9f458 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x565522d9f418 <col:20> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x565522d9f4a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x565522d9f488 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x565522d9f438 <col:38> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x565522d9f550 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x565522d9f508 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x565522d9f4d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x565522d9f580 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x565522d9f568 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x565522d9f530 <col:66> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x565522d9f8c8 <line:779:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x565522d9f600 <col:3> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x565522d9f8b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565522d9f880 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x565522d9f7a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x565522d9f6c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x565522d9f678 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x565522d9f660 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x565522d9f620 <col:20> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x565522d9f6a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x565522d9f690 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x565522d9f640 <col:38> '_Bool' lvalue Var 0x565522d97b00 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x565522d9f780 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x565522d9f738 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x565522d9f720 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x565522d9f6e0 <col:56> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x565522d9f768 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x565522d9f750 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x565522d9f700 <col:74> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x565522d9f838 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x565522d9f7f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x565522d9f7c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x565522d9f868 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x565522d9f850 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x565522d9f818 <col:102> '_Bool' lvalue Var 0x565522d97c68 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x565522d9f920 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565522d9f908 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9f8e8 <col:3> 'void ()' Function 0x565522d3e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565522d9f978 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565522d9f960 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9f940 <col:3> 'void ()' Function 0x565522d3dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565522d9fa30 <line:782:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x565522d9f998 <col:3> 'int' lvalue Var 0x565522d971c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x565522d9fa10 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x565522d9f9f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565522d9f9b8 <col:22> 'int' lvalue Var 0x565522d971c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x565522d9f9d8 <col:41> 'int' 1
|   |-CallExpr 0x565522d9fa88 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565522d9fa70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565522d9fa50 <col:3> 'void ()' Function 0x565522d3e060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x565522d9fb00 <line:784:3, col:36>
|     `-CallExpr 0x565522d9fae0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x565522d9fac8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x565522d9faa8 <col:10> 'void *(void)' Function 0x565522d3dab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x565522d9fd50 prev 0x565522d96f10 <line:786:1, line:788:1> line:786:6 fence 'void ()'
| `-CompoundStmt 0x565522d9fdf0 <line:787:1, line:788:1>
|-FunctionDecl 0x565522d9fe20 prev 0x565522d96fd0 <line:789:1, line:791:1> line:789:6 isync 'void ()'
| `-CompoundStmt 0x565522d9fec0 <line:790:1, line:791:1>
|-FunctionDecl 0x565522d9fef0 prev 0x565522d97090 <line:792:1, line:794:1> line:792:6 lwfence 'void ()'
| `-CompoundStmt 0x565522d9ff90 <line:793:1, line:794:1>
`-FunctionDecl 0x565522d9fff8 <line:795:1, line:830:1> line:795:5 main 'int ()'
  `-CompoundStmt 0x565522da43b0 <line:796:1, line:830:1>
    |-DeclStmt 0x565522da0110 <line:797:3, col:18>
    | `-VarDecl 0x565522da00a8 <col:3, col:13> col:13 used t1669 'pthread_t':'unsigned long'
    |-CallExpr 0x565522da0318 <line:798:3, col:54> 'int'
    | |-ImplicitCastExpr 0x565522da0300 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x565522da0128 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x565522d7e5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x565522da0168 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x565522da0148 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x565522da00a8 't1669' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x565522da0358 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x565522da01e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x565522da01b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x565522da0180 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x565522da0370 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x565522da0200 <col:39> 'void *(void *)' Function 0x565522d98158 'P0' 'void *(void *)'
    | `-ParenExpr 0x565522da0280 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x565522da0258 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x565522da0220 <col:52> 'int' 0
    |-DeclStmt 0x565522da0400 <line:799:3, col:18>
    | `-VarDecl 0x565522da0398 <col:3, col:13> col:13 used t1670 'pthread_t':'unsigned long'
    |-CallExpr 0x565522da05a8 <line:800:3, col:54> 'int'
    | |-ImplicitCastExpr 0x565522da0590 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x565522da0418 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x565522d7e5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x565522da0458 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x565522da0438 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x565522da0398 't1670' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x565522da05e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x565522da04d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x565522da04a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x565522da0470 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x565522da0600 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x565522da04f0 <col:39> 'void *(void *)' Function 0x565522d9b330 'P1' 'void *(void *)'
    | `-ParenExpr 0x565522da0570 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x565522da0548 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x565522da0510 <col:52> 'int' 0
    |-CallExpr 0x565522da0650 <line:801:3, col:27> 'void'
    | `-ImplicitCastExpr 0x565522da0638 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x565522da0618 <col:3> 'void ()' Function 0x565522d3dfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x565522da0720 <line:802:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x565522da0670 <col:3> '_Bool' lvalue Var 0x565522d975c0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x565522da0708 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x565522da06e8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x565522da06d0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x565522da0690 <col:21> 'int' lvalue Var 0x565522d971c8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x565522da06b0 <col:41> 'int' 2
    |-CallExpr 0x565522da0778 <line:803:3, col:25> 'void'
    | `-ImplicitCastExpr 0x565522da0760 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x565522da0740 <col:3> 'void ()' Function 0x565522d3e060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x565522da07f0 <line:804:3, col:36> 'void'
    | |-ImplicitCastExpr 0x565522da07d8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x565522da0798 <col:3> 'void (int)' Function 0x565522d3d940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x565522da0830 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x565522da0818 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x565522da07b8 <col:21> '_Bool' lvalue Var 0x565522d975c0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x565522da0880 <line:805:3, col:27> 'void'
    | `-ImplicitCastExpr 0x565522da0868 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x565522da0848 <col:3> 'void ()' Function 0x565522d3dfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x565522da0b90 <line:806:3, col:103> 'int' '='
    | |-DeclRefExpr 0x565522da08a0 <col:3> 'int' lvalue Var 0x565522d97858 'y' 'int'
    | `-ConditionalOperator 0x565522da0b38 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x565522da0960 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x565522da0918 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x565522da0900 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x565522da08c0 <col:7> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x565522da0948 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x565522da0930 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x565522da08e0 <col:25> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x565522da0b20 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x565522da0980 <col:42> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x565522da0b00 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x565522da0ad0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x565522da0a40 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x565522da09f8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x565522da09e0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x565522da09a0 <col:55> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x565522da0a28 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x565522da0a10 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x565522da09c0 <col:73> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x565522da0aa0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x565522da0a60 <col:90> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x565522da0ab8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x565522da0a80 <col:102> 'int' lvalue Var 0x565522d97858 'y' 'int'
    |-BinaryOperator 0x565522da0d98 <line:807:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x565522da0bb0 <col:3> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x565522da0d80 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x565522da0d50 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x565522da0c70 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x565522da0c28 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x565522da0c10 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x565522da0bd0 <col:20> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x565522da0c58 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x565522da0c40 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x565522da0bf0 <col:38> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x565522da0d08 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x565522da0cc0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x565522da0c90 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x565522da0d38 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x565522da0d20 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x565522da0ce8 <col:66> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x565522da1080 <line:808:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x565522da0db8 <col:3> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x565522da1068 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x565522da1038 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x565522da0f58 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x565522da0e78 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x565522da0e30 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x565522da0e18 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x565522da0dd8 <col:20> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x565522da0e60 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x565522da0e48 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x565522da0df8 <col:38> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x565522da0f38 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x565522da0ef0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x565522da0ed8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x565522da0e98 <col:56> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x565522da0f20 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x565522da0f08 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x565522da0eb8 <col:74> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x565522da0ff0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x565522da0fa8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x565522da0f78 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x565522da1020 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x565522da1008 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x565522da0fd0 <col:102> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x565522da1288 <line:809:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x565522da10a0 <col:3> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x565522da1270 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x565522da1240 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x565522da1160 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x565522da1118 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x565522da1100 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x565522da10c0 <col:20> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x565522da1148 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x565522da1130 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x565522da10e0 <col:38> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x565522da11f8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x565522da11b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x565522da1180 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x565522da1228 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x565522da1210 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x565522da11d8 <col:66> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x565522da1570 <line:810:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x565522da12a8 <col:3> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x565522da1558 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x565522da1528 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x565522da1448 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x565522da1368 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x565522da1320 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x565522da1308 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x565522da12c8 <col:20> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x565522da1350 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x565522da1338 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x565522da12e8 <col:38> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x565522da1428 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x565522da13e0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x565522da13c8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x565522da1388 <col:56> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x565522da1410 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x565522da13f8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x565522da13a8 <col:74> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x565522da14e0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x565522da1498 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x565522da1468 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x565522da1510 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x565522da14f8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x565522da14c0 <col:102> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x565522da15c8 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x565522da15b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x565522da1590 <col:3> 'void ()' Function 0x565522d3e060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x565522da1620 <line:812:3, col:27> 'void'
    | `-ImplicitCastExpr 0x565522da1608 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x565522da15e8 <col:3> 'void ()' Function 0x565522d3dfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x565522da16b8 <line:813:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x565522da1640 <col:3> '_Bool' lvalue Var 0x565522d97fc8 'weak$$choice0' '_Bool'
    | `-CallExpr 0x565522da1698 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x565522da1680 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x565522da1660 <col:19> '_Bool (void)' Function 0x565522d3d770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x565522da1750 <line:814:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x565522da16d8 <col:3> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
    | `-CallExpr 0x565522da1730 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x565522da1718 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x565522da16f8 <col:19> '_Bool (void)' Function 0x565522d3d770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x565522da17c8 <line:815:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x565522da1770 <col:3> '_Bool' lvalue Var 0x565522d978f0 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x565522da17b0 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x565522da1790 <col:21> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x565522da1840 <line:816:3, col:15> 'int' '='
    | |-DeclRefExpr 0x565522da17e8 <col:3> 'int' lvalue Var 0x565522d97970 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x565522da1828 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x565522da1808 <col:15> 'int' lvalue Var 0x565522d97858 'y' 'int'
    |-BinaryOperator 0x565522da1c88 <line:817:3, col:162> 'int' '='
    | |-DeclRefExpr 0x565522da1860 <col:3> 'int' lvalue Var 0x565522d97858 'y' 'int'
    | `-ConditionalOperator 0x565522da1c58 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x565522da1a70 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x565522da1990 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x565522da18b8 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x565522da18a0 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x565522da1880 <col:8> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x565522da1970 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x565522da1908 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x565522da18f0 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x565522da18d0 <col:27> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x565522da1958 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x565522da1940 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x565522da1920 <col:46> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x565522da1a50 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x565522da19e8 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x565522da19d0 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x565522da19b0 <col:65> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x565522da1a38 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x565522da1a20 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x565522da1a00 <col:84> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x565522da1c40 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x565522da1a90 <col:101> 'int' lvalue Var 0x565522d97858 'y' 'int'
    |   `-ParenExpr 0x565522da1c20 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x565522da1bf0 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x565522da1b50 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x565522da1b08 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x565522da1af0 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x565522da1ab0 <col:106> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x565522da1b38 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x565522da1b20 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x565522da1ad0 <col:124> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x565522da1bc0 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x565522da1b70 <col:141> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x565522da1bd8 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x565522da1ba0 <col:153> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
    |-BinaryOperator 0x565522da2198 <line:818:3, col:208> 'int' '='
    | |-DeclRefExpr 0x565522da1ca8 <col:3> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x565522da2168 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x565522da2138 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x565522da2120 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x565522da1cc8 <col:15> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x565522da2150 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x565522da1ce8 <col:31> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x565522da2100 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x565522da20d0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x565522da1ef8 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x565522da1e18 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x565522da1d40 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x565522da1d28 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x565522da1d08 <col:45> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x565522da1df8 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x565522da1d90 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x565522da1d78 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x565522da1d58 <col:64> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x565522da1de0 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x565522da1dc8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x565522da1da8 <col:83> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x565522da1ed8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x565522da1e70 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x565522da1e58 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x565522da1e38 <col:102> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x565522da1ec0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x565522da1ea8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x565522da1e88 <col:121> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x565522da20b8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x565522da1f18 <col:138> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
    |       `-ParenExpr 0x565522da2098 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x565522da2068 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x565522da1fd8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x565522da1f90 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x565522da1f78 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x565522da1f38 <col:151> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x565522da1fc0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x565522da1fa8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x565522da1f58 <col:169> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x565522da2038 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x565522da1ff8 <col:186> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x565522da2050 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x565522da2018 <col:198> 'int' lvalue Var 0x565522d97de0 'y$w_buff0' 'int'
    |-BinaryOperator 0x565522da26a8 <line:819:3, col:208> 'int' '='
    | |-DeclRefExpr 0x565522da21b8 <col:3> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x565522da2678 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x565522da2648 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x565522da2630 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x565522da21d8 <col:15> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x565522da2660 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x565522da21f8 <col:31> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
    |   `-ParenExpr 0x565522da2610 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x565522da25e0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x565522da2408 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x565522da2328 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x565522da2250 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x565522da2238 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x565522da2218 <col:45> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x565522da2308 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x565522da22a0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x565522da2288 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x565522da2268 <col:64> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x565522da22f0 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x565522da22d8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x565522da22b8 <col:83> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x565522da23e8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x565522da2380 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x565522da2368 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x565522da2348 <col:102> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x565522da23d0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x565522da23b8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x565522da2398 <col:121> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x565522da25c8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x565522da2428 <col:138> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
    |       `-ParenExpr 0x565522da25a8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x565522da2578 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x565522da24e8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x565522da24a0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x565522da2488 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x565522da2448 <col:151> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x565522da24d0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x565522da24b8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x565522da2468 <col:169> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x565522da2548 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x565522da2508 <col:186> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x565522da2560 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x565522da2528 <col:198> 'int' lvalue Var 0x565522d97ed8 'y$w_buff1' 'int'
    |-BinaryOperator 0x565522da2c78 <line:820:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x565522da26c8 <col:3> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x565522da2c60 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x565522da2c30 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x565522da2be8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x565522da2bd0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x565522da26e8 <col:20> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x565522da2c18 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x565522da2c00 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x565522da2708 <col:36> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x565522da2bb0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x565522da2b58 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x565522da2918 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x565522da2838 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x565522da2760 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x565522da2748 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x565522da2728 <col:55> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x565522da2818 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x565522da27b0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x565522da2798 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x565522da2778 <col:74> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x565522da2800 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x565522da27e8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x565522da27c8 <col:93> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x565522da28f8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x565522da2890 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x565522da2878 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x565522da2858 <col:112> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x565522da28e0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x565522da28c8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x565522da28a8 <col:131> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x565522da2b40 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x565522da2b28 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x565522da2938 <col:148> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x565522da2b08 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x565522da2ad8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x565522da29f8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x565522da29b0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x565522da2998 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x565522da2958 <col:166> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x565522da29e0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x565522da29c8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x565522da2978 <col:184> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x565522da2a90 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x565522da2a48 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x565522da2a18 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x565522da2ac0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x565522da2aa8 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x565522da2a70 <col:212> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x565522da3240 <line:821:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x565522da2c98 <col:3> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x565522da3228 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x565522da31f8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x565522da31b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x565522da3198 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x565522da2cb8 <col:20> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x565522da31e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x565522da31c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x565522da2cd8 <col:36> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x565522da3178 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x565522da3148 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x565522da2ee8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x565522da2e08 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x565522da2d30 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x565522da2d18 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x565522da2cf8 <col:55> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x565522da2de8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x565522da2d80 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x565522da2d68 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x565522da2d48 <col:74> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x565522da2dd0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x565522da2db8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x565522da2d98 <col:93> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x565522da2ec8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x565522da2e60 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x565522da2e48 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x565522da2e28 <col:112> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x565522da2eb0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x565522da2e98 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x565522da2e78 <col:131> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x565522da3130 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x565522da3118 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x565522da2f08 <col:148> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x565522da30f8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x565522da30c8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x565522da2fc8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x565522da2f80 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x565522da2f68 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x565522da2f28 <col:166> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x565522da2fb0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x565522da2f98 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x565522da2f48 <col:184> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x565522da3098 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x565522da3018 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x565522da2fe8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x565522da30b0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x565522da3070 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x565522da3040 <col:219> 'int' 0
    |-BinaryOperator 0x565522da37e8 <line:822:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x565522da3260 <col:3> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x565522da37d0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x565522da37a0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x565522da3758 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x565522da3740 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x565522da3280 <col:20> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x565522da3788 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x565522da3770 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x565522da32a0 <col:36> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x565522da3720 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x565522da36f0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x565522da34b0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x565522da33d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x565522da32f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x565522da32e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x565522da32c0 <col:55> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x565522da33b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x565522da3348 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x565522da3330 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x565522da3310 <col:74> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x565522da3398 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x565522da3380 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x565522da3360 <col:93> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x565522da3490 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x565522da3428 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x565522da3410 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x565522da33f0 <col:112> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x565522da3478 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x565522da3460 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x565522da3440 <col:131> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x565522da36d8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x565522da36c0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x565522da34d0 <col:148> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x565522da36a0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x565522da3670 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x565522da3590 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x565522da3548 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x565522da3530 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x565522da34f0 <col:166> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x565522da3578 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x565522da3560 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x565522da3510 <col:184> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x565522da3628 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x565522da35e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x565522da35b0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x565522da3658 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x565522da3640 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x565522da3608 <col:212> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x565522da3dc0 <line:823:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x565522da3808 <col:3> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x565522da3da8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x565522da3d78 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x565522da3d30 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x565522da3d18 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x565522da3828 <col:20> '_Bool' lvalue Var 0x565522d98040 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x565522da3d60 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x565522da3d48 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x565522da3848 <col:36> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x565522da3cf8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x565522da3cc8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x565522da3a58 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x565522da3978 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x565522da38a0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x565522da3888 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x565522da3868 <col:55> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x565522da3958 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x565522da38f0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x565522da38d8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x565522da38b8 <col:74> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x565522da3940 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x565522da3928 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x565522da3908 <col:93> '_Bool' lvalue Var 0x565522d97f50 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x565522da3a38 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x565522da39d0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x565522da39b8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x565522da3998 <col:112> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x565522da3a20 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x565522da3a08 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x565522da39e8 <col:131> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x565522da3cb0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x565522da3c98 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x565522da3a78 <col:148> '_Bool' lvalue Var 0x565522d97b78 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x565522da3c78 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x565522da3c48 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x565522da3b38 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x565522da3af0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x565522da3ad8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x565522da3a98 <col:166> '_Bool' lvalue Var 0x565522d97e58 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x565522da3b20 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x565522da3b08 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x565522da3ab8 <col:184> '_Bool' lvalue Var 0x565522d979e8 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x565522da3c18 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x565522da3b88 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x565522da3b58 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x565522da3c30 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x565522da3bf0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x565522da3bc0 <col:219> 'int' 0
    |-BinaryOperator 0x565522da4090 <line:824:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x565522da3de0 <col:3> '_Bool' lvalue Var 0x565522d97638 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x565522da4078 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x565522da4060 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x565522da4040 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x565522da4020 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x565522da3f88 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x565522da3ef0 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x565522da3e58 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x565522da3e40 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x565522da3e00 <col:23> 'int' lvalue Var 0x565522d97858 'y' 'int'
    |         | | | `-IntegerLiteral 0x565522da3e20 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x565522da3ed0 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x565522da3eb8 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x565522da3e78 <col:33> 'int' lvalue Var 0x565522d972e8 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x565522da3e98 <col:56> 'int' 0
    |         | `-BinaryOperator 0x565522da3f68 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x565522da3f50 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x565522da3f10 <col:61> 'int' lvalue Var 0x565522d97408 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x565522da3f30 <col:84> 'int' 2
    |         `-BinaryOperator 0x565522da4000 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x565522da3fe8 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x565522da3fa8 <col:89> 'int' lvalue Var 0x565522d97528 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x565522da3fc8 <col:112> 'int' 0
    |-BinaryOperator 0x565522da41c0 <line:825:3, col:37> 'int' '='
    | |-DeclRefExpr 0x565522da40b0 <col:3> 'int' lvalue Var 0x565522d97858 'y' 'int'
    | `-ConditionalOperator 0x565522da4190 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x565522da4148 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x565522da4130 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x565522da40d0 <col:7> '_Bool' lvalue Var 0x565522d978f0 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x565522da4160 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x565522da40f0 <col:25> 'int' lvalue Var 0x565522d97970 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x565522da4178 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x565522da4110 <col:37> 'int' lvalue Var 0x565522d97858 'y' 'int'
    |-BinaryOperator 0x565522da4258 <line:826:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x565522da41e0 <col:3> '_Bool' lvalue Var 0x565522d978f0 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x565522da4230 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x565522da4200 <col:28> 'int' 0
    |-CallExpr 0x565522da42b0 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x565522da4298 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x565522da4278 <col:3> 'void ()' Function 0x565522d3e060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x565522da4328 <line:828:3, col:36> 'void'
    | |-ImplicitCastExpr 0x565522da4310 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x565522da42d0 <col:3> 'void (int)' Function 0x565522d3dd28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x565522da4368 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x565522da4350 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x565522da42f0 <col:21> '_Bool' lvalue Var 0x565522d97638 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x565522da43a0 <line:829:3, col:10>
      `-IntegerLiteral 0x565522da4380 <col:10> 'int' 0
