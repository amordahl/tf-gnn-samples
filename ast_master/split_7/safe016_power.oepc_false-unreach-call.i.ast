TranslationUnitDecl 0x55a1d7215e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55a1d72166d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55a1d72163b0 '__int128'
|-TypedefDecl 0x55a1d7216748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55a1d72163d0 'unsigned __int128'
|-TypedefDecl 0x55a1d7216a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55a1d7216820 'struct __NSConstantString_tag'
|   `-Record 0x55a1d72167a0 '__NSConstantString_tag'
|-TypedefDecl 0x55a1d7216af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55a1d7216ab0 'char *'
|   `-BuiltinType 0x55a1d7215eb0 'char'
|-TypedefDecl 0x55a1d7255650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55a1d7216d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55a1d7216bd0 'struct __va_list_tag'
|     `-Record 0x55a1d7216b50 '__va_list_tag'
|-FunctionDecl 0x55a1d7255770 <./split_7/safe016_power.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55a1d7255940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55a1d7255870 <col:31> col:34 'int'
|-FunctionDecl 0x55a1d7255ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55a1d7255be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55a1d7255d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55a1d7255c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55a1d7255f58 <col:40, col:99>
|   |-IfStmt 0x55a1d7255f28 <col:42, col:88>
|   | |-UnaryOperator 0x55a1d7255e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55a1d7255df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55a1d7255dd0 <col:47> 'int' lvalue ParmVar 0x55a1d7255c98 'expression' 'int'
|   | `-CompoundStmt 0x55a1d7255f10 <col:59, col:88>
|   |   `-LabelStmt 0x55a1d7255ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55a1d7255e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55a1d7255e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55a1d7255e20 <col:68> 'void () __attribute__((noreturn))' Function 0x55a1d7255be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55a1d7255f40 <col:89>
|   `-ReturnStmt 0x55a1d7255f48 <col:91>
|-FunctionDecl 0x55a1d7255fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55a1d7256060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55a1d72563e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a1d7256118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55a1d7256198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55a1d7256218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55a1d7256298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55a1d72564a0 <line:11:22>
|-FunctionDecl 0x55a1d727c520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a1d7256510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55a1d7256590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55a1d727c350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55a1d727c3d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55a1d727c5e0 <line:14:22>
|-FunctionDecl 0x55a1d727c890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a1d727c650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55a1d727c6d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55a1d727c750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55a1d727c948 <line:16:22>
|-TypedefDecl 0x55a1d727c9b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55a1d7215f70 'unsigned char'
|-TypedefDecl 0x55a1d727ca28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55a1d7215f90 'unsigned short'
|-TypedefDecl 0x55a1d727ca98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55a1d7215fb0 'unsigned int'
|-TypedefDecl 0x55a1d727cb08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-TypedefDecl 0x55a1d727cb78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55a1d7215ed0 'signed char'
|-TypedefDecl 0x55a1d727cbe8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55a1d7215f70 'unsigned char'
|-TypedefDecl 0x55a1d727cc58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55a1d7215ef0 'short'
|-TypedefDecl 0x55a1d727ccc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55a1d7215f90 'unsigned short'
|-TypedefDecl 0x55a1d727cd38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55a1d7215f10 'int'
|-TypedefDecl 0x55a1d727cda8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55a1d7215fb0 'unsigned int'
|-TypedefDecl 0x55a1d727ce18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d727ce88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-TypedefDecl 0x55a1d727cef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d727cf68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-TypedefDecl 0x55a1d727cfd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-TypedefDecl 0x55a1d727d048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55a1d7215fb0 'unsigned int'
|-TypedefDecl 0x55a1d727d0b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55a1d7215fb0 'unsigned int'
|-TypedefDecl 0x55a1d727d128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-TypedefDecl 0x55a1d727d198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-TypedefDecl 0x55a1d727d208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55a1d7215fb0 'unsigned int'
|-TypedefDecl 0x55a1d727d278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-TypedefDecl 0x55a1d727d2e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d727d378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d727d3e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55a1d7215f10 'int'
|-RecordDecl 0x55a1d727d440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55a1d727d588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55a1d727d640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55a1d727d5e0 'struct __fsid_t' sugar
|   `-RecordType 0x55a1d727d4c0 '__fsid_t'
|     `-Record 0x55a1d727d440 ''
|-TypedefDecl 0x55a1d727d6c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d727d738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-TypedefDecl 0x55a1d727d7a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-TypedefDecl 0x55a1d727d818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55a1d7215fb0 'unsigned int'
|-TypedefDecl 0x55a1d727d888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d727d8f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55a1d7215fb0 'unsigned int'
|-TypedefDecl 0x55a1d727d968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d727d9d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55a1d7215f10 'int'
|-TypedefDecl 0x55a1d727da48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55a1d7215f10 'int'
|-TypedefDecl 0x55a1d727dab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55a1d7215f10 'int'
|-TypedefDecl 0x55a1d727db28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55a1d7216630 'void *'
|   `-BuiltinType 0x55a1d7215e70 'void'
|-TypedefDecl 0x55a1d727db98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d727dc08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d727dc78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d727dce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-TypedefDecl 0x55a1d727dd58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-TypedefDecl 0x55a1d727ddc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-TypedefDecl 0x55a1d727de38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-TypedefDecl 0x55a1d727dea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d727df18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d727df88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d727dff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-TypedefDecl 0x55a1d727e088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55a1d727e050 '__off64_t' sugar
|   |-Typedef 0x55a1d727d378 '__off64_t'
|   `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d727e180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55a1d727e140 '__quad_t *'
|   `-TypedefType 0x55a1d727e0e0 '__quad_t' sugar
|     |-Typedef 0x55a1d727cef8 '__quad_t'
|     `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d727e1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55a1d7216ab0 'char *'
|   `-BuiltinType 0x55a1d7215eb0 'char'
|-TypedefDecl 0x55a1d727e260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d727e2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55a1d7215fb0 'unsigned int'
|-FunctionDecl 0x55a1d727f458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55a1d727f380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55a1d727f768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55a1d727f758 <line:73:3, col:34>
|     `-CallExpr 0x55a1d727f718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55a1d727f700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55a1d727f690 <col:10> '<builtin fn type>' Function 0x55a1d727f500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55a1d727f740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55a1d727f6b0 <col:29> 'unsigned int' lvalue ParmVar 0x55a1d727f380 '__bsx' 'unsigned int'
|-FunctionDecl 0x55a1d727f500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55a1d727f5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55a1d727f610 <col:10> Implicit
| `-ConstAttr 0x55a1d727f668 <col:10> Implicit
|-FunctionDecl 0x55a1d727f8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55a1d727f7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55a1d727fbd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55a1d727fbc8 <line:78:3, col:34>
|     `-CallExpr 0x55a1d727fb88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55a1d727fb70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55a1d727faf8 <col:10> '<builtin fn type>' Function 0x55a1d727f968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55a1d727fbb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55a1d727fb18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55a1d727f7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55a1d727f968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55a1d727fa08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55a1d727fa78 <col:10> Implicit
| `-ConstAttr 0x55a1d727fad0 <col:10> Implicit
|-TypedefDecl 0x55a1d727fc08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-TypedefDecl 0x55a1d727fc98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55a1d727fc60 '__time_t' sugar
|   |-Typedef 0x55a1d727d888 '__time_t'
|   `-BuiltinType 0x55a1d7215f30 'long'
|-RecordDecl 0x55a1d727fcf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55a1d727fda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55a1d727fe38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55a1d727fec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55a1d727fe90 '__pid_t' sugar
|   |-Typedef 0x55a1d727d3e8 '__pid_t'
|   `-BuiltinType 0x55a1d7215f10 'int'
|-RecordDecl 0x55a1d727ff20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55a1d727ffe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55a1d7280030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55a1d72800f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55a1d7280158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-RecordDecl 0x55a1d72801b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55a1d7281480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55a1d7281530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55a1d72814d0 'struct cpu_set_t' sugar
|   `-RecordType 0x55a1d7280230 'cpu_set_t'
|     `-Record 0x55a1d72801b0 ''
|-FunctionDecl 0x55a1d7281808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55a1d72815d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a1d72816e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55a1d72818b8 <line:108:19>
|-FunctionDecl 0x55a1d7281a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55a1d7281920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55a1d7281b38 <col:69>
|-FunctionDecl 0x55a1d7281cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55a1d7281ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55a1d7281d58 <col:64>
|-FunctionDecl 0x55a1d7282018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a1d7281dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a1d7281ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55a1d72820c8 <line:114:22>
|-FunctionDecl 0x55a1d72823b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55a1d7282130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a1d7282228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55a1d7282460 <col:88>
|-FunctionDecl 0x55a1d7282718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a1d72824c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a1d7282548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55a1d72825d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55a1d72827d0 <col:62>
|-FunctionDecl 0x55a1d7282948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55a1d7282838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55a1d72829f0 <col:63>
|-FunctionDecl 0x55a1d7282b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55a1d7282bb8 <col:47>
|-FunctionDecl 0x55a1d7282cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55a1d7282c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55a1d7282d68 <col:69>
|-FunctionDecl 0x55a1d7282e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55a1d7282dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55a1d7282f18 <col:69>
|-FunctionDecl 0x55a1d72831d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a1d7282f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a1d72830b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55a1d7283288 <col:88>
|-TypedefDecl 0x55a1d7283318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55a1d72832e0 '__clock_t' sugar
|   |-Typedef 0x55a1d727d6c8 '__clock_t'
|   `-BuiltinType 0x55a1d7215f30 'long'
|-TypedefDecl 0x55a1d72833c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55a1d7283370 '__clockid_t' sugar
|   |-Typedef 0x55a1d727dab8 '__clockid_t'
|   `-BuiltinType 0x55a1d7215f10 'int'
|-TypedefDecl 0x55a1d7283458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55a1d7283420 '__timer_t' sugar
|   |-Typedef 0x55a1d727db28 '__timer_t'
|   `-PointerType 0x55a1d7216630 'void *'
|     `-BuiltinType 0x55a1d7215e70 'void'
|-RecordDecl 0x55a1d72834b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55a1d7283570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55a1d72835d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55a1d7283640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55a1d72836a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55a1d7283710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55a1d7283778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55a1d72837e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55a1d7283848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55a1d72838b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55a1d7283918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55a1d7283980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55a1d72839d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55a1d7283a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55a1d7283b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55a1d7283bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55a1d7283d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55a1d7283e20 <col:45>
|-FunctionDecl 0x55a1d7284000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55a1d7283ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55a1d72840a8 <col:54>
|-FunctionDecl 0x55a1d72842a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55a1d7284110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55a1d7284188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55a1d7284358 <line:158:22>
| `-ConstAttr 0x55a1d7284ff0 <col:63>
|-FunctionDecl 0x55a1d72851f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a1d72850e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55a1d7285298 <col:56>
|-FunctionDecl 0x55a1d7285640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55a1d7285308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55a1d7285380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a1d7285400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55a1d72854f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55a1d7285700 <col:54>
|-RecordDecl 0x55a1d7285758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55a1d7285808 parent 0x55a1d7215e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55a1d7285a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55a1d7285b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55a1d7285b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55a1d7285bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55a1d7285cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55a1d7285de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55a1d7285d90 'struct __locale_struct *'
|   `-ElaboratedType 0x55a1d7285d20 'struct __locale_struct' sugar
|     `-RecordType 0x55a1d72857e0 'struct __locale_struct'
|       `-Record 0x55a1d7285758 '__locale_struct'
|-TypedefDecl 0x55a1d7285e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55a1d7285e60 '__locale_t' sugar
|   |-Typedef 0x55a1d7285de8 '__locale_t'
|   `-PointerType 0x55a1d7285d90 'struct __locale_struct *'
|     `-ElaboratedType 0x55a1d7285d20 'struct __locale_struct' sugar
|       `-RecordType 0x55a1d72857e0 'struct __locale_struct'
|         `-Record 0x55a1d7285758 '__locale_struct'
|-FunctionDecl 0x55a1d72872a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55a1d7285f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55a1d7285f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a1d7287028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55a1d72870b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55a1d7287130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55a1d7287368 <col:40>
|-FunctionDecl 0x55a1d7287558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55a1d7287430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55a1d7287600 <col:66>
|-FunctionDecl 0x55a1d7287710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55a1d7287668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55a1d72877b8 <col:69>
|-FunctionDecl 0x55a1d72879e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55a1d7287820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a1d72878b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55a1d7287a98 <col:52>
|-FunctionDecl 0x55a1d7287c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55a1d7287b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a1d7287b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55a1d7287cf0 <col:55>
|-FunctionDecl 0x55a1d7287e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55a1d7287d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55a1d7287f30 <col:62>
|-FunctionDecl 0x55a1d7288168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55a1d7287f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55a1d7288210 <col:60>
|-FunctionDecl 0x55a1d7288438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55a1d7288290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55a1d7288310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55a1d72884e8 <col:44>
|-FunctionDecl 0x55a1d72886f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55a1d7288550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a1d72885d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55a1d72887a8 <col:49>
|-VarDecl 0x55a1d72888a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55a1d7288928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55a1d72889a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55a1d7288a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55a1d7288ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55a1d7288c40 <col:42>
|-VarDecl 0x55a1d7288cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55a1d7288d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55a1d7288eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55a1d7288da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55a1d7288f60 <col:57>
|-FunctionDecl 0x55a1d72890d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a1d7288fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55a1d7289178 <col:56>
|-FunctionDecl 0x55a1d7289288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a1d72891f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55a1d7289330 <col:59>
|-FunctionDecl 0x55a1d7289438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55a1d72893a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55a1d72894e0 <col:48>
| `-ConstAttr 0x55a1d7289538 <col:89>
|-FunctionDecl 0x55a1d7289798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55a1d72895e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55a1d7289678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55a1d72899f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a1d7289888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a1d7289918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55a1d7289aa8 <col:88>
|-FunctionDecl 0x55a1d7289c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a1d7289b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a1d7289ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55a1d7289cf0 <col:88>
|-FunctionDecl 0x55a1d7289f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55a1d7289d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a1d7289de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55a1d7289fb8 <line:209:22>
|-FunctionDecl 0x55a1d728a358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55a1d728a020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a1d728a0e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55a1d728a170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55a1d728a200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55a1d728a658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55a1d728a458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55a1d728a530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55a1d728a708 <col:85>
|-FunctionDecl 0x55a1d728aaf8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55a1d728a770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a1d728a8a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55a1d728a9b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55a1d728abb0 <col:52>
|-FunctionDecl 0x55a1d728ad28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55a1d728ac18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55a1d728add0 <col:61>
|-FunctionDecl 0x55a1d728b248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55a1d728ae38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55a1d728aeb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55a1d728afe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55a1d728b0f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55a1d728b308 <col:62>
|-FunctionDecl 0x55a1d728b528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55a1d728b370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55a1d728b400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55a1d728b5d8 <line:222:22>
|-FunctionDecl 0x55a1d728b6d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55a1d728b640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55a1d728b780 <col:65>
|-TypedefDecl 0x55a1d728b7f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55a1d7215fd0 'unsigned long'
|-RecordDecl 0x55a1d728b848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55a1d728b990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55a1d728b9f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a1d728baa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55a1d728ba50 'union pthread_attr_t' sugar
|   `-RecordType 0x55a1d728b8d0 'union pthread_attr_t'
|     `-Record 0x55a1d728b848 'pthread_attr_t'
|-RecordDecl 0x55a1d728bb00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55a1d728bc78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55a1d728bcf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55a1d728bda0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55a1d728bd40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55a1d728bb80 'struct __pthread_internal_list'
|     `-Record 0x55a1d728bb00 '__pthread_internal_list'
|-RecordDecl 0x55a1d728be10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55a1d728beb8 parent 0x55a1d7215e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55a1d728bf90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a1d728bff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55a1d728c060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55a1d7290110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55a1d7290178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55a1d72901e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55a1d7290268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55a1d7290320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55a1d7290410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55a1d7290478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a1d7290600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55a1d72905a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55a1d728be90 'pthread_mutex_t'
|     `-Record 0x55a1d728be10 ''
|-RecordDecl 0x55a1d7290670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55a1d72907b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a1d7290818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a1d72908d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55a1d7290870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55a1d72906f0 'pthread_mutexattr_t'
|     `-Record 0x55a1d7290670 ''
|-RecordDecl 0x55a1d7290940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55a1d72909e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55a1d7290ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a1d7290b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55a1d7290b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55a1d7290be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55a1d7290c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55a1d7290cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55a1d7290d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55a1d7290d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55a1d7290e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_7/safe016_power.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_7/safe016_power.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55a1d7290f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55a1d7290f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55a1d7292130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55a1d7291070 'union pthread_cond_t' sugar
|   `-RecordType 0x55a1d72909c0 'pthread_cond_t'
|     `-Record 0x55a1d7290940 ''
|-RecordDecl 0x55a1d72921a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55a1d72922a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a1d7292308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a1d72923c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55a1d7292360 'union pthread_condattr_t' sugar
|   `-RecordType 0x55a1d7292220 'pthread_condattr_t'
|     `-Record 0x55a1d72921a0 ''
|-TypedefDecl 0x55a1d7292448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55a1d7215fb0 'unsigned int'
|-TypedefDecl 0x55a1d72924b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55a1d7215f10 'int'
|-RecordDecl 0x55a1d7292510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55a1d72925b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55a1d7292680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a1d72926e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55a1d7292750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55a1d72927b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55a1d7292820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55a1d7292888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55a1d72928f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55a1d7292958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55a1d72929c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55a1d7292a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55a1d7292a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55a1d7292b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_7/safe016_power.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_7/safe016_power.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55a1d7292be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55a1d7292c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a1d7292da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55a1d7292d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55a1d7292590 'pthread_rwlock_t'
|     `-Record 0x55a1d7292510 ''
|-RecordDecl 0x55a1d7292e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55a1d7292f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55a1d7292fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a1d7293070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55a1d7293010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55a1d7292e90 'pthread_rwlockattr_t'
|     `-Record 0x55a1d7292e10 ''
|-TypedefDecl 0x55a1d7294140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55a1d7215f14 'volatile int' volatile
|   `-BuiltinType 0x55a1d7215f10 'int'
|-RecordDecl 0x55a1d7294198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55a1d72942e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55a1d7294348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a1d7294400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55a1d72943a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55a1d7294220 'pthread_barrier_t'
|     `-Record 0x55a1d7294198 ''
|-RecordDecl 0x55a1d7294470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55a1d7294570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a1d72945d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a1d7294690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55a1d7294630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55a1d72944f0 'pthread_barrierattr_t'
|     `-Record 0x55a1d7294470 ''
|-TypedefDecl 0x55a1d72947a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55a1d7294740 'long [8]' 8 
|   `-BuiltinType 0x55a1d7215f30 'long'
|-EnumDecl 0x55a1d7294800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55a1d72948c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55a1d7294918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55a1d7294968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55a1d7294a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55a1d7294a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55a1d7294ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55a1d7294b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55a1d7294bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55a1d7294b98 <col:26> 'int'
| |   `-DeclRefExpr 0x55a1d7294b78 <col:26> 'int' EnumConstant 0x55a1d7294a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55a1d7294c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55a1d7294c20 <col:29> 'int'
| |   `-DeclRefExpr 0x55a1d7294c00 <col:29> 'int' EnumConstant 0x55a1d7294a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55a1d7294cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55a1d7294ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x55a1d7294c88 <col:30> 'int' EnumConstant 0x55a1d7294ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55a1d7294d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55a1d7294d30 <col:27> 'int'
|     `-DeclRefExpr 0x55a1d7294d10 <col:27> 'int' EnumConstant 0x55a1d7294bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55a1d7294d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55a1d7294e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55a1d7294ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55a1d7294ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x55a1d7294eb8 <col:30> 'int' EnumConstant 0x55a1d7294e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55a1d7294f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55a1d7294fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55a1d7294fb0 <col:29> 'int'
|     `-DeclRefExpr 0x55a1d7294f90 <col:29> 'int' EnumConstant 0x55a1d7294f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55a1d7295018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55a1d72950e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55a1d7295150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55a1d72951a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55a1d72951f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55a1d72952b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55a1d7295308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55a1d7295358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55a1d72953e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55a1d72953c8 <col:31> 'int'
|     `-DeclRefExpr 0x55a1d72953a8 <col:31> 'int' EnumConstant 0x55a1d72952b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55a1d7295430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55a1d72954f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55a1d7295548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55a1d7295598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55a1d7295668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55a1d72956b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55a1d7295708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55a1d72957d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55a1d7295828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55a1d7295878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55a1d7295ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55a1d7295b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55a1d7295b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55a1d7295ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55a1d7295cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55a1d7295dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55a1d7295e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55a1d7295e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55a1d7295f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55a1d7295f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55a1d72965b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55a1d7296080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55a1d72961a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a1d72963a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55a1d7296420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55a1d7296678 <col:47>
| |-NonNullAttr 0x55a1d72966d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55a1d7296708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55a1d7296830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55a1d7296760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55a1d7296a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55a1d72968e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55a1d7296968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55a1d7296c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55a1d7296b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55a1d7296d00 <col:60>
|-FunctionDecl 0x55a1d7296e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55a1d7296ef0 <col:54>
| `-ConstAttr 0x55a1d7296f48 <col:95>
|-FunctionDecl 0x55a1d7298990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55a1d7296f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a1d7296ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55a1d7298a40 <line:395:19>
| `-ConstAttr 0x55a1d7298a98 <col:60>
|-FunctionDecl 0x55a1d7298c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55a1d7298b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55a1d7298d10 <col:71>
| `-NonNullAttr 0x55a1d7298d68 <col:112, col:126> 1
|-FunctionDecl 0x55a1d7298e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55a1d7298db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55a1d7298f18 <line:398:22>
| `-NonNullAttr 0x55a1d7298f70 <col:63, col:77> 1
|-FunctionDecl 0x55a1d7299198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55a1d7298fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55a1d7299038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55a1d7299248 <line:401:22>
| `-NonNullAttr 0x55a1d72992a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d72994a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a1d72992e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a1d7299368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55a1d7299558 <line:404:22>
| `-NonNullAttr 0x55a1d72995b0 <col:63, col:77> 1
|-FunctionDecl 0x55a1d7299808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55a1d72995f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55a1d72996a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55a1d72998b8 <line:407:22>
| `-NonNullAttr 0x55a1d7299910 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d729ab68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55a1d729a9b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a1d729aa28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a1d729ac18 <line:410:22>
| `-NonNullAttr 0x55a1d729ac70 <col:63, col:77> 1
|-FunctionDecl 0x55a1d729aea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a1d729acb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a1d729ad48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55a1d729af58 <line:413:22>
| `-NonNullAttr 0x55a1d729afb0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d729b1e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a1d729aff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a1d729b088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55a1d729b298 <col:37>
| `-NonNullAttr 0x55a1d729b2f0 <col:78, col:95> 1 2
|-FunctionDecl 0x55a1d729b4d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a1d729b338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a1d729b3b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55a1d729b588 <line:419:22>
| `-NonNullAttr 0x55a1d729b5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d729b768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a1d729b628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a1d729b6a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55a1d729b818 <line:421:22>
| `-NonNullAttr 0x55a1d729b870 <col:63, col:77> 1
|-FunctionDecl 0x55a1d729ba38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a1d729b8b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a1d729b938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55a1d729bae8 <line:424:22>
| `-NonNullAttr 0x55a1d729bb40 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d729bcc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a1d729bb88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a1d729bc08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55a1d729bd78 <line:427:22>
| `-NonNullAttr 0x55a1d729bdd0 <col:63, col:77> 1
|-FunctionDecl 0x55a1d729bf78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a1d729be18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a1d729be98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55a1d729c028 <line:430:22>
| `-NonNullAttr 0x55a1d729c080 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d729c208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a1d729c0c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a1d729c148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55a1d729c2b8 <line:432:22>
| `-NonNullAttr 0x55a1d729c310 <col:63, col:77> 1
|-FunctionDecl 0x55a1d729c538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55a1d729c358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a1d729c3d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55a1d729c5e8 <line:435:22>
| |-NonNullAttr 0x55a1d729c640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55a1d729c678 <col:100> "" ""
|-FunctionDecl 0x55a1d729c888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55a1d729c6c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a1d729c748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55a1d729c938 <line:438:22>
| |-NonNullAttr 0x55a1d729c990 <col:63, col:77> 1
| `-DeprecatedAttr 0x55a1d729c9d8 <col:97> "" ""
|-FunctionDecl 0x55a1d729cbc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55a1d729ca28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a1d729caa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55a1d729cc78 <line:441:22>
| `-NonNullAttr 0x55a1d729ccd0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d729ce50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55a1d729cd18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a1d729cd90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a1d729cf00 <line:444:22>
| `-NonNullAttr 0x55a1d729cf58 <col:63, col:77> 1
|-FunctionDecl 0x55a1d729d248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55a1d729cfa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a1d729d028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55a1d729d0a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55a1d729d300 <line:448:22>
| `-NonNullAttr 0x55a1d729d358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55a1d729d608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55a1d729d3b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a1d729d430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55a1d729d4a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a1d729d6c0 <col:43>
| `-NonNullAttr 0x55a1d729d718 <col:84, col:98> 1
|-FunctionDecl 0x55a1d729da20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a1d729d768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a1d729d7e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55a1d729d878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55a1d729dad8 <line:453:22>
| `-NonNullAttr 0x55a1d729db30 <col:63, col:77> 3
|-FunctionDecl 0x55a1d729de08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a1d729db78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a1d729dbf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55a1d729dc88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55a1d729dec0 <line:457:22>
| `-NonNullAttr 0x55a1d729df18 <col:63, col:80> 2 3
|-FunctionDecl 0x55a1d729e108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55a1d729df68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a1d729dfe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55a1d729e1b8 <line:459:22>
|-FunctionDecl 0x55a1d729e588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55a1d729e280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55a1d729e420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55a1d729e638 <col:52, col:69> 1 2
|-FunctionDecl 0x55a1d729e7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55a1d729e6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55a1d729e740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55a1d729e9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55a1d729e8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55a1d729e928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55a1d729eb48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55a1d729eab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55a1d729ec88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55a1d729ed28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55a1d729edd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55a1d729eec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55a1d729ef30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55a1d729f100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_7/safe016_power.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55a1d729f1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55a1d729f2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55a1d729f250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55a1d729edb0 '__pthread_unwind_buf_t'
| |   `-Record 0x55a1d729ed28 ''
| `-AlignedAttr 0x55a1d729f308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55a1d729f380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55a1d729f4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55a1d729f548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55a1d729f5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55a1d729f618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55a1d729f820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55a1d729f710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55a1d729fa00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55a1d729f8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55a1d729fbc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a1d729fab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55a1d729fc68 <line:488:22>
|-RecordDecl 0x55a1d729fcc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55a1d729ffd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55a1d729fe38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55a1d729feb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55a1d72a0088 <col:86>
| `-ReturnsTwiceAttr 0x55a1d72a00e0 <col:12> Implicit
|-FunctionDecl 0x55a1d72a0408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a1d72a01b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55a1d72a02c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a1d72a04b8 <line:494:22>
| `-NonNullAttr 0x55a1d72a0510 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a0688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a1d72a0558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a1d72a0730 <line:496:22>
| `-NonNullAttr 0x55a1d72a0788 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a0890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a1d72a07d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a1d72a0938 <line:498:22>
| `-NonNullAttr 0x55a1d72a0990 <col:52, col:66> 1
|-FunctionDecl 0x55a1d72a1ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a1d72a1a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a1d72a1b80 <line:500:22>
| `-NonNullAttr 0x55a1d72a1bd8 <col:52, col:66> 1
|-FunctionDecl 0x55a1d72a1e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a1d72a1c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a1d72a1cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a1d72a1ec8 <col:36>
| `-NonNullAttr 0x55a1d72a1f20 <col:66, col:83> 1 2
|-FunctionDecl 0x55a1d72a2020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a1d72a1f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a1d72a20c8 <line:505:22>
| `-NonNullAttr 0x55a1d72a2120 <col:52, col:66> 1
|-FunctionDecl 0x55a1d72a23b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a1d72a21d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a1d72a2250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55a1d72a2468 <line:509:22>
| `-NonNullAttr 0x55a1d72a24c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d72a2788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55a1d72a2508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a1d72a2588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55a1d72a2608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55a1d72a2840 <line:513:22>
| `-NonNullAttr 0x55a1d72a2898 <col:63, col:80> 1 3
|-FunctionDecl 0x55a1d72a2a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a1d72a28e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a1d72a2ad8 <line:515:22>
| `-NonNullAttr 0x55a1d72a2b30 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a2d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a1d72a2be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a1d72a2dc0 <line:517:22>
| `-NonNullAttr 0x55a1d72a2e18 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a2f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a1d72a2e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a1d72a2fc8 <line:519:22>
| `-NonNullAttr 0x55a1d72a3020 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a3248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a1d72a3068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a1d72a30e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a1d72a32f8 <line:523:22>
| `-NonNullAttr 0x55a1d72a3350 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d72a3558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a1d72a3398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a1d72a3418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55a1d72a3608 <line:526:22>
| `-NonNullAttr 0x55a1d72a3660 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a3808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a1d72a36a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a1d72a3728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55a1d72a38b8 <line:529:22>
| `-NonNullAttr 0x55a1d72a3910 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d72a3b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a1d72a3958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a1d72a3a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55a1d72a3bb0 <line:531:22>
| `-NonNullAttr 0x55a1d72a3c08 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a3db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a1d72a3c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a1d72a3cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55a1d72a3e68 <line:535:22>
| `-NonNullAttr 0x55a1d72a3ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d72a4048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a1d72a3f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a1d72a3f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55a1d72a40f8 <line:538:22>
| `-NonNullAttr 0x55a1d72a4150 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a42f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a1d72a4198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a1d72a4218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55a1d72a43a8 <line:542:22>
| `-NonNullAttr 0x55a1d72a4400 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d72a4588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a1d72a4448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a1d72a44c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55a1d72a4638 <line:545:22>
| `-NonNullAttr 0x55a1d72a4690 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a4878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55a1d72a46d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a1d72a4758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55a1d72a4928 <line:548:22>
| `-NonNullAttr 0x55a1d72a4980 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d72a5b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a1d72a49c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a1d72a5a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55a1d72a5be8 <line:551:22>
| `-NonNullAttr 0x55a1d72a5c40 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a5f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55a1d72a5d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a1d72a5e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55a1d72a6028 <col:29>
| `-NonNullAttr 0x55a1d72a6080 <col:70, col:84> 1
|-FunctionDecl 0x55a1d72a61f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a1d72a60c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a1d72a62a0 <line:556:22>
| `-NonNullAttr 0x55a1d72a62f8 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a6400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a1d72a6348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a1d72a64a8 <line:558:22>
| `-NonNullAttr 0x55a1d72a6500 <col:52, col:66> 1
|-FunctionDecl 0x55a1d72a6600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a1d72a6548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a1d72a66a8 <line:560:19>
| `-NonNullAttr 0x55a1d72a6700 <col:49, col:63> 1
|-FunctionDecl 0x55a1d72a6938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a1d72a6748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a1d72a67d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a1d72a69e8 <col:39>
| `-NonNullAttr 0x55a1d72a6a70 <col:69, col:86> 1 2
|-FunctionDecl 0x55a1d72a6b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a1d72a6ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a1d72a6c18 <line:565:22>
| `-NonNullAttr 0x55a1d72a6c70 <col:52, col:66> 1
|-FunctionDecl 0x55a1d72a6d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a1d72a6cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a1d72a6e18 <line:567:22>
| `-NonNullAttr 0x55a1d72a6e70 <col:52, col:66> 1
|-FunctionDecl 0x55a1d72a7028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a1d72a6eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a1d72a6f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a1d72a70d8 <col:39>
| `-NonNullAttr 0x55a1d72a7130 <col:69, col:86> 1 2
|-FunctionDecl 0x55a1d72a7230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a1d72a7178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a1d72a72d8 <line:572:22>
| `-NonNullAttr 0x55a1d72a7330 <col:52, col:66> 1
|-FunctionDecl 0x55a1d72a7518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55a1d72a73e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55a1d72a75c0 <line:574:22>
| `-NonNullAttr 0x55a1d72a7618 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a7720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55a1d72a7668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55a1d72a77c8 <line:576:22>
| `-NonNullAttr 0x55a1d72a7820 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a7a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a1d72a7868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55a1d72a78e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a1d72a7b30 <line:580:22>
| `-NonNullAttr 0x55a1d72a7b88 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d72a7d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55a1d72a7bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55a1d72a7c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55a1d72a7e48 <line:583:22>
| `-NonNullAttr 0x55a1d72a7ea0 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a8048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a1d72a7ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55a1d72a7f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55a1d72a80f8 <line:587:22>
| `-NonNullAttr 0x55a1d72a8150 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d72a82d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55a1d72a8198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55a1d72a8218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55a1d72a8388 <col:36>
| `-NonNullAttr 0x55a1d72a83e0 <col:77, col:91> 1
|-FunctionDecl 0x55a1d72a8718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55a1d72a84c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a1d72a85d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55a1d72a87c8 <line:592:22>
| `-NonNullAttr 0x55a1d72a8820 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a8998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a1d72a8868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a1d72a8a40 <line:594:22>
| `-NonNullAttr 0x55a1d72a8ac0 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a8bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a1d72a8b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a1d72a8c68 <line:596:22>
| `-NonNullAttr 0x55a1d72a8cc0 <col:52, col:66> 1
|-FunctionDecl 0x55a1d72a8dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a1d72a8d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a1d72a8e68 <line:598:22>
| `-NonNullAttr 0x55a1d72a8ec0 <col:52, col:66> 1
|-FunctionDecl 0x55a1d72a90e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55a1d72a8f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a1d72a8f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55a1d72a9198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55a1d72a94c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a1d72a9218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a1d72a9290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a1d72a9320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55a1d72a9580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55a1d72a9798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55a1d72a9660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55a1d72a9840 <line:607:22>
| `-NonNullAttr 0x55a1d72a9898 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a99a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55a1d72a98e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55a1d72a9a48 <line:609:22>
| `-NonNullAttr 0x55a1d72a9ad0 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72a9cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a1d72a9b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55a1d72a9b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a1d72a9da8 <line:613:22>
| `-NonNullAttr 0x55a1d72a9e00 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d72aa008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55a1d72a9e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55a1d72a9ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55a1d72aa0b8 <col:37>
| `-NonNullAttr 0x55a1d72aa110 <col:78, col:92> 1
|-FunctionDecl 0x55a1d72aa328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55a1d72aa158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55a1d72aa200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55a1d72aa3d8 <line:619:22>
| `-NonNullAttr 0x55a1d72aa430 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d72aa5f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55a1d72aa478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55a1d72aa4f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55a1d72aa6a8 <line:622:22>
| `-NonNullAttr 0x55a1d72aa700 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72aa9a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55a1d72aa7e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55a1d72aa860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55a1d72aaa58 <line:624:22>
| `-NonNullAttr 0x55a1d72aaae0 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72aac58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a1d72aab28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a1d72aad00 <line:626:22>
| `-NonNullAttr 0x55a1d72aad58 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72aae60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a1d72aada8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a1d72aaf08 <line:628:22>
| `-NonNullAttr 0x55a1d72aaf60 <col:52, col:66> 1
|-FunctionDecl 0x55a1d72ab060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a1d72aafa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a1d72ab108 <line:630:22>
| `-NonNullAttr 0x55a1d72ab160 <col:52, col:66> 1
|-FunctionDecl 0x55a1d72ab260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a1d72ab1a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a1d72ab308 <line:632:22>
| `-NonNullAttr 0x55a1d72ab360 <col:52, col:66> 1
|-FunctionDecl 0x55a1d72ab738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55a1d72ab440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55a1d72ab550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55a1d72ab5d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55a1d72ab7f0 <line:636:22>
| `-NonNullAttr 0x55a1d72ab848 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72ab9c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55a1d72ab898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55a1d72aba70 <line:638:22>
| `-NonNullAttr 0x55a1d72acb00 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72acc00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55a1d72acb48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55a1d72acca8 <line:640:22>
| `-NonNullAttr 0x55a1d72acd00 <col:52, col:66> 1
|-FunctionDecl 0x55a1d72acee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55a1d72acdb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55a1d72acf90 <line:642:22>
| `-NonNullAttr 0x55a1d72acfe8 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72ad0f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55a1d72ad038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55a1d72ad198 <line:644:22>
| `-NonNullAttr 0x55a1d72ad1f0 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72ad418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a1d72ad238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55a1d72ad2b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a1d72ad4c8 <line:648:22>
| `-NonNullAttr 0x55a1d72ad520 <col:63, col:80> 1 2
|-FunctionDecl 0x55a1d72ad728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55a1d72ad568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55a1d72ad5e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55a1d72ad7d8 <line:651:22>
| `-NonNullAttr 0x55a1d72ad830 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72adb98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55a1d72ad910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55a1d72ada30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55a1d72adc48 <line:654:22>
| `-NonNullAttr 0x55a1d72adca0 <col:63, col:77> 1
|-FunctionDecl 0x55a1d72addf8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55a1d72adce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55a1d72adea0 <col:69>
|-FunctionDecl 0x55a1d72ae018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55a1d72adf08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55a1d72ae0c0 <col:72>
|-FunctionDecl 0x55a1d72ae2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55a1d72ae128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55a1d72ae1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55a1d72ae3a8 <col:44>
|-FunctionDecl 0x55a1d72ae5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55a1d72ae410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a1d72ae488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55a1d72ae678 <line:661:22>
| `-NonNullAttr 0x55a1d72ae6d0 <col:63, col:77> 2
|-FunctionDecl 0x55a1d72aeb30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55a1d72ae7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55a1d72ae8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55a1d72ae9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55a1d72aebe8 <col:47>
|-FunctionDecl 0x55a1d72aecf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55a1d72aec58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a1d72aee48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55a1d72aedb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a1d72aefa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55a1d72aef08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a1d72af0f8 <line:669:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55a1d72af060 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a1d72af1c0 <line:670:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55a1d72af280 <line:671:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55a1d72af340 <line:672:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55a1d72af3f8 <line:673:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55a1d72af478 prev 0x55a1d72af3f8 <line:674:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55a1d72af4e0 <col:24> 'int' 0
|-VarDecl 0x55a1d72af518 <line:675:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55a1d72af598 prev 0x55a1d72af518 <line:676:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55a1d72af600 <col:27> 'int' 0
|-VarDecl 0x55a1d72af630 <line:677:1, col:7> col:7 __unbuffered_p0_EAX$flush_delayed '_Bool'
|-VarDecl 0x55a1d72af6b0 <line:678:1, col:5> col:5 __unbuffered_p0_EAX$mem_tmp 'int'
|-VarDecl 0x55a1d72af728 <line:679:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55a1d72af7a0 <line:680:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55a1d72af818 <line:681:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55a1d72af890 <line:682:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55a1d72af908 <line:683:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd4 '_Bool'
|-VarDecl 0x55a1d72af980 <line:684:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55a1d72af9f8 <line:685:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55a1d72afa70 <line:686:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55a1d72afb00 <line:687:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55a1d72afb78 <line:688:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd4 '_Bool'
|-VarDecl 0x55a1d72afbf0 <line:689:1, col:7> col:7 used __unbuffered_p0_EAX$read_delayed '_Bool'
|-VarDecl 0x55a1d72afc70 <line:690:1, col:6> col:6 used __unbuffered_p0_EAX$read_delayed_var 'int *'
|-VarDecl 0x55a1d72afcf0 <line:691:1, col:5> col:5 __unbuffered_p0_EAX$w_buff0 'int'
|-VarDecl 0x55a1d72afd68 <line:692:1, col:7> col:7 __unbuffered_p0_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55a1d72afde8 <line:693:1, col:5> col:5 __unbuffered_p0_EAX$w_buff1 'int'
|-VarDecl 0x55a1d72afe60 <line:694:1, col:7> col:7 __unbuffered_p0_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55a1d72afee0 <line:695:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55a1d72aff60 prev 0x55a1d72afee0 <line:696:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55a1d72affc8 <col:27> 'int' 0
|-VarDecl 0x55a1d72afff8 <line:697:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55a1d72b0070 <line:698:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55a1d72b00f0 <line:699:1, col:5> col:5 used x 'int'
|-VarDecl 0x55a1d72b0170 prev 0x55a1d72b00f0 <line:700:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55a1d72b01d8 <col:9> 'int' 0
|-VarDecl 0x55a1d72b0210 <line:701:1, col:5> col:5 used y 'int'
|-VarDecl 0x55a1d72b0290 prev 0x55a1d72b0210 <line:702:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55a1d72b02f8 <col:9> 'int' 0
|-VarDecl 0x55a1d72b0328 <line:703:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55a1d72b03a8 <line:704:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55a1d72b0420 <line:705:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55a1d72b0498 <line:706:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55a1d72b0510 <line:707:1, col:7> col:7 y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55a1d72b0588 <line:708:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x55a1d72b0600 <line:709:1, col:7> col:7 used y$r_buff0_thd4 '_Bool'
|-VarDecl 0x55a1d72b0678 <line:710:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55a1d72b06f0 <line:711:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55a1d72b0768 <line:712:1, col:7> col:7 y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55a1d72b07e0 <line:713:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x55a1d72b0858 <line:714:1, col:7> col:7 used y$r_buff1_thd4 '_Bool'
|-VarDecl 0x55a1d72b08d0 <line:715:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55a1d72b0950 <line:716:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55a1d72b09d0 <line:717:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55a1d72b0a48 <line:718:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55a1d72b1b20 <line:719:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55a1d72b1b98 <line:720:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55a1d72b1c10 <line:721:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55a1d72b1c88 <line:722:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55a1d72b1d00 <line:723:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55a1d72b1e18 prev 0x55a1d72aecf0 <line:724:1, line:754:1> line:724:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55a1d72b1d80 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a1d72b6728 <line:725:1, line:754:1>
|   |-CallExpr 0x55a1d72b1f28 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b1f10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b1ec0 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a1d72b1ff8 <line:727:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b1f48 <col:3> '_Bool' lvalue Var 0x55a1d72b1c10 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55a1d72b1fd8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55a1d72b1fc0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55a1d72b1f68 <col:19> '_Bool (void)' Function 0x55a1d7255770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55a1d72b2090 <line:728:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b2018 <col:3> '_Bool' lvalue Var 0x55a1d72b1d00 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55a1d72b2070 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55a1d72b2058 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55a1d72b2038 <col:19> '_Bool (void)' Function 0x55a1d7255770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55a1d72b2108 <line:729:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b20b0 <col:3> '_Bool' lvalue Var 0x55a1d72b0328 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55a1d72b20f0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a1d72b20d0 <col:21> '_Bool' lvalue Var 0x55a1d72b1d00 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55a1d72b2180 <line:730:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b2128 <col:3> 'int' lvalue Var 0x55a1d72b03a8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55a1d72b2168 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a1d72b2148 <col:15> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
|   |-BinaryOperator 0x55a1d72b2218 <line:731:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b21a0 <col:3> '_Bool' lvalue Var 0x55a1d72b1c88 'weak$$choice1' '_Bool'
|   | `-CallExpr 0x55a1d72b21f8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55a1d72b21e0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55a1d72b21c0 <col:19> '_Bool (void)' Function 0x55a1d7255770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55a1d72b2c50 <line:732:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b2238 <col:3> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
|   | `-ConditionalOperator 0x55a1d72b2c20 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x55a1d72b2290 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x55a1d72b2278 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a1d72b2258 <col:8> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x55a1d72b2c08 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a1d72b22a8 <col:25> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
|   |   `-ParenExpr 0x55a1d72b2be8 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x55a1d72b2bb8 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x55a1d72b2368 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a1d72b2320 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a1d72b2308 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a1d72b22c8 <col:30> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a1d72b2350 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a1d72b2338 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a1d72b22e8 <col:48> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55a1d72b2ba0 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a1d72b2388 <col:65> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55a1d72b2b80 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x55a1d72b2b50 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x55a1d72b2528 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x55a1d72b24b8 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x55a1d72b2448 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x55a1d72b2430 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x55a1d72b2418 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x55a1d72b23a8 <col:78> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x55a1d72b2400 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x55a1d72b23e8 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x55a1d72b23c8 <col:97> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |           | | `-ImplicitCastExpr 0x55a1d72b24a0 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x55a1d72b2488 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x55a1d72b2468 <col:115> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x55a1d72b2510 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x55a1d72b24f8 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55a1d72b24d8 <col:134> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |           |-ParenExpr 0x55a1d72b2710 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x55a1d72b26e0 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x55a1d72b26b0 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x55a1d72b2698 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x55a1d72b2548 <col:152> '_Bool' lvalue Var 0x55a1d72b1c10 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x55a1d72b26c8 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x55a1d72b2568 <col:168> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
|   |           |   `-ParenExpr 0x55a1d72b2678 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x55a1d72b2648 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x55a1d72b2600 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x55a1d72b25e8 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x55a1d72b2588 <col:173> '_Bool' lvalue Var 0x55a1d72b1c88 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x55a1d72b2618 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x55a1d72b25a8 <col:189> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x55a1d72b2630 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x55a1d72b25c8 <col:201> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
|   |           `-ParenExpr 0x55a1d72b2b30 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x55a1d72b2af0 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x55a1d72b28b0 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x55a1d72b2840 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x55a1d72b27d0 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55a1d72b2788 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55a1d72b2770 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55a1d72b2730 <col:216> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x55a1d72b27b8 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x55a1d72b27a0 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55a1d72b2750 <col:234> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55a1d72b2828 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55a1d72b2810 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55a1d72b27f0 <col:252> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55a1d72b2898 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55a1d72b2880 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55a1d72b2860 <col:271> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |               |-ParenExpr 0x55a1d72b29c0 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x55a1d72b2990 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x55a1d72b2948 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x55a1d72b2930 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x55a1d72b28d0 <col:289> '_Bool' lvalue Var 0x55a1d72b1c10 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x55a1d72b2960 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x55a1d72b28f0 <col:305> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x55a1d72b2978 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55a1d72b2910 <col:317> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
|   |               `-ParenExpr 0x55a1d72b2ad0 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x55a1d72b2aa0 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x55a1d72b2a58 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x55a1d72b2a40 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x55a1d72b29e0 <col:331> '_Bool' lvalue Var 0x55a1d72b1c10 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x55a1d72b2a70 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55a1d72b2a00 <col:347> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55a1d72b2a88 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55a1d72b2a20 <col:359> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
|   |-BinaryOperator 0x55a1d72b33f0 <line:733:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b2c70 <col:3> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55a1d72b33c0 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55a1d72b3390 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a1d72b3378 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a1d72b2c90 <col:15> '_Bool' lvalue Var 0x55a1d72b1d00 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a1d72b33a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a1d72b2cb0 <col:31> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55a1d72b3358 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55a1d72b3328 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55a1d72b2d08 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55a1d72b2cf0 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55a1d72b2cd0 <col:45> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55a1d72b3310 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a1d72b2d20 <col:62> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55a1d72b32f0 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55a1d72b32c0 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55a1d72b2de0 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55a1d72b2d98 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55a1d72b2d80 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55a1d72b2d40 <col:75> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55a1d72b2dc8 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55a1d72b2db0 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55a1d72b2d60 <col:93> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55a1d72b32a8 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55a1d72b2e00 <col:110> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
|   |           `-ParenExpr 0x55a1d72b3288 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55a1d72b3258 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55a1d72b2fa0 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55a1d72b2f30 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55a1d72b2ec0 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55a1d72b2ea8 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55a1d72b2e90 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55a1d72b2e20 <col:123> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55a1d72b2e78 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55a1d72b2e60 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55a1d72b2e40 <col:142> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55a1d72b2f18 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55a1d72b2f00 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55a1d72b2ee0 <col:160> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55a1d72b2f88 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55a1d72b2f70 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55a1d72b2f50 <col:179> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |               |-ImplicitCastExpr 0x55a1d72b3240 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55a1d72b2fc0 <col:196> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
|   |               `-ParenExpr 0x55a1d72b3220 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55a1d72b31f0 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55a1d72b3160 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55a1d72b30f0 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55a1d72b3080 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55a1d72b3038 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55a1d72b3020 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55a1d72b2fe0 <col:209> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55a1d72b3068 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55a1d72b3050 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55a1d72b3000 <col:227> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55a1d72b30d8 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55a1d72b30c0 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55a1d72b30a0 <col:245> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55a1d72b3148 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55a1d72b3130 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55a1d72b3110 <col:264> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |                   |-ImplicitCastExpr 0x55a1d72b31c0 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55a1d72b3180 <col:281> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55a1d72b31d8 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55a1d72b31a0 <col:293> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55a1d72b3ba0 <line:734:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b3410 <col:3> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55a1d72b3b70 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55a1d72b3b40 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a1d72b3b18 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a1d72b3430 <col:15> '_Bool' lvalue Var 0x55a1d72b1d00 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a1d72b3b58 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a1d72b3450 <col:31> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55a1d72b3af8 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55a1d72b3ac8 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55a1d72b34a8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55a1d72b3490 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55a1d72b3470 <col:45> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55a1d72b3ab0 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a1d72b34c0 <col:62> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55a1d72b3a90 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55a1d72b3a60 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55a1d72b3580 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55a1d72b3538 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55a1d72b3520 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55a1d72b34e0 <col:75> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55a1d72b3568 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55a1d72b3550 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55a1d72b3500 <col:93> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55a1d72b3a48 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55a1d72b35a0 <col:110> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
|   |           `-ParenExpr 0x55a1d72b3a28 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55a1d72b39f8 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55a1d72b3740 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55a1d72b36d0 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55a1d72b3660 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55a1d72b3648 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55a1d72b3630 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55a1d72b35c0 <col:123> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55a1d72b3618 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55a1d72b3600 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55a1d72b35e0 <col:142> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55a1d72b36b8 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55a1d72b36a0 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55a1d72b3680 <col:160> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55a1d72b3728 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55a1d72b3710 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55a1d72b36f0 <col:179> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |               |-ImplicitCastExpr 0x55a1d72b39e0 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55a1d72b3760 <col:196> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
|   |               `-ParenExpr 0x55a1d72b39c0 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55a1d72b3990 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55a1d72b3900 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55a1d72b3890 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55a1d72b3820 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55a1d72b37d8 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55a1d72b37c0 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55a1d72b3780 <col:209> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55a1d72b3808 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55a1d72b37f0 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55a1d72b37a0 <col:227> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55a1d72b3878 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55a1d72b3860 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55a1d72b3840 <col:245> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55a1d72b38e8 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55a1d72b38d0 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55a1d72b38b0 <col:264> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |                   |-ImplicitCastExpr 0x55a1d72b3960 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55a1d72b3920 <col:281> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x55a1d72b3978 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55a1d72b3940 <col:293> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55a1d72b4478 <line:735:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b3bc0 <col:3> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a1d72b4460 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a1d72b4430 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x55a1d72b43e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a1d72b43d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a1d72b3be0 <col:20> '_Bool' lvalue Var 0x55a1d72b1d00 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a1d72b4418 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a1d72b4400 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a1d72b3c00 <col:36> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55a1d72b43b0 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x55a1d72b4380 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x55a1d72b3c58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55a1d72b3c40 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a1d72b3c20 <col:55> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55a1d72b4368 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a1d72b4350 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a1d72b3c70 <col:72> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55a1d72b4330 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x55a1d72b4300 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x55a1d72b3d30 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a1d72b3ce8 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a1d72b3cd0 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a1d72b3c90 <col:90> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a1d72b3d18 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a1d72b3d00 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a1d72b3cb0 <col:108> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55a1d72b42e8 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a1d72b3d80 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a1d72b3d50 <col:132> 'int' 0
|   |             `-ParenExpr 0x55a1d72b42c8 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x55a1d72b4298 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x55a1d72b3f28 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55a1d72b3eb8 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55a1d72b3e48 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55a1d72b3e30 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55a1d72b3e18 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55a1d72b3da8 <col:137> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55a1d72b3e00 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55a1d72b3de8 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55a1d72b3dc8 <col:156> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55a1d72b3ea0 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55a1d72b3e88 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55a1d72b3e68 <col:174> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55a1d72b3f10 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55a1d72b3ef8 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55a1d72b3ed8 <col:193> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |                 |-BinaryOperator 0x55a1d72b3fe8 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x55a1d72b3fd0 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x55a1d72b3fb8 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x55a1d72b3f48 <col:210> '_Bool' lvalue Var 0x55a1d72b1c10 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x55a1d72b3fa0 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55a1d72b3f88 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55a1d72b3f68 <col:228> '_Bool' lvalue Var 0x55a1d72b1c88 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x55a1d72b4278 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x55a1d72b4248 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x55a1d72b4188 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x55a1d72b4118 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55a1d72b40a8 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55a1d72b4060 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55a1d72b4048 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55a1d72b4008 <col:245> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55a1d72b4090 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55a1d72b4078 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55a1d72b4028 <col:263> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55a1d72b4100 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55a1d72b40e8 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55a1d72b40c8 <col:281> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55a1d72b4170 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55a1d72b4158 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55a1d72b4138 <col:300> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55a1d72b4200 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x55a1d72b41e8 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x55a1d72b41a8 <col:317> '_Bool' lvalue Var 0x55a1d72b1c10 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x55a1d72b4230 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x55a1d72b4218 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x55a1d72b41c8 <col:333> '_Bool' lvalue Var 0x55a1d72b1c10 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x55a1d72b4d30 <line:736:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b4498 <col:3> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a1d72b4d18 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a1d72b4ce8 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x55a1d72b4ca0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a1d72b4c88 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a1d72b44b8 <col:20> '_Bool' lvalue Var 0x55a1d72b1d00 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a1d72b4cd0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a1d72b4cb8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a1d72b44d8 <col:36> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55a1d72b4c68 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x55a1d72b4c38 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x55a1d72b4530 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55a1d72b4518 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a1d72b44f8 <col:55> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55a1d72b4c20 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a1d72b4c08 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a1d72b4548 <col:72> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55a1d72b4be8 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x55a1d72b4bb8 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x55a1d72b4608 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a1d72b45c0 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a1d72b45a8 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a1d72b4568 <col:90> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a1d72b45f0 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a1d72b45d8 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a1d72b4588 <col:108> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55a1d72b4ba0 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a1d72b4658 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a1d72b4628 <col:132> 'int' 0
|   |             `-ParenExpr 0x55a1d72b4b80 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x55a1d72b4b50 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x55a1d72b4800 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55a1d72b4790 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55a1d72b4720 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55a1d72b4708 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55a1d72b46f0 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55a1d72b4680 <col:137> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55a1d72b46d8 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55a1d72b46c0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55a1d72b46a0 <col:156> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55a1d72b4778 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55a1d72b4760 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55a1d72b4740 <col:174> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55a1d72b47e8 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55a1d72b47d0 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55a1d72b47b0 <col:193> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |                 |-ImplicitCastExpr 0x55a1d72b4b28 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55a1d72b4b10 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55a1d72b4820 <col:210> '_Bool' lvalue Var 0x55a1d72b1c10 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x55a1d72b4af0 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x55a1d72b4ac0 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x55a1d72b49c0 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x55a1d72b4950 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55a1d72b48e0 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55a1d72b4898 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55a1d72b4880 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55a1d72b4840 <col:227> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55a1d72b48c8 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55a1d72b48b0 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55a1d72b4860 <col:245> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55a1d72b4938 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55a1d72b4920 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55a1d72b4900 <col:263> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55a1d72b49a8 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55a1d72b4990 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55a1d72b4970 <col:282> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55a1d72b4a90 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55a1d72b4a10 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55a1d72b49e0 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x55a1d72b4aa8 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55a1d72b4a68 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55a1d72b4a38 <col:317> 'int' 0
|   |-BinaryOperator 0x55a1d72b55d8 <line:737:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b4d50 <col:3> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55a1d72b55c0 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a1d72b5590 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x55a1d72b5548 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a1d72b5530 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a1d72b4d70 <col:20> '_Bool' lvalue Var 0x55a1d72b1d00 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a1d72b5578 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a1d72b5560 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a1d72b4d90 <col:36> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55a1d72b5510 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x55a1d72b54e0 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x55a1d72b4de8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55a1d72b4dd0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a1d72b4db0 <col:55> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55a1d72b54c8 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a1d72b54b0 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a1d72b4e00 <col:72> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55a1d72b5490 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x55a1d72b5460 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x55a1d72b4ec0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a1d72b4e78 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a1d72b4e60 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a1d72b4e20 <col:90> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a1d72b4ea8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a1d72b4e90 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a1d72b4e40 <col:108> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55a1d72b5448 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a1d72b4f10 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a1d72b4ee0 <col:132> 'int' 0
|   |             `-ParenExpr 0x55a1d72b5428 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x55a1d72b53f8 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x55a1d72b50b8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55a1d72b5048 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55a1d72b4fd8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55a1d72b4fc0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55a1d72b4fa8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55a1d72b4f38 <col:137> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55a1d72b4f90 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55a1d72b4f78 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55a1d72b4f58 <col:156> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55a1d72b5030 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55a1d72b5018 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55a1d72b4ff8 <col:174> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55a1d72b50a0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55a1d72b5088 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55a1d72b5068 <col:193> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |                 |-ImplicitCastExpr 0x55a1d72b53e0 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55a1d72b53c8 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55a1d72b50d8 <col:210> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |                 `-ParenExpr 0x55a1d72b53a8 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x55a1d72b5378 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x55a1d72b5278 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x55a1d72b5208 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55a1d72b5198 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55a1d72b5150 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55a1d72b5138 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55a1d72b50f8 <col:228> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55a1d72b5180 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55a1d72b5168 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55a1d72b5118 <col:246> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55a1d72b51f0 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55a1d72b51d8 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55a1d72b51b8 <col:264> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55a1d72b5260 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55a1d72b5248 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55a1d72b5228 <col:283> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55a1d72b5348 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55a1d72b52c8 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55a1d72b5298 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x55a1d72b5360 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55a1d72b5320 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55a1d72b52f0 <col:318> 'int' 0
|   |-BinaryOperator 0x55a1d72b5fa0 <line:738:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b55f8 <col:3> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55a1d72b5f88 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a1d72b5f58 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x55a1d72b5f10 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a1d72b5ef8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a1d72b5618 <col:20> '_Bool' lvalue Var 0x55a1d72b1d00 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a1d72b5f40 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a1d72b5f28 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a1d72b5638 <col:36> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55a1d72b5ed8 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x55a1d72b5ea8 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x55a1d72b5690 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55a1d72b5678 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a1d72b5658 <col:55> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55a1d72b5e90 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a1d72b5e78 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a1d72b56a8 <col:72> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55a1d72b5e58 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x55a1d72b5e28 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x55a1d72b5768 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a1d72b5720 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a1d72b5708 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a1d72b56c8 <col:90> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a1d72b5750 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a1d72b5738 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a1d72b56e8 <col:108> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55a1d72b5e10 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a1d72b57b8 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a1d72b5788 <col:132> 'int' 0
|   |             `-ParenExpr 0x55a1d72b5df0 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x55a1d72b5dc0 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x55a1d72b5960 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55a1d72b58f0 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55a1d72b5880 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55a1d72b5868 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55a1d72b5850 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55a1d72b57e0 <col:137> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55a1d72b5838 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55a1d72b5820 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55a1d72b5800 <col:156> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55a1d72b58d8 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55a1d72b58c0 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55a1d72b58a0 <col:174> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55a1d72b5948 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55a1d72b5930 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55a1d72b5910 <col:193> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |                 |-ParenExpr 0x55a1d72b5ac0 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x55a1d72b5a90 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x55a1d72b5a30 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55a1d72b5a18 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55a1d72b5980 <col:211> '_Bool' lvalue Var 0x55a1d72b1c10 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x55a1d72b5a60 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55a1d72b5a48 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55a1d72b59a0 <col:227> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x55a1d72b5a78 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x55a1d72b59f0 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x55a1d72b59c0 <col:251> 'int' 0
|   |                 `-ParenExpr 0x55a1d72b5da0 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x55a1d72b5d70 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x55a1d72b5c70 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x55a1d72b5c00 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55a1d72b5b90 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55a1d72b5b38 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55a1d72b5b20 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55a1d72b5ae0 <col:257> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55a1d72b5b78 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55a1d72b5b60 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55a1d72b5b00 <col:275> '_Bool' lvalue Var 0x55a1d72b06f0 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55a1d72b5be8 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55a1d72b5bd0 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55a1d72b5bb0 <col:293> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55a1d72b5c58 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55a1d72b5c40 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55a1d72b5c20 <col:312> '_Bool' lvalue Var 0x55a1d72b0498 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55a1d72b5d40 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55a1d72b5cc0 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55a1d72b5c90 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x55a1d72b5d58 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55a1d72b5d18 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55a1d72b5ce8 <col:347> 'int' 0
|   |-BinaryOperator 0x55a1d72b6038 <line:739:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b5fc0 <col:3> '_Bool' lvalue Var 0x55a1d72afbf0 '__unbuffered_p0_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55a1d72b6010 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a1d72b5fe0 <col:45> 'int' 1
|   |-BinaryOperator 0x55a1d72b60b0 <line:740:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55a1d72b6058 <col:3> 'int *' lvalue Var 0x55a1d72afc70 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55a1d72b6098 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55a1d72b6078 <col:43> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
|   |-BinaryOperator 0x55a1d72b6128 <line:741:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b60d0 <col:3> 'int' lvalue Var 0x55a1d72af598 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55a1d72b6110 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a1d72b60f0 <col:25> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
|   |-BinaryOperator 0x55a1d72b6258 <line:742:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b6148 <col:3> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
|   | `-ConditionalOperator 0x55a1d72b6228 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55a1d72b61e0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a1d72b61c8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a1d72b6168 <col:7> '_Bool' lvalue Var 0x55a1d72b0328 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55a1d72b61f8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a1d72b6188 <col:25> 'int' lvalue Var 0x55a1d72b03a8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55a1d72b6210 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55a1d72b61a8 <col:37> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
|   |-BinaryOperator 0x55a1d72b62f0 <line:743:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b6278 <col:3> '_Bool' lvalue Var 0x55a1d72b0328 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55a1d72b62c8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a1d72b6298 <col:28> 'int' 0
|   |-CallExpr 0x55a1d72b6348 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b6330 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b6310 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a1d72b63a0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b6388 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b6368 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a1d72b6400 <line:746:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b63c0 <col:3> 'int' lvalue Var 0x55a1d72b0170 'x' 'int'
|   | `-IntegerLiteral 0x55a1d72b63e0 <col:7> 'int' 1
|   |-CallExpr 0x55a1d72b6458 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b6440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b6420 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a1d72b64b0 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b6498 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b6478 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55a1d72b6508 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b64f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b64d0 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a1d72b6560 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b6548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b6528 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a1d72b6618 <line:751:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b6580 <col:3> 'int' lvalue Var 0x55a1d72af478 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a1d72b65f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a1d72b65e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a1d72b65a0 <col:22> 'int' lvalue Var 0x55a1d72af478 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a1d72b65c0 <col:41> 'int' 1
|   |-CallExpr 0x55a1d72b6670 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b6658 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b6638 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a1d72b6718 <line:753:3, col:36>
|     `-CallExpr 0x55a1d72b66f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a1d72b66e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a1d72b6690 <col:10> 'void *(void)' Function 0x55a1d7255ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a1d72b68c8 prev 0x55a1d72aee48 <line:755:1, line:766:1> line:755:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55a1d72b6830 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a1d72b6d20 <line:756:1, line:766:1>
|   |-CallExpr 0x55a1d72b69a8 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b6990 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b6970 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a1d72b6a08 <line:758:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b69c8 <col:3> 'int' lvalue Var 0x55a1d72b0170 'x' 'int'
|   | `-IntegerLiteral 0x55a1d72b69e8 <col:7> 'int' 2
|   |-CallExpr 0x55a1d72b6a60 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b6a48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b6a28 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a1d72b6ab8 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b6aa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b6a80 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55a1d72b6b10 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b6af8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b6ad8 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a1d72b6b88 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b6b70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b6b30 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a1d72b6c40 <line:763:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b6ba8 <col:3> 'int' lvalue Var 0x55a1d72af478 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a1d72b6c20 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a1d72b6c08 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a1d72b6bc8 <col:22> 'int' lvalue Var 0x55a1d72af478 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a1d72b6be8 <col:41> 'int' 1
|   |-CallExpr 0x55a1d72b6c98 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b6c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b6c60 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a1d72b6d10 <line:765:3, col:36>
|     `-CallExpr 0x55a1d72b6cf0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a1d72b6cd8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a1d72b6cb8 <col:10> 'void *(void)' Function 0x55a1d7255ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a1d72b6e28 prev 0x55a1d72aefa0 <line:767:1, line:786:1> line:767:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55a1d72b6d90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a1d72b8070 <line:768:1, line:786:1>
|   |-CallExpr 0x55a1d72b6f08 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b6ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b6ed0 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a1d72b6f80 <line:770:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b6f28 <col:3> 'int' lvalue Var 0x55a1d72aff60 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55a1d72b6f68 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a1d72b6f48 <col:25> 'int' lvalue Var 0x55a1d72b0170 'x' 'int'
|   |-CallExpr 0x55a1d72b6fd8 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b6fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b6fa0 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a1d72b7030 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b7018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b6ff8 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a1d72b7090 <line:773:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b7050 <col:3> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
|   | `-IntegerLiteral 0x55a1d72b7070 <col:7> 'int' 1
|   |-CallExpr 0x55a1d72b70e8 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b70d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b70b0 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a1d72b7140 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b7128 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b7108 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a1d72b7428 <line:776:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b7160 <col:3> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
|   | `-ConditionalOperator 0x55a1d72b73f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a1d72b7220 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a1d72b71d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a1d72b71c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a1d72b7180 <col:7> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a1d72b7208 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a1d72b71f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a1d72b71a0 <col:25> '_Bool' lvalue Var 0x55a1d72b0588 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55a1d72b73e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a1d72b7240 <col:42> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55a1d72b73c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a1d72b7390 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a1d72b7300 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a1d72b72b8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a1d72b72a0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a1d72b7260 <col:55> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a1d72b72e8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a1d72b72d0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a1d72b7280 <col:73> '_Bool' lvalue Var 0x55a1d72b07e0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55a1d72b7360 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a1d72b7320 <col:90> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a1d72b7378 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a1d72b7340 <col:102> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
|   |-BinaryOperator 0x55a1d72b7630 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b7448 <col:3> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a1d72b7618 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a1d72b75e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a1d72b7508 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a1d72b74c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a1d72b74a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a1d72b7468 <col:20> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a1d72b74f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a1d72b74d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a1d72b7488 <col:38> '_Bool' lvalue Var 0x55a1d72b0588 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a1d72b75a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a1d72b7558 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a1d72b7528 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a1d72b75d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a1d72b75b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a1d72b7580 <col:66> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a1d72b7918 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b7650 <col:3> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a1d72b7900 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a1d72b78d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a1d72b77f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a1d72b7710 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a1d72b76c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a1d72b76b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a1d72b7670 <col:20> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a1d72b76f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a1d72b76e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a1d72b7690 <col:38> '_Bool' lvalue Var 0x55a1d72b0588 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55a1d72b77d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a1d72b7788 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a1d72b7770 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a1d72b7730 <col:56> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a1d72b77b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a1d72b77a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a1d72b7750 <col:74> '_Bool' lvalue Var 0x55a1d72b07e0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a1d72b7888 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a1d72b7840 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a1d72b7810 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a1d72b78b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a1d72b78a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a1d72b7868 <col:102> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a1d72b7b20 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b7938 <col:3> '_Bool' lvalue Var 0x55a1d72b0588 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55a1d72b7b08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a1d72b7ad8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a1d72b79f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a1d72b79b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a1d72b7998 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a1d72b7958 <col:20> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a1d72b79e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a1d72b79c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a1d72b7978 <col:38> '_Bool' lvalue Var 0x55a1d72b0588 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a1d72b7a90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a1d72b7a48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a1d72b7a18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a1d72b7ac0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a1d72b7aa8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a1d72b7a70 <col:66> '_Bool' lvalue Var 0x55a1d72b0588 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55a1d72b7e28 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b7b40 <col:3> '_Bool' lvalue Var 0x55a1d72b07e0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55a1d72b7e10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a1d72b7de0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a1d72b7d00 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a1d72b7c20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a1d72b7bd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a1d72b7bc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a1d72b7b80 <col:20> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a1d72b7c08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a1d72b7bf0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a1d72b7ba0 <col:38> '_Bool' lvalue Var 0x55a1d72b0588 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55a1d72b7ce0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a1d72b7c98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a1d72b7c80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a1d72b7c40 <col:56> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a1d72b7cc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a1d72b7cb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a1d72b7c60 <col:74> '_Bool' lvalue Var 0x55a1d72b07e0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a1d72b7d98 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a1d72b7d50 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a1d72b7d20 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a1d72b7dc8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a1d72b7db0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a1d72b7d78 <col:102> '_Bool' lvalue Var 0x55a1d72b07e0 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55a1d72b7e80 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b7e68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b7e48 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a1d72b7ed8 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b7ec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b7ea0 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a1d72b7f90 <line:783:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b7ef8 <col:3> 'int' lvalue Var 0x55a1d72af478 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a1d72b7f70 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a1d72b7f58 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a1d72b7f18 <col:22> 'int' lvalue Var 0x55a1d72af478 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a1d72b7f38 <col:41> 'int' 1
|   |-CallExpr 0x55a1d72b7fe8 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b7fd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b7fb0 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a1d72b8060 <line:785:3, col:36>
|     `-CallExpr 0x55a1d72b8040 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a1d72b8028 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a1d72b8008 <col:10> 'void *(void)' Function 0x55a1d7255ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a1d72b81b8 prev 0x55a1d72af0f8 <line:787:1, line:803:1> line:787:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55a1d72b8120 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a1d72b92c8 <line:788:1, line:803:1>
|   |-CallExpr 0x55a1d72b8298 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b8280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b8260 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a1d72b82f8 <line:790:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b82b8 <col:3> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
|   | `-IntegerLiteral 0x55a1d72b82d8 <col:7> 'int' 2
|   |-CallExpr 0x55a1d72b8350 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b8338 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b8318 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a1d72b83a8 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b8390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b8370 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a1d72b8690 <line:793:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b83c8 <col:3> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
|   | `-ConditionalOperator 0x55a1d72b8660 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a1d72b8488 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a1d72b8440 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a1d72b8428 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a1d72b83e8 <col:7> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a1d72b8470 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a1d72b8458 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a1d72b8408 <col:25> '_Bool' lvalue Var 0x55a1d72b0600 'y$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55a1d72b8648 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a1d72b84a8 <col:42> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55a1d72b8628 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a1d72b85f8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a1d72b8568 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a1d72b8520 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a1d72b8508 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a1d72b84c8 <col:55> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a1d72b8550 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a1d72b8538 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a1d72b84e8 <col:73> '_Bool' lvalue Var 0x55a1d72b0858 'y$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55a1d72b85c8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a1d72b8588 <col:90> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a1d72b85e0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a1d72b85a8 <col:102> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
|   |-BinaryOperator 0x55a1d72b8898 <line:794:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b86b0 <col:3> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a1d72b8880 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a1d72b8850 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a1d72b8770 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a1d72b8728 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a1d72b8710 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a1d72b86d0 <col:20> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a1d72b8758 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a1d72b8740 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a1d72b86f0 <col:38> '_Bool' lvalue Var 0x55a1d72b0600 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55a1d72b8808 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a1d72b87c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a1d72b8790 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a1d72b8838 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a1d72b8820 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a1d72b87e8 <col:66> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a1d72b8b90 <line:795:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b88b8 <col:3> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a1d72b8b68 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a1d72b8b38 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a1d72b8a58 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a1d72b8978 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a1d72b8930 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a1d72b8918 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a1d72b88d8 <col:20> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a1d72b8960 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a1d72b8948 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a1d72b88f8 <col:38> '_Bool' lvalue Var 0x55a1d72b0600 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55a1d72b8a38 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a1d72b89f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a1d72b89d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a1d72b8998 <col:56> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a1d72b8a20 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a1d72b8a08 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a1d72b89b8 <col:74> '_Bool' lvalue Var 0x55a1d72b0858 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55a1d72b8af0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a1d72b8aa8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a1d72b8a78 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a1d72b8b20 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a1d72b8b08 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a1d72b8ad0 <col:102> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a1d72b8d98 <line:796:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b8bb0 <col:3> '_Bool' lvalue Var 0x55a1d72b0600 'y$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55a1d72b8d80 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a1d72b8d50 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a1d72b8c70 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a1d72b8c28 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a1d72b8c10 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a1d72b8bd0 <col:20> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a1d72b8c58 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a1d72b8c40 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a1d72b8bf0 <col:38> '_Bool' lvalue Var 0x55a1d72b0600 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55a1d72b8d08 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a1d72b8cc0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a1d72b8c90 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a1d72b8d38 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a1d72b8d20 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a1d72b8ce8 <col:66> '_Bool' lvalue Var 0x55a1d72b0600 'y$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55a1d72b9080 <line:797:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a1d72b8db8 <col:3> '_Bool' lvalue Var 0x55a1d72b0858 'y$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55a1d72b9068 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a1d72b9038 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a1d72b8f58 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a1d72b8e78 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a1d72b8e30 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a1d72b8e18 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a1d72b8dd8 <col:20> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a1d72b8e60 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a1d72b8e48 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a1d72b8df8 <col:38> '_Bool' lvalue Var 0x55a1d72b0600 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55a1d72b8f38 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a1d72b8ef0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a1d72b8ed8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a1d72b8e98 <col:56> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a1d72b8f20 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a1d72b8f08 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a1d72b8eb8 <col:74> '_Bool' lvalue Var 0x55a1d72b0858 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55a1d72b8ff0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a1d72b8fa8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a1d72b8f78 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a1d72b9020 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a1d72b9008 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a1d72b8fd0 <col:102> '_Bool' lvalue Var 0x55a1d72b0858 'y$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55a1d72b90d8 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b90c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b90a0 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a1d72b9130 <line:799:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b9118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b90f8 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a1d72b91e8 <line:800:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a1d72b9150 <col:3> 'int' lvalue Var 0x55a1d72af478 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a1d72b91c8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a1d72b91b0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a1d72b9170 <col:22> 'int' lvalue Var 0x55a1d72af478 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a1d72b9190 <col:41> 'int' 1
|   |-CallExpr 0x55a1d72b9240 <line:801:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a1d72b9228 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a1d72b9208 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a1d72b92b8 <line:802:3, col:36>
|     `-CallExpr 0x55a1d72b9298 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a1d72b9280 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a1d72b9260 <col:10> 'void *(void)' Function 0x55a1d7255ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a1d72b9368 prev 0x55a1d72af1c0 <line:804:1, line:806:1> line:804:6 fence 'void ()'
| `-CompoundStmt 0x55a1d72b9408 <line:805:1, line:806:1>
|-FunctionDecl 0x55a1d72b9438 prev 0x55a1d72af280 <line:807:1, line:809:1> line:807:6 isync 'void ()'
| `-CompoundStmt 0x55a1d72b94d8 <line:808:1, line:809:1>
|-FunctionDecl 0x55a1d72b9508 prev 0x55a1d72af340 <line:810:1, line:812:1> line:810:6 lwfence 'void ()'
| `-CompoundStmt 0x55a1d72b95a8 <line:811:1, line:812:1>
`-FunctionDecl 0x55a1d72b9618 <line:813:1, line:854:1> line:813:5 main 'int ()'
  `-CompoundStmt 0x55a1d72be200 <line:814:1, line:854:1>
    |-DeclStmt 0x55a1d72b9730 <line:815:3, col:18>
    | `-VarDecl 0x55a1d72b96c8 <col:3, col:13> col:13 used t2147 'pthread_t':'unsigned long'
    |-CallExpr 0x55a1d72b9938 <line:816:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a1d72b9920 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a1d72b9748 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a1d72965b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a1d72b9788 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a1d72b9768 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a1d72b96c8 't2147' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a1d72b9978 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a1d72b9800 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a1d72b97d8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a1d72b97a0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a1d72b9990 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a1d72b9820 <col:39> 'void *(void *)' Function 0x55a1d72b1e18 'P0' 'void *(void *)'
    | `-ParenExpr 0x55a1d72b98a0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a1d72b9878 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a1d72b9840 <col:52> 'int' 0
    |-DeclStmt 0x55a1d72b9a20 <line:817:3, col:18>
    | `-VarDecl 0x55a1d72b99b8 <col:3, col:13> col:13 used t2148 'pthread_t':'unsigned long'
    |-CallExpr 0x55a1d72b9bd8 <line:818:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a1d72b9bc0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a1d72b9a38 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a1d72965b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a1d72b9a78 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a1d72b9a58 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a1d72b99b8 't2148' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a1d72b9c18 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a1d72b9af0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a1d72b9ac8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a1d72b9a90 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a1d72b9c30 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a1d72b9b10 <col:39> 'void *(void *)' Function 0x55a1d72b68c8 'P1' 'void *(void *)'
    | `-ParenExpr 0x55a1d72b9ba0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a1d72b9b68 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a1d72b9b30 <col:52> 'int' 0
    |-DeclStmt 0x55a1d72b9cc0 <line:819:3, col:18>
    | `-VarDecl 0x55a1d72b9c58 <col:3, col:13> col:13 used t2149 'pthread_t':'unsigned long'
    |-CallExpr 0x55a1d72b9e68 <line:820:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a1d72b9e50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a1d72b9cd8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a1d72965b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a1d72b9d18 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a1d72b9cf8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a1d72b9c58 't2149' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a1d72b9ea8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a1d72b9d90 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a1d72b9d68 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a1d72b9d30 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a1d72b9ec0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a1d72b9db0 <col:39> 'void *(void *)' Function 0x55a1d72b6e28 'P2' 'void *(void *)'
    | `-ParenExpr 0x55a1d72b9e30 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a1d72b9e08 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a1d72b9dd0 <col:52> 'int' 0
    |-DeclStmt 0x55a1d72b9f50 <line:821:3, col:18>
    | `-VarDecl 0x55a1d72b9ee8 <col:3, col:13> col:13 used t2150 'pthread_t':'unsigned long'
    |-CallExpr 0x55a1d72ba0f8 <line:822:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a1d72ba0e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a1d72b9f68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a1d72965b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a1d72b9fa8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a1d72b9f88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a1d72b9ee8 't2150' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a1d72ba138 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a1d72ba020 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a1d72b9ff8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a1d72b9fc0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a1d72ba150 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a1d72ba040 <col:39> 'void *(void *)' Function 0x55a1d72b81b8 'P3' 'void *(void *)'
    | `-ParenExpr 0x55a1d72ba0c0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a1d72ba098 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a1d72ba060 <col:52> 'int' 0
    |-CallExpr 0x55a1d72ba1a0 <line:823:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a1d72ba188 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a1d72ba168 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a1d72ba270 <line:824:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55a1d72ba1c0 <col:3> '_Bool' lvalue Var 0x55a1d72afff8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55a1d72ba258 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55a1d72ba238 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55a1d72ba220 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55a1d72ba1e0 <col:21> 'int' lvalue Var 0x55a1d72af478 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55a1d72ba200 <col:41> 'int' 4
    |-CallExpr 0x55a1d72ba2c8 <line:825:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a1d72ba2b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a1d72ba290 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a1d72ba378 <line:826:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55a1d72ba360 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a1d72ba2e8 <col:3> 'void (int)' Function 0x55a1d7255940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55a1d72ba3b8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55a1d72ba3a0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55a1d72ba308 <col:21> '_Bool' lvalue Var 0x55a1d72afff8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55a1d72ba408 <line:827:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a1d72ba3f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a1d72ba3d0 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a1d72ba6f0 <line:828:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55a1d72ba428 <col:3> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
    | `-ConditionalOperator 0x55a1d72ba6c0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55a1d72ba4e8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55a1d72ba4a0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55a1d72ba488 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55a1d72ba448 <col:7> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55a1d72ba4d0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55a1d72ba4b8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55a1d72ba468 <col:25> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55a1d72ba6a8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a1d72ba508 <col:42> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55a1d72ba688 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55a1d72ba658 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55a1d72ba5c8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55a1d72ba580 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55a1d72ba568 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55a1d72ba528 <col:55> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55a1d72ba5b0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55a1d72ba598 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55a1d72ba548 <col:73> '_Bool' lvalue Var 0x55a1d72b0678 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55a1d72ba628 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55a1d72ba5e8 <col:90> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55a1d72ba640 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55a1d72ba608 <col:102> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
    |-BinaryOperator 0x55a1d72ba8f8 <line:829:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55a1d72ba710 <col:3> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55a1d72ba8e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a1d72ba8b0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55a1d72ba7d0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55a1d72ba788 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55a1d72ba770 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55a1d72ba730 <col:20> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55a1d72ba7b8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55a1d72ba7a0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55a1d72ba750 <col:38> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a1d72ba868 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a1d72ba820 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a1d72ba7f0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55a1d72ba898 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a1d72ba880 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a1d72ba848 <col:66> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55a1d72babf8 <line:830:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55a1d72ba918 <col:3> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55a1d72babe0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a1d72babb0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55a1d72baab8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55a1d72ba9d8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55a1d72ba990 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55a1d72ba978 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55a1d72ba938 <col:20> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55a1d72ba9c0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55a1d72ba9a8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55a1d72ba958 <col:38> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55a1d72baa98 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55a1d72baa50 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55a1d72baa38 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55a1d72ba9f8 <col:56> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55a1d72baa80 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55a1d72baa68 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55a1d72baa18 <col:74> '_Bool' lvalue Var 0x55a1d72b0678 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a1d72bab50 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a1d72bab08 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a1d72baad8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55a1d72bab80 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a1d72bab68 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a1d72bab30 <col:102> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55a1d72bae00 <line:831:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55a1d72bac18 <col:3> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a1d72bade8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a1d72badb8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55a1d72bacd8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55a1d72bac90 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55a1d72bac78 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55a1d72bac38 <col:20> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55a1d72bacc0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55a1d72baca8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55a1d72bac58 <col:38> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a1d72bad70 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a1d72bad28 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a1d72bacf8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55a1d72bada0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a1d72bad88 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a1d72bad50 <col:66> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55a1d72bb0e8 <line:832:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55a1d72bae20 <col:3> '_Bool' lvalue Var 0x55a1d72b0678 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a1d72bb0d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a1d72bb0a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55a1d72bafc0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55a1d72baee0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55a1d72bae98 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55a1d72bae80 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55a1d72bae40 <col:20> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55a1d72baec8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55a1d72baeb0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55a1d72bae60 <col:38> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55a1d72bafa0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55a1d72baf58 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55a1d72baf40 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55a1d72baf00 <col:56> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55a1d72baf88 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55a1d72baf70 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55a1d72baf20 <col:74> '_Bool' lvalue Var 0x55a1d72b0678 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a1d72bb058 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a1d72bb010 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a1d72bafe0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55a1d72bb088 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a1d72bb070 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a1d72bb038 <col:102> '_Bool' lvalue Var 0x55a1d72b0678 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55a1d72bb140 <line:833:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a1d72bb128 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a1d72bb108 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a1d72bb198 <line:834:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a1d72bb180 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a1d72bb160 <col:3> 'void ()' Function 0x55a1d7255fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a1d72bb230 <line:835:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55a1d72bb1b8 <col:3> '_Bool' lvalue Var 0x55a1d72b1c10 'weak$$choice0' '_Bool'
    | `-CallExpr 0x55a1d72bb210 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55a1d72bb1f8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55a1d72bb1d8 <col:19> '_Bool (void)' Function 0x55a1d7255770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55a1d72bb2c8 <line:836:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55a1d72bb250 <col:3> '_Bool' lvalue Var 0x55a1d72b1d00 'weak$$choice2' '_Bool'
    | `-CallExpr 0x55a1d72bb2a8 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55a1d72bb290 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55a1d72bb270 <col:19> '_Bool (void)' Function 0x55a1d7255770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55a1d72bb340 <line:837:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55a1d72bb2e8 <col:3> '_Bool' lvalue Var 0x55a1d72b0328 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55a1d72bb328 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55a1d72bb308 <col:21> '_Bool' lvalue Var 0x55a1d72b1d00 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55a1d72bb3b8 <line:838:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55a1d72bb360 <col:3> 'int' lvalue Var 0x55a1d72b03a8 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55a1d72bb3a0 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55a1d72bb380 <col:15> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
    |-BinaryOperator 0x55a1d72bb7f0 <line:839:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55a1d72bb3d8 <col:3> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
    | `-ConditionalOperator 0x55a1d72bb7c0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55a1d72bb5e8 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55a1d72bb508 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55a1d72bb430 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55a1d72bb418 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55a1d72bb3f8 <col:8> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55a1d72bb4e8 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55a1d72bb480 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55a1d72bb468 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55a1d72bb448 <col:27> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55a1d72bb4d0 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55a1d72bb4b8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55a1d72bb498 <col:46> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55a1d72bb5c8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55a1d72bb560 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55a1d72bb548 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55a1d72bb528 <col:65> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55a1d72bb5b0 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55a1d72bb598 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55a1d72bb578 <col:84> '_Bool' lvalue Var 0x55a1d72b0678 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55a1d72bb7a8 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a1d72bb608 <col:101> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
    |   `-ParenExpr 0x55a1d72bb788 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55a1d72bb758 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55a1d72bb6c8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55a1d72bb680 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55a1d72bb668 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55a1d72bb628 <col:106> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55a1d72bb6b0 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55a1d72bb698 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55a1d72bb648 <col:124> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55a1d72bb728 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55a1d72bb6e8 <col:141> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55a1d72bb740 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55a1d72bb708 <col:153> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
    |-BinaryOperator 0x55a1d72bbd20 <line:840:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55a1d72bb810 <col:3> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x55a1d72bbcf0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55a1d72bbcc0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55a1d72bbca8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55a1d72bb830 <col:15> '_Bool' lvalue Var 0x55a1d72b1d00 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55a1d72bbcd8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a1d72bb850 <col:31> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55a1d72bbc88 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55a1d72bbc58 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55a1d72bba60 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55a1d72bb980 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55a1d72bb8a8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55a1d72bb890 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55a1d72bb870 <col:45> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55a1d72bb960 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55a1d72bb8f8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55a1d72bb8e0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55a1d72bb8c0 <col:64> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55a1d72bb948 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55a1d72bb930 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55a1d72bb910 <col:83> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55a1d72bba40 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55a1d72bb9d8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55a1d72bb9c0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55a1d72bb9a0 <col:102> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55a1d72bba28 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55a1d72bba10 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55a1d72bb9f0 <col:121> '_Bool' lvalue Var 0x55a1d72b0678 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55a1d72bbc40 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55a1d72bba80 <col:138> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
    |       `-ParenExpr 0x55a1d72bbc20 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55a1d72bbbf0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55a1d72bbb40 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55a1d72bbaf8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55a1d72bbae0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55a1d72bbaa0 <col:151> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55a1d72bbb28 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55a1d72bbb10 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55a1d72bbac0 <col:169> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55a1d72bbbc0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55a1d72bbb60 <col:186> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55a1d72bbbd8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55a1d72bbb80 <col:198> 'int' lvalue Var 0x55a1d72b09d0 'y$w_buff0' 'int'
    |-BinaryOperator 0x55a1d72bc230 <line:841:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55a1d72bbd40 <col:3> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x55a1d72bc200 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55a1d72bc1d0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55a1d72bc1b8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55a1d72bbd60 <col:15> '_Bool' lvalue Var 0x55a1d72b1d00 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55a1d72bc1e8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a1d72bbd80 <col:31> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
    |   `-ParenExpr 0x55a1d72bc198 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55a1d72bc168 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55a1d72bbf90 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55a1d72bbeb0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55a1d72bbdd8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55a1d72bbdc0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55a1d72bbda0 <col:45> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55a1d72bbe90 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55a1d72bbe28 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55a1d72bbe10 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55a1d72bbdf0 <col:64> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55a1d72bbe78 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55a1d72bbe60 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55a1d72bbe40 <col:83> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55a1d72bbf70 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55a1d72bbf08 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55a1d72bbef0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55a1d72bbed0 <col:102> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55a1d72bbf58 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55a1d72bbf40 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55a1d72bbf20 <col:121> '_Bool' lvalue Var 0x55a1d72b0678 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55a1d72bc150 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55a1d72bbfb0 <col:138> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
    |       `-ParenExpr 0x55a1d72bc130 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55a1d72bc100 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55a1d72bc070 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55a1d72bc028 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55a1d72bc010 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55a1d72bbfd0 <col:151> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55a1d72bc058 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55a1d72bc040 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55a1d72bbff0 <col:169> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55a1d72bc0d0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55a1d72bc090 <col:186> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55a1d72bc0e8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55a1d72bc0b0 <col:198> 'int' lvalue Var 0x55a1d72b1b20 'y$w_buff1' 'int'
    |-BinaryOperator 0x55a1d72bc7d8 <line:842:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55a1d72bc250 <col:3> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55a1d72bc7c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a1d72bc790 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55a1d72bc748 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a1d72bc730 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a1d72bc270 <col:20> '_Bool' lvalue Var 0x55a1d72b1d00 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55a1d72bc778 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a1d72bc760 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a1d72bc290 <col:36> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55a1d72bc710 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55a1d72bc6e0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55a1d72bc4a0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55a1d72bc3c0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55a1d72bc2e8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55a1d72bc2d0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55a1d72bc2b0 <col:55> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55a1d72bc3a0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55a1d72bc338 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55a1d72bc320 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55a1d72bc300 <col:74> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55a1d72bc388 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55a1d72bc370 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55a1d72bc350 <col:93> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55a1d72bc480 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55a1d72bc418 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55a1d72bc400 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55a1d72bc3e0 <col:112> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55a1d72bc468 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55a1d72bc450 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55a1d72bc430 <col:131> '_Bool' lvalue Var 0x55a1d72b0678 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55a1d72bc6c8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55a1d72bc6b0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55a1d72bc4c0 <col:148> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55a1d72bc690 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55a1d72bc660 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55a1d72bc580 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55a1d72bc538 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55a1d72bc520 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55a1d72bc4e0 <col:166> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55a1d72bc568 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55a1d72bc550 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55a1d72bc500 <col:184> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55a1d72bc618 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55a1d72bc5d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55a1d72bc5a0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55a1d72bc648 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55a1d72bc630 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55a1d72bc5f8 <col:212> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55a1d72bcdb0 <line:843:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55a1d72bc7f8 <col:3> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55a1d72bcd98 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a1d72bcd68 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55a1d72bcd20 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a1d72bcd08 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a1d72bc818 <col:20> '_Bool' lvalue Var 0x55a1d72b1d00 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55a1d72bcd50 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a1d72bcd38 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a1d72bc838 <col:36> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55a1d72bcce8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55a1d72bccb8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55a1d72bca48 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55a1d72bc968 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55a1d72bc890 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55a1d72bc878 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55a1d72bc858 <col:55> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55a1d72bc948 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55a1d72bc8e0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55a1d72bc8c8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55a1d72bc8a8 <col:74> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55a1d72bc930 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55a1d72bc918 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55a1d72bc8f8 <col:93> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55a1d72bca28 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55a1d72bc9c0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55a1d72bc9a8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55a1d72bc988 <col:112> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55a1d72bca10 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55a1d72bc9f8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55a1d72bc9d8 <col:131> '_Bool' lvalue Var 0x55a1d72b0678 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55a1d72bcca0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55a1d72bcc88 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55a1d72bca68 <col:148> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55a1d72bcc68 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55a1d72bcc38 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55a1d72bcb28 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55a1d72bcae0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55a1d72bcac8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55a1d72bca88 <col:166> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55a1d72bcb10 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55a1d72bcaf8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55a1d72bcaa8 <col:184> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55a1d72bcc08 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55a1d72bcb78 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55a1d72bcb48 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55a1d72bcc20 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55a1d72bcbe0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55a1d72bcba0 <col:219> 'int' 0
    |-BinaryOperator 0x55a1d72bd358 <line:844:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55a1d72bcdd0 <col:3> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a1d72bd340 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a1d72bd310 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55a1d72bd2c8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a1d72bd2b0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a1d72bcdf0 <col:20> '_Bool' lvalue Var 0x55a1d72b1d00 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55a1d72bd2f8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a1d72bd2e0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a1d72bce10 <col:36> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55a1d72bd290 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55a1d72bd260 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55a1d72bd020 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55a1d72bcf40 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55a1d72bce68 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55a1d72bce50 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55a1d72bce30 <col:55> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55a1d72bcf20 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55a1d72bceb8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55a1d72bcea0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55a1d72bce80 <col:74> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55a1d72bcf08 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55a1d72bcef0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55a1d72bced0 <col:93> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55a1d72bd000 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55a1d72bcf98 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55a1d72bcf80 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55a1d72bcf60 <col:112> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55a1d72bcfe8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55a1d72bcfd0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55a1d72bcfb0 <col:131> '_Bool' lvalue Var 0x55a1d72b0678 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55a1d72bd248 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55a1d72bd230 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55a1d72bd040 <col:148> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55a1d72bd210 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55a1d72bd1e0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55a1d72bd100 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55a1d72bd0b8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55a1d72bd0a0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55a1d72bd060 <col:166> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55a1d72bd0e8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55a1d72bd0d0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55a1d72bd080 <col:184> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55a1d72bd198 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55a1d72bd150 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55a1d72bd120 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55a1d72bd1c8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55a1d72bd1b0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55a1d72bd178 <col:212> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55a1d72bd920 <line:845:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55a1d72bd378 <col:3> '_Bool' lvalue Var 0x55a1d72b0678 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a1d72bd908 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a1d72bd8d8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55a1d72bd890 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a1d72bd878 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a1d72bd398 <col:20> '_Bool' lvalue Var 0x55a1d72b1d00 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55a1d72bd8c0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a1d72bd8a8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a1d72bd3b8 <col:36> '_Bool' lvalue Var 0x55a1d72b0678 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55a1d72bd858 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55a1d72bd828 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55a1d72bd5c8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55a1d72bd4e8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55a1d72bd410 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55a1d72bd3f8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55a1d72bd3d8 <col:55> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55a1d72bd4c8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55a1d72bd460 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55a1d72bd448 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55a1d72bd428 <col:74> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55a1d72bd4b0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55a1d72bd498 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55a1d72bd478 <col:93> '_Bool' lvalue Var 0x55a1d72b1b98 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55a1d72bd5a8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55a1d72bd540 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55a1d72bd528 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55a1d72bd508 <col:112> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55a1d72bd590 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55a1d72bd578 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55a1d72bd558 <col:131> '_Bool' lvalue Var 0x55a1d72b0678 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55a1d72bd810 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55a1d72bd7f8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55a1d72bd5e8 <col:148> '_Bool' lvalue Var 0x55a1d72b0678 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55a1d72bd7d8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55a1d72bd7a8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55a1d72bd6a8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55a1d72bd660 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55a1d72bd648 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55a1d72bd608 <col:166> '_Bool' lvalue Var 0x55a1d72b0a48 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55a1d72bd690 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55a1d72bd678 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55a1d72bd628 <col:184> '_Bool' lvalue Var 0x55a1d72b0420 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55a1d72bd778 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55a1d72bd6f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55a1d72bd6c8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55a1d72bd790 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55a1d72bd750 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55a1d72bd720 <col:219> 'int' 0
    |-BinaryOperator 0x55a1d72bd9b8 <line:846:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55a1d72bd940 <col:3> '_Bool' lvalue Var 0x55a1d72b1c88 'weak$$choice1' '_Bool'
    | `-CallExpr 0x55a1d72bd998 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55a1d72bd980 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55a1d72bd960 <col:19> '_Bool (void)' Function 0x55a1d7255770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55a1d72bdc10 <line:847:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55a1d72bd9d8 <col:3> 'int' lvalue Var 0x55a1d72af598 '__unbuffered_p0_EAX' 'int'
    | `-ConditionalOperator 0x55a1d72bdbe0 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55a1d72bdb90 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55a1d72bdb78 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55a1d72bd9f8 <col:25> '_Bool' lvalue Var 0x55a1d72afbf0 '__unbuffered_p0_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55a1d72bdb38 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55a1d72bdb08 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55a1d72bdac0 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55a1d72bdaa8 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55a1d72bda18 <col:61> '_Bool' lvalue Var 0x55a1d72b1c88 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55a1d72bdad8 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55a1d72bda70 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55a1d72bda58 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55a1d72bda38 <col:78> 'int *' lvalue Var 0x55a1d72afc70 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55a1d72bdaf0 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55a1d72bda88 <col:117> 'int' lvalue Var 0x55a1d72af598 '__unbuffered_p0_EAX' 'int'
    |   `-ImplicitCastExpr 0x55a1d72bdba8 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55a1d72bdb58 <col:140> 'int' lvalue Var 0x55a1d72af598 '__unbuffered_p0_EAX' 'int'
    |-BinaryOperator 0x55a1d72bdee0 <line:848:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x55a1d72bdc30 <col:3> '_Bool' lvalue Var 0x55a1d72b0070 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55a1d72bdec8 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55a1d72bdeb0 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55a1d72bde90 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x55a1d72bde70 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x55a1d72bddd8 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x55a1d72bdd40 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x55a1d72bdca8 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55a1d72bdc90 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55a1d72bdc50 <col:23> 'int' lvalue Var 0x55a1d72b0170 'x' 'int'
    |         | | | `-IntegerLiteral 0x55a1d72bdc70 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55a1d72bdd20 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55a1d72bdd08 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55a1d72bdcc8 <col:33> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
    |         | |   `-IntegerLiteral 0x55a1d72bdce8 <col:38> 'int' 2
    |         | `-BinaryOperator 0x55a1d72bddb8 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55a1d72bdda0 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55a1d72bdd60 <col:43> 'int' lvalue Var 0x55a1d72af598 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x55a1d72bdd80 <col:66> 'int' 2
    |         `-BinaryOperator 0x55a1d72bde50 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x55a1d72bde38 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55a1d72bddf8 <col:71> 'int' lvalue Var 0x55a1d72aff60 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x55a1d72bde18 <col:94> 'int' 2
    |-BinaryOperator 0x55a1d72be010 <line:849:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55a1d72bdf00 <col:3> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
    | `-ConditionalOperator 0x55a1d72bdfe0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55a1d72bdf98 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55a1d72bdf80 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55a1d72bdf20 <col:7> '_Bool' lvalue Var 0x55a1d72b0328 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55a1d72bdfb0 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a1d72bdf40 <col:25> 'int' lvalue Var 0x55a1d72b03a8 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55a1d72bdfc8 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55a1d72bdf60 <col:37> 'int' lvalue Var 0x55a1d72b0290 'y' 'int'
    |-BinaryOperator 0x55a1d72be0a8 <line:850:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55a1d72be030 <col:3> '_Bool' lvalue Var 0x55a1d72b0328 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55a1d72be080 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55a1d72be050 <col:28> 'int' 0
    |-CallExpr 0x55a1d72be100 <line:851:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a1d72be0e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a1d72be0c8 <col:3> 'void ()' Function 0x55a1d7256060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a1d72be178 <line:852:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55a1d72be160 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a1d72be120 <col:3> 'void (int)' Function 0x55a1d7255d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55a1d72be1b8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55a1d72be1a0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55a1d72be140 <col:21> '_Bool' lvalue Var 0x55a1d72b0070 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55a1d72be1f0 <line:853:3, col:10>
      `-IntegerLiteral 0x55a1d72be1d0 <col:10> 'int' 0
