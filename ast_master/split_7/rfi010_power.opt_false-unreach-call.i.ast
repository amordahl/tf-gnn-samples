TranslationUnitDecl 0x560cb9e2de18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x560cb9e2e6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x560cb9e2e3b0 '__int128'
|-TypedefDecl 0x560cb9e2e748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x560cb9e2e3d0 'unsigned __int128'
|-TypedefDecl 0x560cb9e2ea50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x560cb9e2e820 'struct __NSConstantString_tag'
|   `-Record 0x560cb9e2e7a0 '__NSConstantString_tag'
|-TypedefDecl 0x560cb9e2eaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x560cb9e2eab0 'char *'
|   `-BuiltinType 0x560cb9e2deb0 'char'
|-TypedefDecl 0x560cb9e6d650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x560cb9e2ed90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x560cb9e2ebd0 'struct __va_list_tag'
|     `-Record 0x560cb9e2eb50 '__va_list_tag'
|-FunctionDecl 0x560cb9e6d770 <./split_7/rfi010_power.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x560cb9e6d940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x560cb9e6d870 <col:31> col:34 'int'
|-FunctionDecl 0x560cb9e6dab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x560cb9e6dbe0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x560cb9e6dd28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x560cb9e6dc98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x560cb9e6df58 <col:40, col:99>
|   |-IfStmt 0x560cb9e6df28 <col:42, col:88>
|   | |-UnaryOperator 0x560cb9e6de08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x560cb9e6ddf0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x560cb9e6ddd0 <col:47> 'int' lvalue ParmVar 0x560cb9e6dc98 'expression' 'int'
|   | `-CompoundStmt 0x560cb9e6df10 <col:59, col:88>
|   |   `-LabelStmt 0x560cb9e6def8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x560cb9e6de88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x560cb9e6de70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x560cb9e6de20 <col:68> 'void () __attribute__((noreturn))' Function 0x560cb9e6dbe0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x560cb9e6df40 <col:89>
|   `-ReturnStmt 0x560cb9e6df48 <col:91>
|-FunctionDecl 0x560cb9e6dfa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x560cb9e6e060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x560cb9e6e3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560cb9e6e118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x560cb9e6e198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x560cb9e6e218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560cb9e6e298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560cb9e6e4a0 <line:11:22>
|-FunctionDecl 0x560cb9e94520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560cb9e6e510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x560cb9e6e590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x560cb9e94350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560cb9e943d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560cb9e945e0 <line:14:22>
|-FunctionDecl 0x560cb9e94890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560cb9e94650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x560cb9e946d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x560cb9e94750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x560cb9e94948 <line:16:22>
|-TypedefDecl 0x560cb9e949b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x560cb9e2df70 'unsigned char'
|-TypedefDecl 0x560cb9e94a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x560cb9e2df90 'unsigned short'
|-TypedefDecl 0x560cb9e94a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x560cb9e2dfb0 'unsigned int'
|-TypedefDecl 0x560cb9e94b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-TypedefDecl 0x560cb9e94b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x560cb9e2ded0 'signed char'
|-TypedefDecl 0x560cb9e94be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x560cb9e2df70 'unsigned char'
|-TypedefDecl 0x560cb9e94c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x560cb9e2def0 'short'
|-TypedefDecl 0x560cb9e94cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x560cb9e2df90 'unsigned short'
|-TypedefDecl 0x560cb9e94d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x560cb9e2df10 'int'
|-TypedefDecl 0x560cb9e94da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x560cb9e2dfb0 'unsigned int'
|-TypedefDecl 0x560cb9e94e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e94e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-TypedefDecl 0x560cb9e94ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e94f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-TypedefDecl 0x560cb9e94fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-TypedefDecl 0x560cb9e95048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x560cb9e2dfb0 'unsigned int'
|-TypedefDecl 0x560cb9e950b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x560cb9e2dfb0 'unsigned int'
|-TypedefDecl 0x560cb9e95128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-TypedefDecl 0x560cb9e95198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-TypedefDecl 0x560cb9e95208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x560cb9e2dfb0 'unsigned int'
|-TypedefDecl 0x560cb9e95278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-TypedefDecl 0x560cb9e952e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e95378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e953e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x560cb9e2df10 'int'
|-RecordDecl 0x560cb9e95440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x560cb9e95588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x560cb9e95640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x560cb9e955e0 'struct __fsid_t' sugar
|   `-RecordType 0x560cb9e954c0 '__fsid_t'
|     `-Record 0x560cb9e95440 ''
|-TypedefDecl 0x560cb9e956c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e95738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-TypedefDecl 0x560cb9e957a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-TypedefDecl 0x560cb9e95818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x560cb9e2dfb0 'unsigned int'
|-TypedefDecl 0x560cb9e95888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e958f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x560cb9e2dfb0 'unsigned int'
|-TypedefDecl 0x560cb9e95968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e959d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x560cb9e2df10 'int'
|-TypedefDecl 0x560cb9e95a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x560cb9e2df10 'int'
|-TypedefDecl 0x560cb9e95ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x560cb9e2df10 'int'
|-TypedefDecl 0x560cb9e95b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x560cb9e2e630 'void *'
|   `-BuiltinType 0x560cb9e2de70 'void'
|-TypedefDecl 0x560cb9e95b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e95c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e95c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e95ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-TypedefDecl 0x560cb9e95d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-TypedefDecl 0x560cb9e95dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-TypedefDecl 0x560cb9e95e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-TypedefDecl 0x560cb9e95ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e95f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e95f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e95ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-TypedefDecl 0x560cb9e96088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x560cb9e96050 '__off64_t' sugar
|   |-Typedef 0x560cb9e95378 '__off64_t'
|   `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e96180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x560cb9e96140 '__quad_t *'
|   `-TypedefType 0x560cb9e960e0 '__quad_t' sugar
|     |-Typedef 0x560cb9e94ef8 '__quad_t'
|     `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e961f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x560cb9e2eab0 'char *'
|   `-BuiltinType 0x560cb9e2deb0 'char'
|-TypedefDecl 0x560cb9e96260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e962d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x560cb9e2dfb0 'unsigned int'
|-FunctionDecl 0x560cb9e97458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x560cb9e97380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x560cb9e97768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x560cb9e97758 <line:73:3, col:34>
|     `-CallExpr 0x560cb9e97718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x560cb9e97700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560cb9e97690 <col:10> '<builtin fn type>' Function 0x560cb9e97500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x560cb9e97740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560cb9e976b0 <col:29> 'unsigned int' lvalue ParmVar 0x560cb9e97380 '__bsx' 'unsigned int'
|-FunctionDecl 0x560cb9e97500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x560cb9e975a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x560cb9e97610 <col:10> Implicit
| `-ConstAttr 0x560cb9e97668 <col:10> Implicit
|-FunctionDecl 0x560cb9e978c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x560cb9e977b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x560cb9e97bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x560cb9e97bc8 <line:78:3, col:34>
|     `-CallExpr 0x560cb9e97b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x560cb9e97b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560cb9e97af8 <col:10> '<builtin fn type>' Function 0x560cb9e97968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x560cb9e97bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x560cb9e97b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x560cb9e977b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x560cb9e97968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x560cb9e97a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x560cb9e97a78 <col:10> Implicit
| `-ConstAttr 0x560cb9e97ad0 <col:10> Implicit
|-TypedefDecl 0x560cb9e97c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-TypedefDecl 0x560cb9e97c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x560cb9e97c60 '__time_t' sugar
|   |-Typedef 0x560cb9e95888 '__time_t'
|   `-BuiltinType 0x560cb9e2df30 'long'
|-RecordDecl 0x560cb9e97cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x560cb9e97da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x560cb9e97e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x560cb9e97ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x560cb9e97e90 '__pid_t' sugar
|   |-Typedef 0x560cb9e953e8 '__pid_t'
|   `-BuiltinType 0x560cb9e2df10 'int'
|-RecordDecl 0x560cb9e97f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x560cb9e97fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x560cb9e98030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x560cb9e980f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x560cb9e98158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-RecordDecl 0x560cb9e981b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x560cb9e99480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x560cb9e99530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x560cb9e994d0 'struct cpu_set_t' sugar
|   `-RecordType 0x560cb9e98230 'cpu_set_t'
|     `-Record 0x560cb9e981b0 ''
|-FunctionDecl 0x560cb9e99808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x560cb9e995d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560cb9e996e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x560cb9e998b8 <line:108:19>
|-FunctionDecl 0x560cb9e99a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x560cb9e99920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x560cb9e99b38 <col:69>
|-FunctionDecl 0x560cb9e99cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x560cb9e99ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x560cb9e99d58 <col:64>
|-FunctionDecl 0x560cb9e9a018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x560cb9e99dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560cb9e99ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560cb9e9a0c8 <line:114:22>
|-FunctionDecl 0x560cb9e9a3b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x560cb9e9a130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560cb9e9a228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x560cb9e9a460 <col:88>
|-FunctionDecl 0x560cb9e9a718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560cb9e9a4c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560cb9e9a548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x560cb9e9a5d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560cb9e9a7d0 <col:62>
|-FunctionDecl 0x560cb9e9a948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x560cb9e9a838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x560cb9e9a9f0 <col:63>
|-FunctionDecl 0x560cb9e9ab18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x560cb9e9abb8 <col:47>
|-FunctionDecl 0x560cb9e9acc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x560cb9e9ac28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560cb9e9ad68 <col:69>
|-FunctionDecl 0x560cb9e9ae70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x560cb9e9add8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560cb9e9af18 <col:69>
|-FunctionDecl 0x560cb9e9b1d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560cb9e9af80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560cb9e9b0b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x560cb9e9b288 <col:88>
|-TypedefDecl 0x560cb9e9b318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560cb9e9b2e0 '__clock_t' sugar
|   |-Typedef 0x560cb9e956c8 '__clock_t'
|   `-BuiltinType 0x560cb9e2df30 'long'
|-TypedefDecl 0x560cb9e9b3c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x560cb9e9b370 '__clockid_t' sugar
|   |-Typedef 0x560cb9e95ab8 '__clockid_t'
|   `-BuiltinType 0x560cb9e2df10 'int'
|-TypedefDecl 0x560cb9e9b458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560cb9e9b420 '__timer_t' sugar
|   |-Typedef 0x560cb9e95b28 '__timer_t'
|   `-PointerType 0x560cb9e2e630 'void *'
|     `-BuiltinType 0x560cb9e2de70 'void'
|-RecordDecl 0x560cb9e9b4b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x560cb9e9b570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x560cb9e9b5d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x560cb9e9b640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560cb9e9b6a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560cb9e9b710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x560cb9e9b778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560cb9e9b7e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x560cb9e9b848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560cb9e9b8b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560cb9e9b918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x560cb9e9b980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560cb9e9b9d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x560cb9e9ba98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560cb9e9bb08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560cb9e9bbb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x560cb9e9bd80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560cb9e9be20 <col:45>
|-FunctionDecl 0x560cb9e9c000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560cb9e9bef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x560cb9e9c0a8 <col:54>
|-FunctionDecl 0x560cb9e9c2a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560cb9e9c110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x560cb9e9c188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x560cb9e9c358 <line:158:22>
| `-ConstAttr 0x560cb9e9cff0 <col:63>
|-FunctionDecl 0x560cb9e9d1f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560cb9e9d0e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560cb9e9d298 <col:56>
|-FunctionDecl 0x560cb9e9d640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560cb9e9d308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x560cb9e9d380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560cb9e9d400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560cb9e9d4f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560cb9e9d700 <col:54>
|-RecordDecl 0x560cb9e9d758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x560cb9e9d808 parent 0x560cb9e2de18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x560cb9e9da68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560cb9e9db08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x560cb9e9db70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560cb9e9dbd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x560cb9e9dcc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x560cb9e9dde8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x560cb9e9dd90 'struct __locale_struct *'
|   `-ElaboratedType 0x560cb9e9dd20 'struct __locale_struct' sugar
|     `-RecordType 0x560cb9e9d7e0 'struct __locale_struct'
|       `-Record 0x560cb9e9d758 '__locale_struct'
|-TypedefDecl 0x560cb9e9de98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x560cb9e9de60 '__locale_t' sugar
|   |-Typedef 0x560cb9e9dde8 '__locale_t'
|   `-PointerType 0x560cb9e9dd90 'struct __locale_struct *'
|     `-ElaboratedType 0x560cb9e9dd20 'struct __locale_struct' sugar
|       `-RecordType 0x560cb9e9d7e0 'struct __locale_struct'
|         `-Record 0x560cb9e9d758 '__locale_struct'
|-FunctionDecl 0x560cb9e9f2a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x560cb9e9df08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x560cb9e9df80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560cb9e9f028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x560cb9e9f0b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560cb9e9f130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x560cb9e9f368 <col:40>
|-FunctionDecl 0x560cb9e9f558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560cb9e9f430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x560cb9e9f600 <col:66>
|-FunctionDecl 0x560cb9e9f710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560cb9e9f668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x560cb9e9f7b8 <col:69>
|-FunctionDecl 0x560cb9e9f9e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560cb9e9f820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560cb9e9f8b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560cb9e9fa98 <col:52>
|-FunctionDecl 0x560cb9e9fc40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560cb9e9fb00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560cb9e9fb90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560cb9e9fcf0 <col:55>
|-FunctionDecl 0x560cb9e9fe88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x560cb9e9fd70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x560cb9e9ff30 <col:62>
|-FunctionDecl 0x560cb9ea0168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x560cb9e9ff98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x560cb9ea0210 <col:60>
|-FunctionDecl 0x560cb9ea0438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560cb9ea0290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560cb9ea0310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x560cb9ea04e8 <col:44>
|-FunctionDecl 0x560cb9ea06f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560cb9ea0550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560cb9ea05d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x560cb9ea07a8 <col:49>
|-VarDecl 0x560cb9ea08a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x560cb9ea0928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x560cb9ea09a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x560cb9ea0a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x560cb9ea0ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x560cb9ea0c40 <col:42>
|-VarDecl 0x560cb9ea0cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x560cb9ea0d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x560cb9ea0eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x560cb9ea0da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x560cb9ea0f60 <col:57>
|-FunctionDecl 0x560cb9ea10d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560cb9ea0fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560cb9ea1178 <col:56>
|-FunctionDecl 0x560cb9ea1288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560cb9ea11f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x560cb9ea1330 <col:59>
|-FunctionDecl 0x560cb9ea1438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x560cb9ea13a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x560cb9ea14e0 <col:48>
| `-ConstAttr 0x560cb9ea1538 <col:89>
|-FunctionDecl 0x560cb9ea1798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560cb9ea15e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x560cb9ea1678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x560cb9ea19f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560cb9ea1888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560cb9ea1918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x560cb9ea1aa8 <col:88>
|-FunctionDecl 0x560cb9ea1c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560cb9ea1b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560cb9ea1ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x560cb9ea1cf0 <col:88>
|-FunctionDecl 0x560cb9ea1f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x560cb9ea1d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560cb9ea1de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x560cb9ea1fb8 <line:209:22>
|-FunctionDecl 0x560cb9ea2358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560cb9ea2020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560cb9ea20e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x560cb9ea2170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x560cb9ea2200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x560cb9ea2658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x560cb9ea2458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x560cb9ea2530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x560cb9ea2708 <col:85>
|-FunctionDecl 0x560cb9ea2af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x560cb9ea2770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560cb9ea28a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x560cb9ea29b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x560cb9ea2bb0 <col:52>
|-FunctionDecl 0x560cb9ea2d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x560cb9ea2c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560cb9ea2dd0 <col:61>
|-FunctionDecl 0x560cb9ea3248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x560cb9ea2e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560cb9ea2eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x560cb9ea2fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x560cb9ea30f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x560cb9ea3308 <col:62>
|-FunctionDecl 0x560cb9ea3528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x560cb9ea3370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560cb9ea3400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x560cb9ea35d8 <line:222:22>
|-FunctionDecl 0x560cb9ea36d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x560cb9ea3640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560cb9ea3780 <col:65>
|-TypedefDecl 0x560cb9ea37f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x560cb9e2dfd0 'unsigned long'
|-RecordDecl 0x560cb9ea3848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x560cb9ea3990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560cb9ea39f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560cb9ea3aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x560cb9ea3a50 'union pthread_attr_t' sugar
|   `-RecordType 0x560cb9ea38d0 'union pthread_attr_t'
|     `-Record 0x560cb9ea3848 'pthread_attr_t'
|-RecordDecl 0x560cb9ea3b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560cb9ea3c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560cb9ea3cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x560cb9ea3da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560cb9ea3d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x560cb9ea3b80 'struct __pthread_internal_list'
|     `-Record 0x560cb9ea3b00 '__pthread_internal_list'
|-RecordDecl 0x560cb9ea3e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x560cb9ea3eb8 parent 0x560cb9e2de18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x560cb9ea3f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560cb9ea3ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560cb9ea4060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560cb9ea8110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560cb9ea8178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560cb9ea81e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x560cb9ea8268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x560cb9ea8320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x560cb9ea8410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x560cb9ea8478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560cb9ea8600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x560cb9ea85a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x560cb9ea3e90 'pthread_mutex_t'
|     `-Record 0x560cb9ea3e10 ''
|-RecordDecl 0x560cb9ea8670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x560cb9ea87b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560cb9ea8818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560cb9ea88d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x560cb9ea8870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x560cb9ea86f0 'pthread_mutexattr_t'
|     `-Record 0x560cb9ea8670 ''
|-RecordDecl 0x560cb9ea8940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x560cb9ea89e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x560cb9ea8ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560cb9ea8b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x560cb9ea8b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x560cb9ea8be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x560cb9ea8c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x560cb9ea8cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x560cb9ea8d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x560cb9ea8d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x560cb9ea8e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_7/rfi010_power.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_7/rfi010_power.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x560cb9ea8f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x560cb9ea8f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x560cb9eaa130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x560cb9ea9070 'union pthread_cond_t' sugar
|   `-RecordType 0x560cb9ea89c0 'pthread_cond_t'
|     `-Record 0x560cb9ea8940 ''
|-RecordDecl 0x560cb9eaa1a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x560cb9eaa2a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560cb9eaa308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560cb9eaa3c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x560cb9eaa360 'union pthread_condattr_t' sugar
|   `-RecordType 0x560cb9eaa220 'pthread_condattr_t'
|     `-Record 0x560cb9eaa1a0 ''
|-TypedefDecl 0x560cb9eaa448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x560cb9e2dfb0 'unsigned int'
|-TypedefDecl 0x560cb9eaa4b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x560cb9e2df10 'int'
|-RecordDecl 0x560cb9eaa510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x560cb9eaa5b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x560cb9eaa680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560cb9eaa6e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x560cb9eaa750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x560cb9eaa7b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x560cb9eaa820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x560cb9eaa888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x560cb9eaa8f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x560cb9eaa958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x560cb9eaa9c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x560cb9eaaa28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x560cb9eaaa90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x560cb9eaab40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_7/rfi010_power.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_7/rfi010_power.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x560cb9eaabe8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560cb9eaac50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560cb9eaada0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x560cb9eaad40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x560cb9eaa590 'pthread_rwlock_t'
|     `-Record 0x560cb9eaa510 ''
|-RecordDecl 0x560cb9eaae10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x560cb9eaaf50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x560cb9eaafb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560cb9eab070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x560cb9eab010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x560cb9eaae90 'pthread_rwlockattr_t'
|     `-Record 0x560cb9eaae10 ''
|-TypedefDecl 0x560cb9eac140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x560cb9e2df14 'volatile int' volatile
|   `-BuiltinType 0x560cb9e2df10 'int'
|-RecordDecl 0x560cb9eac198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x560cb9eac2e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x560cb9eac348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560cb9eac400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x560cb9eac3a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x560cb9eac220 'pthread_barrier_t'
|     `-Record 0x560cb9eac198 ''
|-RecordDecl 0x560cb9eac470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x560cb9eac570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560cb9eac5d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560cb9eac690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560cb9eac630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560cb9eac4f0 'pthread_barrierattr_t'
|     `-Record 0x560cb9eac470 ''
|-TypedefDecl 0x560cb9eac7a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x560cb9eac740 'long [8]' 8 
|   `-BuiltinType 0x560cb9e2df30 'long'
|-EnumDecl 0x560cb9eac800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x560cb9eac8c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560cb9eac918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x560cb9eac968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x560cb9eaca38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x560cb9eaca88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560cb9eacad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560cb9eacb28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560cb9eacbb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x560cb9eacb98 <col:26> 'int'
| |   `-DeclRefExpr 0x560cb9eacb78 <col:26> 'int' EnumConstant 0x560cb9eaca38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560cb9eacc38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560cb9eacc20 <col:29> 'int'
| |   `-DeclRefExpr 0x560cb9eacc00 <col:29> 'int' EnumConstant 0x560cb9eaca88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x560cb9eaccc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x560cb9eacca8 <col:30> 'int'
| |   `-DeclRefExpr 0x560cb9eacc88 <col:30> 'int' EnumConstant 0x560cb9eacad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560cb9eacd48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560cb9eacd30 <col:27> 'int'
|     `-DeclRefExpr 0x560cb9eacd10 <col:27> 'int' EnumConstant 0x560cb9eacbb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x560cb9eacd98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x560cb9eace68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560cb9eacef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x560cb9eaced8 <col:30> 'int'
| |   `-DeclRefExpr 0x560cb9eaceb8 <col:30> 'int' EnumConstant 0x560cb9eace68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560cb9eacf40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x560cb9eacfc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x560cb9eacfb0 <col:29> 'int'
|     `-DeclRefExpr 0x560cb9eacf90 <col:29> 'int' EnumConstant 0x560cb9eacf40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560cb9ead018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x560cb9ead0e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560cb9ead150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x560cb9ead1a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560cb9ead1f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x560cb9ead2b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x560cb9ead308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x560cb9ead358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560cb9ead3e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x560cb9ead3c8 <col:31> 'int'
|     `-DeclRefExpr 0x560cb9ead3a8 <col:31> 'int' EnumConstant 0x560cb9ead2b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x560cb9ead430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x560cb9ead4f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x560cb9ead548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x560cb9ead598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x560cb9ead668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560cb9ead6b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x560cb9ead708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x560cb9ead7d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x560cb9ead828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560cb9ead878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560cb9eadab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x560cb9eadb20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560cb9eadb88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x560cb9eadca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x560cb9eadcf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x560cb9eaddc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x560cb9eade18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x560cb9eade68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x560cb9eadf38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x560cb9eadf88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x560cb9eae5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x560cb9eae080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x560cb9eae1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cb9eae3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x560cb9eae420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x560cb9eae678 <col:47>
| |-NonNullAttr 0x560cb9eae6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x560cb9eae708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x560cb9eae830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x560cb9eae760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x560cb9eaea88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x560cb9eae8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x560cb9eae968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x560cb9eaec58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x560cb9eaeb48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x560cb9eaed00 <col:60>
|-FunctionDecl 0x560cb9eaee50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x560cb9eaeef0 <col:54>
| `-ConstAttr 0x560cb9eaef48 <col:95>
|-FunctionDecl 0x560cb9eb0990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x560cb9eaef80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560cb9eaeff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x560cb9eb0a40 <line:395:19>
| `-ConstAttr 0x560cb9eb0a98 <col:60>
|-FunctionDecl 0x560cb9eb0c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560cb9eb0b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560cb9eb0d10 <col:71>
| `-NonNullAttr 0x560cb9eb0d68 <col:112, col:126> 1
|-FunctionDecl 0x560cb9eb0e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560cb9eb0db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560cb9eb0f18 <line:398:22>
| `-NonNullAttr 0x560cb9eb0f70 <col:63, col:77> 1
|-FunctionDecl 0x560cb9eb1198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x560cb9eb0fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560cb9eb1038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x560cb9eb1248 <line:401:22>
| `-NonNullAttr 0x560cb9eb12a0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9eb14a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560cb9eb12e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cb9eb1368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x560cb9eb1558 <line:404:22>
| `-NonNullAttr 0x560cb9eb15b0 <col:63, col:77> 1
|-FunctionDecl 0x560cb9eb1808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x560cb9eb15f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560cb9eb16a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x560cb9eb18b8 <line:407:22>
| `-NonNullAttr 0x560cb9eb1910 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9eb2b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560cb9eb29b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cb9eb2a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560cb9eb2c18 <line:410:22>
| `-NonNullAttr 0x560cb9eb2c70 <col:63, col:77> 1
|-FunctionDecl 0x560cb9eb2ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560cb9eb2cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cb9eb2d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560cb9eb2f58 <line:413:22>
| `-NonNullAttr 0x560cb9eb2fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9eb31e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560cb9eb2ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cb9eb3088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x560cb9eb3298 <col:37>
| `-NonNullAttr 0x560cb9eb32f0 <col:78, col:95> 1 2
|-FunctionDecl 0x560cb9eb34d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cb9eb3338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cb9eb33b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x560cb9eb3588 <line:419:22>
| `-NonNullAttr 0x560cb9eb35e0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9eb3768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560cb9eb3628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cb9eb36a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x560cb9eb3818 <line:421:22>
| `-NonNullAttr 0x560cb9eb3870 <col:63, col:77> 1
|-FunctionDecl 0x560cb9eb3a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cb9eb38b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cb9eb3938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x560cb9eb3ae8 <line:424:22>
| `-NonNullAttr 0x560cb9eb3b40 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9eb3cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560cb9eb3b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cb9eb3c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560cb9eb3d78 <line:427:22>
| `-NonNullAttr 0x560cb9eb3dd0 <col:63, col:77> 1
|-FunctionDecl 0x560cb9eb3f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cb9eb3e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cb9eb3e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560cb9eb4028 <line:430:22>
| `-NonNullAttr 0x560cb9eb4080 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9eb4208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560cb9eb40c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cb9eb4148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x560cb9eb42b8 <line:432:22>
| `-NonNullAttr 0x560cb9eb4310 <col:63, col:77> 1
|-FunctionDecl 0x560cb9eb4538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x560cb9eb4358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cb9eb43d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560cb9eb45e8 <line:435:22>
| |-NonNullAttr 0x560cb9eb4640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x560cb9eb4678 <col:100> "" ""
|-FunctionDecl 0x560cb9eb4888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560cb9eb46c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cb9eb4748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x560cb9eb4938 <line:438:22>
| |-NonNullAttr 0x560cb9eb4990 <col:63, col:77> 1
| `-DeprecatedAttr 0x560cb9eb49d8 <col:97> "" ""
|-FunctionDecl 0x560cb9eb4bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560cb9eb4a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cb9eb4aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560cb9eb4c78 <line:441:22>
| `-NonNullAttr 0x560cb9eb4cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9eb4e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560cb9eb4d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cb9eb4d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560cb9eb4f00 <line:444:22>
| `-NonNullAttr 0x560cb9eb4f58 <col:63, col:77> 1
|-FunctionDecl 0x560cb9eb5248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560cb9eb4fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cb9eb5028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x560cb9eb50a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560cb9eb5300 <line:448:22>
| `-NonNullAttr 0x560cb9eb5358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x560cb9eb5608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x560cb9eb53b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cb9eb5430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x560cb9eb54a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560cb9eb56c0 <col:43>
| `-NonNullAttr 0x560cb9eb5718 <col:84, col:98> 1
|-FunctionDecl 0x560cb9eb5a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560cb9eb5768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560cb9eb57e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x560cb9eb5878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x560cb9eb5ad8 <line:453:22>
| `-NonNullAttr 0x560cb9eb5b30 <col:63, col:77> 3
|-FunctionDecl 0x560cb9eb5e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560cb9eb5b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560cb9eb5bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x560cb9eb5c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560cb9eb5ec0 <line:457:22>
| `-NonNullAttr 0x560cb9eb5f18 <col:63, col:80> 2 3
|-FunctionDecl 0x560cb9eb6108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x560cb9eb5f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560cb9eb5fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x560cb9eb61b8 <line:459:22>
|-FunctionDecl 0x560cb9eb6588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x560cb9eb6280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x560cb9eb6420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x560cb9eb6638 <col:52, col:69> 1 2
|-FunctionDecl 0x560cb9eb67e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x560cb9eb66c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x560cb9eb6740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x560cb9eb69f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x560cb9eb68a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x560cb9eb6928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x560cb9eb6b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x560cb9eb6ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x560cb9eb6c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x560cb9eb6d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x560cb9eb6dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x560cb9eb6ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x560cb9eb6f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x560cb9eb7100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_7/rfi010_power.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x560cb9eb71f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x560cb9eb72b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x560cb9eb7250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x560cb9eb6db0 '__pthread_unwind_buf_t'
| |   `-Record 0x560cb9eb6d28 ''
| `-AlignedAttr 0x560cb9eb7308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x560cb9eb7380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x560cb9eb74e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x560cb9eb7548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x560cb9eb75b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x560cb9eb7618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x560cb9eb7820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560cb9eb7710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560cb9eb7a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560cb9eb78d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560cb9eb7bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560cb9eb7ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x560cb9eb7c68 <line:488:22>
|-RecordDecl 0x560cb9eb7cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x560cb9eb7fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x560cb9eb7e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x560cb9eb7eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x560cb9eb8088 <col:86>
| `-ReturnsTwiceAttr 0x560cb9eb80e0 <col:12> Implicit
|-FunctionDecl 0x560cb9eb8408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560cb9eb81b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x560cb9eb82c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x560cb9eb84b8 <line:494:22>
| `-NonNullAttr 0x560cb9eb8510 <col:63, col:77> 1
|-FunctionDecl 0x560cb9eb8688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560cb9eb8558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560cb9eb8730 <line:496:22>
| `-NonNullAttr 0x560cb9eb8788 <col:63, col:77> 1
|-FunctionDecl 0x560cb9eb8890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560cb9eb87d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560cb9eb8938 <line:498:22>
| `-NonNullAttr 0x560cb9eb8990 <col:52, col:66> 1
|-FunctionDecl 0x560cb9eb9ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560cb9eb9a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560cb9eb9b80 <line:500:22>
| `-NonNullAttr 0x560cb9eb9bd8 <col:52, col:66> 1
|-FunctionDecl 0x560cb9eb9e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560cb9eb9c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560cb9eb9cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560cb9eb9ec8 <col:36>
| `-NonNullAttr 0x560cb9eb9f20 <col:66, col:83> 1 2
|-FunctionDecl 0x560cb9eba020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560cb9eb9f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560cb9eba0c8 <line:505:22>
| `-NonNullAttr 0x560cb9eba120 <col:52, col:66> 1
|-FunctionDecl 0x560cb9eba3b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cb9eba1d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560cb9eba250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560cb9eba468 <line:509:22>
| `-NonNullAttr 0x560cb9eba4c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9eba788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x560cb9eba508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560cb9eba588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x560cb9eba608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x560cb9eba840 <line:513:22>
| `-NonNullAttr 0x560cb9eba898 <col:63, col:80> 1 3
|-FunctionDecl 0x560cb9ebaa30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560cb9eba8e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560cb9ebaad8 <line:515:22>
| `-NonNullAttr 0x560cb9ebab30 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ebad18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560cb9ebabe0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560cb9ebadc0 <line:517:22>
| `-NonNullAttr 0x560cb9ebae18 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ebaf20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560cb9ebae68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560cb9ebafc8 <line:519:22>
| `-NonNullAttr 0x560cb9ebb020 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ebb248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cb9ebb068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560cb9ebb0e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x560cb9ebb2f8 <line:523:22>
| `-NonNullAttr 0x560cb9ebb350 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9ebb558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560cb9ebb398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cb9ebb418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x560cb9ebb608 <line:526:22>
| `-NonNullAttr 0x560cb9ebb660 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ebb808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cb9ebb6a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560cb9ebb728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560cb9ebb8b8 <line:529:22>
| `-NonNullAttr 0x560cb9ebb910 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9ebbb00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560cb9ebb958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cb9ebba40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560cb9ebbbb0 <line:531:22>
| `-NonNullAttr 0x560cb9ebbc08 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ebbdb8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cb9ebbc58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560cb9ebbcd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560cb9ebbe68 <line:535:22>
| `-NonNullAttr 0x560cb9ebbec0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9ebc048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560cb9ebbf08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cb9ebbf88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560cb9ebc0f8 <line:538:22>
| `-NonNullAttr 0x560cb9ebc150 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ebc2f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cb9ebc198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560cb9ebc218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560cb9ebc3a8 <line:542:22>
| `-NonNullAttr 0x560cb9ebc400 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9ebc588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560cb9ebc448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cb9ebc4c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x560cb9ebc638 <line:545:22>
| `-NonNullAttr 0x560cb9ebc690 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ebc878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560cb9ebc6d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cb9ebc758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560cb9ebc928 <line:548:22>
| `-NonNullAttr 0x560cb9ebc980 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9ebdb38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560cb9ebc9c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cb9ebda78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x560cb9ebdbe8 <line:551:22>
| `-NonNullAttr 0x560cb9ebdc40 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ebdf78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x560cb9ebdd20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560cb9ebde30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x560cb9ebe028 <col:29>
| `-NonNullAttr 0x560cb9ebe080 <col:70, col:84> 1
|-FunctionDecl 0x560cb9ebe1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cb9ebe0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cb9ebe2a0 <line:556:22>
| `-NonNullAttr 0x560cb9ebe2f8 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ebe400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cb9ebe348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cb9ebe4a8 <line:558:22>
| `-NonNullAttr 0x560cb9ebe500 <col:52, col:66> 1
|-FunctionDecl 0x560cb9ebe600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cb9ebe548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cb9ebe6a8 <line:560:19>
| `-NonNullAttr 0x560cb9ebe700 <col:49, col:63> 1
|-FunctionDecl 0x560cb9ebe938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560cb9ebe748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560cb9ebe7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560cb9ebe9e8 <col:39>
| `-NonNullAttr 0x560cb9ebea70 <col:69, col:86> 1 2
|-FunctionDecl 0x560cb9ebeb70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cb9ebeab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cb9ebec18 <line:565:22>
| `-NonNullAttr 0x560cb9ebec70 <col:52, col:66> 1
|-FunctionDecl 0x560cb9ebed70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cb9ebecb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cb9ebee18 <line:567:22>
| `-NonNullAttr 0x560cb9ebee70 <col:52, col:66> 1
|-FunctionDecl 0x560cb9ebf028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560cb9ebeeb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560cb9ebef48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560cb9ebf0d8 <col:39>
| `-NonNullAttr 0x560cb9ebf130 <col:69, col:86> 1 2
|-FunctionDecl 0x560cb9ebf230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cb9ebf178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cb9ebf2d8 <line:572:22>
| `-NonNullAttr 0x560cb9ebf330 <col:52, col:66> 1
|-FunctionDecl 0x560cb9ebf518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560cb9ebf3e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560cb9ebf5c0 <line:574:22>
| `-NonNullAttr 0x560cb9ebf618 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ebf720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560cb9ebf668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560cb9ebf7c8 <line:576:22>
| `-NonNullAttr 0x560cb9ebf820 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ebfa80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cb9ebf868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560cb9ebf8e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x560cb9ebfb30 <line:580:22>
| `-NonNullAttr 0x560cb9ebfb88 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9ebfd98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560cb9ebfbd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560cb9ebfc58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x560cb9ebfe48 <line:583:22>
| `-NonNullAttr 0x560cb9ebfea0 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ec0048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cb9ebfee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560cb9ebff68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x560cb9ec00f8 <line:587:22>
| `-NonNullAttr 0x560cb9ec0150 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9ec02d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560cb9ec0198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560cb9ec0218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x560cb9ec0388 <col:36>
| `-NonNullAttr 0x560cb9ec03e0 <col:77, col:91> 1
|-FunctionDecl 0x560cb9ec0718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x560cb9ec04c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560cb9ec05d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x560cb9ec07c8 <line:592:22>
| `-NonNullAttr 0x560cb9ec0820 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ec0998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560cb9ec0868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560cb9ec0a40 <line:594:22>
| `-NonNullAttr 0x560cb9ec0ac0 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ec0bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560cb9ec0b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560cb9ec0c68 <line:596:22>
| `-NonNullAttr 0x560cb9ec0cc0 <col:52, col:66> 1
|-FunctionDecl 0x560cb9ec0dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560cb9ec0d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560cb9ec0e68 <line:598:22>
| `-NonNullAttr 0x560cb9ec0ec0 <col:52, col:66> 1
|-FunctionDecl 0x560cb9ec10e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x560cb9ec0f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560cb9ec0f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x560cb9ec1198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x560cb9ec14c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560cb9ec1218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560cb9ec1290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560cb9ec1320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x560cb9ec1580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x560cb9ec1798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560cb9ec1660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560cb9ec1840 <line:607:22>
| `-NonNullAttr 0x560cb9ec1898 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ec19a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560cb9ec18e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560cb9ec1a48 <line:609:22>
| `-NonNullAttr 0x560cb9ec1ad0 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ec1cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cb9ec1b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560cb9ec1b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x560cb9ec1da8 <line:613:22>
| `-NonNullAttr 0x560cb9ec1e00 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9ec2008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x560cb9ec1e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560cb9ec1ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x560cb9ec20b8 <col:37>
| `-NonNullAttr 0x560cb9ec2110 <col:78, col:92> 1
|-FunctionDecl 0x560cb9ec2328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x560cb9ec2158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560cb9ec2200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x560cb9ec23d8 <line:619:22>
| `-NonNullAttr 0x560cb9ec2430 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9ec25f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x560cb9ec2478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560cb9ec24f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x560cb9ec26a8 <line:622:22>
| `-NonNullAttr 0x560cb9ec2700 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ec29a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x560cb9ec27e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x560cb9ec2860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x560cb9ec2a58 <line:624:22>
| `-NonNullAttr 0x560cb9ec2ae0 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ec2c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560cb9ec2b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560cb9ec2d00 <line:626:22>
| `-NonNullAttr 0x560cb9ec2d58 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ec2e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560cb9ec2da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560cb9ec2f08 <line:628:22>
| `-NonNullAttr 0x560cb9ec2f60 <col:52, col:66> 1
|-FunctionDecl 0x560cb9ec3060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560cb9ec2fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560cb9ec3108 <line:630:22>
| `-NonNullAttr 0x560cb9ec3160 <col:52, col:66> 1
|-FunctionDecl 0x560cb9ec3260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560cb9ec31a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560cb9ec3308 <line:632:22>
| `-NonNullAttr 0x560cb9ec3360 <col:52, col:66> 1
|-FunctionDecl 0x560cb9ec3738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x560cb9ec3440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x560cb9ec3550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560cb9ec35d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x560cb9ec37f0 <line:636:22>
| `-NonNullAttr 0x560cb9ec3848 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ec39c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560cb9ec3898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560cb9ec3a70 <line:638:22>
| `-NonNullAttr 0x560cb9ec4b00 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ec4c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560cb9ec4b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560cb9ec4ca8 <line:640:22>
| `-NonNullAttr 0x560cb9ec4d00 <col:52, col:66> 1
|-FunctionDecl 0x560cb9ec4ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560cb9ec4db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560cb9ec4f90 <line:642:22>
| `-NonNullAttr 0x560cb9ec4fe8 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ec50f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560cb9ec5038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560cb9ec5198 <line:644:22>
| `-NonNullAttr 0x560cb9ec51f0 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ec5418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cb9ec5238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560cb9ec52b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x560cb9ec54c8 <line:648:22>
| `-NonNullAttr 0x560cb9ec5520 <col:63, col:80> 1 2
|-FunctionDecl 0x560cb9ec5728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x560cb9ec5568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x560cb9ec55e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x560cb9ec57d8 <line:651:22>
| `-NonNullAttr 0x560cb9ec5830 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ec5b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x560cb9ec5910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x560cb9ec5a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x560cb9ec5c48 <line:654:22>
| `-NonNullAttr 0x560cb9ec5ca0 <col:63, col:77> 1
|-FunctionDecl 0x560cb9ec5df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x560cb9ec5ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560cb9ec5ea0 <col:69>
|-FunctionDecl 0x560cb9ec6018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x560cb9ec5f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560cb9ec60c0 <col:72>
|-FunctionDecl 0x560cb9ec62f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x560cb9ec6128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x560cb9ec61d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x560cb9ec63a8 <col:44>
|-FunctionDecl 0x560cb9ec65c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x560cb9ec6410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560cb9ec6488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x560cb9ec6678 <line:661:22>
| `-NonNullAttr 0x560cb9ec66d0 <col:63, col:77> 2
|-FunctionDecl 0x560cb9ec6b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x560cb9ec67b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x560cb9ec68c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x560cb9ec69d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x560cb9ec6be8 <col:47>
|-FunctionDecl 0x560cb9ec6cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x560cb9ec6c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560cb9ec6e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x560cb9ec6db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560cb9ec6f10 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x560cb9ec6fd0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x560cb9ec7090 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x560cb9ec7148 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x560cb9ec71c8 prev 0x560cb9ec7148 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x560cb9ec7230 <col:24> 'int' 0
|-VarDecl 0x560cb9ec7268 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x560cb9ec72e8 prev 0x560cb9ec7268 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x560cb9ec7350 <col:27> 'int' 0
|-VarDecl 0x560cb9ec7388 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x560cb9ec7408 prev 0x560cb9ec7388 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x560cb9ec7470 <col:27> 'int' 0
|-VarDecl 0x560cb9ec74a8 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x560cb9ec7528 prev 0x560cb9ec74a8 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x560cb9ec7590 <col:27> 'int' 0
|-VarDecl 0x560cb9ec75c0 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x560cb9ec7638 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x560cb9ec76b8 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x560cb9ec7738 prev 0x560cb9ec76b8 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x560cb9ec77a0 <col:9> 'int' 0
|-VarDecl 0x560cb9ec77d8 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x560cb9ec7858 prev 0x560cb9ec77d8 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x560cb9ec78c0 <col:9> 'int' 0
|-VarDecl 0x560cb9ec78f0 <line:685:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x560cb9ec7970 <line:686:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x560cb9ec79e8 <line:687:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x560cb9ec7a60 <line:688:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x560cb9ec7b00 <line:689:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x560cb9ec7b78 <line:690:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x560cb9ec7bf0 <line:691:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x560cb9ec7c68 <line:692:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x560cb9ec7ce0 <line:693:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x560cb9ec7d60 <line:694:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x560cb9ec7de0 <line:695:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x560cb9ec7e58 <line:696:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x560cb9ec7ed8 <line:697:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x560cb9ec7f50 <line:698:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x560cb9ec7fc8 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x560cb9ec8040 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x560cb9ec8158 prev 0x560cb9ec6cf0 <line:701:1, line:730:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x560cb9ec80c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560cb9ecb198 <line:702:1, line:730:1>
|   |-CallExpr 0x560cb9ec8268 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cb9ec8250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ec8200 <col:3> 'void ()' Function 0x560cb9e6dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cb9ec82c8 <line:704:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560cb9ec8288 <col:3> 'int' lvalue Var 0x560cb9ec7738 'x' 'int'
|   | `-IntegerLiteral 0x560cb9ec82a8 <col:7> 'int' 1
|   |-CallExpr 0x560cb9ec8320 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cb9ec8308 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ec82e8 <col:3> 'void ()' Function 0x560cb9e6e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cb9ec8378 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cb9ec8360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ec8340 <col:3> 'void ()' Function 0x560cb9e6dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x560cb9ec83d0 <line:707:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cb9ec83b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ec8398 <col:3> 'void ()' Function 0x560cb9e6e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cb9ec8428 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cb9ec8410 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ec83f0 <col:3> 'void ()' Function 0x560cb9e6dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cb9ec84f8 <line:709:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ec8448 <col:3> '_Bool' lvalue Var 0x560cb9ec7fc8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x560cb9ec84d8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560cb9ec84c0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560cb9ec8468 <col:19> '_Bool (void)' Function 0x560cb9e6d770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560cb9ec8590 <line:710:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ec8518 <col:3> '_Bool' lvalue Var 0x560cb9ec8040 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x560cb9ec8570 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560cb9ec8558 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560cb9ec8538 <col:19> '_Bool (void)' Function 0x560cb9e6d770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560cb9ec8608 <line:711:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ec85b0 <col:3> '_Bool' lvalue Var 0x560cb9ec78f0 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9ec85f0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cb9ec85d0 <col:21> '_Bool' lvalue Var 0x560cb9ec8040 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560cb9ec8680 <line:712:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560cb9ec8628 <col:3> 'int' lvalue Var 0x560cb9ec7970 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560cb9ec8668 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cb9ec8648 <col:15> 'int' lvalue Var 0x560cb9ec7858 'y' 'int'
|   |-BinaryOperator 0x560cb9ec8ab8 <line:713:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560cb9ec86a0 <col:3> 'int' lvalue Var 0x560cb9ec7858 'y' 'int'
|   | `-ConditionalOperator 0x560cb9ec8a88 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560cb9ec88b0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560cb9ec87d0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560cb9ec86f8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560cb9ec86e0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560cb9ec86c0 <col:8> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560cb9ec87b0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560cb9ec8748 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560cb9ec8730 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560cb9ec8710 <col:27> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x560cb9ec8798 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560cb9ec8780 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560cb9ec8760 <col:46> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560cb9ec8890 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560cb9ec8828 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560cb9ec8810 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560cb9ec87f0 <col:65> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x560cb9ec8878 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560cb9ec8860 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560cb9ec8840 <col:84> '_Bool' lvalue Var 0x560cb9ec7bf0 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x560cb9ec8a70 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cb9ec88d0 <col:101> 'int' lvalue Var 0x560cb9ec7858 'y' 'int'
|   |   `-ParenExpr 0x560cb9ec8a50 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560cb9ec8a20 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560cb9ec8990 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560cb9ec8948 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560cb9ec8930 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560cb9ec88f0 <col:106> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560cb9ec8978 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560cb9ec8960 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560cb9ec8910 <col:124> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560cb9ec89f0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cb9ec89b0 <col:141> 'int' lvalue Var 0x560cb9ec7de0 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560cb9ec8a08 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cb9ec89d0 <col:153> 'int' lvalue Var 0x560cb9ec7ed8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x560cb9ec8fe0 <line:714:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560cb9ec8ad8 <col:3> 'int' lvalue Var 0x560cb9ec7de0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x560cb9ec8fb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560cb9ec8f80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cb9ec8f68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cb9ec8b10 <col:15> '_Bool' lvalue Var 0x560cb9ec8040 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560cb9ec8f98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cb9ec8b30 <col:31> 'int' lvalue Var 0x560cb9ec7de0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x560cb9ec8f48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560cb9ec8f18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560cb9ec8d40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560cb9ec8c60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560cb9ec8b88 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560cb9ec8b70 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560cb9ec8b50 <col:45> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560cb9ec8c40 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560cb9ec8bd8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560cb9ec8bc0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560cb9ec8ba0 <col:64> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x560cb9ec8c28 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560cb9ec8c10 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560cb9ec8bf0 <col:83> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560cb9ec8d20 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560cb9ec8cb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560cb9ec8ca0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560cb9ec8c80 <col:102> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x560cb9ec8d08 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560cb9ec8cf0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560cb9ec8cd0 <col:121> '_Bool' lvalue Var 0x560cb9ec7bf0 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560cb9ec8f00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cb9ec8d60 <col:138> 'int' lvalue Var 0x560cb9ec7de0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x560cb9ec8ee0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560cb9ec8eb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560cb9ec8e20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560cb9ec8dd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560cb9ec8dc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560cb9ec8d80 <col:151> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560cb9ec8e08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560cb9ec8df0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560cb9ec8da0 <col:169> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x560cb9ec8e80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560cb9ec8e40 <col:186> 'int' lvalue Var 0x560cb9ec7de0 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560cb9ec8e98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560cb9ec8e60 <col:198> 'int' lvalue Var 0x560cb9ec7de0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x560cb9ec94f0 <line:715:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560cb9ec9000 <col:3> 'int' lvalue Var 0x560cb9ec7ed8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x560cb9ec94c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560cb9ec9490 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cb9ec9478 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cb9ec9020 <col:15> '_Bool' lvalue Var 0x560cb9ec8040 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560cb9ec94a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cb9ec9040 <col:31> 'int' lvalue Var 0x560cb9ec7ed8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x560cb9ec9458 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560cb9ec9428 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560cb9ec9250 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560cb9ec9170 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560cb9ec9098 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560cb9ec9080 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560cb9ec9060 <col:45> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560cb9ec9150 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560cb9ec90e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560cb9ec90d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560cb9ec90b0 <col:64> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x560cb9ec9138 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560cb9ec9120 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560cb9ec9100 <col:83> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560cb9ec9230 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560cb9ec91c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560cb9ec91b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560cb9ec9190 <col:102> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x560cb9ec9218 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560cb9ec9200 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560cb9ec91e0 <col:121> '_Bool' lvalue Var 0x560cb9ec7bf0 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560cb9ec9410 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cb9ec9270 <col:138> 'int' lvalue Var 0x560cb9ec7ed8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x560cb9ec93f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560cb9ec93c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560cb9ec9330 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560cb9ec92e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560cb9ec92d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560cb9ec9290 <col:151> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560cb9ec9318 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560cb9ec9300 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560cb9ec92b0 <col:169> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x560cb9ec9390 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560cb9ec9350 <col:186> 'int' lvalue Var 0x560cb9ec7ed8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560cb9ec93a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560cb9ec9370 <col:198> 'int' lvalue Var 0x560cb9ec7ed8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x560cb9ec9a98 <line:716:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ec9510 <col:3> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9ec9a80 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cb9ec9a50 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560cb9ec9a08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cb9ec99f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cb9ec9530 <col:20> '_Bool' lvalue Var 0x560cb9ec8040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cb9ec9a38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cb9ec9a20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cb9ec9550 <col:36> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560cb9ec99d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560cb9ec99a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560cb9ec9760 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cb9ec9680 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cb9ec95a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cb9ec9590 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cb9ec9570 <col:55> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cb9ec9660 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cb9ec95f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cb9ec95e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cb9ec95c0 <col:74> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560cb9ec9648 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cb9ec9630 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cb9ec9610 <col:93> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cb9ec9740 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cb9ec96d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cb9ec96c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cb9ec96a0 <col:112> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560cb9ec9728 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cb9ec9710 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cb9ec96f0 <col:131> '_Bool' lvalue Var 0x560cb9ec7bf0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560cb9ec9988 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cb9ec9970 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cb9ec9780 <col:148> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560cb9ec9950 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560cb9ec9920 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560cb9ec9840 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cb9ec97f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cb9ec97e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cb9ec97a0 <col:166> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cb9ec9828 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cb9ec9810 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cb9ec97c0 <col:184> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560cb9ec98d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cb9ec9890 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cb9ec9860 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cb9ec9908 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560cb9ec98f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560cb9ec98b8 <col:212> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cb9eca088 <line:717:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ec9ab8 <col:3> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9eca070 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cb9eca040 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560cb9ec9ff8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cb9ec9fe0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cb9ec9ad8 <col:20> '_Bool' lvalue Var 0x560cb9ec8040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cb9eca028 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cb9eca010 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cb9ec9b20 <col:36> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560cb9ec9fc0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560cb9ec9f90 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560cb9ec9d30 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cb9ec9c50 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cb9ec9b78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cb9ec9b60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cb9ec9b40 <col:55> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cb9ec9c30 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cb9ec9bc8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cb9ec9bb0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cb9ec9b90 <col:74> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560cb9ec9c18 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cb9ec9c00 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cb9ec9be0 <col:93> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cb9ec9d10 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cb9ec9ca8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cb9ec9c90 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cb9ec9c70 <col:112> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560cb9ec9cf8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cb9ec9ce0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cb9ec9cc0 <col:131> '_Bool' lvalue Var 0x560cb9ec7bf0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560cb9ec9f78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cb9ec9f60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cb9ec9d50 <col:148> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560cb9ec9f40 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560cb9ec9f10 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560cb9ec9e10 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cb9ec9dc8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cb9ec9db0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cb9ec9d70 <col:166> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cb9ec9df8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cb9ec9de0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cb9ec9d90 <col:184> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560cb9ec9ee0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cb9ec9e60 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cb9ec9e30 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cb9ec9ef8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560cb9ec9eb8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560cb9ec9e88 <col:219> 'int' 0
|   |-BinaryOperator 0x560cb9eca630 <line:718:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9eca0a8 <col:3> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9eca618 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cb9eca5e8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560cb9eca5a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cb9eca588 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cb9eca0c8 <col:20> '_Bool' lvalue Var 0x560cb9ec8040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cb9eca5d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cb9eca5b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cb9eca0e8 <col:36> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x560cb9eca568 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560cb9eca538 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560cb9eca2f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cb9eca218 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cb9eca140 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cb9eca128 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cb9eca108 <col:55> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cb9eca1f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cb9eca190 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cb9eca178 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cb9eca158 <col:74> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560cb9eca1e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cb9eca1c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cb9eca1a8 <col:93> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cb9eca2d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cb9eca270 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cb9eca258 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cb9eca238 <col:112> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560cb9eca2c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cb9eca2a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cb9eca288 <col:131> '_Bool' lvalue Var 0x560cb9ec7bf0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560cb9eca520 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cb9eca508 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cb9eca318 <col:148> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x560cb9eca4e8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560cb9eca4b8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560cb9eca3d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cb9eca390 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cb9eca378 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cb9eca338 <col:166> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cb9eca3c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cb9eca3a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cb9eca358 <col:184> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560cb9eca470 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cb9eca428 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cb9eca3f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cb9eca4a0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560cb9eca488 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560cb9eca450 <col:212> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560cb9ecac28 <line:719:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9eca650 <col:3> '_Bool' lvalue Var 0x560cb9ec7bf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9ecac10 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cb9ecabe0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560cb9ecab98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cb9ecab80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cb9eca670 <col:20> '_Bool' lvalue Var 0x560cb9ec8040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cb9ecabc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cb9ecabb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cb9eca690 <col:36> '_Bool' lvalue Var 0x560cb9ec7bf0 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x560cb9ecab60 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560cb9ecab30 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560cb9eca8a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cb9eca7c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cb9eca6e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cb9eca6d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cb9eca6b0 <col:55> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cb9eca7a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cb9eca738 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cb9eca720 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cb9eca700 <col:74> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560cb9eca788 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cb9eca770 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cb9eca750 <col:93> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cb9eca880 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cb9eca818 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cb9eca800 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cb9eca7e0 <col:112> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560cb9eca868 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cb9eca850 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cb9eca830 <col:131> '_Bool' lvalue Var 0x560cb9ec7bf0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560cb9ecaae8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cb9ecaad0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cb9eca8c0 <col:148> '_Bool' lvalue Var 0x560cb9ec7bf0 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x560cb9ecaab0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560cb9ecaa80 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560cb9eca980 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cb9eca938 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cb9eca920 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cb9eca8e0 <col:166> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cb9eca968 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cb9eca950 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cb9eca900 <col:184> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560cb9ecaa50 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cb9eca9d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cb9eca9a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cb9ecaa68 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560cb9ecaa28 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560cb9eca9f8 <col:219> 'int' 0
|   |-BinaryOperator 0x560cb9ecaca0 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560cb9ecac48 <col:3> 'int' lvalue Var 0x560cb9ec72e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x560cb9ecac88 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cb9ecac68 <col:25> 'int' lvalue Var 0x560cb9ec7858 'y' 'int'
|   |-BinaryOperator 0x560cb9ecadd0 <line:721:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560cb9ecacc0 <col:3> 'int' lvalue Var 0x560cb9ec7858 'y' 'int'
|   | `-ConditionalOperator 0x560cb9ecada0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560cb9ecad58 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cb9ecad40 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cb9ecace0 <col:7> '_Bool' lvalue Var 0x560cb9ec78f0 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560cb9ecad70 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cb9ecad00 <col:25> 'int' lvalue Var 0x560cb9ec7970 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560cb9ecad88 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560cb9ecad20 <col:37> 'int' lvalue Var 0x560cb9ec7858 'y' 'int'
|   |-BinaryOperator 0x560cb9ecae68 <line:722:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ecadf0 <col:3> '_Bool' lvalue Var 0x560cb9ec78f0 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560cb9ecae40 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560cb9ecae10 <col:28> 'int' 0
|   |-CallExpr 0x560cb9ecaec0 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cb9ecaea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ecae88 <col:3> 'void ()' Function 0x560cb9e6e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cb9ecaf18 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cb9ecaf00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ecaee0 <col:3> 'void ()' Function 0x560cb9e6dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x560cb9ecaf70 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cb9ecaf58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ecaf38 <col:3> 'void ()' Function 0x560cb9e6e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cb9ecafc8 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cb9ecafb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ecaf90 <col:3> 'void ()' Function 0x560cb9e6dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cb9ecb080 <line:727:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560cb9ecafe8 <col:3> 'int' lvalue Var 0x560cb9ec71c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560cb9ecb060 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560cb9ecb048 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cb9ecb008 <col:22> 'int' lvalue Var 0x560cb9ec71c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560cb9ecb028 <col:41> 'int' 1
|   |-CallExpr 0x560cb9ecb0d8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cb9ecb0c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ecb0a0 <col:3> 'void ()' Function 0x560cb9e6e060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560cb9ecb188 <line:729:3, col:36>
|     `-CallExpr 0x560cb9ecb168 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560cb9ecb150 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560cb9ecb0f8 <col:10> 'void *(void)' Function 0x560cb9e6dab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560cb9ecb330 prev 0x560cb9ec6e48 <line:731:1, line:774:1> line:731:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x560cb9ecb298 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560cb9ecf510 <line:732:1, line:774:1>
|   |-CallExpr 0x560cb9ecb410 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cb9ecb3f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ecb3d8 <col:3> 'void ()' Function 0x560cb9e6dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cb9ecb488 <line:734:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560cb9ecb430 <col:3> 'int' lvalue Var 0x560cb9ec7ed8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x560cb9ecb470 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cb9ecb450 <col:15> 'int' lvalue Var 0x560cb9ec7de0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x560cb9ecb4e8 <line:735:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560cb9ecb4a8 <col:3> 'int' lvalue Var 0x560cb9ec7de0 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x560cb9ecb4c8 <col:15> 'int' 1
|   |-BinaryOperator 0x560cb9ecb560 <line:736:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ecb508 <col:3> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9ecb548 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cb9ecb528 <col:20> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cb9ecb5f8 <line:737:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ecb580 <col:3> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x560cb9ecb5d0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560cb9ecb5a0 <col:27> 'int' 1
|   |-CallExpr 0x560cb9ecb778 <line:738:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x560cb9ecb760 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560cb9ecb618 <col:3> 'void (int)' Function 0x560cb9e6dd28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x560cb9ecb718 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x560cb9ecb6f8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x560cb9ecb6d8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x560cb9ecb690 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x560cb9ecb678 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560cb9ecb638 <col:23> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x560cb9ecb6c0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x560cb9ecb6a8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x560cb9ecb658 <col:41> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cb9ecb7f8 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ecb7a0 <col:3> '_Bool' lvalue Var 0x560cb9ec7b78 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9ecb7e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cb9ecb7c0 <col:20> '_Bool' lvalue Var 0x560cb9ec79e8 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x560cb9ecb870 <line:740:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ecb818 <col:3> '_Bool' lvalue Var 0x560cb9ec7bf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9ecb858 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cb9ecb838 <col:20> '_Bool' lvalue Var 0x560cb9ec7a60 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560cb9ecb8e8 <line:741:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ecb890 <col:3> '_Bool' lvalue Var 0x560cb9ec7c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9ecb8d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cb9ecb8b0 <col:20> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560cb9ecb980 <line:742:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ecb908 <col:3> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x560cb9ecb958 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560cb9ecb928 <col:27> 'int' 1
|   |-CallExpr 0x560cb9ecb9d8 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cb9ecb9c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ecb9a0 <col:3> 'void ()' Function 0x560cb9e6e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cb9ecba30 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cb9ecba18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ecb9f8 <col:3> 'void ()' Function 0x560cb9e6dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cb9ecbac8 <line:745:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ecba50 <col:3> '_Bool' lvalue Var 0x560cb9ec7fc8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x560cb9ecbaa8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560cb9ecba90 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560cb9ecba70 <col:19> '_Bool (void)' Function 0x560cb9e6d770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560cb9ecbb78 <line:746:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ecbae8 <col:3> '_Bool' lvalue Var 0x560cb9ec8040 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x560cb9ecbb58 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560cb9ecbb40 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560cb9ecbb08 <col:19> '_Bool (void)' Function 0x560cb9e6d770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560cb9ecbbf0 <line:747:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ecbb98 <col:3> '_Bool' lvalue Var 0x560cb9ec78f0 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9ecbbd8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cb9ecbbb8 <col:21> '_Bool' lvalue Var 0x560cb9ec8040 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560cb9ecbc68 <line:748:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560cb9ecbc10 <col:3> 'int' lvalue Var 0x560cb9ec7970 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560cb9ecbc50 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cb9ecbc30 <col:15> 'int' lvalue Var 0x560cb9ec7858 'y' 'int'
|   |-BinaryOperator 0x560cb9ecc0a0 <line:749:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560cb9ecbc88 <col:3> 'int' lvalue Var 0x560cb9ec7858 'y' 'int'
|   | `-ConditionalOperator 0x560cb9ecc070 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560cb9ecbe98 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560cb9ecbdb8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560cb9ecbce0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560cb9ecbcc8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560cb9ecbca8 <col:8> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560cb9ecbd98 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560cb9ecbd30 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560cb9ecbd18 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560cb9ecbcf8 <col:27> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x560cb9ecbd80 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560cb9ecbd68 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560cb9ecbd48 <col:46> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560cb9ecbe78 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560cb9ecbe10 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560cb9ecbdf8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560cb9ecbdd8 <col:65> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x560cb9ecbe60 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560cb9ecbe48 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560cb9ecbe28 <col:84> '_Bool' lvalue Var 0x560cb9ec7c68 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x560cb9ecc058 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cb9ecbeb8 <col:101> 'int' lvalue Var 0x560cb9ec7858 'y' 'int'
|   |   `-ParenExpr 0x560cb9ecc038 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560cb9ecc008 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560cb9ecbf78 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560cb9ecbf30 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560cb9ecbf18 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560cb9ecbed8 <col:106> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560cb9ecbf60 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560cb9ecbf48 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560cb9ecbef8 <col:124> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560cb9ecbfd8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cb9ecbf98 <col:141> 'int' lvalue Var 0x560cb9ec7de0 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560cb9ecbff0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cb9ecbfb8 <col:153> 'int' lvalue Var 0x560cb9ec7ed8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x560cb9ecc5b0 <line:750:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560cb9ecc0c0 <col:3> 'int' lvalue Var 0x560cb9ec7de0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x560cb9ecc580 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560cb9ecc550 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cb9ecc538 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cb9ecc0e0 <col:15> '_Bool' lvalue Var 0x560cb9ec8040 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560cb9ecc568 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cb9ecc100 <col:31> 'int' lvalue Var 0x560cb9ec7de0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x560cb9ecc518 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560cb9ecc4e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560cb9ecc310 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560cb9ecc230 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560cb9ecc158 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560cb9ecc140 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560cb9ecc120 <col:45> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560cb9ecc210 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560cb9ecc1a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560cb9ecc190 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560cb9ecc170 <col:64> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x560cb9ecc1f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560cb9ecc1e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560cb9ecc1c0 <col:83> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560cb9ecc2f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560cb9ecc288 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560cb9ecc270 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560cb9ecc250 <col:102> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x560cb9ecc2d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560cb9ecc2c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560cb9ecc2a0 <col:121> '_Bool' lvalue Var 0x560cb9ec7c68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560cb9ecc4d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cb9ecc330 <col:138> 'int' lvalue Var 0x560cb9ec7de0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x560cb9ecc4b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560cb9ecc480 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560cb9ecc3f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560cb9ecc3a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560cb9ecc390 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560cb9ecc350 <col:151> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560cb9ecc3d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560cb9ecc3c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560cb9ecc370 <col:169> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x560cb9ecc450 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560cb9ecc410 <col:186> 'int' lvalue Var 0x560cb9ec7de0 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560cb9ecc468 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560cb9ecc430 <col:198> 'int' lvalue Var 0x560cb9ec7de0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x560cb9eccac0 <line:751:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560cb9ecc5d0 <col:3> 'int' lvalue Var 0x560cb9ec7ed8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x560cb9ecca90 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560cb9ecca60 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cb9ecca48 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cb9ecc5f0 <col:15> '_Bool' lvalue Var 0x560cb9ec8040 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560cb9ecca78 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cb9ecc610 <col:31> 'int' lvalue Var 0x560cb9ec7ed8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x560cb9ecca28 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560cb9ecc9f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560cb9ecc820 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560cb9ecc740 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560cb9ecc668 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560cb9ecc650 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560cb9ecc630 <col:45> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560cb9ecc720 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560cb9ecc6b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560cb9ecc6a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560cb9ecc680 <col:64> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x560cb9ecc708 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560cb9ecc6f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560cb9ecc6d0 <col:83> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560cb9ecc800 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560cb9ecc798 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560cb9ecc780 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560cb9ecc760 <col:102> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x560cb9ecc7e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560cb9ecc7d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560cb9ecc7b0 <col:121> '_Bool' lvalue Var 0x560cb9ec7c68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560cb9ecc9e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cb9ecc840 <col:138> 'int' lvalue Var 0x560cb9ec7ed8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x560cb9ecc9c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560cb9ecc990 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560cb9ecc900 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560cb9ecc8b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560cb9ecc8a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560cb9ecc860 <col:151> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560cb9ecc8e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560cb9ecc8d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560cb9ecc880 <col:169> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x560cb9ecc960 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560cb9ecc920 <col:186> 'int' lvalue Var 0x560cb9ec7ed8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560cb9ecc978 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560cb9ecc940 <col:198> 'int' lvalue Var 0x560cb9ec7ed8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x560cb9ecd078 <line:752:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9eccae0 <col:3> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9ecd060 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cb9ecd030 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560cb9eccfe8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cb9eccfd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cb9eccb00 <col:20> '_Bool' lvalue Var 0x560cb9ec8040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cb9ecd018 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cb9ecd000 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cb9eccb20 <col:36> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560cb9eccfb0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560cb9eccf80 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560cb9eccd40 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cb9eccc60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cb9eccb88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cb9eccb70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cb9eccb50 <col:55> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cb9eccc40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cb9eccbd8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cb9eccbc0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cb9eccba0 <col:74> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x560cb9eccc28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cb9eccc10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cb9eccbf0 <col:93> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cb9eccd20 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cb9ecccb8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cb9eccca0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cb9eccc80 <col:112> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x560cb9eccd08 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cb9ecccf0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cb9ecccd0 <col:131> '_Bool' lvalue Var 0x560cb9ec7c68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x560cb9eccf68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cb9eccf50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cb9eccd60 <col:148> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560cb9eccf30 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560cb9eccf00 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560cb9ecce20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cb9eccdd8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cb9eccdc0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cb9eccd80 <col:166> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cb9ecce08 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cb9eccdf0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cb9eccda0 <col:184> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560cb9ecceb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cb9ecce70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cb9ecce40 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cb9eccee8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560cb9ecced0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560cb9ecce98 <col:212> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cb9ecd640 <line:753:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ecd098 <col:3> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9ecd628 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cb9ecd5f8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560cb9ecd5b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cb9ecd598 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cb9ecd0b8 <col:20> '_Bool' lvalue Var 0x560cb9ec8040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cb9ecd5e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cb9ecd5c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cb9ecd0d8 <col:36> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560cb9ecd578 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560cb9ecd548 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560cb9ecd2e8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cb9ecd208 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cb9ecd130 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cb9ecd118 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cb9ecd0f8 <col:55> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cb9ecd1e8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cb9ecd180 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cb9ecd168 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cb9ecd148 <col:74> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x560cb9ecd1d0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cb9ecd1b8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cb9ecd198 <col:93> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cb9ecd2c8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cb9ecd260 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cb9ecd248 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cb9ecd228 <col:112> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x560cb9ecd2b0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cb9ecd298 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cb9ecd278 <col:131> '_Bool' lvalue Var 0x560cb9ec7c68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x560cb9ecd530 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cb9ecd518 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cb9ecd308 <col:148> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560cb9ecd4f8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560cb9ecd4c8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560cb9ecd3c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cb9ecd380 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cb9ecd368 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cb9ecd328 <col:166> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cb9ecd3b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cb9ecd398 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cb9ecd348 <col:184> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560cb9ecd498 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cb9ecd418 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cb9ecd3e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cb9ecd4b0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560cb9ecd470 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560cb9ecd440 <col:219> 'int' 0
|   |-BinaryOperator 0x560cb9ecdc08 <line:754:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ecd660 <col:3> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9ecdbf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cb9ecdbc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560cb9ecdb78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cb9ecdb60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cb9ecd680 <col:20> '_Bool' lvalue Var 0x560cb9ec8040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cb9ecdba8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cb9ecdb90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cb9ecd6a0 <col:36> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x560cb9ecdb20 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560cb9ecdaf0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560cb9ecd8b0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cb9ecd7d0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cb9ecd6f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cb9ecd6e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cb9ecd6c0 <col:55> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cb9ecd7b0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cb9ecd748 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cb9ecd730 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cb9ecd710 <col:74> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x560cb9ecd798 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cb9ecd780 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cb9ecd760 <col:93> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cb9ecd890 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cb9ecd828 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cb9ecd810 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cb9ecd7f0 <col:112> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x560cb9ecd878 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cb9ecd860 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cb9ecd840 <col:131> '_Bool' lvalue Var 0x560cb9ec7c68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x560cb9ecdad8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cb9ecdac0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cb9ecd8d0 <col:148> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x560cb9ecdaa0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560cb9ecda70 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560cb9ecd990 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cb9ecd948 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cb9ecd930 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cb9ecd8f0 <col:166> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cb9ecd978 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cb9ecd960 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cb9ecd910 <col:184> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560cb9ecda28 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cb9ecd9e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cb9ecd9b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cb9ecda58 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560cb9ecda40 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560cb9ecda08 <col:212> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560cb9ece1d0 <line:755:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ecdc28 <col:3> '_Bool' lvalue Var 0x560cb9ec7c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9ece1b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cb9ece188 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560cb9ece140 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cb9ece128 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cb9ecdc48 <col:20> '_Bool' lvalue Var 0x560cb9ec8040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cb9ece170 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cb9ece158 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cb9ecdc68 <col:36> '_Bool' lvalue Var 0x560cb9ec7c68 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x560cb9ece108 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560cb9ece0d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560cb9ecde78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cb9ecdd98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cb9ecdcc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cb9ecdca8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cb9ecdc88 <col:55> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cb9ecdd78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cb9ecdd10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cb9ecdcf8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cb9ecdcd8 <col:74> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x560cb9ecdd60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cb9ecdd48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cb9ecdd28 <col:93> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cb9ecde58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cb9ecddf0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cb9ecddd8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cb9ecddb8 <col:112> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x560cb9ecde40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cb9ecde28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cb9ecde08 <col:131> '_Bool' lvalue Var 0x560cb9ec7c68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x560cb9ece0c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cb9ece0a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cb9ecde98 <col:148> '_Bool' lvalue Var 0x560cb9ec7c68 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x560cb9ece088 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560cb9ece058 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560cb9ecdf58 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cb9ecdf10 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cb9ecdef8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cb9ecdeb8 <col:166> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cb9ecdf40 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cb9ecdf28 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cb9ecded8 <col:184> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560cb9ece028 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cb9ecdfa8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cb9ecdf78 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cb9ece040 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560cb9ece000 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560cb9ecdfd0 <col:219> 'int' 0
|   |-BinaryOperator 0x560cb9ece248 <line:756:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560cb9ece1f0 <col:3> 'int' lvalue Var 0x560cb9ec7408 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x560cb9ece230 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cb9ece210 <col:25> 'int' lvalue Var 0x560cb9ec7858 'y' 'int'
|   |-BinaryOperator 0x560cb9ece378 <line:757:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560cb9ece268 <col:3> 'int' lvalue Var 0x560cb9ec7858 'y' 'int'
|   | `-ConditionalOperator 0x560cb9ece348 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560cb9ece300 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cb9ece2e8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cb9ece288 <col:7> '_Bool' lvalue Var 0x560cb9ec78f0 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560cb9ece318 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cb9ece2a8 <col:25> 'int' lvalue Var 0x560cb9ec7970 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560cb9ece330 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560cb9ece2c8 <col:37> 'int' lvalue Var 0x560cb9ec7858 'y' 'int'
|   |-BinaryOperator 0x560cb9ece410 <line:758:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ece398 <col:3> '_Bool' lvalue Var 0x560cb9ec78f0 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560cb9ece3e8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560cb9ece3b8 <col:28> 'int' 0
|   |-CallExpr 0x560cb9ece468 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cb9ece450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ece430 <col:3> 'void ()' Function 0x560cb9e6e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cb9ece4c0 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cb9ece4a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ece488 <col:3> 'void ()' Function 0x560cb9e6dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cb9ece538 <line:761:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560cb9ece4e0 <col:3> 'int' lvalue Var 0x560cb9ec7528 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x560cb9ece520 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cb9ece500 <col:25> 'int' lvalue Var 0x560cb9ec7738 'x' 'int'
|   |-CallExpr 0x560cb9ece590 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cb9ece578 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ece558 <col:3> 'void ()' Function 0x560cb9e6e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cb9ece5e8 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cb9ece5d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ece5b0 <col:3> 'void ()' Function 0x560cb9e6dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cb9ece8d0 <line:764:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560cb9ece608 <col:3> 'int' lvalue Var 0x560cb9ec7858 'y' 'int'
|   | `-ConditionalOperator 0x560cb9ece8a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560cb9ece6c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560cb9ece680 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560cb9ece668 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560cb9ece628 <col:7> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560cb9ece6b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560cb9ece698 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560cb9ece648 <col:25> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x560cb9ece888 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cb9ece6e8 <col:42> 'int' lvalue Var 0x560cb9ec7de0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x560cb9ece868 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560cb9ece838 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560cb9ece7a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560cb9ece760 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560cb9ece748 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560cb9ece708 <col:55> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560cb9ece790 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560cb9ece778 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560cb9ece728 <col:73> '_Bool' lvalue Var 0x560cb9ec7c68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560cb9ece808 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cb9ece7c8 <col:90> 'int' lvalue Var 0x560cb9ec7ed8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560cb9ece820 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cb9ece7e8 <col:102> 'int' lvalue Var 0x560cb9ec7858 'y' 'int'
|   |-BinaryOperator 0x560cb9ecead8 <line:765:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ece8f0 <col:3> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9eceac0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cb9ecea90 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560cb9ece9b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560cb9ece968 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560cb9ece950 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560cb9ece910 <col:20> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560cb9ece998 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560cb9ece980 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560cb9ece930 <col:38> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cb9ecea48 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cb9ecea00 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cb9ece9d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560cb9ecea78 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cb9ecea60 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cb9ecea28 <col:66> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cb9ecedd8 <line:766:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9eceaf8 <col:3> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9ecedc0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cb9eced90 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560cb9ececb0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560cb9ecebd0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560cb9eceb88 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560cb9eceb70 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560cb9eceb18 <col:20> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560cb9ecebb8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560cb9eceba0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560cb9eceb38 <col:38> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560cb9ecec90 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560cb9ecec48 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560cb9ecec30 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560cb9ecebf0 <col:56> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560cb9ecec78 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560cb9ecec60 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560cb9ecec10 <col:74> '_Bool' lvalue Var 0x560cb9ec7c68 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cb9eced48 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cb9eced00 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cb9ececd0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560cb9eced78 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cb9eced60 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cb9eced28 <col:102> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560cb9ecefe0 <line:767:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ecedf8 <col:3> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9ecefc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cb9ecef98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560cb9eceeb8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560cb9ecee70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560cb9ecee58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560cb9ecee18 <col:20> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560cb9eceea0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560cb9ecee88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560cb9ecee38 <col:38> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cb9ecef50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cb9ecef08 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cb9eceed8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560cb9ecef80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cb9ecef68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cb9ecef30 <col:66> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560cb9ecf2c8 <line:768:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560cb9ecf000 <col:3> '_Bool' lvalue Var 0x560cb9ec7c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560cb9ecf2b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cb9ecf280 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560cb9ecf1a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560cb9ecf0c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560cb9ecf078 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560cb9ecf060 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560cb9ecf020 <col:20> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560cb9ecf0a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560cb9ecf090 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560cb9ecf040 <col:38> '_Bool' lvalue Var 0x560cb9ec7b00 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560cb9ecf180 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560cb9ecf138 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560cb9ecf120 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560cb9ecf0e0 <col:56> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560cb9ecf168 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560cb9ecf150 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560cb9ecf100 <col:74> '_Bool' lvalue Var 0x560cb9ec7c68 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cb9ecf238 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cb9ecf1f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cb9ecf1c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560cb9ecf268 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cb9ecf250 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cb9ecf218 <col:102> '_Bool' lvalue Var 0x560cb9ec7c68 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x560cb9ecf320 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cb9ecf308 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ecf2e8 <col:3> 'void ()' Function 0x560cb9e6e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cb9ecf378 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cb9ecf360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ecf340 <col:3> 'void ()' Function 0x560cb9e6dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cb9ecf430 <line:771:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560cb9ecf398 <col:3> 'int' lvalue Var 0x560cb9ec71c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560cb9ecf410 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560cb9ecf3f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cb9ecf3b8 <col:22> 'int' lvalue Var 0x560cb9ec71c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560cb9ecf3d8 <col:41> 'int' 1
|   |-CallExpr 0x560cb9ecf488 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cb9ecf470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cb9ecf450 <col:3> 'void ()' Function 0x560cb9e6e060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560cb9ecf500 <line:773:3, col:36>
|     `-CallExpr 0x560cb9ecf4e0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560cb9ecf4c8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560cb9ecf4a8 <col:10> 'void *(void)' Function 0x560cb9e6dab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560cb9ecf688 prev 0x560cb9ec6f10 <line:775:1, line:777:1> line:775:6 fence 'void ()'
| `-CompoundStmt 0x560cb9ecf728 <line:776:1, line:777:1>
|-FunctionDecl 0x560cb9ecf758 prev 0x560cb9ec6fd0 <line:778:1, line:780:1> line:778:6 isync 'void ()'
| `-CompoundStmt 0x560cb9ecf7f8 <line:779:1, line:780:1>
|-FunctionDecl 0x560cb9ecf828 prev 0x560cb9ec7090 <line:781:1, line:783:1> line:781:6 lwfence 'void ()'
| `-CompoundStmt 0x560cb9ecf8c8 <line:782:1, line:783:1>
`-FunctionDecl 0x560cb9ecf938 <line:784:1, line:806:1> line:784:5 main 'int ()'
  `-CompoundStmt 0x560cb9ed1300 <line:785:1, line:806:1>
    |-DeclStmt 0x560cb9ecfa50 <line:786:3, col:18>
    | `-VarDecl 0x560cb9ecf9e8 <col:3, col:13> col:13 used t1765 'pthread_t':'unsigned long'
    |-CallExpr 0x560cb9ecfc78 <line:787:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560cb9ecfc60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cb9ecfa68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560cb9eae5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560cb9ecfaa8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560cb9ecfa88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560cb9ecf9e8 't1765' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560cb9ecfcb8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560cb9ecfb20 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560cb9ecfaf8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560cb9ecfac0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560cb9ecfcd0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cb9ecfb40 <col:39> 'void *(void *)' Function 0x560cb9ec8158 'P0' 'void *(void *)'
    | `-ParenExpr 0x560cb9ecfbe0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560cb9ecfbb8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560cb9ecfb80 <col:52> 'int' 0
    |-DeclStmt 0x560cb9ecfd60 <line:788:3, col:18>
    | `-VarDecl 0x560cb9ecfcf8 <col:3, col:13> col:13 used t1766 'pthread_t':'unsigned long'
    |-CallExpr 0x560cb9ecff08 <line:789:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560cb9ecfef0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cb9ecfd78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560cb9eae5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560cb9ecfdb8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560cb9ecfd98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560cb9ecfcf8 't1766' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560cb9ecff48 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560cb9ecfe30 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560cb9ecfe08 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560cb9ecfdd0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560cb9ecff60 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cb9ecfe50 <col:39> 'void *(void *)' Function 0x560cb9ecb330 'P1' 'void *(void *)'
    | `-ParenExpr 0x560cb9ecfed0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560cb9ecfea8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560cb9ecfe70 <col:52> 'int' 0
    |-CallExpr 0x560cb9ecffb0 <line:790:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560cb9ecff98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cb9ecff78 <col:3> 'void ()' Function 0x560cb9e6dfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560cb9ed0080 <line:791:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x560cb9ecffd0 <col:3> '_Bool' lvalue Var 0x560cb9ec75c0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x560cb9ed0068 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x560cb9ed0048 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x560cb9ed0030 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x560cb9ecfff0 <col:21> 'int' lvalue Var 0x560cb9ec71c8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x560cb9ed0010 <col:41> 'int' 2
    |-CallExpr 0x560cb9ed00d8 <line:792:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560cb9ed00c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cb9ed00a0 <col:3> 'void ()' Function 0x560cb9e6e060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560cb9ed0150 <line:793:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560cb9ed0138 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cb9ed00f8 <col:3> 'void (int)' Function 0x560cb9e6d940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x560cb9ed0190 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560cb9ed0178 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560cb9ed0118 <col:21> '_Bool' lvalue Var 0x560cb9ec75c0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x560cb9ed01e0 <line:794:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560cb9ed01c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cb9ed01a8 <col:3> 'void ()' Function 0x560cb9e6dfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560cb9ed04c8 <line:795:3, col:103> 'int' '='
    | |-DeclRefExpr 0x560cb9ed0200 <col:3> 'int' lvalue Var 0x560cb9ec7858 'y' 'int'
    | `-ConditionalOperator 0x560cb9ed0498 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x560cb9ed02c0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x560cb9ed0278 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x560cb9ed0260 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x560cb9ed0220 <col:7> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x560cb9ed02a8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x560cb9ed0290 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560cb9ed0240 <col:25> '_Bool' lvalue Var 0x560cb9ec79e8 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560cb9ed0480 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560cb9ed02e0 <col:42> 'int' lvalue Var 0x560cb9ec7de0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x560cb9ed0460 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x560cb9ed0430 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x560cb9ed03a0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560cb9ed0358 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560cb9ed0340 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560cb9ed0300 <col:55> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560cb9ed0388 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560cb9ed0370 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560cb9ed0320 <col:73> '_Bool' lvalue Var 0x560cb9ec7b78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560cb9ed0400 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560cb9ed03c0 <col:90> 'int' lvalue Var 0x560cb9ec7ed8 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x560cb9ed0418 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560cb9ed03e0 <col:102> 'int' lvalue Var 0x560cb9ec7858 'y' 'int'
    |-BinaryOperator 0x560cb9ed06d0 <line:796:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560cb9ed04e8 <col:3> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560cb9ed06b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560cb9ed0688 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560cb9ed05a8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560cb9ed0560 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560cb9ed0548 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560cb9ed0508 <col:20> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560cb9ed0590 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560cb9ed0578 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560cb9ed0528 <col:38> '_Bool' lvalue Var 0x560cb9ec79e8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560cb9ed0640 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560cb9ed05f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560cb9ed05c8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560cb9ed0670 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560cb9ed0658 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560cb9ed0620 <col:66> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560cb9ed09b8 <line:797:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560cb9ed06f0 <col:3> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560cb9ed09a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560cb9ed0970 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560cb9ed0890 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560cb9ed07b0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560cb9ed0768 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560cb9ed0750 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560cb9ed0710 <col:20> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560cb9ed0798 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560cb9ed0780 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560cb9ed0730 <col:38> '_Bool' lvalue Var 0x560cb9ec79e8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560cb9ed0870 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560cb9ed0828 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560cb9ed0810 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560cb9ed07d0 <col:56> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560cb9ed0858 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560cb9ed0840 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560cb9ed07f0 <col:74> '_Bool' lvalue Var 0x560cb9ec7b78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560cb9ed0928 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560cb9ed08e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560cb9ed08b0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560cb9ed0958 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560cb9ed0940 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560cb9ed0908 <col:102> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x560cb9ed0bd8 <line:798:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560cb9ed09d8 <col:3> '_Bool' lvalue Var 0x560cb9ec79e8 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560cb9ed0bc0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560cb9ed0b90 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560cb9ed0a98 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560cb9ed0a50 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560cb9ed0a38 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560cb9ed09f8 <col:20> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560cb9ed0a80 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560cb9ed0a68 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560cb9ed0a18 <col:38> '_Bool' lvalue Var 0x560cb9ec79e8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560cb9ed0b30 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560cb9ed0ae8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560cb9ed0ab8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560cb9ed0b60 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560cb9ed0b48 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560cb9ed0b10 <col:66> '_Bool' lvalue Var 0x560cb9ec79e8 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560cb9ed0ec0 <line:799:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560cb9ed0bf8 <col:3> '_Bool' lvalue Var 0x560cb9ec7b78 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560cb9ed0ea8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560cb9ed0e78 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560cb9ed0d98 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560cb9ed0cb8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560cb9ed0c70 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560cb9ed0c58 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560cb9ed0c18 <col:20> '_Bool' lvalue Var 0x560cb9ec7e58 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560cb9ed0ca0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560cb9ed0c88 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560cb9ed0c38 <col:38> '_Bool' lvalue Var 0x560cb9ec79e8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560cb9ed0d78 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560cb9ed0d30 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560cb9ed0d18 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560cb9ed0cd8 <col:56> '_Bool' lvalue Var 0x560cb9ec7f50 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560cb9ed0d60 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560cb9ed0d48 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560cb9ed0cf8 <col:74> '_Bool' lvalue Var 0x560cb9ec7b78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560cb9ed0e30 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560cb9ed0de8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560cb9ed0db8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560cb9ed0e60 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560cb9ed0e48 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560cb9ed0e10 <col:102> '_Bool' lvalue Var 0x560cb9ec7b78 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x560cb9ed0f18 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560cb9ed0f00 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cb9ed0ee0 <col:3> 'void ()' Function 0x560cb9e6e060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560cb9ed0f70 <line:801:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560cb9ed0f58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cb9ed0f38 <col:3> 'void ()' Function 0x560cb9e6dfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560cb9ed11a8 <line:802:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x560cb9ed0f90 <col:3> '_Bool' lvalue Var 0x560cb9ec7638 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x560cb9ed1190 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x560cb9ed1178 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x560cb9ed1158 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x560cb9ed1138 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x560cb9ed10a0 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x560cb9ed1008 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x560cb9ed0ff0 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x560cb9ed0fb0 <col:23> 'int' lvalue Var 0x560cb9ec72e8 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x560cb9ed0fd0 <col:46> 'int' 0
    |         | `-BinaryOperator 0x560cb9ed1080 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x560cb9ed1068 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x560cb9ed1028 <col:51> 'int' lvalue Var 0x560cb9ec7408 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x560cb9ed1048 <col:74> 'int' 1
    |         `-BinaryOperator 0x560cb9ed1118 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x560cb9ed1100 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560cb9ed10c0 <col:79> 'int' lvalue Var 0x560cb9ec7528 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x560cb9ed10e0 <col:102> 'int' 0
    |-CallExpr 0x560cb9ed1200 <line:803:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560cb9ed11e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cb9ed11c8 <col:3> 'void ()' Function 0x560cb9e6e060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560cb9ed1278 <line:804:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560cb9ed1260 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cb9ed1220 <col:3> 'void (int)' Function 0x560cb9e6dd28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x560cb9ed12b8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560cb9ed12a0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560cb9ed1240 <col:21> '_Bool' lvalue Var 0x560cb9ec7638 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x560cb9ed12f0 <line:805:3, col:10>
      `-IntegerLiteral 0x560cb9ed12d0 <col:10> 'int' 0
