TranslationUnitDecl 0x55e0511f7e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55e0511f86d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55e0511f83b0 '__int128'
|-TypedefDecl 0x55e0511f8748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55e0511f83d0 'unsigned __int128'
|-TypedefDecl 0x55e0511f8a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55e0511f8820 'struct __NSConstantString_tag'
|   `-Record 0x55e0511f87a0 '__NSConstantString_tag'
|-TypedefDecl 0x55e0511f8af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55e0511f8ab0 'char *'
|   `-BuiltinType 0x55e0511f7eb0 'char'
|-TypedefDecl 0x55e051237650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55e0511f8d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55e0511f8bd0 'struct __va_list_tag'
|     `-Record 0x55e0511f8b50 '__va_list_tag'
|-FunctionDecl 0x55e051237790 <./split_7/safe004_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55e0512376c0 <col:31> col:34 'int'
|-FunctionDecl 0x55e051237958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55e051237a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55e051237bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55e051237b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55e051237df8 <col:40, col:99>
|   |-IfStmt 0x55e051237dc8 <col:42, col:88>
|   | |-UnaryOperator 0x55e051237ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55e051237c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55e051237c70 <col:47> 'int' lvalue ParmVar 0x55e051237b38 'expression' 'int'
|   | `-CompoundStmt 0x55e051237db0 <col:59, col:88>
|   |   `-LabelStmt 0x55e051237d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55e051237d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55e051237d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55e051237cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55e051237a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55e051237de0 <col:89>
|   `-ReturnStmt 0x55e051237de8 <col:91>
|-FunctionDecl 0x55e051237e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55e051237f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55e051238280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e051237fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55e051238038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55e0512380b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55e051238138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55e051238340 <line:10:22>
|-FunctionDecl 0x55e05125e390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e0512383b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55e051238430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55e0512384b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55e051238530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55e05125e450 <line:13:22>
|-FunctionDecl 0x55e05125e700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e05125e4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55e05125e540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55e05125e5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55e05125e7b8 <line:15:22>
|-TypedefDecl 0x55e05125e828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55e0511f7f70 'unsigned char'
|-TypedefDecl 0x55e05125e898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55e0511f7f90 'unsigned short'
|-TypedefDecl 0x55e05125e908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55e0511f7fb0 'unsigned int'
|-TypedefDecl 0x55e05125e978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-TypedefDecl 0x55e05125e9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55e0511f7ed0 'signed char'
|-TypedefDecl 0x55e05125ea58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55e0511f7f70 'unsigned char'
|-TypedefDecl 0x55e05125eac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55e0511f7ef0 'short'
|-TypedefDecl 0x55e05125eb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55e0511f7f90 'unsigned short'
|-TypedefDecl 0x55e05125eba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55e0511f7f10 'int'
|-TypedefDecl 0x55e05125ec18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55e0511f7fb0 'unsigned int'
|-TypedefDecl 0x55e05125ec88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e05125ecf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-TypedefDecl 0x55e05125ed68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e05125edd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-TypedefDecl 0x55e05125ee48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-TypedefDecl 0x55e05125eeb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55e0511f7fb0 'unsigned int'
|-TypedefDecl 0x55e05125ef28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55e0511f7fb0 'unsigned int'
|-TypedefDecl 0x55e05125ef98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-TypedefDecl 0x55e05125f008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-TypedefDecl 0x55e05125f078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55e0511f7fb0 'unsigned int'
|-TypedefDecl 0x55e05125f0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-TypedefDecl 0x55e05125f158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e05125f1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e05125f238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55e0511f7f10 'int'
|-RecordDecl 0x55e05125f290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55e05125f408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55e05125f4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55e05125f460 'struct __fsid_t' sugar
|   `-RecordType 0x55e05125f310 '__fsid_t'
|     `-Record 0x55e05125f290 ''
|-TypedefDecl 0x55e05125f548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e05125f5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-TypedefDecl 0x55e05125f628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-TypedefDecl 0x55e05125f698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55e0511f7fb0 'unsigned int'
|-TypedefDecl 0x55e05125f708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e05125f778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55e0511f7fb0 'unsigned int'
|-TypedefDecl 0x55e05125f7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e05125f858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55e0511f7f10 'int'
|-TypedefDecl 0x55e05125f8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55e0511f7f10 'int'
|-TypedefDecl 0x55e05125f938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55e0511f7f10 'int'
|-TypedefDecl 0x55e05125f9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55e0511f8630 'void *'
|   `-BuiltinType 0x55e0511f7e70 'void'
|-TypedefDecl 0x55e05125fa18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e05125fa88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e05125faf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e05125fb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-TypedefDecl 0x55e05125fbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-TypedefDecl 0x55e05125fc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-TypedefDecl 0x55e05125fcb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-TypedefDecl 0x55e05125fd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e05125fd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e05125fe08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e05125fe78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-TypedefDecl 0x55e05125ff08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55e05125fed0 '__off64_t' sugar
|   |-Typedef 0x55e05125f1c8 '__off64_t'
|   `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e051260000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55e05125ffc0 '__quad_t *'
|   `-TypedefType 0x55e05125ff60 '__quad_t' sugar
|     |-Typedef 0x55e05125ed68 '__quad_t'
|     `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e051260070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55e0511f8ab0 'char *'
|   `-BuiltinType 0x55e0511f7eb0 'char'
|-TypedefDecl 0x55e0512600e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e051260150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55e0511f7fb0 'unsigned int'
|-FunctionDecl 0x55e051260298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55e0512601c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55e0512615e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55e0512615d8 <line:72:3, col:34>
|     `-CallExpr 0x55e051261598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55e051261580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55e051261510 <col:10> '<builtin fn type>' Function 0x55e051261380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55e0512615c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55e051261530 <col:29> 'unsigned int' lvalue ParmVar 0x55e0512601c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55e051261380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55e051261420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55e051261490 <col:10> Implicit
| `-ConstAttr 0x55e0512614e8 <col:10> Implicit
|-FunctionDecl 0x55e051261740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55e051261638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55e051261a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55e051261a48 <line:77:3, col:34>
|     `-CallExpr 0x55e051261a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55e0512619f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55e051261978 <col:10> '<builtin fn type>' Function 0x55e0512617e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55e051261a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55e051261998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55e051261638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55e0512617e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55e051261888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55e0512618f8 <col:10> Implicit
| `-ConstAttr 0x55e051261950 <col:10> Implicit
|-TypedefDecl 0x55e051261a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-TypedefDecl 0x55e051261b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55e051261ae0 '__time_t' sugar
|   |-Typedef 0x55e05125f708 '__time_t'
|   `-BuiltinType 0x55e0511f7f30 'long'
|-RecordDecl 0x55e051261b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55e051261c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55e051261cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55e051261d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55e051261d10 '__pid_t' sugar
|   |-Typedef 0x55e05125f238 '__pid_t'
|   `-BuiltinType 0x55e0511f7f10 'int'
|-RecordDecl 0x55e051261da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55e051261e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55e051261eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55e051261f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55e051261fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-RecordDecl 0x55e051262030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55e0512622c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55e0512633a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55e051262310 'struct cpu_set_t' sugar
|   `-RecordType 0x55e0512620b0 'cpu_set_t'
|     `-Record 0x55e051262030 ''
|-FunctionDecl 0x55e051263678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55e051263448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e051263550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55e051263728 <line:107:19>
|-FunctionDecl 0x55e051263900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55e051263790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55e0512639a8 <col:69>
|-FunctionDecl 0x55e051263b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55e051263a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55e051263bc8 <col:64>
|-FunctionDecl 0x55e051263e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55e051263c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e051263d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55e051263f38 <line:113:22>
|-FunctionDecl 0x55e0512641b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55e051263fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e051264098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55e051264268 <col:88>
|-FunctionDecl 0x55e051264588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55e0512642d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e0512643b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55e051264440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55e051264640 <col:62>
|-FunctionDecl 0x55e0512647b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55e0512646a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55e051264860 <col:63>
|-FunctionDecl 0x55e051264988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55e051264a28 <col:47>
|-FunctionDecl 0x55e051264b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55e051264a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55e051264bd8 <col:69>
|-FunctionDecl 0x55e051264ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55e051264c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55e051264d88 <col:69>
|-FunctionDecl 0x55e051265048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55e051264df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e051264f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55e0512650f8 <col:88>
|-TypedefDecl 0x55e051265188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55e051265150 '__clock_t' sugar
|   |-Typedef 0x55e05125f548 '__clock_t'
|   `-BuiltinType 0x55e0511f7f30 'long'
|-TypedefDecl 0x55e051265218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55e0512651e0 '__clockid_t' sugar
|   |-Typedef 0x55e05125f938 '__clockid_t'
|   `-BuiltinType 0x55e0511f7f10 'int'
|-TypedefDecl 0x55e0512652a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55e051265270 '__timer_t' sugar
|   |-Typedef 0x55e05125f9a8 '__timer_t'
|   `-PointerType 0x55e0511f8630 'void *'
|     `-BuiltinType 0x55e0511f7e70 'void'
|-RecordDecl 0x55e051265300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55e0512653d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55e051265440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55e0512654a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55e051265510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55e051265578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55e0512655e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55e051265648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55e0512656b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55e051265718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55e051265780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55e0512657e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55e051265838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55e051265908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55e051265978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55e051265a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55e051265bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55e051265c90 <col:45>
|-FunctionDecl 0x55e051265e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55e051265d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55e051265f18 <col:54>
|-FunctionDecl 0x55e051266118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55e051265f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55e051265ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55e0512661c8 <line:157:22>
| `-ConstAttr 0x55e051266220 <col:63>
|-FunctionDecl 0x55e051267050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55e051266318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55e0512670f8 <col:56>
|-FunctionDecl 0x55e0512674a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55e051267168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55e0512671e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e051267260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55e051267358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55e051267560 <col:54>
|-RecordDecl 0x55e0512675b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55e051267668 parent 0x55e0511f7e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55e0512678c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55e051267968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55e0512679d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55e051267a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55e051267b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55e051267c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55e051267bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55e051267b80 'struct __locale_struct' sugar
|     `-RecordType 0x55e051267640 'struct __locale_struct'
|       `-Record 0x55e0512675b8 '__locale_struct'
|-TypedefDecl 0x55e051267cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55e051267cc0 '__locale_t' sugar
|   |-Typedef 0x55e051267c48 '__locale_t'
|   `-PointerType 0x55e051267bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55e051267b80 'struct __locale_struct' sugar
|       `-RecordType 0x55e051267640 'struct __locale_struct'
|         `-Record 0x55e0512675b8 '__locale_struct'
|-FunctionDecl 0x55e051269110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55e051267d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55e051267de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e051267e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55e051267ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55e051267f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55e0512691d8 <col:40>
|-FunctionDecl 0x55e0512693c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55e0512692a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55e051269470 <col:66>
|-FunctionDecl 0x55e051269580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55e0512694d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55e051269628 <col:69>
|-FunctionDecl 0x55e051269858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55e051269690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55e051269720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55e051269908 <col:52>
|-FunctionDecl 0x55e051269ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55e051269970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55e051269a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55e051269b60 <col:55>
|-FunctionDecl 0x55e051269cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55e051269be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55e051269da0 <col:62>
|-FunctionDecl 0x55e051269f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55e051269e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55e051269fc0 <col:60>
|-FunctionDecl 0x55e05126a2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55e05126a118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55e05126a198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55e05126a368 <col:44>
|-FunctionDecl 0x55e05126a578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55e05126a3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55e05126a450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55e05126a628 <col:49>
|-VarDecl 0x55e05126a728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55e05126a7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55e05126a828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55e05126a8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55e05126aa20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55e05126aac0 <col:42>
|-VarDecl 0x55e05126ab30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55e05126abb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55e05126ad38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55e05126ac28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55e05126ade0 <col:57>
|-FunctionDecl 0x55e05126aef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55e05126ae60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55e05126af98 <col:56>
|-FunctionDecl 0x55e05126b0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55e05126b018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55e05126b178 <col:59>
|-FunctionDecl 0x55e05126b280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55e05126b1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55e05126b328 <col:48>
| `-ConstAttr 0x55e05126b380 <col:89>
|-FunctionDecl 0x55e05126b5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55e05126b438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55e05126b4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55e05126b848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55e05126b6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e05126b768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55e05126b8f8 <col:88>
|-FunctionDecl 0x55e05126ba90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55e05126b960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e05126b9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55e05126bb40 <col:88>
|-FunctionDecl 0x55e05126bd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55e05126bba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e05126bc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55e05126be08 <line:208:22>
|-FunctionDecl 0x55e05126c178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55e05126be70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e05126bef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55e05126bf80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55e05126c010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55e05126c478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55e05126c278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55e05126c350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55e05126c528 <col:85>
|-FunctionDecl 0x55e05126c918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55e05126c590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e05126c6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55e05126c7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55e05126c9d0 <col:52>
|-FunctionDecl 0x55e05126cb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55e05126ca38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55e05126cbf0 <col:61>
|-FunctionDecl 0x55e05126d0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55e05126cc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55e05126ccd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55e05126ce08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55e05126cef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55e05126d1b0 <col:62>
|-FunctionDecl 0x55e05126d3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55e05126d218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55e05126d2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55e05126d478 <line:221:22>
|-FunctionDecl 0x55e05126d578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55e05126d4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55e05126d620 <col:65>
|-TypedefDecl 0x55e05126d690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55e0511f7fd0 'unsigned long'
|-RecordDecl 0x55e05126d6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55e05126d830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55e05126d898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e05126d948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55e05126d8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55e05126d770 'union pthread_attr_t'
|     `-Record 0x55e05126d6e8 'pthread_attr_t'
|-RecordDecl 0x55e05126d9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55e05126db18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55e05126db90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55e05126dc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55e05126dbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55e05126da20 'struct __pthread_internal_list'
|     `-Record 0x55e05126d9a0 '__pthread_internal_list'
|-RecordDecl 0x55e05126dcb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55e05126dd58 parent 0x55e0511f7e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55e05126de30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55e05126de98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55e05126df00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55e05126df68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55e05126dfd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55e05126e038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55e051272110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55e0512721c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55e0512722b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55e051272318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e0512724a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55e051272440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55e05126dd30 'pthread_mutex_t'
|     `-Record 0x55e05126dcb0 ''
|-RecordDecl 0x55e051272510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55e051272650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55e0512726b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55e051272770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55e051272710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55e051272590 'pthread_mutexattr_t'
|     `-Record 0x55e051272510 ''
|-RecordDecl 0x55e0512727e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55e051272888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55e051272950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55e0512729b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55e051272a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55e051272a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55e051272af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55e051272b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55e051272bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55e051272c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55e051272ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_7/safe004_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_7/safe004_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55e051272dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55e051272e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55e051272f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55e051272f10 'union pthread_cond_t' sugar
|   `-RecordType 0x55e051272860 'pthread_cond_t'
|     `-Record 0x55e0512727e0 ''
|-RecordDecl 0x55e051272fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55e051274130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55e051274198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55e051274250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55e0512741f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55e051273060 'pthread_condattr_t'
|     `-Record 0x55e051272fe0 ''
|-TypedefDecl 0x55e0512742d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55e0511f7fb0 'unsigned int'
|-TypedefDecl 0x55e051274348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55e0511f7f10 'int'
|-RecordDecl 0x55e0512743a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55e051274448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55e051274510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55e051274578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55e0512745e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55e051274648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55e0512746b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55e051274718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55e051274780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55e0512747e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55e051274850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55e0512748b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55e051274920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55e0512749d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_7/safe004_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_7/safe004_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55e051274a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55e051274ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e051274c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55e051274bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55e051274420 'pthread_rwlock_t'
|     `-Record 0x55e0512743a0 ''
|-RecordDecl 0x55e051274ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55e051274de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55e051274e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e051274f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55e051274ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55e051274d20 'pthread_rwlockattr_t'
|     `-Record 0x55e051274ca0 ''
|-TypedefDecl 0x55e051274f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55e0511f7f14 'volatile int' volatile
|   `-BuiltinType 0x55e0511f7f10 'int'
|-RecordDecl 0x55e051274fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55e051276140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55e0512761a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e051276260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55e051276200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55e051275060 'pthread_barrier_t'
|     `-Record 0x55e051274fe0 ''
|-RecordDecl 0x55e0512762d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55e0512763d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55e051276438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55e0512764f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55e051276490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55e051276350 'pthread_barrierattr_t'
|     `-Record 0x55e0512762d0 ''
|-TypedefDecl 0x55e051276608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55e0512765a0 'long [8]' 8 
|   `-BuiltinType 0x55e0511f7f30 'long'
|-EnumDecl 0x55e051276660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55e051276728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55e051276778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55e0512767c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55e051276898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55e0512768e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55e051276938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55e051276988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55e051276a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55e0512769f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55e0512769d8 <col:26> 'int' EnumConstant 0x55e051276898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55e051276a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55e051276a80 <col:29> 'int'
| |   `-DeclRefExpr 0x55e051276a60 <col:29> 'int' EnumConstant 0x55e0512768e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55e051276b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55e051276b08 <col:30> 'int'
| |   `-DeclRefExpr 0x55e051276ae8 <col:30> 'int' EnumConstant 0x55e051276938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55e051276ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55e051276b90 <col:27> 'int'
|     `-DeclRefExpr 0x55e051276b70 <col:27> 'int' EnumConstant 0x55e051276a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55e051276bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55e051276cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55e051276d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55e051276d38 <col:30> 'int'
| |   `-DeclRefExpr 0x55e051276d18 <col:30> 'int' EnumConstant 0x55e051276cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55e051276da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55e051276e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55e051276e10 <col:29> 'int'
|     `-DeclRefExpr 0x55e051276df0 <col:29> 'int' EnumConstant 0x55e051276da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55e051276e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55e051276f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55e051276f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55e051276fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55e051277038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55e051277150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55e0512771a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55e0512771f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55e051277278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55e051277260 <col:31> 'int'
|     `-DeclRefExpr 0x55e051277240 <col:31> 'int' EnumConstant 0x55e051277150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55e0512772c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55e051277398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55e0512773e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55e051277438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55e051277508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55e051277558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55e0512775a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55e051277678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55e0512776c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55e051277718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55e051277958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55e0512779c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55e051277a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55e051277b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55e051277b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55e051277c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55e051277cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55e051277d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55e051277dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55e051277e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55e051278488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55e051277f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55e051278030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e051278270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55e0512782f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55e051278548 <col:47>
| |-NonNullAttr 0x55e0512785a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55e0512785d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55e051278700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55e051278630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55e051278958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55e0512787b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55e051278838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55e051278b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55e051278a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55e051278bd0 <col:60>
|-FunctionDecl 0x55e051278d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55e051278dc0 <col:54>
| `-ConstAttr 0x55e051278e18 <col:95>
|-FunctionDecl 0x55e051278fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55e051278e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e051278ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55e051279098 <line:394:19>
| `-ConstAttr 0x55e0512790f0 <col:60>
|-FunctionDecl 0x55e05127ab08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55e05127a9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55e05127abb0 <col:71>
| `-NonNullAttr 0x55e05127ac08 <col:112, col:126> 1
|-FunctionDecl 0x55e05127ad10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55e05127ac58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55e05127adb8 <line:397:22>
| `-NonNullAttr 0x55e05127ae10 <col:63, col:77> 1
|-FunctionDecl 0x55e05127b038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55e05127ae58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55e05127aed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55e05127b0e8 <line:400:22>
| `-NonNullAttr 0x55e05127b140 <col:63, col:80> 1 2
|-FunctionDecl 0x55e05127b348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e05127b188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e05127b208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55e05127b3f8 <line:403:22>
| `-NonNullAttr 0x55e05127b450 <col:63, col:77> 1
|-FunctionDecl 0x55e05127b6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55e05127b498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55e05127b540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55e05127b758 <line:406:22>
| `-NonNullAttr 0x55e05127b7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e05127c9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55e05127b7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e05127b870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55e05127ca98 <line:409:22>
| `-NonNullAttr 0x55e05127caf0 <col:63, col:77> 1
|-FunctionDecl 0x55e05127cd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55e05127cb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e05127cbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55e05127cdd8 <line:412:22>
| `-NonNullAttr 0x55e05127ce30 <col:63, col:80> 1 2
|-FunctionDecl 0x55e05127d068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55e05127ce78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e05127cf08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55e05127d118 <col:37>
| `-NonNullAttr 0x55e05127d170 <col:78, col:95> 1 2
|-FunctionDecl 0x55e05127d358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e05127d1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e05127d238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55e05127d408 <line:418:22>
| `-NonNullAttr 0x55e05127d460 <col:63, col:80> 1 2
|-FunctionDecl 0x55e05127d5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e05127d4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e05127d528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55e05127d698 <line:420:22>
| `-NonNullAttr 0x55e05127d6f0 <col:63, col:77> 1
|-FunctionDecl 0x55e05127d898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e05127d738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e05127d7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55e05127d948 <line:423:22>
| `-NonNullAttr 0x55e05127d9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e05127db48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e05127da08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e05127da88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55e05127dbf8 <line:426:22>
| `-NonNullAttr 0x55e05127dc50 <col:63, col:77> 1
|-FunctionDecl 0x55e05127ddf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e05127dc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e05127dd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55e05127dea8 <line:429:22>
| `-NonNullAttr 0x55e05127df00 <col:63, col:80> 1 2
|-FunctionDecl 0x55e05127e088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e05127df48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e05127dfc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55e05127e138 <line:431:22>
| `-NonNullAttr 0x55e05127e190 <col:63, col:77> 1
|-FunctionDecl 0x55e05127e3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55e05127e1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e05127e258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55e05127e468 <line:434:22>
| |-NonNullAttr 0x55e05127e4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55e05127e4f8 <col:100> "" ""
|-FunctionDecl 0x55e05127e708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55e05127e548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e05127e5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55e05127e7b8 <line:437:22>
| |-NonNullAttr 0x55e05127e810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55e05127e848 <col:97> "" ""
|-FunctionDecl 0x55e05127ea48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55e05127e898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e05127e910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55e05127eaf8 <line:440:22>
| `-NonNullAttr 0x55e05127eb50 <col:63, col:80> 1 2
|-FunctionDecl 0x55e05127ecd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55e05127eb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e05127ec10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55e05127ed80 <line:443:22>
| `-NonNullAttr 0x55e05127edd8 <col:63, col:77> 1
|-FunctionDecl 0x55e05127f0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55e05127ee28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e05127eea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55e05127ef20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55e05127f180 <line:447:22>
| `-NonNullAttr 0x55e05127f1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55e05127f488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55e05127f230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e05127f2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55e05127f328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55e05127f540 <col:43>
| `-NonNullAttr 0x55e05127f598 <col:84, col:98> 1
|-FunctionDecl 0x55e05127f858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55e05127f5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e05127f668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55e05127f6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55e05127f910 <line:452:22>
| `-NonNullAttr 0x55e05127f968 <col:63, col:77> 3
|-FunctionDecl 0x55e05127fc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55e05127f9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e05127fa60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55e05127faf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55e05127fd30 <line:456:22>
| `-NonNullAttr 0x55e05127fd88 <col:63, col:80> 2 3
|-FunctionDecl 0x55e05127ff78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55e05127fdd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e05127fe58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55e051280028 <line:458:22>
|-FunctionDecl 0x55e0512803f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55e0512800f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55e051280290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55e0512804a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55e051280650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55e051280530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55e0512805b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55e051280838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55e051280718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55e051280798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55e0512809f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55e0512808f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55e051280b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55e051280bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55e051280c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55e051280d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55e051280dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55e051280fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_7/safe004_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55e051281098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55e051281150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55e0512810f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55e051280c50 '__pthread_unwind_buf_t'
| |   `-Record 0x55e051280bd0 ''
| `-AlignedAttr 0x55e0512811a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55e051281220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55e051281380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55e0512813e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55e051281450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55e0512814b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55e0512816c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55e0512815b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55e051281808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55e051281778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55e051281a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e0512818c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55e051281aa8 <line:487:22>
|-RecordDecl 0x55e051281b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55e051281e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55e051281c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55e051281cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55e051281ec8 <col:86>
| `-ReturnsTwiceAttr 0x55e051281f20 <col:12> Implicit
|-FunctionDecl 0x55e051282248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55e051281ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55e051282100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55e0512822f8 <line:493:22>
| `-NonNullAttr 0x55e051282350 <col:63, col:77> 1
|-FunctionDecl 0x55e0512824c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e051282398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e051282570 <line:495:22>
| `-NonNullAttr 0x55e0512825c8 <col:63, col:77> 1
|-FunctionDecl 0x55e0512826d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e051282618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e051282778 <line:497:22>
| `-NonNullAttr 0x55e0512827d0 <col:52, col:66> 1
|-FunctionDecl 0x55e0512828d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e051282818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e051282978 <line:499:22>
| `-NonNullAttr 0x55e0512829d0 <col:52, col:66> 1
|-FunctionDecl 0x55e051283c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e051283a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e051283ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55e051283cd8 <col:36>
| `-NonNullAttr 0x55e051283d30 <col:66, col:83> 1 2
|-FunctionDecl 0x55e051283e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e051283d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e051283ed8 <line:504:22>
| `-NonNullAttr 0x55e051283f30 <col:52, col:66> 1
|-FunctionDecl 0x55e0512841c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e051283fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e051284060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55e051284278 <line:508:22>
| `-NonNullAttr 0x55e0512842d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e051284598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55e051284318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e051284398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55e051284418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55e051284650 <line:512:22>
| `-NonNullAttr 0x55e0512846a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55e0512847b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e0512846f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e051284858 <line:514:22>
| `-NonNullAttr 0x55e0512848b0 <col:63, col:77> 1
|-FunctionDecl 0x55e051284ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55e051284960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55e051284b80 <line:516:22>
| `-NonNullAttr 0x55e051284bd8 <col:63, col:77> 1
|-FunctionDecl 0x55e051284ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55e051284c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55e051284d88 <line:518:22>
| `-NonNullAttr 0x55e051284de0 <col:63, col:77> 1
|-FunctionDecl 0x55e051285008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e051284e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e051284ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e0512850b8 <line:522:22>
| `-NonNullAttr 0x55e051285110 <col:63, col:80> 1 2
|-FunctionDecl 0x55e051285318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e051285158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e0512851d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55e0512853c8 <line:525:22>
| `-NonNullAttr 0x55e051285420 <col:63, col:77> 1
|-FunctionDecl 0x55e0512855c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e051285468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e0512854e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55e051285678 <line:528:22>
| `-NonNullAttr 0x55e0512856d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e051285858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e051285718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e051285798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55e051285908 <line:530:22>
| `-NonNullAttr 0x55e051285960 <col:63, col:77> 1
|-FunctionDecl 0x55e051285b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e0512859a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e051285a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55e051285bd0 <line:534:22>
| `-NonNullAttr 0x55e051285c28 <col:63, col:80> 1 2
|-FunctionDecl 0x55e051285db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e051285c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e051285cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55e051285e68 <line:537:22>
| `-NonNullAttr 0x55e051285ec0 <col:63, col:77> 1
|-FunctionDecl 0x55e051286068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e051285f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e051285f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55e051286118 <line:541:22>
| `-NonNullAttr 0x55e051286170 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0512862f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e0512861b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e051286238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55e0512863a8 <line:544:22>
| `-NonNullAttr 0x55e051286400 <col:63, col:77> 1
|-FunctionDecl 0x55e0512865e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55e051286448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e0512864c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55e051286698 <line:547:22>
| `-NonNullAttr 0x55e0512866f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e051286878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e051286738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e0512867b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55e051286928 <line:550:22>
| `-NonNullAttr 0x55e051286980 <col:63, col:77> 1
|-FunctionDecl 0x55e051287cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55e051287aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55e051287bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55e051287da8 <col:29>
| `-NonNullAttr 0x55e051287e00 <col:70, col:84> 1
|-FunctionDecl 0x55e051287f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e051287e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e051288020 <line:555:22>
| `-NonNullAttr 0x55e051288078 <col:63, col:77> 1
|-FunctionDecl 0x55e051288180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e0512880c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e051288228 <line:557:22>
| `-NonNullAttr 0x55e051288280 <col:52, col:66> 1
|-FunctionDecl 0x55e051288380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e0512882c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e051288428 <line:559:19>
| `-NonNullAttr 0x55e051288480 <col:49, col:63> 1
|-FunctionDecl 0x55e0512886b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e0512884c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55e051288558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55e051288768 <col:39>
| `-NonNullAttr 0x55e0512887c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55e0512888c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e051288808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e051288968 <line:564:22>
| `-NonNullAttr 0x55e0512889c0 <col:52, col:66> 1
|-FunctionDecl 0x55e051288b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e051288a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e051288bd0 <line:566:22>
| `-NonNullAttr 0x55e051288c28 <col:52, col:66> 1
|-FunctionDecl 0x55e051288de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e051288c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55e051288d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55e051288e98 <col:39>
| `-NonNullAttr 0x55e051288ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55e051288ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e051288f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e051289098 <line:571:22>
| `-NonNullAttr 0x55e0512890f0 <col:52, col:66> 1
|-FunctionDecl 0x55e0512892d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55e0512891a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55e051289380 <line:573:22>
| `-NonNullAttr 0x55e0512893d8 <col:63, col:77> 1
|-FunctionDecl 0x55e0512894e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55e051289428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55e051289588 <line:575:22>
| `-NonNullAttr 0x55e0512895e0 <col:63, col:77> 1
|-FunctionDecl 0x55e051289808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e051289628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55e0512896a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e0512898b8 <line:579:22>
| `-NonNullAttr 0x55e051289910 <col:63, col:80> 1 2
|-FunctionDecl 0x55e051289b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55e051289958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55e0512899d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55e051289be8 <line:582:22>
| `-NonNullAttr 0x55e051289c40 <col:63, col:77> 1
|-FunctionDecl 0x55e051289de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e051289c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55e051289d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55e051289e98 <line:586:22>
| `-NonNullAttr 0x55e051289ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e05128a078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55e051289f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55e051289fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55e05128a128 <col:36>
| `-NonNullAttr 0x55e05128a180 <col:77, col:91> 1
|-FunctionDecl 0x55e05128a4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55e05128a260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55e05128a370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55e05128a568 <line:591:22>
| `-NonNullAttr 0x55e05128a5c0 <col:63, col:77> 1
|-FunctionDecl 0x55e05128a738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55e05128a608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55e05128a7e0 <line:593:22>
| `-NonNullAttr 0x55e05128a838 <col:63, col:77> 1
|-FunctionDecl 0x55e05128a940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55e05128a888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55e05128a9e8 <line:595:22>
| `-NonNullAttr 0x55e05128aa40 <col:52, col:66> 1
|-FunctionDecl 0x55e05128ab58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55e05128aaa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55e05128ac00 <line:597:22>
| `-NonNullAttr 0x55e05128ac58 <col:52, col:66> 1
|-FunctionDecl 0x55e05128ae88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55e05128aca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55e05128ad20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55e05128af38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55e05128b268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e05128afb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55e05128b030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e05128b0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55e05128b320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55e05128b538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55e05128b400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55e05128b5e0 <line:606:22>
| `-NonNullAttr 0x55e05128b638 <col:63, col:77> 1
|-FunctionDecl 0x55e05128b740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55e05128b688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55e05128b7e8 <line:608:22>
| `-NonNullAttr 0x55e05128b840 <col:63, col:77> 1
|-FunctionDecl 0x55e05128baa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e05128b888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55e05128b908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e05128bb50 <line:612:22>
| `-NonNullAttr 0x55e05128bba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55e05128bdb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55e05128bbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55e05128bc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55e05128be68 <col:37>
| `-NonNullAttr 0x55e05128bec0 <col:78, col:92> 1
|-FunctionDecl 0x55e05128c0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55e05128bf08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55e05128bfb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55e05128c188 <line:618:22>
| `-NonNullAttr 0x55e05128c1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e05128c3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55e05128c228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55e05128c2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55e05128c458 <line:621:22>
| `-NonNullAttr 0x55e05128c4b0 <col:63, col:77> 1
|-FunctionDecl 0x55e05128c758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55e05128c590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55e05128c610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55e05128c808 <line:623:22>
| `-NonNullAttr 0x55e05128c860 <col:63, col:77> 1
|-FunctionDecl 0x55e05128c9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e05128c8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e05128cab0 <line:625:22>
| `-NonNullAttr 0x55e05128cb08 <col:63, col:77> 1
|-FunctionDecl 0x55e05128cc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e05128cb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e05128ccb8 <line:627:22>
| `-NonNullAttr 0x55e05128cd10 <col:52, col:66> 1
|-FunctionDecl 0x55e05128ce10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e05128cd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e05128ceb8 <line:629:22>
| `-NonNullAttr 0x55e05128cf10 <col:52, col:66> 1
|-FunctionDecl 0x55e05128d010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e05128cf58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e05128d0b8 <line:631:22>
| `-NonNullAttr 0x55e05128d110 <col:52, col:66> 1
|-FunctionDecl 0x55e05128d4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55e05128d1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55e05128d300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55e05128d380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55e05128d5a0 <line:635:22>
| `-NonNullAttr 0x55e05128d5f8 <col:63, col:77> 1
|-FunctionDecl 0x55e05128d778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55e05128d648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55e05128d820 <line:637:22>
| `-NonNullAttr 0x55e05128d878 <col:63, col:77> 1
|-FunctionDecl 0x55e05128d980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55e05128d8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55e05128da28 <line:639:22>
| `-NonNullAttr 0x55e05128da80 <col:52, col:66> 1
|-FunctionDecl 0x55e05128ec88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55e05128eb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55e05128ed30 <line:641:22>
| `-NonNullAttr 0x55e05128ed88 <col:63, col:77> 1
|-FunctionDecl 0x55e05128ee90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55e05128edd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55e05128ef38 <line:643:22>
| `-NonNullAttr 0x55e05128ef90 <col:63, col:77> 1
|-FunctionDecl 0x55e05128f1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e05128efd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55e05128f058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e05128f268 <line:647:22>
| `-NonNullAttr 0x55e05128f2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e05128f4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55e05128f308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55e05128f388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55e05128f578 <line:650:22>
| `-NonNullAttr 0x55e05128f5d0 <col:63, col:77> 1
|-FunctionDecl 0x55e05128f918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55e05128f6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55e05128f7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55e05128f9c8 <line:653:22>
| `-NonNullAttr 0x55e05128fa20 <col:63, col:77> 1
|-FunctionDecl 0x55e05128fb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55e05128fa68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55e05128fc30 <col:69>
|-FunctionDecl 0x55e05128fda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55e05128fc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55e05128fe50 <col:72>
|-FunctionDecl 0x55e051290088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55e05128feb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55e05128ff68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55e051290138 <col:44>
|-FunctionDecl 0x55e051290358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55e0512901a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e051290218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55e051290408 <line:660:22>
| `-NonNullAttr 0x55e051290460 <col:63, col:77> 2
|-FunctionDecl 0x55e0512908a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55e051290540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55e051290650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55e051290760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55e051290960 <col:47>
|-FunctionDecl 0x55e051290af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55e0512909d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e051290c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55e051290bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e051290da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55e051290d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e051290e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55e051290f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55e051290fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55e0512910a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55e051291120 prev 0x55e0512910a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55e051291188 <col:24> 'int' 0
|-VarDecl 0x55e0512911c0 <line:673:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55e051291240 prev 0x55e0512911c0 <line:674:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55e0512912a8 <col:27> 'int' 0
|-VarDecl 0x55e0512912e0 <line:675:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55e051291360 prev 0x55e0512912e0 <line:676:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55e0512913c8 <col:27> 'int' 0
|-VarDecl 0x55e0512913f8 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55e051291470 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55e0512914f0 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x55e051291570 prev 0x55e0512914f0 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55e0512915d8 <col:9> 'int' 0
|-VarDecl 0x55e051291608 <line:681:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55e051291688 <line:682:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55e051291700 <line:683:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55e051291778 <line:684:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55e0512917f0 <line:685:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55e051291868 <line:686:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55e0512918e0 <line:687:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55e051291958 <line:688:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55e0512919d0 <line:689:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55e051291a48 <line:690:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55e051291b00 <line:691:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55e051291b80 <line:692:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55e051291c00 <line:693:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55e051291c78 <line:694:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55e051291cf8 <line:695:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55e051291d70 <line:696:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55e051291df0 <line:697:1, col:5> col:5 used y 'int'
|-VarDecl 0x55e051291e70 prev 0x55e051291df0 <line:698:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55e051291ed8 <col:9> 'int' 0
|-VarDecl 0x55e051291f08 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55e051291f80 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55e051292098 prev 0x55e051290af0 <line:701:1, line:720:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55e051292000 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e051293328 <line:702:1, line:720:1>
|   |-CallExpr 0x55e0512921a8 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e051292190 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051292140 <col:3> 'void ()' Function 0x55e051237e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e051292208 <line:704:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55e0512921c8 <col:3> 'int' lvalue Var 0x55e051291e70 'y' 'int'
|   | `-IntegerLiteral 0x55e0512921e8 <col:7> 'int' 2
|   |-CallExpr 0x55e051292260 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e051292248 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051292228 <col:3> 'void ()' Function 0x55e051237f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e0512922b8 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e0512922a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051292280 <col:3> 'void ()' Function 0x55e051237e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e051292318 <line:707:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55e0512922d8 <col:3> 'int' lvalue Var 0x55e051291570 'x' 'int'
|   | `-IntegerLiteral 0x55e0512922f8 <col:7> 'int' 1
|   |-CallExpr 0x55e051292370 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e051292358 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051292338 <col:3> 'void ()' Function 0x55e051237f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e0512923c8 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e0512923b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051292390 <col:3> 'void ()' Function 0x55e051237e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e0512926b0 <line:710:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55e0512923e8 <col:3> 'int' lvalue Var 0x55e051291570 'x' 'int'
|   | `-ConditionalOperator 0x55e051292680 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55e0512924a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55e051292460 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55e051292448 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55e051292408 <col:7> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55e051292490 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55e051292478 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55e051292428 <col:25> '_Bool' lvalue Var 0x55e051291778 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55e051292668 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e0512924c8 <col:42> 'int' lvalue Var 0x55e051291c00 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55e051292648 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55e051292618 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55e051292588 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55e051292540 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55e051292528 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55e0512924e8 <col:55> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55e051292570 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55e051292558 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55e051292508 <col:73> '_Bool' lvalue Var 0x55e051291958 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55e0512925e8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e0512925a8 <col:90> 'int' lvalue Var 0x55e051291cf8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55e051292600 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e0512925c8 <col:102> 'int' lvalue Var 0x55e051291570 'x' 'int'
|   |-BinaryOperator 0x55e0512928b8 <line:711:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e0512926d0 <col:3> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e0512928a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e051292870 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e051292790 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e051292748 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e051292730 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e0512926f0 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e051292778 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e051292760 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e051292710 <col:38> '_Bool' lvalue Var 0x55e051291778 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55e051292828 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e0512927e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e0512927b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e051292858 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e051292840 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e051292808 <col:66> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e051292bc0 <line:712:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e0512928d8 <col:3> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e051292ba8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e051292b78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e051292a78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e051292998 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e051292950 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e051292938 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e0512928f8 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e051292980 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e051292968 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e051292918 <col:38> '_Bool' lvalue Var 0x55e051291778 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55e051292a58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e051292a10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e0512929f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e0512929b8 <col:56> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e051292a40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e051292a28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e0512929d8 <col:74> '_Bool' lvalue Var 0x55e051291958 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55e051292b30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e051292ac8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e051292a98 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e051292b60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e051292b48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e051292b10 <col:102> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55e051292dc8 <line:713:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e051292be0 <col:3> '_Bool' lvalue Var 0x55e051291778 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55e051292db0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e051292d80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e051292ca0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e051292c58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e051292c40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e051292c00 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e051292c88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e051292c70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e051292c20 <col:38> '_Bool' lvalue Var 0x55e051291778 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55e051292d38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e051292cf0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e051292cc0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e051292d68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e051292d50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e051292d18 <col:66> '_Bool' lvalue Var 0x55e051291778 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55e0512930b0 <line:714:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e051292de8 <col:3> '_Bool' lvalue Var 0x55e051291958 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55e051293098 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e051293068 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e051292f88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e051292ea8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e051292e60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e051292e48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e051292e08 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e051292e90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e051292e78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e051292e28 <col:38> '_Bool' lvalue Var 0x55e051291778 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55e051292f68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e051292f20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e051292f08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e051292ec8 <col:56> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e051292f50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e051292f38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e051292ee8 <col:74> '_Bool' lvalue Var 0x55e051291958 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55e051293020 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e051292fd8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e051292fa8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e051293050 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e051293038 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e051293000 <col:102> '_Bool' lvalue Var 0x55e051291958 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55e051293108 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e0512930f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0512930d0 <col:3> 'void ()' Function 0x55e051237f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e051293160 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e051293148 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051293128 <col:3> 'void ()' Function 0x55e051237e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e051293218 <line:717:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e051293180 <col:3> 'int' lvalue Var 0x55e051291120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e0512931f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e0512931e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e0512931a0 <col:22> 'int' lvalue Var 0x55e051291120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e0512931c0 <col:41> 'int' 1
|   |-CallExpr 0x55e051293270 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e051293258 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051293238 <col:3> 'void ()' Function 0x55e051237f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e051293318 <line:719:3, col:36>
|     `-CallExpr 0x55e0512932f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e0512932e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e051293290 <col:10> 'void *(void)' Function 0x55e051237958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e051293470 prev 0x55e051290c48 <line:721:1, line:749:1> line:721:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55e0512933d8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e051294c30 <line:722:1, line:749:1>
|   |-CallExpr 0x55e051293550 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e051293538 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051293518 <col:3> 'void ()' Function 0x55e051237e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e0512935c8 <line:724:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55e051293570 <col:3> 'int' lvalue Var 0x55e051291cf8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55e0512935b0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e051293590 <col:15> 'int' lvalue Var 0x55e051291c00 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55e051293628 <line:725:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55e0512935e8 <col:3> 'int' lvalue Var 0x55e051291c00 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x55e051293608 <col:15> 'int' 2
|   |-BinaryOperator 0x55e0512936a0 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e051293648 <col:3> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e051293688 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e051293668 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e051293738 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55e0512936c0 <col:3> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55e051293710 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e0512936e0 <col:27> 'int' 1
|   |-CallExpr 0x55e0512938b8 <line:728:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55e0512938a0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55e051293758 <col:3> 'void (int)' Function 0x55e051237bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55e051293858 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55e051293838 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55e051293818 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55e0512937d0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55e0512937b8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55e051293778 <col:23> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55e051293800 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55e0512937e8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55e051293798 <col:41> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e051293938 <line:729:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e0512938e0 <col:3> '_Bool' lvalue Var 0x55e0512918e0 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55e051293920 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e051293900 <col:20> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55e0512939b0 <line:730:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e051293958 <col:3> '_Bool' lvalue Var 0x55e051291958 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55e051293998 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e051293978 <col:20> '_Bool' lvalue Var 0x55e051291778 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55e051293a28 <line:731:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e0512939d0 <col:3> '_Bool' lvalue Var 0x55e0512919d0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55e051293a10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e0512939f0 <col:20> '_Bool' lvalue Var 0x55e0512917f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55e051293aa0 <line:732:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e051293a48 <col:3> '_Bool' lvalue Var 0x55e051291a48 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55e051293a88 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e051293a68 <col:20> '_Bool' lvalue Var 0x55e051291868 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55e051293b48 <line:733:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55e051293ac0 <col:3> '_Bool' lvalue Var 0x55e0512917f0 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55e051293b20 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e051293ae0 <col:27> 'int' 1
|   |-CallExpr 0x55e051293ba0 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e051293b88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051293b68 <col:3> 'void ()' Function 0x55e051237f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e051293bf8 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e051293be0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051293bc0 <col:3> 'void ()' Function 0x55e051237e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e051293c58 <line:736:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55e051293c18 <col:3> 'int' lvalue Var 0x55e051291e70 'y' 'int'
|   | `-IntegerLiteral 0x55e051293c38 <col:7> 'int' 1
|   |-CallExpr 0x55e051293cb0 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e051293c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051293c78 <col:3> 'void ()' Function 0x55e051237f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e051293d08 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e051293cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051293cd0 <col:3> 'void ()' Function 0x55e051237e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e051293ff0 <line:739:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55e051293d28 <col:3> 'int' lvalue Var 0x55e051291570 'x' 'int'
|   | `-ConditionalOperator 0x55e051293fc0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55e051293de8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55e051293da0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55e051293d88 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55e051293d48 <col:7> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55e051293dd0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55e051293db8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55e051293d68 <col:25> '_Bool' lvalue Var 0x55e0512917f0 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e051293fa8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e051293e08 <col:42> 'int' lvalue Var 0x55e051291c00 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55e051293f88 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55e051293f58 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55e051293ec8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55e051293e80 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55e051293e68 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55e051293e28 <col:55> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55e051293eb0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55e051293e98 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55e051293e48 <col:73> '_Bool' lvalue Var 0x55e0512919d0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55e051293f28 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e051293ee8 <col:90> 'int' lvalue Var 0x55e051291cf8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55e051293f40 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e051293f08 <col:102> 'int' lvalue Var 0x55e051291570 'x' 'int'
|   |-BinaryOperator 0x55e0512941f8 <line:740:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e051294010 <col:3> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e0512941e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0512941b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e0512940d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e051294088 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e051294070 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e051294030 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e0512940b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e0512940a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e051294050 <col:38> '_Bool' lvalue Var 0x55e0512917f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e051294168 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e051294120 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e0512940f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e051294198 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e051294180 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e051294148 <col:66> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e0512944e0 <line:741:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e051294218 <col:3> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e0512944c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e051294498 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e0512943b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e0512942d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e051294290 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e051294278 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e051294238 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e0512942c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e0512942a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e051294258 <col:38> '_Bool' lvalue Var 0x55e0512917f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55e051294398 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e051294350 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e051294338 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e0512942f8 <col:56> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e051294380 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e051294368 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e051294318 <col:74> '_Bool' lvalue Var 0x55e0512919d0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e051294450 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e051294408 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e0512943d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e051294480 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e051294468 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e051294430 <col:102> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55e0512946e8 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e051294500 <col:3> '_Bool' lvalue Var 0x55e0512917f0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55e0512946d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0512946a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e0512945c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e051294578 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e051294560 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e051294520 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e0512945a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e051294590 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e051294540 <col:38> '_Bool' lvalue Var 0x55e0512917f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e051294658 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e051294610 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e0512945e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e051294688 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e051294670 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e051294638 <col:66> '_Bool' lvalue Var 0x55e0512917f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55e0512949d0 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e051294708 <col:3> '_Bool' lvalue Var 0x55e0512919d0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55e0512949b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e051294988 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e0512948a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e0512947c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e051294780 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e051294768 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e051294728 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e0512947b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e051294798 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e051294748 <col:38> '_Bool' lvalue Var 0x55e0512917f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55e051294888 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e051294840 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e051294828 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e0512947e8 <col:56> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e051294870 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e051294858 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e051294808 <col:74> '_Bool' lvalue Var 0x55e0512919d0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e051294940 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e0512948f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e0512948c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e051294970 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e051294958 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e051294920 <col:102> '_Bool' lvalue Var 0x55e0512919d0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55e051294a28 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e051294a10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0512949f0 <col:3> 'void ()' Function 0x55e051237f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e051294a80 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e051294a68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051294a48 <col:3> 'void ()' Function 0x55e051237e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e051294b50 <line:746:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e051294aa0 <col:3> 'int' lvalue Var 0x55e051291120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e051294b30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e051294b00 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e051294ac0 <col:22> 'int' lvalue Var 0x55e051291120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e051294ae0 <col:41> 'int' 1
|   |-CallExpr 0x55e051294ba8 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e051294b90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051294b70 <col:3> 'void ()' Function 0x55e051237f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e051294c20 <line:748:3, col:36>
|     `-CallExpr 0x55e051294c00 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e051294be8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e051294bc8 <col:10> 'void *(void)' Function 0x55e051237958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e051294dc0 prev 0x55e051290da0 <line:750:1, line:769:1> line:750:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55e051294d28 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e051296010 <line:751:1, line:769:1>
|   |-CallExpr 0x55e051294ea0 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e051294e88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051294e68 <col:3> 'void ()' Function 0x55e051237e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e051294f18 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55e051294ec0 <col:3> 'int' lvalue Var 0x55e051291240 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55e051294f00 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e051294ee0 <col:25> 'int' lvalue Var 0x55e051291e70 'y' 'int'
|   |-CallExpr 0x55e051294f70 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e051294f58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051294f38 <col:3> 'void ()' Function 0x55e051237f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e051294fc8 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e051294fb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051294f90 <col:3> 'void ()' Function 0x55e051237e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e051295040 <line:756:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55e051294fe8 <col:3> 'int' lvalue Var 0x55e051291360 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55e051295028 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e051295008 <col:25> 'int' lvalue Var 0x55e051291e70 'y' 'int'
|   |-CallExpr 0x55e051295098 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e051295080 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051295060 <col:3> 'void ()' Function 0x55e051237f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e0512950f0 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e0512950d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0512950b8 <col:3> 'void ()' Function 0x55e051237e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e0512953d8 <line:759:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55e051295110 <col:3> 'int' lvalue Var 0x55e051291570 'x' 'int'
|   | `-ConditionalOperator 0x55e0512953a8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55e0512951d0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55e051295188 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55e051295170 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55e051295130 <col:7> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55e0512951b8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55e0512951a0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55e051295150 <col:25> '_Bool' lvalue Var 0x55e051291868 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55e051295390 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e0512951f0 <col:42> 'int' lvalue Var 0x55e051291c00 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55e051295370 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55e051295340 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55e0512952b0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55e051295268 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55e051295250 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55e051295210 <col:55> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55e051295298 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55e051295280 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55e051295230 <col:73> '_Bool' lvalue Var 0x55e051291a48 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55e051295310 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e0512952d0 <col:90> 'int' lvalue Var 0x55e051291cf8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55e051295328 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e0512952f0 <col:102> 'int' lvalue Var 0x55e051291570 'x' 'int'
|   |-BinaryOperator 0x55e0512955e0 <line:760:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e0512953f8 <col:3> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e0512955c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e051295598 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e0512954b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e051295470 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e051295458 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e051295418 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e0512954a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e051295488 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e051295438 <col:38> '_Bool' lvalue Var 0x55e051291868 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55e051295550 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e051295508 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e0512954d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e051295580 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e051295568 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e051295530 <col:66> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e0512958c8 <line:761:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e051295600 <col:3> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e0512958b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e051295880 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e0512957a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e0512956c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e051295678 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e051295660 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e051295620 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e0512956a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e051295690 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e051295640 <col:38> '_Bool' lvalue Var 0x55e051291868 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55e051295780 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e051295738 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e051295720 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e0512956e0 <col:56> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e051295768 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e051295750 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e051295700 <col:74> '_Bool' lvalue Var 0x55e051291a48 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55e051295838 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e0512957f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e0512957c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e051295868 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e051295850 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e051295818 <col:102> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55e051295ad0 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e0512958e8 <col:3> '_Bool' lvalue Var 0x55e051291868 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55e051295ab8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e051295a88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e0512959a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e051295960 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e051295948 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e051295908 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e051295990 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e051295978 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e051295928 <col:38> '_Bool' lvalue Var 0x55e051291868 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55e051295a40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e0512959f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e0512959c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e051295a70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e051295a58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e051295a20 <col:66> '_Bool' lvalue Var 0x55e051291868 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55e051295dc8 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e051295af0 <col:3> '_Bool' lvalue Var 0x55e051291a48 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55e051295db0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e051295d80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e051295ca0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e051295bc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e051295b78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e051295b60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e051295b10 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e051295ba8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e051295b90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e051295b40 <col:38> '_Bool' lvalue Var 0x55e051291868 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55e051295c80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e051295c38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e051295c20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e051295be0 <col:56> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e051295c68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e051295c50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e051295c00 <col:74> '_Bool' lvalue Var 0x55e051291a48 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55e051295d38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e051295cf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e051295cc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e051295d68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e051295d50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e051295d18 <col:102> '_Bool' lvalue Var 0x55e051291a48 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55e051295e20 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e051295e08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051295de8 <col:3> 'void ()' Function 0x55e051237f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e051295e78 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e051295e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051295e40 <col:3> 'void ()' Function 0x55e051237e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e051295f30 <line:766:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e051295e98 <col:3> 'int' lvalue Var 0x55e051291120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e051295f10 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e051295ef8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e051295eb8 <col:22> 'int' lvalue Var 0x55e051291120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e051295ed8 <col:41> 'int' 1
|   |-CallExpr 0x55e051295f88 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e051295f70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e051295f50 <col:3> 'void ()' Function 0x55e051237f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e051296000 <line:768:3, col:36>
|     `-CallExpr 0x55e051295fe0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e051295fc8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e051295fa8 <col:10> 'void *(void)' Function 0x55e051237958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e0512960c8 prev 0x55e051290e68 <line:770:1, line:772:1> line:770:6 fence 'void ()'
| `-CompoundStmt 0x55e051296168 <line:771:1, line:772:1>
|-FunctionDecl 0x55e051296198 prev 0x55e051290f28 <line:773:1, line:775:1> line:773:6 isync 'void ()'
| `-CompoundStmt 0x55e051296238 <line:774:1, line:775:1>
|-FunctionDecl 0x55e051296268 prev 0x55e051290fe8 <line:776:1, line:778:1> line:776:6 lwfence 'void ()'
| `-CompoundStmt 0x55e051296308 <line:777:1, line:778:1>
`-FunctionDecl 0x55e051296378 <line:779:1, line:816:1> line:779:5 main 'int ()'
  `-CompoundStmt 0x55e05129a9d8 <line:780:1, line:816:1>
    |-DeclStmt 0x55e051296490 <line:781:3, col:18>
    | `-VarDecl 0x55e051296428 <col:3, col:13> col:13 used t1890 'pthread_t':'unsigned long'
    |-CallExpr 0x55e051296698 <line:782:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55e051296680 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e0512964a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e051278488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e0512964e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e0512964c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e051296428 't1890' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e0512966d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e051296560 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55e051296538 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e051296500 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55e0512966f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e051296580 <col:39> 'void *(void *)' Function 0x55e051292098 'P0' 'void *(void *)'
    | `-ParenExpr 0x55e051296600 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55e0512965d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e0512965a0 <col:52> 'int' 0
    |-DeclStmt 0x55e051296780 <line:783:3, col:18>
    | `-VarDecl 0x55e051296718 <col:3, col:13> col:13 used t1891 'pthread_t':'unsigned long'
    |-CallExpr 0x55e051296928 <line:784:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55e051296910 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e051296798 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e051278488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e0512967d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e0512967b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e051296718 't1891' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e051296968 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e051296850 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55e051296828 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e0512967f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55e051296980 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e051296870 <col:39> 'void *(void *)' Function 0x55e051293470 'P1' 'void *(void *)'
    | `-ParenExpr 0x55e0512968f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55e0512968c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e051296890 <col:52> 'int' 0
    |-DeclStmt 0x55e051296a10 <line:785:3, col:18>
    | `-VarDecl 0x55e0512969a8 <col:3, col:13> col:13 used t1892 'pthread_t':'unsigned long'
    |-CallExpr 0x55e051296bc8 <line:786:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55e051296bb0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e051296a28 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e051278488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e051296a68 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e051296a48 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e0512969a8 't1892' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e051296c08 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e051296ae0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55e051296ab8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e051296a80 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55e051296c20 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e051296b00 <col:39> 'void *(void *)' Function 0x55e051294dc0 'P2' 'void *(void *)'
    | `-ParenExpr 0x55e051296b90 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55e051296b68 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e051296b20 <col:52> 'int' 0
    |-CallExpr 0x55e051296c70 <line:787:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55e051296c58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e051296c38 <col:3> 'void ()' Function 0x55e051237e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55e051296d40 <line:788:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55e051296c90 <col:3> '_Bool' lvalue Var 0x55e0512913f8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55e051296d28 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55e051296d08 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55e051296cf0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55e051296cb0 <col:21> 'int' lvalue Var 0x55e051291120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55e051296cd0 <col:41> 'int' 3
    |-CallExpr 0x55e051296d98 <line:789:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55e051296d80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e051296d60 <col:3> 'void ()' Function 0x55e051237f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55e051296e10 <line:790:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55e051296df8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e051296db8 <col:3> 'void (int)' Function 0x55e051237790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55e051296e50 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55e051296e38 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55e051296dd8 <col:21> '_Bool' lvalue Var 0x55e0512913f8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55e051296ea0 <line:791:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55e051296e88 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e051296e68 <col:3> 'void ()' Function 0x55e051237e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55e051297188 <line:792:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55e051296ec0 <col:3> 'int' lvalue Var 0x55e051291570 'x' 'int'
    | `-ConditionalOperator 0x55e051297158 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55e051296f80 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55e051296f38 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55e051296f20 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55e051296ee0 <col:7> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55e051296f68 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55e051296f50 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55e051296f00 <col:25> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55e051297140 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e051296fa0 <col:42> 'int' lvalue Var 0x55e051291c00 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55e051297120 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55e0512970f0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55e051297060 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55e051297018 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55e051297000 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55e051296fc0 <col:55> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55e051297048 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55e051297030 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55e051296fe0 <col:73> '_Bool' lvalue Var 0x55e0512918e0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55e0512970c0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55e051297080 <col:90> 'int' lvalue Var 0x55e051291cf8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55e0512970d8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55e0512970a0 <col:102> 'int' lvalue Var 0x55e051291570 'x' 'int'
    |-BinaryOperator 0x55e051297390 <line:793:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55e0512971a8 <col:3> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55e051297378 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e051297348 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55e051297268 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55e051297220 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55e051297208 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55e0512971c8 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55e051297250 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55e051297238 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55e0512971e8 <col:38> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e051297300 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e0512972b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e051297288 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55e051297330 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e051297318 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e0512972e0 <col:66> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55e051297678 <line:794:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55e0512973b0 <col:3> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55e051297660 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e051297630 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55e051297550 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55e051297470 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55e051297428 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55e051297410 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55e0512973d0 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55e051297458 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55e051297440 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55e0512973f0 <col:38> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55e051297530 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55e0512974e8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55e0512974d0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55e051297490 <col:56> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55e051297518 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55e051297500 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55e0512974b0 <col:74> '_Bool' lvalue Var 0x55e0512918e0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e0512975e8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e0512975a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e051297570 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55e051297618 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e051297600 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e0512975c8 <col:102> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55e051297880 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55e051297698 <col:3> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55e051297868 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e051297838 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55e051297758 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55e051297710 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55e0512976f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55e0512976b8 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55e051297740 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55e051297728 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55e0512976d8 <col:38> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e0512977f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e0512977a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e051297778 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55e051297820 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e051297808 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e0512977d0 <col:66> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55e051297b78 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55e0512978a0 <col:3> '_Bool' lvalue Var 0x55e0512918e0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55e051297b60 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e051297b20 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55e051297a40 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55e051297960 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55e051297918 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55e051297900 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55e0512978c0 <col:20> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55e051297948 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55e051297930 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55e0512978e0 <col:38> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55e051297a20 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55e0512979d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55e0512979c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55e051297980 <col:56> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55e051297a08 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55e0512979f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55e0512979a0 <col:74> '_Bool' lvalue Var 0x55e0512918e0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e051297ad8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e051297a90 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e051297a60 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55e051297b08 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e051297af0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e051297ab8 <col:102> '_Bool' lvalue Var 0x55e0512918e0 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55e051297bd0 <line:797:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55e051297bb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e051297b98 <col:3> 'void ()' Function 0x55e051237f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55e051297c28 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55e051297c10 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e051297bf0 <col:3> 'void ()' Function 0x55e051237e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55e051297cd8 <line:799:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55e051297c48 <col:3> '_Bool' lvalue Var 0x55e051291f08 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x55e051297cc0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55e051297ca0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55e051297c88 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55e051297c68 <col:19> 'void *(void)' Function 0x55e051237958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55e051297d88 <line:800:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55e051297cf8 <col:3> '_Bool' lvalue Var 0x55e051291f80 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x55e051297d70 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55e051297d50 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55e051297d38 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55e051297d18 <col:19> 'void *(void)' Function 0x55e051237958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55e051297e00 <line:801:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55e051297da8 <col:3> '_Bool' lvalue Var 0x55e051291608 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55e051297de8 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55e051297dc8 <col:21> '_Bool' lvalue Var 0x55e051291f80 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55e051297e78 <line:802:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55e051297e20 <col:3> 'int' lvalue Var 0x55e051291688 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55e051297e60 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55e051297e40 <col:15> 'int' lvalue Var 0x55e051291570 'x' 'int'
    |-BinaryOperator 0x55e0512982b0 <line:803:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55e051297e98 <col:3> 'int' lvalue Var 0x55e051291570 'x' 'int'
    | `-ConditionalOperator 0x55e051298280 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55e0512980a8 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55e051297fc8 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55e051297ef0 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55e051297ed8 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55e051297eb8 <col:8> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55e051297fa8 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55e051297f40 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55e051297f28 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55e051297f08 <col:27> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55e051297f90 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55e051297f78 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55e051297f58 <col:46> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55e051298088 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55e051298020 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55e051298008 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55e051297fe8 <col:65> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55e051298070 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55e051298058 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55e051298038 <col:84> '_Bool' lvalue Var 0x55e0512918e0 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55e051298268 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e0512980c8 <col:101> 'int' lvalue Var 0x55e051291570 'x' 'int'
    |   `-ParenExpr 0x55e051298248 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55e051298218 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55e051298188 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55e051298140 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55e051298128 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55e0512980e8 <col:106> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55e051298170 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55e051298158 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55e051298108 <col:124> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55e0512981e8 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55e0512981a8 <col:141> 'int' lvalue Var 0x55e051291c00 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55e051298200 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55e0512981c8 <col:153> 'int' lvalue Var 0x55e051291cf8 'x$w_buff1' 'int'
    |-BinaryOperator 0x55e0512987c0 <line:804:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55e0512982d0 <col:3> 'int' lvalue Var 0x55e051291c00 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x55e051298790 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55e051298760 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55e051298748 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55e0512982f0 <col:15> '_Bool' lvalue Var 0x55e051291f80 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55e051298778 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e051298310 <col:31> 'int' lvalue Var 0x55e051291c00 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55e051298728 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55e0512986f8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55e051298520 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55e051298440 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55e051298368 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55e051298350 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55e051298330 <col:45> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55e051298420 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55e0512983b8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55e0512983a0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55e051298380 <col:64> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55e051298408 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55e0512983f0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55e0512983d0 <col:83> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55e051298500 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55e051298498 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55e051298480 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55e051298460 <col:102> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55e0512984e8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55e0512984d0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55e0512984b0 <col:121> '_Bool' lvalue Var 0x55e0512918e0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55e0512986e0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55e051298540 <col:138> 'int' lvalue Var 0x55e051291c00 'x$w_buff0' 'int'
    |       `-ParenExpr 0x55e0512986c0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55e051298690 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55e051298600 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55e0512985b8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55e0512985a0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55e051298560 <col:151> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55e0512985e8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55e0512985d0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55e051298580 <col:169> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55e051298660 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55e051298620 <col:186> 'int' lvalue Var 0x55e051291c00 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55e051298678 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55e051298640 <col:198> 'int' lvalue Var 0x55e051291c00 'x$w_buff0' 'int'
    |-BinaryOperator 0x55e051298cf0 <line:805:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55e0512987e0 <col:3> 'int' lvalue Var 0x55e051291cf8 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x55e051298cc0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55e051298c90 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55e051298c78 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55e051298800 <col:15> '_Bool' lvalue Var 0x55e051291f80 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55e051298ca8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e051298820 <col:31> 'int' lvalue Var 0x55e051291cf8 'x$w_buff1' 'int'
    |   `-ParenExpr 0x55e051298c58 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55e051298c28 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55e051298a30 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55e051298950 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55e051298878 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55e051298860 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55e051298840 <col:45> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55e051298930 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55e0512988c8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55e0512988b0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55e051298890 <col:64> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55e051298918 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55e051298900 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55e0512988e0 <col:83> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55e051298a10 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55e0512989a8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55e051298990 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55e051298970 <col:102> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55e0512989f8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55e0512989e0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55e0512989c0 <col:121> '_Bool' lvalue Var 0x55e0512918e0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55e051298c10 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55e051298a50 <col:138> 'int' lvalue Var 0x55e051291cf8 'x$w_buff1' 'int'
    |       `-ParenExpr 0x55e051298bf0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55e051298bc0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55e051298b10 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55e051298ac8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55e051298ab0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55e051298a70 <col:151> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55e051298af8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55e051298ae0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55e051298a90 <col:169> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55e051298b90 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55e051298b30 <col:186> 'int' lvalue Var 0x55e051291cf8 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55e051298ba8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55e051298b70 <col:198> 'int' lvalue Var 0x55e051291cf8 'x$w_buff1' 'int'
    |-BinaryOperator 0x55e051299298 <line:806:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55e051298d10 <col:3> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55e051299280 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e051299250 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55e051299208 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55e0512991f0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55e051298d30 <col:20> '_Bool' lvalue Var 0x55e051291f80 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55e051299238 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55e051299220 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55e051298d50 <col:36> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55e0512991d0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55e0512991a0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55e051298f60 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55e051298e80 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55e051298da8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55e051298d90 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55e051298d70 <col:55> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55e051298e60 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55e051298df8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55e051298de0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55e051298dc0 <col:74> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55e051298e48 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55e051298e30 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55e051298e10 <col:93> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55e051298f40 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55e051298ed8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55e051298ec0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55e051298ea0 <col:112> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55e051298f28 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55e051298f10 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55e051298ef0 <col:131> '_Bool' lvalue Var 0x55e0512918e0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55e051299188 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55e051299170 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55e051298f80 <col:148> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55e051299150 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55e051299120 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55e051299040 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55e051298ff8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55e051298fe0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55e051298fa0 <col:166> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55e051299028 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55e051299010 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55e051298fc0 <col:184> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55e0512990d8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55e051299090 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55e051299060 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55e051299108 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55e0512990f0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55e0512990b8 <col:212> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55e051299860 <line:807:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55e0512992b8 <col:3> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55e051299848 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e051299818 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55e0512997d0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55e0512997b8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55e0512992d8 <col:20> '_Bool' lvalue Var 0x55e051291f80 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55e051299800 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55e0512997e8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55e0512992f8 <col:36> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55e051299798 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55e051299768 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55e051299508 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55e051299428 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55e051299350 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55e051299338 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55e051299318 <col:55> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55e051299408 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55e0512993a0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55e051299388 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55e051299368 <col:74> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55e0512993f0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55e0512993d8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55e0512993b8 <col:93> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55e0512994e8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55e051299480 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55e051299468 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55e051299448 <col:112> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55e0512994d0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55e0512994b8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55e051299498 <col:131> '_Bool' lvalue Var 0x55e0512918e0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55e051299750 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55e051299738 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55e051299528 <col:148> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55e051299718 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55e0512996e8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55e0512995e8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55e0512995a0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55e051299588 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55e051299548 <col:166> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55e0512995d0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55e0512995b8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55e051299568 <col:184> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55e0512996b8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55e051299638 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55e051299608 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55e0512996d0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55e051299690 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55e051299660 <col:219> 'int' 0
    |-BinaryOperator 0x55e051299e20 <line:808:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55e051299880 <col:3> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55e051299e08 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e051299dd8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55e051299d90 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55e051299d78 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55e0512998a0 <col:20> '_Bool' lvalue Var 0x55e051291f80 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55e051299dc0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55e051299da8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55e0512998c0 <col:36> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55e051299d58 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55e051299d28 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55e051299ad0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55e0512999f0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55e051299918 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55e051299900 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55e0512998e0 <col:55> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55e0512999d0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55e051299968 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55e051299950 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55e051299930 <col:74> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55e0512999b8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55e0512999a0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55e051299980 <col:93> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55e051299ab0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55e051299a48 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55e051299a30 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55e051299a10 <col:112> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55e051299a98 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55e051299a80 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55e051299a60 <col:131> '_Bool' lvalue Var 0x55e0512918e0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55e051299d10 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55e051299cf8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55e051299af0 <col:148> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55e051299cd8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55e051299ca8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55e051299bc8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55e051299b80 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55e051299b50 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55e051299b10 <col:166> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55e051299bb0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55e051299b98 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55e051299b30 <col:184> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55e051299c60 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55e051299c18 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55e051299be8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55e051299c90 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55e051299c78 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55e051299c40 <col:212> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55e05129a3e8 <line:809:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55e051299e40 <col:3> '_Bool' lvalue Var 0x55e0512918e0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55e05129a3d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e05129a3a0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55e05129a358 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55e05129a340 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55e051299e60 <col:20> '_Bool' lvalue Var 0x55e051291f80 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55e05129a388 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55e05129a370 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55e051299e80 <col:36> '_Bool' lvalue Var 0x55e0512918e0 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55e05129a320 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55e05129a2f0 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55e05129a090 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55e051299fb0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55e051299ed8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55e051299ec0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55e051299ea0 <col:55> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55e051299f90 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55e051299f28 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55e051299f10 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55e051299ef0 <col:74> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55e051299f78 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55e051299f60 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55e051299f40 <col:93> '_Bool' lvalue Var 0x55e051291d70 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55e05129a070 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55e05129a008 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55e051299ff0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55e051299fd0 <col:112> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55e05129a058 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55e05129a040 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55e05129a020 <col:131> '_Bool' lvalue Var 0x55e0512918e0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55e05129a2d8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55e05129a2c0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55e05129a0b0 <col:148> '_Bool' lvalue Var 0x55e0512918e0 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55e05129a2a0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55e05129a270 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55e05129a170 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55e05129a128 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55e05129a110 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55e05129a0d0 <col:166> '_Bool' lvalue Var 0x55e051291c78 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55e05129a158 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55e05129a140 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55e05129a0f0 <col:184> '_Bool' lvalue Var 0x55e051291700 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55e05129a240 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55e05129a1c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55e05129a190 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55e05129a258 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55e05129a218 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55e05129a1e8 <col:219> 'int' 0
    |-BinaryOperator 0x55e05129a6b8 <line:810:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x55e05129a408 <col:3> '_Bool' lvalue Var 0x55e051291470 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55e05129a6a0 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55e05129a688 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55e05129a668 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x55e05129a648 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x55e05129a5b0 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x55e05129a518 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x55e05129a480 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55e05129a468 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55e05129a428 <col:23> 'int' lvalue Var 0x55e051291570 'x' 'int'
    |         | | | `-IntegerLiteral 0x55e05129a448 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55e05129a4f8 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55e05129a4e0 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55e05129a4a0 <col:33> 'int' lvalue Var 0x55e051291e70 'y' 'int'
    |         | |   `-IntegerLiteral 0x55e05129a4c0 <col:38> 'int' 2
    |         | `-BinaryOperator 0x55e05129a590 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55e05129a578 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55e05129a538 <col:43> 'int' lvalue Var 0x55e051291240 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55e05129a558 <col:66> 'int' 1
    |         `-BinaryOperator 0x55e05129a628 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x55e05129a610 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55e05129a5d0 <col:71> 'int' lvalue Var 0x55e051291360 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55e05129a5f0 <col:94> 'int' 1
    |-BinaryOperator 0x55e05129a7e8 <line:811:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55e05129a6d8 <col:3> 'int' lvalue Var 0x55e051291570 'x' 'int'
    | `-ConditionalOperator 0x55e05129a7b8 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55e05129a770 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55e05129a758 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55e05129a6f8 <col:7> '_Bool' lvalue Var 0x55e051291608 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55e05129a788 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e05129a718 <col:25> 'int' lvalue Var 0x55e051291688 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55e05129a7a0 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55e05129a738 <col:37> 'int' lvalue Var 0x55e051291570 'x' 'int'
    |-BinaryOperator 0x55e05129a880 <line:812:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55e05129a808 <col:3> '_Bool' lvalue Var 0x55e051291608 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55e05129a858 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55e05129a828 <col:28> 'int' 0
    |-CallExpr 0x55e05129a8d8 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55e05129a8c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e05129a8a0 <col:3> 'void ()' Function 0x55e051237f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55e05129a950 <line:814:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55e05129a938 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e05129a8f8 <col:3> 'void (int)' Function 0x55e051237bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55e05129a990 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55e05129a978 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55e05129a918 <col:21> '_Bool' lvalue Var 0x55e051291470 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55e05129a9c8 <line:815:3, col:10>
      `-IntegerLiteral 0x55e05129a9a8 <col:10> 'int' 0
