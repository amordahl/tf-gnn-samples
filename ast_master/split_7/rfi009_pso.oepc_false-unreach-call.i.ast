TranslationUnitDecl 0x55fe1ca91e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55fe1ca926d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55fe1ca923b0 '__int128'
|-TypedefDecl 0x55fe1ca92748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55fe1ca923d0 'unsigned __int128'
|-TypedefDecl 0x55fe1ca92a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55fe1ca92820 'struct __NSConstantString_tag'
|   `-Record 0x55fe1ca927a0 '__NSConstantString_tag'
|-TypedefDecl 0x55fe1ca92af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55fe1ca92ab0 'char *'
|   `-BuiltinType 0x55fe1ca91eb0 'char'
|-TypedefDecl 0x55fe1cad1650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55fe1ca92d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55fe1ca92bd0 'struct __va_list_tag'
|     `-Record 0x55fe1ca92b50 '__va_list_tag'
|-FunctionDecl 0x55fe1cad1770 <./split_7/rfi009_pso.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55fe1cad1940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55fe1cad1870 <col:31> col:34 'int'
|-FunctionDecl 0x55fe1cad1ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55fe1cad1be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55fe1cad1d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55fe1cad1c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55fe1cad1f58 <col:40, col:99>
|   |-IfStmt 0x55fe1cad1f28 <col:42, col:88>
|   | |-UnaryOperator 0x55fe1cad1e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55fe1cad1df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55fe1cad1dd0 <col:47> 'int' lvalue ParmVar 0x55fe1cad1c98 'expression' 'int'
|   | `-CompoundStmt 0x55fe1cad1f10 <col:59, col:88>
|   |   `-LabelStmt 0x55fe1cad1ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55fe1cad1e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55fe1cad1e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55fe1cad1e20 <col:68> 'void () __attribute__((noreturn))' Function 0x55fe1cad1be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55fe1cad1f40 <col:89>
|   `-ReturnStmt 0x55fe1cad1f48 <col:91>
|-FunctionDecl 0x55fe1cad1fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55fe1cad2060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55fe1cad23e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55fe1cad2118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55fe1cad2198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55fe1cad2218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55fe1cad2298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55fe1cad24a0 <line:11:22>
|-FunctionDecl 0x55fe1caf8520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55fe1cad2510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55fe1cad2590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55fe1caf8350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55fe1caf83d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55fe1caf85e0 <line:14:22>
|-FunctionDecl 0x55fe1caf8890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55fe1caf8650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55fe1caf86d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55fe1caf8750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55fe1caf8948 <line:16:22>
|-TypedefDecl 0x55fe1caf89b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55fe1ca91f70 'unsigned char'
|-TypedefDecl 0x55fe1caf8a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55fe1ca91f90 'unsigned short'
|-TypedefDecl 0x55fe1caf8a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55fe1ca91fb0 'unsigned int'
|-TypedefDecl 0x55fe1caf8b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-TypedefDecl 0x55fe1caf8b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55fe1ca91ed0 'signed char'
|-TypedefDecl 0x55fe1caf8be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55fe1ca91f70 'unsigned char'
|-TypedefDecl 0x55fe1caf8c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55fe1ca91ef0 'short'
|-TypedefDecl 0x55fe1caf8cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55fe1ca91f90 'unsigned short'
|-TypedefDecl 0x55fe1caf8d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55fe1ca91f10 'int'
|-TypedefDecl 0x55fe1caf8da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55fe1ca91fb0 'unsigned int'
|-TypedefDecl 0x55fe1caf8e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1caf8e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-TypedefDecl 0x55fe1caf8ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1caf8f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-TypedefDecl 0x55fe1caf8fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-TypedefDecl 0x55fe1caf9048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55fe1ca91fb0 'unsigned int'
|-TypedefDecl 0x55fe1caf90b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55fe1ca91fb0 'unsigned int'
|-TypedefDecl 0x55fe1caf9128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-TypedefDecl 0x55fe1caf9198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-TypedefDecl 0x55fe1caf9208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55fe1ca91fb0 'unsigned int'
|-TypedefDecl 0x55fe1caf9278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-TypedefDecl 0x55fe1caf92e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1caf9378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1caf93e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55fe1ca91f10 'int'
|-RecordDecl 0x55fe1caf9440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55fe1caf9588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55fe1caf9640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55fe1caf95e0 'struct __fsid_t' sugar
|   `-RecordType 0x55fe1caf94c0 '__fsid_t'
|     `-Record 0x55fe1caf9440 ''
|-TypedefDecl 0x55fe1caf96c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1caf9738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-TypedefDecl 0x55fe1caf97a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-TypedefDecl 0x55fe1caf9818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55fe1ca91fb0 'unsigned int'
|-TypedefDecl 0x55fe1caf9888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1caf98f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55fe1ca91fb0 'unsigned int'
|-TypedefDecl 0x55fe1caf9968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1caf99d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55fe1ca91f10 'int'
|-TypedefDecl 0x55fe1caf9a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55fe1ca91f10 'int'
|-TypedefDecl 0x55fe1caf9ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55fe1ca91f10 'int'
|-TypedefDecl 0x55fe1caf9b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55fe1ca92630 'void *'
|   `-BuiltinType 0x55fe1ca91e70 'void'
|-TypedefDecl 0x55fe1caf9b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1caf9c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1caf9c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1caf9ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-TypedefDecl 0x55fe1caf9d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-TypedefDecl 0x55fe1caf9dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-TypedefDecl 0x55fe1caf9e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-TypedefDecl 0x55fe1caf9ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1caf9f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1caf9f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1caf9ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-TypedefDecl 0x55fe1cafa088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55fe1cafa050 '__off64_t' sugar
|   |-Typedef 0x55fe1caf9378 '__off64_t'
|   `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1cafa180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55fe1cafa140 '__quad_t *'
|   `-TypedefType 0x55fe1cafa0e0 '__quad_t' sugar
|     |-Typedef 0x55fe1caf8ef8 '__quad_t'
|     `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1cafa1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55fe1ca92ab0 'char *'
|   `-BuiltinType 0x55fe1ca91eb0 'char'
|-TypedefDecl 0x55fe1cafa260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1cafa2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55fe1ca91fb0 'unsigned int'
|-FunctionDecl 0x55fe1cafb458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55fe1cafb380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55fe1cafb768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55fe1cafb758 <line:73:3, col:34>
|     `-CallExpr 0x55fe1cafb718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55fe1cafb700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55fe1cafb690 <col:10> '<builtin fn type>' Function 0x55fe1cafb500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55fe1cafb740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55fe1cafb6b0 <col:29> 'unsigned int' lvalue ParmVar 0x55fe1cafb380 '__bsx' 'unsigned int'
|-FunctionDecl 0x55fe1cafb500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55fe1cafb5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55fe1cafb610 <col:10> Implicit
| `-ConstAttr 0x55fe1cafb668 <col:10> Implicit
|-FunctionDecl 0x55fe1cafb8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55fe1cafb7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55fe1cafbbd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55fe1cafbbc8 <line:78:3, col:34>
|     `-CallExpr 0x55fe1cafbb88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55fe1cafbb70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55fe1cafbaf8 <col:10> '<builtin fn type>' Function 0x55fe1cafb968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55fe1cafbbb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55fe1cafbb18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55fe1cafb7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55fe1cafb968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55fe1cafba08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55fe1cafba78 <col:10> Implicit
| `-ConstAttr 0x55fe1cafbad0 <col:10> Implicit
|-TypedefDecl 0x55fe1cafbc08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-TypedefDecl 0x55fe1cafbc98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55fe1cafbc60 '__time_t' sugar
|   |-Typedef 0x55fe1caf9888 '__time_t'
|   `-BuiltinType 0x55fe1ca91f30 'long'
|-RecordDecl 0x55fe1cafbcf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55fe1cafbda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55fe1cafbe38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55fe1cafbec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55fe1cafbe90 '__pid_t' sugar
|   |-Typedef 0x55fe1caf93e8 '__pid_t'
|   `-BuiltinType 0x55fe1ca91f10 'int'
|-RecordDecl 0x55fe1cafbf20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55fe1cafbfe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55fe1cafc030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55fe1cafc0f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55fe1cafc158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-RecordDecl 0x55fe1cafc1b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55fe1cafd480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55fe1cafd530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55fe1cafd4d0 'struct cpu_set_t' sugar
|   `-RecordType 0x55fe1cafc230 'cpu_set_t'
|     `-Record 0x55fe1cafc1b0 ''
|-FunctionDecl 0x55fe1cafd808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55fe1cafd5d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55fe1cafd6e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55fe1cafd8b8 <line:108:19>
|-FunctionDecl 0x55fe1cafda90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55fe1cafd920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55fe1cafdb38 <col:69>
|-FunctionDecl 0x55fe1cafdcb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55fe1cafdba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55fe1cafdd58 <col:64>
|-FunctionDecl 0x55fe1cafe018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55fe1cafddc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55fe1cafdef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55fe1cafe0c8 <line:114:22>
|-FunctionDecl 0x55fe1cafe3b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55fe1cafe130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55fe1cafe228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55fe1cafe460 <col:88>
|-FunctionDecl 0x55fe1cafe718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55fe1cafe4c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55fe1cafe548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55fe1cafe5d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55fe1cafe7d0 <col:62>
|-FunctionDecl 0x55fe1cafe948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55fe1cafe838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55fe1cafe9f0 <col:63>
|-FunctionDecl 0x55fe1cafeb18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55fe1cafebb8 <col:47>
|-FunctionDecl 0x55fe1cafecc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55fe1cafec28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55fe1cafed68 <col:69>
|-FunctionDecl 0x55fe1cafee70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55fe1cafedd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55fe1cafef18 <col:69>
|-FunctionDecl 0x55fe1caff1d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55fe1cafef80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55fe1caff0b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55fe1caff288 <col:88>
|-TypedefDecl 0x55fe1caff318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55fe1caff2e0 '__clock_t' sugar
|   |-Typedef 0x55fe1caf96c8 '__clock_t'
|   `-BuiltinType 0x55fe1ca91f30 'long'
|-TypedefDecl 0x55fe1caff3c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55fe1caff370 '__clockid_t' sugar
|   |-Typedef 0x55fe1caf9ab8 '__clockid_t'
|   `-BuiltinType 0x55fe1ca91f10 'int'
|-TypedefDecl 0x55fe1caff458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55fe1caff420 '__timer_t' sugar
|   |-Typedef 0x55fe1caf9b28 '__timer_t'
|   `-PointerType 0x55fe1ca92630 'void *'
|     `-BuiltinType 0x55fe1ca91e70 'void'
|-RecordDecl 0x55fe1caff4b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55fe1caff570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55fe1caff5d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55fe1caff640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55fe1caff6a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55fe1caff710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55fe1caff778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55fe1caff7e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55fe1caff848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55fe1caff8b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55fe1caff918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55fe1caff980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55fe1caff9d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55fe1caffa98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55fe1caffb08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55fe1caffbb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55fe1caffd80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55fe1caffe20 <col:45>
|-FunctionDecl 0x55fe1cb00000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55fe1caffef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55fe1cb000a8 <col:54>
|-FunctionDecl 0x55fe1cb002a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55fe1cb00110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55fe1cb00188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55fe1cb00358 <line:158:22>
| `-ConstAttr 0x55fe1cb00ff0 <col:63>
|-FunctionDecl 0x55fe1cb011f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55fe1cb010e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55fe1cb01298 <col:56>
|-FunctionDecl 0x55fe1cb01640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55fe1cb01308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55fe1cb01380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55fe1cb01400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55fe1cb014f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55fe1cb01700 <col:54>
|-RecordDecl 0x55fe1cb01758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55fe1cb01808 parent 0x55fe1ca91e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55fe1cb01a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55fe1cb01b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55fe1cb01b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55fe1cb01bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55fe1cb01cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55fe1cb01de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55fe1cb01d90 'struct __locale_struct *'
|   `-ElaboratedType 0x55fe1cb01d20 'struct __locale_struct' sugar
|     `-RecordType 0x55fe1cb017e0 'struct __locale_struct'
|       `-Record 0x55fe1cb01758 '__locale_struct'
|-TypedefDecl 0x55fe1cb01e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55fe1cb01e60 '__locale_t' sugar
|   |-Typedef 0x55fe1cb01de8 '__locale_t'
|   `-PointerType 0x55fe1cb01d90 'struct __locale_struct *'
|     `-ElaboratedType 0x55fe1cb01d20 'struct __locale_struct' sugar
|       `-RecordType 0x55fe1cb017e0 'struct __locale_struct'
|         `-Record 0x55fe1cb01758 '__locale_struct'
|-FunctionDecl 0x55fe1cb032a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55fe1cb01f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55fe1cb01f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55fe1cb03028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55fe1cb030b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55fe1cb03130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55fe1cb03368 <col:40>
|-FunctionDecl 0x55fe1cb03558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55fe1cb03430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55fe1cb03600 <col:66>
|-FunctionDecl 0x55fe1cb03710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55fe1cb03668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55fe1cb037b8 <col:69>
|-FunctionDecl 0x55fe1cb039e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55fe1cb03820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55fe1cb038b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55fe1cb03a98 <col:52>
|-FunctionDecl 0x55fe1cb03c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55fe1cb03b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55fe1cb03b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55fe1cb03cf0 <col:55>
|-FunctionDecl 0x55fe1cb03e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55fe1cb03d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55fe1cb03f30 <col:62>
|-FunctionDecl 0x55fe1cb04168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55fe1cb03f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55fe1cb04210 <col:60>
|-FunctionDecl 0x55fe1cb04438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55fe1cb04290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55fe1cb04310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55fe1cb044e8 <col:44>
|-FunctionDecl 0x55fe1cb046f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55fe1cb04550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55fe1cb045d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55fe1cb047a8 <col:49>
|-VarDecl 0x55fe1cb048a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55fe1cb04928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55fe1cb049a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55fe1cb04a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55fe1cb04ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55fe1cb04c40 <col:42>
|-VarDecl 0x55fe1cb04cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55fe1cb04d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55fe1cb04eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55fe1cb04da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55fe1cb04f60 <col:57>
|-FunctionDecl 0x55fe1cb050d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55fe1cb04fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55fe1cb05178 <col:56>
|-FunctionDecl 0x55fe1cb05288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55fe1cb051f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55fe1cb05330 <col:59>
|-FunctionDecl 0x55fe1cb05438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55fe1cb053a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55fe1cb054e0 <col:48>
| `-ConstAttr 0x55fe1cb05538 <col:89>
|-FunctionDecl 0x55fe1cb05798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55fe1cb055e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55fe1cb05678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55fe1cb059f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55fe1cb05888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fe1cb05918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55fe1cb05aa8 <col:88>
|-FunctionDecl 0x55fe1cb05c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55fe1cb05b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fe1cb05ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55fe1cb05cf0 <col:88>
|-FunctionDecl 0x55fe1cb05f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55fe1cb05d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fe1cb05de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55fe1cb05fb8 <line:209:22>
|-FunctionDecl 0x55fe1cb06358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55fe1cb06020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fe1cb060e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55fe1cb06170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55fe1cb06200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55fe1cb06658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55fe1cb06458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55fe1cb06530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55fe1cb06708 <col:85>
|-FunctionDecl 0x55fe1cb06af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55fe1cb06770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fe1cb068a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55fe1cb069b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55fe1cb06bb0 <col:52>
|-FunctionDecl 0x55fe1cb06d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55fe1cb06c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55fe1cb06dd0 <col:61>
|-FunctionDecl 0x55fe1cb07248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55fe1cb06e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55fe1cb06eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55fe1cb06fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55fe1cb070f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55fe1cb07308 <col:62>
|-FunctionDecl 0x55fe1cb07528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55fe1cb07370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55fe1cb07400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55fe1cb075d8 <line:222:22>
|-FunctionDecl 0x55fe1cb076d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55fe1cb07640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55fe1cb07780 <col:65>
|-TypedefDecl 0x55fe1cb077f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55fe1ca91fd0 'unsigned long'
|-RecordDecl 0x55fe1cb07848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55fe1cb07990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55fe1cb079f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fe1cb07aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55fe1cb07a50 'union pthread_attr_t' sugar
|   `-RecordType 0x55fe1cb078d0 'union pthread_attr_t'
|     `-Record 0x55fe1cb07848 'pthread_attr_t'
|-RecordDecl 0x55fe1cb07b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55fe1cb07c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55fe1cb07cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55fe1cb07da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55fe1cb07d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55fe1cb07b80 'struct __pthread_internal_list'
|     `-Record 0x55fe1cb07b00 '__pthread_internal_list'
|-RecordDecl 0x55fe1cb07e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55fe1cb07eb8 parent 0x55fe1ca91e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55fe1cb07f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55fe1cb07ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55fe1cb08060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55fe1cb0c110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55fe1cb0c178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55fe1cb0c1e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55fe1cb0c268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55fe1cb0c320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55fe1cb0c410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55fe1cb0c478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fe1cb0c600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55fe1cb0c5a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55fe1cb07e90 'pthread_mutex_t'
|     `-Record 0x55fe1cb07e10 ''
|-RecordDecl 0x55fe1cb0c670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55fe1cb0c7b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55fe1cb0c818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55fe1cb0c8d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55fe1cb0c870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55fe1cb0c6f0 'pthread_mutexattr_t'
|     `-Record 0x55fe1cb0c670 ''
|-RecordDecl 0x55fe1cb0c940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55fe1cb0c9e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55fe1cb0cab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55fe1cb0cb18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55fe1cb0cb80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55fe1cb0cbe8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55fe1cb0cc50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55fe1cb0ccb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55fe1cb0cd20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55fe1cb0cd88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55fe1cb0ce40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_7/rfi009_pso.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_7/rfi009_pso.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55fe1cb0cf30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55fe1cb0cf98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55fe1cb0e130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55fe1cb0d070 'union pthread_cond_t' sugar
|   `-RecordType 0x55fe1cb0c9c0 'pthread_cond_t'
|     `-Record 0x55fe1cb0c940 ''
|-RecordDecl 0x55fe1cb0e1a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55fe1cb0e2a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55fe1cb0e308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55fe1cb0e3c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55fe1cb0e360 'union pthread_condattr_t' sugar
|   `-RecordType 0x55fe1cb0e220 'pthread_condattr_t'
|     `-Record 0x55fe1cb0e1a0 ''
|-TypedefDecl 0x55fe1cb0e448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55fe1ca91fb0 'unsigned int'
|-TypedefDecl 0x55fe1cb0e4b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55fe1ca91f10 'int'
|-RecordDecl 0x55fe1cb0e510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55fe1cb0e5b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55fe1cb0e680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55fe1cb0e6e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55fe1cb0e750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55fe1cb0e7b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55fe1cb0e820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55fe1cb0e888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55fe1cb0e8f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55fe1cb0e958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55fe1cb0e9c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55fe1cb0ea28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55fe1cb0ea90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55fe1cb0eb40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_7/rfi009_pso.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_7/rfi009_pso.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55fe1cb0ebe8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55fe1cb0ec50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fe1cb0eda0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55fe1cb0ed40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55fe1cb0e590 'pthread_rwlock_t'
|     `-Record 0x55fe1cb0e510 ''
|-RecordDecl 0x55fe1cb0ee10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55fe1cb0ef50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55fe1cb0efb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fe1cb0f070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55fe1cb0f010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55fe1cb0ee90 'pthread_rwlockattr_t'
|     `-Record 0x55fe1cb0ee10 ''
|-TypedefDecl 0x55fe1cb10140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55fe1ca91f14 'volatile int' volatile
|   `-BuiltinType 0x55fe1ca91f10 'int'
|-RecordDecl 0x55fe1cb10198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55fe1cb102e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55fe1cb10348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fe1cb10400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55fe1cb103a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55fe1cb10220 'pthread_barrier_t'
|     `-Record 0x55fe1cb10198 ''
|-RecordDecl 0x55fe1cb10470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55fe1cb10570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55fe1cb105d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55fe1cb10690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55fe1cb10630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55fe1cb104f0 'pthread_barrierattr_t'
|     `-Record 0x55fe1cb10470 ''
|-TypedefDecl 0x55fe1cb107a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55fe1cb10740 'long [8]' 8 
|   `-BuiltinType 0x55fe1ca91f30 'long'
|-EnumDecl 0x55fe1cb10800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55fe1cb108c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55fe1cb10918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55fe1cb10968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55fe1cb10a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55fe1cb10a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55fe1cb10ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55fe1cb10b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55fe1cb10bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55fe1cb10b98 <col:26> 'int'
| |   `-DeclRefExpr 0x55fe1cb10b78 <col:26> 'int' EnumConstant 0x55fe1cb10a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55fe1cb10c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55fe1cb10c20 <col:29> 'int'
| |   `-DeclRefExpr 0x55fe1cb10c00 <col:29> 'int' EnumConstant 0x55fe1cb10a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55fe1cb10cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55fe1cb10ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x55fe1cb10c88 <col:30> 'int' EnumConstant 0x55fe1cb10ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55fe1cb10d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55fe1cb10d30 <col:27> 'int'
|     `-DeclRefExpr 0x55fe1cb10d10 <col:27> 'int' EnumConstant 0x55fe1cb10bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55fe1cb10d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55fe1cb10e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55fe1cb10ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55fe1cb10ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x55fe1cb10eb8 <col:30> 'int' EnumConstant 0x55fe1cb10e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55fe1cb10f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55fe1cb10fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55fe1cb10fb0 <col:29> 'int'
|     `-DeclRefExpr 0x55fe1cb10f90 <col:29> 'int' EnumConstant 0x55fe1cb10f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55fe1cb11018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55fe1cb110e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55fe1cb11150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55fe1cb111a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55fe1cb111f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55fe1cb112b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55fe1cb11308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55fe1cb11358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55fe1cb113e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55fe1cb113c8 <col:31> 'int'
|     `-DeclRefExpr 0x55fe1cb113a8 <col:31> 'int' EnumConstant 0x55fe1cb112b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55fe1cb11430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55fe1cb114f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55fe1cb11548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55fe1cb11598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55fe1cb11668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55fe1cb116b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55fe1cb11708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55fe1cb117d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55fe1cb11828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55fe1cb11878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55fe1cb11ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55fe1cb11b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55fe1cb11b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55fe1cb11ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55fe1cb11cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55fe1cb11dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55fe1cb11e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55fe1cb11e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55fe1cb11f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55fe1cb11f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55fe1cb125b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55fe1cb12080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55fe1cb121a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe1cb123a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55fe1cb12420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55fe1cb12678 <col:47>
| |-NonNullAttr 0x55fe1cb126d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55fe1cb12708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55fe1cb12830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55fe1cb12760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55fe1cb12a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55fe1cb128e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55fe1cb12968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55fe1cb12c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55fe1cb12b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55fe1cb12d00 <col:60>
|-FunctionDecl 0x55fe1cb12e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55fe1cb12ef0 <col:54>
| `-ConstAttr 0x55fe1cb12f48 <col:95>
|-FunctionDecl 0x55fe1cb14990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55fe1cb12f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fe1cb12ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55fe1cb14a40 <line:395:19>
| `-ConstAttr 0x55fe1cb14a98 <col:60>
|-FunctionDecl 0x55fe1cb14c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55fe1cb14b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55fe1cb14d10 <col:71>
| `-NonNullAttr 0x55fe1cb14d68 <col:112, col:126> 1
|-FunctionDecl 0x55fe1cb14e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55fe1cb14db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55fe1cb14f18 <line:398:22>
| `-NonNullAttr 0x55fe1cb14f70 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb15198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55fe1cb14fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55fe1cb15038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55fe1cb15248 <line:401:22>
| `-NonNullAttr 0x55fe1cb152a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb154a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55fe1cb152e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fe1cb15368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55fe1cb15558 <line:404:22>
| `-NonNullAttr 0x55fe1cb155b0 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb15808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55fe1cb155f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55fe1cb156a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55fe1cb158b8 <line:407:22>
| `-NonNullAttr 0x55fe1cb15910 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb16b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55fe1cb169b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fe1cb16a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55fe1cb16c18 <line:410:22>
| `-NonNullAttr 0x55fe1cb16c70 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb16ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55fe1cb16cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe1cb16d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55fe1cb16f58 <line:413:22>
| `-NonNullAttr 0x55fe1cb16fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb171e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55fe1cb16ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe1cb17088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55fe1cb17298 <col:37>
| `-NonNullAttr 0x55fe1cb172f0 <col:78, col:95> 1 2
|-FunctionDecl 0x55fe1cb174d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe1cb17338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe1cb173b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55fe1cb17588 <line:419:22>
| `-NonNullAttr 0x55fe1cb175e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb17768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55fe1cb17628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fe1cb176a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55fe1cb17818 <line:421:22>
| `-NonNullAttr 0x55fe1cb17870 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb17a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe1cb178b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe1cb17938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55fe1cb17ae8 <line:424:22>
| `-NonNullAttr 0x55fe1cb17b40 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb17cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55fe1cb17b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fe1cb17c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55fe1cb17d78 <line:427:22>
| `-NonNullAttr 0x55fe1cb17dd0 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb17f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe1cb17e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe1cb17e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55fe1cb18028 <line:430:22>
| `-NonNullAttr 0x55fe1cb18080 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb18208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55fe1cb180c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fe1cb18148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55fe1cb182b8 <line:432:22>
| `-NonNullAttr 0x55fe1cb18310 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb18538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55fe1cb18358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe1cb183d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55fe1cb185e8 <line:435:22>
| |-NonNullAttr 0x55fe1cb18640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55fe1cb18678 <col:100> "" ""
|-FunctionDecl 0x55fe1cb18888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55fe1cb186c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fe1cb18748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55fe1cb18938 <line:438:22>
| |-NonNullAttr 0x55fe1cb18990 <col:63, col:77> 1
| `-DeprecatedAttr 0x55fe1cb189d8 <col:97> "" ""
|-FunctionDecl 0x55fe1cb18bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55fe1cb18a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe1cb18aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55fe1cb18c78 <line:441:22>
| `-NonNullAttr 0x55fe1cb18cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb18e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55fe1cb18d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fe1cb18d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55fe1cb18f00 <line:444:22>
| `-NonNullAttr 0x55fe1cb18f58 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb19248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55fe1cb18fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fe1cb19028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55fe1cb190a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55fe1cb19300 <line:448:22>
| `-NonNullAttr 0x55fe1cb19358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55fe1cb19608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55fe1cb193b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fe1cb19430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55fe1cb194a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55fe1cb196c0 <col:43>
| `-NonNullAttr 0x55fe1cb19718 <col:84, col:98> 1
|-FunctionDecl 0x55fe1cb19a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55fe1cb19768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fe1cb197e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55fe1cb19878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55fe1cb19ad8 <line:453:22>
| `-NonNullAttr 0x55fe1cb19b30 <col:63, col:77> 3
|-FunctionDecl 0x55fe1cb19e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55fe1cb19b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fe1cb19bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55fe1cb19c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55fe1cb19ec0 <line:457:22>
| `-NonNullAttr 0x55fe1cb19f18 <col:63, col:80> 2 3
|-FunctionDecl 0x55fe1cb1a108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55fe1cb19f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fe1cb19fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55fe1cb1a1b8 <line:459:22>
|-FunctionDecl 0x55fe1cb1a588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55fe1cb1a280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55fe1cb1a420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55fe1cb1a638 <col:52, col:69> 1 2
|-FunctionDecl 0x55fe1cb1a7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55fe1cb1a6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55fe1cb1a740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55fe1cb1a9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55fe1cb1a8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55fe1cb1a928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55fe1cb1ab48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55fe1cb1aab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55fe1cb1ac88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55fe1cb1ad28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55fe1cb1add8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55fe1cb1aec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55fe1cb1af30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55fe1cb1b100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_7/rfi009_pso.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55fe1cb1b1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55fe1cb1b2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55fe1cb1b250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55fe1cb1adb0 '__pthread_unwind_buf_t'
| |   `-Record 0x55fe1cb1ad28 ''
| `-AlignedAttr 0x55fe1cb1b308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55fe1cb1b380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55fe1cb1b4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55fe1cb1b548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55fe1cb1b5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55fe1cb1b618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55fe1cb1b820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55fe1cb1b710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55fe1cb1ba00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55fe1cb1b8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55fe1cb1bbc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55fe1cb1bab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55fe1cb1bc68 <line:488:22>
|-RecordDecl 0x55fe1cb1bcc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55fe1cb1bfd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55fe1cb1be38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55fe1cb1beb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55fe1cb1c088 <col:86>
| `-ReturnsTwiceAttr 0x55fe1cb1c0e0 <col:12> Implicit
|-FunctionDecl 0x55fe1cb1c408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55fe1cb1c1b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55fe1cb1c2c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55fe1cb1c4b8 <line:494:22>
| `-NonNullAttr 0x55fe1cb1c510 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb1c688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fe1cb1c558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fe1cb1c730 <line:496:22>
| `-NonNullAttr 0x55fe1cb1c788 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb1c890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fe1cb1c7d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fe1cb1c938 <line:498:22>
| `-NonNullAttr 0x55fe1cb1c990 <col:52, col:66> 1
|-FunctionDecl 0x55fe1cb1dad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fe1cb1da20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fe1cb1db80 <line:500:22>
| `-NonNullAttr 0x55fe1cb1dbd8 <col:52, col:66> 1
|-FunctionDecl 0x55fe1cb1de18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55fe1cb1dc28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55fe1cb1dcb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55fe1cb1dec8 <col:36>
| `-NonNullAttr 0x55fe1cb1df20 <col:66, col:83> 1 2
|-FunctionDecl 0x55fe1cb1e020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fe1cb1df68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fe1cb1e0c8 <line:505:22>
| `-NonNullAttr 0x55fe1cb1e120 <col:52, col:66> 1
|-FunctionDecl 0x55fe1cb1e3b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe1cb1e1d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55fe1cb1e250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55fe1cb1e468 <line:509:22>
| `-NonNullAttr 0x55fe1cb1e4c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb1e788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55fe1cb1e508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55fe1cb1e588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55fe1cb1e608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55fe1cb1e840 <line:513:22>
| `-NonNullAttr 0x55fe1cb1e898 <col:63, col:80> 1 3
|-FunctionDecl 0x55fe1cb1ea30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fe1cb1e8e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fe1cb1ead8 <line:515:22>
| `-NonNullAttr 0x55fe1cb1eb30 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb1ed18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55fe1cb1ebe0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55fe1cb1edc0 <line:517:22>
| `-NonNullAttr 0x55fe1cb1ee18 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb1ef20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55fe1cb1ee68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55fe1cb1efc8 <line:519:22>
| `-NonNullAttr 0x55fe1cb1f020 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb1f248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe1cb1f068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55fe1cb1f0e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55fe1cb1f2f8 <line:523:22>
| `-NonNullAttr 0x55fe1cb1f350 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb1f558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fe1cb1f398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fe1cb1f418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55fe1cb1f608 <line:526:22>
| `-NonNullAttr 0x55fe1cb1f660 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb1f808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe1cb1f6a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55fe1cb1f728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55fe1cb1f8b8 <line:529:22>
| `-NonNullAttr 0x55fe1cb1f910 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb1fb00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fe1cb1f958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fe1cb1fa40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55fe1cb1fbb0 <line:531:22>
| `-NonNullAttr 0x55fe1cb1fc08 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb1fdb8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe1cb1fc58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55fe1cb1fcd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55fe1cb1fe68 <line:535:22>
| `-NonNullAttr 0x55fe1cb1fec0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb20048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fe1cb1ff08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fe1cb1ff88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55fe1cb200f8 <line:538:22>
| `-NonNullAttr 0x55fe1cb20150 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb202f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe1cb20198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55fe1cb20218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55fe1cb203a8 <line:542:22>
| `-NonNullAttr 0x55fe1cb20400 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb20588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fe1cb20448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fe1cb204c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55fe1cb20638 <line:545:22>
| `-NonNullAttr 0x55fe1cb20690 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb20878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55fe1cb206d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fe1cb20758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55fe1cb20928 <line:548:22>
| `-NonNullAttr 0x55fe1cb20980 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb21b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fe1cb209c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fe1cb21a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55fe1cb21be8 <line:551:22>
| `-NonNullAttr 0x55fe1cb21c40 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb21f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55fe1cb21d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55fe1cb21e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55fe1cb22028 <col:29>
| `-NonNullAttr 0x55fe1cb22080 <col:70, col:84> 1
|-FunctionDecl 0x55fe1cb221f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fe1cb220c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fe1cb222a0 <line:556:22>
| `-NonNullAttr 0x55fe1cb222f8 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb22400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fe1cb22348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fe1cb224a8 <line:558:22>
| `-NonNullAttr 0x55fe1cb22500 <col:52, col:66> 1
|-FunctionDecl 0x55fe1cb22600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fe1cb22548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fe1cb226a8 <line:560:19>
| `-NonNullAttr 0x55fe1cb22700 <col:49, col:63> 1
|-FunctionDecl 0x55fe1cb22938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55fe1cb22748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55fe1cb227d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55fe1cb229e8 <col:39>
| `-NonNullAttr 0x55fe1cb22a70 <col:69, col:86> 1 2
|-FunctionDecl 0x55fe1cb22b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fe1cb22ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fe1cb22c18 <line:565:22>
| `-NonNullAttr 0x55fe1cb22c70 <col:52, col:66> 1
|-FunctionDecl 0x55fe1cb22d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fe1cb22cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fe1cb22e18 <line:567:22>
| `-NonNullAttr 0x55fe1cb22e70 <col:52, col:66> 1
|-FunctionDecl 0x55fe1cb23028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55fe1cb22eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55fe1cb22f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55fe1cb230d8 <col:39>
| `-NonNullAttr 0x55fe1cb23130 <col:69, col:86> 1 2
|-FunctionDecl 0x55fe1cb23230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fe1cb23178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fe1cb232d8 <line:572:22>
| `-NonNullAttr 0x55fe1cb23330 <col:52, col:66> 1
|-FunctionDecl 0x55fe1cb23518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55fe1cb233e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55fe1cb235c0 <line:574:22>
| `-NonNullAttr 0x55fe1cb23618 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb23720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55fe1cb23668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55fe1cb237c8 <line:576:22>
| `-NonNullAttr 0x55fe1cb23820 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb23a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe1cb23868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55fe1cb238e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55fe1cb23b30 <line:580:22>
| `-NonNullAttr 0x55fe1cb23b88 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb23d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55fe1cb23bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55fe1cb23c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55fe1cb23e48 <line:583:22>
| `-NonNullAttr 0x55fe1cb23ea0 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb24048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe1cb23ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55fe1cb23f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55fe1cb240f8 <line:587:22>
| `-NonNullAttr 0x55fe1cb24150 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb242d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55fe1cb24198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55fe1cb24218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55fe1cb24388 <col:36>
| `-NonNullAttr 0x55fe1cb243e0 <col:77, col:91> 1
|-FunctionDecl 0x55fe1cb24718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55fe1cb244c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55fe1cb245d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55fe1cb247c8 <line:592:22>
| `-NonNullAttr 0x55fe1cb24820 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb24998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55fe1cb24868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55fe1cb24a40 <line:594:22>
| `-NonNullAttr 0x55fe1cb24ac0 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb24bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55fe1cb24b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55fe1cb24c68 <line:596:22>
| `-NonNullAttr 0x55fe1cb24cc0 <col:52, col:66> 1
|-FunctionDecl 0x55fe1cb24dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55fe1cb24d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55fe1cb24e68 <line:598:22>
| `-NonNullAttr 0x55fe1cb24ec0 <col:52, col:66> 1
|-FunctionDecl 0x55fe1cb250e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55fe1cb24f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55fe1cb24f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55fe1cb25198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55fe1cb254c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55fe1cb25218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55fe1cb25290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55fe1cb25320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55fe1cb25580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55fe1cb25798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55fe1cb25660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55fe1cb25840 <line:607:22>
| `-NonNullAttr 0x55fe1cb25898 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb259a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55fe1cb258e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55fe1cb25a48 <line:609:22>
| `-NonNullAttr 0x55fe1cb25ad0 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb25cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe1cb25b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55fe1cb25b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55fe1cb25da8 <line:613:22>
| `-NonNullAttr 0x55fe1cb25e00 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb26008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55fe1cb25e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55fe1cb25ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55fe1cb260b8 <col:37>
| `-NonNullAttr 0x55fe1cb26110 <col:78, col:92> 1
|-FunctionDecl 0x55fe1cb26328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55fe1cb26158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55fe1cb26200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55fe1cb263d8 <line:619:22>
| `-NonNullAttr 0x55fe1cb26430 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb265f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55fe1cb26478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55fe1cb264f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55fe1cb266a8 <line:622:22>
| `-NonNullAttr 0x55fe1cb26700 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb269a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55fe1cb267e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55fe1cb26860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55fe1cb26a58 <line:624:22>
| `-NonNullAttr 0x55fe1cb26ae0 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb26c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55fe1cb26b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55fe1cb26d00 <line:626:22>
| `-NonNullAttr 0x55fe1cb26d58 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb26e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55fe1cb26da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55fe1cb26f08 <line:628:22>
| `-NonNullAttr 0x55fe1cb26f60 <col:52, col:66> 1
|-FunctionDecl 0x55fe1cb27060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55fe1cb26fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55fe1cb27108 <line:630:22>
| `-NonNullAttr 0x55fe1cb27160 <col:52, col:66> 1
|-FunctionDecl 0x55fe1cb27260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55fe1cb271a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55fe1cb27308 <line:632:22>
| `-NonNullAttr 0x55fe1cb27360 <col:52, col:66> 1
|-FunctionDecl 0x55fe1cb27738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55fe1cb27440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55fe1cb27550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55fe1cb275d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55fe1cb277f0 <line:636:22>
| `-NonNullAttr 0x55fe1cb27848 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb279c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55fe1cb27898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55fe1cb27a70 <line:638:22>
| `-NonNullAttr 0x55fe1cb28b00 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb28c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55fe1cb28b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55fe1cb28ca8 <line:640:22>
| `-NonNullAttr 0x55fe1cb28d00 <col:52, col:66> 1
|-FunctionDecl 0x55fe1cb28ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55fe1cb28db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55fe1cb28f90 <line:642:22>
| `-NonNullAttr 0x55fe1cb28fe8 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb290f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55fe1cb29038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55fe1cb29198 <line:644:22>
| `-NonNullAttr 0x55fe1cb291f0 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb29418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fe1cb29238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55fe1cb292b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55fe1cb294c8 <line:648:22>
| `-NonNullAttr 0x55fe1cb29520 <col:63, col:80> 1 2
|-FunctionDecl 0x55fe1cb29728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55fe1cb29568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55fe1cb295e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55fe1cb297d8 <line:651:22>
| `-NonNullAttr 0x55fe1cb29830 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb29b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55fe1cb29910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55fe1cb29a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55fe1cb29c48 <line:654:22>
| `-NonNullAttr 0x55fe1cb29ca0 <col:63, col:77> 1
|-FunctionDecl 0x55fe1cb29df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55fe1cb29ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55fe1cb29ea0 <col:69>
|-FunctionDecl 0x55fe1cb2a018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55fe1cb29f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55fe1cb2a0c0 <col:72>
|-FunctionDecl 0x55fe1cb2a2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55fe1cb2a128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55fe1cb2a1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55fe1cb2a3a8 <col:44>
|-FunctionDecl 0x55fe1cb2a5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55fe1cb2a410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fe1cb2a488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55fe1cb2a678 <line:661:22>
| `-NonNullAttr 0x55fe1cb2a6d0 <col:63, col:77> 2
|-FunctionDecl 0x55fe1cb2ab30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55fe1cb2a7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55fe1cb2a8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55fe1cb2a9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55fe1cb2abe8 <col:47>
|-FunctionDecl 0x55fe1cb2acf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55fe1cb2ac58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55fe1cb2ae48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55fe1cb2adb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55fe1cb2afa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55fe1cb2af08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55fe1cb2b068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55fe1cb2b128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55fe1cb2b1e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55fe1cb2b2a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55fe1cb2b320 prev 0x55fe1cb2b2a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55fe1cb2b388 <col:24> 'int' 0
|-VarDecl 0x55fe1cb2b3c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55fe1cb2b440 prev 0x55fe1cb2b3c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55fe1cb2b4a8 <col:27> 'int' 0
|-VarDecl 0x55fe1cb2b4e0 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55fe1cb2b560 prev 0x55fe1cb2b4e0 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55fe1cb2b5c8 <col:27> 'int' 0
|-VarDecl 0x55fe1cb2b600 <line:678:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55fe1cb2b680 prev 0x55fe1cb2b600 <line:679:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55fe1cb2b6e8 <col:27> 'int' 0
|-VarDecl 0x55fe1cb2b720 <line:680:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55fe1cb2b7a0 prev 0x55fe1cb2b720 <line:681:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55fe1cb2b808 <col:27> 'int' 0
|-VarDecl 0x55fe1cb2b838 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55fe1cb2b8b0 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55fe1cb2b930 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x55fe1cb2b9b0 prev 0x55fe1cb2b930 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55fe1cb2ba18 <col:9> 'int' 0
|-VarDecl 0x55fe1cb2ba50 <line:686:1, col:5> col:5 used y 'int'
|-VarDecl 0x55fe1cb2bb00 prev 0x55fe1cb2ba50 <line:687:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55fe1cb2bb68 <col:9> 'int' 0
|-VarDecl 0x55fe1cb2bb98 <line:688:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55fe1cb2bc18 <line:689:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55fe1cb2bc90 <line:690:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55fe1cb2bd08 <line:691:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55fe1cb2bd80 <line:692:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55fe1cb2bdf8 <line:693:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x55fe1cb2be70 <line:694:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55fe1cb2bee8 <line:695:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55fe1cb2bf60 <line:696:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55fe1cb2bfd8 <line:697:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x55fe1cb2c050 <line:698:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55fe1cb2c0d0 <line:699:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55fe1cb2c150 <line:700:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55fe1cb2c1c8 <line:701:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55fe1cb2c248 <line:702:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55fe1cb2c2c0 <line:703:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55fe1cb2c338 <line:704:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55fe1cb2c3b0 <line:705:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55fe1cb2c4c8 prev 0x55fe1cb2acf0 <line:706:1, line:733:1> line:706:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55fe1cb2c430 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55fe1cb2f428 <line:707:1, line:733:1>
|   |-CallExpr 0x55fe1cb2c5d8 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb2c5c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb2c570 <col:3> 'void ()' Function 0x55fe1cad1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe1cb2c650 <line:709:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb2c5f8 <col:3> 'int' lvalue Var 0x55fe1cb2b440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55fe1cb2c638 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe1cb2c618 <col:25> 'int' lvalue Var 0x55fe1cb2b9b0 'x' 'int'
|   |-CallExpr 0x55fe1cb2c6a8 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb2c690 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb2c670 <col:3> 'void ()' Function 0x55fe1cad2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe1cb2c700 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb2c6e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb2c6c8 <col:3> 'void ()' Function 0x55fe1cad1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe1cb2c7c8 <line:712:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2c720 <col:3> '_Bool' lvalue Var 0x55fe1cb2c338 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55fe1cb2c7a8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55fe1cb2c790 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55fe1cb2c740 <col:19> '_Bool (void)' Function 0x55fe1cad1770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55fe1cb2c860 <line:713:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2c7e8 <col:3> '_Bool' lvalue Var 0x55fe1cb2c3b0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55fe1cb2c840 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55fe1cb2c828 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55fe1cb2c808 <col:19> '_Bool (void)' Function 0x55fe1cad1770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55fe1cb2c8d8 <line:714:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2c880 <col:3> '_Bool' lvalue Var 0x55fe1cb2bb98 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb2c8c0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe1cb2c8a0 <col:21> '_Bool' lvalue Var 0x55fe1cb2c3b0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55fe1cb2c950 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb2c8f8 <col:3> 'int' lvalue Var 0x55fe1cb2bc18 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55fe1cb2c938 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe1cb2c918 <col:15> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
|   |-BinaryOperator 0x55fe1cb2cda0 <line:716:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb2c970 <col:3> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
|   | `-ConditionalOperator 0x55fe1cb2cd70 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55fe1cb2cb98 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55fe1cb2caa0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55fe1cb2c9c8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55fe1cb2c9b0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55fe1cb2c990 <col:8> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55fe1cb2ca80 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55fe1cb2ca18 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55fe1cb2ca00 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55fe1cb2c9e0 <col:27> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55fe1cb2ca68 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55fe1cb2ca50 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55fe1cb2ca30 <col:46> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55fe1cb2cb78 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55fe1cb2cb10 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55fe1cb2cae0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55fe1cb2cac0 <col:65> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55fe1cb2cb60 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55fe1cb2cb48 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55fe1cb2cb28 <col:84> '_Bool' lvalue Var 0x55fe1cb2bee8 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe1cb2cd58 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe1cb2cbb8 <col:101> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
|   |   `-ParenExpr 0x55fe1cb2cd38 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55fe1cb2cd08 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55fe1cb2cc78 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fe1cb2cc30 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fe1cb2cc18 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fe1cb2cbd8 <col:106> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fe1cb2cc60 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fe1cb2cc48 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fe1cb2cbf8 <col:124> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55fe1cb2ccd8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fe1cb2cc98 <col:141> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55fe1cb2ccf0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe1cb2ccb8 <col:153> 'int' lvalue Var 0x55fe1cb2c248 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55fe1cb2d2b0 <line:717:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb2cdc0 <col:3> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55fe1cb2d280 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55fe1cb2d250 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fe1cb2d238 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fe1cb2cde0 <col:15> '_Bool' lvalue Var 0x55fe1cb2c3b0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe1cb2d268 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe1cb2ce00 <col:31> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55fe1cb2d218 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55fe1cb2d1e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55fe1cb2d010 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55fe1cb2cf30 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55fe1cb2ce58 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55fe1cb2ce40 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55fe1cb2ce20 <col:45> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55fe1cb2cf10 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55fe1cb2cea8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55fe1cb2ce90 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55fe1cb2ce70 <col:64> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55fe1cb2cef8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55fe1cb2cee0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55fe1cb2cec0 <col:83> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55fe1cb2cff0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55fe1cb2cf88 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55fe1cb2cf70 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55fe1cb2cf50 <col:102> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55fe1cb2cfd8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55fe1cb2cfc0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55fe1cb2cfa0 <col:121> '_Bool' lvalue Var 0x55fe1cb2bee8 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55fe1cb2d1d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fe1cb2d030 <col:138> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55fe1cb2d1b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55fe1cb2d180 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55fe1cb2d0f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55fe1cb2d0a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55fe1cb2d090 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55fe1cb2d050 <col:151> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55fe1cb2d0d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55fe1cb2d0c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55fe1cb2d070 <col:169> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55fe1cb2d150 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55fe1cb2d110 <col:186> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55fe1cb2d168 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55fe1cb2d130 <col:198> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55fe1cb2d7c0 <line:718:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb2d2d0 <col:3> 'int' lvalue Var 0x55fe1cb2c248 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55fe1cb2d790 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55fe1cb2d760 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fe1cb2d748 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fe1cb2d2f0 <col:15> '_Bool' lvalue Var 0x55fe1cb2c3b0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe1cb2d778 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe1cb2d310 <col:31> 'int' lvalue Var 0x55fe1cb2c248 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55fe1cb2d728 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55fe1cb2d6f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55fe1cb2d520 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55fe1cb2d440 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55fe1cb2d368 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55fe1cb2d350 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55fe1cb2d330 <col:45> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55fe1cb2d420 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55fe1cb2d3b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55fe1cb2d3a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55fe1cb2d380 <col:64> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55fe1cb2d408 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55fe1cb2d3f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55fe1cb2d3d0 <col:83> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55fe1cb2d500 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55fe1cb2d498 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55fe1cb2d480 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55fe1cb2d460 <col:102> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55fe1cb2d4e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55fe1cb2d4d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55fe1cb2d4b0 <col:121> '_Bool' lvalue Var 0x55fe1cb2bee8 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55fe1cb2d6e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fe1cb2d540 <col:138> 'int' lvalue Var 0x55fe1cb2c248 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55fe1cb2d6c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55fe1cb2d690 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55fe1cb2d600 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55fe1cb2d5b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55fe1cb2d5a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55fe1cb2d560 <col:151> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55fe1cb2d5e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55fe1cb2d5d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55fe1cb2d580 <col:169> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55fe1cb2d660 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55fe1cb2d620 <col:186> 'int' lvalue Var 0x55fe1cb2c248 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55fe1cb2d678 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55fe1cb2d640 <col:198> 'int' lvalue Var 0x55fe1cb2c248 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55fe1cb2dd78 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2d7e0 <col:3> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb2dd60 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe1cb2dd30 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55fe1cb2dce8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe1cb2dcd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe1cb2d800 <col:20> '_Bool' lvalue Var 0x55fe1cb2c3b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe1cb2dd18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe1cb2dd00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe1cb2d820 <col:36> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55fe1cb2dcb0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55fe1cb2dc80 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55fe1cb2da30 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fe1cb2d950 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fe1cb2d878 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fe1cb2d860 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fe1cb2d840 <col:55> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fe1cb2d930 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fe1cb2d8c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fe1cb2d8b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fe1cb2d890 <col:74> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55fe1cb2d918 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fe1cb2d900 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fe1cb2d8e0 <col:93> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fe1cb2da10 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fe1cb2d9a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fe1cb2d990 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fe1cb2d970 <col:112> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55fe1cb2d9f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fe1cb2d9e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fe1cb2d9c0 <col:131> '_Bool' lvalue Var 0x55fe1cb2bee8 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55fe1cb2dc68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fe1cb2dc50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fe1cb2da50 <col:148> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55fe1cb2dc30 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55fe1cb2dc00 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55fe1cb2db20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fe1cb2dac8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fe1cb2dab0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fe1cb2da70 <col:166> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fe1cb2daf8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fe1cb2dae0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fe1cb2da90 <col:184> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55fe1cb2dbb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fe1cb2db70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fe1cb2db40 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fe1cb2dbe8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55fe1cb2dbd0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55fe1cb2db98 <col:212> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fe1cb2e340 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2dd98 <col:3> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb2e328 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe1cb2e2f8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55fe1cb2e2b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe1cb2e298 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe1cb2ddb8 <col:20> '_Bool' lvalue Var 0x55fe1cb2c3b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe1cb2e2e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe1cb2e2c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe1cb2ddd8 <col:36> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55fe1cb2e278 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55fe1cb2e248 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55fe1cb2dfe8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fe1cb2df08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fe1cb2de30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fe1cb2de18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fe1cb2ddf8 <col:55> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fe1cb2dee8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fe1cb2de80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fe1cb2de68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fe1cb2de48 <col:74> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55fe1cb2ded0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fe1cb2deb8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fe1cb2de98 <col:93> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fe1cb2dfc8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fe1cb2df60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fe1cb2df48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fe1cb2df28 <col:112> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55fe1cb2dfb0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fe1cb2df98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fe1cb2df78 <col:131> '_Bool' lvalue Var 0x55fe1cb2bee8 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55fe1cb2e230 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fe1cb2e218 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fe1cb2e008 <col:148> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55fe1cb2e1f8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55fe1cb2e1c8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55fe1cb2e0c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fe1cb2e080 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fe1cb2e068 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fe1cb2e028 <col:166> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fe1cb2e0b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fe1cb2e098 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fe1cb2e048 <col:184> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55fe1cb2e198 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fe1cb2e118 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fe1cb2e0e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fe1cb2e1b0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55fe1cb2e170 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55fe1cb2e140 <col:219> 'int' 0
|   |-BinaryOperator 0x55fe1cb2e8e8 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2e360 <col:3> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb2e8d0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe1cb2e8a0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55fe1cb2e858 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe1cb2e840 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe1cb2e380 <col:20> '_Bool' lvalue Var 0x55fe1cb2c3b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe1cb2e888 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe1cb2e870 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe1cb2e3a0 <col:36> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55fe1cb2e820 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55fe1cb2e7f0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55fe1cb2e5b0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fe1cb2e4d0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fe1cb2e3f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fe1cb2e3e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fe1cb2e3c0 <col:55> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fe1cb2e4b0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fe1cb2e448 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fe1cb2e430 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fe1cb2e410 <col:74> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55fe1cb2e498 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fe1cb2e480 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fe1cb2e460 <col:93> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fe1cb2e590 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fe1cb2e528 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fe1cb2e510 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fe1cb2e4f0 <col:112> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55fe1cb2e578 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fe1cb2e560 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fe1cb2e540 <col:131> '_Bool' lvalue Var 0x55fe1cb2bee8 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55fe1cb2e7d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fe1cb2e7c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fe1cb2e5d0 <col:148> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55fe1cb2e7a0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55fe1cb2e770 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55fe1cb2e690 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fe1cb2e648 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fe1cb2e630 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fe1cb2e5f0 <col:166> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fe1cb2e678 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fe1cb2e660 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fe1cb2e610 <col:184> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55fe1cb2e728 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fe1cb2e6e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fe1cb2e6b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fe1cb2e758 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55fe1cb2e740 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55fe1cb2e708 <col:212> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55fe1cb2eec0 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2e908 <col:3> '_Bool' lvalue Var 0x55fe1cb2bee8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb2eea8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe1cb2ee78 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55fe1cb2ee30 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe1cb2ee18 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe1cb2e928 <col:20> '_Bool' lvalue Var 0x55fe1cb2c3b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe1cb2ee60 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe1cb2ee48 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe1cb2e948 <col:36> '_Bool' lvalue Var 0x55fe1cb2bee8 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55fe1cb2edf8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55fe1cb2edc8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55fe1cb2eb68 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fe1cb2ea78 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fe1cb2e9a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fe1cb2e988 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fe1cb2e968 <col:55> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fe1cb2ea58 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fe1cb2e9f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fe1cb2e9d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fe1cb2e9b8 <col:74> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55fe1cb2ea40 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fe1cb2ea28 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fe1cb2ea08 <col:93> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fe1cb2eb48 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fe1cb2ead0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fe1cb2eab8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fe1cb2ea98 <col:112> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55fe1cb2eb30 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fe1cb2eb08 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fe1cb2eae8 <col:131> '_Bool' lvalue Var 0x55fe1cb2bee8 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55fe1cb2edb0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fe1cb2ed98 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fe1cb2eb88 <col:148> '_Bool' lvalue Var 0x55fe1cb2bee8 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55fe1cb2ed78 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55fe1cb2ed48 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55fe1cb2ec48 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fe1cb2ec00 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fe1cb2ebe8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fe1cb2eba8 <col:166> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fe1cb2ec30 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fe1cb2ec18 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fe1cb2ebc8 <col:184> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55fe1cb2ed18 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fe1cb2ec98 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fe1cb2ec68 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fe1cb2ed30 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55fe1cb2ecf0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55fe1cb2ecc0 <col:219> 'int' 0
|   |-BinaryOperator 0x55fe1cb2ef38 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb2eee0 <col:3> 'int' lvalue Var 0x55fe1cb2b560 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55fe1cb2ef20 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe1cb2ef00 <col:25> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
|   |-BinaryOperator 0x55fe1cb2f068 <line:724:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb2ef58 <col:3> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
|   | `-ConditionalOperator 0x55fe1cb2f038 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55fe1cb2eff0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fe1cb2efd8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fe1cb2ef78 <col:7> '_Bool' lvalue Var 0x55fe1cb2bb98 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe1cb2f008 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe1cb2ef98 <col:25> 'int' lvalue Var 0x55fe1cb2bc18 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55fe1cb2f020 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55fe1cb2efb8 <col:37> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
|   |-BinaryOperator 0x55fe1cb2f100 <line:725:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2f088 <col:3> '_Bool' lvalue Var 0x55fe1cb2bb98 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55fe1cb2f0d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55fe1cb2f0a8 <col:28> 'int' 0
|   |-CallExpr 0x55fe1cb2f158 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb2f140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb2f120 <col:3> 'void ()' Function 0x55fe1cad2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe1cb2f1b0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb2f198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb2f178 <col:3> 'void ()' Function 0x55fe1cad1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55fe1cb2f208 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb2f1f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb2f1d0 <col:3> 'void ()' Function 0x55fe1cad2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe1cb2f260 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb2f248 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb2f228 <col:3> 'void ()' Function 0x55fe1cad1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe1cb2f318 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb2f280 <col:3> 'int' lvalue Var 0x55fe1cb2b320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55fe1cb2f2f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55fe1cb2f2e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe1cb2f2a0 <col:22> 'int' lvalue Var 0x55fe1cb2b320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55fe1cb2f2c0 <col:41> 'int' 1
|   |-CallExpr 0x55fe1cb2f370 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb2f358 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb2f338 <col:3> 'void ()' Function 0x55fe1cad2060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55fe1cb2f418 <line:732:3, col:36>
|     `-CallExpr 0x55fe1cb2f3f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55fe1cb2f3e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55fe1cb2f390 <col:10> 'void *(void)' Function 0x55fe1cad1ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55fe1cb2f5b0 prev 0x55fe1cb2ae48 <line:734:1, line:778:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55fe1cb2f518 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55fe1cb33830 <line:735:1, line:778:1>
|   |-CallExpr 0x55fe1cb2f690 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb2f678 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb2f658 <col:3> 'void ()' Function 0x55fe1cad1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe1cb2f708 <line:737:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb2f6b0 <col:3> 'int' lvalue Var 0x55fe1cb2c248 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55fe1cb2f6f0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe1cb2f6d0 <col:15> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55fe1cb2f768 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb2f728 <col:3> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55fe1cb2f748 <col:15> 'int' 1
|   |-BinaryOperator 0x55fe1cb2f7e0 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2f788 <col:3> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb2f7c8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe1cb2f7a8 <col:20> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fe1cb2f878 <line:740:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2f800 <col:3> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55fe1cb2f850 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55fe1cb2f820 <col:27> 'int' 1
|   |-CallExpr 0x55fe1cb2f9f8 <line:741:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55fe1cb2f9e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55fe1cb2f898 <col:3> 'void (int)' Function 0x55fe1cad1d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55fe1cb2f998 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55fe1cb2f978 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55fe1cb2f958 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55fe1cb2f910 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55fe1cb2f8f8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55fe1cb2f8b8 <col:23> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55fe1cb2f940 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55fe1cb2f928 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55fe1cb2f8d8 <col:41> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fe1cb2fa78 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2fa20 <col:3> '_Bool' lvalue Var 0x55fe1cb2be70 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb2fa60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe1cb2fa40 <col:20> '_Bool' lvalue Var 0x55fe1cb2bc90 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55fe1cb2faf0 <line:743:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2fa98 <col:3> '_Bool' lvalue Var 0x55fe1cb2bee8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb2fad8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe1cb2fab8 <col:20> '_Bool' lvalue Var 0x55fe1cb2bd08 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55fe1cb2fb78 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2fb10 <col:3> '_Bool' lvalue Var 0x55fe1cb2bf60 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb2fb60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe1cb2fb40 <col:20> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55fe1cb2fbf0 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2fb98 <col:3> '_Bool' lvalue Var 0x55fe1cb2bfd8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb2fbd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe1cb2fbb8 <col:20> '_Bool' lvalue Var 0x55fe1cb2bdf8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55fe1cb2fc88 <line:746:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2fc10 <col:3> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55fe1cb2fc60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55fe1cb2fc30 <col:27> 'int' 1
|   |-CallExpr 0x55fe1cb2fce0 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb2fcc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb2fca8 <col:3> 'void ()' Function 0x55fe1cad2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe1cb2fd38 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb2fd20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb2fd00 <col:3> 'void ()' Function 0x55fe1cad1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe1cb2fdd0 <line:749:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2fd58 <col:3> '_Bool' lvalue Var 0x55fe1cb2c338 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55fe1cb2fdb0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55fe1cb2fd98 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55fe1cb2fd78 <col:19> '_Bool (void)' Function 0x55fe1cad1770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55fe1cb2fe68 <line:750:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2fdf0 <col:3> '_Bool' lvalue Var 0x55fe1cb2c3b0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55fe1cb2fe48 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55fe1cb2fe30 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55fe1cb2fe10 <col:19> '_Bool (void)' Function 0x55fe1cad1770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55fe1cb2fee0 <line:751:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb2fe88 <col:3> '_Bool' lvalue Var 0x55fe1cb2bb98 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb2fec8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe1cb2fea8 <col:21> '_Bool' lvalue Var 0x55fe1cb2c3b0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55fe1cb2ff58 <line:752:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb2ff00 <col:3> 'int' lvalue Var 0x55fe1cb2bc18 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55fe1cb2ff40 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe1cb2ff20 <col:15> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
|   |-BinaryOperator 0x55fe1cb30390 <line:753:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb2ff78 <col:3> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
|   | `-ConditionalOperator 0x55fe1cb30360 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55fe1cb30188 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55fe1cb300a8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55fe1cb2ffd0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55fe1cb2ffb8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55fe1cb2ff98 <col:8> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55fe1cb30088 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55fe1cb30020 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55fe1cb30008 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55fe1cb2ffe8 <col:27> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55fe1cb30070 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55fe1cb30058 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55fe1cb30038 <col:46> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55fe1cb30168 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55fe1cb30100 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55fe1cb300e8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55fe1cb300c8 <col:65> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55fe1cb30150 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55fe1cb30138 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55fe1cb30118 <col:84> '_Bool' lvalue Var 0x55fe1cb2bf60 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe1cb30348 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe1cb301a8 <col:101> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
|   |   `-ParenExpr 0x55fe1cb30328 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55fe1cb302f8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55fe1cb30268 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fe1cb30220 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fe1cb30208 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fe1cb301c8 <col:106> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fe1cb30250 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fe1cb30238 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fe1cb301e8 <col:124> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55fe1cb302c8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fe1cb30288 <col:141> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55fe1cb302e0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe1cb302a8 <col:153> 'int' lvalue Var 0x55fe1cb2c248 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55fe1cb308a0 <line:754:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb303b0 <col:3> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55fe1cb30870 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55fe1cb30840 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fe1cb30828 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fe1cb303d0 <col:15> '_Bool' lvalue Var 0x55fe1cb2c3b0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe1cb30858 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe1cb303f0 <col:31> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55fe1cb30808 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55fe1cb307d8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55fe1cb30600 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55fe1cb30520 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55fe1cb30448 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55fe1cb30430 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55fe1cb30410 <col:45> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55fe1cb30500 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55fe1cb30498 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55fe1cb30480 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55fe1cb30460 <col:64> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55fe1cb304e8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55fe1cb304d0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55fe1cb304b0 <col:83> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55fe1cb305e0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55fe1cb30578 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55fe1cb30560 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55fe1cb30540 <col:102> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55fe1cb305c8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55fe1cb305b0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55fe1cb30590 <col:121> '_Bool' lvalue Var 0x55fe1cb2bf60 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55fe1cb307c0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fe1cb30620 <col:138> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55fe1cb307a0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55fe1cb30770 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55fe1cb306e0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55fe1cb30698 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55fe1cb30680 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55fe1cb30640 <col:151> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55fe1cb306c8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55fe1cb306b0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55fe1cb30660 <col:169> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55fe1cb30740 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55fe1cb30700 <col:186> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55fe1cb30758 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55fe1cb30720 <col:198> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55fe1cb30dd0 <line:755:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb308c0 <col:3> 'int' lvalue Var 0x55fe1cb2c248 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55fe1cb30da0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55fe1cb30d70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fe1cb30d58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fe1cb308e0 <col:15> '_Bool' lvalue Var 0x55fe1cb2c3b0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe1cb30d88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe1cb30900 <col:31> 'int' lvalue Var 0x55fe1cb2c248 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55fe1cb30d38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55fe1cb30d08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55fe1cb30b10 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55fe1cb30a30 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55fe1cb30958 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55fe1cb30940 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55fe1cb30920 <col:45> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55fe1cb30a10 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55fe1cb309a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55fe1cb30990 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55fe1cb30970 <col:64> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55fe1cb309f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55fe1cb309e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55fe1cb309c0 <col:83> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55fe1cb30af0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55fe1cb30a88 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55fe1cb30a70 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55fe1cb30a50 <col:102> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55fe1cb30ad8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55fe1cb30ac0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55fe1cb30aa0 <col:121> '_Bool' lvalue Var 0x55fe1cb2bf60 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55fe1cb30cf0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fe1cb30b50 <col:138> 'int' lvalue Var 0x55fe1cb2c248 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55fe1cb30cd0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55fe1cb30ca0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55fe1cb30c10 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55fe1cb30bc8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55fe1cb30bb0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55fe1cb30b70 <col:151> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55fe1cb30bf8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55fe1cb30be0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55fe1cb30b90 <col:169> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55fe1cb30c70 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55fe1cb30c30 <col:186> 'int' lvalue Var 0x55fe1cb2c248 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55fe1cb30c88 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55fe1cb30c50 <col:198> 'int' lvalue Var 0x55fe1cb2c248 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55fe1cb31378 <line:756:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb30df0 <col:3> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb31360 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe1cb31330 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55fe1cb312e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe1cb312d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe1cb30e10 <col:20> '_Bool' lvalue Var 0x55fe1cb2c3b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe1cb31318 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe1cb31300 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe1cb30e30 <col:36> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55fe1cb312b0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55fe1cb31280 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55fe1cb31040 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fe1cb30f60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fe1cb30e88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fe1cb30e70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fe1cb30e50 <col:55> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fe1cb30f40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fe1cb30ed8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fe1cb30ec0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fe1cb30ea0 <col:74> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55fe1cb30f28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fe1cb30f10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fe1cb30ef0 <col:93> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fe1cb31020 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fe1cb30fb8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fe1cb30fa0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fe1cb30f80 <col:112> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55fe1cb31008 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fe1cb30ff0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fe1cb30fd0 <col:131> '_Bool' lvalue Var 0x55fe1cb2bf60 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55fe1cb31268 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fe1cb31250 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fe1cb31060 <col:148> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55fe1cb31230 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55fe1cb31200 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55fe1cb31120 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fe1cb310d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fe1cb310c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fe1cb31080 <col:166> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fe1cb31108 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fe1cb310f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fe1cb310a0 <col:184> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55fe1cb311b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fe1cb31170 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fe1cb31140 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fe1cb311e8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55fe1cb311d0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55fe1cb31198 <col:212> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fe1cb31940 <line:757:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb31398 <col:3> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb31928 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe1cb318f8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55fe1cb318b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe1cb31898 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe1cb313b8 <col:20> '_Bool' lvalue Var 0x55fe1cb2c3b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe1cb318e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe1cb318c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe1cb313d8 <col:36> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55fe1cb31878 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55fe1cb31848 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55fe1cb315e8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fe1cb31508 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fe1cb31430 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fe1cb31418 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fe1cb313f8 <col:55> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fe1cb314e8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fe1cb31480 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fe1cb31468 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fe1cb31448 <col:74> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55fe1cb314d0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fe1cb314b8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fe1cb31498 <col:93> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fe1cb315c8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fe1cb31560 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fe1cb31548 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fe1cb31528 <col:112> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55fe1cb315b0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fe1cb31598 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fe1cb31578 <col:131> '_Bool' lvalue Var 0x55fe1cb2bf60 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55fe1cb31830 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fe1cb31818 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fe1cb31608 <col:148> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55fe1cb317f8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55fe1cb317c8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55fe1cb316c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fe1cb31680 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fe1cb31668 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fe1cb31628 <col:166> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fe1cb316b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fe1cb31698 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fe1cb31648 <col:184> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55fe1cb31798 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fe1cb31718 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fe1cb316e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fe1cb317b0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55fe1cb31770 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55fe1cb31740 <col:219> 'int' 0
|   |-BinaryOperator 0x55fe1cb31f08 <line:758:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb31960 <col:3> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb31ef0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe1cb31ec0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55fe1cb31e78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe1cb31e60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe1cb31980 <col:20> '_Bool' lvalue Var 0x55fe1cb2c3b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe1cb31ea8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe1cb31e90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe1cb319a0 <col:36> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55fe1cb31e40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55fe1cb31e10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55fe1cb31bd0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fe1cb31ad0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fe1cb319f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fe1cb319e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fe1cb319c0 <col:55> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fe1cb31ab0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fe1cb31a48 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fe1cb31a30 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fe1cb31a10 <col:74> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55fe1cb31a98 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fe1cb31a80 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fe1cb31a60 <col:93> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fe1cb31bb0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fe1cb31b28 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fe1cb31b10 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fe1cb31af0 <col:112> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55fe1cb31b98 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fe1cb31b80 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fe1cb31b60 <col:131> '_Bool' lvalue Var 0x55fe1cb2bf60 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55fe1cb31df8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fe1cb31de0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fe1cb31bf0 <col:148> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55fe1cb31dc0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55fe1cb31d90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55fe1cb31cb0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fe1cb31c68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fe1cb31c50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fe1cb31c10 <col:166> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fe1cb31c98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fe1cb31c80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fe1cb31c30 <col:184> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55fe1cb31d48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fe1cb31d00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fe1cb31cd0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fe1cb31d78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55fe1cb31d60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55fe1cb31d28 <col:212> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55fe1cb324d0 <line:759:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb31f28 <col:3> '_Bool' lvalue Var 0x55fe1cb2bf60 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb324b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe1cb32488 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55fe1cb32440 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe1cb32428 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe1cb31f48 <col:20> '_Bool' lvalue Var 0x55fe1cb2c3b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe1cb32470 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fe1cb32458 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fe1cb31f68 <col:36> '_Bool' lvalue Var 0x55fe1cb2bf60 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55fe1cb32408 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55fe1cb323d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55fe1cb32178 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fe1cb32098 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fe1cb31fc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fe1cb31fa8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fe1cb31f88 <col:55> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fe1cb32078 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fe1cb32010 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fe1cb31ff8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fe1cb31fd8 <col:74> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55fe1cb32060 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fe1cb32048 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fe1cb32028 <col:93> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fe1cb32158 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fe1cb320f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fe1cb320d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fe1cb320b8 <col:112> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55fe1cb32140 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fe1cb32128 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fe1cb32108 <col:131> '_Bool' lvalue Var 0x55fe1cb2bf60 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55fe1cb323c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fe1cb323a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fe1cb32198 <col:148> '_Bool' lvalue Var 0x55fe1cb2bf60 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55fe1cb32388 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55fe1cb32358 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55fe1cb32258 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fe1cb32210 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fe1cb321f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fe1cb321b8 <col:166> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fe1cb32240 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fe1cb32228 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fe1cb321d8 <col:184> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55fe1cb32328 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fe1cb322a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fe1cb32278 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fe1cb32340 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55fe1cb32300 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55fe1cb322d0 <col:219> 'int' 0
|   |-BinaryOperator 0x55fe1cb32548 <line:760:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb324f0 <col:3> 'int' lvalue Var 0x55fe1cb2b680 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55fe1cb32530 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe1cb32510 <col:25> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
|   |-BinaryOperator 0x55fe1cb32678 <line:761:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb32568 <col:3> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
|   | `-ConditionalOperator 0x55fe1cb32648 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55fe1cb32600 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fe1cb325e8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fe1cb32588 <col:7> '_Bool' lvalue Var 0x55fe1cb2bb98 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe1cb32618 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe1cb325a8 <col:25> 'int' lvalue Var 0x55fe1cb2bc18 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55fe1cb32630 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55fe1cb325c8 <col:37> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
|   |-BinaryOperator 0x55fe1cb32710 <line:762:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb32698 <col:3> '_Bool' lvalue Var 0x55fe1cb2bb98 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55fe1cb326e8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55fe1cb326b8 <col:28> 'int' 0
|   |-CallExpr 0x55fe1cb32768 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb32750 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb32730 <col:3> 'void ()' Function 0x55fe1cad2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe1cb327c0 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb327a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb32788 <col:3> 'void ()' Function 0x55fe1cad1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe1cb32838 <line:765:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb327e0 <col:3> 'int' lvalue Var 0x55fe1cb2b7a0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55fe1cb32820 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fe1cb32800 <col:25> 'int' lvalue Var 0x55fe1cb2b9b0 'x' 'int'
|   |-CallExpr 0x55fe1cb32890 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb32878 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb32858 <col:3> 'void ()' Function 0x55fe1cad2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe1cb328e8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb328d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb328b0 <col:3> 'void ()' Function 0x55fe1cad1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe1cb32c08 <line:768:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb32908 <col:3> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
|   | `-ConditionalOperator 0x55fe1cb32bd8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55fe1cb329c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55fe1cb32980 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55fe1cb32968 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55fe1cb32928 <col:7> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55fe1cb329b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55fe1cb32998 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55fe1cb32948 <col:25> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe1cb32bc0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe1cb329e8 <col:42> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55fe1cb32ba0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55fe1cb32b70 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55fe1cb32aa8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fe1cb32a60 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fe1cb32a48 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fe1cb32a08 <col:55> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fe1cb32a90 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fe1cb32a78 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fe1cb32a28 <col:73> '_Bool' lvalue Var 0x55fe1cb2bf60 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55fe1cb32b08 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fe1cb32ac8 <col:90> 'int' lvalue Var 0x55fe1cb2c248 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55fe1cb32b20 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe1cb32ae8 <col:102> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
|   |-BinaryOperator 0x55fe1cb32e10 <line:769:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb32c28 <col:3> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb32df8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe1cb32dc8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fe1cb32ce8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fe1cb32ca0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fe1cb32c88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fe1cb32c48 <col:20> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fe1cb32cd0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fe1cb32cb8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fe1cb32c68 <col:38> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe1cb32d80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe1cb32d38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe1cb32d08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe1cb32db0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe1cb32d98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe1cb32d60 <col:66> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fe1cb330f8 <line:770:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb32e30 <col:3> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb330e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe1cb330b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fe1cb32fd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fe1cb32ef0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fe1cb32ea8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fe1cb32e90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fe1cb32e50 <col:20> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fe1cb32ed8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fe1cb32ec0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fe1cb32e70 <col:38> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55fe1cb32fb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fe1cb32f68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fe1cb32f50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fe1cb32f10 <col:56> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fe1cb32f98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fe1cb32f80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fe1cb32f30 <col:74> '_Bool' lvalue Var 0x55fe1cb2bf60 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe1cb33068 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe1cb33020 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe1cb32ff0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe1cb33098 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe1cb33080 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe1cb33048 <col:102> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55fe1cb33300 <line:771:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb33118 <col:3> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb332e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe1cb332b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fe1cb331d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fe1cb33190 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fe1cb33178 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fe1cb33138 <col:20> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fe1cb331c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fe1cb331a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fe1cb33158 <col:38> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe1cb33270 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe1cb33228 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe1cb331f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe1cb332a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe1cb33288 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe1cb33250 <col:66> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55fe1cb335e8 <line:772:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb33320 <col:3> '_Bool' lvalue Var 0x55fe1cb2bf60 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb335d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe1cb335a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fe1cb334c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fe1cb333e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fe1cb33398 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fe1cb33380 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fe1cb33340 <col:20> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fe1cb333c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fe1cb333b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fe1cb33360 <col:38> '_Bool' lvalue Var 0x55fe1cb2bd80 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55fe1cb334a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fe1cb33458 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fe1cb33440 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fe1cb33400 <col:56> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fe1cb33488 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fe1cb33470 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fe1cb33420 <col:74> '_Bool' lvalue Var 0x55fe1cb2bf60 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe1cb33558 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe1cb33510 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe1cb334e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe1cb33588 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe1cb33570 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe1cb33538 <col:102> '_Bool' lvalue Var 0x55fe1cb2bf60 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55fe1cb33640 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb33628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb33608 <col:3> 'void ()' Function 0x55fe1cad2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe1cb33698 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb33680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb33660 <col:3> 'void ()' Function 0x55fe1cad1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe1cb33750 <line:775:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb336b8 <col:3> 'int' lvalue Var 0x55fe1cb2b320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55fe1cb33730 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55fe1cb33718 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe1cb336d8 <col:22> 'int' lvalue Var 0x55fe1cb2b320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55fe1cb336f8 <col:41> 'int' 1
|   |-CallExpr 0x55fe1cb337a8 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb33790 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb33770 <col:3> 'void ()' Function 0x55fe1cad2060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55fe1cb33820 <line:777:3, col:36>
|     `-CallExpr 0x55fe1cb33800 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55fe1cb337e8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55fe1cb337c8 <col:10> 'void *(void)' Function 0x55fe1cad1ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55fe1cb33a40 prev 0x55fe1cb2afa0 <line:779:1, line:795:1> line:779:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55fe1cb339a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55fe1cb34b90 <line:780:1, line:795:1>
|   |-CallExpr 0x55fe1cb33b20 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb33b08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb33ae8 <col:3> 'void ()' Function 0x55fe1cad1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe1cb33ba0 <line:782:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb33b40 <col:3> 'int' lvalue Var 0x55fe1cb2b9b0 'x' 'int'
|   | `-IntegerLiteral 0x55fe1cb33b80 <col:7> 'int' 1
|   |-CallExpr 0x55fe1cb33bf8 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb33be0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb33bc0 <col:3> 'void ()' Function 0x55fe1cad2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe1cb33c50 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb33c38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb33c18 <col:3> 'void ()' Function 0x55fe1cad1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe1cb33f38 <line:785:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb33c70 <col:3> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
|   | `-ConditionalOperator 0x55fe1cb33f08 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55fe1cb33d30 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55fe1cb33ce8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55fe1cb33cd0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55fe1cb33c90 <col:7> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55fe1cb33d18 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55fe1cb33d00 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55fe1cb33cb0 <col:25> '_Bool' lvalue Var 0x55fe1cb2bdf8 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55fe1cb33ef0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe1cb33d50 <col:42> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55fe1cb33ed0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55fe1cb33ea0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55fe1cb33e10 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fe1cb33dc8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fe1cb33db0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fe1cb33d70 <col:55> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fe1cb33df8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fe1cb33de0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fe1cb33d90 <col:73> '_Bool' lvalue Var 0x55fe1cb2bfd8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55fe1cb33e70 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fe1cb33e30 <col:90> 'int' lvalue Var 0x55fe1cb2c248 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55fe1cb33e88 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe1cb33e50 <col:102> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
|   |-BinaryOperator 0x55fe1cb34140 <line:786:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb33f58 <col:3> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb34128 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe1cb340f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fe1cb34018 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fe1cb33fd0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fe1cb33fb8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fe1cb33f78 <col:20> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fe1cb34000 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fe1cb33fe8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fe1cb33f98 <col:38> '_Bool' lvalue Var 0x55fe1cb2bdf8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe1cb340b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe1cb34068 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe1cb34038 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe1cb340e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe1cb340c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe1cb34090 <col:66> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fe1cb34428 <line:787:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb34160 <col:3> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb34410 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe1cb343e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fe1cb34300 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fe1cb34220 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fe1cb341d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fe1cb341c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fe1cb34180 <col:20> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fe1cb34208 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fe1cb341f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fe1cb341a0 <col:38> '_Bool' lvalue Var 0x55fe1cb2bdf8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55fe1cb342e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fe1cb34298 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fe1cb34280 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fe1cb34240 <col:56> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fe1cb342c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fe1cb342b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fe1cb34260 <col:74> '_Bool' lvalue Var 0x55fe1cb2bfd8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe1cb34398 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe1cb34350 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe1cb34320 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe1cb343c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe1cb343b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe1cb34378 <col:102> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55fe1cb34630 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb34448 <col:3> '_Bool' lvalue Var 0x55fe1cb2bdf8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb34618 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe1cb345e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fe1cb34508 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fe1cb344c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fe1cb344a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fe1cb34468 <col:20> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fe1cb344f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fe1cb344d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fe1cb34488 <col:38> '_Bool' lvalue Var 0x55fe1cb2bdf8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe1cb345a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe1cb34558 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe1cb34528 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe1cb345d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe1cb345b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe1cb34580 <col:66> '_Bool' lvalue Var 0x55fe1cb2bdf8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55fe1cb34918 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fe1cb34650 <col:3> '_Bool' lvalue Var 0x55fe1cb2bfd8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55fe1cb34900 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fe1cb348d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fe1cb347f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fe1cb34710 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fe1cb346c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fe1cb346b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fe1cb34670 <col:20> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fe1cb346f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fe1cb346e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fe1cb34690 <col:38> '_Bool' lvalue Var 0x55fe1cb2bdf8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55fe1cb347d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fe1cb34788 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fe1cb34770 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fe1cb34730 <col:56> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fe1cb347b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fe1cb347a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fe1cb34750 <col:74> '_Bool' lvalue Var 0x55fe1cb2bfd8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55fe1cb34888 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fe1cb34840 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fe1cb34810 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fe1cb348b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fe1cb348a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fe1cb34868 <col:102> '_Bool' lvalue Var 0x55fe1cb2bfd8 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55fe1cb34970 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb34958 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb34938 <col:3> 'void ()' Function 0x55fe1cad2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fe1cb349c8 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb349b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb34990 <col:3> 'void ()' Function 0x55fe1cad1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fe1cb34a80 <line:792:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55fe1cb349e8 <col:3> 'int' lvalue Var 0x55fe1cb2b320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55fe1cb34a60 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55fe1cb34a48 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fe1cb34a08 <col:22> 'int' lvalue Var 0x55fe1cb2b320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55fe1cb34a28 <col:41> 'int' 1
|   |-CallExpr 0x55fe1cb34ad8 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fe1cb34ac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fe1cb34aa0 <col:3> 'void ()' Function 0x55fe1cad2060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55fe1cb34b50 <line:794:3, col:36>
|     `-CallExpr 0x55fe1cb34b30 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55fe1cb34b18 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55fe1cb34af8 <col:10> 'void *(void)' Function 0x55fe1cad1ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55fe1cb34c30 prev 0x55fe1cb2b068 <line:796:1, line:798:1> line:796:6 fence 'void ()'
| `-CompoundStmt 0x55fe1cb34cd0 <line:797:1, line:798:1>
|-FunctionDecl 0x55fe1cb34d00 prev 0x55fe1cb2b128 <line:799:1, line:801:1> line:799:6 isync 'void ()'
| `-CompoundStmt 0x55fe1cb34da0 <line:800:1, line:801:1>
|-FunctionDecl 0x55fe1cb34dd0 prev 0x55fe1cb2b1e8 <line:802:1, line:804:1> line:802:6 lwfence 'void ()'
| `-CompoundStmt 0x55fe1cb34e70 <line:803:1, line:804:1>
`-FunctionDecl 0x55fe1cb34ed8 <line:805:1, line:829:1> line:805:5 main 'int ()'
  `-CompoundStmt 0x55fe1cb36bc0 <line:806:1, line:829:1>
    |-DeclStmt 0x55fe1cb34ff0 <line:807:3, col:18>
    | `-VarDecl 0x55fe1cb34f88 <col:3, col:13> col:13 used t1745 'pthread_t':'unsigned long'
    |-CallExpr 0x55fe1cb351f8 <line:808:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55fe1cb351e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fe1cb35008 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55fe1cb125b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55fe1cb35048 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55fe1cb35028 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55fe1cb34f88 't1745' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55fe1cb35238 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55fe1cb350c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55fe1cb35098 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55fe1cb35060 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55fe1cb35250 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fe1cb350e0 <col:39> 'void *(void *)' Function 0x55fe1cb2c4c8 'P0' 'void *(void *)'
    | `-ParenExpr 0x55fe1cb35160 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55fe1cb35138 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55fe1cb35100 <col:52> 'int' 0
    |-DeclStmt 0x55fe1cb352e0 <line:809:3, col:18>
    | `-VarDecl 0x55fe1cb35278 <col:3, col:13> col:13 used t1746 'pthread_t':'unsigned long'
    |-CallExpr 0x55fe1cb35488 <line:810:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55fe1cb35470 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fe1cb352f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55fe1cb125b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55fe1cb35338 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55fe1cb35318 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55fe1cb35278 't1746' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55fe1cb354c8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55fe1cb353b0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55fe1cb35388 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55fe1cb35350 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55fe1cb354e0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fe1cb353d0 <col:39> 'void *(void *)' Function 0x55fe1cb2f5b0 'P1' 'void *(void *)'
    | `-ParenExpr 0x55fe1cb35450 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55fe1cb35428 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55fe1cb353f0 <col:52> 'int' 0
    |-DeclStmt 0x55fe1cb35570 <line:811:3, col:18>
    | `-VarDecl 0x55fe1cb35508 <col:3, col:13> col:13 used t1747 'pthread_t':'unsigned long'
    |-CallExpr 0x55fe1cb35718 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55fe1cb35700 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fe1cb35588 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55fe1cb125b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55fe1cb355c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55fe1cb355a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55fe1cb35508 't1747' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55fe1cb35758 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55fe1cb35640 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55fe1cb35618 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55fe1cb355e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55fe1cb35770 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fe1cb35660 <col:39> 'void *(void *)' Function 0x55fe1cb33a40 'P2' 'void *(void *)'
    | `-ParenExpr 0x55fe1cb356e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55fe1cb356b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55fe1cb35680 <col:52> 'int' 0
    |-CallExpr 0x55fe1cb357c0 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55fe1cb357a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fe1cb35788 <col:3> 'void ()' Function 0x55fe1cad1fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55fe1cb35890 <line:814:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55fe1cb357e0 <col:3> '_Bool' lvalue Var 0x55fe1cb2b838 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55fe1cb35878 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55fe1cb35858 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55fe1cb35840 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55fe1cb35800 <col:21> 'int' lvalue Var 0x55fe1cb2b320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55fe1cb35820 <col:41> 'int' 3
    |-CallExpr 0x55fe1cb358e8 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55fe1cb358d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fe1cb358b0 <col:3> 'void ()' Function 0x55fe1cad2060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55fe1cb35960 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55fe1cb35948 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fe1cb35908 <col:3> 'void (int)' Function 0x55fe1cad1940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55fe1cb359a0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55fe1cb35988 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55fe1cb35928 <col:21> '_Bool' lvalue Var 0x55fe1cb2b838 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55fe1cb359f0 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55fe1cb359d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fe1cb359b8 <col:3> 'void ()' Function 0x55fe1cad1fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55fe1cb35cf8 <line:818:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55fe1cb35a10 <col:3> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
    | `-ConditionalOperator 0x55fe1cb35cc8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55fe1cb35ad0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55fe1cb35a88 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55fe1cb35a70 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55fe1cb35a30 <col:7> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55fe1cb35ab8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55fe1cb35aa0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55fe1cb35a50 <col:25> '_Bool' lvalue Var 0x55fe1cb2bc90 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55fe1cb35cb0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55fe1cb35af0 <col:42> 'int' lvalue Var 0x55fe1cb2c150 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55fe1cb35c90 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55fe1cb35c60 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55fe1cb35bd0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55fe1cb35b68 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55fe1cb35b50 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55fe1cb35b10 <col:55> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55fe1cb35bb8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55fe1cb35ba0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55fe1cb35b30 <col:73> '_Bool' lvalue Var 0x55fe1cb2be70 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55fe1cb35c30 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55fe1cb35bf0 <col:90> 'int' lvalue Var 0x55fe1cb2c248 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55fe1cb35c48 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55fe1cb35c10 <col:102> 'int' lvalue Var 0x55fe1cb2bb00 'y' 'int'
    |-BinaryOperator 0x55fe1cb35f00 <line:819:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55fe1cb35d18 <col:3> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55fe1cb35ee8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fe1cb35eb8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55fe1cb35dd8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55fe1cb35d90 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55fe1cb35d78 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55fe1cb35d38 <col:20> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55fe1cb35dc0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55fe1cb35da8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55fe1cb35d58 <col:38> '_Bool' lvalue Var 0x55fe1cb2bc90 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55fe1cb35e70 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55fe1cb35e28 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55fe1cb35df8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55fe1cb35ea0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fe1cb35e88 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55fe1cb35e50 <col:66> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55fe1cb361e8 <line:820:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55fe1cb35f20 <col:3> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55fe1cb361d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fe1cb361a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55fe1cb360c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55fe1cb35fe0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55fe1cb35f98 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55fe1cb35f80 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55fe1cb35f40 <col:20> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55fe1cb35fc8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55fe1cb35fb0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55fe1cb35f60 <col:38> '_Bool' lvalue Var 0x55fe1cb2bc90 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55fe1cb360a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55fe1cb36058 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55fe1cb36040 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55fe1cb36000 <col:56> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55fe1cb36088 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55fe1cb36070 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55fe1cb36020 <col:74> '_Bool' lvalue Var 0x55fe1cb2be70 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55fe1cb36158 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55fe1cb36110 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55fe1cb360e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55fe1cb36188 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fe1cb36170 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55fe1cb36138 <col:102> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55fe1cb363f0 <line:821:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55fe1cb36208 <col:3> '_Bool' lvalue Var 0x55fe1cb2bc90 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55fe1cb363d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fe1cb363a8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55fe1cb362c8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55fe1cb36280 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55fe1cb36268 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55fe1cb36228 <col:20> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55fe1cb362b0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55fe1cb36298 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55fe1cb36248 <col:38> '_Bool' lvalue Var 0x55fe1cb2bc90 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55fe1cb36360 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55fe1cb36318 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55fe1cb362e8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55fe1cb36390 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fe1cb36378 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55fe1cb36340 <col:66> '_Bool' lvalue Var 0x55fe1cb2bc90 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55fe1cb366d8 <line:822:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55fe1cb36410 <col:3> '_Bool' lvalue Var 0x55fe1cb2be70 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55fe1cb366c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fe1cb36690 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55fe1cb365b0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55fe1cb364d0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55fe1cb36488 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55fe1cb36470 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55fe1cb36430 <col:20> '_Bool' lvalue Var 0x55fe1cb2c1c8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55fe1cb364b8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55fe1cb364a0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55fe1cb36450 <col:38> '_Bool' lvalue Var 0x55fe1cb2bc90 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55fe1cb36590 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55fe1cb36548 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55fe1cb36530 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55fe1cb364f0 <col:56> '_Bool' lvalue Var 0x55fe1cb2c2c0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55fe1cb36578 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55fe1cb36560 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55fe1cb36510 <col:74> '_Bool' lvalue Var 0x55fe1cb2be70 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55fe1cb36648 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55fe1cb36600 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55fe1cb365d0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55fe1cb36678 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fe1cb36660 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55fe1cb36628 <col:102> '_Bool' lvalue Var 0x55fe1cb2be70 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55fe1cb36730 <line:823:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55fe1cb36718 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fe1cb366f8 <col:3> 'void ()' Function 0x55fe1cad2060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55fe1cb36788 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55fe1cb36770 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fe1cb36750 <col:3> 'void ()' Function 0x55fe1cad1fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55fe1cb36a58 <line:825:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x55fe1cb367a8 <col:3> '_Bool' lvalue Var 0x55fe1cb2b8b0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55fe1cb36a40 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55fe1cb36a28 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55fe1cb36a08 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x55fe1cb369e8 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x55fe1cb36950 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x55fe1cb368b8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x55fe1cb36820 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55fe1cb36808 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55fe1cb367c8 <col:23> 'int' lvalue Var 0x55fe1cb2b440 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x55fe1cb367e8 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x55fe1cb36898 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55fe1cb36880 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55fe1cb36840 <col:51> 'int' lvalue Var 0x55fe1cb2b560 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x55fe1cb36860 <col:74> 'int' 0
    |         | `-BinaryOperator 0x55fe1cb36930 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55fe1cb36918 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55fe1cb368d8 <col:79> 'int' lvalue Var 0x55fe1cb2b680 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55fe1cb368f8 <col:102> 'int' 1
    |         `-BinaryOperator 0x55fe1cb369c8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x55fe1cb369b0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55fe1cb36970 <col:107> 'int' lvalue Var 0x55fe1cb2b7a0 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55fe1cb36990 <col:130> 'int' 0
    |-CallExpr 0x55fe1cb36ab0 <line:826:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55fe1cb36a98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fe1cb36a78 <col:3> 'void ()' Function 0x55fe1cad2060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55fe1cb36b28 <line:827:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55fe1cb36b10 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fe1cb36ad0 <col:3> 'void (int)' Function 0x55fe1cad1d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55fe1cb36b68 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55fe1cb36b50 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55fe1cb36af0 <col:21> '_Bool' lvalue Var 0x55fe1cb2b8b0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55fe1cb36bb0 <line:828:3, col:10>
      `-IntegerLiteral 0x55fe1cb36b80 <col:10> 'int' 0
