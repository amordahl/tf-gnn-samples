TranslationUnitDecl 0x560e58284e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x560e582856d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x560e582853b0 '__int128'
|-TypedefDecl 0x560e58285748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x560e582853d0 'unsigned __int128'
|-TypedefDecl 0x560e58285a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x560e58285820 'struct __NSConstantString_tag'
|   `-Record 0x560e582857a0 '__NSConstantString_tag'
|-TypedefDecl 0x560e58285af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x560e58285ab0 'char *'
|   `-BuiltinType 0x560e58284eb0 'char'
|-TypedefDecl 0x560e582c4650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x560e58285d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x560e58285bd0 'struct __va_list_tag'
|     `-Record 0x560e58285b50 '__va_list_tag'
|-FunctionDecl 0x560e582c4770 <./split_7/rfi008_rmo.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x560e582c4940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x560e582c4870 <col:31> col:34 'int'
|-FunctionDecl 0x560e582c4ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x560e582c4be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x560e582c4d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x560e582c4c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x560e582c4f58 <col:40, col:99>
|   |-IfStmt 0x560e582c4f28 <col:42, col:88>
|   | |-UnaryOperator 0x560e582c4e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x560e582c4df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x560e582c4dd0 <col:47> 'int' lvalue ParmVar 0x560e582c4c98 'expression' 'int'
|   | `-CompoundStmt 0x560e582c4f10 <col:59, col:88>
|   |   `-LabelStmt 0x560e582c4ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x560e582c4e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x560e582c4e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x560e582c4e20 <col:68> 'void () __attribute__((noreturn))' Function 0x560e582c4be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x560e582c4f40 <col:89>
|   `-ReturnStmt 0x560e582c4f48 <col:91>
|-FunctionDecl 0x560e582c4fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x560e582c5060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x560e582c53e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560e582c5118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x560e582c5198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x560e582c5218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560e582c5298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560e582c54a0 <line:11:22>
|-FunctionDecl 0x560e582eb520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560e582c5510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x560e582c5590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x560e582eb350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560e582eb3d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560e582eb5e0 <line:14:22>
|-FunctionDecl 0x560e582eb890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560e582eb650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x560e582eb6d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x560e582eb750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x560e582eb948 <line:16:22>
|-TypedefDecl 0x560e582eb9b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x560e58284f70 'unsigned char'
|-TypedefDecl 0x560e582eba28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x560e58284f90 'unsigned short'
|-TypedefDecl 0x560e582eba98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x560e58284fb0 'unsigned int'
|-TypedefDecl 0x560e582ebb08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-TypedefDecl 0x560e582ebb78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x560e58284ed0 'signed char'
|-TypedefDecl 0x560e582ebbe8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x560e58284f70 'unsigned char'
|-TypedefDecl 0x560e582ebc58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x560e58284ef0 'short'
|-TypedefDecl 0x560e582ebcc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x560e58284f90 'unsigned short'
|-TypedefDecl 0x560e582ebd38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x560e58284f10 'int'
|-TypedefDecl 0x560e582ebda8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x560e58284fb0 'unsigned int'
|-TypedefDecl 0x560e582ebe18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582ebe88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-TypedefDecl 0x560e582ebef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582ebf68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-TypedefDecl 0x560e582ebfd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-TypedefDecl 0x560e582ec048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x560e58284fb0 'unsigned int'
|-TypedefDecl 0x560e582ec0b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x560e58284fb0 'unsigned int'
|-TypedefDecl 0x560e582ec128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-TypedefDecl 0x560e582ec198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-TypedefDecl 0x560e582ec208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x560e58284fb0 'unsigned int'
|-TypedefDecl 0x560e582ec278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-TypedefDecl 0x560e582ec2e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582ec378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582ec3e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x560e58284f10 'int'
|-RecordDecl 0x560e582ec440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x560e582ec588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x560e582ec640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x560e582ec5e0 'struct __fsid_t' sugar
|   `-RecordType 0x560e582ec4c0 '__fsid_t'
|     `-Record 0x560e582ec440 ''
|-TypedefDecl 0x560e582ec6c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582ec738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-TypedefDecl 0x560e582ec7a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-TypedefDecl 0x560e582ec818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x560e58284fb0 'unsigned int'
|-TypedefDecl 0x560e582ec888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582ec8f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x560e58284fb0 'unsigned int'
|-TypedefDecl 0x560e582ec968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582ec9d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x560e58284f10 'int'
|-TypedefDecl 0x560e582eca48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x560e58284f10 'int'
|-TypedefDecl 0x560e582ecab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x560e58284f10 'int'
|-TypedefDecl 0x560e582ecb28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x560e58285630 'void *'
|   `-BuiltinType 0x560e58284e70 'void'
|-TypedefDecl 0x560e582ecb98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582ecc08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582ecc78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582ecce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-TypedefDecl 0x560e582ecd58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-TypedefDecl 0x560e582ecdc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-TypedefDecl 0x560e582ece38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-TypedefDecl 0x560e582ecea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582ecf18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582ecf88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582ecff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-TypedefDecl 0x560e582ed088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x560e582ed050 '__off64_t' sugar
|   |-Typedef 0x560e582ec378 '__off64_t'
|   `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582ed180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x560e582ed140 '__quad_t *'
|   `-TypedefType 0x560e582ed0e0 '__quad_t' sugar
|     |-Typedef 0x560e582ebef8 '__quad_t'
|     `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582ed1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x560e58285ab0 'char *'
|   `-BuiltinType 0x560e58284eb0 'char'
|-TypedefDecl 0x560e582ed260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582ed2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x560e58284fb0 'unsigned int'
|-FunctionDecl 0x560e582ee458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x560e582ee380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x560e582ee768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x560e582ee758 <line:73:3, col:34>
|     `-CallExpr 0x560e582ee718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x560e582ee700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560e582ee690 <col:10> '<builtin fn type>' Function 0x560e582ee500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x560e582ee740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560e582ee6b0 <col:29> 'unsigned int' lvalue ParmVar 0x560e582ee380 '__bsx' 'unsigned int'
|-FunctionDecl 0x560e582ee500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x560e582ee5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x560e582ee610 <col:10> Implicit
| `-ConstAttr 0x560e582ee668 <col:10> Implicit
|-FunctionDecl 0x560e582ee8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x560e582ee7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x560e582eebd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x560e582eebc8 <line:78:3, col:34>
|     `-CallExpr 0x560e582eeb88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x560e582eeb70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560e582eeaf8 <col:10> '<builtin fn type>' Function 0x560e582ee968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x560e582eebb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x560e582eeb18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x560e582ee7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x560e582ee968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x560e582eea08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x560e582eea78 <col:10> Implicit
| `-ConstAttr 0x560e582eead0 <col:10> Implicit
|-TypedefDecl 0x560e582eec08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-TypedefDecl 0x560e582eec98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x560e582eec60 '__time_t' sugar
|   |-Typedef 0x560e582ec888 '__time_t'
|   `-BuiltinType 0x560e58284f30 'long'
|-RecordDecl 0x560e582eecf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x560e582eeda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x560e582eee38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x560e582eeec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x560e582eee90 '__pid_t' sugar
|   |-Typedef 0x560e582ec3e8 '__pid_t'
|   `-BuiltinType 0x560e58284f10 'int'
|-RecordDecl 0x560e582eef20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x560e582eefe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x560e582ef030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x560e582ef0f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x560e582ef158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-RecordDecl 0x560e582ef1b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x560e582f0480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x560e582f0530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x560e582f04d0 'struct cpu_set_t' sugar
|   `-RecordType 0x560e582ef230 'cpu_set_t'
|     `-Record 0x560e582ef1b0 ''
|-FunctionDecl 0x560e582f0808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x560e582f05d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560e582f06e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x560e582f08b8 <line:108:19>
|-FunctionDecl 0x560e582f0a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x560e582f0920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x560e582f0b38 <col:69>
|-FunctionDecl 0x560e582f0cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x560e582f0ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x560e582f0d58 <col:64>
|-FunctionDecl 0x560e582f1018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x560e582f0dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560e582f0ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560e582f10c8 <line:114:22>
|-FunctionDecl 0x560e582f13b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x560e582f1130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560e582f1228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x560e582f1460 <col:88>
|-FunctionDecl 0x560e582f1718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560e582f14c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560e582f1548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x560e582f15d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560e582f17d0 <col:62>
|-FunctionDecl 0x560e582f1948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x560e582f1838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x560e582f19f0 <col:63>
|-FunctionDecl 0x560e582f1b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x560e582f1bb8 <col:47>
|-FunctionDecl 0x560e582f1cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x560e582f1c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560e582f1d68 <col:69>
|-FunctionDecl 0x560e582f1e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x560e582f1dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560e582f1f18 <col:69>
|-FunctionDecl 0x560e582f21d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560e582f1f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560e582f20b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x560e582f2288 <col:88>
|-TypedefDecl 0x560e582f2318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560e582f22e0 '__clock_t' sugar
|   |-Typedef 0x560e582ec6c8 '__clock_t'
|   `-BuiltinType 0x560e58284f30 'long'
|-TypedefDecl 0x560e582f23c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x560e582f2370 '__clockid_t' sugar
|   |-Typedef 0x560e582ecab8 '__clockid_t'
|   `-BuiltinType 0x560e58284f10 'int'
|-TypedefDecl 0x560e582f2458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560e582f2420 '__timer_t' sugar
|   |-Typedef 0x560e582ecb28 '__timer_t'
|   `-PointerType 0x560e58285630 'void *'
|     `-BuiltinType 0x560e58284e70 'void'
|-RecordDecl 0x560e582f24b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x560e582f2570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x560e582f25d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x560e582f2640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560e582f26a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560e582f2710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x560e582f2778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560e582f27e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x560e582f2848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560e582f28b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560e582f2918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x560e582f2980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560e582f29d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x560e582f2a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560e582f2b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560e582f2bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x560e582f2d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560e582f2e20 <col:45>
|-FunctionDecl 0x560e582f3000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560e582f2ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x560e582f30a8 <col:54>
|-FunctionDecl 0x560e582f32a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560e582f3110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x560e582f3188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x560e582f3358 <line:158:22>
| `-ConstAttr 0x560e582f3ff0 <col:63>
|-FunctionDecl 0x560e582f41f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560e582f40e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560e582f4298 <col:56>
|-FunctionDecl 0x560e582f4640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560e582f4308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x560e582f4380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560e582f4400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560e582f44f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560e582f4700 <col:54>
|-RecordDecl 0x560e582f4758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x560e582f4808 parent 0x560e58284e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x560e582f4a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560e582f4b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x560e582f4b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560e582f4bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x560e582f4cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x560e582f4de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x560e582f4d90 'struct __locale_struct *'
|   `-ElaboratedType 0x560e582f4d20 'struct __locale_struct' sugar
|     `-RecordType 0x560e582f47e0 'struct __locale_struct'
|       `-Record 0x560e582f4758 '__locale_struct'
|-TypedefDecl 0x560e582f4e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x560e582f4e60 '__locale_t' sugar
|   |-Typedef 0x560e582f4de8 '__locale_t'
|   `-PointerType 0x560e582f4d90 'struct __locale_struct *'
|     `-ElaboratedType 0x560e582f4d20 'struct __locale_struct' sugar
|       `-RecordType 0x560e582f47e0 'struct __locale_struct'
|         `-Record 0x560e582f4758 '__locale_struct'
|-FunctionDecl 0x560e582f62a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x560e582f4f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x560e582f4f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560e582f6028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x560e582f60b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560e582f6130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x560e582f6368 <col:40>
|-FunctionDecl 0x560e582f6558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560e582f6430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x560e582f6600 <col:66>
|-FunctionDecl 0x560e582f6710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560e582f6668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x560e582f67b8 <col:69>
|-FunctionDecl 0x560e582f69e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560e582f6820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560e582f68b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560e582f6a98 <col:52>
|-FunctionDecl 0x560e582f6c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560e582f6b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560e582f6b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560e582f6cf0 <col:55>
|-FunctionDecl 0x560e582f6e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x560e582f6d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x560e582f6f30 <col:62>
|-FunctionDecl 0x560e582f7168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x560e582f6f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x560e582f7210 <col:60>
|-FunctionDecl 0x560e582f7438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560e582f7290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560e582f7310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x560e582f74e8 <col:44>
|-FunctionDecl 0x560e582f76f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560e582f7550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560e582f75d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x560e582f77a8 <col:49>
|-VarDecl 0x560e582f78a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x560e582f7928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x560e582f79a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x560e582f7a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x560e582f7ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x560e582f7c40 <col:42>
|-VarDecl 0x560e582f7cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x560e582f7d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x560e582f7eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x560e582f7da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x560e582f7f60 <col:57>
|-FunctionDecl 0x560e582f80d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560e582f7fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560e582f8178 <col:56>
|-FunctionDecl 0x560e582f8288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560e582f81f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x560e582f8330 <col:59>
|-FunctionDecl 0x560e582f8438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x560e582f83a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x560e582f84e0 <col:48>
| `-ConstAttr 0x560e582f8538 <col:89>
|-FunctionDecl 0x560e582f8798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560e582f85e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x560e582f8678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x560e582f89f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560e582f8888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560e582f8918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x560e582f8aa8 <col:88>
|-FunctionDecl 0x560e582f8c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560e582f8b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560e582f8ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x560e582f8cf0 <col:88>
|-FunctionDecl 0x560e582f8f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x560e582f8d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560e582f8de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x560e582f8fb8 <line:209:22>
|-FunctionDecl 0x560e582f9358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560e582f9020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560e582f90e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x560e582f9170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x560e582f9200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x560e582f9658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x560e582f9458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x560e582f9530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x560e582f9708 <col:85>
|-FunctionDecl 0x560e582f9af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x560e582f9770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560e582f98a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x560e582f99b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x560e582f9bb0 <col:52>
|-FunctionDecl 0x560e582f9d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x560e582f9c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560e582f9dd0 <col:61>
|-FunctionDecl 0x560e582fa248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x560e582f9e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560e582f9eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x560e582f9fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x560e582fa0f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x560e582fa308 <col:62>
|-FunctionDecl 0x560e582fa528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x560e582fa370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560e582fa400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x560e582fa5d8 <line:222:22>
|-FunctionDecl 0x560e582fa6d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x560e582fa640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560e582fa780 <col:65>
|-TypedefDecl 0x560e582fa7f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x560e58284fd0 'unsigned long'
|-RecordDecl 0x560e582fa848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x560e582fa990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560e582fa9f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560e582faaa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x560e582faa50 'union pthread_attr_t' sugar
|   `-RecordType 0x560e582fa8d0 'union pthread_attr_t'
|     `-Record 0x560e582fa848 'pthread_attr_t'
|-RecordDecl 0x560e582fab00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560e582fac78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560e582facf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x560e582fada0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560e582fad40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x560e582fab80 'struct __pthread_internal_list'
|     `-Record 0x560e582fab00 '__pthread_internal_list'
|-RecordDecl 0x560e582fae10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x560e582faeb8 parent 0x560e58284e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x560e582faf90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560e582faff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560e582fb060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560e582ff110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560e582ff178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560e582ff1e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x560e582ff268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x560e582ff320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x560e582ff410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x560e582ff478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560e582ff600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x560e582ff5a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x560e582fae90 'pthread_mutex_t'
|     `-Record 0x560e582fae10 ''
|-RecordDecl 0x560e582ff670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x560e582ff7b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560e582ff818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560e582ff8d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x560e582ff870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x560e582ff6f0 'pthread_mutexattr_t'
|     `-Record 0x560e582ff670 ''
|-RecordDecl 0x560e582ff940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x560e582ff9e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x560e582ffab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560e582ffb18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x560e582ffb80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x560e582ffbe8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x560e582ffc50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x560e582ffcb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x560e582ffd20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x560e582ffd88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x560e582ffe40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_7/rfi008_rmo.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_7/rfi008_rmo.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x560e582fff30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x560e582fff98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x560e58301130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x560e58300070 'union pthread_cond_t' sugar
|   `-RecordType 0x560e582ff9c0 'pthread_cond_t'
|     `-Record 0x560e582ff940 ''
|-RecordDecl 0x560e583011a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x560e583012a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560e58301308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560e583013c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x560e58301360 'union pthread_condattr_t' sugar
|   `-RecordType 0x560e58301220 'pthread_condattr_t'
|     `-Record 0x560e583011a0 ''
|-TypedefDecl 0x560e58301448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x560e58284fb0 'unsigned int'
|-TypedefDecl 0x560e583014b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x560e58284f10 'int'
|-RecordDecl 0x560e58301510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x560e583015b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x560e58301680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560e583016e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x560e58301750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x560e583017b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x560e58301820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x560e58301888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x560e583018f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x560e58301958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x560e583019c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x560e58301a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x560e58301a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x560e58301b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_7/rfi008_rmo.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_7/rfi008_rmo.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x560e58301be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560e58301c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560e58301da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x560e58301d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x560e58301590 'pthread_rwlock_t'
|     `-Record 0x560e58301510 ''
|-RecordDecl 0x560e58301e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x560e58301f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x560e58301fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560e58302070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x560e58302010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x560e58301e90 'pthread_rwlockattr_t'
|     `-Record 0x560e58301e10 ''
|-TypedefDecl 0x560e58303140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x560e58284f14 'volatile int' volatile
|   `-BuiltinType 0x560e58284f10 'int'
|-RecordDecl 0x560e58303198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x560e583032e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x560e58303348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560e58303400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x560e583033a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x560e58303220 'pthread_barrier_t'
|     `-Record 0x560e58303198 ''
|-RecordDecl 0x560e58303470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x560e58303570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560e583035d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560e58303690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560e58303630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560e583034f0 'pthread_barrierattr_t'
|     `-Record 0x560e58303470 ''
|-TypedefDecl 0x560e583037a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x560e58303740 'long [8]' 8 
|   `-BuiltinType 0x560e58284f30 'long'
|-EnumDecl 0x560e58303800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x560e583038c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560e58303918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x560e58303968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x560e58303a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x560e58303a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560e58303ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560e58303b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560e58303bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x560e58303b98 <col:26> 'int'
| |   `-DeclRefExpr 0x560e58303b78 <col:26> 'int' EnumConstant 0x560e58303a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560e58303c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560e58303c20 <col:29> 'int'
| |   `-DeclRefExpr 0x560e58303c00 <col:29> 'int' EnumConstant 0x560e58303a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x560e58303cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x560e58303ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x560e58303c88 <col:30> 'int' EnumConstant 0x560e58303ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560e58303d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560e58303d30 <col:27> 'int'
|     `-DeclRefExpr 0x560e58303d10 <col:27> 'int' EnumConstant 0x560e58303bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x560e58303d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x560e58303e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560e58303ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x560e58303ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x560e58303eb8 <col:30> 'int' EnumConstant 0x560e58303e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560e58303f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x560e58303fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x560e58303fb0 <col:29> 'int'
|     `-DeclRefExpr 0x560e58303f90 <col:29> 'int' EnumConstant 0x560e58303f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560e58304018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x560e583040e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560e58304150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x560e583041a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560e583041f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x560e583042b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x560e58304308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x560e58304358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560e583043e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x560e583043c8 <col:31> 'int'
|     `-DeclRefExpr 0x560e583043a8 <col:31> 'int' EnumConstant 0x560e583042b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x560e58304430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x560e583044f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x560e58304548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x560e58304598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x560e58304668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560e583046b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x560e58304708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x560e583047d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x560e58304828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560e58304878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560e58304ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x560e58304b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560e58304b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x560e58304ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x560e58304cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x560e58304dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x560e58304e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x560e58304e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x560e58304f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x560e58304f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x560e583055b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x560e58305080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x560e583051a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e583053a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x560e58305420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x560e58305678 <col:47>
| |-NonNullAttr 0x560e583056d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x560e58305708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x560e58305830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x560e58305760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x560e58305a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x560e583058e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x560e58305968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x560e58305c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x560e58305b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x560e58305d00 <col:60>
|-FunctionDecl 0x560e58305e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x560e58305ef0 <col:54>
| `-ConstAttr 0x560e58305f48 <col:95>
|-FunctionDecl 0x560e58307990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x560e58305f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560e58305ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x560e58307a40 <line:395:19>
| `-ConstAttr 0x560e58307a98 <col:60>
|-FunctionDecl 0x560e58307c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560e58307b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560e58307d10 <col:71>
| `-NonNullAttr 0x560e58307d68 <col:112, col:126> 1
|-FunctionDecl 0x560e58307e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560e58307db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560e58307f18 <line:398:22>
| `-NonNullAttr 0x560e58307f70 <col:63, col:77> 1
|-FunctionDecl 0x560e58308198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x560e58307fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560e58308038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x560e58308248 <line:401:22>
| `-NonNullAttr 0x560e583082a0 <col:63, col:80> 1 2
|-FunctionDecl 0x560e583084a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560e583082e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560e58308368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x560e58308558 <line:404:22>
| `-NonNullAttr 0x560e583085b0 <col:63, col:77> 1
|-FunctionDecl 0x560e58308808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x560e583085f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560e583086a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x560e583088b8 <line:407:22>
| `-NonNullAttr 0x560e58308910 <col:63, col:80> 1 2
|-FunctionDecl 0x560e58309b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560e583099b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560e58309a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560e58309c18 <line:410:22>
| `-NonNullAttr 0x560e58309c70 <col:63, col:77> 1
|-FunctionDecl 0x560e58309ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560e58309cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e58309d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560e58309f58 <line:413:22>
| `-NonNullAttr 0x560e58309fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x560e5830a1e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560e58309ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e5830a088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x560e5830a298 <col:37>
| `-NonNullAttr 0x560e5830a2f0 <col:78, col:95> 1 2
|-FunctionDecl 0x560e5830a4d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e5830a338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e5830a3b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x560e5830a588 <line:419:22>
| `-NonNullAttr 0x560e5830a5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x560e5830a768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560e5830a628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560e5830a6a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x560e5830a818 <line:421:22>
| `-NonNullAttr 0x560e5830a870 <col:63, col:77> 1
|-FunctionDecl 0x560e5830aa38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e5830a8b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e5830a938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x560e5830aae8 <line:424:22>
| `-NonNullAttr 0x560e5830ab40 <col:63, col:80> 1 2
|-FunctionDecl 0x560e5830acc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560e5830ab88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560e5830ac08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560e5830ad78 <line:427:22>
| `-NonNullAttr 0x560e5830add0 <col:63, col:77> 1
|-FunctionDecl 0x560e5830af78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e5830ae18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e5830ae98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560e5830b028 <line:430:22>
| `-NonNullAttr 0x560e5830b080 <col:63, col:80> 1 2
|-FunctionDecl 0x560e5830b208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560e5830b0c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560e5830b148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x560e5830b2b8 <line:432:22>
| `-NonNullAttr 0x560e5830b310 <col:63, col:77> 1
|-FunctionDecl 0x560e5830b538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x560e5830b358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e5830b3d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560e5830b5e8 <line:435:22>
| |-NonNullAttr 0x560e5830b640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x560e5830b678 <col:100> "" ""
|-FunctionDecl 0x560e5830b888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560e5830b6c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560e5830b748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x560e5830b938 <line:438:22>
| |-NonNullAttr 0x560e5830b990 <col:63, col:77> 1
| `-DeprecatedAttr 0x560e5830b9d8 <col:97> "" ""
|-FunctionDecl 0x560e5830bbc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560e5830ba28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e5830baa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560e5830bc78 <line:441:22>
| `-NonNullAttr 0x560e5830bcd0 <col:63, col:80> 1 2
|-FunctionDecl 0x560e5830be50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560e5830bd18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560e5830bd90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560e5830bf00 <line:444:22>
| `-NonNullAttr 0x560e5830bf58 <col:63, col:77> 1
|-FunctionDecl 0x560e5830c248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560e5830bfa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e5830c028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x560e5830c0a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560e5830c300 <line:448:22>
| `-NonNullAttr 0x560e5830c358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x560e5830c608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x560e5830c3b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560e5830c430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x560e5830c4a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560e5830c6c0 <col:43>
| `-NonNullAttr 0x560e5830c718 <col:84, col:98> 1
|-FunctionDecl 0x560e5830ca20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560e5830c768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560e5830c7e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x560e5830c878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x560e5830cad8 <line:453:22>
| `-NonNullAttr 0x560e5830cb30 <col:63, col:77> 3
|-FunctionDecl 0x560e5830ce08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560e5830cb78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560e5830cbf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x560e5830cc88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560e5830cec0 <line:457:22>
| `-NonNullAttr 0x560e5830cf18 <col:63, col:80> 2 3
|-FunctionDecl 0x560e5830d108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x560e5830cf68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560e5830cfe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x560e5830d1b8 <line:459:22>
|-FunctionDecl 0x560e5830d588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x560e5830d280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x560e5830d420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x560e5830d638 <col:52, col:69> 1 2
|-FunctionDecl 0x560e5830d7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x560e5830d6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x560e5830d740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x560e5830d9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x560e5830d8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x560e5830d928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x560e5830db48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x560e5830dab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x560e5830dc88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x560e5830dd28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x560e5830ddd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x560e5830dec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x560e5830df30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x560e5830e100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_7/rfi008_rmo.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x560e5830e1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x560e5830e2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x560e5830e250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x560e5830ddb0 '__pthread_unwind_buf_t'
| |   `-Record 0x560e5830dd28 ''
| `-AlignedAttr 0x560e5830e308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x560e5830e380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x560e5830e4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x560e5830e548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x560e5830e5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x560e5830e618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x560e5830e820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560e5830e710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560e5830ea00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560e5830e8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560e5830ebc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560e5830eab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x560e5830ec68 <line:488:22>
|-RecordDecl 0x560e5830ecc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x560e5830efd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x560e5830ee38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x560e5830eeb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x560e5830f088 <col:86>
| `-ReturnsTwiceAttr 0x560e5830f0e0 <col:12> Implicit
|-FunctionDecl 0x560e5830f408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560e5830f1b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x560e5830f2c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x560e5830f4b8 <line:494:22>
| `-NonNullAttr 0x560e5830f510 <col:63, col:77> 1
|-FunctionDecl 0x560e5830f688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560e5830f558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560e5830f730 <line:496:22>
| `-NonNullAttr 0x560e5830f788 <col:63, col:77> 1
|-FunctionDecl 0x560e5830f890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560e5830f7d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560e5830f938 <line:498:22>
| `-NonNullAttr 0x560e5830f990 <col:52, col:66> 1
|-FunctionDecl 0x560e58310ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560e58310a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560e58310b80 <line:500:22>
| `-NonNullAttr 0x560e58310bd8 <col:52, col:66> 1
|-FunctionDecl 0x560e58310e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560e58310c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560e58310cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560e58310ec8 <col:36>
| `-NonNullAttr 0x560e58310f20 <col:66, col:83> 1 2
|-FunctionDecl 0x560e58311020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560e58310f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560e583110c8 <line:505:22>
| `-NonNullAttr 0x560e58311120 <col:52, col:66> 1
|-FunctionDecl 0x560e583113b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e583111d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560e58311250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560e58311468 <line:509:22>
| `-NonNullAttr 0x560e583114c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560e58311788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x560e58311508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560e58311588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x560e58311608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x560e58311840 <line:513:22>
| `-NonNullAttr 0x560e58311898 <col:63, col:80> 1 3
|-FunctionDecl 0x560e58311a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560e583118e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560e58311ad8 <line:515:22>
| `-NonNullAttr 0x560e58311b30 <col:63, col:77> 1
|-FunctionDecl 0x560e58311d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560e58311be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560e58311dc0 <line:517:22>
| `-NonNullAttr 0x560e58311e18 <col:63, col:77> 1
|-FunctionDecl 0x560e58311f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560e58311e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560e58311fc8 <line:519:22>
| `-NonNullAttr 0x560e58312020 <col:63, col:77> 1
|-FunctionDecl 0x560e58312248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e58312068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560e583120e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x560e583122f8 <line:523:22>
| `-NonNullAttr 0x560e58312350 <col:63, col:80> 1 2
|-FunctionDecl 0x560e58312558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560e58312398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560e58312418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x560e58312608 <line:526:22>
| `-NonNullAttr 0x560e58312660 <col:63, col:77> 1
|-FunctionDecl 0x560e58312808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e583126a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560e58312728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560e583128b8 <line:529:22>
| `-NonNullAttr 0x560e58312910 <col:63, col:80> 1 2
|-FunctionDecl 0x560e58312b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560e58312958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560e58312a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560e58312bb0 <line:531:22>
| `-NonNullAttr 0x560e58312c08 <col:63, col:77> 1
|-FunctionDecl 0x560e58312db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e58312c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560e58312cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560e58312e68 <line:535:22>
| `-NonNullAttr 0x560e58312ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x560e58313048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560e58312f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560e58312f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560e583130f8 <line:538:22>
| `-NonNullAttr 0x560e58313150 <col:63, col:77> 1
|-FunctionDecl 0x560e583132f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e58313198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560e58313218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560e583133a8 <line:542:22>
| `-NonNullAttr 0x560e58313400 <col:63, col:80> 1 2
|-FunctionDecl 0x560e58313588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560e58313448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560e583134c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x560e58313638 <line:545:22>
| `-NonNullAttr 0x560e58313690 <col:63, col:77> 1
|-FunctionDecl 0x560e58313878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560e583136d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x560e58313758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560e58313928 <line:548:22>
| `-NonNullAttr 0x560e58313980 <col:63, col:80> 1 2
|-FunctionDecl 0x560e58314b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560e583139c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560e58314a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x560e58314be8 <line:551:22>
| `-NonNullAttr 0x560e58314c40 <col:63, col:77> 1
|-FunctionDecl 0x560e58314f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x560e58314d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560e58314e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x560e58315028 <col:29>
| `-NonNullAttr 0x560e58315080 <col:70, col:84> 1
|-FunctionDecl 0x560e583151f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560e583150c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560e583152a0 <line:556:22>
| `-NonNullAttr 0x560e583152f8 <col:63, col:77> 1
|-FunctionDecl 0x560e58315400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560e58315348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560e583154a8 <line:558:22>
| `-NonNullAttr 0x560e58315500 <col:52, col:66> 1
|-FunctionDecl 0x560e58315600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560e58315548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560e583156a8 <line:560:19>
| `-NonNullAttr 0x560e58315700 <col:49, col:63> 1
|-FunctionDecl 0x560e58315938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560e58315748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560e583157d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560e583159e8 <col:39>
| `-NonNullAttr 0x560e58315a70 <col:69, col:86> 1 2
|-FunctionDecl 0x560e58315b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560e58315ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560e58315c18 <line:565:22>
| `-NonNullAttr 0x560e58315c70 <col:52, col:66> 1
|-FunctionDecl 0x560e58315d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560e58315cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560e58315e18 <line:567:22>
| `-NonNullAttr 0x560e58315e70 <col:52, col:66> 1
|-FunctionDecl 0x560e58316028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560e58315eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560e58315f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560e583160d8 <col:39>
| `-NonNullAttr 0x560e58316130 <col:69, col:86> 1 2
|-FunctionDecl 0x560e58316230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560e58316178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560e583162d8 <line:572:22>
| `-NonNullAttr 0x560e58316330 <col:52, col:66> 1
|-FunctionDecl 0x560e58316518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560e583163e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560e583165c0 <line:574:22>
| `-NonNullAttr 0x560e58316618 <col:63, col:77> 1
|-FunctionDecl 0x560e58316720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560e58316668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560e583167c8 <line:576:22>
| `-NonNullAttr 0x560e58316820 <col:63, col:77> 1
|-FunctionDecl 0x560e58316a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e58316868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560e583168e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x560e58316b30 <line:580:22>
| `-NonNullAttr 0x560e58316b88 <col:63, col:80> 1 2
|-FunctionDecl 0x560e58316d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560e58316bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560e58316c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x560e58316e48 <line:583:22>
| `-NonNullAttr 0x560e58316ea0 <col:63, col:77> 1
|-FunctionDecl 0x560e58317048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e58316ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560e58316f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x560e583170f8 <line:587:22>
| `-NonNullAttr 0x560e58317150 <col:63, col:80> 1 2
|-FunctionDecl 0x560e583172d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560e58317198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560e58317218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x560e58317388 <col:36>
| `-NonNullAttr 0x560e583173e0 <col:77, col:91> 1
|-FunctionDecl 0x560e58317718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x560e583174c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560e583175d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x560e583177c8 <line:592:22>
| `-NonNullAttr 0x560e58317820 <col:63, col:77> 1
|-FunctionDecl 0x560e58317998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560e58317868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560e58317a40 <line:594:22>
| `-NonNullAttr 0x560e58317ac0 <col:63, col:77> 1
|-FunctionDecl 0x560e58317bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560e58317b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560e58317c68 <line:596:22>
| `-NonNullAttr 0x560e58317cc0 <col:52, col:66> 1
|-FunctionDecl 0x560e58317dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560e58317d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560e58317e68 <line:598:22>
| `-NonNullAttr 0x560e58317ec0 <col:52, col:66> 1
|-FunctionDecl 0x560e583180e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x560e58317f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560e58317f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x560e58318198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x560e583184c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560e58318218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560e58318290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560e58318320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x560e58318580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x560e58318798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560e58318660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560e58318840 <line:607:22>
| `-NonNullAttr 0x560e58318898 <col:63, col:77> 1
|-FunctionDecl 0x560e583189a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560e583188e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560e58318a48 <line:609:22>
| `-NonNullAttr 0x560e58318ad0 <col:63, col:77> 1
|-FunctionDecl 0x560e58318cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e58318b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560e58318b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x560e58318da8 <line:613:22>
| `-NonNullAttr 0x560e58318e00 <col:63, col:80> 1 2
|-FunctionDecl 0x560e58319008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x560e58318e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560e58318ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x560e583190b8 <col:37>
| `-NonNullAttr 0x560e58319110 <col:78, col:92> 1
|-FunctionDecl 0x560e58319328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x560e58319158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560e58319200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x560e583193d8 <line:619:22>
| `-NonNullAttr 0x560e58319430 <col:63, col:80> 1 2
|-FunctionDecl 0x560e583195f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x560e58319478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560e583194f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x560e583196a8 <line:622:22>
| `-NonNullAttr 0x560e58319700 <col:63, col:77> 1
|-FunctionDecl 0x560e583199a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x560e583197e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x560e58319860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x560e58319a58 <line:624:22>
| `-NonNullAttr 0x560e58319ae0 <col:63, col:77> 1
|-FunctionDecl 0x560e58319c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560e58319b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560e58319d00 <line:626:22>
| `-NonNullAttr 0x560e58319d58 <col:63, col:77> 1
|-FunctionDecl 0x560e58319e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560e58319da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560e58319f08 <line:628:22>
| `-NonNullAttr 0x560e58319f60 <col:52, col:66> 1
|-FunctionDecl 0x560e5831a060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560e58319fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560e5831a108 <line:630:22>
| `-NonNullAttr 0x560e5831a160 <col:52, col:66> 1
|-FunctionDecl 0x560e5831a260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560e5831a1a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560e5831a308 <line:632:22>
| `-NonNullAttr 0x560e5831a360 <col:52, col:66> 1
|-FunctionDecl 0x560e5831a738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x560e5831a440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x560e5831a550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560e5831a5d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x560e5831a7f0 <line:636:22>
| `-NonNullAttr 0x560e5831a848 <col:63, col:77> 1
|-FunctionDecl 0x560e5831a9c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560e5831a898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560e5831aa70 <line:638:22>
| `-NonNullAttr 0x560e5831bb00 <col:63, col:77> 1
|-FunctionDecl 0x560e5831bc00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560e5831bb48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560e5831bca8 <line:640:22>
| `-NonNullAttr 0x560e5831bd00 <col:52, col:66> 1
|-FunctionDecl 0x560e5831bee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560e5831bdb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560e5831bf90 <line:642:22>
| `-NonNullAttr 0x560e5831bfe8 <col:63, col:77> 1
|-FunctionDecl 0x560e5831c0f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560e5831c038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560e5831c198 <line:644:22>
| `-NonNullAttr 0x560e5831c1f0 <col:63, col:77> 1
|-FunctionDecl 0x560e5831c418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e5831c238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560e5831c2b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x560e5831c4c8 <line:648:22>
| `-NonNullAttr 0x560e5831c520 <col:63, col:80> 1 2
|-FunctionDecl 0x560e5831c728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x560e5831c568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x560e5831c5e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x560e5831c7d8 <line:651:22>
| `-NonNullAttr 0x560e5831c830 <col:63, col:77> 1
|-FunctionDecl 0x560e5831cb98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x560e5831c910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x560e5831ca30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x560e5831cc48 <line:654:22>
| `-NonNullAttr 0x560e5831cca0 <col:63, col:77> 1
|-FunctionDecl 0x560e5831cdf8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x560e5831cce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560e5831cea0 <col:69>
|-FunctionDecl 0x560e5831d018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x560e5831cf08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560e5831d0c0 <col:72>
|-FunctionDecl 0x560e5831d2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x560e5831d128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x560e5831d1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x560e5831d3a8 <col:44>
|-FunctionDecl 0x560e5831d5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x560e5831d410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560e5831d488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x560e5831d678 <line:661:22>
| `-NonNullAttr 0x560e5831d6d0 <col:63, col:77> 2
|-FunctionDecl 0x560e5831db30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x560e5831d7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x560e5831d8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x560e5831d9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x560e5831dbe8 <col:47>
|-FunctionDecl 0x560e5831dcf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x560e5831dc58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560e5831de48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x560e5831ddb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560e5831df10 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x560e5831dfd0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x560e5831e090 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x560e5831e148 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x560e5831e1c8 prev 0x560e5831e148 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x560e5831e230 <col:24> 'int' 0
|-VarDecl 0x560e5831e268 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x560e5831e2e8 prev 0x560e5831e268 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x560e5831e350 <col:27> 'int' 0
|-VarDecl 0x560e5831e388 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x560e5831e408 prev 0x560e5831e388 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x560e5831e470 <col:27> 'int' 0
|-VarDecl 0x560e5831e4a8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x560e5831e528 prev 0x560e5831e4a8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x560e5831e590 <col:27> 'int' 0
|-VarDecl 0x560e5831e5c8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x560e5831e648 prev 0x560e5831e5c8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x560e5831e6b0 <col:27> 'int' 0
|-VarDecl 0x560e5831e6e0 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x560e5831e758 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x560e5831e7d8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x560e5831e858 prev 0x560e5831e7d8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x560e5831e8c0 <col:9> 'int' 0
|-VarDecl 0x560e5831e8f0 <line:685:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x560e5831e970 <line:686:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x560e5831e9e8 <line:687:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x560e5831ea60 <line:688:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x560e5831eb00 <line:689:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x560e5831eb78 <line:690:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x560e5831ebf0 <line:691:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x560e5831ec68 <line:692:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x560e5831ece0 <line:693:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x560e5831ed60 <line:694:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x560e5831ede0 <line:695:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x560e5831ee58 <line:696:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x560e5831eed8 <line:697:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x560e5831ef50 <line:698:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x560e5831efd0 <line:699:1, col:5> col:5 used y 'int'
|-VarDecl 0x560e5831f050 prev 0x560e5831efd0 <line:700:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x560e5831f0b8 <col:9> 'int' 0
|-VarDecl 0x560e5831f0e8 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x560e5831f160 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x560e5831f278 prev 0x560e5831dcf0 <line:703:1, line:746:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x560e5831f1e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560e58323518 <line:704:1, line:746:1>
|   |-CallExpr 0x560e5831f388 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e5831f370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e5831f320 <col:3> 'void ()' Function 0x560e582c4fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e5831f400 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560e5831f3a8 <col:3> 'int' lvalue Var 0x560e5831eed8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x560e5831f3e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e5831f3c8 <col:15> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x560e5831f460 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560e5831f420 <col:3> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x560e5831f440 <col:15> 'int' 1
|   |-BinaryOperator 0x560e5831f4d8 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560e5831f480 <col:3> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560e5831f4c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e5831f4a0 <col:20> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560e5831f570 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560e5831f4f8 <col:3> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x560e5831f548 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560e5831f518 <col:27> 'int' 1
|   |-CallExpr 0x560e5831f6f8 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x560e5831f6e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560e5831f590 <col:3> 'void (int)' Function 0x560e582c4d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x560e5831f690 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x560e5831f670 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x560e5831f650 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x560e5831f608 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x560e5831f5f0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560e5831f5b0 <col:23> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x560e5831f638 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x560e5831f620 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x560e5831f5d0 <col:41> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560e5831f778 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560e5831f720 <col:3> '_Bool' lvalue Var 0x560e5831eb78 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x560e5831f760 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e5831f740 <col:20> '_Bool' lvalue Var 0x560e5831e9e8 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x560e5831f7f0 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560e5831f798 <col:3> '_Bool' lvalue Var 0x560e5831ebf0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560e5831f7d8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e5831f7b8 <col:20> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560e5831f868 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560e5831f810 <col:3> '_Bool' lvalue Var 0x560e5831ec68 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560e5831f850 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e5831f830 <col:20> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560e5831f900 <line:714:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560e5831f888 <col:3> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x560e5831f8d8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560e5831f8a8 <col:27> 'int' 1
|   |-CallExpr 0x560e5831f958 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e5831f940 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e5831f920 <col:3> 'void ()' Function 0x560e582c5060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560e5831f9b0 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e5831f998 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e5831f978 <col:3> 'void ()' Function 0x560e582c4fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e5831fa78 <line:717:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560e5831f9d0 <col:3> '_Bool' lvalue Var 0x560e5831f0e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x560e5831fa58 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560e5831fa40 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560e5831f9f0 <col:19> '_Bool (void)' Function 0x560e582c4770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560e5831fb30 <line:718:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560e5831fa98 <col:3> '_Bool' lvalue Var 0x560e5831f160 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x560e5831fb10 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560e5831fad8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560e5831fab8 <col:19> '_Bool (void)' Function 0x560e582c4770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560e5831fba8 <line:719:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560e5831fb50 <col:3> '_Bool' lvalue Var 0x560e5831e8f0 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560e5831fb90 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e5831fb70 <col:21> '_Bool' lvalue Var 0x560e5831f160 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560e5831fc20 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560e5831fbc8 <col:3> 'int' lvalue Var 0x560e5831e970 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560e5831fc08 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e5831fbe8 <col:15> 'int' lvalue Var 0x560e5831e858 'x' 'int'
|   |-BinaryOperator 0x560e58320058 <line:721:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560e5831fc40 <col:3> 'int' lvalue Var 0x560e5831e858 'x' 'int'
|   | `-ConditionalOperator 0x560e58320028 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560e5831fe50 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560e5831fd70 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560e5831fc98 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560e5831fc80 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560e5831fc60 <col:8> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560e5831fd50 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560e5831fce8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560e5831fcd0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560e5831fcb0 <col:27> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x560e5831fd38 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560e5831fd20 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560e5831fd00 <col:46> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560e5831fe30 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560e5831fdc8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560e5831fdb0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560e5831fd90 <col:65> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x560e5831fe18 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560e5831fe00 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560e5831fde0 <col:84> '_Bool' lvalue Var 0x560e5831ebf0 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x560e58320010 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e5831fe70 <col:101> 'int' lvalue Var 0x560e5831e858 'x' 'int'
|   |   `-ParenExpr 0x560e5831fff0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560e5831ffc0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560e5831ff30 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560e5831fee8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560e5831fed0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560e5831fe90 <col:106> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560e5831ff18 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560e5831ff00 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560e5831feb0 <col:124> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560e5831ff90 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560e5831ff50 <col:141> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560e5831ffa8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e5831ff70 <col:153> 'int' lvalue Var 0x560e5831eed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x560e58320568 <line:722:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560e58320078 <col:3> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x560e58320538 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560e58320508 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560e583204f0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560e58320098 <col:15> '_Bool' lvalue Var 0x560e5831f160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560e58320520 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e583200b8 <col:31> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560e583204d0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560e583204a0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560e583202c8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560e583201e8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560e58320110 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560e583200f8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560e583200d8 <col:45> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560e583201c8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560e58320160 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560e58320148 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560e58320128 <col:64> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x560e583201b0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560e58320198 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560e58320178 <col:83> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560e583202a8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560e58320240 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560e58320228 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560e58320208 <col:102> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x560e58320290 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560e58320278 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560e58320258 <col:121> '_Bool' lvalue Var 0x560e5831ebf0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560e58320488 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560e583202e8 <col:138> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x560e58320468 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560e58320438 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560e583203a8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560e58320360 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560e58320348 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560e58320308 <col:151> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560e58320390 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560e58320378 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560e58320328 <col:169> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x560e58320408 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560e583203c8 <col:186> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560e58320420 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560e583203e8 <col:198> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x560e58320a78 <line:723:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560e58320588 <col:3> 'int' lvalue Var 0x560e5831eed8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x560e58320a48 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560e58320a18 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560e58320a00 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560e583205a8 <col:15> '_Bool' lvalue Var 0x560e5831f160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560e58320a30 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e583205c8 <col:31> 'int' lvalue Var 0x560e5831eed8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x560e583209e0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560e583209b0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560e583207d8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560e583206f8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560e58320620 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560e58320608 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560e583205e8 <col:45> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560e583206d8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560e58320670 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560e58320658 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560e58320638 <col:64> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x560e583206c0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560e583206a8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560e58320688 <col:83> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560e583207b8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560e58320750 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560e58320738 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560e58320718 <col:102> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x560e583207a0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560e58320788 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560e58320768 <col:121> '_Bool' lvalue Var 0x560e5831ebf0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560e58320998 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560e583207f8 <col:138> 'int' lvalue Var 0x560e5831eed8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x560e58320978 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560e58320948 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560e583208b8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560e58320870 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560e58320858 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560e58320818 <col:151> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560e583208a0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560e58320888 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560e58320838 <col:169> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x560e58320918 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560e583208d8 <col:186> 'int' lvalue Var 0x560e5831eed8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560e58320930 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560e583208f8 <col:198> 'int' lvalue Var 0x560e5831eed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x560e58321048 <line:724:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560e58320a98 <col:3> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560e58321030 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e58321000 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560e58320fb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e58320fa0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e58320ab8 <col:20> '_Bool' lvalue Var 0x560e5831f160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e58320fe8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e58320fd0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e58320ad8 <col:36> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560e58320f80 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560e58320f50 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560e58320d10 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560e58320c30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560e58320b58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560e58320b40 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560e58320b20 <col:55> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560e58320c10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560e58320ba8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560e58320b90 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560e58320b70 <col:74> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560e58320bf8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560e58320be0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560e58320bc0 <col:93> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560e58320cf0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560e58320c88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560e58320c70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560e58320c50 <col:112> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560e58320cd8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560e58320cc0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560e58320ca0 <col:131> '_Bool' lvalue Var 0x560e5831ebf0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560e58320f38 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560e58320f20 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560e58320d30 <col:148> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560e58320f00 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560e58320ed0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560e58320df0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560e58320da8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560e58320d90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560e58320d50 <col:166> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560e58320dd8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560e58320dc0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560e58320d70 <col:184> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560e58320e88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560e58320e40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560e58320e10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560e58320eb8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560e58320ea0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560e58320e68 <col:212> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560e58321610 <line:725:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560e58321068 <col:3> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560e583215f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e583215c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560e58321580 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e58321568 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e58321088 <col:20> '_Bool' lvalue Var 0x560e5831f160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e583215b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e58321598 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e583210a8 <col:36> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560e58321548 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560e58321518 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560e583212b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560e583211d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560e58321100 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560e583210e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560e583210c8 <col:55> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560e583211b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560e58321150 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560e58321138 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560e58321118 <col:74> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560e583211a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560e58321188 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560e58321168 <col:93> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560e58321298 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560e58321230 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560e58321218 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560e583211f8 <col:112> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560e58321280 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560e58321268 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560e58321248 <col:131> '_Bool' lvalue Var 0x560e5831ebf0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560e58321500 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560e583214e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560e583212d8 <col:148> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560e583214c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560e58321498 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560e58321398 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560e58321350 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560e58321338 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560e583212f8 <col:166> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560e58321380 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560e58321368 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560e58321318 <col:184> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560e58321468 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560e583213e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560e583213b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560e58321480 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560e58321440 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560e58321410 <col:219> 'int' 0
|   |-BinaryOperator 0x560e58321bd8 <line:726:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560e58321630 <col:3> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560e58321bc0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e58321b90 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560e58321b48 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e58321b30 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e58321650 <col:20> '_Bool' lvalue Var 0x560e5831f160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e58321b78 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e58321b60 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e58321670 <col:36> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x560e58321af0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560e58321ac0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560e58321880 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560e583217a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560e583216c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560e583216b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560e58321690 <col:55> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560e58321780 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560e58321718 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560e58321700 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560e583216e0 <col:74> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560e58321768 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560e58321750 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560e58321730 <col:93> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560e58321860 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560e583217f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560e583217e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560e583217c0 <col:112> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560e58321848 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560e58321830 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560e58321810 <col:131> '_Bool' lvalue Var 0x560e5831ebf0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560e58321aa8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560e58321a90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560e583218a0 <col:148> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x560e58321a70 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560e58321a40 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560e58321960 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560e58321918 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560e58321900 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560e583218c0 <col:166> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560e58321948 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560e58321930 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560e583218e0 <col:184> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560e583219f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560e583219b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560e58321980 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560e58321a28 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560e58321a10 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560e583219d8 <col:212> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560e583221a0 <line:727:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560e58321bf8 <col:3> '_Bool' lvalue Var 0x560e5831ebf0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560e58322188 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e58322158 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560e58322110 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e583220f8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e58321c18 <col:20> '_Bool' lvalue Var 0x560e5831f160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e58322140 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e58322128 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e58321c38 <col:36> '_Bool' lvalue Var 0x560e5831ebf0 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x560e583220d8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560e583220a8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560e58321e48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560e58321d68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560e58321c90 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560e58321c78 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560e58321c58 <col:55> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560e58321d48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560e58321ce0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560e58321cc8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560e58321ca8 <col:74> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560e58321d30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560e58321d18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560e58321cf8 <col:93> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560e58321e28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560e58321dc0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560e58321da8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560e58321d88 <col:112> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560e58321e10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560e58321df8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560e58321dd8 <col:131> '_Bool' lvalue Var 0x560e5831ebf0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560e58322090 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560e58322078 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560e58321e68 <col:148> '_Bool' lvalue Var 0x560e5831ebf0 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x560e58322058 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560e58322028 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560e58321f28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560e58321ee0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560e58321ec8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560e58321e88 <col:166> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560e58321f10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560e58321ef8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560e58321ea8 <col:184> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560e58321ff8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560e58321f78 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560e58321f48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560e58322010 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560e58321fd0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560e58321fa0 <col:219> 'int' 0
|   |-BinaryOperator 0x560e58322218 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560e583221c0 <col:3> 'int' lvalue Var 0x560e5831e2e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x560e58322200 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e583221e0 <col:25> 'int' lvalue Var 0x560e5831e858 'x' 'int'
|   |-BinaryOperator 0x560e58322348 <line:729:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560e58322238 <col:3> 'int' lvalue Var 0x560e5831e858 'x' 'int'
|   | `-ConditionalOperator 0x560e58322318 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560e583222d0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560e583222b8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560e58322258 <col:7> '_Bool' lvalue Var 0x560e5831e8f0 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560e583222e8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e58322278 <col:25> 'int' lvalue Var 0x560e5831e970 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560e58322300 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560e58322298 <col:37> 'int' lvalue Var 0x560e5831e858 'x' 'int'
|   |-BinaryOperator 0x560e583223e0 <line:730:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560e58322368 <col:3> '_Bool' lvalue Var 0x560e5831e8f0 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560e583223b8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560e58322388 <col:28> 'int' 0
|   |-CallExpr 0x560e58322438 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e58322420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e58322400 <col:3> 'void ()' Function 0x560e582c5060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560e58322490 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e58322478 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e58322458 <col:3> 'void ()' Function 0x560e582c4fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e58322508 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560e583224b0 <col:3> 'int' lvalue Var 0x560e5831e408 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x560e583224f0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e583224d0 <col:25> 'int' lvalue Var 0x560e5831f050 'y' 'int'
|   |-CallExpr 0x560e58322560 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e58322548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e58322528 <col:3> 'void ()' Function 0x560e582c5060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560e583225b8 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e583225a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e58322580 <col:3> 'void ()' Function 0x560e582c4fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e583228a0 <line:736:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560e583225d8 <col:3> 'int' lvalue Var 0x560e5831e858 'x' 'int'
|   | `-ConditionalOperator 0x560e58322870 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560e58322698 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560e58322650 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560e58322638 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560e583225f8 <col:7> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560e58322680 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560e58322668 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560e58322618 <col:25> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x560e58322858 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e583226b8 <col:42> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560e58322838 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560e58322808 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560e58322778 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560e58322730 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560e58322718 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560e583226d8 <col:55> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560e58322760 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560e58322748 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560e583226f8 <col:73> '_Bool' lvalue Var 0x560e5831ebf0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560e583227d8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560e58322798 <col:90> 'int' lvalue Var 0x560e5831eed8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560e583227f0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e583227b8 <col:102> 'int' lvalue Var 0x560e5831e858 'x' 'int'
|   |-BinaryOperator 0x560e58322aa8 <line:737:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560e583228c0 <col:3> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560e58322a90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e58322a60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560e58322980 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560e58322938 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560e58322920 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560e583228e0 <col:20> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560e58322968 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560e58322950 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560e58322900 <col:38> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560e58322a18 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560e583229d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560e583229a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560e58322a48 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560e58322a30 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e583229f8 <col:66> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560e58322da8 <line:738:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560e58322ac8 <col:3> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560e58322d90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e58322d60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560e58322c80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560e58322ba0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560e58322b58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560e58322b40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560e58322ae8 <col:20> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560e58322b88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560e58322b70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560e58322b08 <col:38> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560e58322c60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560e58322c18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560e58322c00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560e58322bc0 <col:56> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560e58322c48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560e58322c30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560e58322be0 <col:74> '_Bool' lvalue Var 0x560e5831ebf0 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560e58322d18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560e58322cd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560e58322ca0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560e58322d48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560e58322d30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e58322cf8 <col:102> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560e58322fb0 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560e58322dc8 <col:3> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560e58322f98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e58322f68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560e58322e88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560e58322e40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560e58322e28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560e58322de8 <col:20> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560e58322e70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560e58322e58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560e58322e08 <col:38> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560e58322f20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560e58322ed8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560e58322ea8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560e58322f50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560e58322f38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e58322f00 <col:66> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560e58323298 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560e58322fd0 <col:3> '_Bool' lvalue Var 0x560e5831ebf0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560e58323280 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e58323250 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560e58323170 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560e58323090 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560e58323048 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560e58323030 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560e58322ff0 <col:20> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560e58323078 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560e58323060 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560e58323010 <col:38> '_Bool' lvalue Var 0x560e5831ea60 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560e58323150 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560e58323108 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560e583230f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560e583230b0 <col:56> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560e58323138 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560e58323120 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560e583230d0 <col:74> '_Bool' lvalue Var 0x560e5831ebf0 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560e58323208 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560e583231c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560e58323190 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560e58323238 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560e58323220 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e583231e8 <col:102> '_Bool' lvalue Var 0x560e5831ebf0 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x560e583232f0 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e583232d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e583232b8 <col:3> 'void ()' Function 0x560e582c5060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560e58323348 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e58323330 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e58323310 <col:3> 'void ()' Function 0x560e582c4fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e58323400 <line:743:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560e58323368 <col:3> 'int' lvalue Var 0x560e5831e1c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560e583233e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560e583233c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e58323388 <col:22> 'int' lvalue Var 0x560e5831e1c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560e583233a8 <col:41> 'int' 1
|   |-CallExpr 0x560e58323458 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e58323440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e58323420 <col:3> 'void ()' Function 0x560e582c5060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560e58323508 <line:745:3, col:36>
|     `-CallExpr 0x560e583234e8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560e583234d0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560e58323478 <col:10> 'void *(void)' Function 0x560e582c4ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560e58323720 prev 0x560e5831de48 <line:747:1, line:782:1> line:747:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x560e58323688 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560e58327400 <line:748:1, line:782:1>
|   |-CallExpr 0x560e58323800 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e583237e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e583237c8 <col:3> 'void ()' Function 0x560e582c4fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e58323860 <line:750:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560e58323820 <col:3> 'int' lvalue Var 0x560e5831f050 'y' 'int'
|   | `-IntegerLiteral 0x560e58323840 <col:7> 'int' 1
|   |-CallExpr 0x560e583238b8 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e583238a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e58323880 <col:3> 'void ()' Function 0x560e582c5060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560e58323910 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e583238f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e583238d8 <col:3> 'void ()' Function 0x560e582c4fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e58323988 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560e58323930 <col:3> 'int' lvalue Var 0x560e5831e528 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x560e58323970 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e58323950 <col:25> 'int' lvalue Var 0x560e5831f050 'y' 'int'
|   |-CallExpr 0x560e583239e0 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e583239c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e583239a8 <col:3> 'void ()' Function 0x560e582c5060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560e58323a38 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e58323a20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e58323a00 <col:3> 'void ()' Function 0x560e582c4fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e58323ad0 <line:756:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560e58323a58 <col:3> '_Bool' lvalue Var 0x560e5831f0e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x560e58323ab0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560e58323a98 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560e58323a78 <col:19> '_Bool (void)' Function 0x560e582c4770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560e58323b88 <line:757:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560e58323af0 <col:3> '_Bool' lvalue Var 0x560e5831f160 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x560e58323b68 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560e58323b50 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560e58323b10 <col:19> '_Bool (void)' Function 0x560e582c4770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560e58323c00 <line:758:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560e58323ba8 <col:3> '_Bool' lvalue Var 0x560e5831e8f0 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560e58323be8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e58323bc8 <col:21> '_Bool' lvalue Var 0x560e5831f160 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560e58323c78 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560e58323c20 <col:3> 'int' lvalue Var 0x560e5831e970 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560e58323c60 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e58323c40 <col:15> 'int' lvalue Var 0x560e5831e858 'x' 'int'
|   |-BinaryOperator 0x560e583240b0 <line:760:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560e58323c98 <col:3> 'int' lvalue Var 0x560e5831e858 'x' 'int'
|   | `-ConditionalOperator 0x560e58324080 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560e58323ea8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560e58323dc8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560e58323cf0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560e58323cd8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560e58323cb8 <col:8> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560e58323da8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560e58323d40 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560e58323d28 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560e58323d08 <col:27> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x560e58323d90 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560e58323d78 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560e58323d58 <col:46> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560e58323e88 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560e58323e20 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560e58323e08 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560e58323de8 <col:65> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x560e58323e70 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560e58323e58 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560e58323e38 <col:84> '_Bool' lvalue Var 0x560e5831ec68 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x560e58324068 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e58323ec8 <col:101> 'int' lvalue Var 0x560e5831e858 'x' 'int'
|   |   `-ParenExpr 0x560e58324048 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560e58324018 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560e58323f88 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560e58323f40 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560e58323f28 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560e58323ee8 <col:106> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560e58323f70 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560e58323f58 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560e58323f08 <col:124> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560e58323fe8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560e58323fa8 <col:141> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560e58324000 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e58323fc8 <col:153> 'int' lvalue Var 0x560e5831eed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x560e583245c0 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560e583240d0 <col:3> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x560e58324590 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560e58324560 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560e58324548 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560e583240f0 <col:15> '_Bool' lvalue Var 0x560e5831f160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560e58324578 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e58324110 <col:31> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560e58324528 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560e583244f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560e58324320 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560e58324240 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560e58324168 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560e58324150 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560e58324130 <col:45> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560e58324220 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560e583241b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560e583241a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560e58324180 <col:64> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x560e58324208 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560e583241f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560e583241d0 <col:83> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560e58324300 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560e58324298 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560e58324280 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560e58324260 <col:102> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x560e583242e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560e583242d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560e583242b0 <col:121> '_Bool' lvalue Var 0x560e5831ec68 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560e583244e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560e58324340 <col:138> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x560e583244c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560e58324490 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560e58324400 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560e583243b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560e583243a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560e58324360 <col:151> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560e583243e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560e583243d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560e58324380 <col:169> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x560e58324460 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560e58324420 <col:186> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560e58324478 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560e58324440 <col:198> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x560e58324ad0 <line:762:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560e583245e0 <col:3> 'int' lvalue Var 0x560e5831eed8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x560e58324aa0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560e58324a70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560e58324a58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560e58324600 <col:15> '_Bool' lvalue Var 0x560e5831f160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560e58324a88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e58324620 <col:31> 'int' lvalue Var 0x560e5831eed8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x560e58324a38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560e58324a08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560e58324830 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560e58324750 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560e58324678 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560e58324660 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560e58324640 <col:45> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560e58324730 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560e583246c8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560e583246b0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560e58324690 <col:64> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x560e58324718 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560e58324700 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560e583246e0 <col:83> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560e58324810 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560e583247a8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560e58324790 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560e58324770 <col:102> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x560e583247f8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560e583247e0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560e583247c0 <col:121> '_Bool' lvalue Var 0x560e5831ec68 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560e583249f0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560e58324850 <col:138> 'int' lvalue Var 0x560e5831eed8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x560e583249d0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560e583249a0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560e58324910 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560e583248c8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560e583248b0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560e58324870 <col:151> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560e583248f8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560e583248e0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560e58324890 <col:169> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x560e58324970 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560e58324930 <col:186> 'int' lvalue Var 0x560e5831eed8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560e58324988 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560e58324950 <col:198> 'int' lvalue Var 0x560e5831eed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x560e58325088 <line:763:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560e58324af0 <col:3> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560e58325070 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e58325040 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560e58324ff8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e58324fe0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e58324b10 <col:20> '_Bool' lvalue Var 0x560e5831f160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e58325028 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e58325010 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e58324b30 <col:36> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560e58324fc0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560e58324f90 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560e58324d50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560e58324c70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560e58324b98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560e58324b80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560e58324b60 <col:55> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560e58324c50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560e58324be8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560e58324bd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560e58324bb0 <col:74> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x560e58324c38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560e58324c20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560e58324c00 <col:93> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560e58324d30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560e58324cc8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560e58324cb0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560e58324c90 <col:112> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x560e58324d18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560e58324d00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560e58324ce0 <col:131> '_Bool' lvalue Var 0x560e5831ec68 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x560e58324f78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560e58324f60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560e58324d70 <col:148> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560e58324f40 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560e58324f10 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560e58324e30 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560e58324de8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560e58324dd0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560e58324d90 <col:166> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560e58324e18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560e58324e00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560e58324db0 <col:184> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560e58324ec8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560e58324e80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560e58324e50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560e58324ef8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560e58324ee0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560e58324ea8 <col:212> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560e58325650 <line:764:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560e583250a8 <col:3> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560e58325638 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e58325608 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560e583255c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e583255a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e583250c8 <col:20> '_Bool' lvalue Var 0x560e5831f160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e583255f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e583255d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e583250e8 <col:36> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560e58325588 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560e58325558 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560e583252f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560e58325218 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560e58325140 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560e58325128 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560e58325108 <col:55> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560e583251f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560e58325190 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560e58325178 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560e58325158 <col:74> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x560e583251e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560e583251c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560e583251a8 <col:93> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560e583252d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560e58325270 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560e58325258 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560e58325238 <col:112> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x560e583252c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560e583252a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560e58325288 <col:131> '_Bool' lvalue Var 0x560e5831ec68 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x560e58325540 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560e58325528 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560e58325318 <col:148> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560e58325508 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560e583254d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560e583253d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560e58325390 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560e58325378 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560e58325338 <col:166> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560e583253c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560e583253a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560e58325358 <col:184> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560e583254a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560e58325428 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560e583253f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560e583254c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560e58325480 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560e58325450 <col:219> 'int' 0
|   |-BinaryOperator 0x560e58325c18 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560e58325670 <col:3> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560e58325c00 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e58325bd0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560e58325b88 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e58325b70 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e58325690 <col:20> '_Bool' lvalue Var 0x560e5831f160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e58325bb8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e58325ba0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e583256b0 <col:36> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x560e58325b30 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560e58325b00 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560e583258c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560e583257e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560e58325708 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560e583256f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560e583256d0 <col:55> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560e583257c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560e58325758 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560e58325740 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560e58325720 <col:74> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x560e583257a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560e58325790 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560e58325770 <col:93> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560e583258a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560e58325838 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560e58325820 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560e58325800 <col:112> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x560e58325888 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560e58325870 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560e58325850 <col:131> '_Bool' lvalue Var 0x560e5831ec68 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x560e58325ae8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560e58325ad0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560e583258e0 <col:148> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x560e58325ab0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560e58325a80 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560e583259a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560e58325958 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560e58325940 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560e58325900 <col:166> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560e58325988 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560e58325970 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560e58325920 <col:184> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560e58325a38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560e583259f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560e583259c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560e58325a68 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560e58325a50 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560e58325a18 <col:212> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560e583261e0 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560e58325c38 <col:3> '_Bool' lvalue Var 0x560e5831ec68 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560e583261c8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e58326198 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560e58326150 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e58326138 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e58325c58 <col:20> '_Bool' lvalue Var 0x560e5831f160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e58326180 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e58326168 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e58325c78 <col:36> '_Bool' lvalue Var 0x560e5831ec68 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x560e58326118 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560e583260e8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560e58325e88 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560e58325da8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560e58325cd0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560e58325cb8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560e58325c98 <col:55> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560e58325d88 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560e58325d20 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560e58325d08 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560e58325ce8 <col:74> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x560e58325d70 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560e58325d58 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560e58325d38 <col:93> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560e58325e68 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560e58325e00 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560e58325de8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560e58325dc8 <col:112> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x560e58325e50 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560e58325e38 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560e58325e18 <col:131> '_Bool' lvalue Var 0x560e5831ec68 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x560e583260d0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560e583260b8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560e58325ea8 <col:148> '_Bool' lvalue Var 0x560e5831ec68 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x560e58326098 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560e58326068 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560e58325f68 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560e58325f20 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560e58325f08 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560e58325ec8 <col:166> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560e58325f50 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560e58325f38 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560e58325ee8 <col:184> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560e58326038 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560e58325fb8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560e58325f88 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560e58326050 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560e58326010 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560e58325fe0 <col:219> 'int' 0
|   |-BinaryOperator 0x560e58326258 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560e58326200 <col:3> 'int' lvalue Var 0x560e5831e648 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x560e58326240 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e58326220 <col:25> 'int' lvalue Var 0x560e5831e858 'x' 'int'
|   |-BinaryOperator 0x560e58326388 <line:768:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560e58326278 <col:3> 'int' lvalue Var 0x560e5831e858 'x' 'int'
|   | `-ConditionalOperator 0x560e58326358 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560e58326310 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560e583262f8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560e58326298 <col:7> '_Bool' lvalue Var 0x560e5831e8f0 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560e58326328 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e583262b8 <col:25> 'int' lvalue Var 0x560e5831e970 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560e58326340 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560e583262d8 <col:37> 'int' lvalue Var 0x560e5831e858 'x' 'int'
|   |-BinaryOperator 0x560e58326420 <line:769:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560e583263a8 <col:3> '_Bool' lvalue Var 0x560e5831e8f0 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560e583263f8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560e583263c8 <col:28> 'int' 0
|   |-CallExpr 0x560e58326478 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e58326460 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e58326440 <col:3> 'void ()' Function 0x560e582c5060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560e583264d0 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e583264b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e58326498 <col:3> 'void ()' Function 0x560e582c4fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e583267b8 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560e583264f0 <col:3> 'int' lvalue Var 0x560e5831e858 'x' 'int'
|   | `-ConditionalOperator 0x560e58326788 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560e583265b0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560e58326568 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560e58326550 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560e58326510 <col:7> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560e58326598 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560e58326580 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560e58326530 <col:25> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x560e58326770 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e583265d0 <col:42> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560e58326750 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560e58326720 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560e58326690 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560e58326648 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560e58326630 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560e583265f0 <col:55> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560e58326678 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560e58326660 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560e58326610 <col:73> '_Bool' lvalue Var 0x560e5831ec68 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560e583266f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560e583266b0 <col:90> 'int' lvalue Var 0x560e5831eed8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560e58326708 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e583266d0 <col:102> 'int' lvalue Var 0x560e5831e858 'x' 'int'
|   |-BinaryOperator 0x560e583269c0 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560e583267d8 <col:3> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560e583269a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e58326978 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560e58326898 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560e58326850 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560e58326838 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560e583267f8 <col:20> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560e58326880 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560e58326868 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560e58326818 <col:38> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e58326930 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560e583268e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560e583268b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560e58326960 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560e58326948 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e58326910 <col:66> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560e58326cc8 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560e583269e0 <col:3> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560e58326cb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e58326c80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560e58326ba0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560e58326aa0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560e58326a58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560e58326a40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560e58326a00 <col:20> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560e58326a88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560e58326a70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560e58326a20 <col:38> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560e58326b80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560e58326b18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560e58326b00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560e58326ac0 <col:56> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560e58326b48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560e58326b30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560e58326ae0 <col:74> '_Bool' lvalue Var 0x560e5831ec68 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e58326c38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560e58326bf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560e58326bc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560e58326c68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560e58326c50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e58326c18 <col:102> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560e58326ed0 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560e58326ce8 <col:3> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560e58326eb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e58326e88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560e58326da8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560e58326d60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560e58326d48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560e58326d08 <col:20> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560e58326d90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560e58326d78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560e58326d28 <col:38> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e58326e40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560e58326df8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560e58326dc8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560e58326e70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560e58326e58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e58326e20 <col:66> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560e583271b8 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560e58326ef0 <col:3> '_Bool' lvalue Var 0x560e5831ec68 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560e583271a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e58327170 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560e58327090 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560e58326fb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560e58326f68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560e58326f50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560e58326f10 <col:20> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560e58326f98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560e58326f80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560e58326f30 <col:38> '_Bool' lvalue Var 0x560e5831eb00 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560e58327070 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560e58327028 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560e58327010 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560e58326fd0 <col:56> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560e58327058 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560e58327040 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560e58326ff0 <col:74> '_Bool' lvalue Var 0x560e5831ec68 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e58327128 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560e583270e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560e583270b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560e58327158 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560e58327140 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e58327108 <col:102> '_Bool' lvalue Var 0x560e5831ec68 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x560e58327210 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e583271f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e583271d8 <col:3> 'void ()' Function 0x560e582c5060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560e58327268 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e58327250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e58327230 <col:3> 'void ()' Function 0x560e582c4fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e58327320 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560e58327288 <col:3> 'int' lvalue Var 0x560e5831e1c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560e58327300 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560e583272e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e583272a8 <col:22> 'int' lvalue Var 0x560e5831e1c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560e583272c8 <col:41> 'int' 1
|   |-CallExpr 0x560e58327378 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e58327360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e58327340 <col:3> 'void ()' Function 0x560e582c5060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560e583273f0 <line:781:3, col:36>
|     `-CallExpr 0x560e583273d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560e583273b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560e58327398 <col:10> 'void *(void)' Function 0x560e582c4ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560e58327538 prev 0x560e5831df10 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x560e583275d8 <line:784:1, line:785:1>
|-FunctionDecl 0x560e58327608 prev 0x560e5831dfd0 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x560e583276a8 <line:787:1, line:788:1>
|-FunctionDecl 0x560e583276d8 prev 0x560e5831e090 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x560e58327778 <line:790:1, line:791:1>
`-FunctionDecl 0x560e583277e8 <line:792:1, line:814:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x560e58329240 <line:793:1, line:814:1>
    |-DeclStmt 0x560e58327900 <line:794:3, col:18>
    | `-VarDecl 0x560e58327898 <col:3, col:13> col:13 used t1731 'pthread_t':'unsigned long'
    |-CallExpr 0x560e58327b08 <line:795:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560e58327af0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560e58327918 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560e583055b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560e58327958 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560e58327938 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560e58327898 't1731' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560e58327b48 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560e583279d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560e583279a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560e58327970 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560e58327b60 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560e583279f0 <col:39> 'void *(void *)' Function 0x560e5831f278 'P0' 'void *(void *)'
    | `-ParenExpr 0x560e58327a70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560e58327a48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560e58327a10 <col:52> 'int' 0
    |-DeclStmt 0x560e58327c08 <line:796:3, col:18>
    | `-VarDecl 0x560e58327ba0 <col:3, col:13> col:13 used t1732 'pthread_t':'unsigned long'
    |-CallExpr 0x560e58327db0 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560e58327d98 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560e58327c20 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560e583055b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560e58327c60 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560e58327c40 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560e58327ba0 't1732' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560e58327df0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560e58327cd8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560e58327cb0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560e58327c78 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560e58327e08 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560e58327cf8 <col:39> 'void *(void *)' Function 0x560e58323720 'P1' 'void *(void *)'
    | `-ParenExpr 0x560e58327d78 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560e58327d50 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560e58327d18 <col:52> 'int' 0
    |-CallExpr 0x560e58327e58 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560e58327e40 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560e58327e20 <col:3> 'void ()' Function 0x560e582c4fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560e58327f28 <line:799:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x560e58327e78 <col:3> '_Bool' lvalue Var 0x560e5831e6e0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x560e58327f10 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x560e58327ef0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x560e58327ed8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x560e58327e98 <col:21> 'int' lvalue Var 0x560e5831e1c8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x560e58327eb8 <col:41> 'int' 2
    |-CallExpr 0x560e58327f80 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560e58327f68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560e58327f48 <col:3> 'void ()' Function 0x560e582c5060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560e58327ff8 <line:801:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560e58327fe0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560e58327fa0 <col:3> 'void (int)' Function 0x560e582c4940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x560e58328038 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560e58328020 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560e58327fc0 <col:21> '_Bool' lvalue Var 0x560e5831e6e0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x560e58328088 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560e58328070 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560e58328050 <col:3> 'void ()' Function 0x560e582c4fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560e58328370 <line:803:3, col:103> 'int' '='
    | |-DeclRefExpr 0x560e583280a8 <col:3> 'int' lvalue Var 0x560e5831e858 'x' 'int'
    | `-ConditionalOperator 0x560e58328340 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x560e58328168 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x560e58328120 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x560e58328108 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x560e583280c8 <col:7> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x560e58328150 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x560e58328138 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560e583280e8 <col:25> '_Bool' lvalue Var 0x560e5831e9e8 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560e58328328 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560e58328188 <col:42> 'int' lvalue Var 0x560e5831ede0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x560e58328308 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x560e583282d8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x560e58328248 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560e58328200 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560e583281e8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560e583281a8 <col:55> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560e58328230 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560e58328218 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560e583281c8 <col:73> '_Bool' lvalue Var 0x560e5831eb78 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560e583282a8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560e58328268 <col:90> 'int' lvalue Var 0x560e5831eed8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x560e583282c0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560e58328288 <col:102> 'int' lvalue Var 0x560e5831e858 'x' 'int'
    |-BinaryOperator 0x560e58328578 <line:804:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560e58328390 <col:3> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560e58328560 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560e58328530 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560e58328450 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560e58328408 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560e583283f0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560e583283b0 <col:20> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560e58328438 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560e58328420 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560e583283d0 <col:38> '_Bool' lvalue Var 0x560e5831e9e8 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560e583284e8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560e583284a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560e58328470 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560e58328518 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560e58328500 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560e583284c8 <col:66> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560e58328860 <line:805:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560e58328598 <col:3> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560e58328848 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560e58328818 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560e58328738 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560e58328658 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560e58328610 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560e583285f8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560e583285b8 <col:20> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560e58328640 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560e58328628 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560e583285d8 <col:38> '_Bool' lvalue Var 0x560e5831e9e8 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560e58328718 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560e583286d0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560e583286b8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560e58328678 <col:56> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560e58328700 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560e583286e8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560e58328698 <col:74> '_Bool' lvalue Var 0x560e5831eb78 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560e583287d0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560e58328788 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560e58328758 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560e58328800 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560e583287e8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560e583287b0 <col:102> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x560e58328a68 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560e58328880 <col:3> '_Bool' lvalue Var 0x560e5831e9e8 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560e58328a50 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560e58328a20 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560e58328940 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560e583288f8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560e583288e0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560e583288a0 <col:20> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560e58328928 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560e58328910 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560e583288c0 <col:38> '_Bool' lvalue Var 0x560e5831e9e8 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560e583289d8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560e58328990 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560e58328960 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560e58328a08 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560e583289f0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560e583289b8 <col:66> '_Bool' lvalue Var 0x560e5831e9e8 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560e58328d68 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560e58328a88 <col:3> '_Bool' lvalue Var 0x560e5831eb78 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560e58328d50 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560e58328d20 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560e58328c40 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560e58328b48 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560e58328b00 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560e58328ae8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560e58328aa8 <col:20> '_Bool' lvalue Var 0x560e5831ee58 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560e58328b30 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560e58328b18 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560e58328ac8 <col:38> '_Bool' lvalue Var 0x560e5831e9e8 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560e58328c20 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560e58328bd8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560e58328bc0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560e58328b68 <col:56> '_Bool' lvalue Var 0x560e5831ef50 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560e58328c08 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560e58328bf0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560e58328ba0 <col:74> '_Bool' lvalue Var 0x560e5831eb78 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560e58328cd8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560e58328c90 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560e58328c60 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560e58328d08 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560e58328cf0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560e58328cb8 <col:102> '_Bool' lvalue Var 0x560e5831eb78 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x560e58328dc0 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560e58328da8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560e58328d88 <col:3> 'void ()' Function 0x560e582c5060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560e58328e18 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560e58328e00 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560e58328de0 <col:3> 'void ()' Function 0x560e582c4fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560e583290e8 <line:810:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x560e58328e38 <col:3> '_Bool' lvalue Var 0x560e5831e758 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x560e583290d0 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x560e583290b8 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x560e58329098 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x560e58329078 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x560e58328fe0 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x560e58328f48 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x560e58328eb0 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x560e58328e98 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x560e58328e58 <col:23> 'int' lvalue Var 0x560e5831e2e8 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x560e58328e78 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x560e58328f28 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x560e58328f10 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x560e58328ed0 <col:51> 'int' lvalue Var 0x560e5831e408 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x560e58328ef0 <col:74> 'int' 0
    |         | `-BinaryOperator 0x560e58328fc0 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x560e58328fa8 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x560e58328f68 <col:79> 'int' lvalue Var 0x560e5831e528 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x560e58328f88 <col:102> 'int' 1
    |         `-BinaryOperator 0x560e58329058 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x560e58329040 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560e58329000 <col:107> 'int' lvalue Var 0x560e5831e648 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x560e58329020 <col:130> 'int' 0
    |-CallExpr 0x560e58329140 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560e58329128 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560e58329108 <col:3> 'void ()' Function 0x560e582c5060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560e583291b8 <line:812:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560e583291a0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560e58329160 <col:3> 'void (int)' Function 0x560e582c4d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x560e583291f8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560e583291e0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560e58329180 <col:21> '_Bool' lvalue Var 0x560e5831e758 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x560e58329230 <line:813:3, col:10>
      `-IntegerLiteral 0x560e58329210 <col:10> 'int' 0
