TranslationUnitDecl 0x556a6dd2b518 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x556a6dd2bdd8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x556a6dd2bab0 '__int128'
|-TypedefDecl 0x556a6dd2be48 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x556a6dd2bad0 'unsigned __int128'
|-TypedefDecl 0x556a6dd2c150 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x556a6dd2bf20 'struct __NSConstantString_tag'
|   `-Record 0x556a6dd2bea0 '__NSConstantString_tag'
|-TypedefDecl 0x556a6dd2c1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x556a6dd2c1b0 'char *'
|   `-BuiltinType 0x556a6dd2b5b0 'char'
|-TypedefDecl 0x556a6dd6b2a0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x556a6dd2c490 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x556a6dd2c2d0 'struct __va_list_tag'
|     `-Record 0x556a6dd2c250 '__va_list_tag'
|-EnumDecl 0x556a6dd6b2f8 <termination-crafted-lit/Masse-VMCAI2014-Ex6_false-no-overflow.c:9:9, col:26> col:9
| |-EnumConstantDecl 0x556a6dd6b3c8 <col:15> col:15 false 'int'
| `-EnumConstantDecl 0x556a6dd6b418 <col:22> col:22 true 'int'
|-TypedefDecl 0x556a6dd6b4d0 <col:1, col:28> col:28 bool 'enum bool':'bool'
| `-ElaboratedType 0x556a6dd6b470 'enum bool' sugar
|   `-EnumType 0x556a6dd6b3a0 'bool'
|     `-Enum 0x556a6dd6b2f8 ''
|-FunctionDecl 0x556a6dd6b618 <line:11:1, col:38> col:12 used __VERIFIER_nondet_int 'int (void)' extern
`-FunctionDecl 0x556a6dd6b758 <line:13:1, line:24:1> line:13:5 main 'int ()'
  `-CompoundStmt 0x556a6dd6bda0 <col:12, line:24:1>
    |-DeclStmt 0x556a6dd6b910 <line:14:5, col:13>
    | |-VarDecl 0x556a6dd6b810 <col:5, col:9> col:9 used x 'int'
    | `-VarDecl 0x556a6dd6b890 <col:5, col:12> col:12 used y 'int'
    |-BinaryOperator 0x556a6dd6b9d8 <line:15:2, col:28> 'int' '='
    | |-DeclRefExpr 0x556a6dd6b928 <col:2> 'int' lvalue Var 0x556a6dd6b810 'x' 'int'
    | `-CallExpr 0x556a6dd6b9b8 <col:6, col:28> 'int'
    |   `-ImplicitCastExpr 0x556a6dd6b9a0 <col:6> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x556a6dd6b948 <col:6> 'int (void)' Function 0x556a6dd6b618 '__VERIFIER_nondet_int' 'int (void)'
    |-BinaryOperator 0x556a6dd6ba70 <line:16:2, col:28> 'int' '='
    | |-DeclRefExpr 0x556a6dd6b9f8 <col:2> 'int' lvalue Var 0x556a6dd6b890 'y' 'int'
    | `-CallExpr 0x556a6dd6ba50 <col:6, col:28> 'int'
    |   `-ImplicitCastExpr 0x556a6dd6ba38 <col:6> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x556a6dd6ba18 <col:6> 'int (void)' Function 0x556a6dd6b618 '__VERIFIER_nondet_int' 'int (void)'
    |-WhileStmt 0x556a6dd6bd58 <line:17:2, line:22:2>
    | |-BinaryOperator 0x556a6dd6bae8 <line:17:9, col:14> 'int' '>='
    | | |-ImplicitCastExpr 0x556a6dd6bad0 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x556a6dd6ba90 <col:9> 'int' lvalue Var 0x556a6dd6b810 'x' 'int'
    | | `-IntegerLiteral 0x556a6dd6bab0 <col:14> 'int' 0
    | `-CompoundStmt 0x556a6dd6bd38 <col:17, line:22:2>
    |   |-BinaryOperator 0x556a6dd6bbb8 <line:18:3, col:11> 'int' '='
    |   | |-DeclRefExpr 0x556a6dd6bb08 <col:3> 'int' lvalue Var 0x556a6dd6b810 'x' 'int'
    |   | `-BinaryOperator 0x556a6dd6bb98 <col:7, col:11> 'int' '+'
    |   |   |-ImplicitCastExpr 0x556a6dd6bb68 <col:7> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x556a6dd6bb28 <col:7> 'int' lvalue Var 0x556a6dd6b810 'x' 'int'
    |   |   `-ImplicitCastExpr 0x556a6dd6bb80 <col:11> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x556a6dd6bb48 <col:11> 'int' lvalue Var 0x556a6dd6b890 'y' 'int'
    |   `-IfStmt 0x556a6dd6bd20 <line:19:3, line:21:3>
    |     |-BinaryOperator 0x556a6dd6bc30 <line:19:7, col:12> 'int' '>='
    |     | |-ImplicitCastExpr 0x556a6dd6bc18 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x556a6dd6bbd8 <col:7> 'int' lvalue Var 0x556a6dd6b890 'y' 'int'
    |     | `-IntegerLiteral 0x556a6dd6bbf8 <col:12> 'int' 0
    |     `-CompoundStmt 0x556a6dd6bd08 <col:15, line:21:3>
    |       `-BinaryOperator 0x556a6dd6bce8 <line:20:4, col:12> 'int' '='
    |         |-DeclRefExpr 0x556a6dd6bc50 <col:4> 'int' lvalue Var 0x556a6dd6b890 'y' 'int'
    |         `-BinaryOperator 0x556a6dd6bcc8 <col:8, col:12> 'int' '-'
    |           |-ImplicitCastExpr 0x556a6dd6bcb0 <col:8> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x556a6dd6bc70 <col:8> 'int' lvalue Var 0x556a6dd6b890 'y' 'int'
    |           `-IntegerLiteral 0x556a6dd6bc90 <col:12> 'int' 1
    `-ReturnStmt 0x556a6dd6bd90 <line:23:2, col:9>
      `-IntegerLiteral 0x556a6dd6bd70 <col:9> 'int' 0
