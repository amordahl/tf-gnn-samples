TranslationUnitDecl 0x564c7d812f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x564c7d813848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x564c7d813520 '__int128'
|-TypedefDecl 0x564c7d8138b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x564c7d813540 'unsigned __int128'
|-TypedefDecl 0x564c7d813bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x564c7d813990 'struct __NSConstantString_tag'
|   `-Record 0x564c7d813910 '__NSConstantString_tag'
|-TypedefDecl 0x564c7d813c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x564c7d813c20 'char *'
|   `-BuiltinType 0x564c7d813020 'char'
|-TypedefDecl 0x564c7d852b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x564c7d813f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x564c7d813d40 'struct __va_list_tag'
|     `-Record 0x564c7d813cc0 '__va_list_tag'
|-FunctionDecl 0x564c7d852ca0 <pthread-wmm/mix035_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x564c7d852bd0 <col:31> col:34 'int'
|-FunctionDecl 0x564c7d852e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x564c7d852f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x564c7d8530d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x564c7d853048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x564c7d853308 <col:40, col:99>
|   |-IfStmt 0x564c7d8532d8 <col:42, col:88>
|   | |-UnaryOperator 0x564c7d8531b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x564c7d8531a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x564c7d853180 <col:47> 'int' lvalue ParmVar 0x564c7d853048 'expression' 'int'
|   | `-CompoundStmt 0x564c7d8532c0 <col:59, col:88>
|   |   `-LabelStmt 0x564c7d8532a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x564c7d853238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x564c7d853220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x564c7d8531d0 <col:68> 'void () __attribute__((noreturn))' Function 0x564c7d852f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x564c7d8532f0 <col:89>
|   `-ReturnStmt 0x564c7d8532f8 <col:91>
|-FunctionDecl 0x564c7d853350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x564c7d853410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x564c7d853790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564c7d8534c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x564c7d853548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x564c7d8535c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564c7d853648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564c7d853850 <line:10:22>
|-FunctionDecl 0x564c7d8798a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564c7d8538c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x564c7d853940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x564c7d8539c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564c7d853a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564c7d879960 <line:13:22>
|-FunctionDecl 0x564c7d879c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564c7d8799d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x564c7d879a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x564c7d879ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x564c7d879cc8 <line:15:22>
|-TypedefDecl 0x564c7d879d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x564c7d8130e0 'unsigned char'
|-TypedefDecl 0x564c7d879da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x564c7d813100 'unsigned short'
|-TypedefDecl 0x564c7d879e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x564c7d813120 'unsigned int'
|-TypedefDecl 0x564c7d879e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-TypedefDecl 0x564c7d879ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x564c7d813040 'signed char'
|-TypedefDecl 0x564c7d879f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x564c7d8130e0 'unsigned char'
|-TypedefDecl 0x564c7d879fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x564c7d813060 'short'
|-TypedefDecl 0x564c7d87a048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x564c7d813100 'unsigned short'
|-TypedefDecl 0x564c7d87a0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x564c7d813080 'int'
|-TypedefDecl 0x564c7d87a128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x564c7d813120 'unsigned int'
|-TypedefDecl 0x564c7d87a198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d87a208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-TypedefDecl 0x564c7d87a278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d87a2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-TypedefDecl 0x564c7d87a358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-TypedefDecl 0x564c7d87a3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x564c7d813120 'unsigned int'
|-TypedefDecl 0x564c7d87a438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x564c7d813120 'unsigned int'
|-TypedefDecl 0x564c7d87a4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-TypedefDecl 0x564c7d87a518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-TypedefDecl 0x564c7d87a588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x564c7d813120 'unsigned int'
|-TypedefDecl 0x564c7d87a5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-TypedefDecl 0x564c7d87a668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d87a6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d87a748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x564c7d813080 'int'
|-RecordDecl 0x564c7d87a7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x564c7d87a918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x564c7d87a9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x564c7d87a970 'struct __fsid_t' sugar
|   `-RecordType 0x564c7d87a820 '__fsid_t'
|     `-Record 0x564c7d87a7a0 ''
|-TypedefDecl 0x564c7d87aa58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d87aac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-TypedefDecl 0x564c7d87ab38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-TypedefDecl 0x564c7d87aba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x564c7d813120 'unsigned int'
|-TypedefDecl 0x564c7d87ac18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d87ac88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x564c7d813120 'unsigned int'
|-TypedefDecl 0x564c7d87acf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d87ad68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x564c7d813080 'int'
|-TypedefDecl 0x564c7d87add8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x564c7d813080 'int'
|-TypedefDecl 0x564c7d87ae48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x564c7d813080 'int'
|-TypedefDecl 0x564c7d87aeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x564c7d8137a0 'void *'
|   `-BuiltinType 0x564c7d812fe0 'void'
|-TypedefDecl 0x564c7d87af28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d87af98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d87b008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d87b078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-TypedefDecl 0x564c7d87b0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-TypedefDecl 0x564c7d87b158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-TypedefDecl 0x564c7d87b1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-TypedefDecl 0x564c7d87b238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d87b2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d87b318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d87b388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-TypedefDecl 0x564c7d87b418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x564c7d87b3e0 '__off64_t' sugar
|   |-Typedef 0x564c7d87a6d8 '__off64_t'
|   `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d87b510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x564c7d87b4d0 '__quad_t *'
|   `-TypedefType 0x564c7d87b470 '__quad_t' sugar
|     |-Typedef 0x564c7d87a278 '__quad_t'
|     `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d87b580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x564c7d813c20 'char *'
|   `-BuiltinType 0x564c7d813020 'char'
|-TypedefDecl 0x564c7d87b5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d87b660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x564c7d813120 'unsigned int'
|-FunctionDecl 0x564c7d87b7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x564c7d87b6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x564c7d87bae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x564c7d87bad8 <line:72:3, col:34>
|     `-CallExpr 0x564c7d87ba98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x564c7d87ba80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564c7d87ba10 <col:10> '<builtin fn type>' Function 0x564c7d87b880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x564c7d87bac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564c7d87ba30 <col:29> 'unsigned int' lvalue ParmVar 0x564c7d87b6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x564c7d87b880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x564c7d87b920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x564c7d87b990 <col:10> Implicit
| `-ConstAttr 0x564c7d87b9e8 <col:10> Implicit
|-FunctionDecl 0x564c7d87bc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x564c7d87bb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x564c7d87bf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x564c7d87bf48 <line:77:3, col:34>
|     `-CallExpr 0x564c7d87bf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x564c7d87bef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564c7d87be78 <col:10> '<builtin fn type>' Function 0x564c7d87bce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x564c7d87bf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x564c7d87be98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x564c7d87bb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x564c7d87bce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x564c7d87bd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x564c7d87bdf8 <col:10> Implicit
| `-ConstAttr 0x564c7d87be50 <col:10> Implicit
|-TypedefDecl 0x564c7d87bf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-TypedefDecl 0x564c7d87c018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x564c7d87bfe0 '__time_t' sugar
|   |-Typedef 0x564c7d87ac18 '__time_t'
|   `-BuiltinType 0x564c7d8130a0 'long'
|-RecordDecl 0x564c7d87c070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x564c7d87c128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x564c7d87c1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x564c7d87c248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x564c7d87c210 '__pid_t' sugar
|   |-Typedef 0x564c7d87a748 '__pid_t'
|   `-BuiltinType 0x564c7d813080 'int'
|-RecordDecl 0x564c7d87c2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x564c7d87c360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x564c7d87c3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x564c7d87c470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x564c7d87c4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-RecordDecl 0x564c7d87c530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x564c7d87c7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x564c7d87e8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x564c7d87c810 'struct cpu_set_t' sugar
|   `-RecordType 0x564c7d87c5b0 'cpu_set_t'
|     `-Record 0x564c7d87c530 ''
|-FunctionDecl 0x564c7d87eb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x564c7d87e958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564c7d87ea60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x564c7d87ec38 <line:107:19>
|-FunctionDecl 0x564c7d87ee10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x564c7d87eca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x564c7d87eeb8 <col:69>
|-FunctionDecl 0x564c7d87f030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x564c7d87ef20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x564c7d87f0d8 <col:64>
|-FunctionDecl 0x564c7d87f398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x564c7d87f140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564c7d87f278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564c7d87f448 <line:113:22>
|-FunctionDecl 0x564c7d87f6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x564c7d87f4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564c7d87f5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x564c7d87f778 <col:88>
|-FunctionDecl 0x564c7d87fa98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564c7d87f7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564c7d87f8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x564c7d87f950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564c7d87fb50 <col:62>
|-FunctionDecl 0x564c7d87fcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x564c7d87fbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x564c7d87fd70 <col:63>
|-FunctionDecl 0x564c7d87fe98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x564c7d87ff38 <col:47>
|-FunctionDecl 0x564c7d880040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x564c7d87ffa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564c7d8800e8 <col:69>
|-FunctionDecl 0x564c7d8801f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x564c7d880158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564c7d880298 <col:69>
|-FunctionDecl 0x564c7d880558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564c7d880300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564c7d880438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x564c7d880608 <col:88>
|-TypedefDecl 0x564c7d880698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x564c7d880660 '__clock_t' sugar
|   |-Typedef 0x564c7d87aa58 '__clock_t'
|   `-BuiltinType 0x564c7d8130a0 'long'
|-TypedefDecl 0x564c7d880728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x564c7d8806f0 '__clockid_t' sugar
|   |-Typedef 0x564c7d87ae48 '__clockid_t'
|   `-BuiltinType 0x564c7d813080 'int'
|-TypedefDecl 0x564c7d8807b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x564c7d880780 '__timer_t' sugar
|   |-Typedef 0x564c7d87aeb8 '__timer_t'
|   `-PointerType 0x564c7d8137a0 'void *'
|     `-BuiltinType 0x564c7d812fe0 'void'
|-RecordDecl 0x564c7d880810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x564c7d8808e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x564c7d880950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x564c7d8809b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x564c7d880a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x564c7d880a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x564c7d880af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x564c7d880b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x564c7d880bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x564c7d880c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x564c7d880c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x564c7d880cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x564c7d880d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x564c7d880e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x564c7d880e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x564c7d880f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x564c7d881100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x564c7d8811a0 <col:45>
|-FunctionDecl 0x564c7d881380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x564c7d881270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x564c7d881428 <col:54>
|-FunctionDecl 0x564c7d881628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x564c7d881490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x564c7d881508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x564c7d8816d8 <line:157:22>
| `-ConstAttr 0x564c7d881730 <col:63>
|-FunctionDecl 0x564c7d882560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564c7d881828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564c7d882608 <col:56>
|-FunctionDecl 0x564c7d8829b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x564c7d882678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x564c7d8826f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564c7d882770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x564c7d882868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x564c7d882a70 <col:54>
|-RecordDecl 0x564c7d882ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x564c7d882b78 parent 0x564c7d812f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x564c7d882dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x564c7d882e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x564c7d882ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x564c7d882f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x564c7d883038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x564c7d883158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x564c7d883100 'struct __locale_struct *'
|   `-ElaboratedType 0x564c7d883090 'struct __locale_struct' sugar
|     `-RecordType 0x564c7d882b50 'struct __locale_struct'
|       `-Record 0x564c7d882ac8 '__locale_struct'
|-TypedefDecl 0x564c7d883208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x564c7d8831d0 '__locale_t' sugar
|   |-Typedef 0x564c7d883158 '__locale_t'
|   `-PointerType 0x564c7d883100 'struct __locale_struct *'
|     `-ElaboratedType 0x564c7d883090 'struct __locale_struct' sugar
|       `-RecordType 0x564c7d882b50 'struct __locale_struct'
|         `-Record 0x564c7d882ac8 '__locale_struct'
|-FunctionDecl 0x564c7d883610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x564c7d883278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x564c7d8832f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564c7d883370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x564c7d883400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564c7d883478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x564c7d8836d8 <col:40>
|-FunctionDecl 0x564c7d8838c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564c7d8837a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x564c7d883970 <col:66>
|-FunctionDecl 0x564c7d883a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564c7d8839d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x564c7d883b28 <col:69>
|-FunctionDecl 0x564c7d883d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564c7d883b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564c7d883c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564c7d883e08 <col:52>
|-FunctionDecl 0x564c7d883fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564c7d883e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564c7d883f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564c7d884060 <col:55>
|-FunctionDecl 0x564c7d8841f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x564c7d8840e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x564c7d8842a0 <col:62>
|-FunctionDecl 0x564c7d884418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x564c7d884308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x564c7d8844c0 <col:60>
|-FunctionDecl 0x564c7d884718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564c7d884578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564c7d8845f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x564c7d8847c8 <col:44>
|-FunctionDecl 0x564c7d8849d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564c7d884830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564c7d8848b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x564c7d884a88 <col:49>
|-VarDecl 0x564c7d884b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x564c7d884c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x564c7d884c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x564c7d884d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x564c7d884e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x564c7d884f20 <col:42>
|-VarDecl 0x564c7d884f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x564c7d885010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x564c7d885198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x564c7d885088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x564c7d885240 <col:57>
|-FunctionDecl 0x564c7d885350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564c7d8852c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564c7d8853f8 <col:56>
|-FunctionDecl 0x564c7d886540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564c7d885478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x564c7d8865e8 <col:59>
|-FunctionDecl 0x564c7d8866f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x564c7d886658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x564c7d886798 <col:48>
| `-ConstAttr 0x564c7d8867f0 <col:89>
|-FunctionDecl 0x564c7d886a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564c7d8868a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x564c7d886938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x564c7d886cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564c7d886b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564c7d886bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x564c7d886d68 <col:88>
|-FunctionDecl 0x564c7d886f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564c7d886dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564c7d886e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x564c7d886fb0 <col:88>
|-FunctionDecl 0x564c7d8871c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x564c7d887018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564c7d8870a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x564c7d887278 <line:208:22>
|-FunctionDecl 0x564c7d8875e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564c7d8872e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564c7d887360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x564c7d8873f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x564c7d887480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x564c7d8878e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x564c7d8876e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x564c7d8877c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x564c7d887998 <col:85>
|-FunctionDecl 0x564c7d887d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x564c7d887a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564c7d887b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x564c7d887c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x564c7d887e40 <col:52>
|-FunctionDecl 0x564c7d887fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x564c7d887ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564c7d888060 <col:61>
|-FunctionDecl 0x564c7d888560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x564c7d8880c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564c7d888148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x564c7d888278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x564c7d888368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x564c7d888620 <col:62>
|-FunctionDecl 0x564c7d888838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x564c7d888688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564c7d888718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x564c7d8888e8 <line:221:22>
|-FunctionDecl 0x564c7d8889e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x564c7d888950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564c7d888a90 <col:65>
|-TypedefDecl 0x564c7d888b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x564c7d813140 'unsigned long'
|-RecordDecl 0x564c7d888b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x564c7d888ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564c7d888d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564c7d888db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x564c7d888d60 'union pthread_attr_t' sugar
|   `-RecordType 0x564c7d888be0 'union pthread_attr_t'
|     `-Record 0x564c7d888b58 'pthread_attr_t'
|-RecordDecl 0x564c7d888e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x564c7d888f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x564c7d889000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x564c7d8890b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x564c7d889050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x564c7d888e90 'struct __pthread_internal_list'
|     `-Record 0x564c7d888e10 '__pthread_internal_list'
|-RecordDecl 0x564c7d889120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x564c7d8891c8 parent 0x564c7d812f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x564c7d8892a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564c7d889308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x564c7d889370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x564c7d8893d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x564c7d889440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x564c7d8894a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x564c7d88d580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x564c7d88d630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x564c7d88d720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x564c7d88d788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564c7d88d910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x564c7d88d8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x564c7d8891a0 'pthread_mutex_t'
|     `-Record 0x564c7d889120 ''
|-RecordDecl 0x564c7d88d980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x564c7d88dac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564c7d88db28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564c7d88dbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x564c7d88db80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x564c7d88da00 'pthread_mutexattr_t'
|     `-Record 0x564c7d88d980 ''
|-RecordDecl 0x564c7d88dc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x564c7d88dcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x564c7d88ddc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564c7d88de28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x564c7d88de90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x564c7d88def8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x564c7d88df60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x564c7d88dfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x564c7d88e030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x564c7d88e098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x564c7d88e150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix035_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix035_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x564c7d88e240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x564c7d88e2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x564c7d88e3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x564c7d88e380 'union pthread_cond_t' sugar
|   `-RecordType 0x564c7d88dcd0 'pthread_cond_t'
|     `-Record 0x564c7d88dc50 ''
|-RecordDecl 0x564c7d88e450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x564c7d88e590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564c7d88e5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564c7d88e6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x564c7d88e650 'union pthread_condattr_t' sugar
|   `-RecordType 0x564c7d88e4d0 'pthread_condattr_t'
|     `-Record 0x564c7d88e450 ''
|-TypedefDecl 0x564c7d88e738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x564c7d813120 'unsigned int'
|-TypedefDecl 0x564c7d88e7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x564c7d813080 'int'
|-RecordDecl 0x564c7d88e800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x564c7d88e8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x564c7d88e970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564c7d88e9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x564c7d88ea40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x564c7d88eaa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x564c7d88eb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x564c7d88eb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x564c7d88ebe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x564c7d88ec48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x564c7d88ecb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x564c7d88ed18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x564c7d88ed80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x564c7d88ee30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix035_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix035_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x564c7d88eed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564c7d88ef40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564c7d88f090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x564c7d88f030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x564c7d88e880 'pthread_rwlock_t'
|     `-Record 0x564c7d88e800 ''
|-RecordDecl 0x564c7d88f100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x564c7d88f240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x564c7d88f2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564c7d88f360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x564c7d88f300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x564c7d88f180 'pthread_rwlockattr_t'
|     `-Record 0x564c7d88f100 ''
|-TypedefDecl 0x564c7d88f3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x564c7d813084 'volatile int' volatile
|   `-BuiltinType 0x564c7d813080 'int'
|-RecordDecl 0x564c7d88f440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x564c7d8915b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x564c7d891618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564c7d8916d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x564c7d891670 'union pthread_barrier_t' sugar
|   `-RecordType 0x564c7d88f4c0 'pthread_barrier_t'
|     `-Record 0x564c7d88f440 ''
|-RecordDecl 0x564c7d891740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x564c7d891840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564c7d8918a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564c7d891960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x564c7d891900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x564c7d8917c0 'pthread_barrierattr_t'
|     `-Record 0x564c7d891740 ''
|-TypedefDecl 0x564c7d891a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x564c7d891a10 'long [8]' 8 
|   `-BuiltinType 0x564c7d8130a0 'long'
|-EnumDecl 0x564c7d891ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x564c7d891b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x564c7d891be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x564c7d891c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x564c7d891d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x564c7d891d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x564c7d891da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x564c7d891df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x564c7d891e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x564c7d891e68 <col:26> 'int'
| |   `-DeclRefExpr 0x564c7d891e48 <col:26> 'int' EnumConstant 0x564c7d891d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x564c7d891f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x564c7d891ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x564c7d891ed0 <col:29> 'int' EnumConstant 0x564c7d891d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x564c7d891f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x564c7d891f78 <col:30> 'int'
| |   `-DeclRefExpr 0x564c7d891f58 <col:30> 'int' EnumConstant 0x564c7d891da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x564c7d892018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x564c7d892000 <col:27> 'int'
|     `-DeclRefExpr 0x564c7d891fe0 <col:27> 'int' EnumConstant 0x564c7d891e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x564c7d892068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x564c7d892138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x564c7d8921c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x564c7d8921a8 <col:30> 'int'
| |   `-DeclRefExpr 0x564c7d892188 <col:30> 'int' EnumConstant 0x564c7d892138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x564c7d892210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x564c7d892298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x564c7d892280 <col:29> 'int'
|     `-DeclRefExpr 0x564c7d892260 <col:29> 'int' EnumConstant 0x564c7d892210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x564c7d8922e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x564c7d8923b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x564c7d892408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x564c7d892458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x564c7d8924a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x564c7d8925c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x564c7d892610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x564c7d892660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x564c7d8926e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x564c7d8926d0 <col:31> 'int'
|     `-DeclRefExpr 0x564c7d8926b0 <col:31> 'int' EnumConstant 0x564c7d8925c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x564c7d892738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x564c7d892808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x564c7d892858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x564c7d8928a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x564c7d892978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x564c7d8929c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x564c7d892a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x564c7d892ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x564c7d892b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x564c7d892b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x564c7d892dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x564c7d892e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x564c7d892e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x564c7d892fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x564c7d893008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x564c7d8930d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x564c7d893128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x564c7d893178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x564c7d893248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x564c7d893298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x564c7d8938f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x564c7d893390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x564c7d8934a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564c7d8936e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x564c7d893760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x564c7d8939b8 <col:47>
| |-NonNullAttr 0x564c7d893a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x564c7d893a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x564c7d893b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x564c7d893aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x564c7d893dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x564c7d893c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x564c7d893ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x564c7d893f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x564c7d893e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x564c7d894040 <col:60>
|-FunctionDecl 0x564c7d894190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x564c7d894230 <col:54>
| `-ConstAttr 0x564c7d894288 <col:95>
|-FunctionDecl 0x564c7d894458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x564c7d8942c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564c7d894338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x564c7d894508 <line:394:19>
| `-ConstAttr 0x564c7d894560 <col:60>
|-FunctionDecl 0x564c7d894f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564c7d894e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564c7d895010 <col:71>
| `-NonNullAttr 0x564c7d895068 <col:112, col:126> 1
|-FunctionDecl 0x564c7d895170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564c7d8950b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564c7d895218 <line:397:22>
| `-NonNullAttr 0x564c7d895270 <col:63, col:77> 1
|-FunctionDecl 0x564c7d895498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x564c7d8952b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564c7d895338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x564c7d895548 <line:400:22>
| `-NonNullAttr 0x564c7d8955a0 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d8957a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564c7d8955e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564c7d895668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x564c7d895858 <line:403:22>
| `-NonNullAttr 0x564c7d8958b0 <col:63, col:77> 1
|-FunctionDecl 0x564c7d895b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x564c7d8958f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564c7d8959a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x564c7d895bb8 <line:406:22>
| `-NonNullAttr 0x564c7d895c10 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d896e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564c7d895c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564c7d895cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564c7d896ef8 <line:409:22>
| `-NonNullAttr 0x564c7d896f50 <col:63, col:77> 1
|-FunctionDecl 0x564c7d897188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564c7d896f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564c7d897028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564c7d897238 <line:412:22>
| `-NonNullAttr 0x564c7d897290 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d8974c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564c7d8972d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x564c7d897368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x564c7d897578 <col:37>
| `-NonNullAttr 0x564c7d8975d0 <col:78, col:95> 1 2
|-FunctionDecl 0x564c7d8977b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564c7d897618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564c7d897698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x564c7d897868 <line:418:22>
| `-NonNullAttr 0x564c7d8978c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d897a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564c7d897908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564c7d897988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x564c7d897af8 <line:420:22>
| `-NonNullAttr 0x564c7d897b50 <col:63, col:77> 1
|-FunctionDecl 0x564c7d897cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564c7d897b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564c7d897c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x564c7d897da8 <line:423:22>
| `-NonNullAttr 0x564c7d898e30 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d898fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564c7d898e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564c7d898ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x564c7d899068 <line:426:22>
| `-NonNullAttr 0x564c7d8990c0 <col:63, col:77> 1
|-FunctionDecl 0x564c7d899268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564c7d899108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564c7d899188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x564c7d899318 <line:429:22>
| `-NonNullAttr 0x564c7d899370 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d8994f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564c7d8993b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564c7d899438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x564c7d8995a8 <line:431:22>
| `-NonNullAttr 0x564c7d899600 <col:63, col:77> 1
|-FunctionDecl 0x564c7d899828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x564c7d899648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564c7d8996c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x564c7d8998d8 <line:434:22>
| |-NonNullAttr 0x564c7d899930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x564c7d899968 <col:100> "" ""
|-FunctionDecl 0x564c7d899b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x564c7d8999b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564c7d899a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x564c7d899c28 <line:437:22>
| |-NonNullAttr 0x564c7d899c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x564c7d899cb8 <col:97> "" ""
|-FunctionDecl 0x564c7d899eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564c7d899d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564c7d899d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564c7d899f68 <line:440:22>
| `-NonNullAttr 0x564c7d899fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d89a140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564c7d89a008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564c7d89a080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564c7d89a1f0 <line:443:22>
| `-NonNullAttr 0x564c7d89a248 <col:63, col:77> 1
|-FunctionDecl 0x564c7d89a538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564c7d89a298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564c7d89a318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x564c7d89a390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564c7d89a5f0 <line:447:22>
| `-NonNullAttr 0x564c7d89a648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x564c7d89a8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x564c7d89a6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564c7d89a720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x564c7d89a798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564c7d89a9b0 <col:43>
| `-NonNullAttr 0x564c7d89aa08 <col:84, col:98> 1
|-FunctionDecl 0x564c7d89acc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564c7d89aa58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564c7d89aad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x564c7d89ab68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x564c7d89ad80 <line:452:22>
| `-NonNullAttr 0x564c7d89add8 <col:63, col:77> 3
|-FunctionDecl 0x564c7d89b0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564c7d89ae50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564c7d89aed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x564c7d89af60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564c7d89b1a0 <line:456:22>
| `-NonNullAttr 0x564c7d89b1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x564c7d89b3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x564c7d89b248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564c7d89b2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x564c7d89b498 <line:458:22>
|-FunctionDecl 0x564c7d89b868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x564c7d89b560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x564c7d89b700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x564c7d89b918 <col:52, col:69> 1 2
|-FunctionDecl 0x564c7d89bac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x564c7d89b9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x564c7d89ba20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x564c7d89bca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x564c7d89bb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x564c7d89bc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x564c7d89be60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x564c7d89bd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x564c7d89bfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x564c7d89c040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x564c7d89c0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x564c7d89c1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x564c7d89c240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x564c7d89c410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix035_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x564c7d89c508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x564c7d89c5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x564c7d89c560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x564c7d89c0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x564c7d89c040 ''
| `-AlignedAttr 0x564c7d89c618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x564c7d89c690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x564c7d89c7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x564c7d89c858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x564c7d89c8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x564c7d89c928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x564c7d89cb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564c7d89ca20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564c7d89cc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564c7d89cbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564c7d89ce70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564c7d89cd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x564c7d89cf18 <line:487:22>
|-RecordDecl 0x564c7d89cf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x564c7d89d288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x564c7d89d0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x564c7d89d168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x564c7d89d338 <col:86>
| `-ReturnsTwiceAttr 0x564c7d89d390 <col:12> Implicit
|-FunctionDecl 0x564c7d89d6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564c7d89d460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x564c7d89d570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x564c7d89d768 <line:493:22>
| `-NonNullAttr 0x564c7d89d7c0 <col:63, col:77> 1
|-FunctionDecl 0x564c7d89d938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564c7d89d808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564c7d89d9e0 <line:495:22>
| `-NonNullAttr 0x564c7d89da38 <col:63, col:77> 1
|-FunctionDecl 0x564c7d89db40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564c7d89da88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564c7d89dbe8 <line:497:22>
| `-NonNullAttr 0x564c7d89dc40 <col:52, col:66> 1
|-FunctionDecl 0x564c7d89dd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564c7d89dc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564c7d89dde8 <line:499:22>
| `-NonNullAttr 0x564c7d89de40 <col:52, col:66> 1
|-FunctionDecl 0x564c7d89e088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564c7d89de98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564c7d89df28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564c7d89e138 <col:36>
| `-NonNullAttr 0x564c7d89e190 <col:66, col:83> 1 2
|-FunctionDecl 0x564c7d89e290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564c7d89e1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564c7d89e338 <line:504:22>
| `-NonNullAttr 0x564c7d89e390 <col:52, col:66> 1
|-FunctionDecl 0x564c7d89e628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564c7d89e440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564c7d89e4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564c7d89e6d8 <line:508:22>
| `-NonNullAttr 0x564c7d89e730 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d89e9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x564c7d89e778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564c7d89e7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x564c7d89e878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x564c7d89eab0 <line:512:22>
| `-NonNullAttr 0x564c7d89eb08 <col:63, col:80> 1 3
|-FunctionDecl 0x564c7d89ec10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564c7d89eb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564c7d89ecb8 <line:514:22>
| `-NonNullAttr 0x564c7d89ed10 <col:63, col:77> 1
|-FunctionDecl 0x564c7d89ef38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564c7d89edc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564c7d89efe0 <line:516:22>
| `-NonNullAttr 0x564c7d89f038 <col:63, col:77> 1
|-FunctionDecl 0x564c7d89f140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564c7d89f088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564c7d89f1e8 <line:518:22>
| `-NonNullAttr 0x564c7d89f240 <col:63, col:77> 1
|-FunctionDecl 0x564c7d89f468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564c7d89f288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564c7d89f308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x564c7d89f518 <line:522:22>
| `-NonNullAttr 0x564c7d89f570 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d89f778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564c7d89f5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564c7d89f638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x564c7d89f828 <line:525:22>
| `-NonNullAttr 0x564c7d89f880 <col:63, col:77> 1
|-FunctionDecl 0x564c7d89fa28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564c7d89f8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564c7d89f948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x564c7d89fad8 <line:528:22>
| `-NonNullAttr 0x564c7d89fb30 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d89fcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564c7d89fb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564c7d89fbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x564c7d89fd68 <line:530:22>
| `-NonNullAttr 0x564c7d89fdc0 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a0f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564c7d89fe08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564c7d8a0eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x564c7d8a1040 <line:534:22>
| `-NonNullAttr 0x564c7d8a1098 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d8a1228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564c7d8a10e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564c7d8a1168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x564c7d8a12d8 <line:537:22>
| `-NonNullAttr 0x564c7d8a1330 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a14d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564c7d8a1378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564c7d8a13f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564c7d8a1588 <line:541:22>
| `-NonNullAttr 0x564c7d8a15e0 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d8a1768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564c7d8a1628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564c7d8a16a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x564c7d8a1818 <line:544:22>
| `-NonNullAttr 0x564c7d8a1870 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a1a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x564c7d8a18b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x564c7d8a1938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x564c7d8a1b08 <line:547:22>
| `-NonNullAttr 0x564c7d8a1b60 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d8a1ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564c7d8a1ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564c7d8a1c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x564c7d8a1d98 <line:550:22>
| `-NonNullAttr 0x564c7d8a1df0 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a3168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x564c7d8a2f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564c7d8a3020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x564c7d8a3218 <col:29>
| `-NonNullAttr 0x564c7d8a3270 <col:70, col:84> 1
|-FunctionDecl 0x564c7d8a33e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564c7d8a32b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564c7d8a3490 <line:555:22>
| `-NonNullAttr 0x564c7d8a34e8 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a35f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564c7d8a3538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564c7d8a3698 <line:557:22>
| `-NonNullAttr 0x564c7d8a36f0 <col:52, col:66> 1
|-FunctionDecl 0x564c7d8a37f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564c7d8a3738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564c7d8a3898 <line:559:19>
| `-NonNullAttr 0x564c7d8a38f0 <col:49, col:63> 1
|-FunctionDecl 0x564c7d8a3b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564c7d8a3938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564c7d8a39c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564c7d8a3bd8 <col:39>
| `-NonNullAttr 0x564c7d8a3c30 <col:69, col:86> 1 2
|-FunctionDecl 0x564c7d8a3d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564c7d8a3c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564c7d8a3dd8 <line:564:22>
| `-NonNullAttr 0x564c7d8a3e30 <col:52, col:66> 1
|-FunctionDecl 0x564c7d8a3f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564c7d8a3ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564c7d8a4040 <line:566:22>
| `-NonNullAttr 0x564c7d8a4098 <col:52, col:66> 1
|-FunctionDecl 0x564c7d8a4258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564c7d8a40e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564c7d8a4178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564c7d8a4308 <col:39>
| `-NonNullAttr 0x564c7d8a4360 <col:69, col:86> 1 2
|-FunctionDecl 0x564c7d8a4460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564c7d8a43a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564c7d8a4508 <line:571:22>
| `-NonNullAttr 0x564c7d8a4560 <col:52, col:66> 1
|-FunctionDecl 0x564c7d8a4748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564c7d8a4610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564c7d8a47f0 <line:573:22>
| `-NonNullAttr 0x564c7d8a4848 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a4950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564c7d8a4898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564c7d8a49f8 <line:575:22>
| `-NonNullAttr 0x564c7d8a4a50 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a4c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564c7d8a4a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564c7d8a4b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x564c7d8a4d28 <line:579:22>
| `-NonNullAttr 0x564c7d8a4d80 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d8a4fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564c7d8a4dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564c7d8a4e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x564c7d8a5058 <line:582:22>
| `-NonNullAttr 0x564c7d8a50b0 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a5258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564c7d8a50f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564c7d8a5178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x564c7d8a5308 <line:586:22>
| `-NonNullAttr 0x564c7d8a5360 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d8a54e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564c7d8a53a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564c7d8a5428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x564c7d8a5598 <col:36>
| `-NonNullAttr 0x564c7d8a55f0 <col:77, col:91> 1
|-FunctionDecl 0x564c7d8a5928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x564c7d8a56d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564c7d8a57e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x564c7d8a59d8 <line:591:22>
| `-NonNullAttr 0x564c7d8a5a30 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a5ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564c7d8a5a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564c7d8a5c50 <line:593:22>
| `-NonNullAttr 0x564c7d8a5ca8 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a5db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564c7d8a5cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564c7d8a5e58 <line:595:22>
| `-NonNullAttr 0x564c7d8a5eb0 <col:52, col:66> 1
|-FunctionDecl 0x564c7d8a5fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564c7d8a5f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564c7d8a6070 <line:597:22>
| `-NonNullAttr 0x564c7d8a60c8 <col:52, col:66> 1
|-FunctionDecl 0x564c7d8a62f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x564c7d8a6118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564c7d8a6190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x564c7d8a63a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x564c7d8a66d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564c7d8a6428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564c7d8a64a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564c7d8a6530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x564c7d8a6790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x564c7d8a69a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564c7d8a6870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564c7d8a6a50 <line:606:22>
| `-NonNullAttr 0x564c7d8a6aa8 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a6bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564c7d8a6af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564c7d8a6c58 <line:608:22>
| `-NonNullAttr 0x564c7d8a6cb0 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a6f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564c7d8a6cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564c7d8a6d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x564c7d8a6fc0 <line:612:22>
| `-NonNullAttr 0x564c7d8a7018 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d8a7228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x564c7d8a7068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564c7d8a70e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x564c7d8a72d8 <col:37>
| `-NonNullAttr 0x564c7d8a7330 <col:78, col:92> 1
|-FunctionDecl 0x564c7d8a7548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x564c7d8a7378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564c7d8a7420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x564c7d8a75f8 <line:618:22>
| `-NonNullAttr 0x564c7d8a7650 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d8a7818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x564c7d8a7698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564c7d8a7710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x564c7d8a78c8 <line:621:22>
| `-NonNullAttr 0x564c7d8a7920 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a7bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x564c7d8a7a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x564c7d8a7a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x564c7d8a7c78 <line:623:22>
| `-NonNullAttr 0x564c7d8a7cd0 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a7e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564c7d8a7d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564c7d8a7f20 <line:625:22>
| `-NonNullAttr 0x564c7d8a7f78 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a8080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564c7d8a7fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564c7d8a8128 <line:627:22>
| `-NonNullAttr 0x564c7d8a8180 <col:52, col:66> 1
|-FunctionDecl 0x564c7d8a8280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564c7d8a81c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564c7d8a8328 <line:629:22>
| `-NonNullAttr 0x564c7d8a8380 <col:52, col:66> 1
|-FunctionDecl 0x564c7d8a8480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564c7d8a83c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564c7d8a8528 <line:631:22>
| `-NonNullAttr 0x564c7d8a8580 <col:52, col:66> 1
|-FunctionDecl 0x564c7d8a8958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x564c7d8a8660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x564c7d8a8770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564c7d8a87f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x564c7d8a8a10 <line:635:22>
| `-NonNullAttr 0x564c7d8a8a68 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a8be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564c7d8a8ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564c7d8a8c90 <line:637:22>
| `-NonNullAttr 0x564c7d8a8ce8 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a8df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564c7d8a8d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564c7d8a8e98 <line:639:22>
| `-NonNullAttr 0x564c7d8a8ef0 <col:52, col:66> 1
|-FunctionDecl 0x564c7d8a90e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564c7d8a8fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564c7d8a9190 <line:641:22>
| `-NonNullAttr 0x564c7d8a91e8 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a92f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564c7d8a9238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564c7d8a9398 <line:643:22>
| `-NonNullAttr 0x564c7d8a93f0 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a9618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564c7d8a9438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564c7d8a94b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x564c7d8a96c8 <line:647:22>
| `-NonNullAttr 0x564c7d8a9720 <col:63, col:80> 1 2
|-FunctionDecl 0x564c7d8a9928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x564c7d8a9768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x564c7d8a97e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x564c7d8a99d8 <line:650:22>
| `-NonNullAttr 0x564c7d8a9a30 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a9d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x564c7d8a9b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x564c7d8a9c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x564c7d8a9e28 <line:653:22>
| `-NonNullAttr 0x564c7d8a9e80 <col:63, col:77> 1
|-FunctionDecl 0x564c7d8a9fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x564c7d8a9ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564c7d8aa090 <col:69>
|-FunctionDecl 0x564c7d8aa208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x564c7d8aa0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564c7d8aa2b0 <col:72>
|-FunctionDecl 0x564c7d8aa4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x564c7d8aa318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x564c7d8aa3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x564c7d8aa598 <col:44>
|-FunctionDecl 0x564c7d8aa7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x564c7d8aa600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564c7d8aa678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x564c7d8aa868 <line:660:22>
| `-NonNullAttr 0x564c7d8aa8c0 <col:63, col:77> 2
|-FunctionDecl 0x564c7d8aad08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x564c7d8aa9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x564c7d8aaab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x564c7d8aabc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x564c7d8aadc0 <col:47>
|-FunctionDecl 0x564c7d8abf60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x564c7d8aae30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564c7d8ac0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x564c7d8ac020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564c7d8ac210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x564c7d8ac178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564c7d8ac2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x564c7d8ac398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x564c7d8ac458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x564c7d8ac510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x564c7d8ac590 prev 0x564c7d8ac510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x564c7d8ac5f8 <col:24> 'int' 0
|-VarDecl 0x564c7d8ac630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x564c7d8ac6b0 prev 0x564c7d8ac630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x564c7d8ac718 <col:27> 'int' 0
|-VarDecl 0x564c7d8ac750 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x564c7d8ac7d0 prev 0x564c7d8ac750 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x564c7d8ac838 <col:27> 'int' 0
|-VarDecl 0x564c7d8ac870 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x564c7d8ac8f0 prev 0x564c7d8ac870 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x564c7d8ac958 <col:27> 'int' 0
|-VarDecl 0x564c7d8ac990 <line:679:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x564c7d8aca10 prev 0x564c7d8ac990 <line:680:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x564c7d8aca78 <col:27> 'int' 0
|-VarDecl 0x564c7d8acab0 <line:681:1, col:5> col:5 used a 'int'
|-VarDecl 0x564c7d8acb30 prev 0x564c7d8acab0 <line:682:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x564c7d8acb98 <col:9> 'int' 0
|-VarDecl 0x564c7d8acbc8 <line:683:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x564c7d8acc48 <line:684:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x564c7d8accc0 <line:685:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x564c7d8acd38 <line:686:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x564c7d8acdb0 <line:687:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x564c7d8ace28 <line:688:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x564c7d8acea0 <line:689:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x564c7d8acf70 <line:690:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x564c7d8acfe8 <line:691:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x564c7d8ad060 <line:692:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x564c7d8ad0d8 <line:693:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x564c7d8ad158 <line:694:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x564c7d8ad1d8 <line:695:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x564c7d8ad250 <line:696:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x564c7d8ad2d0 <line:697:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x564c7d8ad348 <line:698:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x564c7d8ad3c0 <line:699:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x564c7d8ad438 <line:700:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x564c7d8ad4b8 <line:701:1, col:5> col:5 used x 'int'
|-VarDecl 0x564c7d8ad538 prev 0x564c7d8ad4b8 <line:702:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x564c7d8ad5a0 <col:9> 'int' 0
|-VarDecl 0x564c7d8ad5d8 <line:703:1, col:5> col:5 used y 'int'
|-VarDecl 0x564c7d8ad658 prev 0x564c7d8ad5d8 <line:704:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x564c7d8ad6c0 <col:9> 'int' 0
|-VarDecl 0x564c7d8ad6f8 <line:705:1, col:5> col:5 used z 'int'
|-VarDecl 0x564c7d8ad778 prev 0x564c7d8ad6f8 <line:706:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x564c7d8ad7e0 <col:9> 'int' 0
|-VarDecl 0x564c7d8ad810 <line:707:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x564c7d8ad888 <line:708:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x564c7d8ad9a0 prev 0x564c7d8abf60 <line:709:1, line:737:1> line:709:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x564c7d8ad908 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564c7d8af208 <line:710:1, line:737:1>
|   |-CallExpr 0x564c7d8adab8 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564c7d8adaa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8ada48 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564c7d8adb30 <line:712:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564c7d8adad8 <col:3> 'int' lvalue Var 0x564c7d8ad2d0 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x564c7d8adb18 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564c7d8adaf8 <col:15> 'int' lvalue Var 0x564c7d8ad1d8 'a$w_buff0' 'int'
|   |-BinaryOperator 0x564c7d8adb90 <line:713:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564c7d8adb50 <col:3> 'int' lvalue Var 0x564c7d8ad1d8 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x564c7d8adb70 <col:15> 'int' 1
|   |-BinaryOperator 0x564c7d8adc08 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8adbb0 <col:3> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8adbf0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564c7d8adbd0 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564c7d8adca0 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8adc28 <col:3> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x564c7d8adc78 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564c7d8adc48 <col:27> 'int' 1
|   |-CallExpr 0x564c7d8ade28 <line:716:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x564c7d8ade10 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x564c7d8adcc0 <col:3> 'void (int)' Function 0x564c7d8530d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x564c7d8addc0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x564c7d8adda0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x564c7d8add80 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x564c7d8add38 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x564c7d8add20 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x564c7d8adce0 <col:23> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x564c7d8add68 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x564c7d8add50 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x564c7d8add00 <col:41> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564c7d8adea8 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8ade50 <col:3> '_Bool' lvalue Var 0x564c7d8acea0 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8ade90 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564c7d8ade70 <col:20> '_Bool' lvalue Var 0x564c7d8accc0 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x564c7d8adf20 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8adec8 <col:3> '_Bool' lvalue Var 0x564c7d8acf70 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8adf08 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564c7d8adee8 <col:20> '_Bool' lvalue Var 0x564c7d8acd38 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564c7d8adfb8 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8adf40 <col:3> '_Bool' lvalue Var 0x564c7d8acfe8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8adfa0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564c7d8adf80 <col:20> '_Bool' lvalue Var 0x564c7d8acdb0 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564c7d8ae030 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8adfd8 <col:3> '_Bool' lvalue Var 0x564c7d8ad060 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8ae018 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564c7d8adff8 <col:20> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564c7d8ae0c8 <line:721:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8ae050 <col:3> '_Bool' lvalue Var 0x564c7d8acd38 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x564c7d8ae0a0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564c7d8ae070 <col:27> 'int' 1
|   |-CallExpr 0x564c7d8ae120 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564c7d8ae108 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8ae0e8 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564c7d8ae178 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564c7d8ae160 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8ae140 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564c7d8ae1f0 <line:724:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564c7d8ae198 <col:3> 'int' lvalue Var 0x564c7d8ac6b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x564c7d8ae1d8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564c7d8ae1b8 <col:25> 'int' lvalue Var 0x564c7d8ad538 'x' 'int'
|   |-CallExpr 0x564c7d8ae248 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564c7d8ae230 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8ae210 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564c7d8ae2a0 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564c7d8ae288 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8ae268 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564c7d8ae588 <line:727:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564c7d8ae2c0 <col:3> 'int' lvalue Var 0x564c7d8acb30 'a' 'int'
|   | `-ConditionalOperator 0x564c7d8ae558 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564c7d8ae380 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564c7d8ae338 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564c7d8ae320 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564c7d8ae2e0 <col:7> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564c7d8ae368 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564c7d8ae350 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564c7d8ae300 <col:25> '_Bool' lvalue Var 0x564c7d8acd38 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x564c7d8ae540 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564c7d8ae3a0 <col:42> 'int' lvalue Var 0x564c7d8ad1d8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564c7d8ae520 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564c7d8ae4f0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564c7d8ae460 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564c7d8ae418 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564c7d8ae400 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564c7d8ae3c0 <col:55> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564c7d8ae448 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564c7d8ae430 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564c7d8ae3e0 <col:73> '_Bool' lvalue Var 0x564c7d8acf70 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x564c7d8ae4c0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564c7d8ae480 <col:90> 'int' lvalue Var 0x564c7d8ad2d0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564c7d8ae4d8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564c7d8ae4a0 <col:102> 'int' lvalue Var 0x564c7d8acb30 'a' 'int'
|   |-BinaryOperator 0x564c7d8ae790 <line:728:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8ae5a8 <col:3> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8ae778 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564c7d8ae748 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564c7d8ae668 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564c7d8ae620 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564c7d8ae608 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564c7d8ae5c8 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564c7d8ae650 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564c7d8ae638 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564c7d8ae5e8 <col:38> '_Bool' lvalue Var 0x564c7d8acd38 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564c7d8ae700 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564c7d8ae6b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564c7d8ae688 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564c7d8ae730 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564c7d8ae718 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564c7d8ae6e0 <col:66> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564c7d8aea78 <line:729:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8ae7b0 <col:3> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8aea60 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564c7d8aea30 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564c7d8ae950 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564c7d8ae870 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564c7d8ae828 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564c7d8ae810 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564c7d8ae7d0 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564c7d8ae858 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564c7d8ae840 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564c7d8ae7f0 <col:38> '_Bool' lvalue Var 0x564c7d8acd38 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564c7d8ae930 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564c7d8ae8e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564c7d8ae8d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564c7d8ae890 <col:56> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564c7d8ae918 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564c7d8ae900 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564c7d8ae8b0 <col:74> '_Bool' lvalue Var 0x564c7d8acf70 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564c7d8ae9e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564c7d8ae9a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564c7d8ae970 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564c7d8aea18 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564c7d8aea00 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564c7d8ae9c8 <col:102> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564c7d8aec80 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8aea98 <col:3> '_Bool' lvalue Var 0x564c7d8acd38 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8aec68 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564c7d8aec38 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564c7d8aeb58 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564c7d8aeb10 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564c7d8aeaf8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564c7d8aeab8 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564c7d8aeb40 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564c7d8aeb28 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564c7d8aead8 <col:38> '_Bool' lvalue Var 0x564c7d8acd38 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564c7d8aebf0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564c7d8aeba8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564c7d8aeb78 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564c7d8aec20 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564c7d8aec08 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564c7d8aebd0 <col:66> '_Bool' lvalue Var 0x564c7d8acd38 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564c7d8aef90 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8aeca0 <col:3> '_Bool' lvalue Var 0x564c7d8acf70 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8aef50 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564c7d8aef20 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564c7d8aee40 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564c7d8aed60 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564c7d8aed18 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564c7d8aed00 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564c7d8aecc0 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564c7d8aed48 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564c7d8aed30 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564c7d8aece0 <col:38> '_Bool' lvalue Var 0x564c7d8acd38 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564c7d8aee20 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564c7d8aedd8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564c7d8aedc0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564c7d8aed80 <col:56> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564c7d8aee08 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564c7d8aedf0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564c7d8aeda0 <col:74> '_Bool' lvalue Var 0x564c7d8acf70 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564c7d8aeed8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564c7d8aee90 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564c7d8aee60 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564c7d8aef08 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564c7d8aeef0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564c7d8aeeb8 <col:102> '_Bool' lvalue Var 0x564c7d8acf70 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x564c7d8aefe8 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564c7d8aefd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8aefb0 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564c7d8af040 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564c7d8af028 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8af008 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564c7d8af0f8 <line:734:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564c7d8af060 <col:3> 'int' lvalue Var 0x564c7d8ac590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564c7d8af0d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564c7d8af0c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564c7d8af080 <col:22> 'int' lvalue Var 0x564c7d8ac590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564c7d8af0a0 <col:41> 'int' 1
|   |-CallExpr 0x564c7d8af150 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564c7d8af138 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8af118 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564c7d8af1f8 <line:736:3, col:36>
|     `-CallExpr 0x564c7d8af1d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564c7d8af1c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564c7d8af170 <col:10> 'void *(void)' Function 0x564c7d852e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564c7d8af398 prev 0x564c7d8ac0b8 <line:738:1, line:757:1> line:738:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x564c7d8af300 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564c7d8b05d8 <line:739:1, line:757:1>
|   |-CallExpr 0x564c7d8af478 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564c7d8af460 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8af440 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564c7d8af4d8 <line:741:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564c7d8af498 <col:3> 'int' lvalue Var 0x564c7d8ad538 'x' 'int'
|   | `-IntegerLiteral 0x564c7d8af4b8 <col:7> 'int' 1
|   |-CallExpr 0x564c7d8af530 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564c7d8af518 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8af4f8 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564c7d8af588 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564c7d8af570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8af550 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564c7d8af600 <line:744:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564c7d8af5a8 <col:3> 'int' lvalue Var 0x564c7d8ac7d0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x564c7d8af5e8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564c7d8af5c8 <col:25> 'int' lvalue Var 0x564c7d8ad658 'y' 'int'
|   |-CallExpr 0x564c7d8af658 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564c7d8af640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8af620 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564c7d8af6b0 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564c7d8af698 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8af678 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564c7d8af998 <line:747:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564c7d8af6d0 <col:3> 'int' lvalue Var 0x564c7d8acb30 'a' 'int'
|   | `-ConditionalOperator 0x564c7d8af968 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564c7d8af790 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564c7d8af748 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564c7d8af730 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564c7d8af6f0 <col:7> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564c7d8af778 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564c7d8af760 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564c7d8af710 <col:25> '_Bool' lvalue Var 0x564c7d8acdb0 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564c7d8af950 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564c7d8af7b0 <col:42> 'int' lvalue Var 0x564c7d8ad1d8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564c7d8af930 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564c7d8af900 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564c7d8af870 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564c7d8af828 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564c7d8af810 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564c7d8af7d0 <col:55> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564c7d8af858 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564c7d8af840 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564c7d8af7f0 <col:73> '_Bool' lvalue Var 0x564c7d8acfe8 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564c7d8af8d0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564c7d8af890 <col:90> 'int' lvalue Var 0x564c7d8ad2d0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564c7d8af8e8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564c7d8af8b0 <col:102> 'int' lvalue Var 0x564c7d8acb30 'a' 'int'
|   |-BinaryOperator 0x564c7d8afba0 <line:748:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8af9b8 <col:3> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8afb88 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564c7d8afb58 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564c7d8afa78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564c7d8afa30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564c7d8afa18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564c7d8af9d8 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564c7d8afa60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564c7d8afa48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564c7d8af9f8 <col:38> '_Bool' lvalue Var 0x564c7d8acdb0 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564c7d8afb10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564c7d8afac8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564c7d8afa98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564c7d8afb40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564c7d8afb28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564c7d8afaf0 <col:66> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564c7d8afe88 <line:749:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8afbc0 <col:3> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8afe70 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564c7d8afe40 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564c7d8afd60 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564c7d8afc80 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564c7d8afc38 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564c7d8afc20 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564c7d8afbe0 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564c7d8afc68 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564c7d8afc50 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564c7d8afc00 <col:38> '_Bool' lvalue Var 0x564c7d8acdb0 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564c7d8afd40 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564c7d8afcf8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564c7d8afce0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564c7d8afca0 <col:56> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564c7d8afd28 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564c7d8afd10 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564c7d8afcc0 <col:74> '_Bool' lvalue Var 0x564c7d8acfe8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564c7d8afdf8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564c7d8afdb0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564c7d8afd80 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564c7d8afe28 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564c7d8afe10 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564c7d8afdd8 <col:102> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564c7d8b00a8 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8afea8 <col:3> '_Bool' lvalue Var 0x564c7d8acdb0 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8b0090 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564c7d8b0060 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564c7d8aff68 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564c7d8aff20 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564c7d8aff08 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564c7d8afec8 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564c7d8aff50 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564c7d8aff38 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564c7d8afee8 <col:38> '_Bool' lvalue Var 0x564c7d8acdb0 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564c7d8b0018 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564c7d8affd0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564c7d8affa0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564c7d8b0048 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564c7d8b0030 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564c7d8afff8 <col:66> '_Bool' lvalue Var 0x564c7d8acdb0 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564c7d8b0390 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8b00c8 <col:3> '_Bool' lvalue Var 0x564c7d8acfe8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8b0378 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564c7d8b0348 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564c7d8b0268 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564c7d8b0188 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564c7d8b0140 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564c7d8b0128 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564c7d8b00e8 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564c7d8b0170 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564c7d8b0158 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564c7d8b0108 <col:38> '_Bool' lvalue Var 0x564c7d8acdb0 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564c7d8b0248 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564c7d8b0200 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564c7d8b01e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564c7d8b01a8 <col:56> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564c7d8b0230 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564c7d8b0218 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564c7d8b01c8 <col:74> '_Bool' lvalue Var 0x564c7d8acfe8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564c7d8b0300 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564c7d8b02b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564c7d8b0288 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564c7d8b0330 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564c7d8b0318 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564c7d8b02e0 <col:102> '_Bool' lvalue Var 0x564c7d8acfe8 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x564c7d8b03e8 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564c7d8b03d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8b03b0 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564c7d8b0440 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564c7d8b0428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8b0408 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564c7d8b04f8 <line:754:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564c7d8b0460 <col:3> 'int' lvalue Var 0x564c7d8ac590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564c7d8b04d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564c7d8b04c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564c7d8b0480 <col:22> 'int' lvalue Var 0x564c7d8ac590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564c7d8b04a0 <col:41> 'int' 1
|   |-CallExpr 0x564c7d8b0550 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564c7d8b0538 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8b0518 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564c7d8b05c8 <line:756:3, col:36>
|     `-CallExpr 0x564c7d8b05a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564c7d8b0590 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564c7d8b0570 <col:10> 'void *(void)' Function 0x564c7d852e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564c7d8b0720 prev 0x564c7d8ac210 <line:758:1, line:796:1> line:758:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x564c7d8b0688 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564c7d8b4558 <line:759:1, line:796:1>
|   |-CallExpr 0x564c7d8b0800 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564c7d8b07e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8b07c8 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564c7d8b0860 <line:761:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564c7d8b0820 <col:3> 'int' lvalue Var 0x564c7d8ad658 'y' 'int'
|   | `-IntegerLiteral 0x564c7d8b0840 <col:7> 'int' 1
|   |-CallExpr 0x564c7d8b08b8 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564c7d8b08a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8b0880 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564c7d8b0910 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564c7d8b08f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8b08d8 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564c7d8b0970 <line:764:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564c7d8b0930 <col:3> 'int' lvalue Var 0x564c7d8ad778 'z' 'int'
|   | `-IntegerLiteral 0x564c7d8b0950 <col:7> 'int' 1
|   |-CallExpr 0x564c7d8b09c8 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564c7d8b09b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8b0990 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564c7d8b0a20 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564c7d8b0a08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8b09e8 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564c7d8b0a98 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564c7d8b0a40 <col:3> 'int' lvalue Var 0x564c7d8ac8f0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x564c7d8b0a80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564c7d8b0a60 <col:25> 'int' lvalue Var 0x564c7d8ad778 'z' 'int'
|   |-CallExpr 0x564c7d8b0af0 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564c7d8b0ad8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8b0ab8 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564c7d8b0b48 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564c7d8b0b30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8b0b10 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564c7d8b0bf8 <line:770:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8b0b68 <col:3> '_Bool' lvalue Var 0x564c7d8ad810 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8b0be0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564c7d8b0bc0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564c7d8b0ba8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564c7d8b0b88 <col:19> 'void *(void)' Function 0x564c7d852e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564c7d8b0ca8 <line:771:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8b0c18 <col:3> '_Bool' lvalue Var 0x564c7d8ad888 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8b0c90 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564c7d8b0c70 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564c7d8b0c58 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564c7d8b0c38 <col:19> 'void *(void)' Function 0x564c7d852e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564c7d8b0d20 <line:772:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8b0cc8 <col:3> '_Bool' lvalue Var 0x564c7d8acbc8 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8b0d08 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564c7d8b0ce8 <col:21> '_Bool' lvalue Var 0x564c7d8ad888 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x564c7d8b0d98 <line:773:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564c7d8b0d40 <col:3> 'int' lvalue Var 0x564c7d8acc48 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x564c7d8b0d80 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564c7d8b0d60 <col:15> 'int' lvalue Var 0x564c7d8acb30 'a' 'int'
|   |-BinaryOperator 0x564c7d8b11f0 <line:774:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x564c7d8b0db8 <col:3> 'int' lvalue Var 0x564c7d8acb30 'a' 'int'
|   | `-ConditionalOperator 0x564c7d8b11c0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x564c7d8b0fe8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x564c7d8b0ee8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x564c7d8b0e10 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x564c7d8b0df8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x564c7d8b0dd8 <col:8> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x564c7d8b0ec8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x564c7d8b0e60 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x564c7d8b0e48 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x564c7d8b0e28 <col:27> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x564c7d8b0eb0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x564c7d8b0e98 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x564c7d8b0e78 <col:46> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x564c7d8b0fc8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x564c7d8b0f40 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x564c7d8b0f28 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x564c7d8b0f08 <col:65> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x564c7d8b0fb0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x564c7d8b0f78 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x564c7d8b0f58 <col:84> '_Bool' lvalue Var 0x564c7d8ad060 'a$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x564c7d8b11a8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564c7d8b1008 <col:101> 'int' lvalue Var 0x564c7d8acb30 'a' 'int'
|   |   `-ParenExpr 0x564c7d8b1188 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x564c7d8b1158 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x564c7d8b10c8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564c7d8b1080 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564c7d8b1068 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564c7d8b1028 <col:106> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564c7d8b10b0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564c7d8b1098 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564c7d8b1048 <col:124> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564c7d8b1128 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564c7d8b10e8 <col:141> 'int' lvalue Var 0x564c7d8ad1d8 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x564c7d8b1140 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564c7d8b1108 <col:153> 'int' lvalue Var 0x564c7d8ad2d0 'a$w_buff1' 'int'
|   |-BinaryOperator 0x564c7d8b1700 <line:775:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564c7d8b1210 <col:3> 'int' lvalue Var 0x564c7d8ad1d8 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x564c7d8b16d0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564c7d8b16a0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564c7d8b1688 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564c7d8b1230 <col:15> '_Bool' lvalue Var 0x564c7d8ad888 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564c7d8b16b8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564c7d8b1250 <col:31> 'int' lvalue Var 0x564c7d8ad1d8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564c7d8b1668 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564c7d8b1638 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564c7d8b1460 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564c7d8b1380 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564c7d8b12a8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564c7d8b1290 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564c7d8b1270 <col:45> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564c7d8b1360 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564c7d8b12f8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564c7d8b12e0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564c7d8b12c0 <col:64> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x564c7d8b1348 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564c7d8b1330 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564c7d8b1310 <col:83> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564c7d8b1440 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564c7d8b13d8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564c7d8b13c0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564c7d8b13a0 <col:102> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x564c7d8b1428 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564c7d8b1410 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564c7d8b13f0 <col:121> '_Bool' lvalue Var 0x564c7d8ad060 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564c7d8b1620 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564c7d8b1480 <col:138> 'int' lvalue Var 0x564c7d8ad1d8 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x564c7d8b1600 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564c7d8b15d0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564c7d8b1540 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564c7d8b14f8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564c7d8b14e0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564c7d8b14a0 <col:151> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564c7d8b1528 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564c7d8b1510 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564c7d8b14c0 <col:169> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x564c7d8b15a0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564c7d8b1560 <col:186> 'int' lvalue Var 0x564c7d8ad1d8 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x564c7d8b15b8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564c7d8b1580 <col:198> 'int' lvalue Var 0x564c7d8ad1d8 'a$w_buff0' 'int'
|   |-BinaryOperator 0x564c7d8b1c10 <line:776:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564c7d8b1720 <col:3> 'int' lvalue Var 0x564c7d8ad2d0 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x564c7d8b1be0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564c7d8b1bb0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564c7d8b1b98 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564c7d8b1740 <col:15> '_Bool' lvalue Var 0x564c7d8ad888 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564c7d8b1bc8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564c7d8b1760 <col:31> 'int' lvalue Var 0x564c7d8ad2d0 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x564c7d8b1b78 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564c7d8b1b48 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564c7d8b1970 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564c7d8b1890 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564c7d8b17b8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564c7d8b17a0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564c7d8b1780 <col:45> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564c7d8b1870 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564c7d8b1808 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564c7d8b17f0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564c7d8b17d0 <col:64> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x564c7d8b1858 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564c7d8b1840 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564c7d8b1820 <col:83> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564c7d8b1950 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564c7d8b18e8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564c7d8b18d0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564c7d8b18b0 <col:102> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x564c7d8b1938 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564c7d8b1920 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564c7d8b1900 <col:121> '_Bool' lvalue Var 0x564c7d8ad060 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564c7d8b1b30 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564c7d8b1990 <col:138> 'int' lvalue Var 0x564c7d8ad2d0 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x564c7d8b1b10 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564c7d8b1ae0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564c7d8b1a50 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564c7d8b1a08 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564c7d8b19f0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564c7d8b19b0 <col:151> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564c7d8b1a38 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564c7d8b1a20 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564c7d8b19d0 <col:169> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x564c7d8b1ab0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564c7d8b1a70 <col:186> 'int' lvalue Var 0x564c7d8ad2d0 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x564c7d8b1ac8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564c7d8b1a90 <col:198> 'int' lvalue Var 0x564c7d8ad2d0 'a$w_buff1' 'int'
|   |-BinaryOperator 0x564c7d8b21c8 <line:777:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8b1c30 <col:3> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8b21b0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564c7d8b2180 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564c7d8b2138 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564c7d8b2120 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564c7d8b1c50 <col:20> '_Bool' lvalue Var 0x564c7d8ad888 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564c7d8b2168 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564c7d8b2150 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564c7d8b1c70 <col:36> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x564c7d8b2100 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564c7d8b20d0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564c7d8b1e80 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564c7d8b1da0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564c7d8b1cc8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564c7d8b1cb0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564c7d8b1c90 <col:55> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564c7d8b1d80 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564c7d8b1d18 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564c7d8b1d00 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564c7d8b1ce0 <col:74> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x564c7d8b1d68 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564c7d8b1d50 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564c7d8b1d30 <col:93> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564c7d8b1e60 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564c7d8b1df8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564c7d8b1de0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564c7d8b1dc0 <col:112> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x564c7d8b1e48 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564c7d8b1e30 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564c7d8b1e10 <col:131> '_Bool' lvalue Var 0x564c7d8ad060 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x564c7d8b20b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564c7d8b20a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564c7d8b1ea0 <col:148> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x564c7d8b2080 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564c7d8b2050 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564c7d8b1f60 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564c7d8b1f18 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564c7d8b1f00 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564c7d8b1ec0 <col:166> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564c7d8b1f48 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564c7d8b1f30 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564c7d8b1ee0 <col:184> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x564c7d8b2008 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564c7d8b1fc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564c7d8b1f80 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564c7d8b2038 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564c7d8b2020 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564c7d8b1fe8 <col:212> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564c7d8b2790 <line:778:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8b21e8 <col:3> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8b2778 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564c7d8b2748 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564c7d8b2700 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564c7d8b26e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564c7d8b2208 <col:20> '_Bool' lvalue Var 0x564c7d8ad888 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564c7d8b2730 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564c7d8b2718 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564c7d8b2228 <col:36> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x564c7d8b26c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564c7d8b2698 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564c7d8b2438 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564c7d8b2358 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564c7d8b2280 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564c7d8b2268 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564c7d8b2248 <col:55> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564c7d8b2338 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564c7d8b22d0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564c7d8b22b8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564c7d8b2298 <col:74> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x564c7d8b2320 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564c7d8b2308 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564c7d8b22e8 <col:93> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564c7d8b2418 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564c7d8b23b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564c7d8b2398 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564c7d8b2378 <col:112> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x564c7d8b2400 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564c7d8b23e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564c7d8b23c8 <col:131> '_Bool' lvalue Var 0x564c7d8ad060 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x564c7d8b2680 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564c7d8b2668 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564c7d8b2458 <col:148> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x564c7d8b2648 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564c7d8b2618 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564c7d8b2518 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564c7d8b24d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564c7d8b24b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564c7d8b2478 <col:166> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564c7d8b2500 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564c7d8b24e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564c7d8b2498 <col:184> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x564c7d8b25e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564c7d8b2568 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564c7d8b2538 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564c7d8b2600 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564c7d8b25c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564c7d8b2590 <col:219> 'int' 0
|   |-BinaryOperator 0x564c7d8b2d38 <line:779:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8b27b0 <col:3> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8b2d20 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564c7d8b2cf0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564c7d8b2ca8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564c7d8b2c90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564c7d8b27d0 <col:20> '_Bool' lvalue Var 0x564c7d8ad888 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564c7d8b2cd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564c7d8b2cc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564c7d8b27f0 <col:36> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x564c7d8b2c70 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564c7d8b2c40 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564c7d8b2a00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564c7d8b2920 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564c7d8b2848 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564c7d8b2830 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564c7d8b2810 <col:55> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564c7d8b2900 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564c7d8b2898 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564c7d8b2880 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564c7d8b2860 <col:74> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x564c7d8b28e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564c7d8b28d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564c7d8b28b0 <col:93> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564c7d8b29e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564c7d8b2978 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564c7d8b2960 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564c7d8b2940 <col:112> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x564c7d8b29c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564c7d8b29b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564c7d8b2990 <col:131> '_Bool' lvalue Var 0x564c7d8ad060 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x564c7d8b2c28 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564c7d8b2c10 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564c7d8b2a20 <col:148> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x564c7d8b2bf0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564c7d8b2bc0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564c7d8b2ae0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564c7d8b2a98 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564c7d8b2a80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564c7d8b2a40 <col:166> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564c7d8b2ac8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564c7d8b2ab0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564c7d8b2a60 <col:184> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x564c7d8b2b78 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564c7d8b2b30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564c7d8b2b00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564c7d8b2ba8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564c7d8b2b90 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564c7d8b2b58 <col:212> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564c7d8b3328 <line:780:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8b2d58 <col:3> '_Bool' lvalue Var 0x564c7d8ad060 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8b3310 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564c7d8b32e0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564c7d8b3298 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564c7d8b3280 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564c7d8b2d78 <col:20> '_Bool' lvalue Var 0x564c7d8ad888 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564c7d8b32c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564c7d8b32b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564c7d8b2d98 <col:36> '_Bool' lvalue Var 0x564c7d8ad060 'a$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x564c7d8b3260 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564c7d8b3230 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564c7d8b2fd0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564c7d8b2ec8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564c7d8b2df0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564c7d8b2dd8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564c7d8b2db8 <col:55> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564c7d8b2ea8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564c7d8b2e40 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564c7d8b2e28 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564c7d8b2e08 <col:74> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x564c7d8b2e90 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564c7d8b2e78 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564c7d8b2e58 <col:93> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564c7d8b2f88 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564c7d8b2f20 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564c7d8b2f08 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564c7d8b2ee8 <col:112> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x564c7d8b2f70 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564c7d8b2f58 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564c7d8b2f38 <col:131> '_Bool' lvalue Var 0x564c7d8ad060 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x564c7d8b3218 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564c7d8b3200 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564c7d8b2ff0 <col:148> '_Bool' lvalue Var 0x564c7d8ad060 'a$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x564c7d8b31e0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564c7d8b31b0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564c7d8b30b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564c7d8b3068 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564c7d8b3050 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564c7d8b3010 <col:166> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564c7d8b3098 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564c7d8b3080 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564c7d8b3030 <col:184> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x564c7d8b3180 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564c7d8b3100 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564c7d8b30d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564c7d8b3198 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564c7d8b3158 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564c7d8b3128 <col:219> 'int' 0
|   |-BinaryOperator 0x564c7d8b33a0 <line:781:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564c7d8b3348 <col:3> 'int' lvalue Var 0x564c7d8aca10 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x564c7d8b3388 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564c7d8b3368 <col:25> 'int' lvalue Var 0x564c7d8acb30 'a' 'int'
|   |-BinaryOperator 0x564c7d8b34d0 <line:782:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x564c7d8b33c0 <col:3> 'int' lvalue Var 0x564c7d8acb30 'a' 'int'
|   | `-ConditionalOperator 0x564c7d8b34a0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x564c7d8b3458 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564c7d8b3440 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564c7d8b33e0 <col:7> '_Bool' lvalue Var 0x564c7d8acbc8 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x564c7d8b3470 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564c7d8b3400 <col:25> 'int' lvalue Var 0x564c7d8acc48 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x564c7d8b3488 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x564c7d8b3420 <col:37> 'int' lvalue Var 0x564c7d8acb30 'a' 'int'
|   |-BinaryOperator 0x564c7d8b3568 <line:783:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8b34f0 <col:3> '_Bool' lvalue Var 0x564c7d8acbc8 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x564c7d8b3540 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564c7d8b3510 <col:28> 'int' 0
|   |-CallExpr 0x564c7d8b35c0 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564c7d8b35a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8b3588 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564c7d8b3618 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564c7d8b3600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8b35e0 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564c7d8b3900 <line:786:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564c7d8b3638 <col:3> 'int' lvalue Var 0x564c7d8acb30 'a' 'int'
|   | `-ConditionalOperator 0x564c7d8b38d0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564c7d8b36f8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564c7d8b36b0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564c7d8b3698 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564c7d8b3658 <col:7> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564c7d8b36e0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564c7d8b36c8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564c7d8b3678 <col:25> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x564c7d8b38b8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564c7d8b3718 <col:42> 'int' lvalue Var 0x564c7d8ad1d8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564c7d8b3898 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564c7d8b3868 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564c7d8b37d8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564c7d8b3790 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564c7d8b3778 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564c7d8b3738 <col:55> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564c7d8b37c0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564c7d8b37a8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564c7d8b3758 <col:73> '_Bool' lvalue Var 0x564c7d8ad060 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564c7d8b3838 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564c7d8b37f8 <col:90> 'int' lvalue Var 0x564c7d8ad2d0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564c7d8b3850 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564c7d8b3818 <col:102> 'int' lvalue Var 0x564c7d8acb30 'a' 'int'
|   |-BinaryOperator 0x564c7d8b3b08 <line:787:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8b3920 <col:3> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8b3af0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564c7d8b3ac0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564c7d8b39e0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564c7d8b3998 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564c7d8b3980 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564c7d8b3940 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564c7d8b39c8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564c7d8b39b0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564c7d8b3960 <col:38> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564c7d8b3a78 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564c7d8b3a30 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564c7d8b3a00 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564c7d8b3aa8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564c7d8b3a90 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564c7d8b3a58 <col:66> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564c7d8b3df0 <line:788:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8b3b28 <col:3> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8b3dd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564c7d8b3da8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564c7d8b3cc8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564c7d8b3be8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564c7d8b3ba0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564c7d8b3b88 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564c7d8b3b48 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564c7d8b3bd0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564c7d8b3bb8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564c7d8b3b68 <col:38> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564c7d8b3ca8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564c7d8b3c60 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564c7d8b3c48 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564c7d8b3c08 <col:56> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564c7d8b3c90 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564c7d8b3c78 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564c7d8b3c28 <col:74> '_Bool' lvalue Var 0x564c7d8ad060 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564c7d8b3d60 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564c7d8b3d18 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564c7d8b3ce8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564c7d8b3d90 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564c7d8b3d78 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564c7d8b3d40 <col:102> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564c7d8b4028 <line:789:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8b3e10 <col:3> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8b4010 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564c7d8b3fe0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564c7d8b3ed0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564c7d8b3e88 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564c7d8b3e70 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564c7d8b3e30 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564c7d8b3eb8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564c7d8b3ea0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564c7d8b3e50 <col:38> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564c7d8b3f68 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564c7d8b3f20 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564c7d8b3ef0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564c7d8b3f98 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564c7d8b3f80 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564c7d8b3f48 <col:66> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564c7d8b4310 <line:790:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564c7d8b4048 <col:3> '_Bool' lvalue Var 0x564c7d8ad060 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564c7d8b42f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564c7d8b42c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564c7d8b41e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564c7d8b4108 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564c7d8b40c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564c7d8b40a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564c7d8b4068 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564c7d8b40f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564c7d8b40d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564c7d8b4088 <col:38> '_Bool' lvalue Var 0x564c7d8ace28 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564c7d8b41c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564c7d8b4180 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564c7d8b4168 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564c7d8b4128 <col:56> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564c7d8b41b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564c7d8b4198 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564c7d8b4148 <col:74> '_Bool' lvalue Var 0x564c7d8ad060 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564c7d8b4280 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564c7d8b4238 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564c7d8b4208 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564c7d8b42b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564c7d8b4298 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564c7d8b4260 <col:102> '_Bool' lvalue Var 0x564c7d8ad060 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x564c7d8b4368 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564c7d8b4350 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8b4330 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564c7d8b43c0 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564c7d8b43a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8b4388 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564c7d8b4478 <line:793:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564c7d8b43e0 <col:3> 'int' lvalue Var 0x564c7d8ac590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564c7d8b4458 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564c7d8b4440 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564c7d8b4400 <col:22> 'int' lvalue Var 0x564c7d8ac590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564c7d8b4420 <col:41> 'int' 1
|   |-CallExpr 0x564c7d8b44d0 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564c7d8b44b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564c7d8b4498 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564c7d8b4548 <line:795:3, col:36>
|     `-CallExpr 0x564c7d8b4528 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564c7d8b4510 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564c7d8b44f0 <col:10> 'void *(void)' Function 0x564c7d852e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564c7d8b46a8 prev 0x564c7d8ac2d8 <line:797:1, line:799:1> line:797:6 fence 'void ()'
| `-CompoundStmt 0x564c7d8b4748 <line:798:1, line:799:1>
|-FunctionDecl 0x564c7d8b4778 prev 0x564c7d8ac398 <line:800:1, line:802:1> line:800:6 isync 'void ()'
| `-CompoundStmt 0x564c7d8b4818 <line:801:1, line:802:1>
|-FunctionDecl 0x564c7d8b4848 prev 0x564c7d8ac458 <line:803:1, line:805:1> line:803:6 lwfence 'void ()'
| `-CompoundStmt 0x564c7d8b48e8 <line:804:1, line:805:1>
`-FunctionDecl 0x564c7d8b4958 <line:806:1, line:830:1> line:806:5 main 'int ()'
  `-CompoundStmt 0x564c7d8b66a0 <line:807:1, line:830:1>
    |-DeclStmt 0x564c7d8b4a70 <line:808:3, col:17>
    | `-VarDecl 0x564c7d8b4a08 <col:3, col:13> col:13 used t927 'pthread_t':'unsigned long'
    |-CallExpr 0x564c7d8b4c78 <line:809:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564c7d8b4c60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564c7d8b4a88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564c7d8938f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564c7d8b4ac8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564c7d8b4aa8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564c7d8b4a08 't927' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564c7d8b4cb8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564c7d8b4b40 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564c7d8b4b18 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564c7d8b4ae0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564c7d8b4cd0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564c7d8b4b60 <col:38> 'void *(void *)' Function 0x564c7d8ad9a0 'P0' 'void *(void *)'
    | `-ParenExpr 0x564c7d8b4be0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564c7d8b4bb8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564c7d8b4b80 <col:51> 'int' 0
    |-DeclStmt 0x564c7d8b4d60 <line:810:3, col:17>
    | `-VarDecl 0x564c7d8b4cf8 <col:3, col:13> col:13 used t928 'pthread_t':'unsigned long'
    |-CallExpr 0x564c7d8b4f08 <line:811:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564c7d8b4ef0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564c7d8b4d78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564c7d8938f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564c7d8b4db8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564c7d8b4d98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564c7d8b4cf8 't928' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564c7d8b4f48 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564c7d8b4e30 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564c7d8b4e08 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564c7d8b4dd0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564c7d8b4f60 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564c7d8b4e50 <col:38> 'void *(void *)' Function 0x564c7d8af398 'P1' 'void *(void *)'
    | `-ParenExpr 0x564c7d8b4ed0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564c7d8b4ea8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564c7d8b4e70 <col:51> 'int' 0
    |-DeclStmt 0x564c7d8b5058 <line:812:3, col:17>
    | `-VarDecl 0x564c7d8b4ff0 <col:3, col:13> col:13 used t929 'pthread_t':'unsigned long'
    |-CallExpr 0x564c7d8b5200 <line:813:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564c7d8b51e8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564c7d8b5070 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564c7d8938f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564c7d8b50b0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564c7d8b5090 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564c7d8b4ff0 't929' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564c7d8b5240 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564c7d8b5128 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564c7d8b5100 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564c7d8b50c8 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564c7d8b5258 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564c7d8b5148 <col:38> 'void *(void *)' Function 0x564c7d8b0720 'P2' 'void *(void *)'
    | `-ParenExpr 0x564c7d8b51c8 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564c7d8b51a0 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564c7d8b5168 <col:51> 'int' 0
    |-CallExpr 0x564c7d8b52a8 <line:814:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564c7d8b5290 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564c7d8b5270 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564c7d8b5378 <line:815:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x564c7d8b52c8 <col:3> '_Bool' lvalue Var 0x564c7d8ad3c0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x564c7d8b5360 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x564c7d8b5340 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x564c7d8b5328 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x564c7d8b52e8 <col:21> 'int' lvalue Var 0x564c7d8ac590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x564c7d8b5308 <col:41> 'int' 3
    |-CallExpr 0x564c7d8b53d0 <line:816:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564c7d8b53b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564c7d8b5398 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564c7d8b5448 <line:817:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564c7d8b5430 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564c7d8b53f0 <col:3> 'void (int)' Function 0x564c7d852ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x564c7d8b5488 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564c7d8b5470 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564c7d8b5410 <col:21> '_Bool' lvalue Var 0x564c7d8ad3c0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x564c7d8b54d8 <line:818:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564c7d8b54c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564c7d8b54a0 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564c7d8b57c0 <line:819:3, col:103> 'int' '='
    | |-DeclRefExpr 0x564c7d8b54f8 <col:3> 'int' lvalue Var 0x564c7d8acb30 'a' 'int'
    | `-ConditionalOperator 0x564c7d8b5790 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x564c7d8b55b8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x564c7d8b5570 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x564c7d8b5558 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x564c7d8b5518 <col:7> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x564c7d8b55a0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x564c7d8b5588 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x564c7d8b5538 <col:25> '_Bool' lvalue Var 0x564c7d8accc0 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564c7d8b5778 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564c7d8b55d8 <col:42> 'int' lvalue Var 0x564c7d8ad1d8 'a$w_buff0' 'int'
    |   `-ParenExpr 0x564c7d8b5758 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x564c7d8b5728 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x564c7d8b5698 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564c7d8b5650 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564c7d8b5638 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564c7d8b55f8 <col:55> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564c7d8b5680 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564c7d8b5668 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564c7d8b5618 <col:73> '_Bool' lvalue Var 0x564c7d8acea0 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564c7d8b56f8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564c7d8b56b8 <col:90> 'int' lvalue Var 0x564c7d8ad2d0 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x564c7d8b5710 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564c7d8b56d8 <col:102> 'int' lvalue Var 0x564c7d8acb30 'a' 'int'
    |-BinaryOperator 0x564c7d8b59c8 <line:820:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564c7d8b57e0 <col:3> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564c7d8b59b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564c7d8b5980 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564c7d8b58a0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564c7d8b5858 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564c7d8b5840 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564c7d8b5800 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564c7d8b5888 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564c7d8b5870 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564c7d8b5820 <col:38> '_Bool' lvalue Var 0x564c7d8accc0 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564c7d8b5938 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564c7d8b58f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564c7d8b58c0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564c7d8b5968 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564c7d8b5950 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564c7d8b5918 <col:66> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564c7d8b5cb0 <line:821:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564c7d8b59e8 <col:3> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564c7d8b5c98 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564c7d8b5c68 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564c7d8b5b88 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564c7d8b5aa8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564c7d8b5a60 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564c7d8b5a48 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564c7d8b5a08 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564c7d8b5a90 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564c7d8b5a78 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564c7d8b5a28 <col:38> '_Bool' lvalue Var 0x564c7d8accc0 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564c7d8b5b68 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564c7d8b5b20 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564c7d8b5b08 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564c7d8b5ac8 <col:56> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564c7d8b5b50 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564c7d8b5b38 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564c7d8b5ae8 <col:74> '_Bool' lvalue Var 0x564c7d8acea0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564c7d8b5c20 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564c7d8b5bd8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564c7d8b5ba8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564c7d8b5c50 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564c7d8b5c38 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564c7d8b5c00 <col:102> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x564c7d8b5eb8 <line:822:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564c7d8b5cd0 <col:3> '_Bool' lvalue Var 0x564c7d8accc0 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564c7d8b5ea0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564c7d8b5e70 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564c7d8b5d90 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564c7d8b5d48 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564c7d8b5d30 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564c7d8b5cf0 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564c7d8b5d78 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564c7d8b5d60 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564c7d8b5d10 <col:38> '_Bool' lvalue Var 0x564c7d8accc0 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564c7d8b5e28 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564c7d8b5de0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564c7d8b5db0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564c7d8b5e58 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564c7d8b5e40 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564c7d8b5e08 <col:66> '_Bool' lvalue Var 0x564c7d8accc0 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564c7d8b61c8 <line:823:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564c7d8b5ed8 <col:3> '_Bool' lvalue Var 0x564c7d8acea0 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564c7d8b61b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564c7d8b6180 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564c7d8b60a0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564c7d8b5f98 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564c7d8b5f50 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564c7d8b5f38 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564c7d8b5ef8 <col:20> '_Bool' lvalue Var 0x564c7d8ad250 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564c7d8b5f80 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564c7d8b5f68 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564c7d8b5f18 <col:38> '_Bool' lvalue Var 0x564c7d8accc0 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564c7d8b6080 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564c7d8b6038 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564c7d8b6020 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564c7d8b5fb8 <col:56> '_Bool' lvalue Var 0x564c7d8ad348 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564c7d8b6068 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564c7d8b6050 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564c7d8b6000 <col:74> '_Bool' lvalue Var 0x564c7d8acea0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564c7d8b6138 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564c7d8b60f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564c7d8b60c0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564c7d8b6168 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564c7d8b6150 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564c7d8b6118 <col:102> '_Bool' lvalue Var 0x564c7d8acea0 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x564c7d8b6220 <line:824:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564c7d8b6208 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564c7d8b61e8 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564c7d8b6278 <line:825:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564c7d8b6260 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564c7d8b6240 <col:3> 'void ()' Function 0x564c7d853350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564c7d8b6548 <line:826:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x564c7d8b6298 <col:3> '_Bool' lvalue Var 0x564c7d8ad438 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x564c7d8b6530 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x564c7d8b6518 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x564c7d8b64f8 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x564c7d8b64d8 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x564c7d8b6440 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x564c7d8b63a8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x564c7d8b6310 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x564c7d8b62f8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x564c7d8b62b8 <col:23> 'int' lvalue Var 0x564c7d8ac6b0 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x564c7d8b62d8 <col:46> 'int' 0
    |         | | `-BinaryOperator 0x564c7d8b6388 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x564c7d8b6370 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x564c7d8b6330 <col:51> 'int' lvalue Var 0x564c7d8ac7d0 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x564c7d8b6350 <col:74> 'int' 0
    |         | `-BinaryOperator 0x564c7d8b6420 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x564c7d8b6408 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x564c7d8b63c8 <col:79> 'int' lvalue Var 0x564c7d8ac8f0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x564c7d8b63e8 <col:102> 'int' 1
    |         `-BinaryOperator 0x564c7d8b64b8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x564c7d8b64a0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564c7d8b6460 <col:107> 'int' lvalue Var 0x564c7d8aca10 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x564c7d8b6480 <col:130> 'int' 0
    |-CallExpr 0x564c7d8b65a0 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564c7d8b6588 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564c7d8b6568 <col:3> 'void ()' Function 0x564c7d853410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564c7d8b6618 <line:828:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564c7d8b6600 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564c7d8b65c0 <col:3> 'void (int)' Function 0x564c7d8530d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x564c7d8b6658 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564c7d8b6640 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564c7d8b65e0 <col:21> '_Bool' lvalue Var 0x564c7d8ad438 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x564c7d8b6690 <line:829:3, col:10>
      `-IntegerLiteral 0x564c7d8b6670 <col:10> 'int' 0
