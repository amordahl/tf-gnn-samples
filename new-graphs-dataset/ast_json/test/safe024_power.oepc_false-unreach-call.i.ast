TranslationUnitDecl 0x564d26872f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x564d26873848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x564d26873520 '__int128'
|-TypedefDecl 0x564d268738b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x564d26873540 'unsigned __int128'
|-TypedefDecl 0x564d26873bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x564d26873990 'struct __NSConstantString_tag'
|   `-Record 0x564d26873910 '__NSConstantString_tag'
|-TypedefDecl 0x564d26873c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x564d26873c20 'char *'
|   `-BuiltinType 0x564d26873020 'char'
|-TypedefDecl 0x564d268b2b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x564d26873f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x564d26873d40 'struct __va_list_tag'
|     `-Record 0x564d26873cc0 '__va_list_tag'
|-FunctionDecl 0x564d268b2c80 <pthread-wmm/safe024_power.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x564d268b2e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x564d268b2d80 <col:31> col:34 'int'
|-FunctionDecl 0x564d268b2fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x564d268b30f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x564d268b3238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x564d268b31a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x564d268b3468 <col:40, col:99>
|   |-IfStmt 0x564d268b3438 <col:42, col:88>
|   | |-UnaryOperator 0x564d268b3318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x564d268b3300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x564d268b32e0 <col:47> 'int' lvalue ParmVar 0x564d268b31a8 'expression' 'int'
|   | `-CompoundStmt 0x564d268b3420 <col:59, col:88>
|   |   `-LabelStmt 0x564d268b3408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x564d268b3398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x564d268b3380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x564d268b3330 <col:68> 'void () __attribute__((noreturn))' Function 0x564d268b30f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x564d268b3450 <col:89>
|   `-ReturnStmt 0x564d268b3458 <col:91>
|-FunctionDecl 0x564d268b34b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x564d268b3570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x564d268b38f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564d268b3628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x564d268b36a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x564d268b3728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564d268b37a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564d268b39b0 <line:11:22>
|-FunctionDecl 0x564d268d8f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564d268b3a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x564d268b3aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x564d268d8d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564d268d8dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564d268d8fd0 <line:14:22>
|-FunctionDecl 0x564d268d9280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564d268d9040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x564d268d90c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x564d268d9140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x564d268d9338 <line:16:22>
|-TypedefDecl 0x564d268d93a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x564d268730e0 'unsigned char'
|-TypedefDecl 0x564d268d9418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x564d26873100 'unsigned short'
|-TypedefDecl 0x564d268d9488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x564d26873120 'unsigned int'
|-TypedefDecl 0x564d268d94f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-TypedefDecl 0x564d268d9568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x564d26873040 'signed char'
|-TypedefDecl 0x564d268d95d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x564d268730e0 'unsigned char'
|-TypedefDecl 0x564d268d9648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x564d26873060 'short'
|-TypedefDecl 0x564d268d96b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x564d26873100 'unsigned short'
|-TypedefDecl 0x564d268d9728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x564d26873080 'int'
|-TypedefDecl 0x564d268d9798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x564d26873120 'unsigned int'
|-TypedefDecl 0x564d268d9808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268d9878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-TypedefDecl 0x564d268d98e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268d9958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-TypedefDecl 0x564d268d99c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-TypedefDecl 0x564d268d9a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x564d26873120 'unsigned int'
|-TypedefDecl 0x564d268d9aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x564d26873120 'unsigned int'
|-TypedefDecl 0x564d268d9b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-TypedefDecl 0x564d268d9b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-TypedefDecl 0x564d268d9bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x564d26873120 'unsigned int'
|-TypedefDecl 0x564d268d9c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-TypedefDecl 0x564d268d9cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268d9d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268d9dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x564d26873080 'int'
|-RecordDecl 0x564d268d9e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x564d268d9f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x564d268da030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x564d268d9fd0 'struct __fsid_t' sugar
|   `-RecordType 0x564d268d9eb0 '__fsid_t'
|     `-Record 0x564d268d9e30 ''
|-TypedefDecl 0x564d268da0b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268da128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-TypedefDecl 0x564d268da198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-TypedefDecl 0x564d268da208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x564d26873120 'unsigned int'
|-TypedefDecl 0x564d268da278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268da2e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x564d26873120 'unsigned int'
|-TypedefDecl 0x564d268da358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268da3c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x564d26873080 'int'
|-TypedefDecl 0x564d268da438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x564d26873080 'int'
|-TypedefDecl 0x564d268da4a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x564d26873080 'int'
|-TypedefDecl 0x564d268da518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x564d268737a0 'void *'
|   `-BuiltinType 0x564d26872fe0 'void'
|-TypedefDecl 0x564d268da588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268da5f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268da668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268da6d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-TypedefDecl 0x564d268da748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-TypedefDecl 0x564d268da7b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-TypedefDecl 0x564d268da828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-TypedefDecl 0x564d268da898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268da908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268da978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268da9e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-TypedefDecl 0x564d268daa78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x564d268daa40 '__off64_t' sugar
|   |-Typedef 0x564d268d9d68 '__off64_t'
|   `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268dab70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x564d268dab30 '__quad_t *'
|   `-TypedefType 0x564d268daad0 '__quad_t' sugar
|     |-Typedef 0x564d268d98e8 '__quad_t'
|     `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268dabe0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x564d26873c20 'char *'
|   `-BuiltinType 0x564d26873020 'char'
|-TypedefDecl 0x564d268dac50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268dacc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x564d26873120 'unsigned int'
|-FunctionDecl 0x564d268dae38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x564d268dad60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x564d268db148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x564d268db138 <line:73:3, col:34>
|     `-CallExpr 0x564d268db0f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x564d268db0e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564d268db070 <col:10> '<builtin fn type>' Function 0x564d268daee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x564d268db120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564d268db090 <col:29> 'unsigned int' lvalue ParmVar 0x564d268dad60 '__bsx' 'unsigned int'
|-FunctionDecl 0x564d268daee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x564d268daf80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x564d268daff0 <col:10> Implicit
| `-ConstAttr 0x564d268db048 <col:10> Implicit
|-FunctionDecl 0x564d268db2a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x564d268db198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x564d268db5b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x564d268db5a8 <line:78:3, col:34>
|     `-CallExpr 0x564d268db568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x564d268db550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564d268db4d8 <col:10> '<builtin fn type>' Function 0x564d268db348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x564d268db590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x564d268db4f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x564d268db198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x564d268db348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x564d268db3e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x564d268db458 <col:10> Implicit
| `-ConstAttr 0x564d268db4b0 <col:10> Implicit
|-TypedefDecl 0x564d268db5e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-TypedefDecl 0x564d268db678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x564d268db640 '__time_t' sugar
|   |-Typedef 0x564d268da278 '__time_t'
|   `-BuiltinType 0x564d268730a0 'long'
|-RecordDecl 0x564d268db6d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x564d268db788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x564d268db818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x564d268db8a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x564d268db870 '__pid_t' sugar
|   |-Typedef 0x564d268d9dd8 '__pid_t'
|   `-BuiltinType 0x564d26873080 'int'
|-RecordDecl 0x564d268db900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x564d268db9c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x564d268dba10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x564d268dbad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x564d268dbb38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-RecordDecl 0x564d268dbb90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x564d268dde70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x564d268ddf20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x564d268ddec0 'struct cpu_set_t' sugar
|   `-RecordType 0x564d268dbc10 'cpu_set_t'
|     `-Record 0x564d268dbb90 ''
|-FunctionDecl 0x564d268de1f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x564d268ddfc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564d268de0d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x564d268de2a8 <line:108:19>
|-FunctionDecl 0x564d268de480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x564d268de310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x564d268de528 <col:69>
|-FunctionDecl 0x564d268de6a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x564d268de590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x564d268de748 <col:64>
|-FunctionDecl 0x564d268dea08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x564d268de7b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564d268de8e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564d268deab8 <line:114:22>
|-FunctionDecl 0x564d268dee60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x564d268deb20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564d268dec18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x564d268def10 <col:88>
|-FunctionDecl 0x564d268df1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564d268def78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564d268deff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x564d268df088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564d268df280 <col:62>
|-FunctionDecl 0x564d268df3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x564d268df2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x564d268df4a0 <col:63>
|-FunctionDecl 0x564d268df5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x564d268df668 <col:47>
|-FunctionDecl 0x564d268df770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x564d268df6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564d268df818 <col:69>
|-FunctionDecl 0x564d268df920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x564d268df888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564d268df9c8 <col:69>
|-FunctionDecl 0x564d268dfc88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564d268dfa30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564d268dfb68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x564d268dfd38 <col:88>
|-TypedefDecl 0x564d268dfdc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x564d268dfd90 '__clock_t' sugar
|   |-Typedef 0x564d268da0b8 '__clock_t'
|   `-BuiltinType 0x564d268730a0 'long'
|-TypedefDecl 0x564d268e07e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x564d268dfe20 '__clockid_t' sugar
|   |-Typedef 0x564d268da4a8 '__clockid_t'
|   `-BuiltinType 0x564d26873080 'int'
|-TypedefDecl 0x564d268e0878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x564d268e0840 '__timer_t' sugar
|   |-Typedef 0x564d268da518 '__timer_t'
|   `-PointerType 0x564d268737a0 'void *'
|     `-BuiltinType 0x564d26872fe0 'void'
|-RecordDecl 0x564d268e08d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x564d268e0990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x564d268e09f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x564d268e0a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x564d268e0ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x564d268e0b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x564d268e0b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x564d268e0c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x564d268e0c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x564d268e0cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x564d268e0d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x564d268e0da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x564d268e0df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x564d268e0eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x564d268e0f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x564d268e0fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x564d268e11a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x564d268e1240 <col:45>
|-FunctionDecl 0x564d268e1420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x564d268e1310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x564d268e14c8 <col:54>
|-FunctionDecl 0x564d268e16c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x564d268e1530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x564d268e15a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x564d268e1778 <line:158:22>
| `-ConstAttr 0x564d268e2410 <col:63>
|-FunctionDecl 0x564d268e2610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564d268e2508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564d268e26b8 <col:56>
|-FunctionDecl 0x564d268e2a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x564d268e2728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x564d268e27a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564d268e2820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x564d268e2918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x564d268e2b20 <col:54>
|-RecordDecl 0x564d268e2b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x564d268e2c28 parent 0x564d26872f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x564d268e2e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x564d268e2f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x564d268e2f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x564d268e2ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x564d268e30e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x564d268e3208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x564d268e31b0 'struct __locale_struct *'
|   `-ElaboratedType 0x564d268e3140 'struct __locale_struct' sugar
|     `-RecordType 0x564d268e2c00 'struct __locale_struct'
|       `-Record 0x564d268e2b78 '__locale_struct'
|-TypedefDecl 0x564d268e32b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x564d268e3280 '__locale_t' sugar
|   |-Typedef 0x564d268e3208 '__locale_t'
|   `-PointerType 0x564d268e31b0 'struct __locale_struct *'
|     `-ElaboratedType 0x564d268e3140 'struct __locale_struct' sugar
|       `-RecordType 0x564d268e2c00 'struct __locale_struct'
|         `-Record 0x564d268e2b78 '__locale_struct'
|-FunctionDecl 0x564d268e36b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x564d268e3328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x564d268e33a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564d268e3438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x564d268e34c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564d268e3540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x564d268e3778 <col:40>
|-FunctionDecl 0x564d268e3968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564d268e3840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x564d268e3a10 <col:66>
|-FunctionDecl 0x564d268e3b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564d268e3a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x564d268e3bc8 <col:69>
|-FunctionDecl 0x564d268e3df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564d268e3c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564d268e3cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564d268e3ea8 <col:52>
|-FunctionDecl 0x564d268e4050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564d268e3f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564d268e3fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564d268e4100 <col:55>
|-FunctionDecl 0x564d268e4298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x564d268e4180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x564d268e4340 <col:62>
|-FunctionDecl 0x564d268e4578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x564d268e43a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x564d268e4620 <col:60>
|-FunctionDecl 0x564d268e4848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564d268e46a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564d268e4720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x564d268e48f8 <col:44>
|-FunctionDecl 0x564d268e4b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564d268e4960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564d268e49e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x564d268e4bb8 <col:49>
|-VarDecl 0x564d268e4cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x564d268e4d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x564d268e4db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x564d268e4e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x564d268e4fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x564d268e5050 <col:42>
|-VarDecl 0x564d268e50c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x564d268e5140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x564d268e52c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x564d268e51b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x564d268e5370 <col:57>
|-FunctionDecl 0x564d268e64f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564d268e53f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564d268e6598 <col:56>
|-FunctionDecl 0x564d268e66a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564d268e6618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x564d268e6750 <col:59>
|-FunctionDecl 0x564d268e6858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x564d268e67c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x564d268e6900 <col:48>
| `-ConstAttr 0x564d268e6958 <col:89>
|-FunctionDecl 0x564d268e6bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564d268e6a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x564d268e6a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x564d268e6e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564d268e6ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564d268e6d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x564d268e6ec8 <col:88>
|-FunctionDecl 0x564d268e7060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564d268e6f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564d268e6fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x564d268e7110 <col:88>
|-FunctionDecl 0x564d268e7328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x564d268e7178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564d268e7208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x564d268e73d8 <line:209:22>
|-FunctionDecl 0x564d268e7778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564d268e7440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564d268e7500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x564d268e7590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x564d268e7620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x564d268e7a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x564d268e7878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x564d268e7950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x564d268e7b28 <col:85>
|-FunctionDecl 0x564d268e7f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x564d268e7b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564d268e7cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x564d268e7dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x564d268e7fd0 <col:52>
|-FunctionDecl 0x564d268e8148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x564d268e8038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564d268e81f0 <col:61>
|-FunctionDecl 0x564d268e8668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x564d268e8258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564d268e82d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x564d268e8408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x564d268e8510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x564d268e8728 <col:62>
|-FunctionDecl 0x564d268e8948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x564d268e8790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564d268e8820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x564d268e89f8 <line:222:22>
|-FunctionDecl 0x564d268e8af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x564d268e8a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564d268e8ba0 <col:65>
|-TypedefDecl 0x564d268e8c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x564d26873140 'unsigned long'
|-RecordDecl 0x564d268e8c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x564d268e8db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564d268e8e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564d268e8ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x564d268e8e70 'union pthread_attr_t' sugar
|   `-RecordType 0x564d268e8cf0 'union pthread_attr_t'
|     `-Record 0x564d268e8c68 'pthread_attr_t'
|-RecordDecl 0x564d268e8f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x564d268e9098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x564d268e9110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x564d268e91c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x564d268e9160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x564d268e8fa0 'struct __pthread_internal_list'
|     `-Record 0x564d268e8f20 '__pthread_internal_list'
|-RecordDecl 0x564d268e9230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x564d268e92d8 parent 0x564d26872f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x564d268e93b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564d268e9418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x564d268e9480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x564d268ed530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x564d268ed598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x564d268ed600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x564d268ed688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x564d268ed740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x564d268ed830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x564d268ed898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564d268eda20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x564d268ed9c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x564d268e92b0 'pthread_mutex_t'
|     `-Record 0x564d268e9230 ''
|-RecordDecl 0x564d268eda90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x564d268edbd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564d268edc38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564d268edcf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x564d268edc90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x564d268edb10 'pthread_mutexattr_t'
|     `-Record 0x564d268eda90 ''
|-RecordDecl 0x564d268edd60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x564d268ede08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x564d268eded0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564d268edf38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x564d268edfa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x564d268ee008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x564d268ee070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x564d268ee0d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x564d268ee140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x564d268ee1a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x564d268ee260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe024_power.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe024_power.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x564d268ee350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x564d268ee3b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x564d268ee540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x564d268ee490 'union pthread_cond_t' sugar
|   `-RecordType 0x564d268edde0 'pthread_cond_t'
|     `-Record 0x564d268edd60 ''
|-RecordDecl 0x564d268ee5b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x564d268ee6b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564d268ee718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564d268ee7d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x564d268ee770 'union pthread_condattr_t' sugar
|   `-RecordType 0x564d268ee630 'pthread_condattr_t'
|     `-Record 0x564d268ee5b0 ''
|-TypedefDecl 0x564d268ee858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x564d26873120 'unsigned int'
|-TypedefDecl 0x564d268ee8c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x564d26873080 'int'
|-RecordDecl 0x564d268ee920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x564d268ee9c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x564d268eea90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564d268eeaf8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x564d268eeb60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x564d268eebc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x564d268eec30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x564d268eec98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x564d268eed00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x564d268eed68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x564d268eedd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x564d268eee38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x564d268eeea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x564d268eef50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe024_power.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe024_power.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x564d268eeff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564d268ef060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564d268ef1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x564d268ef150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x564d268ee9a0 'pthread_rwlock_t'
|     `-Record 0x564d268ee920 ''
|-RecordDecl 0x564d268ef220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x564d268ef360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x564d268ef3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564d268ef480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x564d268ef420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x564d268ef2a0 'pthread_rwlockattr_t'
|     `-Record 0x564d268ef220 ''
|-TypedefDecl 0x564d268f1560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x564d26873084 'volatile int' volatile
|   `-BuiltinType 0x564d26873080 'int'
|-RecordDecl 0x564d268f15b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x564d268f1700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x564d268f1768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564d268f1820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x564d268f17c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x564d268f1640 'pthread_barrier_t'
|     `-Record 0x564d268f15b8 ''
|-RecordDecl 0x564d268f1890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x564d268f1990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564d268f19f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564d268f1ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x564d268f1a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x564d268f1910 'pthread_barrierattr_t'
|     `-Record 0x564d268f1890 ''
|-TypedefDecl 0x564d268f1bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x564d268f1b60 'long [8]' 8 
|   `-BuiltinType 0x564d268730a0 'long'
|-EnumDecl 0x564d268f1c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x564d268f1ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x564d268f1d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x564d268f1d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x564d268f1e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x564d268f1ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x564d268f1ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x564d268f1f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x564d268f1fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x564d268f1fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x564d268f1f98 <col:26> 'int' EnumConstant 0x564d268f1e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x564d268f2058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x564d268f2040 <col:29> 'int'
| |   `-DeclRefExpr 0x564d268f2020 <col:29> 'int' EnumConstant 0x564d268f1ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x564d268f20e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x564d268f20c8 <col:30> 'int'
| |   `-DeclRefExpr 0x564d268f20a8 <col:30> 'int' EnumConstant 0x564d268f1ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x564d268f2168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x564d268f2150 <col:27> 'int'
|     `-DeclRefExpr 0x564d268f2130 <col:27> 'int' EnumConstant 0x564d268f1fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x564d268f21b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x564d268f2288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x564d268f2310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x564d268f22f8 <col:30> 'int'
| |   `-DeclRefExpr 0x564d268f22d8 <col:30> 'int' EnumConstant 0x564d268f2288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x564d268f2360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x564d268f23e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x564d268f23d0 <col:29> 'int'
|     `-DeclRefExpr 0x564d268f23b0 <col:29> 'int' EnumConstant 0x564d268f2360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x564d268f2438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x564d268f2508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x564d268f2570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x564d268f25c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x564d268f2610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x564d268f26d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x564d268f2728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x564d268f2778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x564d268f2800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x564d268f27e8 <col:31> 'int'
|     `-DeclRefExpr 0x564d268f27c8 <col:31> 'int' EnumConstant 0x564d268f26d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x564d268f2850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x564d268f2918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x564d268f2968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x564d268f29b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x564d268f2a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x564d268f2ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x564d268f2b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x564d268f2bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x564d268f2c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x564d268f2c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x564d268f2ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x564d268f2f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x564d268f2fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x564d268f30c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x564d268f3118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x564d268f31e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x564d268f3238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x564d268f3288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x564d268f3358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x564d268f33a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x564d268f39d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x564d268f34a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x564d268f35c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564d268f37c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x564d268f3840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x564d268f3a98 <col:47>
| |-NonNullAttr 0x564d268f3af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x564d268f3b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x564d268f3c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x564d268f3b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x564d268f3ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x564d268f3d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x564d268f3d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x564d268f4078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x564d268f3f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x564d268f4120 <col:60>
|-FunctionDecl 0x564d268f4270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x564d268f4310 <col:54>
| `-ConstAttr 0x564d268f4368 <col:95>
|-FunctionDecl 0x564d268f4da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x564d268f43a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564d268f4418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x564d268f4e50 <line:395:19>
| `-ConstAttr 0x564d268f4ea8 <col:60>
|-FunctionDecl 0x564d268f5078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564d268f4f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564d268f5120 <col:71>
| `-NonNullAttr 0x564d268f5178 <col:112, col:126> 1
|-FunctionDecl 0x564d268f5280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564d268f51c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564d268f5328 <line:398:22>
| `-NonNullAttr 0x564d268f5380 <col:63, col:77> 1
|-FunctionDecl 0x564d268f55a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x564d268f53c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564d268f5448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x564d268f5658 <line:401:22>
| `-NonNullAttr 0x564d268f56b0 <col:63, col:80> 1 2
|-FunctionDecl 0x564d268f58b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564d268f56f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564d268f5778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x564d268f5968 <line:404:22>
| `-NonNullAttr 0x564d268f59c0 <col:63, col:77> 1
|-FunctionDecl 0x564d268f5c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x564d268f5a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564d268f5ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x564d268f5cc8 <line:407:22>
| `-NonNullAttr 0x564d268f5d20 <col:63, col:80> 1 2
|-FunctionDecl 0x564d268f6f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564d268f6dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564d268f6e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564d268f7028 <line:410:22>
| `-NonNullAttr 0x564d268f7080 <col:63, col:77> 1
|-FunctionDecl 0x564d268f72b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564d268f70c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564d268f7158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564d268f7368 <line:413:22>
| `-NonNullAttr 0x564d268f73c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564d268f75f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564d268f7408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x564d268f7498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x564d268f76a8 <col:37>
| `-NonNullAttr 0x564d268f7700 <col:78, col:95> 1 2
|-FunctionDecl 0x564d268f78e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564d268f7748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564d268f77c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x564d268f7998 <line:419:22>
| `-NonNullAttr 0x564d268f79f0 <col:63, col:80> 1 2
|-FunctionDecl 0x564d268f7b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564d268f7a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564d268f7ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x564d268f7c28 <line:421:22>
| `-NonNullAttr 0x564d268f7c80 <col:63, col:77> 1
|-FunctionDecl 0x564d268f8e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564d268f7cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564d268f7d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x564d268f8f08 <line:424:22>
| `-NonNullAttr 0x564d268f8f60 <col:63, col:80> 1 2
|-FunctionDecl 0x564d268f90e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564d268f8fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564d268f9028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x564d268f9198 <line:427:22>
| `-NonNullAttr 0x564d268f91f0 <col:63, col:77> 1
|-FunctionDecl 0x564d268f9398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564d268f9238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564d268f92b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x564d268f9448 <line:430:22>
| `-NonNullAttr 0x564d268f94a0 <col:63, col:80> 1 2
|-FunctionDecl 0x564d268f9628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564d268f94e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564d268f9568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x564d268f96d8 <line:432:22>
| `-NonNullAttr 0x564d268f9730 <col:63, col:77> 1
|-FunctionDecl 0x564d268f9958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x564d268f9778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564d268f97f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x564d268f9a08 <line:435:22>
| |-NonNullAttr 0x564d268f9a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x564d268f9a98 <col:100> "" ""
|-FunctionDecl 0x564d268f9ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x564d268f9ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564d268f9b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x564d268f9d58 <line:438:22>
| |-NonNullAttr 0x564d268f9db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x564d268f9df8 <col:97> "" ""
|-FunctionDecl 0x564d268f9fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564d268f9e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564d268f9ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564d268fa098 <line:441:22>
| `-NonNullAttr 0x564d268fa0f0 <col:63, col:80> 1 2
|-FunctionDecl 0x564d268fa270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564d268fa138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564d268fa1b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564d268fa320 <line:444:22>
| `-NonNullAttr 0x564d268fa378 <col:63, col:77> 1
|-FunctionDecl 0x564d268fa668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564d268fa3c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564d268fa448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x564d268fa4c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564d268fa720 <line:448:22>
| `-NonNullAttr 0x564d268fa778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x564d268faa28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x564d268fa7d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564d268fa850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x564d268fa8c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564d268faae0 <col:43>
| `-NonNullAttr 0x564d268fab38 <col:84, col:98> 1
|-FunctionDecl 0x564d268fae40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564d268fab88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564d268fac08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x564d268fac98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x564d268faef8 <line:453:22>
| `-NonNullAttr 0x564d268faf50 <col:63, col:77> 3
|-FunctionDecl 0x564d268fb228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564d268faf98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564d268fb018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x564d268fb0a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564d268fb2e0 <line:457:22>
| `-NonNullAttr 0x564d268fb338 <col:63, col:80> 2 3
|-FunctionDecl 0x564d268fb528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x564d268fb388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564d268fb408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x564d268fb5d8 <line:459:22>
|-FunctionDecl 0x564d268fb9a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x564d268fb6a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x564d268fb840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x564d268fba58 <col:52, col:69> 1 2
|-FunctionDecl 0x564d268fbc00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x564d268fbae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x564d268fbb60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x564d268fbe10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x564d268fbcc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x564d268fbd48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x564d268fbf68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x564d268fbed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x564d268fc0a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x564d268fc148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x564d268fc1f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x564d268fc2e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x564d268fc350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x564d268fc520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe024_power.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x564d268fc618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x564d268fc6d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x564d268fc670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x564d268fc1d0 '__pthread_unwind_buf_t'
| |   `-Record 0x564d268fc148 ''
| `-AlignedAttr 0x564d268fc728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x564d268fc7a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x564d268fc900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x564d268fc968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x564d268fc9d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x564d268fca38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x564d268fcc40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564d268fcb30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564d268fce20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564d268fccf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564d268fcfe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564d268fced8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x564d268fd088 <line:488:22>
|-RecordDecl 0x564d268fd0e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x564d268fd3f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x564d268fd258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x564d268fd2d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x564d268fd4a8 <col:86>
| `-ReturnsTwiceAttr 0x564d268fd500 <col:12> Implicit
|-FunctionDecl 0x564d268fd828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564d268fd5d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x564d268fd6e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x564d268fd8d8 <line:494:22>
| `-NonNullAttr 0x564d268fd930 <col:63, col:77> 1
|-FunctionDecl 0x564d268fdaa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564d268fd978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564d268fdb50 <line:496:22>
| `-NonNullAttr 0x564d268fdba8 <col:63, col:77> 1
|-FunctionDecl 0x564d268fdcb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564d268fdbf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564d268fdd58 <line:498:22>
| `-NonNullAttr 0x564d268fddb0 <col:52, col:66> 1
|-FunctionDecl 0x564d268fdee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564d268fde30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564d268fdf90 <line:500:22>
| `-NonNullAttr 0x564d268fdfe8 <col:52, col:66> 1
|-FunctionDecl 0x564d268fe228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564d268fe038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564d268fe0c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564d268fe2d8 <col:36>
| `-NonNullAttr 0x564d268fe330 <col:66, col:83> 1 2
|-FunctionDecl 0x564d268fe430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564d268fe378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564d268fe4d8 <line:505:22>
| `-NonNullAttr 0x564d268fe530 <col:52, col:66> 1
|-FunctionDecl 0x564d268fe7c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564d268fe5e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564d268fe660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564d268fe878 <line:509:22>
| `-NonNullAttr 0x564d268fe8d0 <col:63, col:80> 1 2
|-FunctionDecl 0x564d268feb98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x564d268fe918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564d268fe998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x564d268fea18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x564d268fec50 <line:513:22>
| `-NonNullAttr 0x564d268feca8 <col:63, col:80> 1 3
|-FunctionDecl 0x564d268fee40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564d268fecf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564d268feee8 <line:515:22>
| `-NonNullAttr 0x564d268fef40 <col:63, col:77> 1
|-FunctionDecl 0x564d268ff128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564d268feff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564d268ff1d0 <line:517:22>
| `-NonNullAttr 0x564d268ff228 <col:63, col:77> 1
|-FunctionDecl 0x564d268ff330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564d268ff278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564d268ff3d8 <line:519:22>
| `-NonNullAttr 0x564d268ff430 <col:63, col:77> 1
|-FunctionDecl 0x564d268ff658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564d268ff478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564d268ff4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x564d268ff708 <line:523:22>
| `-NonNullAttr 0x564d268ff760 <col:63, col:80> 1 2
|-FunctionDecl 0x564d268ff968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564d268ff7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564d268ff828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x564d268ffa18 <line:526:22>
| `-NonNullAttr 0x564d268ffa70 <col:63, col:77> 1
|-FunctionDecl 0x564d268ffc18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564d268ffab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564d268ffb38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x564d268ffcc8 <line:529:22>
| `-NonNullAttr 0x564d268ffd20 <col:63, col:80> 1 2
|-FunctionDecl 0x564d26900f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564d268ffd68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564d26900e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x564d26900fd0 <line:531:22>
| `-NonNullAttr 0x564d26901028 <col:63, col:77> 1
|-FunctionDecl 0x564d269011d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564d26901078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564d269010f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x564d26901288 <line:535:22>
| `-NonNullAttr 0x564d269012e0 <col:63, col:80> 1 2
|-FunctionDecl 0x564d26901468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564d26901328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564d269013a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x564d26901518 <line:538:22>
| `-NonNullAttr 0x564d26901570 <col:63, col:77> 1
|-FunctionDecl 0x564d26901718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564d269015b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564d26901638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564d269017c8 <line:542:22>
| `-NonNullAttr 0x564d26901820 <col:63, col:80> 1 2
|-FunctionDecl 0x564d269019a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564d26901868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564d269018e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x564d26901a58 <line:545:22>
| `-NonNullAttr 0x564d26901ab0 <col:63, col:77> 1
|-FunctionDecl 0x564d26901c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x564d26901af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x564d26901b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x564d26901d48 <line:548:22>
| `-NonNullAttr 0x564d26901da0 <col:63, col:80> 1 2
|-FunctionDecl 0x564d26902f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564d26901de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564d26902e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x564d26903008 <line:551:22>
| `-NonNullAttr 0x564d26903060 <col:63, col:77> 1
|-FunctionDecl 0x564d26903398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x564d26903140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564d26903250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x564d26903448 <col:29>
| `-NonNullAttr 0x564d269034a0 <col:70, col:84> 1
|-FunctionDecl 0x564d26903618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564d269034e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564d269036c0 <line:556:22>
| `-NonNullAttr 0x564d26903718 <col:63, col:77> 1
|-FunctionDecl 0x564d26903820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564d26903768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564d269038c8 <line:558:22>
| `-NonNullAttr 0x564d26903920 <col:52, col:66> 1
|-FunctionDecl 0x564d26903a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564d26903968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564d26903ac8 <line:560:19>
| `-NonNullAttr 0x564d26903b20 <col:49, col:63> 1
|-FunctionDecl 0x564d26903d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564d26903b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564d26903bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564d26903e08 <col:39>
| `-NonNullAttr 0x564d26903e90 <col:69, col:86> 1 2
|-FunctionDecl 0x564d26903f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564d26903ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564d26904038 <line:565:22>
| `-NonNullAttr 0x564d26904090 <col:52, col:66> 1
|-FunctionDecl 0x564d26904190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564d269040d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564d26904238 <line:567:22>
| `-NonNullAttr 0x564d26904290 <col:52, col:66> 1
|-FunctionDecl 0x564d26904448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564d269042d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564d26904368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564d269044f8 <col:39>
| `-NonNullAttr 0x564d26904550 <col:69, col:86> 1 2
|-FunctionDecl 0x564d26904650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564d26904598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564d269046f8 <line:572:22>
| `-NonNullAttr 0x564d26904750 <col:52, col:66> 1
|-FunctionDecl 0x564d26904938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564d26904800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564d269049e0 <line:574:22>
| `-NonNullAttr 0x564d26904a38 <col:63, col:77> 1
|-FunctionDecl 0x564d26904b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564d26904a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564d26904be8 <line:576:22>
| `-NonNullAttr 0x564d26904c40 <col:63, col:77> 1
|-FunctionDecl 0x564d26904ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564d26904c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564d26904d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x564d26904f50 <line:580:22>
| `-NonNullAttr 0x564d26904fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x564d269051b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564d26904ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564d26905078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x564d26905268 <line:583:22>
| `-NonNullAttr 0x564d269052c0 <col:63, col:77> 1
|-FunctionDecl 0x564d26905468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564d26905308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564d26905388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x564d26905518 <line:587:22>
| `-NonNullAttr 0x564d26905570 <col:63, col:80> 1 2
|-FunctionDecl 0x564d269056f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564d269055b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564d26905638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x564d269057a8 <col:36>
| `-NonNullAttr 0x564d26905800 <col:77, col:91> 1
|-FunctionDecl 0x564d26905b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x564d269058e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564d269059f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x564d26905be8 <line:592:22>
| `-NonNullAttr 0x564d26905c40 <col:63, col:77> 1
|-FunctionDecl 0x564d26905db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564d26905c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564d26905e60 <line:594:22>
| `-NonNullAttr 0x564d26905ee0 <col:63, col:77> 1
|-FunctionDecl 0x564d26905fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564d26905f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564d26906088 <line:596:22>
| `-NonNullAttr 0x564d269060e0 <col:52, col:66> 1
|-FunctionDecl 0x564d269061e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564d26906128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564d26906288 <line:598:22>
| `-NonNullAttr 0x564d269062e0 <col:52, col:66> 1
|-FunctionDecl 0x564d26906508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x564d26906328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564d269063a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x564d269065b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x564d269068e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564d26906638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564d269066b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564d26906740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x564d269069a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x564d26906bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564d26906a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564d26906c60 <line:607:22>
| `-NonNullAttr 0x564d26906cb8 <col:63, col:77> 1
|-FunctionDecl 0x564d26906dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564d26906d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564d26906e68 <line:609:22>
| `-NonNullAttr 0x564d26906ef0 <col:63, col:77> 1
|-FunctionDecl 0x564d26907118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564d26906f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564d26906fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x564d269071c8 <line:613:22>
| `-NonNullAttr 0x564d26907220 <col:63, col:80> 1 2
|-FunctionDecl 0x564d26907428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x564d26907268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564d269072e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x564d269074d8 <col:37>
| `-NonNullAttr 0x564d26907530 <col:78, col:92> 1
|-FunctionDecl 0x564d26907748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x564d26907578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564d26907620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x564d269077f8 <line:619:22>
| `-NonNullAttr 0x564d26907850 <col:63, col:80> 1 2
|-FunctionDecl 0x564d26907a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x564d26907898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564d26907910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x564d26907ac8 <line:622:22>
| `-NonNullAttr 0x564d26907b20 <col:63, col:77> 1
|-FunctionDecl 0x564d26907dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x564d26907c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x564d26907c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x564d26907e78 <line:624:22>
| `-NonNullAttr 0x564d26907f00 <col:63, col:77> 1
|-FunctionDecl 0x564d26908078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564d26907f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564d26908120 <line:626:22>
| `-NonNullAttr 0x564d26908178 <col:63, col:77> 1
|-FunctionDecl 0x564d26908280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564d269081c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564d26908328 <line:628:22>
| `-NonNullAttr 0x564d26908380 <col:52, col:66> 1
|-FunctionDecl 0x564d26908480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564d269083c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564d26908528 <line:630:22>
| `-NonNullAttr 0x564d26908580 <col:52, col:66> 1
|-FunctionDecl 0x564d26908680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564d269085c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564d26908728 <line:632:22>
| `-NonNullAttr 0x564d26908780 <col:52, col:66> 1
|-FunctionDecl 0x564d26908b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x564d26908860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x564d26908970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564d269089f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x564d26908c10 <line:636:22>
| `-NonNullAttr 0x564d26908c68 <col:63, col:77> 1
|-FunctionDecl 0x564d26908de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564d26908cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564d26908e90 <line:638:22>
| `-NonNullAttr 0x564d26908f10 <col:63, col:77> 1
|-FunctionDecl 0x564d26909010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564d26908f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564d269090b8 <line:640:22>
| `-NonNullAttr 0x564d26909110 <col:52, col:66> 1
|-FunctionDecl 0x564d269092f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564d269091c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564d269093a0 <line:642:22>
| `-NonNullAttr 0x564d269093f8 <col:63, col:77> 1
|-FunctionDecl 0x564d26909500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564d26909448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564d269095a8 <line:644:22>
| `-NonNullAttr 0x564d26909600 <col:63, col:77> 1
|-FunctionDecl 0x564d26909828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564d26909648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564d269096c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x564d269098d8 <line:648:22>
| `-NonNullAttr 0x564d26909930 <col:63, col:80> 1 2
|-FunctionDecl 0x564d26909b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x564d26909978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x564d269099f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x564d26909be8 <line:651:22>
| `-NonNullAttr 0x564d26909c40 <col:63, col:77> 1
|-FunctionDecl 0x564d26909fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x564d26909d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x564d26909e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x564d2690a058 <line:654:22>
| `-NonNullAttr 0x564d2690a0b0 <col:63, col:77> 1
|-FunctionDecl 0x564d2690a208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x564d2690a0f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564d2690a2b0 <col:69>
|-FunctionDecl 0x564d2690a428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x564d2690a318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564d2690a4d0 <col:72>
|-FunctionDecl 0x564d2690a708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x564d2690a538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x564d2690a5e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x564d2690a7b8 <col:44>
|-FunctionDecl 0x564d2690a9d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x564d2690a820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564d2690a898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x564d2690aa88 <line:661:22>
| `-NonNullAttr 0x564d2690aae0 <col:63, col:77> 2
|-FunctionDecl 0x564d2690bf50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x564d2690abc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x564d2690acd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x564d2690ade0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x564d2690c008 <col:47>
|-FunctionDecl 0x564d2690c110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x564d2690c078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564d2690c268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x564d2690c1d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564d2690c3c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x564d2690c328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564d2690c488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x564d2690c548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x564d2690c608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x564d2690c6c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x564d2690c740 prev 0x564d2690c6c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x564d2690c7a8 <col:24> 'int' 0
|-VarDecl 0x564d2690c7e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x564d2690c860 prev 0x564d2690c7e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x564d2690c8c8 <col:27> 'int' 0
|-VarDecl 0x564d2690c900 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x564d2690c980 prev 0x564d2690c900 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x564d2690c9e8 <col:27> 'int' 0
|-VarDecl 0x564d2690ca20 <line:678:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x564d2690caa0 prev 0x564d2690ca20 <line:679:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x564d2690cb08 <col:27> 'int' 0
|-VarDecl 0x564d2690cb38 <line:680:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x564d2690cbb0 <line:681:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x564d2690cc30 <line:682:1, col:5> col:5 used x 'int'
|-VarDecl 0x564d2690ccb0 prev 0x564d2690cc30 <line:683:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x564d2690cd18 <col:9> 'int' 0
|-VarDecl 0x564d2690cd48 <line:684:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x564d2690cdc8 <line:685:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x564d2690ce40 <line:686:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x564d2690cf20 <line:687:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x564d2690cf98 <line:688:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x564d2690d010 <line:689:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x564d2690d088 <line:690:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x564d2690d100 <line:691:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x564d2690d178 <line:692:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x564d2690d1f0 <line:693:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x564d2690d268 <line:694:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x564d2690d2e8 <line:695:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x564d2690d368 <line:696:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x564d2690d3e0 <line:697:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x564d2690d460 <line:698:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x564d2690d4d8 <line:699:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x564d2690d558 <line:700:1, col:5> col:5 used y 'int'
|-VarDecl 0x564d2690d5d8 prev 0x564d2690d558 <line:701:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x564d2690d640 <col:9> 'int' 0
|-VarDecl 0x564d2690d678 <line:702:1, col:5> col:5 used z 'int'
|-VarDecl 0x564d2690d6f8 prev 0x564d2690d678 <line:703:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x564d2690d760 <col:9> 'int' 0
|-VarDecl 0x564d2690d790 <line:704:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x564d2690d808 <line:705:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x564d2690d920 prev 0x564d2690c110 <line:706:1, line:735:1> line:706:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x564d2690d888 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564d26910928 <line:707:1, line:735:1>
|   |-CallExpr 0x564d2690da38 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564d2690da20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d2690d9c8 <col:3> 'void ()' Function 0x564d268b34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564d2690da98 <line:709:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564d2690da58 <col:3> 'int' lvalue Var 0x564d2690d6f8 'z' 'int'
|   | `-IntegerLiteral 0x564d2690da78 <col:7> 'int' 1
|   |-CallExpr 0x564d2690daf0 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564d2690dad8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d2690dab8 <col:3> 'void ()' Function 0x564d268b3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564d2690db48 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564d2690db30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d2690db10 <col:3> 'void ()' Function 0x564d268b34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x564d2690dba0 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564d2690db88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d2690db68 <col:3> 'void ()' Function 0x564d268b3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564d2690dbf8 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564d2690dbe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d2690dbc0 <col:3> 'void ()' Function 0x564d268b34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564d2690dcc8 <line:714:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x564d2690dc18 <col:3> '_Bool' lvalue Var 0x564d2690d790 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x564d2690dca8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x564d2690dc90 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x564d2690dc38 <col:19> '_Bool (void)' Function 0x564d268b2c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x564d2690dd60 <line:715:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x564d2690dce8 <col:3> '_Bool' lvalue Var 0x564d2690d808 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x564d2690dd40 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x564d2690dd28 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x564d2690dd08 <col:19> '_Bool (void)' Function 0x564d268b2c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x564d2690ddd8 <line:716:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x564d2690dd80 <col:3> '_Bool' lvalue Var 0x564d2690cd48 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x564d2690ddc0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564d2690dda0 <col:21> '_Bool' lvalue Var 0x564d2690d808 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x564d2690de50 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564d2690ddf8 <col:3> 'int' lvalue Var 0x564d2690cdc8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x564d2690de38 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564d2690de18 <col:15> 'int' lvalue Var 0x564d2690ccb0 'x' 'int'
|   |-BinaryOperator 0x564d2690e2a0 <line:718:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x564d2690de70 <col:3> 'int' lvalue Var 0x564d2690ccb0 'x' 'int'
|   | `-ConditionalOperator 0x564d2690e270 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x564d2690e098 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x564d2690dfb8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x564d2690dec8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x564d2690deb0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x564d2690de90 <col:8> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x564d2690df98 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x564d2690df30 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x564d2690df00 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x564d2690dee0 <col:27> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x564d2690df80 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x564d2690df68 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x564d2690df48 <col:46> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x564d2690e078 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x564d2690e010 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x564d2690dff8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x564d2690dfd8 <col:65> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x564d2690e060 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x564d2690e048 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x564d2690e028 <col:84> '_Bool' lvalue Var 0x564d2690d100 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x564d2690e258 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564d2690e0b8 <col:101> 'int' lvalue Var 0x564d2690ccb0 'x' 'int'
|   |   `-ParenExpr 0x564d2690e238 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x564d2690e208 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x564d2690e178 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564d2690e130 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564d2690e118 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564d2690e0d8 <col:106> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564d2690e160 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564d2690e148 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564d2690e0f8 <col:124> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x564d2690e1d8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564d2690e198 <col:141> 'int' lvalue Var 0x564d2690d368 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x564d2690e1f0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564d2690e1b8 <col:153> 'int' lvalue Var 0x564d2690d460 'x$w_buff1' 'int'
|   |-BinaryOperator 0x564d2690e7b0 <line:719:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564d2690e2c0 <col:3> 'int' lvalue Var 0x564d2690d368 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x564d2690e780 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564d2690e750 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564d2690e738 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564d2690e2e0 <col:15> '_Bool' lvalue Var 0x564d2690d808 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564d2690e768 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564d2690e300 <col:31> 'int' lvalue Var 0x564d2690d368 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x564d2690e718 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564d2690e6e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564d2690e510 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564d2690e430 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564d2690e358 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564d2690e340 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564d2690e320 <col:45> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564d2690e410 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564d2690e3a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564d2690e390 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564d2690e370 <col:64> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x564d2690e3f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564d2690e3e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564d2690e3c0 <col:83> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564d2690e4f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564d2690e488 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564d2690e470 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564d2690e450 <col:102> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x564d2690e4d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564d2690e4c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564d2690e4a0 <col:121> '_Bool' lvalue Var 0x564d2690d100 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x564d2690e6d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564d2690e530 <col:138> 'int' lvalue Var 0x564d2690d368 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x564d2690e6b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564d2690e680 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564d2690e5f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564d2690e5a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564d2690e590 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564d2690e550 <col:151> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564d2690e5d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564d2690e5c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564d2690e570 <col:169> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x564d2690e650 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564d2690e610 <col:186> 'int' lvalue Var 0x564d2690d368 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x564d2690e668 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564d2690e630 <col:198> 'int' lvalue Var 0x564d2690d368 'x$w_buff0' 'int'
|   |-BinaryOperator 0x564d2690ecc0 <line:720:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564d2690e7d0 <col:3> 'int' lvalue Var 0x564d2690d460 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x564d2690ec90 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564d2690ec60 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564d2690ec48 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564d2690e7f0 <col:15> '_Bool' lvalue Var 0x564d2690d808 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564d2690ec78 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564d2690e810 <col:31> 'int' lvalue Var 0x564d2690d460 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x564d2690ec28 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564d2690ebf8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564d2690ea20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564d2690e940 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564d2690e868 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564d2690e850 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564d2690e830 <col:45> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564d2690e920 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564d2690e8b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564d2690e8a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564d2690e880 <col:64> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x564d2690e908 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564d2690e8f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564d2690e8d0 <col:83> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564d2690ea00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564d2690e998 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564d2690e980 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564d2690e960 <col:102> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x564d2690e9e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564d2690e9d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564d2690e9b0 <col:121> '_Bool' lvalue Var 0x564d2690d100 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x564d2690ebe0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564d2690ea40 <col:138> 'int' lvalue Var 0x564d2690d460 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x564d2690ebc0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564d2690eb90 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564d2690eb00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564d2690eab8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564d2690eaa0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564d2690ea60 <col:151> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564d2690eae8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564d2690ead0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564d2690ea80 <col:169> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x564d2690eb60 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564d2690eb20 <col:186> 'int' lvalue Var 0x564d2690d460 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x564d2690eb78 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564d2690eb40 <col:198> 'int' lvalue Var 0x564d2690d460 'x$w_buff1' 'int'
|   |-BinaryOperator 0x564d2690f278 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564d2690ece0 <col:3> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564d2690f260 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564d2690f230 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564d2690f1e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564d2690f1d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564d2690ed00 <col:20> '_Bool' lvalue Var 0x564d2690d808 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564d2690f218 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564d2690f200 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564d2690ed20 <col:36> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x564d2690f1b0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564d2690f180 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564d2690ef40 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564d2690ee50 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564d2690ed78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564d2690ed60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564d2690ed40 <col:55> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564d2690ee30 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564d2690edc8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564d2690edb0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564d2690ed90 <col:74> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x564d2690ee18 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564d2690ee00 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564d2690ede0 <col:93> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564d2690ef10 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564d2690eea8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564d2690ee90 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564d2690ee70 <col:112> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x564d2690eef8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564d2690eee0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564d2690eec0 <col:131> '_Bool' lvalue Var 0x564d2690d100 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x564d2690f168 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564d2690f150 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564d2690ef60 <col:148> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x564d2690f130 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564d2690f100 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564d2690f020 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564d2690efd8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564d2690efc0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564d2690ef80 <col:166> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564d2690f008 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564d2690eff0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564d2690efa0 <col:184> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x564d2690f0b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564d2690f070 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564d2690f040 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564d2690f0e8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564d2690f0d0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564d2690f098 <col:212> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564d2690f840 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564d2690f298 <col:3> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564d2690f828 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564d2690f7f8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564d2690f7b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564d2690f798 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564d2690f2b8 <col:20> '_Bool' lvalue Var 0x564d2690d808 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564d2690f7e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564d2690f7c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564d2690f2d8 <col:36> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x564d2690f778 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564d2690f748 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564d2690f4e8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564d2690f408 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564d2690f330 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564d2690f318 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564d2690f2f8 <col:55> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564d2690f3e8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564d2690f380 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564d2690f368 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564d2690f348 <col:74> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x564d2690f3d0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564d2690f3b8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564d2690f398 <col:93> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564d2690f4c8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564d2690f460 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564d2690f448 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564d2690f428 <col:112> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x564d2690f4b0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564d2690f498 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564d2690f478 <col:131> '_Bool' lvalue Var 0x564d2690d100 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x564d2690f730 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564d2690f718 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564d2690f508 <col:148> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x564d2690f6f8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564d2690f6c8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564d2690f5c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564d2690f580 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564d2690f568 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564d2690f528 <col:166> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564d2690f5b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564d2690f598 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564d2690f548 <col:184> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x564d2690f698 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564d2690f618 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564d2690f5e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564d2690f6b0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564d2690f670 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564d2690f640 <col:219> 'int' 0
|   |-BinaryOperator 0x564d2690fde8 <line:723:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564d2690f860 <col:3> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564d2690fdd0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564d2690fda0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564d2690fd58 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564d2690fd40 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564d2690f880 <col:20> '_Bool' lvalue Var 0x564d2690d808 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564d2690fd88 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564d2690fd70 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564d2690f8a0 <col:36> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x564d2690fd20 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564d2690fcf0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564d2690fab0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564d2690f9d0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564d2690f8f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564d2690f8e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564d2690f8c0 <col:55> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564d2690f9b0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564d2690f948 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564d2690f930 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564d2690f910 <col:74> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x564d2690f998 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564d2690f980 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564d2690f960 <col:93> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564d2690fa90 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564d2690fa28 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564d2690fa10 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564d2690f9f0 <col:112> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x564d2690fa78 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564d2690fa60 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564d2690fa40 <col:131> '_Bool' lvalue Var 0x564d2690d100 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x564d2690fcd8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564d2690fcc0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564d2690fad0 <col:148> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x564d2690fca0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564d2690fc70 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564d2690fb90 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564d2690fb48 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564d2690fb30 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564d2690faf0 <col:166> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564d2690fb78 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564d2690fb60 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564d2690fb10 <col:184> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x564d2690fc28 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564d2690fbe0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564d2690fbb0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564d2690fc58 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564d2690fc40 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564d2690fc08 <col:212> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564d269103c0 <line:724:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564d2690fe08 <col:3> '_Bool' lvalue Var 0x564d2690d100 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564d269103a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564d26910378 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564d26910330 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564d26910318 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564d2690fe28 <col:20> '_Bool' lvalue Var 0x564d2690d808 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564d26910360 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564d26910348 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564d2690fe48 <col:36> '_Bool' lvalue Var 0x564d2690d100 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x564d269102f8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564d269102c8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564d26910068 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564d2690ff88 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564d2690fea0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564d2690fe88 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564d2690fe68 <col:55> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564d2690ff68 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564d2690fef0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564d2690fed8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564d2690feb8 <col:74> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x564d2690ff50 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564d2690ff28 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564d2690ff08 <col:93> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564d26910048 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564d2690ffe0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564d2690ffc8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564d2690ffa8 <col:112> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x564d26910030 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564d26910018 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564d2690fff8 <col:131> '_Bool' lvalue Var 0x564d2690d100 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x564d269102b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564d26910298 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564d26910088 <col:148> '_Bool' lvalue Var 0x564d2690d100 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x564d26910278 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564d26910248 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564d26910148 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564d26910100 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564d269100e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564d269100a8 <col:166> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564d26910130 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564d26910118 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564d269100c8 <col:184> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x564d26910218 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564d26910198 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564d26910168 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564d26910230 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564d269101f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564d269101c0 <col:219> 'int' 0
|   |-BinaryOperator 0x564d26910438 <line:725:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564d269103e0 <col:3> 'int' lvalue Var 0x564d2690c860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x564d26910420 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564d26910400 <col:25> 'int' lvalue Var 0x564d2690ccb0 'x' 'int'
|   |-BinaryOperator 0x564d26910568 <line:726:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x564d26910458 <col:3> 'int' lvalue Var 0x564d2690ccb0 'x' 'int'
|   | `-ConditionalOperator 0x564d26910538 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x564d269104f0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564d269104d8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564d26910478 <col:7> '_Bool' lvalue Var 0x564d2690cd48 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x564d26910508 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564d26910498 <col:25> 'int' lvalue Var 0x564d2690cdc8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x564d26910520 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x564d269104b8 <col:37> 'int' lvalue Var 0x564d2690ccb0 'x' 'int'
|   |-BinaryOperator 0x564d26910600 <line:727:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x564d26910588 <col:3> '_Bool' lvalue Var 0x564d2690cd48 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x564d269105d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564d269105a8 <col:28> 'int' 0
|   |-CallExpr 0x564d26910658 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564d26910640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d26910620 <col:3> 'void ()' Function 0x564d268b3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564d269106b0 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564d26910698 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d26910678 <col:3> 'void ()' Function 0x564d268b34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x564d26910708 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564d269106f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d269106d0 <col:3> 'void ()' Function 0x564d268b3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564d26910760 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564d26910748 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d26910728 <col:3> 'void ()' Function 0x564d268b34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564d26910818 <line:732:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564d26910780 <col:3> 'int' lvalue Var 0x564d2690c740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564d269107f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564d269107e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564d269107a0 <col:22> 'int' lvalue Var 0x564d2690c740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564d269107c0 <col:41> 'int' 1
|   |-CallExpr 0x564d26910870 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564d26910858 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d26910838 <col:3> 'void ()' Function 0x564d268b3570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564d26910918 <line:734:3, col:36>
|     `-CallExpr 0x564d269108f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564d269108e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564d26910890 <col:10> 'void *(void)' Function 0x564d268b2fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564d26910ac0 prev 0x564d2690c268 <line:736:1, line:764:1> line:736:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x564d26910a28 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564d26912290 <line:737:1, line:764:1>
|   |-CallExpr 0x564d26910ba0 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564d26910b88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d26910b68 <col:3> 'void ()' Function 0x564d268b34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564d26910c18 <line:739:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564d26910bc0 <col:3> 'int' lvalue Var 0x564d2690d460 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x564d26910c00 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564d26910be0 <col:15> 'int' lvalue Var 0x564d2690d368 'x$w_buff0' 'int'
|   |-BinaryOperator 0x564d26910c78 <line:740:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564d26910c38 <col:3> 'int' lvalue Var 0x564d2690d368 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x564d26910c58 <col:15> 'int' 1
|   |-BinaryOperator 0x564d26910cf0 <line:741:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564d26910c98 <col:3> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564d26910cd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564d26910cb8 <col:20> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564d26910d88 <line:742:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564d26910d10 <col:3> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x564d26910d60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564d26910d30 <col:27> 'int' 1
|   |-CallExpr 0x564d26910f08 <line:743:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x564d26910ef0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x564d26910da8 <col:3> 'void (int)' Function 0x564d268b3238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x564d26910ea8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x564d26910e88 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x564d26910e68 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x564d26910e20 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x564d26910e08 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x564d26910dc8 <col:23> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x564d26910e50 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x564d26910e38 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x564d26910de8 <col:41> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564d26910f98 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564d26910f30 <col:3> '_Bool' lvalue Var 0x564d2690d088 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x564d26910f80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564d26910f60 <col:20> '_Bool' lvalue Var 0x564d2690ce40 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x564d26911010 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564d26910fb8 <col:3> '_Bool' lvalue Var 0x564d2690d100 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564d26910ff8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564d26910fd8 <col:20> '_Bool' lvalue Var 0x564d2690cf20 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564d26911088 <line:746:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564d26911030 <col:3> '_Bool' lvalue Var 0x564d2690d178 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564d26911070 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564d26911050 <col:20> '_Bool' lvalue Var 0x564d2690cf98 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564d26911100 <line:747:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564d269110a8 <col:3> '_Bool' lvalue Var 0x564d2690d1f0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564d269110e8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564d269110c8 <col:20> '_Bool' lvalue Var 0x564d2690d010 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564d26911198 <line:748:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564d26911120 <col:3> '_Bool' lvalue Var 0x564d2690cf98 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x564d26911170 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564d26911140 <col:27> 'int' 1
|   |-CallExpr 0x564d269111f0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564d269111d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d269111b8 <col:3> 'void ()' Function 0x564d268b3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564d26911248 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564d26911230 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d26911210 <col:3> 'void ()' Function 0x564d268b34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564d269112a8 <line:751:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564d26911268 <col:3> 'int' lvalue Var 0x564d2690d5d8 'y' 'int'
|   | `-IntegerLiteral 0x564d26911288 <col:7> 'int' 1
|   |-CallExpr 0x564d26911300 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564d269112e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d269112c8 <col:3> 'void ()' Function 0x564d268b3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564d26911358 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564d26911340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d26911320 <col:3> 'void ()' Function 0x564d268b34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564d26911640 <line:754:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564d26911378 <col:3> 'int' lvalue Var 0x564d2690ccb0 'x' 'int'
|   | `-ConditionalOperator 0x564d26911610 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564d26911438 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564d269113f0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564d269113d8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564d26911398 <col:7> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564d26911420 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564d26911408 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564d269113b8 <col:25> '_Bool' lvalue Var 0x564d2690cf98 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564d269115f8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564d26911458 <col:42> 'int' lvalue Var 0x564d2690d368 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x564d269115d8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564d269115a8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564d26911518 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564d269114d0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564d269114b8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564d26911478 <col:55> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564d26911500 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564d269114e8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564d26911498 <col:73> '_Bool' lvalue Var 0x564d2690d178 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564d26911578 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564d26911538 <col:90> 'int' lvalue Var 0x564d2690d460 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564d26911590 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564d26911558 <col:102> 'int' lvalue Var 0x564d2690ccb0 'x' 'int'
|   |-BinaryOperator 0x564d26911848 <line:755:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564d26911660 <col:3> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564d26911830 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564d26911800 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564d26911720 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564d269116d8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564d269116c0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564d26911680 <col:20> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564d26911708 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564d269116f0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564d269116a0 <col:38> '_Bool' lvalue Var 0x564d2690cf98 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564d269117b8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564d26911770 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564d26911740 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564d269117e8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564d269117d0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564d26911798 <col:66> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564d26911b30 <line:756:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564d26911868 <col:3> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564d26911b18 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564d26911ae8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564d26911a08 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564d26911928 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564d269118e0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564d269118c8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564d26911888 <col:20> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564d26911910 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564d269118f8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564d269118a8 <col:38> '_Bool' lvalue Var 0x564d2690cf98 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564d269119e8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564d269119a0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564d26911988 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564d26911948 <col:56> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564d269119d0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564d269119b8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564d26911968 <col:74> '_Bool' lvalue Var 0x564d2690d178 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564d26911aa0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564d26911a58 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564d26911a28 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564d26911ad0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564d26911ab8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564d26911a80 <col:102> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564d26911d38 <line:757:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564d26911b50 <col:3> '_Bool' lvalue Var 0x564d2690cf98 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564d26911d20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564d26911cf0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564d26911c10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564d26911bc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564d26911bb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564d26911b70 <col:20> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564d26911bf8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564d26911be0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564d26911b90 <col:38> '_Bool' lvalue Var 0x564d2690cf98 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564d26911ca8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564d26911c60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564d26911c30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564d26911cd8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564d26911cc0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564d26911c88 <col:66> '_Bool' lvalue Var 0x564d2690cf98 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564d26912048 <line:758:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564d26911d58 <col:3> '_Bool' lvalue Var 0x564d2690d178 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564d26912030 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564d26912000 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564d26911ef8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564d26911e18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564d26911dd0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564d26911db8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564d26911d78 <col:20> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564d26911e00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564d26911de8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564d26911d98 <col:38> '_Bool' lvalue Var 0x564d2690cf98 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564d26911ed8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564d26911e90 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564d26911e78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564d26911e38 <col:56> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564d26911ec0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564d26911ea8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564d26911e58 <col:74> '_Bool' lvalue Var 0x564d2690d178 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564d26911fb8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564d26911f70 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564d26911f18 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564d26911fe8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564d26911fd0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564d26911f98 <col:102> '_Bool' lvalue Var 0x564d2690d178 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x564d269120a0 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564d26912088 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d26912068 <col:3> 'void ()' Function 0x564d268b3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564d269120f8 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564d269120e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d269120c0 <col:3> 'void ()' Function 0x564d268b34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564d269121b0 <line:761:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564d26912118 <col:3> 'int' lvalue Var 0x564d2690c740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564d26912190 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564d26912178 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564d26912138 <col:22> 'int' lvalue Var 0x564d2690c740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564d26912158 <col:41> 'int' 1
|   |-CallExpr 0x564d26912208 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564d269121f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d269121d0 <col:3> 'void ()' Function 0x564d268b3570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564d26912280 <line:763:3, col:36>
|     `-CallExpr 0x564d26912260 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564d26912248 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564d26912228 <col:10> 'void *(void)' Function 0x564d268b2fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564d26912420 prev 0x564d2690c3c0 <line:765:1, line:784:1> line:765:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x564d26912388 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564d26913678 <line:766:1, line:784:1>
|   |-CallExpr 0x564d26912500 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564d269124e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d269124c8 <col:3> 'void ()' Function 0x564d268b34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564d26912578 <line:768:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564d26912520 <col:3> 'int' lvalue Var 0x564d2690c980 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x564d26912560 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564d26912540 <col:25> 'int' lvalue Var 0x564d2690d5d8 'y' 'int'
|   |-CallExpr 0x564d269125d0 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564d269125b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d26912598 <col:3> 'void ()' Function 0x564d268b3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564d26912628 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564d26912610 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d269125f0 <col:3> 'void ()' Function 0x564d268b34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564d269126a0 <line:771:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564d26912648 <col:3> 'int' lvalue Var 0x564d2690caa0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x564d26912688 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564d26912668 <col:25> 'int' lvalue Var 0x564d2690d6f8 'z' 'int'
|   |-CallExpr 0x564d269126f8 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564d269126e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d269126c0 <col:3> 'void ()' Function 0x564d268b3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564d26912750 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564d26912738 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d26912718 <col:3> 'void ()' Function 0x564d268b34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564d26912a38 <line:774:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564d26912770 <col:3> 'int' lvalue Var 0x564d2690ccb0 'x' 'int'
|   | `-ConditionalOperator 0x564d26912a08 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564d26912830 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564d269127e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564d269127d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564d26912790 <col:7> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564d26912818 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564d26912800 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564d269127b0 <col:25> '_Bool' lvalue Var 0x564d2690d010 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x564d269129f0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564d26912850 <col:42> 'int' lvalue Var 0x564d2690d368 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x564d269129d0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564d269129a0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564d26912910 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564d269128c8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564d269128b0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564d26912870 <col:55> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564d269128f8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564d269128e0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564d26912890 <col:73> '_Bool' lvalue Var 0x564d2690d1f0 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564d26912970 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564d26912930 <col:90> 'int' lvalue Var 0x564d2690d460 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564d26912988 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564d26912950 <col:102> 'int' lvalue Var 0x564d2690ccb0 'x' 'int'
|   |-BinaryOperator 0x564d26912c40 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564d26912a58 <col:3> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564d26912c28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564d26912bf8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564d26912b18 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564d26912ad0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564d26912ab8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564d26912a78 <col:20> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564d26912b00 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564d26912ae8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564d26912a98 <col:38> '_Bool' lvalue Var 0x564d2690d010 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564d26912bb0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564d26912b68 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564d26912b38 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564d26912be0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564d26912bc8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564d26912b90 <col:66> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564d26912f28 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564d26912c60 <col:3> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564d26912f10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564d26912ee0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564d26912e00 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564d26912d20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564d26912cd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564d26912cc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564d26912c80 <col:20> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564d26912d08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564d26912cf0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564d26912ca0 <col:38> '_Bool' lvalue Var 0x564d2690d010 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564d26912de0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564d26912d98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564d26912d80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564d26912d40 <col:56> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564d26912dc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564d26912db0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564d26912d60 <col:74> '_Bool' lvalue Var 0x564d2690d1f0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564d26912e98 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564d26912e50 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564d26912e20 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564d26912ec8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564d26912eb0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564d26912e78 <col:102> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564d26913148 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564d26912f48 <col:3> '_Bool' lvalue Var 0x564d2690d010 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564d26913130 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564d26913100 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564d26913020 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564d26912fd8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564d26912fc0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564d26912f80 <col:20> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564d26913008 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564d26912ff0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564d26912fa0 <col:38> '_Bool' lvalue Var 0x564d2690d010 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564d269130b8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564d26913070 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564d26913040 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564d269130e8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564d269130d0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564d26913098 <col:66> '_Bool' lvalue Var 0x564d2690d010 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564d26913430 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564d26913168 <col:3> '_Bool' lvalue Var 0x564d2690d1f0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564d26913418 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564d269133e8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564d26913308 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564d26913228 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564d269131e0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564d269131c8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564d26913188 <col:20> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564d26913210 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564d269131f8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564d269131a8 <col:38> '_Bool' lvalue Var 0x564d2690d010 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564d269132e8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564d269132a0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564d26913288 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564d26913248 <col:56> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564d269132d0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564d269132b8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564d26913268 <col:74> '_Bool' lvalue Var 0x564d2690d1f0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564d269133a0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564d26913358 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564d26913328 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564d269133d0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564d269133b8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564d26913380 <col:102> '_Bool' lvalue Var 0x564d2690d1f0 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x564d26913488 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564d26913470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d26913450 <col:3> 'void ()' Function 0x564d268b3570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564d269134e0 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564d269134c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d269134a8 <col:3> 'void ()' Function 0x564d268b34b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564d26913598 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564d26913500 <col:3> 'int' lvalue Var 0x564d2690c740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564d26913578 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564d26913560 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564d26913520 <col:22> 'int' lvalue Var 0x564d2690c740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564d26913540 <col:41> 'int' 1
|   |-CallExpr 0x564d269135f0 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564d269135d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564d269135b8 <col:3> 'void ()' Function 0x564d268b3570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564d26913668 <line:783:3, col:36>
|     `-CallExpr 0x564d26913648 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564d26913630 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564d26913610 <col:10> 'void *(void)' Function 0x564d268b2fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564d26913730 prev 0x564d2690c488 <line:785:1, line:787:1> line:785:6 fence 'void ()'
| `-CompoundStmt 0x564d269137d0 <line:786:1, line:787:1>
|-FunctionDecl 0x564d26913800 prev 0x564d2690c548 <line:788:1, line:790:1> line:788:6 isync 'void ()'
| `-CompoundStmt 0x564d269138a0 <line:789:1, line:790:1>
|-FunctionDecl 0x564d269138d0 prev 0x564d2690c608 <line:791:1, line:793:1> line:791:6 lwfence 'void ()'
| `-CompoundStmt 0x564d26913970 <line:792:1, line:793:1>
`-FunctionDecl 0x564d269139d8 <line:794:1, line:818:1> line:794:5 main 'int ()'
  `-CompoundStmt 0x564d26915630 <line:795:1, line:818:1>
    |-DeclStmt 0x564d26913af0 <line:796:3, col:18>
    | `-VarDecl 0x564d26913a88 <col:3, col:13> col:13 used t2347 'pthread_t':'unsigned long'
    |-CallExpr 0x564d26913cf8 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564d26913ce0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564d26913b08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564d268f39d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564d26913b48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564d26913b28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564d26913a88 't2347' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564d26913d38 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564d26913bc0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564d26913b98 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564d26913b60 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564d26913d50 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564d26913be0 <col:39> 'void *(void *)' Function 0x564d2690d920 'P0' 'void *(void *)'
    | `-ParenExpr 0x564d26913c60 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564d26913c38 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564d26913c00 <col:52> 'int' 0
    |-DeclStmt 0x564d26913de0 <line:798:3, col:18>
    | `-VarDecl 0x564d26913d78 <col:3, col:13> col:13 used t2348 'pthread_t':'unsigned long'
    |-CallExpr 0x564d26913fa8 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564d26913f90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564d26913df8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564d268f39d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564d26913e38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564d26913e18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564d26913d78 't2348' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564d26913fe8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564d26913eb0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564d26913e88 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564d26913e50 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564d26914000 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564d26913ed0 <col:39> 'void *(void *)' Function 0x564d26910ac0 'P1' 'void *(void *)'
    | `-ParenExpr 0x564d26913f50 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564d26913f28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564d26913ef0 <col:52> 'int' 0
    |-DeclStmt 0x564d26914090 <line:800:3, col:18>
    | `-VarDecl 0x564d26914028 <col:3, col:13> col:13 used t2349 'pthread_t':'unsigned long'
    |-CallExpr 0x564d26914238 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564d26914220 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564d269140a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564d268f39d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564d269140e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564d269140c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564d26914028 't2349' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564d26914278 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564d26914160 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564d26914138 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564d26914100 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564d26914290 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564d26914180 <col:39> 'void *(void *)' Function 0x564d26912420 'P2' 'void *(void *)'
    | `-ParenExpr 0x564d26914200 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564d269141d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564d269141a0 <col:52> 'int' 0
    |-CallExpr 0x564d269142e0 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564d269142c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564d269142a8 <col:3> 'void ()' Function 0x564d268b34b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564d269143b0 <line:803:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x564d26914300 <col:3> '_Bool' lvalue Var 0x564d2690cb38 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x564d26914398 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x564d26914378 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x564d26914360 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x564d26914320 <col:21> 'int' lvalue Var 0x564d2690c740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x564d26914340 <col:41> 'int' 3
    |-CallExpr 0x564d26914408 <line:804:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564d269143f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564d269143d0 <col:3> 'void ()' Function 0x564d268b3570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564d26914480 <line:805:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564d26914468 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564d26914428 <col:3> 'void (int)' Function 0x564d268b2e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x564d269144c0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564d269144a8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564d26914448 <col:21> '_Bool' lvalue Var 0x564d2690cb38 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x564d26914510 <line:806:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564d269144f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564d269144d8 <col:3> 'void ()' Function 0x564d268b34b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564d269147f8 <line:807:3, col:103> 'int' '='
    | |-DeclRefExpr 0x564d26914530 <col:3> 'int' lvalue Var 0x564d2690ccb0 'x' 'int'
    | `-ConditionalOperator 0x564d269147c8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x564d269145f0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x564d269145a8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x564d26914590 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x564d26914550 <col:7> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x564d269145d8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x564d269145c0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x564d26914570 <col:25> '_Bool' lvalue Var 0x564d2690ce40 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564d269147b0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564d26914610 <col:42> 'int' lvalue Var 0x564d2690d368 'x$w_buff0' 'int'
    |   `-ParenExpr 0x564d26914790 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x564d26914760 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x564d269146d0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564d26914688 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564d26914670 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564d26914630 <col:55> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564d269146b8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564d269146a0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564d26914650 <col:73> '_Bool' lvalue Var 0x564d2690d088 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564d26914730 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564d269146f0 <col:90> 'int' lvalue Var 0x564d2690d460 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x564d26914748 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564d26914710 <col:102> 'int' lvalue Var 0x564d2690ccb0 'x' 'int'
    |-BinaryOperator 0x564d26914a00 <line:808:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564d26914818 <col:3> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564d269149e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564d269149b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564d269148d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564d26914890 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564d26914878 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564d26914838 <col:20> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564d269148c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564d269148a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564d26914858 <col:38> '_Bool' lvalue Var 0x564d2690ce40 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564d26914970 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564d26914928 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564d269148f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564d269149a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564d26914988 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564d26914950 <col:66> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564d26914ce8 <line:809:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564d26914a20 <col:3> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564d26914cd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564d26914ca0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564d26914bc0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564d26914ae0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564d26914a98 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564d26914a80 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564d26914a40 <col:20> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564d26914ac8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564d26914ab0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564d26914a60 <col:38> '_Bool' lvalue Var 0x564d2690ce40 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564d26914ba0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564d26914b58 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564d26914b40 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564d26914b00 <col:56> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564d26914b88 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564d26914b70 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564d26914b20 <col:74> '_Bool' lvalue Var 0x564d2690d088 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564d26914c58 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564d26914c10 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564d26914be0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564d26914c88 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564d26914c70 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564d26914c38 <col:102> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x564d26914ef0 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564d26914d08 <col:3> '_Bool' lvalue Var 0x564d2690ce40 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564d26914ed8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564d26914ea8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564d26914dc8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564d26914d80 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564d26914d68 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564d26914d28 <col:20> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564d26914db0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564d26914d98 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564d26914d48 <col:38> '_Bool' lvalue Var 0x564d2690ce40 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564d26914e60 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564d26914e18 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564d26914de8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564d26914e90 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564d26914e78 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564d26914e40 <col:66> '_Bool' lvalue Var 0x564d2690ce40 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564d269151f0 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564d26914f10 <col:3> '_Bool' lvalue Var 0x564d2690d088 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564d269151d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564d269151a8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564d269150c8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564d26914fe8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564d26914fa0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564d26914f70 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564d26914f30 <col:20> '_Bool' lvalue Var 0x564d2690d3e0 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564d26914fd0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564d26914fb8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564d26914f50 <col:38> '_Bool' lvalue Var 0x564d2690ce40 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564d269150a8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564d26915060 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564d26915048 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564d26915008 <col:56> '_Bool' lvalue Var 0x564d2690d4d8 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564d26915090 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564d26915078 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564d26915028 <col:74> '_Bool' lvalue Var 0x564d2690d088 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564d26915160 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564d26915118 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564d269150e8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564d26915190 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564d26915178 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564d26915140 <col:102> '_Bool' lvalue Var 0x564d2690d088 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x564d26915248 <line:812:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564d26915230 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564d26915210 <col:3> 'void ()' Function 0x564d268b3570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564d269152a0 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564d26915288 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564d26915268 <col:3> 'void ()' Function 0x564d268b34b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564d269154d8 <line:814:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x564d269152c0 <col:3> '_Bool' lvalue Var 0x564d2690cbb0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x564d269154c0 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x564d269154a8 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x564d26915488 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x564d26915468 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x564d269153d0 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x564d26915338 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x564d26915320 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x564d269152e0 <col:23> 'int' lvalue Var 0x564d2690c860 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x564d26915300 <col:46> 'int' 0
    |         | `-BinaryOperator 0x564d269153b0 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x564d26915398 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x564d26915358 <col:51> 'int' lvalue Var 0x564d2690c980 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x564d26915378 <col:74> 'int' 1
    |         `-BinaryOperator 0x564d26915448 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x564d26915430 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564d269153f0 <col:79> 'int' lvalue Var 0x564d2690caa0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x564d26915410 <col:102> 'int' 0
    |-CallExpr 0x564d26915530 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564d26915518 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564d269154f8 <col:3> 'void ()' Function 0x564d268b3570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564d269155a8 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564d26915590 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564d26915550 <col:3> 'void (int)' Function 0x564d268b3238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x564d269155e8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564d269155d0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564d26915570 <col:21> '_Bool' lvalue Var 0x564d2690cbb0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x564d26915620 <line:817:3, col:10>
      `-IntegerLiteral 0x564d26915600 <col:10> 'int' 0
