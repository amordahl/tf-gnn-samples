TranslationUnitDecl 0x5640aaf18f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5640aaf19848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5640aaf19520 '__int128'
|-TypedefDecl 0x5640aaf198b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5640aaf19540 'unsigned __int128'
|-TypedefDecl 0x5640aaf19bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5640aaf19990 'struct __NSConstantString_tag'
|   `-Record 0x5640aaf19910 '__NSConstantString_tag'
|-TypedefDecl 0x5640aaf19c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5640aaf19c20 'char *'
|   `-BuiltinType 0x5640aaf19020 'char'
|-TypedefDecl 0x5640aaf58b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5640aaf19f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5640aaf19d40 'struct __va_list_tag'
|     `-Record 0x5640aaf19cc0 '__va_list_tag'
|-FunctionDecl 0x5640aaf58ca0 <pthread-wmm/mix006_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5640aaf58bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5640aaf58e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5640aaf58f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5640aaf590d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5640aaf59048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5640aaf59308 <col:40, col:99>
|   |-IfStmt 0x5640aaf592d8 <col:42, col:88>
|   | |-UnaryOperator 0x5640aaf591b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5640aaf591a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5640aaf59180 <col:47> 'int' lvalue ParmVar 0x5640aaf59048 'expression' 'int'
|   | `-CompoundStmt 0x5640aaf592c0 <col:59, col:88>
|   |   `-LabelStmt 0x5640aaf592a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5640aaf59238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5640aaf59220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5640aaf591d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5640aaf58f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5640aaf592f0 <col:89>
|   `-ReturnStmt 0x5640aaf592f8 <col:91>
|-FunctionDecl 0x5640aaf59350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5640aaf59410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5640aaf59790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5640aaf594c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5640aaf59548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5640aaf595c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5640aaf59648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5640aaf59850 <line:10:22>
|-FunctionDecl 0x5640aaf7f8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5640aaf598c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5640aaf59940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5640aaf599c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5640aaf59a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5640aaf7f960 <line:13:22>
|-FunctionDecl 0x5640aaf7fc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5640aaf7f9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5640aaf7fa50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5640aaf7fad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5640aaf7fcc8 <line:15:22>
|-TypedefDecl 0x5640aaf7fd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5640aaf190e0 'unsigned char'
|-TypedefDecl 0x5640aaf7fda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5640aaf19100 'unsigned short'
|-TypedefDecl 0x5640aaf7fe18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5640aaf19120 'unsigned int'
|-TypedefDecl 0x5640aaf7fe88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-TypedefDecl 0x5640aaf7fef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5640aaf19040 'signed char'
|-TypedefDecl 0x5640aaf7ff68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5640aaf190e0 'unsigned char'
|-TypedefDecl 0x5640aaf7ffd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5640aaf19060 'short'
|-TypedefDecl 0x5640aaf80048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5640aaf19100 'unsigned short'
|-TypedefDecl 0x5640aaf800b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5640aaf19080 'int'
|-TypedefDecl 0x5640aaf80128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5640aaf19120 'unsigned int'
|-TypedefDecl 0x5640aaf80198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf80208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-TypedefDecl 0x5640aaf80278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf802e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-TypedefDecl 0x5640aaf80358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-TypedefDecl 0x5640aaf803c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5640aaf19120 'unsigned int'
|-TypedefDecl 0x5640aaf80438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5640aaf19120 'unsigned int'
|-TypedefDecl 0x5640aaf804a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-TypedefDecl 0x5640aaf80518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-TypedefDecl 0x5640aaf80588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5640aaf19120 'unsigned int'
|-TypedefDecl 0x5640aaf805f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-TypedefDecl 0x5640aaf80668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf806d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf80748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5640aaf19080 'int'
|-RecordDecl 0x5640aaf807a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5640aaf80918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5640aaf809d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5640aaf80970 'struct __fsid_t' sugar
|   `-RecordType 0x5640aaf80820 '__fsid_t'
|     `-Record 0x5640aaf807a0 ''
|-TypedefDecl 0x5640aaf80a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf80ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-TypedefDecl 0x5640aaf80b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-TypedefDecl 0x5640aaf80ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5640aaf19120 'unsigned int'
|-TypedefDecl 0x5640aaf80c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf80c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5640aaf19120 'unsigned int'
|-TypedefDecl 0x5640aaf80cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf80d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5640aaf19080 'int'
|-TypedefDecl 0x5640aaf80dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5640aaf19080 'int'
|-TypedefDecl 0x5640aaf80e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5640aaf19080 'int'
|-TypedefDecl 0x5640aaf80eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5640aaf197a0 'void *'
|   `-BuiltinType 0x5640aaf18fe0 'void'
|-TypedefDecl 0x5640aaf80f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf80f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf81008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf81078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-TypedefDecl 0x5640aaf810e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-TypedefDecl 0x5640aaf81158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-TypedefDecl 0x5640aaf811c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-TypedefDecl 0x5640aaf81238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf812a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf81318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf81388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-TypedefDecl 0x5640aaf81418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5640aaf813e0 '__off64_t' sugar
|   |-Typedef 0x5640aaf806d8 '__off64_t'
|   `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf81510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5640aaf814d0 '__quad_t *'
|   `-TypedefType 0x5640aaf81470 '__quad_t' sugar
|     |-Typedef 0x5640aaf80278 '__quad_t'
|     `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf81580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5640aaf19c20 'char *'
|   `-BuiltinType 0x5640aaf19020 'char'
|-TypedefDecl 0x5640aaf815f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf81660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5640aaf19120 'unsigned int'
|-FunctionDecl 0x5640aaf817a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5640aaf816d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5640aaf81ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5640aaf81ad8 <line:72:3, col:34>
|     `-CallExpr 0x5640aaf81a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5640aaf81a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5640aaf81a10 <col:10> '<builtin fn type>' Function 0x5640aaf81880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5640aaf81ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5640aaf81a30 <col:29> 'unsigned int' lvalue ParmVar 0x5640aaf816d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5640aaf81880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5640aaf81920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5640aaf81990 <col:10> Implicit
| `-ConstAttr 0x5640aaf819e8 <col:10> Implicit
|-FunctionDecl 0x5640aaf81c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5640aaf81b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5640aaf81f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5640aaf81f48 <line:77:3, col:34>
|     `-CallExpr 0x5640aaf81f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5640aaf81ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5640aaf81e78 <col:10> '<builtin fn type>' Function 0x5640aaf81ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5640aaf81f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5640aaf81e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5640aaf81b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5640aaf81ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5640aaf81d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5640aaf81df8 <col:10> Implicit
| `-ConstAttr 0x5640aaf81e50 <col:10> Implicit
|-TypedefDecl 0x5640aaf81f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-TypedefDecl 0x5640aaf82018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5640aaf81fe0 '__time_t' sugar
|   |-Typedef 0x5640aaf80c18 '__time_t'
|   `-BuiltinType 0x5640aaf190a0 'long'
|-RecordDecl 0x5640aaf82070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5640aaf82128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5640aaf821b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5640aaf82248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5640aaf82210 '__pid_t' sugar
|   |-Typedef 0x5640aaf80748 '__pid_t'
|   `-BuiltinType 0x5640aaf19080 'int'
|-RecordDecl 0x5640aaf822a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5640aaf82360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5640aaf823b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5640aaf82470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5640aaf824d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-RecordDecl 0x5640aaf82530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5640aaf827c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5640aaf848b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5640aaf82810 'struct cpu_set_t' sugar
|   `-RecordType 0x5640aaf825b0 'cpu_set_t'
|     `-Record 0x5640aaf82530 ''
|-FunctionDecl 0x5640aaf84b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5640aaf84958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5640aaf84a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5640aaf84c38 <line:107:19>
|-FunctionDecl 0x5640aaf84e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5640aaf84ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5640aaf84eb8 <col:69>
|-FunctionDecl 0x5640aaf85030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5640aaf84f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5640aaf850d8 <col:64>
|-FunctionDecl 0x5640aaf85398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5640aaf85140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5640aaf85278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5640aaf85448 <line:113:22>
|-FunctionDecl 0x5640aaf856c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5640aaf854b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5640aaf855a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5640aaf85778 <col:88>
|-FunctionDecl 0x5640aaf85a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5640aaf857e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5640aaf858c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5640aaf85950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5640aaf85b50 <col:62>
|-FunctionDecl 0x5640aaf85cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5640aaf85bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5640aaf85d70 <col:63>
|-FunctionDecl 0x5640aaf85e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5640aaf85f38 <col:47>
|-FunctionDecl 0x5640aaf86040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5640aaf85fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5640aaf860e8 <col:69>
|-FunctionDecl 0x5640aaf861f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5640aaf86158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5640aaf86298 <col:69>
|-FunctionDecl 0x5640aaf86558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5640aaf86300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5640aaf86438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5640aaf86608 <col:88>
|-TypedefDecl 0x5640aaf86698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5640aaf86660 '__clock_t' sugar
|   |-Typedef 0x5640aaf80a58 '__clock_t'
|   `-BuiltinType 0x5640aaf190a0 'long'
|-TypedefDecl 0x5640aaf86728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5640aaf866f0 '__clockid_t' sugar
|   |-Typedef 0x5640aaf80e48 '__clockid_t'
|   `-BuiltinType 0x5640aaf19080 'int'
|-TypedefDecl 0x5640aaf867b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5640aaf86780 '__timer_t' sugar
|   |-Typedef 0x5640aaf80eb8 '__timer_t'
|   `-PointerType 0x5640aaf197a0 'void *'
|     `-BuiltinType 0x5640aaf18fe0 'void'
|-RecordDecl 0x5640aaf86810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5640aaf868e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5640aaf86950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5640aaf869b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5640aaf86a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5640aaf86a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5640aaf86af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5640aaf86b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5640aaf86bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5640aaf86c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5640aaf86c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5640aaf86cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5640aaf86d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5640aaf86e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5640aaf86e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5640aaf86f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5640aaf87100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5640aaf871a0 <col:45>
|-FunctionDecl 0x5640aaf87380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5640aaf87270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5640aaf87428 <col:54>
|-FunctionDecl 0x5640aaf87628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5640aaf87490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5640aaf87508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5640aaf876d8 <line:157:22>
| `-ConstAttr 0x5640aaf87730 <col:63>
|-FunctionDecl 0x5640aaf88560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5640aaf87828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5640aaf88608 <col:56>
|-FunctionDecl 0x5640aaf889b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5640aaf88678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5640aaf886f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5640aaf88770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5640aaf88868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5640aaf88a70 <col:54>
|-RecordDecl 0x5640aaf88ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5640aaf88b78 parent 0x5640aaf18f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5640aaf88dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5640aaf88e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5640aaf88ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5640aaf88f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5640aaf89038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5640aaf89158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5640aaf89100 'struct __locale_struct *'
|   `-ElaboratedType 0x5640aaf89090 'struct __locale_struct' sugar
|     `-RecordType 0x5640aaf88b50 'struct __locale_struct'
|       `-Record 0x5640aaf88ac8 '__locale_struct'
|-TypedefDecl 0x5640aaf89208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5640aaf891d0 '__locale_t' sugar
|   |-Typedef 0x5640aaf89158 '__locale_t'
|   `-PointerType 0x5640aaf89100 'struct __locale_struct *'
|     `-ElaboratedType 0x5640aaf89090 'struct __locale_struct' sugar
|       `-RecordType 0x5640aaf88b50 'struct __locale_struct'
|         `-Record 0x5640aaf88ac8 '__locale_struct'
|-FunctionDecl 0x5640aaf89610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5640aaf89278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5640aaf892f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5640aaf89370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5640aaf89400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5640aaf89478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5640aaf896d8 <col:40>
|-FunctionDecl 0x5640aaf898c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5640aaf897a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5640aaf89970 <col:66>
|-FunctionDecl 0x5640aaf89a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5640aaf899d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5640aaf89b28 <col:69>
|-FunctionDecl 0x5640aaf89d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5640aaf89b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5640aaf89c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5640aaf89e08 <col:52>
|-FunctionDecl 0x5640aaf89fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5640aaf89e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5640aaf89f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5640aaf8a060 <col:55>
|-FunctionDecl 0x5640aaf8a1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5640aaf8a0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5640aaf8a2a0 <col:62>
|-FunctionDecl 0x5640aaf8a418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5640aaf8a308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5640aaf8a4c0 <col:60>
|-FunctionDecl 0x5640aaf8a718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5640aaf8a578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5640aaf8a5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5640aaf8a7c8 <col:44>
|-FunctionDecl 0x5640aaf8a9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5640aaf8a830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5640aaf8a8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5640aaf8aa88 <col:49>
|-VarDecl 0x5640aaf8ab88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5640aaf8ac08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5640aaf8ac88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5640aaf8ad50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5640aaf8ae80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5640aaf8af20 <col:42>
|-VarDecl 0x5640aaf8af90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5640aaf8b010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5640aaf8b198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5640aaf8b088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5640aaf8b240 <col:57>
|-FunctionDecl 0x5640aaf8b350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5640aaf8b2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5640aaf8b3f8 <col:56>
|-FunctionDecl 0x5640aaf8c540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5640aaf8b478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5640aaf8c5e8 <col:59>
|-FunctionDecl 0x5640aaf8c6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5640aaf8c658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5640aaf8c798 <col:48>
| `-ConstAttr 0x5640aaf8c7f0 <col:89>
|-FunctionDecl 0x5640aaf8ca58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5640aaf8c8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5640aaf8c938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5640aaf8ccb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5640aaf8cb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5640aaf8cbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5640aaf8cd68 <col:88>
|-FunctionDecl 0x5640aaf8cf00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5640aaf8cdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5640aaf8ce60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5640aaf8cfb0 <col:88>
|-FunctionDecl 0x5640aaf8d1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5640aaf8d018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5640aaf8d0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5640aaf8d278 <line:208:22>
|-FunctionDecl 0x5640aaf8d5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5640aaf8d2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5640aaf8d360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5640aaf8d3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5640aaf8d480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5640aaf8d8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5640aaf8d6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5640aaf8d7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5640aaf8d998 <col:85>
|-FunctionDecl 0x5640aaf8dd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5640aaf8da00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5640aaf8db38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5640aaf8dc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5640aaf8de40 <col:52>
|-FunctionDecl 0x5640aaf8dfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5640aaf8dea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5640aaf8e060 <col:61>
|-FunctionDecl 0x5640aaf8e560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5640aaf8e0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5640aaf8e148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5640aaf8e278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5640aaf8e368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5640aaf8e620 <col:62>
|-FunctionDecl 0x5640aaf8e838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5640aaf8e688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5640aaf8e718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5640aaf8e8e8 <line:221:22>
|-FunctionDecl 0x5640aaf8e9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5640aaf8e950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5640aaf8ea90 <col:65>
|-TypedefDecl 0x5640aaf8eb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5640aaf19140 'unsigned long'
|-RecordDecl 0x5640aaf8eb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5640aaf8eca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5640aaf8ed08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5640aaf8edb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5640aaf8ed60 'union pthread_attr_t' sugar
|   `-RecordType 0x5640aaf8ebe0 'union pthread_attr_t'
|     `-Record 0x5640aaf8eb58 'pthread_attr_t'
|-RecordDecl 0x5640aaf8ee10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5640aaf8ef88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5640aaf8f000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5640aaf8f0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5640aaf8f050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5640aaf8ee90 'struct __pthread_internal_list'
|     `-Record 0x5640aaf8ee10 '__pthread_internal_list'
|-RecordDecl 0x5640aaf8f120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5640aaf8f1c8 parent 0x5640aaf18f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5640aaf8f2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5640aaf8f308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5640aaf8f370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5640aaf8f3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5640aaf8f440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5640aaf8f4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5640aaf93580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5640aaf93630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5640aaf93720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5640aaf93788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5640aaf93910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5640aaf938b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5640aaf8f1a0 'pthread_mutex_t'
|     `-Record 0x5640aaf8f120 ''
|-RecordDecl 0x5640aaf93980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5640aaf93ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5640aaf93b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5640aaf93be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5640aaf93b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5640aaf93a00 'pthread_mutexattr_t'
|     `-Record 0x5640aaf93980 ''
|-RecordDecl 0x5640aaf93c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5640aaf93cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5640aaf93dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5640aaf93e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5640aaf93e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5640aaf93ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5640aaf93f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5640aaf93fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5640aaf94030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5640aaf94098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5640aaf94150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix006_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix006_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5640aaf94240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5640aaf942a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5640aaf943e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5640aaf94380 'union pthread_cond_t' sugar
|   `-RecordType 0x5640aaf93cd0 'pthread_cond_t'
|     `-Record 0x5640aaf93c50 ''
|-RecordDecl 0x5640aaf94450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5640aaf94590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5640aaf945f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5640aaf946b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5640aaf94650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5640aaf944d0 'pthread_condattr_t'
|     `-Record 0x5640aaf94450 ''
|-TypedefDecl 0x5640aaf94738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5640aaf19120 'unsigned int'
|-TypedefDecl 0x5640aaf947a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5640aaf19080 'int'
|-RecordDecl 0x5640aaf94800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5640aaf948a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5640aaf94970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5640aaf949d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5640aaf94a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5640aaf94aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5640aaf94b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5640aaf94b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5640aaf94be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5640aaf94c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5640aaf94cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5640aaf94d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5640aaf94d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5640aaf94e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix006_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix006_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5640aaf94ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5640aaf94f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5640aaf95090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5640aaf95030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5640aaf94880 'pthread_rwlock_t'
|     `-Record 0x5640aaf94800 ''
|-RecordDecl 0x5640aaf95100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5640aaf95240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5640aaf952a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5640aaf95360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5640aaf95300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5640aaf95180 'pthread_rwlockattr_t'
|     `-Record 0x5640aaf95100 ''
|-TypedefDecl 0x5640aaf953e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5640aaf19084 'volatile int' volatile
|   `-BuiltinType 0x5640aaf19080 'int'
|-RecordDecl 0x5640aaf95440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5640aaf975b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5640aaf97618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5640aaf976d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5640aaf97670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5640aaf954c0 'pthread_barrier_t'
|     `-Record 0x5640aaf95440 ''
|-RecordDecl 0x5640aaf97740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5640aaf97840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5640aaf978a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5640aaf97960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5640aaf97900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5640aaf977c0 'pthread_barrierattr_t'
|     `-Record 0x5640aaf97740 ''
|-TypedefDecl 0x5640aaf97a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5640aaf97a10 'long [8]' 8 
|   `-BuiltinType 0x5640aaf190a0 'long'
|-EnumDecl 0x5640aaf97ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5640aaf97b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5640aaf97be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5640aaf97c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5640aaf97d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5640aaf97d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5640aaf97da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5640aaf97df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5640aaf97e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5640aaf97e68 <col:26> 'int'
| |   `-DeclRefExpr 0x5640aaf97e48 <col:26> 'int' EnumConstant 0x5640aaf97d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5640aaf97f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5640aaf97ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5640aaf97ed0 <col:29> 'int' EnumConstant 0x5640aaf97d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5640aaf97f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5640aaf97f78 <col:30> 'int'
| |   `-DeclRefExpr 0x5640aaf97f58 <col:30> 'int' EnumConstant 0x5640aaf97da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5640aaf98018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5640aaf98000 <col:27> 'int'
|     `-DeclRefExpr 0x5640aaf97fe0 <col:27> 'int' EnumConstant 0x5640aaf97e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5640aaf98068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5640aaf98138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5640aaf981c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5640aaf981a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5640aaf98188 <col:30> 'int' EnumConstant 0x5640aaf98138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5640aaf98210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5640aaf98298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5640aaf98280 <col:29> 'int'
|     `-DeclRefExpr 0x5640aaf98260 <col:29> 'int' EnumConstant 0x5640aaf98210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5640aaf982e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5640aaf983b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5640aaf98408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5640aaf98458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5640aaf984a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5640aaf985c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5640aaf98610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5640aaf98660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5640aaf986e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5640aaf986d0 <col:31> 'int'
|     `-DeclRefExpr 0x5640aaf986b0 <col:31> 'int' EnumConstant 0x5640aaf985c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5640aaf98738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5640aaf98808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5640aaf98858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5640aaf988a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5640aaf98978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5640aaf989c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5640aaf98a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5640aaf98ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5640aaf98b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5640aaf98b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5640aaf98dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5640aaf98e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5640aaf98e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5640aaf98fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5640aaf99008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5640aaf990d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5640aaf99128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5640aaf99178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5640aaf99248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5640aaf99298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5640aaf998f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5640aaf99390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5640aaf994a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640aaf996e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5640aaf99760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5640aaf999b8 <col:47>
| |-NonNullAttr 0x5640aaf99a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5640aaf99a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5640aaf99b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5640aaf99aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5640aaf99dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5640aaf99c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5640aaf99ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5640aaf99f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5640aaf99e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5640aaf9a040 <col:60>
|-FunctionDecl 0x5640aaf9a190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5640aaf9a230 <col:54>
| `-ConstAttr 0x5640aaf9a288 <col:95>
|-FunctionDecl 0x5640aaf9a458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5640aaf9a2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5640aaf9a338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5640aaf9a508 <line:394:19>
| `-ConstAttr 0x5640aaf9a560 <col:60>
|-FunctionDecl 0x5640aaf9af68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5640aaf9ae30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5640aaf9b010 <col:71>
| `-NonNullAttr 0x5640aaf9b068 <col:112, col:126> 1
|-FunctionDecl 0x5640aaf9b170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5640aaf9b0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5640aaf9b218 <line:397:22>
| `-NonNullAttr 0x5640aaf9b270 <col:63, col:77> 1
|-FunctionDecl 0x5640aaf9b498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5640aaf9b2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5640aaf9b338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5640aaf9b548 <line:400:22>
| `-NonNullAttr 0x5640aaf9b5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aaf9b7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5640aaf9b5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5640aaf9b668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5640aaf9b858 <line:403:22>
| `-NonNullAttr 0x5640aaf9b8b0 <col:63, col:77> 1
|-FunctionDecl 0x5640aaf9bb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5640aaf9b8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5640aaf9b9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5640aaf9bbb8 <line:406:22>
| `-NonNullAttr 0x5640aaf9bc10 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aaf9ce48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5640aaf9bc58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5640aaf9bcd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5640aaf9cef8 <line:409:22>
| `-NonNullAttr 0x5640aaf9cf50 <col:63, col:77> 1
|-FunctionDecl 0x5640aaf9d188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5640aaf9cf98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640aaf9d028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5640aaf9d238 <line:412:22>
| `-NonNullAttr 0x5640aaf9d290 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aaf9d4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5640aaf9d2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640aaf9d368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5640aaf9d578 <col:37>
| `-NonNullAttr 0x5640aaf9d5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5640aaf9d7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640aaf9d618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640aaf9d698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5640aaf9d868 <line:418:22>
| `-NonNullAttr 0x5640aaf9d8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aaf9da48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5640aaf9d908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5640aaf9d988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5640aaf9daf8 <line:420:22>
| `-NonNullAttr 0x5640aaf9db50 <col:63, col:77> 1
|-FunctionDecl 0x5640aaf9dcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640aaf9db98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640aaf9dc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5640aaf9dda8 <line:423:22>
| `-NonNullAttr 0x5640aaf9ee30 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aaf9efb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5640aaf9ee78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5640aaf9eef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5640aaf9f068 <line:426:22>
| `-NonNullAttr 0x5640aaf9f0c0 <col:63, col:77> 1
|-FunctionDecl 0x5640aaf9f268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640aaf9f108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640aaf9f188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5640aaf9f318 <line:429:22>
| `-NonNullAttr 0x5640aaf9f370 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aaf9f4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5640aaf9f3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5640aaf9f438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5640aaf9f5a8 <line:431:22>
| `-NonNullAttr 0x5640aaf9f600 <col:63, col:77> 1
|-FunctionDecl 0x5640aaf9f828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5640aaf9f648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640aaf9f6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5640aaf9f8d8 <line:434:22>
| |-NonNullAttr 0x5640aaf9f930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5640aaf9f968 <col:100> "" ""
|-FunctionDecl 0x5640aaf9fb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5640aaf9f9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5640aaf9fa38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5640aaf9fc28 <line:437:22>
| |-NonNullAttr 0x5640aaf9fc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5640aaf9fcb8 <col:97> "" ""
|-FunctionDecl 0x5640aaf9feb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5640aaf9fd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640aaf9fd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5640aaf9ff68 <line:440:22>
| `-NonNullAttr 0x5640aaf9ffc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aafa0140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5640aafa0008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5640aafa0080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5640aafa01f0 <line:443:22>
| `-NonNullAttr 0x5640aafa0248 <col:63, col:77> 1
|-FunctionDecl 0x5640aafa0538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5640aafa0298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640aafa0318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5640aafa0390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5640aafa05f0 <line:447:22>
| `-NonNullAttr 0x5640aafa0648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5640aafa08f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5640aafa06a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5640aafa0720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5640aafa0798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5640aafa09b0 <col:43>
| `-NonNullAttr 0x5640aafa0a08 <col:84, col:98> 1
|-FunctionDecl 0x5640aafa0cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5640aafa0a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5640aafa0ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5640aafa0b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5640aafa0d80 <line:452:22>
| `-NonNullAttr 0x5640aafa0dd8 <col:63, col:77> 3
|-FunctionDecl 0x5640aafa10e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5640aafa0e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5640aafa0ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5640aafa0f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5640aafa11a0 <line:456:22>
| `-NonNullAttr 0x5640aafa11f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5640aafa13e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5640aafa1248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5640aafa12c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5640aafa1498 <line:458:22>
|-FunctionDecl 0x5640aafa1868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5640aafa1560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5640aafa1700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5640aafa1918 <col:52, col:69> 1 2
|-FunctionDecl 0x5640aafa1ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5640aafa19a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5640aafa1a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5640aafa1ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5640aafa1b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5640aafa1c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5640aafa1e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5640aafa1d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5640aafa1fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5640aafa2040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5640aafa20e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5640aafa21d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5640aafa2240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5640aafa2410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix006_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5640aafa2508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5640aafa25c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5640aafa2560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5640aafa20c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5640aafa2040 ''
| `-AlignedAttr 0x5640aafa2618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5640aafa2690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5640aafa27f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5640aafa2858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5640aafa28c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5640aafa2928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5640aafa2b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5640aafa2a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5640aafa2c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5640aafa2be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5640aafa2e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5640aafa2d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5640aafa2f18 <line:487:22>
|-RecordDecl 0x5640aafa2f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5640aafa3288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5640aafa30e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5640aafa3168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5640aafa3338 <col:86>
| `-ReturnsTwiceAttr 0x5640aafa3390 <col:12> Implicit
|-FunctionDecl 0x5640aafa36b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5640aafa3460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5640aafa3570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5640aafa3768 <line:493:22>
| `-NonNullAttr 0x5640aafa37c0 <col:63, col:77> 1
|-FunctionDecl 0x5640aafa3938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5640aafa3808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5640aafa39e0 <line:495:22>
| `-NonNullAttr 0x5640aafa3a38 <col:63, col:77> 1
|-FunctionDecl 0x5640aafa3b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5640aafa3a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5640aafa3be8 <line:497:22>
| `-NonNullAttr 0x5640aafa3c40 <col:52, col:66> 1
|-FunctionDecl 0x5640aafa3d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5640aafa3c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5640aafa3de8 <line:499:22>
| `-NonNullAttr 0x5640aafa3e40 <col:52, col:66> 1
|-FunctionDecl 0x5640aafa4088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5640aafa3e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5640aafa3f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5640aafa4138 <col:36>
| `-NonNullAttr 0x5640aafa4190 <col:66, col:83> 1 2
|-FunctionDecl 0x5640aafa4290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5640aafa41d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5640aafa4338 <line:504:22>
| `-NonNullAttr 0x5640aafa4390 <col:52, col:66> 1
|-FunctionDecl 0x5640aafa4628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640aafa4440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5640aafa44c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5640aafa46d8 <line:508:22>
| `-NonNullAttr 0x5640aafa4730 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aafa49f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5640aafa4778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5640aafa47f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5640aafa4878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5640aafa4ab0 <line:512:22>
| `-NonNullAttr 0x5640aafa4b08 <col:63, col:80> 1 3
|-FunctionDecl 0x5640aafa4c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5640aafa4b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5640aafa4cb8 <line:514:22>
| `-NonNullAttr 0x5640aafa4d10 <col:63, col:77> 1
|-FunctionDecl 0x5640aafa4f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5640aafa4dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5640aafa4fe0 <line:516:22>
| `-NonNullAttr 0x5640aafa5038 <col:63, col:77> 1
|-FunctionDecl 0x5640aafa5140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5640aafa5088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5640aafa51e8 <line:518:22>
| `-NonNullAttr 0x5640aafa5240 <col:63, col:77> 1
|-FunctionDecl 0x5640aafa5468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640aafa5288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5640aafa5308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5640aafa5518 <line:522:22>
| `-NonNullAttr 0x5640aafa5570 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aafa5778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5640aafa55b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5640aafa5638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5640aafa5828 <line:525:22>
| `-NonNullAttr 0x5640aafa5880 <col:63, col:77> 1
|-FunctionDecl 0x5640aafa5a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640aafa58c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5640aafa5948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5640aafa5ad8 <line:528:22>
| `-NonNullAttr 0x5640aafa5b30 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aafa5cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5640aafa5b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5640aafa5bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5640aafa5d68 <line:530:22>
| `-NonNullAttr 0x5640aafa5dc0 <col:63, col:77> 1
|-FunctionDecl 0x5640aafa6f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640aafa5e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5640aafa6eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5640aafa7040 <line:534:22>
| `-NonNullAttr 0x5640aafa7098 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aafa7228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5640aafa70e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5640aafa7168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5640aafa72d8 <line:537:22>
| `-NonNullAttr 0x5640aafa7330 <col:63, col:77> 1
|-FunctionDecl 0x5640aafa74d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640aafa7378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5640aafa73f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5640aafa7588 <line:541:22>
| `-NonNullAttr 0x5640aafa75e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aafa7768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5640aafa7628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5640aafa76a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5640aafa7818 <line:544:22>
| `-NonNullAttr 0x5640aafa7870 <col:63, col:77> 1
|-FunctionDecl 0x5640aafa7a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5640aafa78b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5640aafa7938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5640aafa7b08 <line:547:22>
| `-NonNullAttr 0x5640aafa7b60 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aafa7ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5640aafa7ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5640aafa7c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5640aafa7d98 <line:550:22>
| `-NonNullAttr 0x5640aafa7df0 <col:63, col:77> 1
|-FunctionDecl 0x5640aafa9168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5640aafa8f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5640aafa9020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5640aafa9218 <col:29>
| `-NonNullAttr 0x5640aafa9270 <col:70, col:84> 1
|-FunctionDecl 0x5640aafa93e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5640aafa92b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5640aafa9490 <line:555:22>
| `-NonNullAttr 0x5640aafa94e8 <col:63, col:77> 1
|-FunctionDecl 0x5640aafa95f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5640aafa9538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5640aafa9698 <line:557:22>
| `-NonNullAttr 0x5640aafa96f0 <col:52, col:66> 1
|-FunctionDecl 0x5640aafa97f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5640aafa9738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5640aafa9898 <line:559:19>
| `-NonNullAttr 0x5640aafa98f0 <col:49, col:63> 1
|-FunctionDecl 0x5640aafa9b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5640aafa9938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5640aafa99c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5640aafa9bd8 <col:39>
| `-NonNullAttr 0x5640aafa9c30 <col:69, col:86> 1 2
|-FunctionDecl 0x5640aafa9d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5640aafa9c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5640aafa9dd8 <line:564:22>
| `-NonNullAttr 0x5640aafa9e30 <col:52, col:66> 1
|-FunctionDecl 0x5640aafa9f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5640aafa9ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5640aafaa040 <line:566:22>
| `-NonNullAttr 0x5640aafaa098 <col:52, col:66> 1
|-FunctionDecl 0x5640aafaa258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5640aafaa0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5640aafaa178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5640aafaa308 <col:39>
| `-NonNullAttr 0x5640aafaa360 <col:69, col:86> 1 2
|-FunctionDecl 0x5640aafaa460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5640aafaa3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5640aafaa508 <line:571:22>
| `-NonNullAttr 0x5640aafaa560 <col:52, col:66> 1
|-FunctionDecl 0x5640aafaa748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5640aafaa610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5640aafaa7f0 <line:573:22>
| `-NonNullAttr 0x5640aafaa848 <col:63, col:77> 1
|-FunctionDecl 0x5640aafaa950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5640aafaa898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5640aafaa9f8 <line:575:22>
| `-NonNullAttr 0x5640aafaaa50 <col:63, col:77> 1
|-FunctionDecl 0x5640aafaac78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640aafaaa98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5640aafaab18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5640aafaad28 <line:579:22>
| `-NonNullAttr 0x5640aafaad80 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aafaafa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5640aafaadc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5640aafaae48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5640aafab058 <line:582:22>
| `-NonNullAttr 0x5640aafab0b0 <col:63, col:77> 1
|-FunctionDecl 0x5640aafab258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640aafab0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5640aafab178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5640aafab308 <line:586:22>
| `-NonNullAttr 0x5640aafab360 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aafab4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5640aafab3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5640aafab428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5640aafab598 <col:36>
| `-NonNullAttr 0x5640aafab5f0 <col:77, col:91> 1
|-FunctionDecl 0x5640aafab928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5640aafab6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5640aafab7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5640aafab9d8 <line:591:22>
| `-NonNullAttr 0x5640aafaba30 <col:63, col:77> 1
|-FunctionDecl 0x5640aafabba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5640aafaba78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5640aafabc50 <line:593:22>
| `-NonNullAttr 0x5640aafabca8 <col:63, col:77> 1
|-FunctionDecl 0x5640aafabdb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5640aafabcf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5640aafabe58 <line:595:22>
| `-NonNullAttr 0x5640aafabeb0 <col:52, col:66> 1
|-FunctionDecl 0x5640aafabfc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5640aafabf10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5640aafac070 <line:597:22>
| `-NonNullAttr 0x5640aafac0c8 <col:52, col:66> 1
|-FunctionDecl 0x5640aafac2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5640aafac118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5640aafac190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5640aafac3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5640aafac6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5640aafac428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5640aafac4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5640aafac530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5640aafac790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5640aafac9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5640aafac870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5640aafaca50 <line:606:22>
| `-NonNullAttr 0x5640aafacaa8 <col:63, col:77> 1
|-FunctionDecl 0x5640aafacbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5640aafacaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5640aafacc58 <line:608:22>
| `-NonNullAttr 0x5640aafaccb0 <col:63, col:77> 1
|-FunctionDecl 0x5640aafacf10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640aafaccf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5640aafacd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5640aafacfc0 <line:612:22>
| `-NonNullAttr 0x5640aafad018 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aafad228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5640aafad068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5640aafad0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5640aafad2d8 <col:37>
| `-NonNullAttr 0x5640aafad330 <col:78, col:92> 1
|-FunctionDecl 0x5640aafad548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5640aafad378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5640aafad420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5640aafad5f8 <line:618:22>
| `-NonNullAttr 0x5640aafad650 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aafad818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5640aafad698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5640aafad710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5640aafad8c8 <line:621:22>
| `-NonNullAttr 0x5640aafad920 <col:63, col:77> 1
|-FunctionDecl 0x5640aafadbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5640aafada00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5640aafada80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5640aafadc78 <line:623:22>
| `-NonNullAttr 0x5640aafadcd0 <col:63, col:77> 1
|-FunctionDecl 0x5640aafade48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5640aafadd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5640aafadf20 <line:625:22>
| `-NonNullAttr 0x5640aafadf78 <col:63, col:77> 1
|-FunctionDecl 0x5640aafae080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5640aafadfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5640aafae128 <line:627:22>
| `-NonNullAttr 0x5640aafae180 <col:52, col:66> 1
|-FunctionDecl 0x5640aafae280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5640aafae1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5640aafae328 <line:629:22>
| `-NonNullAttr 0x5640aafae380 <col:52, col:66> 1
|-FunctionDecl 0x5640aafae480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5640aafae3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5640aafae528 <line:631:22>
| `-NonNullAttr 0x5640aafae580 <col:52, col:66> 1
|-FunctionDecl 0x5640aafae958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5640aafae660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5640aafae770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5640aafae7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5640aafaea10 <line:635:22>
| `-NonNullAttr 0x5640aafaea68 <col:63, col:77> 1
|-FunctionDecl 0x5640aafaebe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5640aafaeab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5640aafaec90 <line:637:22>
| `-NonNullAttr 0x5640aafaece8 <col:63, col:77> 1
|-FunctionDecl 0x5640aafaedf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5640aafaed38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5640aafaee98 <line:639:22>
| `-NonNullAttr 0x5640aafaeef0 <col:52, col:66> 1
|-FunctionDecl 0x5640aafaf0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5640aafaefb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5640aafaf190 <line:641:22>
| `-NonNullAttr 0x5640aafaf1e8 <col:63, col:77> 1
|-FunctionDecl 0x5640aafaf2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5640aafaf238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5640aafaf398 <line:643:22>
| `-NonNullAttr 0x5640aafaf3f0 <col:63, col:77> 1
|-FunctionDecl 0x5640aafaf618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640aafaf438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5640aafaf4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5640aafaf6c8 <line:647:22>
| `-NonNullAttr 0x5640aafaf720 <col:63, col:80> 1 2
|-FunctionDecl 0x5640aafaf928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5640aafaf768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5640aafaf7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5640aafaf9d8 <line:650:22>
| `-NonNullAttr 0x5640aafafa30 <col:63, col:77> 1
|-FunctionDecl 0x5640aafafd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5640aafafb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5640aafafc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5640aafafe28 <line:653:22>
| `-NonNullAttr 0x5640aafafe80 <col:63, col:77> 1
|-FunctionDecl 0x5640aafaffe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5640aafafec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5640aafb0090 <col:69>
|-FunctionDecl 0x5640aafb0208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5640aafb00f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5640aafb02b0 <col:72>
|-FunctionDecl 0x5640aafb04e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5640aafb0318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5640aafb03c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5640aafb0598 <col:44>
|-FunctionDecl 0x5640aafb07b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5640aafb0600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5640aafb0678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5640aafb0868 <line:660:22>
| `-NonNullAttr 0x5640aafb08c0 <col:63, col:77> 2
|-FunctionDecl 0x5640aafb0d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5640aafb09a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5640aafb0ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5640aafb0bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5640aafb0dc0 <col:47>
|-FunctionDecl 0x5640aafb1f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5640aafb0e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5640aafb20b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5640aafb2020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5640aafb2210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5640aafb2178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5640aafb22d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5640aafb2398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5640aafb2458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5640aafb2510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5640aafb2590 prev 0x5640aafb2510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5640aafb25f8 <col:24> 'int' 0
|-VarDecl 0x5640aafb2630 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5640aafb26b0 prev 0x5640aafb2630 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5640aafb2718 <col:27> 'int' 0
|-VarDecl 0x5640aafb2750 <line:675:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5640aafb27d0 prev 0x5640aafb2750 <line:676:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5640aafb2838 <col:27> 'int' 0
|-VarDecl 0x5640aafb2870 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5640aafb28f0 prev 0x5640aafb2870 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5640aafb2958 <col:27> 'int' 0
|-VarDecl 0x5640aafb2990 <line:679:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x5640aafb2a10 prev 0x5640aafb2990 <line:680:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x5640aafb2a78 <col:27> 'int' 0
|-VarDecl 0x5640aafb2aa8 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5640aafb2b20 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5640aafb2ba0 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x5640aafb2c20 prev 0x5640aafb2ba0 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5640aafb2c88 <col:9> 'int' 0
|-VarDecl 0x5640aafb2cc0 <line:685:1, col:5> col:5 used y 'int'
|-VarDecl 0x5640aafb2d40 prev 0x5640aafb2cc0 <line:686:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5640aafb2da8 <col:9> 'int' 0
|-VarDecl 0x5640aafb2de0 <line:687:1, col:5> col:5 used z 'int'
|-VarDecl 0x5640aafb2e60 prev 0x5640aafb2de0 <line:688:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5640aafb2ec8 <col:9> 'int' 0
|-VarDecl 0x5640aafb2ef8 <line:689:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x5640aafb2f88 <line:690:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x5640aafb3000 <line:691:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x5640aafb3078 <line:692:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x5640aafb30f0 <line:693:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x5640aafb3168 <line:694:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x5640aafb31e0 <line:695:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x5640aafb3258 <line:696:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x5640aafb32d0 <line:697:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x5640aafb3348 <line:698:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x5640aafb33c0 <line:699:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x5640aafb3440 <line:700:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x5640aafb34c0 <line:701:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x5640aafb3538 <line:702:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x5640aafb35b8 <line:703:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x5640aafb3630 <line:704:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x5640aafb36a8 <line:705:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5640aafb3720 <line:706:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5640aafb3838 prev 0x5640aafb1f60 <line:707:1, line:735:1> line:707:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5640aafb37a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5640aafb5088 <line:708:1, line:735:1>
|   |-CallExpr 0x5640aafb3948 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640aafb3930 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb38e0 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640aafb39c0 <line:710:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5640aafb3968 <col:3> 'int' lvalue Var 0x5640aafb35b8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5640aafb39a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640aafb3988 <col:15> 'int' lvalue Var 0x5640aafb34c0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5640aafb3a20 <line:711:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5640aafb39e0 <col:3> 'int' lvalue Var 0x5640aafb34c0 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x5640aafb3a00 <col:15> 'int' 1
|   |-BinaryOperator 0x5640aafb3a98 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb3a40 <col:3> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb3a80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640aafb3a60 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5640aafb3b30 <line:713:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb3ab8 <col:3> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5640aafb3b08 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5640aafb3ad8 <col:27> 'int' 1
|   |-CallExpr 0x5640aafb3cb8 <line:714:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5640aafb3ca0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5640aafb3b50 <col:3> 'void (int)' Function 0x5640aaf590d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5640aafb3c50 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5640aafb3c30 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5640aafb3c10 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5640aafb3bc8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5640aafb3bb0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5640aafb3b70 <col:23> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5640aafb3bf8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5640aafb3be0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5640aafb3b90 <col:41> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5640aafb3d38 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb3ce0 <col:3> '_Bool' lvalue Var 0x5640aafb31e0 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb3d20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640aafb3d00 <col:20> '_Bool' lvalue Var 0x5640aafb3000 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5640aafb3db0 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb3d58 <col:3> '_Bool' lvalue Var 0x5640aafb3258 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb3d98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640aafb3d78 <col:20> '_Bool' lvalue Var 0x5640aafb3078 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5640aafb3e28 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb3dd0 <col:3> '_Bool' lvalue Var 0x5640aafb32d0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb3e10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640aafb3df0 <col:20> '_Bool' lvalue Var 0x5640aafb30f0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5640aafb3ea0 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb3e48 <col:3> '_Bool' lvalue Var 0x5640aafb3348 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb3e88 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640aafb3e68 <col:20> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5640aafb3f38 <line:719:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb3ec0 <col:3> '_Bool' lvalue Var 0x5640aafb3078 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5640aafb3f10 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5640aafb3ee0 <col:27> 'int' 1
|   |-CallExpr 0x5640aafb3fb8 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640aafb3fa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb3f80 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640aafb4010 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640aafb3ff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb3fd8 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640aafb4070 <line:722:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5640aafb4030 <col:3> 'int' lvalue Var 0x5640aafb2c20 'x' 'int'
|   | `-IntegerLiteral 0x5640aafb4050 <col:7> 'int' 1
|   |-CallExpr 0x5640aafb40c8 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640aafb40b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb4090 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640aafb4120 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640aafb4108 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb40e8 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640aafb4408 <line:725:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5640aafb4140 <col:3> 'int' lvalue Var 0x5640aafb2e60 'z' 'int'
|   | `-ConditionalOperator 0x5640aafb43d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5640aafb4200 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5640aafb41b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5640aafb41a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5640aafb4160 <col:7> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5640aafb41e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5640aafb41d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5640aafb4180 <col:25> '_Bool' lvalue Var 0x5640aafb3078 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5640aafb43c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640aafb4220 <col:42> 'int' lvalue Var 0x5640aafb34c0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5640aafb43a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5640aafb4370 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5640aafb42e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5640aafb4298 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5640aafb4280 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5640aafb4240 <col:55> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5640aafb42c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5640aafb42b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5640aafb4260 <col:73> '_Bool' lvalue Var 0x5640aafb3258 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5640aafb4340 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5640aafb4300 <col:90> 'int' lvalue Var 0x5640aafb35b8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5640aafb4358 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640aafb4320 <col:102> 'int' lvalue Var 0x5640aafb2e60 'z' 'int'
|   |-BinaryOperator 0x5640aafb4610 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb4428 <col:3> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb45f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640aafb45c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640aafb44e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5640aafb44a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5640aafb4488 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5640aafb4448 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640aafb44d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5640aafb44b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5640aafb4468 <col:38> '_Bool' lvalue Var 0x5640aafb3078 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5640aafb4580 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640aafb4538 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640aafb4508 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5640aafb45b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640aafb4598 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640aafb4560 <col:66> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5640aafb48f8 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb4630 <col:3> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb48e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640aafb48b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640aafb47d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640aafb46f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5640aafb46a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5640aafb4690 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5640aafb4650 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640aafb46d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5640aafb46c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5640aafb4670 <col:38> '_Bool' lvalue Var 0x5640aafb3078 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5640aafb47b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5640aafb4768 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5640aafb4750 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5640aafb4710 <col:56> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5640aafb4798 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5640aafb4780 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5640aafb4730 <col:74> '_Bool' lvalue Var 0x5640aafb3258 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5640aafb4868 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640aafb4820 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640aafb47f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5640aafb4898 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640aafb4880 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640aafb4848 <col:102> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5640aafb4b00 <line:728:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb4918 <col:3> '_Bool' lvalue Var 0x5640aafb3078 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb4ae8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640aafb4ab8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640aafb49d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5640aafb4990 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5640aafb4978 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5640aafb4938 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640aafb49c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5640aafb49a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5640aafb4958 <col:38> '_Bool' lvalue Var 0x5640aafb3078 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5640aafb4a70 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640aafb4a28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640aafb49f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5640aafb4aa0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640aafb4a88 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640aafb4a50 <col:66> '_Bool' lvalue Var 0x5640aafb3078 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5640aafb4de8 <line:729:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb4b20 <col:3> '_Bool' lvalue Var 0x5640aafb3258 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb4dd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640aafb4da0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640aafb4cc0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640aafb4be0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5640aafb4b98 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5640aafb4b80 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5640aafb4b40 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640aafb4bc8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5640aafb4bb0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5640aafb4b60 <col:38> '_Bool' lvalue Var 0x5640aafb3078 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5640aafb4ca0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5640aafb4c58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5640aafb4c40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5640aafb4c00 <col:56> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5640aafb4c88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5640aafb4c70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5640aafb4c20 <col:74> '_Bool' lvalue Var 0x5640aafb3258 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5640aafb4d58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640aafb4d10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640aafb4ce0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5640aafb4d88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640aafb4d70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640aafb4d38 <col:102> '_Bool' lvalue Var 0x5640aafb3258 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5640aafb4e40 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640aafb4e28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb4e08 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640aafb4e98 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640aafb4e80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb4e60 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640aafb4f50 <line:732:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5640aafb4eb8 <col:3> 'int' lvalue Var 0x5640aafb2590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5640aafb4f30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5640aafb4f18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640aafb4ed8 <col:22> 'int' lvalue Var 0x5640aafb2590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5640aafb4ef8 <col:41> 'int' 1
|   |-CallExpr 0x5640aafb4fc8 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640aafb4fb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb4f90 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5640aafb5078 <line:734:3, col:36>
|     `-CallExpr 0x5640aafb5058 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5640aafb5040 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5640aafb4fe8 <col:10> 'void *(void)' Function 0x5640aaf58e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5640aafb5218 prev 0x5640aafb20b8 <line:736:1, line:758:1> line:736:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5640aafb5180 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5640aafb6580 <line:737:1, line:758:1>
|   |-CallExpr 0x5640aafb52f8 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640aafb52e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb52c0 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640aafb5358 <line:739:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5640aafb5318 <col:3> 'int' lvalue Var 0x5640aafb2c20 'x' 'int'
|   | `-IntegerLiteral 0x5640aafb5338 <col:7> 'int' 2
|   |-CallExpr 0x5640aafb53b0 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640aafb5398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb5378 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640aafb5408 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640aafb53f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb53d0 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640aafb5480 <line:742:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5640aafb5428 <col:3> 'int' lvalue Var 0x5640aafb26b0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5640aafb5468 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640aafb5448 <col:25> 'int' lvalue Var 0x5640aafb2c20 'x' 'int'
|   |-CallExpr 0x5640aafb54d8 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640aafb54c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb54a0 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640aafb5530 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640aafb5518 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb54f8 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640aafb55a8 <line:745:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5640aafb5550 <col:3> 'int' lvalue Var 0x5640aafb27d0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5640aafb5590 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640aafb5570 <col:25> 'int' lvalue Var 0x5640aafb2d40 'y' 'int'
|   |-CallExpr 0x5640aafb5600 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640aafb55e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb55c8 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640aafb5658 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640aafb5640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb5620 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640aafb5940 <line:748:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5640aafb5678 <col:3> 'int' lvalue Var 0x5640aafb2e60 'z' 'int'
|   | `-ConditionalOperator 0x5640aafb5910 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5640aafb5738 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5640aafb56f0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5640aafb56d8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5640aafb5698 <col:7> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5640aafb5720 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5640aafb5708 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5640aafb56b8 <col:25> '_Bool' lvalue Var 0x5640aafb30f0 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5640aafb58f8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640aafb5758 <col:42> 'int' lvalue Var 0x5640aafb34c0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5640aafb58d8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5640aafb58a8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5640aafb5818 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5640aafb57d0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5640aafb57b8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5640aafb5778 <col:55> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5640aafb5800 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5640aafb57e8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5640aafb5798 <col:73> '_Bool' lvalue Var 0x5640aafb32d0 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5640aafb5878 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5640aafb5838 <col:90> 'int' lvalue Var 0x5640aafb35b8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5640aafb5890 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640aafb5858 <col:102> 'int' lvalue Var 0x5640aafb2e60 'z' 'int'
|   |-BinaryOperator 0x5640aafb5b48 <line:749:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb5960 <col:3> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb5b30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640aafb5b00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640aafb5a20 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5640aafb59d8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5640aafb59c0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5640aafb5980 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640aafb5a08 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5640aafb59f0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5640aafb59a0 <col:38> '_Bool' lvalue Var 0x5640aafb30f0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640aafb5ab8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640aafb5a70 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640aafb5a40 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5640aafb5ae8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640aafb5ad0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640aafb5a98 <col:66> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5640aafb5e30 <line:750:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb5b68 <col:3> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb5e18 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640aafb5de8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640aafb5d08 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640aafb5c28 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5640aafb5be0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5640aafb5bc8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5640aafb5b88 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640aafb5c10 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5640aafb5bf8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5640aafb5ba8 <col:38> '_Bool' lvalue Var 0x5640aafb30f0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5640aafb5ce8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5640aafb5ca0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5640aafb5c88 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5640aafb5c48 <col:56> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5640aafb5cd0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5640aafb5cb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5640aafb5c68 <col:74> '_Bool' lvalue Var 0x5640aafb32d0 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640aafb5da0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640aafb5d58 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640aafb5d28 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5640aafb5dd0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640aafb5db8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640aafb5d80 <col:102> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5640aafb6050 <line:751:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb5e50 <col:3> '_Bool' lvalue Var 0x5640aafb30f0 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb6038 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640aafb6008 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640aafb5f10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5640aafb5ec8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5640aafb5eb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5640aafb5e70 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640aafb5ef8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5640aafb5ee0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5640aafb5e90 <col:38> '_Bool' lvalue Var 0x5640aafb30f0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640aafb5fc0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640aafb5f60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640aafb5f30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5640aafb5ff0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640aafb5fd8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640aafb5fa0 <col:66> '_Bool' lvalue Var 0x5640aafb30f0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5640aafb6338 <line:752:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb6070 <col:3> '_Bool' lvalue Var 0x5640aafb32d0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb6320 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640aafb62f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640aafb6210 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640aafb6130 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5640aafb60e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5640aafb60d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5640aafb6090 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640aafb6118 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5640aafb6100 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5640aafb60b0 <col:38> '_Bool' lvalue Var 0x5640aafb30f0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5640aafb61f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5640aafb61a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5640aafb6190 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5640aafb6150 <col:56> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5640aafb61d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5640aafb61c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5640aafb6170 <col:74> '_Bool' lvalue Var 0x5640aafb32d0 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640aafb62a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640aafb6260 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640aafb6230 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5640aafb62d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640aafb62c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640aafb6288 <col:102> '_Bool' lvalue Var 0x5640aafb32d0 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5640aafb6390 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640aafb6378 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb6358 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640aafb63e8 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640aafb63d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb63b0 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640aafb64a0 <line:755:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5640aafb6408 <col:3> 'int' lvalue Var 0x5640aafb2590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5640aafb6480 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5640aafb6468 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640aafb6428 <col:22> 'int' lvalue Var 0x5640aafb2590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5640aafb6448 <col:41> 'int' 1
|   |-CallExpr 0x5640aafb64f8 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640aafb64e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb64c0 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5640aafb6570 <line:757:3, col:36>
|     `-CallExpr 0x5640aafb6550 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5640aafb6538 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5640aafb6518 <col:10> 'void *(void)' Function 0x5640aaf58e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5640aafb66e0 prev 0x5640aafb2210 <line:759:1, line:794:1> line:759:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5640aafb6648 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5640aafba3f0 <line:760:1, line:794:1>
|   |-CallExpr 0x5640aafb67c0 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640aafb67a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb6788 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640aafb6820 <line:762:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5640aafb67e0 <col:3> 'int' lvalue Var 0x5640aafb2d40 'y' 'int'
|   | `-IntegerLiteral 0x5640aafb6800 <col:7> 'int' 1
|   |-CallExpr 0x5640aafb6878 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640aafb6860 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb6840 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640aafb68d0 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640aafb68b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb6898 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640aafb6948 <line:765:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5640aafb68f0 <col:3> 'int' lvalue Var 0x5640aafb28f0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5640aafb6930 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640aafb6910 <col:25> 'int' lvalue Var 0x5640aafb2d40 'y' 'int'
|   |-CallExpr 0x5640aafb69a0 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640aafb6988 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb6968 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640aafb69f8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640aafb69e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb69c0 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640aafb6aa8 <line:768:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb6a18 <col:3> '_Bool' lvalue Var 0x5640aafb36a8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb6a90 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5640aafb6a70 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5640aafb6a58 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5640aafb6a38 <col:19> 'void *(void)' Function 0x5640aaf58e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5640aafb6b58 <line:769:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb6ac8 <col:3> '_Bool' lvalue Var 0x5640aafb3720 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb6b40 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5640aafb6b20 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5640aafb6b08 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5640aafb6ae8 <col:19> 'void *(void)' Function 0x5640aaf58e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5640aafb6bd0 <line:770:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb6b78 <col:3> '_Bool' lvalue Var 0x5640aafb2ef8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb6bb8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640aafb6b98 <col:21> '_Bool' lvalue Var 0x5640aafb3720 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5640aafb6c48 <line:771:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5640aafb6bf0 <col:3> 'int' lvalue Var 0x5640aafb2f88 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5640aafb6c30 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640aafb6c10 <col:15> 'int' lvalue Var 0x5640aafb2e60 'z' 'int'
|   |-BinaryOperator 0x5640aafb7098 <line:772:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5640aafb6c68 <col:3> 'int' lvalue Var 0x5640aafb2e60 'z' 'int'
|   | `-ConditionalOperator 0x5640aafb7068 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5640aafb6e78 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5640aafb6d98 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5640aafb6cc0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5640aafb6ca8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5640aafb6c88 <col:8> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5640aafb6d78 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5640aafb6d10 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5640aafb6cf8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5640aafb6cd8 <col:27> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5640aafb6d60 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5640aafb6d48 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5640aafb6d28 <col:46> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5640aafb6e58 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5640aafb6df0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5640aafb6dd8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5640aafb6db8 <col:65> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5640aafb6e40 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5640aafb6e28 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5640aafb6e08 <col:84> '_Bool' lvalue Var 0x5640aafb3348 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5640aafb7050 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640aafb6e98 <col:101> 'int' lvalue Var 0x5640aafb2e60 'z' 'int'
|   |   `-ParenExpr 0x5640aafb7030 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5640aafb7000 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5640aafb6f58 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5640aafb6f10 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5640aafb6ef8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5640aafb6eb8 <col:106> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5640aafb6f40 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5640aafb6f28 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5640aafb6ed8 <col:124> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5640aafb6fd0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5640aafb6f78 <col:141> 'int' lvalue Var 0x5640aafb34c0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5640aafb6fe8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640aafb6fb0 <col:153> 'int' lvalue Var 0x5640aafb35b8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5640aafb75a8 <line:773:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5640aafb70b8 <col:3> 'int' lvalue Var 0x5640aafb34c0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5640aafb7578 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5640aafb7548 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5640aafb7530 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5640aafb70d8 <col:15> '_Bool' lvalue Var 0x5640aafb3720 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5640aafb7560 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640aafb70f8 <col:31> 'int' lvalue Var 0x5640aafb34c0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5640aafb7510 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5640aafb74e0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5640aafb7308 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5640aafb7228 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5640aafb7150 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5640aafb7138 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5640aafb7118 <col:45> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5640aafb7208 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5640aafb71a0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5640aafb7188 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5640aafb7168 <col:64> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5640aafb71f0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5640aafb71d8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5640aafb71b8 <col:83> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5640aafb72e8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5640aafb7280 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5640aafb7268 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5640aafb7248 <col:102> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5640aafb72d0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5640aafb72b8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5640aafb7298 <col:121> '_Bool' lvalue Var 0x5640aafb3348 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5640aafb74c8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5640aafb7328 <col:138> 'int' lvalue Var 0x5640aafb34c0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5640aafb74a8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5640aafb7478 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5640aafb73e8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5640aafb73a0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5640aafb7388 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5640aafb7348 <col:151> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5640aafb73d0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5640aafb73b8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5640aafb7368 <col:169> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5640aafb7448 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5640aafb7408 <col:186> 'int' lvalue Var 0x5640aafb34c0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5640aafb7460 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5640aafb7428 <col:198> 'int' lvalue Var 0x5640aafb34c0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5640aafb7ab8 <line:774:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5640aafb75c8 <col:3> 'int' lvalue Var 0x5640aafb35b8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5640aafb7a88 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5640aafb7a58 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5640aafb7a40 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5640aafb75e8 <col:15> '_Bool' lvalue Var 0x5640aafb3720 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5640aafb7a70 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640aafb7608 <col:31> 'int' lvalue Var 0x5640aafb35b8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5640aafb7a20 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5640aafb79f0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5640aafb7818 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5640aafb7738 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5640aafb7660 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5640aafb7648 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5640aafb7628 <col:45> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5640aafb7718 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5640aafb76b0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5640aafb7698 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5640aafb7678 <col:64> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5640aafb7700 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5640aafb76e8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5640aafb76c8 <col:83> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5640aafb77f8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5640aafb7790 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5640aafb7778 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5640aafb7758 <col:102> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5640aafb77e0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5640aafb77c8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5640aafb77a8 <col:121> '_Bool' lvalue Var 0x5640aafb3348 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5640aafb79d8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5640aafb7838 <col:138> 'int' lvalue Var 0x5640aafb35b8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5640aafb79b8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5640aafb7988 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5640aafb78f8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5640aafb78b0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5640aafb7898 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5640aafb7858 <col:151> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5640aafb78e0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5640aafb78c8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5640aafb7878 <col:169> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5640aafb7958 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5640aafb7918 <col:186> 'int' lvalue Var 0x5640aafb35b8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5640aafb7970 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5640aafb7938 <col:198> 'int' lvalue Var 0x5640aafb35b8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5640aafb8088 <line:775:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb7ad8 <col:3> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb8070 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640aafb8040 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5640aafb7ff8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640aafb7fe0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640aafb7af8 <col:20> '_Bool' lvalue Var 0x5640aafb3720 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640aafb8028 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640aafb8010 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640aafb7b18 <col:36> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5640aafb7fc0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5640aafb7f68 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5640aafb7d28 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5640aafb7c48 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5640aafb7b70 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5640aafb7b58 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5640aafb7b38 <col:55> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5640aafb7c28 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5640aafb7bc0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5640aafb7ba8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5640aafb7b88 <col:74> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5640aafb7c10 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5640aafb7bf8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5640aafb7bd8 <col:93> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5640aafb7d08 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5640aafb7ca0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5640aafb7c88 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5640aafb7c68 <col:112> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5640aafb7cf0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5640aafb7cd8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5640aafb7cb8 <col:131> '_Bool' lvalue Var 0x5640aafb3348 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5640aafb7f50 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5640aafb7f38 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5640aafb7d48 <col:148> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5640aafb7f18 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5640aafb7ee8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5640aafb7e08 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5640aafb7dc0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5640aafb7da8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5640aafb7d68 <col:166> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5640aafb7df0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5640aafb7dd8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5640aafb7d88 <col:184> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5640aafb7ea0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5640aafb7e58 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5640aafb7e28 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5640aafb7ed0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5640aafb7eb8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5640aafb7e80 <col:212> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5640aafb8650 <line:776:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb80a8 <col:3> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb8638 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640aafb8608 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5640aafb85c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640aafb85a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640aafb80c8 <col:20> '_Bool' lvalue Var 0x5640aafb3720 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640aafb85f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640aafb85d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640aafb80e8 <col:36> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5640aafb8588 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5640aafb8558 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5640aafb82f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5640aafb8218 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5640aafb8140 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5640aafb8128 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5640aafb8108 <col:55> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5640aafb81f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5640aafb8190 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5640aafb8178 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5640aafb8158 <col:74> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5640aafb81e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5640aafb81c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5640aafb81a8 <col:93> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5640aafb82d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5640aafb8270 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5640aafb8258 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5640aafb8238 <col:112> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5640aafb82c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5640aafb82a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5640aafb8288 <col:131> '_Bool' lvalue Var 0x5640aafb3348 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5640aafb8540 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5640aafb8528 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5640aafb8318 <col:148> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5640aafb8508 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5640aafb84d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5640aafb83d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5640aafb8390 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5640aafb8378 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5640aafb8338 <col:166> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5640aafb83c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5640aafb83a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5640aafb8358 <col:184> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5640aafb84a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5640aafb8428 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5640aafb83f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5640aafb84c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5640aafb8480 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5640aafb8450 <col:219> 'int' 0
|   |-BinaryOperator 0x5640aafb8bf8 <line:777:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb8670 <col:3> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb8be0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640aafb8bb0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5640aafb8b68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640aafb8b50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640aafb8690 <col:20> '_Bool' lvalue Var 0x5640aafb3720 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640aafb8b98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640aafb8b80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640aafb86b0 <col:36> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5640aafb8b30 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5640aafb8b00 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5640aafb88c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5640aafb87e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5640aafb8708 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5640aafb86f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5640aafb86d0 <col:55> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5640aafb87c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5640aafb8758 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5640aafb8740 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5640aafb8720 <col:74> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5640aafb87a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5640aafb8790 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5640aafb8770 <col:93> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5640aafb88a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5640aafb8838 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5640aafb8820 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5640aafb8800 <col:112> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5640aafb8888 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5640aafb8870 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5640aafb8850 <col:131> '_Bool' lvalue Var 0x5640aafb3348 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5640aafb8ae8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5640aafb8ad0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5640aafb88e0 <col:148> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5640aafb8ab0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5640aafb8a80 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5640aafb89a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5640aafb8958 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5640aafb8940 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5640aafb8900 <col:166> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5640aafb8988 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5640aafb8970 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5640aafb8920 <col:184> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5640aafb8a38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5640aafb89f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5640aafb89c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5640aafb8a68 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5640aafb8a50 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5640aafb8a18 <col:212> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5640aafb91d0 <line:778:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb8c18 <col:3> '_Bool' lvalue Var 0x5640aafb3348 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb91b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640aafb9188 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5640aafb9140 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640aafb9128 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640aafb8c38 <col:20> '_Bool' lvalue Var 0x5640aafb3720 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640aafb9170 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640aafb9158 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640aafb8c58 <col:36> '_Bool' lvalue Var 0x5640aafb3348 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5640aafb9108 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5640aafb90d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5640aafb8e68 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5640aafb8d88 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5640aafb8cb0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5640aafb8c98 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5640aafb8c78 <col:55> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5640aafb8d68 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5640aafb8d00 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5640aafb8ce8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5640aafb8cc8 <col:74> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5640aafb8d50 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5640aafb8d38 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5640aafb8d18 <col:93> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5640aafb8e48 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5640aafb8de0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5640aafb8dc8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5640aafb8da8 <col:112> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5640aafb8e30 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5640aafb8e18 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5640aafb8df8 <col:131> '_Bool' lvalue Var 0x5640aafb3348 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5640aafb90c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5640aafb90a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5640aafb8e88 <col:148> '_Bool' lvalue Var 0x5640aafb3348 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5640aafb9088 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5640aafb9058 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5640aafb8f48 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5640aafb8f00 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5640aafb8ee8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5640aafb8ea8 <col:166> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5640aafb8f30 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5640aafb8f18 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5640aafb8ec8 <col:184> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5640aafb9028 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5640aafb8f98 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5640aafb8f68 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5640aafb9040 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5640aafb9000 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5640aafb8fd0 <col:219> 'int' 0
|   |-BinaryOperator 0x5640aafb9248 <line:779:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5640aafb91f0 <col:3> 'int' lvalue Var 0x5640aafb2a10 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x5640aafb9230 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640aafb9210 <col:25> 'int' lvalue Var 0x5640aafb2e60 'z' 'int'
|   |-BinaryOperator 0x5640aafb9378 <line:780:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5640aafb9268 <col:3> 'int' lvalue Var 0x5640aafb2e60 'z' 'int'
|   | `-ConditionalOperator 0x5640aafb9348 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5640aafb9300 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5640aafb92e8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5640aafb9288 <col:7> '_Bool' lvalue Var 0x5640aafb2ef8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5640aafb9318 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640aafb92a8 <col:25> 'int' lvalue Var 0x5640aafb2f88 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5640aafb9330 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5640aafb92c8 <col:37> 'int' lvalue Var 0x5640aafb2e60 'z' 'int'
|   |-BinaryOperator 0x5640aafb9410 <line:781:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb9398 <col:3> '_Bool' lvalue Var 0x5640aafb2ef8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5640aafb93e8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5640aafb93b8 <col:28> 'int' 0
|   |-CallExpr 0x5640aafb9468 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640aafb9450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb9430 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640aafb94c0 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640aafb94a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafb9488 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640aafb97a8 <line:784:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5640aafb94e0 <col:3> 'int' lvalue Var 0x5640aafb2e60 'z' 'int'
|   | `-ConditionalOperator 0x5640aafb9778 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5640aafb95a0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5640aafb9558 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5640aafb9540 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5640aafb9500 <col:7> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5640aafb9588 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5640aafb9570 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5640aafb9520 <col:25> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5640aafb9760 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640aafb95c0 <col:42> 'int' lvalue Var 0x5640aafb34c0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5640aafb9740 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5640aafb9710 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5640aafb9680 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5640aafb9638 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5640aafb9620 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5640aafb95e0 <col:55> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5640aafb9668 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5640aafb9650 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5640aafb9600 <col:73> '_Bool' lvalue Var 0x5640aafb3348 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5640aafb96e0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5640aafb96a0 <col:90> 'int' lvalue Var 0x5640aafb35b8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5640aafb96f8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640aafb96c0 <col:102> 'int' lvalue Var 0x5640aafb2e60 'z' 'int'
|   |-BinaryOperator 0x5640aafb99b0 <line:785:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb97c8 <col:3> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb9998 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640aafb9968 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640aafb9888 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5640aafb9840 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5640aafb9828 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5640aafb97e8 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640aafb9870 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5640aafb9858 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5640aafb9808 <col:38> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5640aafb9920 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640aafb98d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640aafb98a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5640aafb9950 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640aafb9938 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640aafb9900 <col:66> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5640aafb9c98 <line:786:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb99d0 <col:3> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb9c80 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640aafb9c50 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640aafb9b70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640aafb9a90 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5640aafb9a48 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5640aafb9a30 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5640aafb99f0 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640aafb9a78 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5640aafb9a60 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5640aafb9a10 <col:38> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5640aafb9b50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5640aafb9b08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5640aafb9af0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5640aafb9ab0 <col:56> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5640aafb9b38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5640aafb9b20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5640aafb9ad0 <col:74> '_Bool' lvalue Var 0x5640aafb3348 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5640aafb9c08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640aafb9bc0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640aafb9b90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5640aafb9c38 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640aafb9c20 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640aafb9be8 <col:102> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5640aafb9ea0 <line:787:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb9cb8 <col:3> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafb9e88 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640aafb9e58 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640aafb9d78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5640aafb9d30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5640aafb9d18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5640aafb9cd8 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640aafb9d60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5640aafb9d48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5640aafb9cf8 <col:38> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5640aafb9e10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640aafb9dc8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640aafb9d98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5640aafb9e40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640aafb9e28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640aafb9df0 <col:66> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5640aafba1a8 <line:788:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5640aafb9ec0 <col:3> '_Bool' lvalue Var 0x5640aafb3348 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5640aafba190 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640aafba160 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640aafba080 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640aafb9f80 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5640aafb9f38 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5640aafb9f20 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5640aafb9ee0 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640aafb9f68 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5640aafb9f50 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5640aafb9f00 <col:38> '_Bool' lvalue Var 0x5640aafb3168 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5640aafba060 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5640aafba018 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5640aafba000 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5640aafb9fa0 <col:56> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5640aafba048 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5640aafba030 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5640aafb9fe0 <col:74> '_Bool' lvalue Var 0x5640aafb3348 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5640aafba118 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640aafba0d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640aafba0a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5640aafba148 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640aafba130 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640aafba0f8 <col:102> '_Bool' lvalue Var 0x5640aafb3348 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5640aafba200 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640aafba1e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafba1c8 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640aafba258 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640aafba240 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafba220 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640aafba310 <line:791:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5640aafba278 <col:3> 'int' lvalue Var 0x5640aafb2590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5640aafba2f0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5640aafba2d8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640aafba298 <col:22> 'int' lvalue Var 0x5640aafb2590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5640aafba2b8 <col:41> 'int' 1
|   |-CallExpr 0x5640aafba368 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640aafba350 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640aafba330 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5640aafba3e0 <line:793:3, col:36>
|     `-CallExpr 0x5640aafba3c0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5640aafba3a8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5640aafba388 <col:10> 'void *(void)' Function 0x5640aaf58e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5640aafba528 prev 0x5640aafb22d8 <line:795:1, line:797:1> line:795:6 fence 'void ()'
| `-CompoundStmt 0x5640aafba5c8 <line:796:1, line:797:1>
|-FunctionDecl 0x5640aafba5f8 prev 0x5640aafb2398 <line:798:1, line:800:1> line:798:6 isync 'void ()'
| `-CompoundStmt 0x5640aafba698 <line:799:1, line:800:1>
|-FunctionDecl 0x5640aafba6c8 prev 0x5640aafb2458 <line:801:1, line:803:1> line:801:6 lwfence 'void ()'
| `-CompoundStmt 0x5640aafba768 <line:802:1, line:803:1>
`-FunctionDecl 0x5640aafba7d8 <line:804:1, line:828:1> line:804:5 main 'int ()'
  `-CompoundStmt 0x5640aafbc550 <line:805:1, line:828:1>
    |-DeclStmt 0x5640aafba8f0 <line:806:3, col:17>
    | `-VarDecl 0x5640aafba888 <col:3, col:13> col:13 used t167 'pthread_t':'unsigned long'
    |-CallExpr 0x5640aafbaaf8 <line:807:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5640aafbaae0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640aafba908 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5640aaf998f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5640aafba948 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5640aafba928 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5640aafba888 't167' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5640aafbab38 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5640aafba9c0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5640aafba998 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5640aafba960 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5640aafbab50 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640aafba9e0 <col:38> 'void *(void *)' Function 0x5640aafb3838 'P0' 'void *(void *)'
    | `-ParenExpr 0x5640aafbaa60 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5640aafbaa38 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5640aafbaa00 <col:51> 'int' 0
    |-DeclStmt 0x5640aafbabe0 <line:808:3, col:17>
    | `-VarDecl 0x5640aafbab78 <col:3, col:13> col:13 used t168 'pthread_t':'unsigned long'
    |-CallExpr 0x5640aafbad88 <line:809:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5640aafbad70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640aafbabf8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5640aaf998f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5640aafbac38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5640aafbac18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5640aafbab78 't168' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5640aafbadc8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5640aafbacb0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5640aafbac88 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5640aafbac50 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5640aafbade0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640aafbacd0 <col:38> 'void *(void *)' Function 0x5640aafb5218 'P1' 'void *(void *)'
    | `-ParenExpr 0x5640aafbad50 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5640aafbad28 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5640aafbacf0 <col:51> 'int' 0
    |-DeclStmt 0x5640aafbae70 <line:810:3, col:17>
    | `-VarDecl 0x5640aafbae08 <col:3, col:13> col:13 used t169 'pthread_t':'unsigned long'
    |-CallExpr 0x5640aafbb028 <line:811:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5640aafbb010 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640aafbae88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5640aaf998f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5640aafbaec8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5640aafbaea8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5640aafbae08 't169' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5640aafbb068 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5640aafbaf40 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5640aafbaf18 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5640aafbaee0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5640aafbb080 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640aafbaf60 <col:38> 'void *(void *)' Function 0x5640aafb66e0 'P2' 'void *(void *)'
    | `-ParenExpr 0x5640aafbaff0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5640aafbafb8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5640aafbaf80 <col:51> 'int' 0
    |-CallExpr 0x5640aafbb0d0 <line:812:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5640aafbb0b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5640aafbb098 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5640aafbb1a0 <line:813:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5640aafbb0f0 <col:3> '_Bool' lvalue Var 0x5640aafb2aa8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5640aafbb188 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5640aafbb168 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5640aafbb150 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5640aafbb110 <col:21> 'int' lvalue Var 0x5640aafb2590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5640aafbb130 <col:41> 'int' 3
    |-CallExpr 0x5640aafbb1f8 <line:814:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5640aafbb1e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5640aafbb1c0 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5640aafbb270 <line:815:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5640aafbb258 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640aafbb218 <col:3> 'void (int)' Function 0x5640aaf58ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5640aafbb2b0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5640aafbb298 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5640aafbb238 <col:21> '_Bool' lvalue Var 0x5640aafb2aa8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5640aafbb300 <line:816:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5640aafbb2e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5640aafbb2c8 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5640aafbb5e8 <line:817:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5640aafbb320 <col:3> 'int' lvalue Var 0x5640aafb2e60 'z' 'int'
    | `-ConditionalOperator 0x5640aafbb5b8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5640aafbb3e0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5640aafbb398 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5640aafbb380 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5640aafbb340 <col:7> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5640aafbb3c8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5640aafbb3b0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5640aafbb360 <col:25> '_Bool' lvalue Var 0x5640aafb3000 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5640aafbb5a0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5640aafbb400 <col:42> 'int' lvalue Var 0x5640aafb34c0 'z$w_buff0' 'int'
    |   `-ParenExpr 0x5640aafbb580 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5640aafbb550 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5640aafbb4c0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5640aafbb478 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5640aafbb460 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5640aafbb420 <col:55> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5640aafbb4a8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5640aafbb490 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5640aafbb440 <col:73> '_Bool' lvalue Var 0x5640aafb31e0 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5640aafbb520 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5640aafbb4e0 <col:90> 'int' lvalue Var 0x5640aafb35b8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5640aafbb538 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5640aafbb500 <col:102> 'int' lvalue Var 0x5640aafb2e60 'z' 'int'
    |-BinaryOperator 0x5640aafbb7f0 <line:818:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5640aafbb608 <col:3> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5640aafbb7d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5640aafbb7a8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5640aafbb6c8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5640aafbb680 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5640aafbb668 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5640aafbb628 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5640aafbb6b0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5640aafbb698 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5640aafbb648 <col:38> '_Bool' lvalue Var 0x5640aafb3000 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5640aafbb760 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5640aafbb718 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5640aafbb6e8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5640aafbb790 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5640aafbb778 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5640aafbb740 <col:66> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5640aafbbad8 <line:819:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5640aafbb810 <col:3> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5640aafbbac0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5640aafbba90 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5640aafbb9b0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5640aafbb8d0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5640aafbb888 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5640aafbb870 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5640aafbb830 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5640aafbb8b8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5640aafbb8a0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5640aafbb850 <col:38> '_Bool' lvalue Var 0x5640aafb3000 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5640aafbb990 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5640aafbb948 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5640aafbb930 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5640aafbb8f0 <col:56> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5640aafbb978 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5640aafbb960 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5640aafbb910 <col:74> '_Bool' lvalue Var 0x5640aafb31e0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5640aafbba48 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5640aafbba00 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5640aafbb9d0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5640aafbba78 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5640aafbba60 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5640aafbba28 <col:102> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5640aafbbce0 <line:820:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5640aafbbaf8 <col:3> '_Bool' lvalue Var 0x5640aafb3000 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5640aafbbcc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5640aafbbc98 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5640aafbbbb8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5640aafbbb70 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5640aafbbb58 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5640aafbbb18 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5640aafbbba0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5640aafbbb88 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5640aafbbb38 <col:38> '_Bool' lvalue Var 0x5640aafb3000 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5640aafbbc50 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5640aafbbc08 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5640aafbbbd8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5640aafbbc80 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5640aafbbc68 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5640aafbbc30 <col:66> '_Bool' lvalue Var 0x5640aafb3000 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5640aafbbfc8 <line:821:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5640aafbbd00 <col:3> '_Bool' lvalue Var 0x5640aafb31e0 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5640aafbbfb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5640aafbbf80 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5640aafbbea0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5640aafbbdc0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5640aafbbd78 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5640aafbbd60 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5640aafbbd20 <col:20> '_Bool' lvalue Var 0x5640aafb3538 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5640aafbbda8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5640aafbbd90 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5640aafbbd40 <col:38> '_Bool' lvalue Var 0x5640aafb3000 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5640aafbbe80 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5640aafbbe38 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5640aafbbe20 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5640aafbbde0 <col:56> '_Bool' lvalue Var 0x5640aafb3630 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5640aafbbe68 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5640aafbbe50 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5640aafbbe00 <col:74> '_Bool' lvalue Var 0x5640aafb31e0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5640aafbbf38 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5640aafbbef0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5640aafbbec0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5640aafbbf68 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5640aafbbf50 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5640aafbbf18 <col:102> '_Bool' lvalue Var 0x5640aafb31e0 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5640aafbc038 <line:822:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5640aafbc020 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5640aafbc000 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5640aafbc090 <line:823:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5640aafbc078 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5640aafbc058 <col:3> 'void ()' Function 0x5640aaf59350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5640aafbc3f8 <line:824:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x5640aafbc0b0 <col:3> '_Bool' lvalue Var 0x5640aafb2b20 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5640aafbc3e0 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5640aafbc3c8 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5640aafbc3a8 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x5640aafbc388 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x5640aafbc2f0 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x5640aafbc258 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x5640aafbc1c0 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x5640aafbc128 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5640aafbc110 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5640aafbc0d0 <col:23> 'int' lvalue Var 0x5640aafb2c20 'x' 'int'
    |         | | | | `-IntegerLiteral 0x5640aafbc0f0 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x5640aafbc1a0 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5640aafbc188 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5640aafbc148 <col:33> 'int' lvalue Var 0x5640aafb26b0 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x5640aafbc168 <col:56> 'int' 2
    |         | | `-BinaryOperator 0x5640aafbc238 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5640aafbc220 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5640aafbc1e0 <col:61> 'int' lvalue Var 0x5640aafb27d0 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x5640aafbc200 <col:84> 'int' 0
    |         | `-BinaryOperator 0x5640aafbc2d0 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5640aafbc2b8 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5640aafbc278 <col:89> 'int' lvalue Var 0x5640aafb28f0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x5640aafbc298 <col:112> 'int' 1
    |         `-BinaryOperator 0x5640aafbc368 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x5640aafbc350 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5640aafbc310 <col:117> 'int' lvalue Var 0x5640aafb2a10 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x5640aafbc330 <col:140> 'int' 0
    |-CallExpr 0x5640aafbc450 <line:825:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5640aafbc438 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5640aafbc418 <col:3> 'void ()' Function 0x5640aaf59410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5640aafbc4c8 <line:826:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5640aafbc4b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640aafbc470 <col:3> 'void (int)' Function 0x5640aaf590d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5640aafbc508 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5640aafbc4f0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5640aafbc490 <col:21> '_Bool' lvalue Var 0x5640aafb2b20 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5640aafbc540 <line:827:3, col:10>
      `-IntegerLiteral 0x5640aafbc520 <col:10> 'int' 0
