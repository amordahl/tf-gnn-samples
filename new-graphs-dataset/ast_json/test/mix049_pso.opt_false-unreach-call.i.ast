TranslationUnitDecl 0x558467e06f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x558467e07848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x558467e07520 '__int128'
|-TypedefDecl 0x558467e078b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x558467e07540 'unsigned __int128'
|-TypedefDecl 0x558467e07bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x558467e07990 'struct __NSConstantString_tag'
|   `-Record 0x558467e07910 '__NSConstantString_tag'
|-TypedefDecl 0x558467e07c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x558467e07c20 'char *'
|   `-BuiltinType 0x558467e07020 'char'
|-TypedefDecl 0x558467e46b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x558467e07f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x558467e07d40 'struct __va_list_tag'
|     `-Record 0x558467e07cc0 '__va_list_tag'
|-FunctionDecl 0x558467e46ca0 <pthread-wmm/mix049_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x558467e46bd0 <col:31> col:34 'int'
|-FunctionDecl 0x558467e46e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x558467e46f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x558467e470d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x558467e47048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x558467e47308 <col:40, col:99>
|   |-IfStmt 0x558467e472d8 <col:42, col:88>
|   | |-UnaryOperator 0x558467e471b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x558467e471a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x558467e47180 <col:47> 'int' lvalue ParmVar 0x558467e47048 'expression' 'int'
|   | `-CompoundStmt 0x558467e472c0 <col:59, col:88>
|   |   `-LabelStmt 0x558467e472a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x558467e47238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x558467e47220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x558467e471d0 <col:68> 'void () __attribute__((noreturn))' Function 0x558467e46f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x558467e472f0 <col:89>
|   `-ReturnStmt 0x558467e472f8 <col:91>
|-FunctionDecl 0x558467e47350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x558467e47410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x558467e47790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558467e474c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x558467e47548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x558467e475c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558467e47648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558467e47850 <line:10:22>
|-FunctionDecl 0x558467e6d8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558467e478c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x558467e47940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x558467e479c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558467e47a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558467e6d960 <line:13:22>
|-FunctionDecl 0x558467e6dc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558467e6d9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x558467e6da50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x558467e6dad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x558467e6dcc8 <line:15:22>
|-TypedefDecl 0x558467e6dd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x558467e070e0 'unsigned char'
|-TypedefDecl 0x558467e6dda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x558467e07100 'unsigned short'
|-TypedefDecl 0x558467e6de18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x558467e07120 'unsigned int'
|-TypedefDecl 0x558467e6de88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-TypedefDecl 0x558467e6def8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x558467e07040 'signed char'
|-TypedefDecl 0x558467e6df68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x558467e070e0 'unsigned char'
|-TypedefDecl 0x558467e6dfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x558467e07060 'short'
|-TypedefDecl 0x558467e6e048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x558467e07100 'unsigned short'
|-TypedefDecl 0x558467e6e0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x558467e07080 'int'
|-TypedefDecl 0x558467e6e128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x558467e07120 'unsigned int'
|-TypedefDecl 0x558467e6e198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e6e208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-TypedefDecl 0x558467e6e278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e6e2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-TypedefDecl 0x558467e6e358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-TypedefDecl 0x558467e6e3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x558467e07120 'unsigned int'
|-TypedefDecl 0x558467e6e438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x558467e07120 'unsigned int'
|-TypedefDecl 0x558467e6e4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-TypedefDecl 0x558467e6e518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-TypedefDecl 0x558467e6e588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x558467e07120 'unsigned int'
|-TypedefDecl 0x558467e6e5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-TypedefDecl 0x558467e6e668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e6e6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e6e748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x558467e07080 'int'
|-RecordDecl 0x558467e6e7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x558467e6e918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x558467e6e9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x558467e6e970 'struct __fsid_t' sugar
|   `-RecordType 0x558467e6e820 '__fsid_t'
|     `-Record 0x558467e6e7a0 ''
|-TypedefDecl 0x558467e6ea58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e6eac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-TypedefDecl 0x558467e6eb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-TypedefDecl 0x558467e6eba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x558467e07120 'unsigned int'
|-TypedefDecl 0x558467e6ec18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e6ec88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x558467e07120 'unsigned int'
|-TypedefDecl 0x558467e6ecf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e6ed68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x558467e07080 'int'
|-TypedefDecl 0x558467e6edd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x558467e07080 'int'
|-TypedefDecl 0x558467e6ee48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x558467e07080 'int'
|-TypedefDecl 0x558467e6eeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x558467e077a0 'void *'
|   `-BuiltinType 0x558467e06fe0 'void'
|-TypedefDecl 0x558467e6ef28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e6ef98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e6f008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e6f078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-TypedefDecl 0x558467e6f0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-TypedefDecl 0x558467e6f158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-TypedefDecl 0x558467e6f1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-TypedefDecl 0x558467e6f238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e6f2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e6f318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e6f388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-TypedefDecl 0x558467e6f418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x558467e6f3e0 '__off64_t' sugar
|   |-Typedef 0x558467e6e6d8 '__off64_t'
|   `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e6f510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x558467e6f4d0 '__quad_t *'
|   `-TypedefType 0x558467e6f470 '__quad_t' sugar
|     |-Typedef 0x558467e6e278 '__quad_t'
|     `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e6f580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x558467e07c20 'char *'
|   `-BuiltinType 0x558467e07020 'char'
|-TypedefDecl 0x558467e6f5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e6f660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x558467e07120 'unsigned int'
|-FunctionDecl 0x558467e6f7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x558467e6f6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x558467e6fae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x558467e6fad8 <line:72:3, col:34>
|     `-CallExpr 0x558467e6fa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x558467e6fa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x558467e6fa10 <col:10> '<builtin fn type>' Function 0x558467e6f880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x558467e6fac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558467e6fa30 <col:29> 'unsigned int' lvalue ParmVar 0x558467e6f6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x558467e6f880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x558467e6f920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x558467e6f990 <col:10> Implicit
| `-ConstAttr 0x558467e6f9e8 <col:10> Implicit
|-FunctionDecl 0x558467e6fc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x558467e6fb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x558467e6ff58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x558467e6ff48 <line:77:3, col:34>
|     `-CallExpr 0x558467e6ff08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x558467e6fef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x558467e6fe78 <col:10> '<builtin fn type>' Function 0x558467e6fce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x558467e6ff30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x558467e6fe98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x558467e6fb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x558467e6fce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x558467e6fd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x558467e6fdf8 <col:10> Implicit
| `-ConstAttr 0x558467e6fe50 <col:10> Implicit
|-TypedefDecl 0x558467e6ff88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-TypedefDecl 0x558467e70018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x558467e6ffe0 '__time_t' sugar
|   |-Typedef 0x558467e6ec18 '__time_t'
|   `-BuiltinType 0x558467e070a0 'long'
|-RecordDecl 0x558467e70070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x558467e70128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x558467e701b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x558467e70248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x558467e70210 '__pid_t' sugar
|   |-Typedef 0x558467e6e748 '__pid_t'
|   `-BuiltinType 0x558467e07080 'int'
|-RecordDecl 0x558467e702a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x558467e70360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x558467e703b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x558467e70470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x558467e704d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-RecordDecl 0x558467e70530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x558467e707c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x558467e728b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x558467e70810 'struct cpu_set_t' sugar
|   `-RecordType 0x558467e705b0 'cpu_set_t'
|     `-Record 0x558467e70530 ''
|-FunctionDecl 0x558467e72b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x558467e72958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558467e72a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x558467e72c38 <line:107:19>
|-FunctionDecl 0x558467e72e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x558467e72ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x558467e72eb8 <col:69>
|-FunctionDecl 0x558467e73030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x558467e72f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x558467e730d8 <col:64>
|-FunctionDecl 0x558467e73398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x558467e73140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558467e73278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558467e73448 <line:113:22>
|-FunctionDecl 0x558467e736c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x558467e734b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558467e735a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x558467e73778 <col:88>
|-FunctionDecl 0x558467e73a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x558467e737e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558467e738c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x558467e73950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558467e73b50 <col:62>
|-FunctionDecl 0x558467e73cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x558467e73bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x558467e73d70 <col:63>
|-FunctionDecl 0x558467e73e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x558467e73f38 <col:47>
|-FunctionDecl 0x558467e74040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x558467e73fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558467e740e8 <col:69>
|-FunctionDecl 0x558467e741f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x558467e74158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558467e74298 <col:69>
|-FunctionDecl 0x558467e74558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558467e74300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558467e74438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x558467e74608 <col:88>
|-TypedefDecl 0x558467e74698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x558467e74660 '__clock_t' sugar
|   |-Typedef 0x558467e6ea58 '__clock_t'
|   `-BuiltinType 0x558467e070a0 'long'
|-TypedefDecl 0x558467e74728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x558467e746f0 '__clockid_t' sugar
|   |-Typedef 0x558467e6ee48 '__clockid_t'
|   `-BuiltinType 0x558467e07080 'int'
|-TypedefDecl 0x558467e747b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x558467e74780 '__timer_t' sugar
|   |-Typedef 0x558467e6eeb8 '__timer_t'
|   `-PointerType 0x558467e077a0 'void *'
|     `-BuiltinType 0x558467e06fe0 'void'
|-RecordDecl 0x558467e74810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x558467e748e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x558467e74950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x558467e749b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x558467e74a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x558467e74a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x558467e74af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x558467e74b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x558467e74bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x558467e74c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x558467e74c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x558467e74cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x558467e74d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x558467e74e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x558467e74e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x558467e74f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x558467e75100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x558467e751a0 <col:45>
|-FunctionDecl 0x558467e75380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x558467e75270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x558467e75428 <col:54>
|-FunctionDecl 0x558467e75628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x558467e75490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x558467e75508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x558467e756d8 <line:157:22>
| `-ConstAttr 0x558467e75730 <col:63>
|-FunctionDecl 0x558467e76560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558467e75828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558467e76608 <col:56>
|-FunctionDecl 0x558467e769b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x558467e76678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x558467e766f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558467e76770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x558467e76868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x558467e76a70 <col:54>
|-RecordDecl 0x558467e76ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x558467e76b78 parent 0x558467e06f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x558467e76dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x558467e76e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x558467e76ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x558467e76f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x558467e77038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x558467e77158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x558467e77100 'struct __locale_struct *'
|   `-ElaboratedType 0x558467e77090 'struct __locale_struct' sugar
|     `-RecordType 0x558467e76b50 'struct __locale_struct'
|       `-Record 0x558467e76ac8 '__locale_struct'
|-TypedefDecl 0x558467e77208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x558467e771d0 '__locale_t' sugar
|   |-Typedef 0x558467e77158 '__locale_t'
|   `-PointerType 0x558467e77100 'struct __locale_struct *'
|     `-ElaboratedType 0x558467e77090 'struct __locale_struct' sugar
|       `-RecordType 0x558467e76b50 'struct __locale_struct'
|         `-Record 0x558467e76ac8 '__locale_struct'
|-FunctionDecl 0x558467e77610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x558467e77278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x558467e772f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558467e77370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x558467e77400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558467e77478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x558467e776d8 <col:40>
|-FunctionDecl 0x558467e778c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x558467e777a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x558467e77970 <col:66>
|-FunctionDecl 0x558467e77a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x558467e779d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x558467e77b28 <col:69>
|-FunctionDecl 0x558467e77d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558467e77b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558467e77c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558467e77e08 <col:52>
|-FunctionDecl 0x558467e77fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558467e77e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558467e77f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558467e78060 <col:55>
|-FunctionDecl 0x558467e781f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x558467e780e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x558467e782a0 <col:62>
|-FunctionDecl 0x558467e78418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x558467e78308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x558467e784c0 <col:60>
|-FunctionDecl 0x558467e78718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558467e78578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558467e785f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x558467e787c8 <col:44>
|-FunctionDecl 0x558467e789d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558467e78830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558467e788b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x558467e78a88 <col:49>
|-VarDecl 0x558467e78b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x558467e78c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x558467e78c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x558467e78d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x558467e78e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x558467e78f20 <col:42>
|-VarDecl 0x558467e78f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x558467e79010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x558467e79198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x558467e79088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x558467e79240 <col:57>
|-FunctionDecl 0x558467e79350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558467e792c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558467e793f8 <col:56>
|-FunctionDecl 0x558467e7a540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558467e79478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x558467e7a5e8 <col:59>
|-FunctionDecl 0x558467e7a6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x558467e7a658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x558467e7a798 <col:48>
| `-ConstAttr 0x558467e7a7f0 <col:89>
|-FunctionDecl 0x558467e7aa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558467e7a8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x558467e7a938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x558467e7acb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558467e7ab48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558467e7abd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x558467e7ad68 <col:88>
|-FunctionDecl 0x558467e7af00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558467e7add0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558467e7ae60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x558467e7afb0 <col:88>
|-FunctionDecl 0x558467e7b1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x558467e7b018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558467e7b0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x558467e7b278 <line:208:22>
|-FunctionDecl 0x558467e7b5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558467e7b2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558467e7b360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x558467e7b3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x558467e7b480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x558467e7b8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x558467e7b6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x558467e7b7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x558467e7b998 <col:85>
|-FunctionDecl 0x558467e7bd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x558467e7ba00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558467e7bb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x558467e7bc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x558467e7be40 <col:52>
|-FunctionDecl 0x558467e7bfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x558467e7bea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558467e7c060 <col:61>
|-FunctionDecl 0x558467e7c560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x558467e7c0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558467e7c148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x558467e7c278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x558467e7c368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x558467e7c620 <col:62>
|-FunctionDecl 0x558467e7c838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x558467e7c688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558467e7c718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x558467e7c8e8 <line:221:22>
|-FunctionDecl 0x558467e7c9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x558467e7c950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558467e7ca90 <col:65>
|-TypedefDecl 0x558467e7cb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x558467e07140 'unsigned long'
|-RecordDecl 0x558467e7cb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x558467e7cca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x558467e7cd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558467e7cdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x558467e7cd60 'union pthread_attr_t' sugar
|   `-RecordType 0x558467e7cbe0 'union pthread_attr_t'
|     `-Record 0x558467e7cb58 'pthread_attr_t'
|-RecordDecl 0x558467e7ce10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x558467e7cf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x558467e7d000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x558467e7d0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x558467e7d050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x558467e7ce90 'struct __pthread_internal_list'
|     `-Record 0x558467e7ce10 '__pthread_internal_list'
|-RecordDecl 0x558467e7d120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x558467e7d1c8 parent 0x558467e06f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x558467e7d2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558467e7d308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x558467e7d370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x558467e7d3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x558467e7d440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x558467e7d4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x558467e81580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x558467e81630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x558467e81720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x558467e81788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558467e81910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x558467e818b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x558467e7d1a0 'pthread_mutex_t'
|     `-Record 0x558467e7d120 ''
|-RecordDecl 0x558467e81980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x558467e81ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558467e81b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558467e81be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x558467e81b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x558467e81a00 'pthread_mutexattr_t'
|     `-Record 0x558467e81980 ''
|-RecordDecl 0x558467e81c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x558467e81cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x558467e81dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558467e81e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x558467e81e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x558467e81ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x558467e81f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x558467e81fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x558467e82030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x558467e82098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x558467e82150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix049_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix049_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x558467e82240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x558467e822a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x558467e823e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x558467e82380 'union pthread_cond_t' sugar
|   `-RecordType 0x558467e81cd0 'pthread_cond_t'
|     `-Record 0x558467e81c50 ''
|-RecordDecl 0x558467e82450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x558467e82590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558467e825f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558467e826b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x558467e82650 'union pthread_condattr_t' sugar
|   `-RecordType 0x558467e824d0 'pthread_condattr_t'
|     `-Record 0x558467e82450 ''
|-TypedefDecl 0x558467e82738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x558467e07120 'unsigned int'
|-TypedefDecl 0x558467e827a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x558467e07080 'int'
|-RecordDecl 0x558467e82800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x558467e828a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x558467e82970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558467e829d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x558467e82a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x558467e82aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x558467e82b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x558467e82b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x558467e82be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x558467e82c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x558467e82cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x558467e82d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x558467e82d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x558467e82e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix049_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix049_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x558467e82ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x558467e82f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558467e83090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x558467e83030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x558467e82880 'pthread_rwlock_t'
|     `-Record 0x558467e82800 ''
|-RecordDecl 0x558467e83100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x558467e83240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x558467e832a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558467e83360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x558467e83300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x558467e83180 'pthread_rwlockattr_t'
|     `-Record 0x558467e83100 ''
|-TypedefDecl 0x558467e833e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x558467e07084 'volatile int' volatile
|   `-BuiltinType 0x558467e07080 'int'
|-RecordDecl 0x558467e83440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x558467e855b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x558467e85618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558467e856d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x558467e85670 'union pthread_barrier_t' sugar
|   `-RecordType 0x558467e834c0 'pthread_barrier_t'
|     `-Record 0x558467e83440 ''
|-RecordDecl 0x558467e85740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x558467e85840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558467e858a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558467e85960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x558467e85900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x558467e857c0 'pthread_barrierattr_t'
|     `-Record 0x558467e85740 ''
|-TypedefDecl 0x558467e85a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x558467e85a10 'long [8]' 8 
|   `-BuiltinType 0x558467e070a0 'long'
|-EnumDecl 0x558467e85ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x558467e85b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x558467e85be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x558467e85c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x558467e85d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x558467e85d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x558467e85da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x558467e85df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x558467e85e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x558467e85e68 <col:26> 'int'
| |   `-DeclRefExpr 0x558467e85e48 <col:26> 'int' EnumConstant 0x558467e85d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x558467e85f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x558467e85ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x558467e85ed0 <col:29> 'int' EnumConstant 0x558467e85d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x558467e85f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x558467e85f78 <col:30> 'int'
| |   `-DeclRefExpr 0x558467e85f58 <col:30> 'int' EnumConstant 0x558467e85da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x558467e86018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x558467e86000 <col:27> 'int'
|     `-DeclRefExpr 0x558467e85fe0 <col:27> 'int' EnumConstant 0x558467e85e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x558467e86068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x558467e86138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x558467e861c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x558467e861a8 <col:30> 'int'
| |   `-DeclRefExpr 0x558467e86188 <col:30> 'int' EnumConstant 0x558467e86138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x558467e86210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x558467e86298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x558467e86280 <col:29> 'int'
|     `-DeclRefExpr 0x558467e86260 <col:29> 'int' EnumConstant 0x558467e86210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x558467e862e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x558467e863b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x558467e86408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x558467e86458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x558467e864a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x558467e865c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x558467e86610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x558467e86660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x558467e866e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x558467e866d0 <col:31> 'int'
|     `-DeclRefExpr 0x558467e866b0 <col:31> 'int' EnumConstant 0x558467e865c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x558467e86738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x558467e86808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x558467e86858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x558467e868a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x558467e86978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x558467e869c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x558467e86a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x558467e86ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x558467e86b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x558467e86b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x558467e86dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x558467e86e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x558467e86e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x558467e86fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x558467e87008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x558467e870d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x558467e87128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x558467e87178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x558467e87248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x558467e87298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x558467e878f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x558467e87390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x558467e874a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558467e876e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x558467e87760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x558467e879b8 <col:47>
| |-NonNullAttr 0x558467e87a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x558467e87a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x558467e87b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x558467e87aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x558467e87dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x558467e87c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x558467e87ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x558467e87f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x558467e87e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x558467e88040 <col:60>
|-FunctionDecl 0x558467e88190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x558467e88230 <col:54>
| `-ConstAttr 0x558467e88288 <col:95>
|-FunctionDecl 0x558467e88458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x558467e882c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558467e88338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x558467e88508 <line:394:19>
| `-ConstAttr 0x558467e88560 <col:60>
|-FunctionDecl 0x558467e88f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x558467e88e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x558467e89010 <col:71>
| `-NonNullAttr 0x558467e89068 <col:112, col:126> 1
|-FunctionDecl 0x558467e89170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x558467e890b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x558467e89218 <line:397:22>
| `-NonNullAttr 0x558467e89270 <col:63, col:77> 1
|-FunctionDecl 0x558467e89498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x558467e892b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x558467e89338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x558467e89548 <line:400:22>
| `-NonNullAttr 0x558467e895a0 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e897a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558467e895e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558467e89668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x558467e89858 <line:403:22>
| `-NonNullAttr 0x558467e898b0 <col:63, col:77> 1
|-FunctionDecl 0x558467e89b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x558467e898f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x558467e899a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x558467e89bb8 <line:406:22>
| `-NonNullAttr 0x558467e89c10 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e8ae48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x558467e89c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558467e89cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558467e8aef8 <line:409:22>
| `-NonNullAttr 0x558467e8af50 <col:63, col:77> 1
|-FunctionDecl 0x558467e8b188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558467e8af98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558467e8b028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x558467e8b238 <line:412:22>
| `-NonNullAttr 0x558467e8b290 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e8b4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558467e8b2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x558467e8b368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x558467e8b578 <col:37>
| `-NonNullAttr 0x558467e8b5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x558467e8b7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558467e8b618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558467e8b698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x558467e8b868 <line:418:22>
| `-NonNullAttr 0x558467e8b8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e8ba48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558467e8b908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558467e8b988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x558467e8baf8 <line:420:22>
| `-NonNullAttr 0x558467e8bb50 <col:63, col:77> 1
|-FunctionDecl 0x558467e8bcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558467e8bb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558467e8bc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x558467e8bda8 <line:423:22>
| `-NonNullAttr 0x558467e8ce30 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e8cfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558467e8ce78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558467e8cef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x558467e8d068 <line:426:22>
| `-NonNullAttr 0x558467e8d0c0 <col:63, col:77> 1
|-FunctionDecl 0x558467e8d268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558467e8d108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558467e8d188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x558467e8d318 <line:429:22>
| `-NonNullAttr 0x558467e8d370 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e8d4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558467e8d3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558467e8d438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x558467e8d5a8 <line:431:22>
| `-NonNullAttr 0x558467e8d600 <col:63, col:77> 1
|-FunctionDecl 0x558467e8d828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x558467e8d648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558467e8d6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x558467e8d8d8 <line:434:22>
| |-NonNullAttr 0x558467e8d930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x558467e8d968 <col:100> "" ""
|-FunctionDecl 0x558467e8db78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x558467e8d9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558467e8da38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x558467e8dc28 <line:437:22>
| |-NonNullAttr 0x558467e8dc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x558467e8dcb8 <col:97> "" ""
|-FunctionDecl 0x558467e8deb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x558467e8dd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558467e8dd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x558467e8df68 <line:440:22>
| `-NonNullAttr 0x558467e8dfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e8e140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x558467e8e008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558467e8e080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558467e8e1f0 <line:443:22>
| `-NonNullAttr 0x558467e8e248 <col:63, col:77> 1
|-FunctionDecl 0x558467e8e538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x558467e8e298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558467e8e318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x558467e8e390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x558467e8e5f0 <line:447:22>
| `-NonNullAttr 0x558467e8e648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x558467e8e8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x558467e8e6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558467e8e720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x558467e8e798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558467e8e9b0 <col:43>
| `-NonNullAttr 0x558467e8ea08 <col:84, col:98> 1
|-FunctionDecl 0x558467e8ecc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x558467e8ea58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558467e8ead8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x558467e8eb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x558467e8ed80 <line:452:22>
| `-NonNullAttr 0x558467e8edd8 <col:63, col:77> 3
|-FunctionDecl 0x558467e8f0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558467e8ee50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558467e8eed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x558467e8ef60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x558467e8f1a0 <line:456:22>
| `-NonNullAttr 0x558467e8f1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x558467e8f3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x558467e8f248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558467e8f2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x558467e8f498 <line:458:22>
|-FunctionDecl 0x558467e8f868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x558467e8f560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x558467e8f700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x558467e8f918 <col:52, col:69> 1 2
|-FunctionDecl 0x558467e8fac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x558467e8f9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x558467e8fa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x558467e8fca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x558467e8fb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x558467e8fc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x558467e8fe60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x558467e8fd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x558467e8ffa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x558467e90040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x558467e900e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x558467e901d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x558467e90240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x558467e90410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix049_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x558467e90508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x558467e905c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x558467e90560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x558467e900c0 '__pthread_unwind_buf_t'
| |   `-Record 0x558467e90040 ''
| `-AlignedAttr 0x558467e90618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x558467e90690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x558467e907f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x558467e90858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x558467e908c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x558467e90928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x558467e90b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x558467e90a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x558467e90c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x558467e90be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x558467e90e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558467e90d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x558467e90f18 <line:487:22>
|-RecordDecl 0x558467e90f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x558467e91288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x558467e910e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x558467e91168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x558467e91338 <col:86>
| `-ReturnsTwiceAttr 0x558467e91390 <col:12> Implicit
|-FunctionDecl 0x558467e916b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558467e91460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x558467e91570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x558467e91768 <line:493:22>
| `-NonNullAttr 0x558467e917c0 <col:63, col:77> 1
|-FunctionDecl 0x558467e91938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558467e91808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558467e919e0 <line:495:22>
| `-NonNullAttr 0x558467e91a38 <col:63, col:77> 1
|-FunctionDecl 0x558467e91b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558467e91a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558467e91be8 <line:497:22>
| `-NonNullAttr 0x558467e91c40 <col:52, col:66> 1
|-FunctionDecl 0x558467e91d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558467e91c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558467e91de8 <line:499:22>
| `-NonNullAttr 0x558467e91e40 <col:52, col:66> 1
|-FunctionDecl 0x558467e92088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558467e91e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558467e91f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558467e92138 <col:36>
| `-NonNullAttr 0x558467e92190 <col:66, col:83> 1 2
|-FunctionDecl 0x558467e92290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558467e921d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558467e92338 <line:504:22>
| `-NonNullAttr 0x558467e92390 <col:52, col:66> 1
|-FunctionDecl 0x558467e92628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558467e92440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558467e924c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x558467e926d8 <line:508:22>
| `-NonNullAttr 0x558467e92730 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e929f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x558467e92778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558467e927f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x558467e92878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x558467e92ab0 <line:512:22>
| `-NonNullAttr 0x558467e92b08 <col:63, col:80> 1 3
|-FunctionDecl 0x558467e92c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558467e92b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558467e92cb8 <line:514:22>
| `-NonNullAttr 0x558467e92d10 <col:63, col:77> 1
|-FunctionDecl 0x558467e92f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558467e92dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x558467e92fe0 <line:516:22>
| `-NonNullAttr 0x558467e93038 <col:63, col:77> 1
|-FunctionDecl 0x558467e93140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558467e93088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x558467e931e8 <line:518:22>
| `-NonNullAttr 0x558467e93240 <col:63, col:77> 1
|-FunctionDecl 0x558467e93468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558467e93288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558467e93308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x558467e93518 <line:522:22>
| `-NonNullAttr 0x558467e93570 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e93778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558467e935b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558467e93638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x558467e93828 <line:525:22>
| `-NonNullAttr 0x558467e93880 <col:63, col:77> 1
|-FunctionDecl 0x558467e93a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558467e938c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558467e93948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x558467e93ad8 <line:528:22>
| `-NonNullAttr 0x558467e93b30 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e93cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558467e93b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558467e93bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x558467e93d68 <line:530:22>
| `-NonNullAttr 0x558467e93dc0 <col:63, col:77> 1
|-FunctionDecl 0x558467e94f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558467e93e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558467e94eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x558467e95040 <line:534:22>
| `-NonNullAttr 0x558467e95098 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e95228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558467e950e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558467e95168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x558467e952d8 <line:537:22>
| `-NonNullAttr 0x558467e95330 <col:63, col:77> 1
|-FunctionDecl 0x558467e954d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558467e95378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558467e953f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x558467e95588 <line:541:22>
| `-NonNullAttr 0x558467e955e0 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e95768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558467e95628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558467e956a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x558467e95818 <line:544:22>
| `-NonNullAttr 0x558467e95870 <col:63, col:77> 1
|-FunctionDecl 0x558467e95a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x558467e958b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x558467e95938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x558467e95b08 <line:547:22>
| `-NonNullAttr 0x558467e95b60 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e95ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558467e95ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558467e95c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x558467e95d98 <line:550:22>
| `-NonNullAttr 0x558467e95df0 <col:63, col:77> 1
|-FunctionDecl 0x558467e97168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x558467e96f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558467e97020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x558467e97218 <col:29>
| `-NonNullAttr 0x558467e97270 <col:70, col:84> 1
|-FunctionDecl 0x558467e973e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558467e972b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558467e97490 <line:555:22>
| `-NonNullAttr 0x558467e974e8 <col:63, col:77> 1
|-FunctionDecl 0x558467e975f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558467e97538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558467e97698 <line:557:22>
| `-NonNullAttr 0x558467e976f0 <col:52, col:66> 1
|-FunctionDecl 0x558467e977f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558467e97738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558467e97898 <line:559:19>
| `-NonNullAttr 0x558467e978f0 <col:49, col:63> 1
|-FunctionDecl 0x558467e97b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558467e97938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558467e979c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558467e97bd8 <col:39>
| `-NonNullAttr 0x558467e97c30 <col:69, col:86> 1 2
|-FunctionDecl 0x558467e97d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558467e97c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558467e97dd8 <line:564:22>
| `-NonNullAttr 0x558467e97e30 <col:52, col:66> 1
|-FunctionDecl 0x558467e97f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558467e97ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558467e98040 <line:566:22>
| `-NonNullAttr 0x558467e98098 <col:52, col:66> 1
|-FunctionDecl 0x558467e98258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558467e980e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558467e98178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558467e98308 <col:39>
| `-NonNullAttr 0x558467e98360 <col:69, col:86> 1 2
|-FunctionDecl 0x558467e98460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558467e983a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558467e98508 <line:571:22>
| `-NonNullAttr 0x558467e98560 <col:52, col:66> 1
|-FunctionDecl 0x558467e98748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x558467e98610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x558467e987f0 <line:573:22>
| `-NonNullAttr 0x558467e98848 <col:63, col:77> 1
|-FunctionDecl 0x558467e98950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x558467e98898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x558467e989f8 <line:575:22>
| `-NonNullAttr 0x558467e98a50 <col:63, col:77> 1
|-FunctionDecl 0x558467e98c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558467e98a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x558467e98b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x558467e98d28 <line:579:22>
| `-NonNullAttr 0x558467e98d80 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e98fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x558467e98dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x558467e98e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x558467e99058 <line:582:22>
| `-NonNullAttr 0x558467e990b0 <col:63, col:77> 1
|-FunctionDecl 0x558467e99258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558467e990f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x558467e99178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x558467e99308 <line:586:22>
| `-NonNullAttr 0x558467e99360 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e994e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x558467e993a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x558467e99428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x558467e99598 <col:36>
| `-NonNullAttr 0x558467e995f0 <col:77, col:91> 1
|-FunctionDecl 0x558467e99928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x558467e996d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558467e997e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x558467e999d8 <line:591:22>
| `-NonNullAttr 0x558467e99a30 <col:63, col:77> 1
|-FunctionDecl 0x558467e99ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558467e99a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558467e99c50 <line:593:22>
| `-NonNullAttr 0x558467e99ca8 <col:63, col:77> 1
|-FunctionDecl 0x558467e99db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558467e99cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558467e99e58 <line:595:22>
| `-NonNullAttr 0x558467e99eb0 <col:52, col:66> 1
|-FunctionDecl 0x558467e99fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558467e99f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558467e9a070 <line:597:22>
| `-NonNullAttr 0x558467e9a0c8 <col:52, col:66> 1
|-FunctionDecl 0x558467e9a2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x558467e9a118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558467e9a190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x558467e9a3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x558467e9a6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558467e9a428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558467e9a4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558467e9a530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x558467e9a790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x558467e9a9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x558467e9a870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x558467e9aa50 <line:606:22>
| `-NonNullAttr 0x558467e9aaa8 <col:63, col:77> 1
|-FunctionDecl 0x558467e9abb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x558467e9aaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x558467e9ac58 <line:608:22>
| `-NonNullAttr 0x558467e9acb0 <col:63, col:77> 1
|-FunctionDecl 0x558467e9af10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558467e9acf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x558467e9ad78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x558467e9afc0 <line:612:22>
| `-NonNullAttr 0x558467e9b018 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e9b228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x558467e9b068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x558467e9b0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x558467e9b2d8 <col:37>
| `-NonNullAttr 0x558467e9b330 <col:78, col:92> 1
|-FunctionDecl 0x558467e9b548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x558467e9b378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x558467e9b420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x558467e9b5f8 <line:618:22>
| `-NonNullAttr 0x558467e9b650 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e9b818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x558467e9b698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x558467e9b710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x558467e9b8c8 <line:621:22>
| `-NonNullAttr 0x558467e9b920 <col:63, col:77> 1
|-FunctionDecl 0x558467e9bbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x558467e9ba00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x558467e9ba80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x558467e9bc78 <line:623:22>
| `-NonNullAttr 0x558467e9bcd0 <col:63, col:77> 1
|-FunctionDecl 0x558467e9be48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558467e9bd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558467e9bf20 <line:625:22>
| `-NonNullAttr 0x558467e9bf78 <col:63, col:77> 1
|-FunctionDecl 0x558467e9c080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558467e9bfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558467e9c128 <line:627:22>
| `-NonNullAttr 0x558467e9c180 <col:52, col:66> 1
|-FunctionDecl 0x558467e9c280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558467e9c1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558467e9c328 <line:629:22>
| `-NonNullAttr 0x558467e9c380 <col:52, col:66> 1
|-FunctionDecl 0x558467e9c480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558467e9c3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558467e9c528 <line:631:22>
| `-NonNullAttr 0x558467e9c580 <col:52, col:66> 1
|-FunctionDecl 0x558467e9c958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x558467e9c660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x558467e9c770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x558467e9c7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x558467e9ca10 <line:635:22>
| `-NonNullAttr 0x558467e9ca68 <col:63, col:77> 1
|-FunctionDecl 0x558467e9cbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558467e9cab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558467e9cc90 <line:637:22>
| `-NonNullAttr 0x558467e9cce8 <col:63, col:77> 1
|-FunctionDecl 0x558467e9cdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558467e9cd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558467e9ce98 <line:639:22>
| `-NonNullAttr 0x558467e9cef0 <col:52, col:66> 1
|-FunctionDecl 0x558467e9d0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558467e9cfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558467e9d190 <line:641:22>
| `-NonNullAttr 0x558467e9d1e8 <col:63, col:77> 1
|-FunctionDecl 0x558467e9d2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558467e9d238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558467e9d398 <line:643:22>
| `-NonNullAttr 0x558467e9d3f0 <col:63, col:77> 1
|-FunctionDecl 0x558467e9d618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558467e9d438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x558467e9d4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x558467e9d6c8 <line:647:22>
| `-NonNullAttr 0x558467e9d720 <col:63, col:80> 1 2
|-FunctionDecl 0x558467e9d928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x558467e9d768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x558467e9d7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x558467e9d9d8 <line:650:22>
| `-NonNullAttr 0x558467e9da30 <col:63, col:77> 1
|-FunctionDecl 0x558467e9dd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x558467e9db10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x558467e9dc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x558467e9de28 <line:653:22>
| `-NonNullAttr 0x558467e9de80 <col:63, col:77> 1
|-FunctionDecl 0x558467e9dfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x558467e9dec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558467e9e090 <col:69>
|-FunctionDecl 0x558467e9e208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x558467e9e0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558467e9e2b0 <col:72>
|-FunctionDecl 0x558467e9e4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x558467e9e318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x558467e9e3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x558467e9e598 <col:44>
|-FunctionDecl 0x558467e9e7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x558467e9e600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558467e9e678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x558467e9e868 <line:660:22>
| `-NonNullAttr 0x558467e9e8c0 <col:63, col:77> 2
|-FunctionDecl 0x558467e9ed08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x558467e9e9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x558467e9eab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x558467e9ebc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x558467e9edc0 <col:47>
|-FunctionDecl 0x558467e9ff60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x558467e9ee30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558467ea00b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x558467ea0020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558467ea0210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x558467ea0178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558467ea02d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x558467ea0398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x558467ea0458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x558467ea0510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x558467ea0590 prev 0x558467ea0510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x558467ea05f8 <col:24> 'int' 0
|-VarDecl 0x558467ea0630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x558467ea06b0 prev 0x558467ea0630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x558467ea0718 <col:27> 'int' 0
|-VarDecl 0x558467ea0750 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x558467ea07d0 prev 0x558467ea0750 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x558467ea0838 <col:27> 'int' 0
|-VarDecl 0x558467ea0870 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x558467ea08f0 prev 0x558467ea0870 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x558467ea0958 <col:27> 'int' 0
|-VarDecl 0x558467ea0988 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x558467ea0a00 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x558467ea0a80 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x558467ea0b00 prev 0x558467ea0a80 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x558467ea0b68 <col:9> 'int' 0
|-VarDecl 0x558467ea0ba0 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x558467ea0c20 prev 0x558467ea0ba0 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x558467ea0c88 <col:9> 'int' 0
|-VarDecl 0x558467ea0cc0 <line:685:1, col:5> col:5 used z 'int'
|-VarDecl 0x558467ea0d40 prev 0x558467ea0cc0 <line:686:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x558467ea0da8 <col:9> 'int' 0
|-VarDecl 0x558467ea0dd8 <line:687:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x558467ea0e58 <line:688:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x558467ea0ed0 <line:689:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x558467ea0f70 <line:690:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x558467ea0fe8 <line:691:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x558467ea1060 <line:692:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x558467ea10d8 <line:693:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x558467ea1150 <line:694:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x558467ea11c8 <line:695:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x558467ea1240 <line:696:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x558467ea12b8 <line:697:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x558467ea1338 <line:698:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x558467ea13b8 <line:699:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x558467ea1430 <line:700:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x558467ea14b0 <line:701:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x558467ea1528 <line:702:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x558467ea15a0 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x558467ea1618 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x558467ea1730 prev 0x558467e9ff60 <line:705:1, line:733:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x558467ea1698 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558467ea2f90 <line:706:1, line:733:1>
|   |-CallExpr 0x558467ea1848 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558467ea1830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea17d8 <col:3> 'void ()' Function 0x558467e47350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558467ea18c0 <line:708:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558467ea1868 <col:3> 'int' lvalue Var 0x558467ea14b0 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x558467ea18a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558467ea1888 <col:15> 'int' lvalue Var 0x558467ea13b8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x558467ea1920 <line:709:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558467ea18e0 <col:3> 'int' lvalue Var 0x558467ea13b8 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x558467ea1900 <col:15> 'int' 1
|   |-BinaryOperator 0x558467ea1998 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea1940 <col:3> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea1980 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558467ea1960 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558467ea1a30 <line:711:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea19b8 <col:3> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x558467ea1a08 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558467ea19d8 <col:27> 'int' 1
|   |-CallExpr 0x558467ea1bb8 <line:712:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x558467ea1ba0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x558467ea1a50 <col:3> 'void (int)' Function 0x558467e470d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x558467ea1b50 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x558467ea1b30 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x558467ea1b10 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x558467ea1ac8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x558467ea1ab0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x558467ea1a70 <col:23> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x558467ea1af8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x558467ea1ae0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x558467ea1a90 <col:41> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558467ea1c38 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea1be0 <col:3> '_Bool' lvalue Var 0x558467ea10d8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea1c20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558467ea1c00 <col:20> '_Bool' lvalue Var 0x558467ea0ed0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x558467ea1cb0 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea1c58 <col:3> '_Bool' lvalue Var 0x558467ea1150 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea1c98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558467ea1c78 <col:20> '_Bool' lvalue Var 0x558467ea0f70 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558467ea1d28 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea1cd0 <col:3> '_Bool' lvalue Var 0x558467ea11c8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea1d10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558467ea1cf0 <col:20> '_Bool' lvalue Var 0x558467ea0fe8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558467ea1da0 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea1d48 <col:3> '_Bool' lvalue Var 0x558467ea1240 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea1d88 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558467ea1d68 <col:20> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558467ea1e38 <line:717:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea1dc0 <col:3> '_Bool' lvalue Var 0x558467ea0f70 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x558467ea1e10 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558467ea1de0 <col:27> 'int' 1
|   |-CallExpr 0x558467ea1e90 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558467ea1e78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea1e58 <col:3> 'void ()' Function 0x558467e47410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558467ea1ee8 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558467ea1ed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea1eb0 <col:3> 'void ()' Function 0x558467e47350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558467ea1f80 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558467ea1f08 <col:3> 'int' lvalue Var 0x558467ea06b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x558467ea1f48 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558467ea1f28 <col:25> 'int' lvalue Var 0x558467ea0b00 'x' 'int'
|   |-CallExpr 0x558467ea1fd8 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558467ea1fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea1fa0 <col:3> 'void ()' Function 0x558467e47410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558467ea2030 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558467ea2018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea1ff8 <col:3> 'void ()' Function 0x558467e47350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558467ea2318 <line:723:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558467ea2050 <col:3> 'int' lvalue Var 0x558467ea0d40 'z' 'int'
|   | `-ConditionalOperator 0x558467ea22e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558467ea2110 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558467ea20c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558467ea20b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558467ea2070 <col:7> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558467ea20f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558467ea20e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558467ea2090 <col:25> '_Bool' lvalue Var 0x558467ea0f70 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x558467ea22d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558467ea2130 <col:42> 'int' lvalue Var 0x558467ea13b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x558467ea22b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558467ea2280 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558467ea21f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558467ea21a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558467ea2190 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558467ea2150 <col:55> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558467ea21d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558467ea21c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558467ea2170 <col:73> '_Bool' lvalue Var 0x558467ea1150 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x558467ea2250 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558467ea2210 <col:90> 'int' lvalue Var 0x558467ea14b0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558467ea2268 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558467ea2230 <col:102> 'int' lvalue Var 0x558467ea0d40 'z' 'int'
|   |-BinaryOperator 0x558467ea2520 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea2338 <col:3> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea2508 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558467ea24d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558467ea23f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558467ea23b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558467ea2398 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558467ea2358 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558467ea23e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558467ea23c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558467ea2378 <col:38> '_Bool' lvalue Var 0x558467ea0f70 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558467ea2490 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558467ea2448 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558467ea2418 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558467ea24c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558467ea24a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558467ea2470 <col:66> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558467ea2808 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea2540 <col:3> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea27f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558467ea27c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558467ea26e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558467ea2600 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558467ea25b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558467ea25a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558467ea2560 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558467ea25e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558467ea25d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558467ea2580 <col:38> '_Bool' lvalue Var 0x558467ea0f70 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x558467ea26c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558467ea2678 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558467ea2660 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558467ea2620 <col:56> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558467ea26a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558467ea2690 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558467ea2640 <col:74> '_Bool' lvalue Var 0x558467ea1150 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558467ea2778 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558467ea2730 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558467ea2700 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558467ea27a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558467ea2790 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558467ea2758 <col:102> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558467ea2a10 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea2828 <col:3> '_Bool' lvalue Var 0x558467ea0f70 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea29f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558467ea29c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558467ea28e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558467ea28a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558467ea2888 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558467ea2848 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558467ea28d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558467ea28b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558467ea2868 <col:38> '_Bool' lvalue Var 0x558467ea0f70 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558467ea2980 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558467ea2938 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558467ea2908 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558467ea29b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558467ea2998 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558467ea2960 <col:66> '_Bool' lvalue Var 0x558467ea0f70 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558467ea2cf8 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea2a30 <col:3> '_Bool' lvalue Var 0x558467ea1150 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea2ce0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558467ea2cb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558467ea2bd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558467ea2af0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558467ea2aa8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558467ea2a90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558467ea2a50 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558467ea2ad8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558467ea2ac0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558467ea2a70 <col:38> '_Bool' lvalue Var 0x558467ea0f70 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x558467ea2bb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558467ea2b68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558467ea2b50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558467ea2b10 <col:56> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558467ea2b98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558467ea2b80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558467ea2b30 <col:74> '_Bool' lvalue Var 0x558467ea1150 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558467ea2c68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558467ea2c20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558467ea2bf0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558467ea2c98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558467ea2c80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558467ea2c48 <col:102> '_Bool' lvalue Var 0x558467ea1150 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x558467ea2d50 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558467ea2d38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea2d18 <col:3> 'void ()' Function 0x558467e47410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558467ea2da8 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558467ea2d90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea2d70 <col:3> 'void ()' Function 0x558467e47350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558467ea2e60 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558467ea2dc8 <col:3> 'int' lvalue Var 0x558467ea0590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558467ea2e40 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558467ea2e28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558467ea2de8 <col:22> 'int' lvalue Var 0x558467ea0590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558467ea2e08 <col:41> 'int' 1
|   |-CallExpr 0x558467ea2eb8 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558467ea2ea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea2e80 <col:3> 'void ()' Function 0x558467e47410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558467ea2f68 <line:732:3, col:36>
|     `-CallExpr 0x558467ea2f48 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558467ea2f30 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558467ea2ed8 <col:10> 'void *(void)' Function 0x558467e46e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558467ea3120 prev 0x558467ea00b8 <line:734:1, line:753:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x558467ea3088 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558467ea4360 <line:735:1, line:753:1>
|   |-CallExpr 0x558467ea3200 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558467ea31e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea31c8 <col:3> 'void ()' Function 0x558467e47350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558467ea3260 <line:737:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558467ea3220 <col:3> 'int' lvalue Var 0x558467ea0b00 'x' 'int'
|   | `-IntegerLiteral 0x558467ea3240 <col:7> 'int' 1
|   |-CallExpr 0x558467ea32b8 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558467ea32a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea3280 <col:3> 'void ()' Function 0x558467e47410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558467ea3310 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558467ea32f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea32d8 <col:3> 'void ()' Function 0x558467e47350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558467ea3388 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558467ea3330 <col:3> 'int' lvalue Var 0x558467ea07d0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x558467ea3370 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558467ea3350 <col:25> 'int' lvalue Var 0x558467ea0c20 'y' 'int'
|   |-CallExpr 0x558467ea33e0 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558467ea33c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea33a8 <col:3> 'void ()' Function 0x558467e47410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558467ea3438 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558467ea3420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea3400 <col:3> 'void ()' Function 0x558467e47350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558467ea3720 <line:743:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558467ea3458 <col:3> 'int' lvalue Var 0x558467ea0d40 'z' 'int'
|   | `-ConditionalOperator 0x558467ea36f0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558467ea3518 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558467ea34d0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558467ea34b8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558467ea3478 <col:7> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558467ea3500 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558467ea34e8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558467ea3498 <col:25> '_Bool' lvalue Var 0x558467ea0fe8 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x558467ea36d8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558467ea3538 <col:42> 'int' lvalue Var 0x558467ea13b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x558467ea36b8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558467ea3688 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558467ea35f8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558467ea35b0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558467ea3598 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558467ea3558 <col:55> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558467ea35e0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558467ea35c8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558467ea3578 <col:73> '_Bool' lvalue Var 0x558467ea11c8 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x558467ea3658 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558467ea3618 <col:90> 'int' lvalue Var 0x558467ea14b0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558467ea3670 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558467ea3638 <col:102> 'int' lvalue Var 0x558467ea0d40 'z' 'int'
|   |-BinaryOperator 0x558467ea3928 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea3740 <col:3> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea3910 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558467ea38e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558467ea3800 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558467ea37b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558467ea37a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558467ea3760 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558467ea37e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558467ea37d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558467ea3780 <col:38> '_Bool' lvalue Var 0x558467ea0fe8 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558467ea3898 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558467ea3850 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558467ea3820 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558467ea38c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558467ea38b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558467ea3878 <col:66> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558467ea3c10 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea3948 <col:3> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea3bf8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558467ea3bc8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558467ea3ae8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558467ea3a08 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558467ea39c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558467ea39a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558467ea3968 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558467ea39f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558467ea39d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558467ea3988 <col:38> '_Bool' lvalue Var 0x558467ea0fe8 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x558467ea3ac8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558467ea3a80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558467ea3a68 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558467ea3a28 <col:56> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558467ea3ab0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558467ea3a98 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558467ea3a48 <col:74> '_Bool' lvalue Var 0x558467ea11c8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558467ea3b80 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558467ea3b38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558467ea3b08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558467ea3bb0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558467ea3b98 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558467ea3b60 <col:102> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558467ea3e18 <line:746:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea3c30 <col:3> '_Bool' lvalue Var 0x558467ea0fe8 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea3e00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558467ea3dd0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558467ea3cf0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558467ea3ca8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558467ea3c90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558467ea3c50 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558467ea3cd8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558467ea3cc0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558467ea3c70 <col:38> '_Bool' lvalue Var 0x558467ea0fe8 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558467ea3d88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558467ea3d40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558467ea3d10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558467ea3db8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558467ea3da0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558467ea3d68 <col:66> '_Bool' lvalue Var 0x558467ea0fe8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558467ea4118 <line:747:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea3e38 <col:3> '_Bool' lvalue Var 0x558467ea11c8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea4100 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558467ea40d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558467ea3ff0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558467ea3ef8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558467ea3eb0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558467ea3e98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558467ea3e58 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558467ea3ee0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558467ea3ec8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558467ea3e78 <col:38> '_Bool' lvalue Var 0x558467ea0fe8 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x558467ea3fd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558467ea3f70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558467ea3f58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558467ea3f18 <col:56> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558467ea3fb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558467ea3fa0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558467ea3f38 <col:74> '_Bool' lvalue Var 0x558467ea11c8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558467ea4088 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558467ea4040 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558467ea4010 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558467ea40b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558467ea40a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558467ea4068 <col:102> '_Bool' lvalue Var 0x558467ea11c8 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x558467ea4170 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558467ea4158 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea4138 <col:3> 'void ()' Function 0x558467e47410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558467ea41c8 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558467ea41b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea4190 <col:3> 'void ()' Function 0x558467e47350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558467ea4280 <line:750:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558467ea41e8 <col:3> 'int' lvalue Var 0x558467ea0590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558467ea4260 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558467ea4248 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558467ea4208 <col:22> 'int' lvalue Var 0x558467ea0590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558467ea4228 <col:41> 'int' 1
|   |-CallExpr 0x558467ea42d8 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558467ea42c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea42a0 <col:3> 'void ()' Function 0x558467e47410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558467ea4350 <line:752:3, col:36>
|     `-CallExpr 0x558467ea4330 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558467ea4318 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558467ea42f8 <col:10> 'void *(void)' Function 0x558467e46e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558467ea44a8 prev 0x558467ea0210 <line:754:1, line:786:1> line:754:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x558467ea4410 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558467ea80a0 <line:755:1, line:786:1>
|   |-CallExpr 0x558467ea4588 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558467ea4570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea4550 <col:3> 'void ()' Function 0x558467e47350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558467ea45e8 <line:757:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558467ea45a8 <col:3> 'int' lvalue Var 0x558467ea0c20 'y' 'int'
|   | `-IntegerLiteral 0x558467ea45c8 <col:7> 'int' 1
|   |-CallExpr 0x558467ea4640 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558467ea4628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea4608 <col:3> 'void ()' Function 0x558467e47410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558467ea4698 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558467ea4680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea4660 <col:3> 'void ()' Function 0x558467e47350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558467ea4748 <line:760:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea46b8 <col:3> '_Bool' lvalue Var 0x558467ea15a0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea4730 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x558467ea4710 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x558467ea46f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x558467ea46d8 <col:19> 'void *(void)' Function 0x558467e46e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x558467ea47f8 <line:761:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea4768 <col:3> '_Bool' lvalue Var 0x558467ea1618 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea47e0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x558467ea47c0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x558467ea47a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x558467ea4788 <col:19> 'void *(void)' Function 0x558467e46e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x558467ea4870 <line:762:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea4818 <col:3> '_Bool' lvalue Var 0x558467ea0dd8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea4858 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558467ea4838 <col:21> '_Bool' lvalue Var 0x558467ea1618 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x558467ea48e8 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558467ea4890 <col:3> 'int' lvalue Var 0x558467ea0e58 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x558467ea48d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558467ea48b0 <col:15> 'int' lvalue Var 0x558467ea0d40 'z' 'int'
|   |-BinaryOperator 0x558467ea4d20 <line:764:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x558467ea4908 <col:3> 'int' lvalue Var 0x558467ea0d40 'z' 'int'
|   | `-ConditionalOperator 0x558467ea4cf0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x558467ea4b18 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x558467ea4a38 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x558467ea4960 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x558467ea4948 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x558467ea4928 <col:8> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x558467ea4a18 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x558467ea49b0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x558467ea4998 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x558467ea4978 <col:27> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x558467ea4a00 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x558467ea49e8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x558467ea49c8 <col:46> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x558467ea4af8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x558467ea4a90 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x558467ea4a78 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x558467ea4a58 <col:65> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x558467ea4ae0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x558467ea4ac8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x558467ea4aa8 <col:84> '_Bool' lvalue Var 0x558467ea1240 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x558467ea4cd8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558467ea4b38 <col:101> 'int' lvalue Var 0x558467ea0d40 'z' 'int'
|   |   `-ParenExpr 0x558467ea4cb8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x558467ea4c88 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x558467ea4bf8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558467ea4bb0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558467ea4b98 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558467ea4b58 <col:106> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558467ea4be0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558467ea4bc8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558467ea4b78 <col:124> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558467ea4c58 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558467ea4c18 <col:141> 'int' lvalue Var 0x558467ea13b8 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x558467ea4c70 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558467ea4c38 <col:153> 'int' lvalue Var 0x558467ea14b0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x558467ea5250 <line:765:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x558467ea4d40 <col:3> 'int' lvalue Var 0x558467ea13b8 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x558467ea5220 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x558467ea51f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558467ea51d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558467ea4d60 <col:15> '_Bool' lvalue Var 0x558467ea1618 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x558467ea5208 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558467ea4d80 <col:31> 'int' lvalue Var 0x558467ea13b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x558467ea51b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x558467ea5188 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x558467ea4fb0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x558467ea4eb0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x558467ea4dd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x558467ea4dc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x558467ea4da0 <col:45> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x558467ea4e90 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x558467ea4e28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x558467ea4e10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x558467ea4df0 <col:64> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x558467ea4e78 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x558467ea4e60 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x558467ea4e40 <col:83> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x558467ea4f70 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x558467ea4f08 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x558467ea4ef0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x558467ea4ed0 <col:102> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x558467ea4f58 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x558467ea4f40 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x558467ea4f20 <col:121> '_Bool' lvalue Var 0x558467ea1240 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558467ea5170 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558467ea4fd0 <col:138> 'int' lvalue Var 0x558467ea13b8 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x558467ea5150 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x558467ea5120 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x558467ea5090 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x558467ea5048 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x558467ea5030 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x558467ea4ff0 <col:151> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x558467ea5078 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x558467ea5060 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558467ea5010 <col:169> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x558467ea50f0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x558467ea50b0 <col:186> 'int' lvalue Var 0x558467ea13b8 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x558467ea5108 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x558467ea50d0 <col:198> 'int' lvalue Var 0x558467ea13b8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x558467ea5760 <line:766:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x558467ea5270 <col:3> 'int' lvalue Var 0x558467ea14b0 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x558467ea5730 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x558467ea5700 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558467ea56e8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558467ea5290 <col:15> '_Bool' lvalue Var 0x558467ea1618 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x558467ea5718 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558467ea52b0 <col:31> 'int' lvalue Var 0x558467ea14b0 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x558467ea56c8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x558467ea5698 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x558467ea54c0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x558467ea53e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x558467ea5308 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x558467ea52f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x558467ea52d0 <col:45> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x558467ea53c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x558467ea5358 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x558467ea5340 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x558467ea5320 <col:64> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x558467ea53a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x558467ea5390 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x558467ea5370 <col:83> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x558467ea54a0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x558467ea5438 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x558467ea5420 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x558467ea5400 <col:102> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x558467ea5488 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x558467ea5470 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x558467ea5450 <col:121> '_Bool' lvalue Var 0x558467ea1240 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558467ea5680 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558467ea54e0 <col:138> 'int' lvalue Var 0x558467ea14b0 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x558467ea5660 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x558467ea5630 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x558467ea55a0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x558467ea5558 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x558467ea5540 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x558467ea5500 <col:151> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x558467ea5588 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x558467ea5570 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558467ea5520 <col:169> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x558467ea5600 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x558467ea55c0 <col:186> 'int' lvalue Var 0x558467ea14b0 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x558467ea5618 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x558467ea55e0 <col:198> 'int' lvalue Var 0x558467ea14b0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x558467ea5d08 <line:767:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea5780 <col:3> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea5cf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558467ea5cc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x558467ea5c78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558467ea5c60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558467ea57a0 <col:20> '_Bool' lvalue Var 0x558467ea1618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558467ea5ca8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558467ea5c90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558467ea57c0 <col:36> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x558467ea5c40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x558467ea5c10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x558467ea59d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558467ea58f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558467ea5818 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558467ea5800 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558467ea57e0 <col:55> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558467ea58d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558467ea5868 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558467ea5850 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558467ea5830 <col:74> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x558467ea58b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558467ea58a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558467ea5880 <col:93> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558467ea59b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558467ea5948 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558467ea5930 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558467ea5910 <col:112> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x558467ea5998 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558467ea5980 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558467ea5960 <col:131> '_Bool' lvalue Var 0x558467ea1240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x558467ea5bf8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558467ea5be0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558467ea59f0 <col:148> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x558467ea5bc0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x558467ea5b90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x558467ea5ab0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558467ea5a68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558467ea5a50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558467ea5a10 <col:166> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558467ea5a98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558467ea5a80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558467ea5a30 <col:184> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x558467ea5b48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558467ea5b00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558467ea5ad0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558467ea5b78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x558467ea5b60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x558467ea5b28 <col:212> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558467ea62f8 <line:768:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea5d28 <col:3> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea62e0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558467ea62b0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x558467ea6268 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558467ea6250 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558467ea5d48 <col:20> '_Bool' lvalue Var 0x558467ea1618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558467ea6298 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558467ea6280 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558467ea5d68 <col:36> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x558467ea6230 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x558467ea6200 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x558467ea5f78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558467ea5e98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558467ea5dc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558467ea5da8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558467ea5d88 <col:55> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558467ea5e78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558467ea5e10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558467ea5df8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558467ea5dd8 <col:74> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x558467ea5e60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558467ea5e48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558467ea5e28 <col:93> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558467ea5f58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558467ea5ef0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558467ea5ed8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558467ea5eb8 <col:112> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x558467ea5f40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558467ea5f28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558467ea5f08 <col:131> '_Bool' lvalue Var 0x558467ea1240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x558467ea61e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558467ea61d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558467ea5fc0 <col:148> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x558467ea61b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x558467ea6180 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x558467ea6080 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558467ea6038 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558467ea6020 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558467ea5fe0 <col:166> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558467ea6068 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558467ea6050 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558467ea6000 <col:184> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x558467ea6150 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558467ea60d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558467ea60a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558467ea6168 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x558467ea6128 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x558467ea60f8 <col:219> 'int' 0
|   |-BinaryOperator 0x558467ea68a0 <line:769:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea6318 <col:3> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea6888 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558467ea6858 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x558467ea6810 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558467ea67f8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558467ea6338 <col:20> '_Bool' lvalue Var 0x558467ea1618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558467ea6840 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558467ea6828 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558467ea6358 <col:36> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x558467ea67d8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x558467ea67a8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x558467ea6568 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558467ea6488 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558467ea63b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558467ea6398 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558467ea6378 <col:55> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558467ea6468 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558467ea6400 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558467ea63e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558467ea63c8 <col:74> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x558467ea6450 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558467ea6438 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558467ea6418 <col:93> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558467ea6548 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558467ea64e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558467ea64c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558467ea64a8 <col:112> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x558467ea6530 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558467ea6518 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558467ea64f8 <col:131> '_Bool' lvalue Var 0x558467ea1240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x558467ea6790 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558467ea6778 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558467ea6588 <col:148> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x558467ea6758 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x558467ea6728 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x558467ea6648 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558467ea6600 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558467ea65e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558467ea65a8 <col:166> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558467ea6630 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558467ea6618 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558467ea65c8 <col:184> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x558467ea66e0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558467ea6698 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558467ea6668 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558467ea6710 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x558467ea66f8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x558467ea66c0 <col:212> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558467ea6e68 <line:770:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea68c0 <col:3> '_Bool' lvalue Var 0x558467ea1240 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea6e50 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558467ea6e20 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x558467ea6dd8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558467ea6dc0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558467ea68e0 <col:20> '_Bool' lvalue Var 0x558467ea1618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558467ea6e08 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558467ea6df0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558467ea6900 <col:36> '_Bool' lvalue Var 0x558467ea1240 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x558467ea6da0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x558467ea6d70 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x558467ea6b10 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558467ea6a30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558467ea6958 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558467ea6940 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558467ea6920 <col:55> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558467ea6a10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558467ea69a8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558467ea6990 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558467ea6970 <col:74> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x558467ea69f8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558467ea69e0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558467ea69c0 <col:93> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558467ea6af0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558467ea6a88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558467ea6a70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558467ea6a50 <col:112> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x558467ea6ad8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558467ea6ac0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558467ea6aa0 <col:131> '_Bool' lvalue Var 0x558467ea1240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x558467ea6d58 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558467ea6d40 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558467ea6b30 <col:148> '_Bool' lvalue Var 0x558467ea1240 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x558467ea6d20 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x558467ea6cf0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x558467ea6bf0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558467ea6ba8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558467ea6b90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558467ea6b50 <col:166> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558467ea6bd8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558467ea6bc0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558467ea6b70 <col:184> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x558467ea6cc0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558467ea6c40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558467ea6c10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558467ea6cd8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x558467ea6c98 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x558467ea6c68 <col:219> 'int' 0
|   |-BinaryOperator 0x558467ea6ee0 <line:771:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558467ea6e88 <col:3> 'int' lvalue Var 0x558467ea08f0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x558467ea6ec8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558467ea6ea8 <col:25> 'int' lvalue Var 0x558467ea0d40 'z' 'int'
|   |-BinaryOperator 0x558467ea7030 <line:772:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x558467ea6f00 <col:3> 'int' lvalue Var 0x558467ea0d40 'z' 'int'
|   | `-ConditionalOperator 0x558467ea7000 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x558467ea6f98 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558467ea6f80 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558467ea6f20 <col:7> '_Bool' lvalue Var 0x558467ea0dd8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x558467ea6fd0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558467ea6f40 <col:25> 'int' lvalue Var 0x558467ea0e58 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x558467ea6fe8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x558467ea6f60 <col:37> 'int' lvalue Var 0x558467ea0d40 'z' 'int'
|   |-BinaryOperator 0x558467ea70c8 <line:773:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea7050 <col:3> '_Bool' lvalue Var 0x558467ea0dd8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x558467ea70a0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558467ea7070 <col:28> 'int' 0
|   |-CallExpr 0x558467ea7120 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558467ea7108 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea70e8 <col:3> 'void ()' Function 0x558467e47410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558467ea7178 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558467ea7160 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea7140 <col:3> 'void ()' Function 0x558467e47350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558467ea7460 <line:776:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558467ea7198 <col:3> 'int' lvalue Var 0x558467ea0d40 'z' 'int'
|   | `-ConditionalOperator 0x558467ea7430 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558467ea7258 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558467ea7210 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558467ea71f8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558467ea71b8 <col:7> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558467ea7240 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558467ea7228 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558467ea71d8 <col:25> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x558467ea7418 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558467ea7278 <col:42> 'int' lvalue Var 0x558467ea13b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x558467ea73f8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558467ea73c8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558467ea7338 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558467ea72f0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558467ea72d8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558467ea7298 <col:55> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558467ea7320 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558467ea7308 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558467ea72b8 <col:73> '_Bool' lvalue Var 0x558467ea1240 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558467ea7398 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558467ea7358 <col:90> 'int' lvalue Var 0x558467ea14b0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558467ea73b0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558467ea7378 <col:102> 'int' lvalue Var 0x558467ea0d40 'z' 'int'
|   |-BinaryOperator 0x558467ea7668 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea7480 <col:3> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea7650 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558467ea7620 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558467ea7540 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558467ea74f8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558467ea74e0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558467ea74a0 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558467ea7528 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558467ea7510 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558467ea74c0 <col:38> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558467ea75d8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558467ea7590 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558467ea7560 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558467ea7608 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558467ea75f0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558467ea75b8 <col:66> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558467ea7950 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea7688 <col:3> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea7938 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558467ea7908 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558467ea7828 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558467ea7748 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558467ea7700 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558467ea76e8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558467ea76a8 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558467ea7730 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558467ea7718 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558467ea76c8 <col:38> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x558467ea7808 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558467ea77c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558467ea77a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558467ea7768 <col:56> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558467ea77f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558467ea77d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558467ea7788 <col:74> '_Bool' lvalue Var 0x558467ea1240 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558467ea78c0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558467ea7878 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558467ea7848 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558467ea78f0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558467ea78d8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558467ea78a0 <col:102> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558467ea7b58 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea7970 <col:3> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea7b40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558467ea7b10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558467ea7a30 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558467ea79e8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558467ea79d0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558467ea7990 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558467ea7a18 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558467ea7a00 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558467ea79b0 <col:38> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558467ea7ac8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558467ea7a80 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558467ea7a50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558467ea7af8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558467ea7ae0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558467ea7aa8 <col:66> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558467ea7e40 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558467ea7b78 <col:3> '_Bool' lvalue Var 0x558467ea1240 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558467ea7e28 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558467ea7df8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558467ea7d18 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558467ea7c38 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558467ea7bf0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558467ea7bd8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558467ea7b98 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558467ea7c20 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558467ea7c08 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558467ea7bb8 <col:38> '_Bool' lvalue Var 0x558467ea1060 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x558467ea7cf8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558467ea7cb0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558467ea7c98 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558467ea7c58 <col:56> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558467ea7ce0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558467ea7cc8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558467ea7c78 <col:74> '_Bool' lvalue Var 0x558467ea1240 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558467ea7db0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558467ea7d68 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558467ea7d38 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558467ea7de0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558467ea7dc8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558467ea7d90 <col:102> '_Bool' lvalue Var 0x558467ea1240 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x558467ea7e98 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558467ea7e80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea7e60 <col:3> 'void ()' Function 0x558467e47410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558467ea7ef0 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558467ea7ed8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea7eb8 <col:3> 'void ()' Function 0x558467e47350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558467ea7fa8 <line:783:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558467ea7f10 <col:3> 'int' lvalue Var 0x558467ea0590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558467ea7f88 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558467ea7f70 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558467ea7f30 <col:22> 'int' lvalue Var 0x558467ea0590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558467ea7f50 <col:41> 'int' 1
|   |-CallExpr 0x558467ea8018 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558467ea8000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558467ea7fe0 <col:3> 'void ()' Function 0x558467e47410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558467ea8090 <line:785:3, col:36>
|     `-CallExpr 0x558467ea8070 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558467ea8058 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558467ea8038 <col:10> 'void *(void)' Function 0x558467e46e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558467ea81c0 prev 0x558467ea02d8 <line:787:1, line:789:1> line:787:6 fence 'void ()'
| `-CompoundStmt 0x558467ea8260 <line:788:1, line:789:1>
|-FunctionDecl 0x558467ea8290 prev 0x558467ea0398 <line:790:1, line:792:1> line:790:6 isync 'void ()'
| `-CompoundStmt 0x558467ea8330 <line:791:1, line:792:1>
|-FunctionDecl 0x558467ea8360 prev 0x558467ea0458 <line:793:1, line:795:1> line:793:6 lwfence 'void ()'
| `-CompoundStmt 0x558467ea8400 <line:794:1, line:795:1>
`-FunctionDecl 0x558467ea8468 <line:796:1, line:820:1> line:796:5 main 'int ()'
  `-CompoundStmt 0x558467eaa0c0 <line:797:1, line:820:1>
    |-DeclStmt 0x558467ea8580 <line:798:3, col:18>
    | `-VarDecl 0x558467ea8518 <col:3, col:13> col:13 used t1308 'pthread_t':'unsigned long'
    |-CallExpr 0x558467ea8788 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x558467ea8770 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558467ea8598 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558467e878f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558467ea85d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558467ea85b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558467ea8518 't1308' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558467ea87c8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558467ea8650 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x558467ea8628 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558467ea85f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x558467ea87e0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558467ea8670 <col:39> 'void *(void *)' Function 0x558467ea1730 'P0' 'void *(void *)'
    | `-ParenExpr 0x558467ea86f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x558467ea86c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558467ea8690 <col:52> 'int' 0
    |-DeclStmt 0x558467ea8870 <line:800:3, col:18>
    | `-VarDecl 0x558467ea8808 <col:3, col:13> col:13 used t1309 'pthread_t':'unsigned long'
    |-CallExpr 0x558467ea8a18 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x558467ea8a00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558467ea8888 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558467e878f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558467ea88c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558467ea88a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558467ea8808 't1309' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558467ea8a58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558467ea8940 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x558467ea8918 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558467ea88e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x558467ea8a70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558467ea8960 <col:39> 'void *(void *)' Function 0x558467ea3120 'P1' 'void *(void *)'
    | `-ParenExpr 0x558467ea89e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x558467ea89b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558467ea8980 <col:52> 'int' 0
    |-DeclStmt 0x558467ea8b00 <line:802:3, col:18>
    | `-VarDecl 0x558467ea8a98 <col:3, col:13> col:13 used t1310 'pthread_t':'unsigned long'
    |-CallExpr 0x558467ea8ca8 <line:803:3, col:54> 'int'
    | |-ImplicitCastExpr 0x558467ea8c90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558467ea8b18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558467e878f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558467ea8b58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558467ea8b38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558467ea8a98 't1310' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558467ea8ce8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558467ea8bd0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x558467ea8ba8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558467ea8b70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x558467ea8d00 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558467ea8bf0 <col:39> 'void *(void *)' Function 0x558467ea44a8 'P2' 'void *(void *)'
    | `-ParenExpr 0x558467ea8c70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x558467ea8c48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558467ea8c10 <col:52> 'int' 0
    |-CallExpr 0x558467ea8d50 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558467ea8d38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558467ea8d18 <col:3> 'void ()' Function 0x558467e47350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558467ea8e20 <line:805:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x558467ea8d70 <col:3> '_Bool' lvalue Var 0x558467ea0988 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x558467ea8e08 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x558467ea8de8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x558467ea8dd0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x558467ea8d90 <col:21> 'int' lvalue Var 0x558467ea0590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x558467ea8db0 <col:41> 'int' 3
    |-CallExpr 0x558467ea8e78 <line:806:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558467ea8e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558467ea8e40 <col:3> 'void ()' Function 0x558467e47410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558467ea8ef0 <line:807:3, col:36> 'void'
    | |-ImplicitCastExpr 0x558467ea8ed8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558467ea8e98 <col:3> 'void (int)' Function 0x558467e46ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x558467ea8f30 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x558467ea8f18 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x558467ea8eb8 <col:21> '_Bool' lvalue Var 0x558467ea0988 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x558467ea8f80 <line:808:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558467ea8f68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558467ea8f48 <col:3> 'void ()' Function 0x558467e47350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558467ea9278 <line:809:3, col:103> 'int' '='
    | |-DeclRefExpr 0x558467ea8fa0 <col:3> 'int' lvalue Var 0x558467ea0d40 'z' 'int'
    | `-ConditionalOperator 0x558467ea9248 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x558467ea9070 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x558467ea9028 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x558467ea9010 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x558467ea8fc0 <col:7> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x558467ea9058 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x558467ea9040 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x558467ea8ff0 <col:25> '_Bool' lvalue Var 0x558467ea0ed0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x558467ea9230 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x558467ea9090 <col:42> 'int' lvalue Var 0x558467ea13b8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x558467ea9210 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x558467ea91e0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x558467ea9150 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x558467ea9108 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x558467ea90f0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x558467ea90b0 <col:55> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x558467ea9138 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x558467ea9120 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x558467ea90d0 <col:73> '_Bool' lvalue Var 0x558467ea10d8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x558467ea91b0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x558467ea9170 <col:90> 'int' lvalue Var 0x558467ea14b0 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x558467ea91c8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x558467ea9190 <col:102> 'int' lvalue Var 0x558467ea0d40 'z' 'int'
    |-BinaryOperator 0x558467ea9480 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x558467ea9298 <col:3> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x558467ea9468 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558467ea9438 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x558467ea9358 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x558467ea9310 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x558467ea92f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x558467ea92b8 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x558467ea9340 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x558467ea9328 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558467ea92d8 <col:38> '_Bool' lvalue Var 0x558467ea0ed0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558467ea93f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558467ea93a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558467ea9378 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x558467ea9420 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558467ea9408 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558467ea93d0 <col:66> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x558467ea9768 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x558467ea94a0 <col:3> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x558467ea9750 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558467ea9720 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x558467ea9640 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x558467ea9560 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x558467ea9518 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x558467ea9500 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x558467ea94c0 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x558467ea9548 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x558467ea9530 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x558467ea94e0 <col:38> '_Bool' lvalue Var 0x558467ea0ed0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x558467ea9620 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x558467ea95d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x558467ea95c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x558467ea9580 <col:56> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x558467ea9608 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x558467ea95f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x558467ea95a0 <col:74> '_Bool' lvalue Var 0x558467ea10d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558467ea96d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558467ea9690 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558467ea9660 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x558467ea9708 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558467ea96f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558467ea96b8 <col:102> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x558467ea9970 <line:812:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x558467ea9788 <col:3> '_Bool' lvalue Var 0x558467ea0ed0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558467ea9958 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558467ea9928 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x558467ea9848 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x558467ea9800 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x558467ea97e8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x558467ea97a8 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x558467ea9830 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x558467ea9818 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558467ea97c8 <col:38> '_Bool' lvalue Var 0x558467ea0ed0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558467ea98e0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558467ea9898 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558467ea9868 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x558467ea9910 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558467ea98f8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558467ea98c0 <col:66> '_Bool' lvalue Var 0x558467ea0ed0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x558467ea9c58 <line:813:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x558467ea9990 <col:3> '_Bool' lvalue Var 0x558467ea10d8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558467ea9c40 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558467ea9c10 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x558467ea9b30 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x558467ea9a50 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x558467ea9a08 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x558467ea99f0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x558467ea99b0 <col:20> '_Bool' lvalue Var 0x558467ea1430 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x558467ea9a38 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x558467ea9a20 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x558467ea99d0 <col:38> '_Bool' lvalue Var 0x558467ea0ed0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x558467ea9b10 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x558467ea9ac8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x558467ea9ab0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x558467ea9a70 <col:56> '_Bool' lvalue Var 0x558467ea1528 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x558467ea9af8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x558467ea9ae0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x558467ea9a90 <col:74> '_Bool' lvalue Var 0x558467ea10d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558467ea9bc8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558467ea9b80 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558467ea9b50 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x558467ea9bf8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558467ea9be0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558467ea9ba8 <col:102> '_Bool' lvalue Var 0x558467ea10d8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x558467ea9cb0 <line:814:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558467ea9c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558467ea9c78 <col:3> 'void ()' Function 0x558467e47410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558467ea9d08 <line:815:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558467ea9cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558467ea9cd0 <col:3> 'void ()' Function 0x558467e47350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558467ea9f40 <line:816:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x558467ea9d28 <col:3> '_Bool' lvalue Var 0x558467ea0a00 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x558467ea9f28 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x558467ea9f10 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x558467ea9ef0 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x558467ea9ed0 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x558467ea9e38 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x558467ea9da0 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x558467ea9d88 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x558467ea9d48 <col:23> 'int' lvalue Var 0x558467ea06b0 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x558467ea9d68 <col:46> 'int' 0
    |         | `-BinaryOperator 0x558467ea9e18 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x558467ea9e00 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x558467ea9dc0 <col:51> 'int' lvalue Var 0x558467ea07d0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x558467ea9de0 <col:74> 'int' 0
    |         `-BinaryOperator 0x558467ea9eb0 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x558467ea9e98 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x558467ea9e58 <col:79> 'int' lvalue Var 0x558467ea08f0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x558467ea9e78 <col:102> 'int' 0
    |-CallExpr 0x558467ea9f98 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558467ea9f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558467ea9f60 <col:3> 'void ()' Function 0x558467e47410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558467eaa038 <line:818:3, col:36> 'void'
    | |-ImplicitCastExpr 0x558467eaa020 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558467ea9fb8 <col:3> 'void (int)' Function 0x558467e470d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x558467eaa078 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x558467eaa060 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x558467eaa000 <col:21> '_Bool' lvalue Var 0x558467ea0a00 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x558467eaa0b0 <line:819:3, col:10>
      `-IntegerLiteral 0x558467eaa090 <col:10> 'int' 0
