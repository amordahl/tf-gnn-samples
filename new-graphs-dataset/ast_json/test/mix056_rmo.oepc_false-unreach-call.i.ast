TranslationUnitDecl 0x5593a6d4cf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5593a6d4d848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5593a6d4d520 '__int128'
|-TypedefDecl 0x5593a6d4d8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5593a6d4d540 'unsigned __int128'
|-TypedefDecl 0x5593a6d4dbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5593a6d4d990 'struct __NSConstantString_tag'
|   `-Record 0x5593a6d4d910 '__NSConstantString_tag'
|-TypedefDecl 0x5593a6d4dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5593a6d4dc20 'char *'
|   `-BuiltinType 0x5593a6d4d020 'char'
|-TypedefDecl 0x5593a6d8cb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5593a6d4df00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5593a6d4dd40 'struct __va_list_tag'
|     `-Record 0x5593a6d4dcc0 '__va_list_tag'
|-FunctionDecl 0x5593a6d8cca0 <pthread-wmm/mix056_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5593a6d8cbd0 <col:31> col:34 'int'
|-FunctionDecl 0x5593a6d8ce68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5593a6d8cf90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5593a6d8d0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5593a6d8d048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5593a6d8d308 <col:40, col:99>
|   |-IfStmt 0x5593a6d8d2d8 <col:42, col:88>
|   | |-UnaryOperator 0x5593a6d8d1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5593a6d8d1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5593a6d8d180 <col:47> 'int' lvalue ParmVar 0x5593a6d8d048 'expression' 'int'
|   | `-CompoundStmt 0x5593a6d8d2c0 <col:59, col:88>
|   |   `-LabelStmt 0x5593a6d8d2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5593a6d8d238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5593a6d8d220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5593a6d8d1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5593a6d8cf90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5593a6d8d2f0 <col:89>
|   `-ReturnStmt 0x5593a6d8d2f8 <col:91>
|-FunctionDecl 0x5593a6d8d350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5593a6d8d410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5593a6d8d790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5593a6d8d4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5593a6d8d548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5593a6d8d5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5593a6d8d648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5593a6d8d850 <line:10:22>
|-FunctionDecl 0x5593a6db38a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5593a6d8d8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5593a6d8d940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5593a6d8d9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5593a6d8da40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5593a6db3960 <line:13:22>
|-FunctionDecl 0x5593a6db3c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5593a6db39d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5593a6db3a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5593a6db3ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5593a6db3cc8 <line:15:22>
|-TypedefDecl 0x5593a6db3d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5593a6d4d0e0 'unsigned char'
|-TypedefDecl 0x5593a6db3da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5593a6d4d100 'unsigned short'
|-TypedefDecl 0x5593a6db3e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5593a6d4d120 'unsigned int'
|-TypedefDecl 0x5593a6db3e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-TypedefDecl 0x5593a6db3ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5593a6d4d040 'signed char'
|-TypedefDecl 0x5593a6db3f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5593a6d4d0e0 'unsigned char'
|-TypedefDecl 0x5593a6db3fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5593a6d4d060 'short'
|-TypedefDecl 0x5593a6db4048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5593a6d4d100 'unsigned short'
|-TypedefDecl 0x5593a6db40b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5593a6d4d080 'int'
|-TypedefDecl 0x5593a6db4128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5593a6d4d120 'unsigned int'
|-TypedefDecl 0x5593a6db4198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6db4208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-TypedefDecl 0x5593a6db4278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6db42e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-TypedefDecl 0x5593a6db4358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-TypedefDecl 0x5593a6db43c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5593a6d4d120 'unsigned int'
|-TypedefDecl 0x5593a6db4438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5593a6d4d120 'unsigned int'
|-TypedefDecl 0x5593a6db44a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-TypedefDecl 0x5593a6db4518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-TypedefDecl 0x5593a6db4588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5593a6d4d120 'unsigned int'
|-TypedefDecl 0x5593a6db45f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-TypedefDecl 0x5593a6db4668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6db46d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6db4748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5593a6d4d080 'int'
|-RecordDecl 0x5593a6db47a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5593a6db4918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5593a6db49d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5593a6db4970 'struct __fsid_t' sugar
|   `-RecordType 0x5593a6db4820 '__fsid_t'
|     `-Record 0x5593a6db47a0 ''
|-TypedefDecl 0x5593a6db4a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6db4ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-TypedefDecl 0x5593a6db4b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-TypedefDecl 0x5593a6db4ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5593a6d4d120 'unsigned int'
|-TypedefDecl 0x5593a6db4c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6db4c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5593a6d4d120 'unsigned int'
|-TypedefDecl 0x5593a6db4cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6db4d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5593a6d4d080 'int'
|-TypedefDecl 0x5593a6db4dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5593a6d4d080 'int'
|-TypedefDecl 0x5593a6db4e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5593a6d4d080 'int'
|-TypedefDecl 0x5593a6db4eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5593a6d4d7a0 'void *'
|   `-BuiltinType 0x5593a6d4cfe0 'void'
|-TypedefDecl 0x5593a6db4f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6db4f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6db5008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6db5078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-TypedefDecl 0x5593a6db50e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-TypedefDecl 0x5593a6db5158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-TypedefDecl 0x5593a6db51c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-TypedefDecl 0x5593a6db5238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6db52a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6db5318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6db5388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-TypedefDecl 0x5593a6db5418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5593a6db53e0 '__off64_t' sugar
|   |-Typedef 0x5593a6db46d8 '__off64_t'
|   `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6db5510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5593a6db54d0 '__quad_t *'
|   `-TypedefType 0x5593a6db5470 '__quad_t' sugar
|     |-Typedef 0x5593a6db4278 '__quad_t'
|     `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6db5580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5593a6d4dc20 'char *'
|   `-BuiltinType 0x5593a6d4d020 'char'
|-TypedefDecl 0x5593a6db55f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6db5660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5593a6d4d120 'unsigned int'
|-FunctionDecl 0x5593a6db57a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5593a6db56d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5593a6db5ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5593a6db5ad8 <line:72:3, col:34>
|     `-CallExpr 0x5593a6db5a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5593a6db5a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5593a6db5a10 <col:10> '<builtin fn type>' Function 0x5593a6db5880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5593a6db5ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5593a6db5a30 <col:29> 'unsigned int' lvalue ParmVar 0x5593a6db56d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5593a6db5880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5593a6db5920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5593a6db5990 <col:10> Implicit
| `-ConstAttr 0x5593a6db59e8 <col:10> Implicit
|-FunctionDecl 0x5593a6db5c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5593a6db5b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5593a6db5f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5593a6db5f48 <line:77:3, col:34>
|     `-CallExpr 0x5593a6db5f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5593a6db5ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5593a6db5e78 <col:10> '<builtin fn type>' Function 0x5593a6db5ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5593a6db5f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5593a6db5e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5593a6db5b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5593a6db5ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5593a6db5d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5593a6db5df8 <col:10> Implicit
| `-ConstAttr 0x5593a6db5e50 <col:10> Implicit
|-TypedefDecl 0x5593a6db5f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-TypedefDecl 0x5593a6db6018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5593a6db5fe0 '__time_t' sugar
|   |-Typedef 0x5593a6db4c18 '__time_t'
|   `-BuiltinType 0x5593a6d4d0a0 'long'
|-RecordDecl 0x5593a6db6070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5593a6db6128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5593a6db61b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5593a6db6248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5593a6db6210 '__pid_t' sugar
|   |-Typedef 0x5593a6db4748 '__pid_t'
|   `-BuiltinType 0x5593a6d4d080 'int'
|-RecordDecl 0x5593a6db62a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5593a6db6360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5593a6db63b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5593a6db6470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5593a6db64d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-RecordDecl 0x5593a6db6530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5593a6db67c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5593a6db88b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5593a6db6810 'struct cpu_set_t' sugar
|   `-RecordType 0x5593a6db65b0 'cpu_set_t'
|     `-Record 0x5593a6db6530 ''
|-FunctionDecl 0x5593a6db8b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5593a6db8958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5593a6db8a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5593a6db8c38 <line:107:19>
|-FunctionDecl 0x5593a6db8e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5593a6db8ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5593a6db8eb8 <col:69>
|-FunctionDecl 0x5593a6db9030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5593a6db8f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5593a6db90d8 <col:64>
|-FunctionDecl 0x5593a6db9398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5593a6db9140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5593a6db9278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5593a6db9448 <line:113:22>
|-FunctionDecl 0x5593a6db96c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5593a6db94b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5593a6db95a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5593a6db9778 <col:88>
|-FunctionDecl 0x5593a6db9a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5593a6db97e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5593a6db98c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5593a6db9950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5593a6db9b50 <col:62>
|-FunctionDecl 0x5593a6db9cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5593a6db9bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5593a6db9d70 <col:63>
|-FunctionDecl 0x5593a6db9e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5593a6db9f38 <col:47>
|-FunctionDecl 0x5593a6dba040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5593a6db9fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5593a6dba0e8 <col:69>
|-FunctionDecl 0x5593a6dba1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5593a6dba158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5593a6dba298 <col:69>
|-FunctionDecl 0x5593a6dba558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5593a6dba300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5593a6dba438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5593a6dba608 <col:88>
|-TypedefDecl 0x5593a6dba698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5593a6dba660 '__clock_t' sugar
|   |-Typedef 0x5593a6db4a58 '__clock_t'
|   `-BuiltinType 0x5593a6d4d0a0 'long'
|-TypedefDecl 0x5593a6dba728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5593a6dba6f0 '__clockid_t' sugar
|   |-Typedef 0x5593a6db4e48 '__clockid_t'
|   `-BuiltinType 0x5593a6d4d080 'int'
|-TypedefDecl 0x5593a6dba7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5593a6dba780 '__timer_t' sugar
|   |-Typedef 0x5593a6db4eb8 '__timer_t'
|   `-PointerType 0x5593a6d4d7a0 'void *'
|     `-BuiltinType 0x5593a6d4cfe0 'void'
|-RecordDecl 0x5593a6dba810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5593a6dba8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5593a6dba950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5593a6dba9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5593a6dbaa20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5593a6dbaa88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5593a6dbaaf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5593a6dbab58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5593a6dbabc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5593a6dbac28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5593a6dbac90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5593a6dbacf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5593a6dbad48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5593a6dbae18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5593a6dbae88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5593a6dbaf30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5593a6dbb100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5593a6dbb1a0 <col:45>
|-FunctionDecl 0x5593a6dbb380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5593a6dbb270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5593a6dbb428 <col:54>
|-FunctionDecl 0x5593a6dbb628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5593a6dbb490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5593a6dbb508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5593a6dbb6d8 <line:157:22>
| `-ConstAttr 0x5593a6dbb730 <col:63>
|-FunctionDecl 0x5593a6dbc560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5593a6dbb828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5593a6dbc608 <col:56>
|-FunctionDecl 0x5593a6dbc9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5593a6dbc678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5593a6dbc6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5593a6dbc770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5593a6dbc868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5593a6dbca70 <col:54>
|-RecordDecl 0x5593a6dbcac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5593a6dbcb78 parent 0x5593a6d4cf88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5593a6dbcdd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5593a6dbce78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5593a6dbcee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5593a6dbcf48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5593a6dbd038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5593a6dbd158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5593a6dbd100 'struct __locale_struct *'
|   `-ElaboratedType 0x5593a6dbd090 'struct __locale_struct' sugar
|     `-RecordType 0x5593a6dbcb50 'struct __locale_struct'
|       `-Record 0x5593a6dbcac8 '__locale_struct'
|-TypedefDecl 0x5593a6dbd208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5593a6dbd1d0 '__locale_t' sugar
|   |-Typedef 0x5593a6dbd158 '__locale_t'
|   `-PointerType 0x5593a6dbd100 'struct __locale_struct *'
|     `-ElaboratedType 0x5593a6dbd090 'struct __locale_struct' sugar
|       `-RecordType 0x5593a6dbcb50 'struct __locale_struct'
|         `-Record 0x5593a6dbcac8 '__locale_struct'
|-FunctionDecl 0x5593a6dbd610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5593a6dbd278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5593a6dbd2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5593a6dbd370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5593a6dbd400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5593a6dbd478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5593a6dbd6d8 <col:40>
|-FunctionDecl 0x5593a6dbd8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5593a6dbd7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5593a6dbd970 <col:66>
|-FunctionDecl 0x5593a6dbda80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5593a6dbd9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5593a6dbdb28 <col:69>
|-FunctionDecl 0x5593a6dbdd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5593a6dbdb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5593a6dbdc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5593a6dbde08 <col:52>
|-FunctionDecl 0x5593a6dbdfb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5593a6dbde70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5593a6dbdf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5593a6dbe060 <col:55>
|-FunctionDecl 0x5593a6dbe1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5593a6dbe0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5593a6dbe2a0 <col:62>
|-FunctionDecl 0x5593a6dbe418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5593a6dbe308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5593a6dbe4c0 <col:60>
|-FunctionDecl 0x5593a6dbe718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5593a6dbe578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5593a6dbe5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5593a6dbe7c8 <col:44>
|-FunctionDecl 0x5593a6dbe9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5593a6dbe830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5593a6dbe8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5593a6dbea88 <col:49>
|-VarDecl 0x5593a6dbeb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5593a6dbec08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5593a6dbec88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5593a6dbed50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5593a6dbee80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5593a6dbef20 <col:42>
|-VarDecl 0x5593a6dbef90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5593a6dbf010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5593a6dbf198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5593a6dbf088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5593a6dbf240 <col:57>
|-FunctionDecl 0x5593a6dbf350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5593a6dbf2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5593a6dbf3f8 <col:56>
|-FunctionDecl 0x5593a6dc0540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5593a6dbf478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5593a6dc05e8 <col:59>
|-FunctionDecl 0x5593a6dc06f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5593a6dc0658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5593a6dc0798 <col:48>
| `-ConstAttr 0x5593a6dc07f0 <col:89>
|-FunctionDecl 0x5593a6dc0a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5593a6dc08a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5593a6dc0938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5593a6dc0cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5593a6dc0b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5593a6dc0bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5593a6dc0d68 <col:88>
|-FunctionDecl 0x5593a6dc0f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5593a6dc0dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5593a6dc0e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5593a6dc0fb0 <col:88>
|-FunctionDecl 0x5593a6dc11c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5593a6dc1018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5593a6dc10a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5593a6dc1278 <line:208:22>
|-FunctionDecl 0x5593a6dc15e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5593a6dc12e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5593a6dc1360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5593a6dc13f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5593a6dc1480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5593a6dc18e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5593a6dc16e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5593a6dc17c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5593a6dc1998 <col:85>
|-FunctionDecl 0x5593a6dc1d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5593a6dc1a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5593a6dc1b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5593a6dc1c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5593a6dc1e40 <col:52>
|-FunctionDecl 0x5593a6dc1fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5593a6dc1ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5593a6dc2060 <col:61>
|-FunctionDecl 0x5593a6dc2560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5593a6dc20c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5593a6dc2148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5593a6dc2278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5593a6dc2368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5593a6dc2620 <col:62>
|-FunctionDecl 0x5593a6dc2838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5593a6dc2688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5593a6dc2718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5593a6dc28e8 <line:221:22>
|-FunctionDecl 0x5593a6dc29e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5593a6dc2950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5593a6dc2a90 <col:65>
|-TypedefDecl 0x5593a6dc2b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5593a6d4d140 'unsigned long'
|-RecordDecl 0x5593a6dc2b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5593a6dc2ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5593a6dc2d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5593a6dc2db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5593a6dc2d60 'union pthread_attr_t' sugar
|   `-RecordType 0x5593a6dc2be0 'union pthread_attr_t'
|     `-Record 0x5593a6dc2b58 'pthread_attr_t'
|-RecordDecl 0x5593a6dc2e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5593a6dc2f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5593a6dc3000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5593a6dc30b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5593a6dc3050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5593a6dc2e90 'struct __pthread_internal_list'
|     `-Record 0x5593a6dc2e10 '__pthread_internal_list'
|-RecordDecl 0x5593a6dc3120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5593a6dc31c8 parent 0x5593a6d4cf88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5593a6dc32a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5593a6dc3308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5593a6dc3370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5593a6dc33d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5593a6dc3440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5593a6dc34a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5593a6dc7580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5593a6dc7630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5593a6dc7720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5593a6dc7788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5593a6dc7910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5593a6dc78b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5593a6dc31a0 'pthread_mutex_t'
|     `-Record 0x5593a6dc3120 ''
|-RecordDecl 0x5593a6dc7980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5593a6dc7ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5593a6dc7b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5593a6dc7be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5593a6dc7b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5593a6dc7a00 'pthread_mutexattr_t'
|     `-Record 0x5593a6dc7980 ''
|-RecordDecl 0x5593a6dc7c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5593a6dc7cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5593a6dc7dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5593a6dc7e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5593a6dc7e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5593a6dc7ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5593a6dc7f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5593a6dc7fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5593a6dc8030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5593a6dc8098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5593a6dc8150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix056_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix056_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5593a6dc8240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5593a6dc82a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5593a6dc83e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5593a6dc8380 'union pthread_cond_t' sugar
|   `-RecordType 0x5593a6dc7cd0 'pthread_cond_t'
|     `-Record 0x5593a6dc7c50 ''
|-RecordDecl 0x5593a6dc8450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5593a6dc8590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5593a6dc85f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5593a6dc86b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5593a6dc8650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5593a6dc84d0 'pthread_condattr_t'
|     `-Record 0x5593a6dc8450 ''
|-TypedefDecl 0x5593a6dc8738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5593a6d4d120 'unsigned int'
|-TypedefDecl 0x5593a6dc87a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5593a6d4d080 'int'
|-RecordDecl 0x5593a6dc8800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5593a6dc88a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5593a6dc8970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5593a6dc89d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5593a6dc8a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5593a6dc8aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5593a6dc8b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5593a6dc8b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5593a6dc8be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5593a6dc8c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5593a6dc8cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5593a6dc8d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5593a6dc8d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5593a6dc8e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix056_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix056_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5593a6dc8ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5593a6dc8f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5593a6dc9090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5593a6dc9030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5593a6dc8880 'pthread_rwlock_t'
|     `-Record 0x5593a6dc8800 ''
|-RecordDecl 0x5593a6dc9100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5593a6dc9240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5593a6dc92a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5593a6dc9360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5593a6dc9300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5593a6dc9180 'pthread_rwlockattr_t'
|     `-Record 0x5593a6dc9100 ''
|-TypedefDecl 0x5593a6dc93e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5593a6d4d084 'volatile int' volatile
|   `-BuiltinType 0x5593a6d4d080 'int'
|-RecordDecl 0x5593a6dc9440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5593a6dcb5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5593a6dcb618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5593a6dcb6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5593a6dcb670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5593a6dc94c0 'pthread_barrier_t'
|     `-Record 0x5593a6dc9440 ''
|-RecordDecl 0x5593a6dcb740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5593a6dcb840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5593a6dcb8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5593a6dcb960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5593a6dcb900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5593a6dcb7c0 'pthread_barrierattr_t'
|     `-Record 0x5593a6dcb740 ''
|-TypedefDecl 0x5593a6dcba78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5593a6dcba10 'long [8]' 8 
|   `-BuiltinType 0x5593a6d4d0a0 'long'
|-EnumDecl 0x5593a6dcbad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5593a6dcbb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5593a6dcbbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5593a6dcbc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5593a6dcbd08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5593a6dcbd58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5593a6dcbda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5593a6dcbdf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5593a6dcbe80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5593a6dcbe68 <col:26> 'int'
| |   `-DeclRefExpr 0x5593a6dcbe48 <col:26> 'int' EnumConstant 0x5593a6dcbd08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5593a6dcbf08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5593a6dcbef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5593a6dcbed0 <col:29> 'int' EnumConstant 0x5593a6dcbd58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5593a6dcbf90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5593a6dcbf78 <col:30> 'int'
| |   `-DeclRefExpr 0x5593a6dcbf58 <col:30> 'int' EnumConstant 0x5593a6dcbda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5593a6dcc018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5593a6dcc000 <col:27> 'int'
|     `-DeclRefExpr 0x5593a6dcbfe0 <col:27> 'int' EnumConstant 0x5593a6dcbe80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5593a6dcc068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5593a6dcc138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5593a6dcc1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5593a6dcc1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5593a6dcc188 <col:30> 'int' EnumConstant 0x5593a6dcc138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5593a6dcc210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5593a6dcc298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5593a6dcc280 <col:29> 'int'
|     `-DeclRefExpr 0x5593a6dcc260 <col:29> 'int' EnumConstant 0x5593a6dcc210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5593a6dcc2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5593a6dcc3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5593a6dcc408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5593a6dcc458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5593a6dcc4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5593a6dcc5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5593a6dcc610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5593a6dcc660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5593a6dcc6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5593a6dcc6d0 <col:31> 'int'
|     `-DeclRefExpr 0x5593a6dcc6b0 <col:31> 'int' EnumConstant 0x5593a6dcc5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5593a6dcc738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5593a6dcc808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5593a6dcc858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5593a6dcc8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5593a6dcc978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5593a6dcc9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5593a6dcca18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5593a6dccae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5593a6dccb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5593a6dccb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5593a6dccdc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5593a6dcce30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5593a6dcce98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5593a6dccfb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5593a6dcd008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5593a6dcd0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5593a6dcd128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5593a6dcd178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5593a6dcd248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5593a6dcd298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5593a6dcd8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5593a6dcd390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5593a6dcd4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593a6dcd6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5593a6dcd760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5593a6dcd9b8 <col:47>
| |-NonNullAttr 0x5593a6dcda10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5593a6dcda48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5593a6dcdb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5593a6dcdaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5593a6dcddc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5593a6dcdc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5593a6dcdca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5593a6dcdf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5593a6dcde88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5593a6dce040 <col:60>
|-FunctionDecl 0x5593a6dce190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5593a6dce230 <col:54>
| `-ConstAttr 0x5593a6dce288 <col:95>
|-FunctionDecl 0x5593a6dce458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5593a6dce2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5593a6dce338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5593a6dce508 <line:394:19>
| `-ConstAttr 0x5593a6dce560 <col:60>
|-FunctionDecl 0x5593a6dcef68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5593a6dcee30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5593a6dcf010 <col:71>
| `-NonNullAttr 0x5593a6dcf068 <col:112, col:126> 1
|-FunctionDecl 0x5593a6dcf170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5593a6dcf0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5593a6dcf218 <line:397:22>
| `-NonNullAttr 0x5593a6dcf270 <col:63, col:77> 1
|-FunctionDecl 0x5593a6dcf498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5593a6dcf2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5593a6dcf338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5593a6dcf548 <line:400:22>
| `-NonNullAttr 0x5593a6dcf5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6dcf7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5593a6dcf5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5593a6dcf668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5593a6dcf858 <line:403:22>
| `-NonNullAttr 0x5593a6dcf8b0 <col:63, col:77> 1
|-FunctionDecl 0x5593a6dcfb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5593a6dcf8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5593a6dcf9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5593a6dcfbb8 <line:406:22>
| `-NonNullAttr 0x5593a6dcfc10 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6dd0e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5593a6dcfc58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5593a6dcfcd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5593a6dd0ef8 <line:409:22>
| `-NonNullAttr 0x5593a6dd0f50 <col:63, col:77> 1
|-FunctionDecl 0x5593a6dd1188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5593a6dd0f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593a6dd1028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5593a6dd1238 <line:412:22>
| `-NonNullAttr 0x5593a6dd1290 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6dd14c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5593a6dd12d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593a6dd1368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5593a6dd1578 <col:37>
| `-NonNullAttr 0x5593a6dd15d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5593a6dd17b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593a6dd1618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593a6dd1698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5593a6dd1868 <line:418:22>
| `-NonNullAttr 0x5593a6dd18c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6dd1a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5593a6dd1908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5593a6dd1988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5593a6dd1af8 <line:420:22>
| `-NonNullAttr 0x5593a6dd1b50 <col:63, col:77> 1
|-FunctionDecl 0x5593a6dd1cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593a6dd1b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593a6dd1c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5593a6dd1da8 <line:423:22>
| `-NonNullAttr 0x5593a6dd2e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6dd2fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5593a6dd2e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5593a6dd2ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5593a6dd3068 <line:426:22>
| `-NonNullAttr 0x5593a6dd30c0 <col:63, col:77> 1
|-FunctionDecl 0x5593a6dd3268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593a6dd3108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593a6dd3188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5593a6dd3318 <line:429:22>
| `-NonNullAttr 0x5593a6dd3370 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6dd34f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5593a6dd33b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5593a6dd3438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5593a6dd35a8 <line:431:22>
| `-NonNullAttr 0x5593a6dd3600 <col:63, col:77> 1
|-FunctionDecl 0x5593a6dd3828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5593a6dd3648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593a6dd36c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5593a6dd38d8 <line:434:22>
| |-NonNullAttr 0x5593a6dd3930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5593a6dd3968 <col:100> "" ""
|-FunctionDecl 0x5593a6dd3b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5593a6dd39b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5593a6dd3a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5593a6dd3c28 <line:437:22>
| |-NonNullAttr 0x5593a6dd3c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5593a6dd3cb8 <col:97> "" ""
|-FunctionDecl 0x5593a6dd3eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5593a6dd3d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593a6dd3d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5593a6dd3f68 <line:440:22>
| `-NonNullAttr 0x5593a6dd3fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6dd4140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5593a6dd4008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5593a6dd4080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5593a6dd41f0 <line:443:22>
| `-NonNullAttr 0x5593a6dd4248 <col:63, col:77> 1
|-FunctionDecl 0x5593a6dd4538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5593a6dd4298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593a6dd4318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5593a6dd4390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5593a6dd45f0 <line:447:22>
| `-NonNullAttr 0x5593a6dd4648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5593a6dd48f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5593a6dd46a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5593a6dd4720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5593a6dd4798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5593a6dd49b0 <col:43>
| `-NonNullAttr 0x5593a6dd4a08 <col:84, col:98> 1
|-FunctionDecl 0x5593a6dd4cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5593a6dd4a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5593a6dd4ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5593a6dd4b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5593a6dd4d80 <line:452:22>
| `-NonNullAttr 0x5593a6dd4dd8 <col:63, col:77> 3
|-FunctionDecl 0x5593a6dd50e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5593a6dd4e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5593a6dd4ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5593a6dd4f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5593a6dd51a0 <line:456:22>
| `-NonNullAttr 0x5593a6dd51f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5593a6dd53e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5593a6dd5248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5593a6dd52c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5593a6dd5498 <line:458:22>
|-FunctionDecl 0x5593a6dd5868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5593a6dd5560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5593a6dd5700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5593a6dd5918 <col:52, col:69> 1 2
|-FunctionDecl 0x5593a6dd5ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5593a6dd59a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5593a6dd5a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5593a6dd5ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5593a6dd5b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5593a6dd5c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5593a6dd5e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5593a6dd5d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5593a6dd5fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5593a6dd6040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5593a6dd60e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5593a6dd61d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5593a6dd6240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5593a6dd6410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix056_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5593a6dd6508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5593a6dd65c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5593a6dd6560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5593a6dd60c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5593a6dd6040 ''
| `-AlignedAttr 0x5593a6dd6618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5593a6dd6690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5593a6dd67f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5593a6dd6858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5593a6dd68c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5593a6dd6928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5593a6dd6b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5593a6dd6a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5593a6dd6c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5593a6dd6be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5593a6dd6e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5593a6dd6d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5593a6dd6f18 <line:487:22>
|-RecordDecl 0x5593a6dd6f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5593a6dd7288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5593a6dd70e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5593a6dd7168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5593a6dd7338 <col:86>
| `-ReturnsTwiceAttr 0x5593a6dd7390 <col:12> Implicit
|-FunctionDecl 0x5593a6dd76b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5593a6dd7460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5593a6dd7570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5593a6dd7768 <line:493:22>
| `-NonNullAttr 0x5593a6dd77c0 <col:63, col:77> 1
|-FunctionDecl 0x5593a6dd7938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5593a6dd7808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5593a6dd79e0 <line:495:22>
| `-NonNullAttr 0x5593a6dd7a38 <col:63, col:77> 1
|-FunctionDecl 0x5593a6dd7b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5593a6dd7a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5593a6dd7be8 <line:497:22>
| `-NonNullAttr 0x5593a6dd7c40 <col:52, col:66> 1
|-FunctionDecl 0x5593a6dd7d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5593a6dd7c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5593a6dd7de8 <line:499:22>
| `-NonNullAttr 0x5593a6dd7e40 <col:52, col:66> 1
|-FunctionDecl 0x5593a6dd8088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5593a6dd7e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5593a6dd7f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5593a6dd8138 <col:36>
| `-NonNullAttr 0x5593a6dd8190 <col:66, col:83> 1 2
|-FunctionDecl 0x5593a6dd8290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5593a6dd81d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5593a6dd8338 <line:504:22>
| `-NonNullAttr 0x5593a6dd8390 <col:52, col:66> 1
|-FunctionDecl 0x5593a6dd8628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593a6dd8440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5593a6dd84c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5593a6dd86d8 <line:508:22>
| `-NonNullAttr 0x5593a6dd8730 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6dd89f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5593a6dd8778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5593a6dd87f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5593a6dd8878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5593a6dd8ab0 <line:512:22>
| `-NonNullAttr 0x5593a6dd8b08 <col:63, col:80> 1 3
|-FunctionDecl 0x5593a6dd8c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5593a6dd8b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5593a6dd8cb8 <line:514:22>
| `-NonNullAttr 0x5593a6dd8d10 <col:63, col:77> 1
|-FunctionDecl 0x5593a6dd8f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5593a6dd8dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5593a6dd8fe0 <line:516:22>
| `-NonNullAttr 0x5593a6dd9038 <col:63, col:77> 1
|-FunctionDecl 0x5593a6dd9140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5593a6dd9088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5593a6dd91e8 <line:518:22>
| `-NonNullAttr 0x5593a6dd9240 <col:63, col:77> 1
|-FunctionDecl 0x5593a6dd9468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593a6dd9288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5593a6dd9308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5593a6dd9518 <line:522:22>
| `-NonNullAttr 0x5593a6dd9570 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6dd9778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5593a6dd95b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5593a6dd9638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5593a6dd9828 <line:525:22>
| `-NonNullAttr 0x5593a6dd9880 <col:63, col:77> 1
|-FunctionDecl 0x5593a6dd9a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593a6dd98c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5593a6dd9948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5593a6dd9ad8 <line:528:22>
| `-NonNullAttr 0x5593a6dd9b30 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6dd9cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5593a6dd9b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5593a6dd9bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5593a6dd9d68 <line:530:22>
| `-NonNullAttr 0x5593a6dd9dc0 <col:63, col:77> 1
|-FunctionDecl 0x5593a6ddaf90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593a6dd9e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5593a6ddaeb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5593a6ddb040 <line:534:22>
| `-NonNullAttr 0x5593a6ddb098 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6ddb228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5593a6ddb0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5593a6ddb168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5593a6ddb2d8 <line:537:22>
| `-NonNullAttr 0x5593a6ddb330 <col:63, col:77> 1
|-FunctionDecl 0x5593a6ddb4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593a6ddb378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5593a6ddb3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5593a6ddb588 <line:541:22>
| `-NonNullAttr 0x5593a6ddb5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6ddb768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5593a6ddb628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5593a6ddb6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5593a6ddb818 <line:544:22>
| `-NonNullAttr 0x5593a6ddb870 <col:63, col:77> 1
|-FunctionDecl 0x5593a6ddba58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5593a6ddb8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5593a6ddb938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5593a6ddbb08 <line:547:22>
| `-NonNullAttr 0x5593a6ddbb60 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6ddbce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5593a6ddbba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5593a6ddbc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5593a6ddbd98 <line:550:22>
| `-NonNullAttr 0x5593a6ddbdf0 <col:63, col:77> 1
|-FunctionDecl 0x5593a6ddd168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5593a6ddcf10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5593a6ddd020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5593a6ddd218 <col:29>
| `-NonNullAttr 0x5593a6ddd270 <col:70, col:84> 1
|-FunctionDecl 0x5593a6ddd3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5593a6ddd2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5593a6ddd490 <line:555:22>
| `-NonNullAttr 0x5593a6ddd4e8 <col:63, col:77> 1
|-FunctionDecl 0x5593a6ddd5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5593a6ddd538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5593a6ddd698 <line:557:22>
| `-NonNullAttr 0x5593a6ddd6f0 <col:52, col:66> 1
|-FunctionDecl 0x5593a6ddd7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5593a6ddd738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5593a6ddd898 <line:559:19>
| `-NonNullAttr 0x5593a6ddd8f0 <col:49, col:63> 1
|-FunctionDecl 0x5593a6dddb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5593a6ddd938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5593a6ddd9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5593a6dddbd8 <col:39>
| `-NonNullAttr 0x5593a6dddc30 <col:69, col:86> 1 2
|-FunctionDecl 0x5593a6dddd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5593a6dddc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5593a6ddddd8 <line:564:22>
| `-NonNullAttr 0x5593a6ddde30 <col:52, col:66> 1
|-FunctionDecl 0x5593a6dddf98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5593a6dddee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5593a6dde040 <line:566:22>
| `-NonNullAttr 0x5593a6dde098 <col:52, col:66> 1
|-FunctionDecl 0x5593a6dde258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5593a6dde0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5593a6dde178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5593a6dde308 <col:39>
| `-NonNullAttr 0x5593a6dde360 <col:69, col:86> 1 2
|-FunctionDecl 0x5593a6dde460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5593a6dde3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5593a6dde508 <line:571:22>
| `-NonNullAttr 0x5593a6dde560 <col:52, col:66> 1
|-FunctionDecl 0x5593a6dde748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5593a6dde610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5593a6dde7f0 <line:573:22>
| `-NonNullAttr 0x5593a6dde848 <col:63, col:77> 1
|-FunctionDecl 0x5593a6dde950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5593a6dde898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5593a6dde9f8 <line:575:22>
| `-NonNullAttr 0x5593a6ddea50 <col:63, col:77> 1
|-FunctionDecl 0x5593a6ddec78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593a6ddea98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5593a6ddeb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5593a6dded28 <line:579:22>
| `-NonNullAttr 0x5593a6dded80 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6ddefa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5593a6ddedc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5593a6ddee48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5593a6ddf058 <line:582:22>
| `-NonNullAttr 0x5593a6ddf0b0 <col:63, col:77> 1
|-FunctionDecl 0x5593a6ddf258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593a6ddf0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5593a6ddf178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5593a6ddf308 <line:586:22>
| `-NonNullAttr 0x5593a6ddf360 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6ddf4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5593a6ddf3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5593a6ddf428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5593a6ddf598 <col:36>
| `-NonNullAttr 0x5593a6ddf5f0 <col:77, col:91> 1
|-FunctionDecl 0x5593a6ddf928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5593a6ddf6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5593a6ddf7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5593a6ddf9d8 <line:591:22>
| `-NonNullAttr 0x5593a6ddfa30 <col:63, col:77> 1
|-FunctionDecl 0x5593a6ddfba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5593a6ddfa78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5593a6ddfc50 <line:593:22>
| `-NonNullAttr 0x5593a6ddfca8 <col:63, col:77> 1
|-FunctionDecl 0x5593a6ddfdb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5593a6ddfcf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5593a6ddfe58 <line:595:22>
| `-NonNullAttr 0x5593a6ddfeb0 <col:52, col:66> 1
|-FunctionDecl 0x5593a6ddffc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5593a6ddff10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5593a6de0070 <line:597:22>
| `-NonNullAttr 0x5593a6de00c8 <col:52, col:66> 1
|-FunctionDecl 0x5593a6de02f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5593a6de0118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5593a6de0190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5593a6de03a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5593a6de06d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5593a6de0428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5593a6de04a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5593a6de0530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5593a6de0790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5593a6de09a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5593a6de0870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5593a6de0a50 <line:606:22>
| `-NonNullAttr 0x5593a6de0aa8 <col:63, col:77> 1
|-FunctionDecl 0x5593a6de0bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5593a6de0af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5593a6de0c58 <line:608:22>
| `-NonNullAttr 0x5593a6de0cb0 <col:63, col:77> 1
|-FunctionDecl 0x5593a6de0f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593a6de0cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5593a6de0d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5593a6de0fc0 <line:612:22>
| `-NonNullAttr 0x5593a6de1018 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6de1228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5593a6de1068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5593a6de10e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5593a6de12d8 <col:37>
| `-NonNullAttr 0x5593a6de1330 <col:78, col:92> 1
|-FunctionDecl 0x5593a6de1548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5593a6de1378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5593a6de1420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5593a6de15f8 <line:618:22>
| `-NonNullAttr 0x5593a6de1650 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6de1818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5593a6de1698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5593a6de1710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5593a6de18c8 <line:621:22>
| `-NonNullAttr 0x5593a6de1920 <col:63, col:77> 1
|-FunctionDecl 0x5593a6de1bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5593a6de1a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5593a6de1a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5593a6de1c78 <line:623:22>
| `-NonNullAttr 0x5593a6de1cd0 <col:63, col:77> 1
|-FunctionDecl 0x5593a6de1e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5593a6de1d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5593a6de1f20 <line:625:22>
| `-NonNullAttr 0x5593a6de1f78 <col:63, col:77> 1
|-FunctionDecl 0x5593a6de2080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5593a6de1fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5593a6de2128 <line:627:22>
| `-NonNullAttr 0x5593a6de2180 <col:52, col:66> 1
|-FunctionDecl 0x5593a6de2280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5593a6de21c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5593a6de2328 <line:629:22>
| `-NonNullAttr 0x5593a6de2380 <col:52, col:66> 1
|-FunctionDecl 0x5593a6de2480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5593a6de23c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5593a6de2528 <line:631:22>
| `-NonNullAttr 0x5593a6de2580 <col:52, col:66> 1
|-FunctionDecl 0x5593a6de2958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5593a6de2660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5593a6de2770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5593a6de27f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5593a6de2a10 <line:635:22>
| `-NonNullAttr 0x5593a6de2a68 <col:63, col:77> 1
|-FunctionDecl 0x5593a6de2be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5593a6de2ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5593a6de2c90 <line:637:22>
| `-NonNullAttr 0x5593a6de2ce8 <col:63, col:77> 1
|-FunctionDecl 0x5593a6de2df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5593a6de2d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5593a6de2e98 <line:639:22>
| `-NonNullAttr 0x5593a6de2ef0 <col:52, col:66> 1
|-FunctionDecl 0x5593a6de30e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5593a6de2fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5593a6de3190 <line:641:22>
| `-NonNullAttr 0x5593a6de31e8 <col:63, col:77> 1
|-FunctionDecl 0x5593a6de32f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5593a6de3238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5593a6de3398 <line:643:22>
| `-NonNullAttr 0x5593a6de33f0 <col:63, col:77> 1
|-FunctionDecl 0x5593a6de3618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593a6de3438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5593a6de34b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5593a6de36c8 <line:647:22>
| `-NonNullAttr 0x5593a6de3720 <col:63, col:80> 1 2
|-FunctionDecl 0x5593a6de3928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5593a6de3768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5593a6de37e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5593a6de39d8 <line:650:22>
| `-NonNullAttr 0x5593a6de3a30 <col:63, col:77> 1
|-FunctionDecl 0x5593a6de3d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5593a6de3b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5593a6de3c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5593a6de3e28 <line:653:22>
| `-NonNullAttr 0x5593a6de3e80 <col:63, col:77> 1
|-FunctionDecl 0x5593a6de3fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5593a6de3ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5593a6de4090 <col:69>
|-FunctionDecl 0x5593a6de4208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5593a6de40f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5593a6de42b0 <col:72>
|-FunctionDecl 0x5593a6de44e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5593a6de4318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5593a6de43c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5593a6de4598 <col:44>
|-FunctionDecl 0x5593a6de47b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5593a6de4600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5593a6de4678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5593a6de4868 <line:660:22>
| `-NonNullAttr 0x5593a6de48c0 <col:63, col:77> 2
|-FunctionDecl 0x5593a6de4d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5593a6de49a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5593a6de4ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5593a6de4bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5593a6de4dc0 <col:47>
|-FunctionDecl 0x5593a6de5f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5593a6de4e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5593a6de60b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5593a6de6020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5593a6de6210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5593a6de6178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5593a6de62d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5593a6de6398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5593a6de6458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5593a6de6510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5593a6de6590 prev 0x5593a6de6510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5593a6de65f8 <col:24> 'int' 0
|-VarDecl 0x5593a6de6630 <line:673:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5593a6de66b0 prev 0x5593a6de6630 <line:674:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5593a6de6718 <col:27> 'int' 0
|-VarDecl 0x5593a6de6748 <line:675:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5593a6de67c0 <line:676:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5593a6de6840 <line:677:1, col:5> col:5 used x 'int'
|-VarDecl 0x5593a6de68c0 prev 0x5593a6de6840 <line:678:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5593a6de6928 <col:9> 'int' 0
|-VarDecl 0x5593a6de6960 <line:679:1, col:5> col:5 used y 'int'
|-VarDecl 0x5593a6de69e0 prev 0x5593a6de6960 <line:680:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5593a6de6a48 <col:9> 'int' 0
|-VarDecl 0x5593a6de6a80 <line:681:1, col:5> col:5 used z 'int'
|-VarDecl 0x5593a6de6b00 prev 0x5593a6de6a80 <line:682:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5593a6de6b68 <col:9> 'int' 0
|-VarDecl 0x5593a6de6b98 <line:683:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x5593a6de6c18 <line:684:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x5593a6de6c90 <line:685:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x5593a6de6d08 <line:686:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x5593a6de6d80 <line:687:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x5593a6de6df8 <line:688:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x5593a6de6e70 <line:689:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x5593a6de6ee8 <line:690:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x5593a6de6f70 <line:691:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x5593a6de6fe8 <line:692:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x5593a6de7060 <line:693:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x5593a6de70e0 <line:694:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x5593a6de7160 <line:695:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x5593a6de71d8 <line:696:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x5593a6de7258 <line:697:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x5593a6de72d0 <line:698:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x5593a6de7348 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5593a6de73c0 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5593a6de74d8 prev 0x5593a6de5f60 <line:701:1, line:729:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5593a6de7440 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5593a6de8d08 <line:702:1, line:729:1>
|   |-CallExpr 0x5593a6de75e8 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593a6de75d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6de7580 <col:3> 'void ()' Function 0x5593a6d8d350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593a6de7660 <line:704:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5593a6de7608 <col:3> 'int' lvalue Var 0x5593a6de7258 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5593a6de7648 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593a6de7628 <col:15> 'int' lvalue Var 0x5593a6de7160 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5593a6de76c0 <line:705:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5593a6de7680 <col:3> 'int' lvalue Var 0x5593a6de7160 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x5593a6de76a0 <col:15> 'int' 1
|   |-BinaryOperator 0x5593a6de7738 <line:706:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6de76e0 <col:3> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6de7720 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593a6de7700 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5593a6de77d0 <line:707:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6de7758 <col:3> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5593a6de77a8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5593a6de7778 <col:27> 'int' 1
|   |-CallExpr 0x5593a6de7958 <line:708:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5593a6de7940 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5593a6de77f0 <col:3> 'void (int)' Function 0x5593a6d8d0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5593a6de78f0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5593a6de78d0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5593a6de78b0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5593a6de7868 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5593a6de7850 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5593a6de7810 <col:23> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5593a6de7898 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5593a6de7880 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5593a6de7830 <col:41> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5593a6de79d8 <line:709:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6de7980 <col:3> '_Bool' lvalue Var 0x5593a6de6e70 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6de79c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593a6de79a0 <col:20> '_Bool' lvalue Var 0x5593a6de6c90 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5593a6de7a50 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6de79f8 <col:3> '_Bool' lvalue Var 0x5593a6de6ee8 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6de7a38 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593a6de7a18 <col:20> '_Bool' lvalue Var 0x5593a6de6d08 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5593a6de7ac8 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6de7a70 <col:3> '_Bool' lvalue Var 0x5593a6de6f70 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6de7ab0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593a6de7a90 <col:20> '_Bool' lvalue Var 0x5593a6de6d80 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5593a6de7b40 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6de7ae8 <col:3> '_Bool' lvalue Var 0x5593a6de6fe8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6de7b28 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593a6de7b08 <col:20> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5593a6de7bd8 <line:713:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6de7b60 <col:3> '_Bool' lvalue Var 0x5593a6de6d08 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5593a6de7bb0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5593a6de7b80 <col:27> 'int' 1
|   |-CallExpr 0x5593a6de7c30 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593a6de7c18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6de7bf8 <col:3> 'void ()' Function 0x5593a6d8d410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593a6de7c88 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593a6de7c70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6de7c50 <col:3> 'void ()' Function 0x5593a6d8d350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593a6de7ce8 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5593a6de7ca8 <col:3> 'int' lvalue Var 0x5593a6de68c0 'x' 'int'
|   | `-IntegerLiteral 0x5593a6de7cc8 <col:7> 'int' 1
|   |-CallExpr 0x5593a6de7d40 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593a6de7d28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6de7d08 <col:3> 'void ()' Function 0x5593a6d8d410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593a6de7d98 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593a6de7d80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6de7d60 <col:3> 'void ()' Function 0x5593a6d8d350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593a6de80a8 <line:719:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5593a6de7db8 <col:3> 'int' lvalue Var 0x5593a6de6b00 'z' 'int'
|   | `-ConditionalOperator 0x5593a6de8078 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5593a6de7e78 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5593a6de7e30 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5593a6de7e18 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5593a6de7dd8 <col:7> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5593a6de7e60 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5593a6de7e48 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5593a6de7df8 <col:25> '_Bool' lvalue Var 0x5593a6de6d08 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5593a6de8060 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593a6de7e98 <col:42> 'int' lvalue Var 0x5593a6de7160 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5593a6de8040 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5593a6de8010 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5593a6de7f80 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5593a6de7f10 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5593a6de7ef8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5593a6de7eb8 <col:55> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5593a6de7f40 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5593a6de7f28 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5593a6de7ed8 <col:73> '_Bool' lvalue Var 0x5593a6de6ee8 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5593a6de7fe0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5593a6de7fa0 <col:90> 'int' lvalue Var 0x5593a6de7258 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5593a6de7ff8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593a6de7fc0 <col:102> 'int' lvalue Var 0x5593a6de6b00 'z' 'int'
|   |-BinaryOperator 0x5593a6de82b0 <line:720:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6de80c8 <col:3> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6de8298 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593a6de8268 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5593a6de8188 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5593a6de8140 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5593a6de8128 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5593a6de80e8 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5593a6de8170 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5593a6de8158 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5593a6de8108 <col:38> '_Bool' lvalue Var 0x5593a6de6d08 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5593a6de8220 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5593a6de81d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5593a6de81a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5593a6de8250 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5593a6de8238 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593a6de8200 <col:66> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5593a6de8598 <line:721:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6de82d0 <col:3> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6de8580 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593a6de8550 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5593a6de8470 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5593a6de8390 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5593a6de8348 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5593a6de8330 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5593a6de82f0 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5593a6de8378 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5593a6de8360 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5593a6de8310 <col:38> '_Bool' lvalue Var 0x5593a6de6d08 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5593a6de8450 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5593a6de8408 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5593a6de83f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5593a6de83b0 <col:56> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5593a6de8438 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5593a6de8420 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5593a6de83d0 <col:74> '_Bool' lvalue Var 0x5593a6de6ee8 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5593a6de8508 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5593a6de84c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5593a6de8490 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5593a6de8538 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5593a6de8520 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593a6de84e8 <col:102> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5593a6de87a0 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6de85b8 <col:3> '_Bool' lvalue Var 0x5593a6de6d08 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6de8788 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593a6de8758 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5593a6de8678 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5593a6de8630 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5593a6de8618 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5593a6de85d8 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5593a6de8660 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5593a6de8648 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5593a6de85f8 <col:38> '_Bool' lvalue Var 0x5593a6de6d08 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5593a6de8710 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5593a6de86c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5593a6de8698 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5593a6de8740 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5593a6de8728 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593a6de86f0 <col:66> '_Bool' lvalue Var 0x5593a6de6d08 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5593a6de8a88 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6de87c0 <col:3> '_Bool' lvalue Var 0x5593a6de6ee8 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6de8a70 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593a6de8a40 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5593a6de8960 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5593a6de8880 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5593a6de8838 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5593a6de8820 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5593a6de87e0 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5593a6de8868 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5593a6de8850 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5593a6de8800 <col:38> '_Bool' lvalue Var 0x5593a6de6d08 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5593a6de8940 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5593a6de88f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5593a6de88e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5593a6de88a0 <col:56> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5593a6de8928 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5593a6de8910 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5593a6de88c0 <col:74> '_Bool' lvalue Var 0x5593a6de6ee8 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5593a6de89f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5593a6de89b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5593a6de8980 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5593a6de8a28 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5593a6de8a10 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593a6de89d8 <col:102> '_Bool' lvalue Var 0x5593a6de6ee8 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5593a6de8ae0 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593a6de8ac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6de8aa8 <col:3> 'void ()' Function 0x5593a6d8d410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593a6de8b38 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593a6de8b20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6de8b00 <col:3> 'void ()' Function 0x5593a6d8d350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593a6de8bf0 <line:726:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5593a6de8b58 <col:3> 'int' lvalue Var 0x5593a6de6590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5593a6de8bd0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5593a6de8bb8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593a6de8b78 <col:22> 'int' lvalue Var 0x5593a6de6590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5593a6de8b98 <col:41> 'int' 1
|   |-CallExpr 0x5593a6de8c48 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593a6de8c30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6de8c10 <col:3> 'void ()' Function 0x5593a6d8d410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5593a6de8cf8 <line:728:3, col:36>
|     `-CallExpr 0x5593a6de8cd8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5593a6de8cc0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5593a6de8c68 <col:10> 'void *(void)' Function 0x5593a6d8ce68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5593a6de8e98 prev 0x5593a6de60b8 <line:730:1, line:749:1> line:730:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5593a6de8e00 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5593a6dea0d8 <line:731:1, line:749:1>
|   |-CallExpr 0x5593a6de8f90 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593a6de8f60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6de8f40 <col:3> 'void ()' Function 0x5593a6d8d350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593a6de8ff0 <line:733:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5593a6de8fb0 <col:3> 'int' lvalue Var 0x5593a6de68c0 'x' 'int'
|   | `-IntegerLiteral 0x5593a6de8fd0 <col:7> 'int' 2
|   |-CallExpr 0x5593a6de9048 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593a6de9030 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6de9010 <col:3> 'void ()' Function 0x5593a6d8d410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593a6de90a0 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593a6de9088 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6de9068 <col:3> 'void ()' Function 0x5593a6d8d350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593a6de9100 <line:736:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5593a6de90c0 <col:3> 'int' lvalue Var 0x5593a6de69e0 'y' 'int'
|   | `-IntegerLiteral 0x5593a6de90e0 <col:7> 'int' 1
|   |-CallExpr 0x5593a6de9158 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593a6de9140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6de9120 <col:3> 'void ()' Function 0x5593a6d8d410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593a6de91b0 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593a6de9198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6de9178 <col:3> 'void ()' Function 0x5593a6d8d350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593a6de9498 <line:739:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5593a6de91d0 <col:3> 'int' lvalue Var 0x5593a6de6b00 'z' 'int'
|   | `-ConditionalOperator 0x5593a6de9468 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5593a6de9290 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5593a6de9248 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5593a6de9230 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5593a6de91f0 <col:7> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5593a6de9278 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5593a6de9260 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5593a6de9210 <col:25> '_Bool' lvalue Var 0x5593a6de6d80 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5593a6de9450 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593a6de92b0 <col:42> 'int' lvalue Var 0x5593a6de7160 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5593a6de9430 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5593a6de9400 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5593a6de9370 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5593a6de9328 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5593a6de9310 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5593a6de92d0 <col:55> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5593a6de9358 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5593a6de9340 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5593a6de92f0 <col:73> '_Bool' lvalue Var 0x5593a6de6f70 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5593a6de93d0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5593a6de9390 <col:90> 'int' lvalue Var 0x5593a6de7258 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5593a6de93e8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593a6de93b0 <col:102> 'int' lvalue Var 0x5593a6de6b00 'z' 'int'
|   |-BinaryOperator 0x5593a6de96a0 <line:740:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6de94b8 <col:3> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6de9688 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593a6de9658 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5593a6de9578 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5593a6de9530 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5593a6de9518 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5593a6de94d8 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5593a6de9560 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5593a6de9548 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5593a6de94f8 <col:38> '_Bool' lvalue Var 0x5593a6de6d80 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5593a6de9610 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5593a6de95c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5593a6de9598 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5593a6de9640 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5593a6de9628 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593a6de95f0 <col:66> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5593a6de9988 <line:741:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6de96c0 <col:3> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6de9970 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593a6de9940 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5593a6de9860 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5593a6de9780 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5593a6de9738 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5593a6de9720 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5593a6de96e0 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5593a6de9768 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5593a6de9750 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5593a6de9700 <col:38> '_Bool' lvalue Var 0x5593a6de6d80 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5593a6de9840 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5593a6de97f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5593a6de97e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5593a6de97a0 <col:56> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5593a6de9828 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5593a6de9810 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5593a6de97c0 <col:74> '_Bool' lvalue Var 0x5593a6de6f70 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5593a6de98f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5593a6de98b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5593a6de9880 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5593a6de9928 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5593a6de9910 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593a6de98d8 <col:102> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5593a6de9b90 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6de99a8 <col:3> '_Bool' lvalue Var 0x5593a6de6d80 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6de9b78 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593a6de9b48 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5593a6de9a68 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5593a6de9a20 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5593a6de9a08 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5593a6de99c8 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5593a6de9a50 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5593a6de9a38 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5593a6de99e8 <col:38> '_Bool' lvalue Var 0x5593a6de6d80 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5593a6de9b00 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5593a6de9ab8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5593a6de9a88 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5593a6de9b30 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5593a6de9b18 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593a6de9ae0 <col:66> '_Bool' lvalue Var 0x5593a6de6d80 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5593a6de9e78 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6de9bb0 <col:3> '_Bool' lvalue Var 0x5593a6de6f70 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6de9e60 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593a6de9e30 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5593a6de9d50 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5593a6de9c70 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5593a6de9c28 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5593a6de9c10 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5593a6de9bd0 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5593a6de9c58 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5593a6de9c40 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5593a6de9bf0 <col:38> '_Bool' lvalue Var 0x5593a6de6d80 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5593a6de9d30 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5593a6de9ce8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5593a6de9cd0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5593a6de9c90 <col:56> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5593a6de9d18 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5593a6de9d00 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5593a6de9cb0 <col:74> '_Bool' lvalue Var 0x5593a6de6f70 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5593a6de9de8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5593a6de9da0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5593a6de9d70 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5593a6de9e18 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5593a6de9e00 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593a6de9dc8 <col:102> '_Bool' lvalue Var 0x5593a6de6f70 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5593a6de9ed0 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593a6de9eb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6de9e98 <col:3> 'void ()' Function 0x5593a6d8d410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593a6de9f28 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593a6de9f10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6de9ef0 <col:3> 'void ()' Function 0x5593a6d8d350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593a6de9ff8 <line:746:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5593a6de9f48 <col:3> 'int' lvalue Var 0x5593a6de6590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5593a6de9fd8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5593a6de9fc0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593a6de9f68 <col:22> 'int' lvalue Var 0x5593a6de6590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5593a6de9fa0 <col:41> 'int' 1
|   |-CallExpr 0x5593a6dea050 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593a6dea038 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6dea018 <col:3> 'void ()' Function 0x5593a6d8d410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5593a6dea0c8 <line:748:3, col:36>
|     `-CallExpr 0x5593a6dea0a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5593a6dea090 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5593a6dea070 <col:10> 'void *(void)' Function 0x5593a6d8ce68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5593a6dea220 prev 0x5593a6de6210 <line:750:1, line:782:1> line:750:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5593a6dea188 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5593a6dede18 <line:751:1, line:782:1>
|   |-CallExpr 0x5593a6dea300 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593a6dea2e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6dea2c8 <col:3> 'void ()' Function 0x5593a6d8d350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593a6dea360 <line:753:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5593a6dea320 <col:3> 'int' lvalue Var 0x5593a6de69e0 'y' 'int'
|   | `-IntegerLiteral 0x5593a6dea340 <col:7> 'int' 2
|   |-CallExpr 0x5593a6dea3b8 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593a6dea3a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6dea380 <col:3> 'void ()' Function 0x5593a6d8d410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593a6dea410 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593a6dea3f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6dea3d8 <col:3> 'void ()' Function 0x5593a6d8d350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593a6dea4c0 <line:756:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6dea430 <col:3> '_Bool' lvalue Var 0x5593a6de7348 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6dea4a8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5593a6dea488 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5593a6dea470 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5593a6dea450 <col:19> 'void *(void)' Function 0x5593a6d8ce68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5593a6dea570 <line:757:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6dea4e0 <col:3> '_Bool' lvalue Var 0x5593a6de73c0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6dea558 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5593a6dea538 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5593a6dea520 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5593a6dea500 <col:19> 'void *(void)' Function 0x5593a6d8ce68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5593a6dea5e8 <line:758:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6dea590 <col:3> '_Bool' lvalue Var 0x5593a6de6b98 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6dea5d0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593a6dea5b0 <col:21> '_Bool' lvalue Var 0x5593a6de73c0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5593a6dea660 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5593a6dea608 <col:3> 'int' lvalue Var 0x5593a6de6c18 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5593a6dea648 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593a6dea628 <col:15> 'int' lvalue Var 0x5593a6de6b00 'z' 'int'
|   |-BinaryOperator 0x5593a6deaa98 <line:760:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5593a6dea680 <col:3> 'int' lvalue Var 0x5593a6de6b00 'z' 'int'
|   | `-ConditionalOperator 0x5593a6deaa68 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5593a6dea890 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5593a6dea7b0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5593a6dea6d8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5593a6dea6c0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5593a6dea6a0 <col:8> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5593a6dea790 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5593a6dea728 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5593a6dea710 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5593a6dea6f0 <col:27> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5593a6dea778 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5593a6dea760 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5593a6dea740 <col:46> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5593a6dea870 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5593a6dea808 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5593a6dea7f0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5593a6dea7d0 <col:65> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5593a6dea858 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5593a6dea840 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5593a6dea820 <col:84> '_Bool' lvalue Var 0x5593a6de6fe8 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5593a6deaa50 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593a6dea8b0 <col:101> 'int' lvalue Var 0x5593a6de6b00 'z' 'int'
|   |   `-ParenExpr 0x5593a6deaa30 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5593a6deaa00 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5593a6dea970 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5593a6dea928 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5593a6dea910 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5593a6dea8d0 <col:106> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5593a6dea958 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5593a6dea940 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5593a6dea8f0 <col:124> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5593a6dea9d0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5593a6dea990 <col:141> 'int' lvalue Var 0x5593a6de7160 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5593a6dea9e8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593a6dea9b0 <col:153> 'int' lvalue Var 0x5593a6de7258 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5593a6deafe0 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5593a6deaab8 <col:3> 'int' lvalue Var 0x5593a6de7160 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5593a6deafb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5593a6deaf48 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5593a6deaf30 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5593a6deaad8 <col:15> '_Bool' lvalue Var 0x5593a6de73c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5593a6deaf60 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593a6deaaf8 <col:31> 'int' lvalue Var 0x5593a6de7160 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5593a6deaf10 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5593a6deaee0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5593a6dead08 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5593a6deac28 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5593a6deab50 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5593a6deab38 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5593a6deab18 <col:45> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5593a6deac08 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5593a6deaba0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5593a6deab88 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5593a6deab68 <col:64> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5593a6deabf0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5593a6deabd8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5593a6deabb8 <col:83> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5593a6deace8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5593a6deac80 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5593a6deac68 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5593a6deac48 <col:102> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5593a6deacd0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5593a6deacb8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5593a6deac98 <col:121> '_Bool' lvalue Var 0x5593a6de6fe8 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5593a6deaec8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5593a6dead28 <col:138> 'int' lvalue Var 0x5593a6de7160 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5593a6deaea8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5593a6deae78 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5593a6deade8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5593a6deada0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5593a6dead88 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5593a6dead48 <col:151> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5593a6deadd0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5593a6deadb8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5593a6dead68 <col:169> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5593a6deae48 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5593a6deae08 <col:186> 'int' lvalue Var 0x5593a6de7160 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5593a6deae60 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5593a6deae28 <col:198> 'int' lvalue Var 0x5593a6de7160 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5593a6deb4f0 <line:762:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5593a6deb000 <col:3> 'int' lvalue Var 0x5593a6de7258 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5593a6deb4c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5593a6deb490 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5593a6deb478 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5593a6deb020 <col:15> '_Bool' lvalue Var 0x5593a6de73c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5593a6deb4a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593a6deb040 <col:31> 'int' lvalue Var 0x5593a6de7258 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5593a6deb458 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5593a6deb428 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5593a6deb250 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5593a6deb170 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5593a6deb098 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5593a6deb080 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5593a6deb060 <col:45> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5593a6deb150 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5593a6deb0e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5593a6deb0d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5593a6deb0b0 <col:64> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5593a6deb138 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5593a6deb120 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5593a6deb100 <col:83> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5593a6deb230 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5593a6deb1c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5593a6deb1b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5593a6deb190 <col:102> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5593a6deb218 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5593a6deb200 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5593a6deb1e0 <col:121> '_Bool' lvalue Var 0x5593a6de6fe8 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5593a6deb410 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5593a6deb270 <col:138> 'int' lvalue Var 0x5593a6de7258 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5593a6deb3f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5593a6deb3c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5593a6deb330 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5593a6deb2e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5593a6deb2d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5593a6deb290 <col:151> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5593a6deb318 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5593a6deb300 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5593a6deb2b0 <col:169> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5593a6deb390 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5593a6deb350 <col:186> 'int' lvalue Var 0x5593a6de7258 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5593a6deb3a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5593a6deb370 <col:198> 'int' lvalue Var 0x5593a6de7258 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5593a6deba98 <line:763:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6deb510 <col:3> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6deba80 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593a6deba50 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5593a6deba08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593a6deb9f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593a6deb530 <col:20> '_Bool' lvalue Var 0x5593a6de73c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5593a6deba38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593a6deba20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593a6deb550 <col:36> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5593a6deb9d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5593a6deb9a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5593a6deb760 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5593a6deb680 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5593a6deb5a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5593a6deb590 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5593a6deb570 <col:55> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5593a6deb660 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5593a6deb5f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5593a6deb5e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5593a6deb5c0 <col:74> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5593a6deb648 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5593a6deb630 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5593a6deb610 <col:93> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5593a6deb740 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5593a6deb6d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5593a6deb6c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5593a6deb6a0 <col:112> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5593a6deb728 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5593a6deb710 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5593a6deb6f0 <col:131> '_Bool' lvalue Var 0x5593a6de6fe8 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5593a6deb988 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5593a6deb970 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5593a6deb780 <col:148> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5593a6deb950 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5593a6deb920 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5593a6deb840 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5593a6deb7f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5593a6deb7e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5593a6deb7a0 <col:166> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5593a6deb828 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5593a6deb810 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5593a6deb7c0 <col:184> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5593a6deb8d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5593a6deb890 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5593a6deb860 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5593a6deb908 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5593a6deb8f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5593a6deb8b8 <col:212> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5593a6dec088 <line:764:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6debab8 <col:3> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6dec070 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593a6dec040 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5593a6debff8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593a6debfe0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593a6debad8 <col:20> '_Bool' lvalue Var 0x5593a6de73c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5593a6dec028 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593a6dec010 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593a6debaf8 <col:36> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5593a6debfc0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5593a6debf68 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5593a6debd08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5593a6debc28 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5593a6debb50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5593a6debb38 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5593a6debb18 <col:55> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5593a6debc08 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5593a6debba0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5593a6debb88 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5593a6debb68 <col:74> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5593a6debbf0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5593a6debbd8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5593a6debbb8 <col:93> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5593a6debce8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5593a6debc80 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5593a6debc68 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5593a6debc48 <col:112> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5593a6debcd0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5593a6debcb8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5593a6debc98 <col:131> '_Bool' lvalue Var 0x5593a6de6fe8 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5593a6debf50 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5593a6debf38 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5593a6debd28 <col:148> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5593a6debf18 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5593a6debee8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5593a6debde8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5593a6debda0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5593a6debd88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5593a6debd48 <col:166> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5593a6debdd0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5593a6debdb8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5593a6debd68 <col:184> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5593a6debeb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5593a6debe38 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5593a6debe08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5593a6debed0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5593a6debe90 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5593a6debe60 <col:219> 'int' 0
|   |-BinaryOperator 0x5593a6dec630 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6dec0a8 <col:3> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6dec618 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593a6dec5e8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5593a6dec5a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593a6dec588 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593a6dec0c8 <col:20> '_Bool' lvalue Var 0x5593a6de73c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5593a6dec5d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593a6dec5b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593a6dec0e8 <col:36> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5593a6dec568 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5593a6dec538 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5593a6dec2f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5593a6dec218 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5593a6dec140 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5593a6dec128 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5593a6dec108 <col:55> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5593a6dec1f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5593a6dec190 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5593a6dec178 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5593a6dec158 <col:74> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5593a6dec1e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5593a6dec1c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5593a6dec1a8 <col:93> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5593a6dec2d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5593a6dec270 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5593a6dec258 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5593a6dec238 <col:112> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5593a6dec2c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5593a6dec2a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5593a6dec288 <col:131> '_Bool' lvalue Var 0x5593a6de6fe8 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5593a6dec520 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5593a6dec508 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5593a6dec318 <col:148> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5593a6dec4e8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5593a6dec4b8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5593a6dec3d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5593a6dec390 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5593a6dec378 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5593a6dec338 <col:166> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5593a6dec3c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5593a6dec3a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5593a6dec358 <col:184> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5593a6dec470 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5593a6dec428 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5593a6dec3f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5593a6dec4a0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5593a6dec488 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5593a6dec450 <col:212> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5593a6decbf8 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6dec650 <col:3> '_Bool' lvalue Var 0x5593a6de6fe8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6decbe0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593a6decbb0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5593a6decb68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593a6decb50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593a6dec670 <col:20> '_Bool' lvalue Var 0x5593a6de73c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5593a6decb98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593a6decb80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593a6dec690 <col:36> '_Bool' lvalue Var 0x5593a6de6fe8 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5593a6decb30 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5593a6decb00 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5593a6dec8a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5593a6dec7c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5593a6dec6e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5593a6dec6d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5593a6dec6b0 <col:55> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5593a6dec7a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5593a6dec738 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5593a6dec720 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5593a6dec700 <col:74> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5593a6dec788 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5593a6dec770 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5593a6dec750 <col:93> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5593a6dec880 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5593a6dec818 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5593a6dec800 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5593a6dec7e0 <col:112> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5593a6dec868 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5593a6dec850 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5593a6dec830 <col:131> '_Bool' lvalue Var 0x5593a6de6fe8 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5593a6decae8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5593a6decad0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5593a6dec8c0 <col:148> '_Bool' lvalue Var 0x5593a6de6fe8 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5593a6decab0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5593a6deca80 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5593a6dec980 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5593a6dec938 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5593a6dec920 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5593a6dec8e0 <col:166> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5593a6dec968 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5593a6dec950 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5593a6dec900 <col:184> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5593a6deca50 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5593a6dec9d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5593a6dec9a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5593a6deca68 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5593a6deca28 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5593a6dec9f8 <col:219> 'int' 0
|   |-BinaryOperator 0x5593a6decc70 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5593a6decc18 <col:3> 'int' lvalue Var 0x5593a6de66b0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5593a6decc58 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593a6decc38 <col:25> 'int' lvalue Var 0x5593a6de6b00 'z' 'int'
|   |-BinaryOperator 0x5593a6decda0 <line:768:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5593a6decc90 <col:3> 'int' lvalue Var 0x5593a6de6b00 'z' 'int'
|   | `-ConditionalOperator 0x5593a6decd70 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5593a6decd28 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5593a6decd10 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5593a6deccb0 <col:7> '_Bool' lvalue Var 0x5593a6de6b98 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5593a6decd40 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593a6deccd0 <col:25> 'int' lvalue Var 0x5593a6de6c18 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5593a6decd58 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5593a6deccf0 <col:37> 'int' lvalue Var 0x5593a6de6b00 'z' 'int'
|   |-BinaryOperator 0x5593a6dece38 <line:769:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6decdc0 <col:3> '_Bool' lvalue Var 0x5593a6de6b98 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5593a6dece10 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5593a6decde0 <col:28> 'int' 0
|   |-CallExpr 0x5593a6dece90 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593a6dece78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6dece58 <col:3> 'void ()' Function 0x5593a6d8d410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593a6decee8 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593a6deced0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6deceb0 <col:3> 'void ()' Function 0x5593a6d8d350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593a6ded1f0 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5593a6decf08 <col:3> 'int' lvalue Var 0x5593a6de6b00 'z' 'int'
|   | `-ConditionalOperator 0x5593a6ded1c0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5593a6decfe8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5593a6decf80 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5593a6decf68 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5593a6decf28 <col:7> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5593a6decfd0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5593a6decf98 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5593a6decf48 <col:25> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5593a6ded1a8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593a6ded008 <col:42> 'int' lvalue Var 0x5593a6de7160 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5593a6ded188 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5593a6ded158 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5593a6ded0c8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5593a6ded080 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5593a6ded068 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5593a6ded028 <col:55> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5593a6ded0b0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5593a6ded098 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5593a6ded048 <col:73> '_Bool' lvalue Var 0x5593a6de6fe8 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5593a6ded128 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5593a6ded0e8 <col:90> 'int' lvalue Var 0x5593a6de7258 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5593a6ded140 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593a6ded108 <col:102> 'int' lvalue Var 0x5593a6de6b00 'z' 'int'
|   |-BinaryOperator 0x5593a6ded3f8 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6ded210 <col:3> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6ded3e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593a6ded3b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5593a6ded2d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5593a6ded288 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5593a6ded270 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5593a6ded230 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5593a6ded2b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5593a6ded2a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5593a6ded250 <col:38> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5593a6ded368 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5593a6ded320 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5593a6ded2f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5593a6ded398 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5593a6ded380 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593a6ded348 <col:66> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5593a6ded6e0 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6ded418 <col:3> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6ded6c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593a6ded698 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5593a6ded5b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5593a6ded4d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5593a6ded490 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5593a6ded478 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5593a6ded438 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5593a6ded4c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5593a6ded4a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5593a6ded458 <col:38> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5593a6ded598 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5593a6ded550 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5593a6ded538 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5593a6ded4f8 <col:56> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5593a6ded580 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5593a6ded568 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5593a6ded518 <col:74> '_Bool' lvalue Var 0x5593a6de6fe8 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5593a6ded650 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5593a6ded608 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5593a6ded5d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5593a6ded680 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5593a6ded668 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593a6ded630 <col:102> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5593a6ded8e8 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6ded700 <col:3> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6ded8d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593a6ded8a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5593a6ded7c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5593a6ded778 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5593a6ded760 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5593a6ded720 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5593a6ded7a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5593a6ded790 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5593a6ded740 <col:38> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5593a6ded858 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5593a6ded810 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5593a6ded7e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5593a6ded888 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5593a6ded870 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593a6ded838 <col:66> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5593a6dedbd0 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5593a6ded908 <col:3> '_Bool' lvalue Var 0x5593a6de6fe8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5593a6dedbb8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593a6dedb88 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5593a6dedaa8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5593a6ded9c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5593a6ded980 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5593a6ded968 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5593a6ded928 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5593a6ded9b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5593a6ded998 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5593a6ded948 <col:38> '_Bool' lvalue Var 0x5593a6de6df8 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5593a6deda88 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5593a6deda40 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5593a6deda28 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5593a6ded9e8 <col:56> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5593a6deda70 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5593a6deda58 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5593a6deda08 <col:74> '_Bool' lvalue Var 0x5593a6de6fe8 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5593a6dedb40 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5593a6dedaf8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5593a6dedac8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5593a6dedb70 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5593a6dedb58 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593a6dedb20 <col:102> '_Bool' lvalue Var 0x5593a6de6fe8 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5593a6dedc28 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593a6dedc10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6dedbf0 <col:3> 'void ()' Function 0x5593a6d8d410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593a6dedc80 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593a6dedc68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6dedc48 <col:3> 'void ()' Function 0x5593a6d8d350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593a6dedd38 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5593a6dedca0 <col:3> 'int' lvalue Var 0x5593a6de6590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5593a6dedd18 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5593a6dedd00 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593a6dedcc0 <col:22> 'int' lvalue Var 0x5593a6de6590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5593a6dedce0 <col:41> 'int' 1
|   |-CallExpr 0x5593a6dedd90 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593a6dedd78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593a6dedd58 <col:3> 'void ()' Function 0x5593a6d8d410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5593a6dede08 <line:781:3, col:36>
|     `-CallExpr 0x5593a6dedde8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5593a6deddd0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5593a6deddb0 <col:10> 'void *(void)' Function 0x5593a6d8ce68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5593a6dedfe0 prev 0x5593a6de62d8 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x5593a6dee080 <line:784:1, line:785:1>
|-FunctionDecl 0x5593a6dee0b0 prev 0x5593a6de6398 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x5593a6dee150 <line:787:1, line:788:1>
|-FunctionDecl 0x5593a6dee180 prev 0x5593a6de6458 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x5593a6dee220 <line:790:1, line:791:1>
`-FunctionDecl 0x5593a6dee288 <line:792:1, line:816:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x5593a6defec0 <line:793:1, line:816:1>
    |-DeclStmt 0x5593a6dee3a0 <line:794:3, col:18>
    | `-VarDecl 0x5593a6dee338 <col:3, col:13> col:13 used t1503 'pthread_t':'unsigned long'
    |-CallExpr 0x5593a6dee5a8 <line:795:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5593a6dee590 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5593a6dee3b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5593a6dcd8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5593a6dee3f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5593a6dee3d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5593a6dee338 't1503' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5593a6dee5e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5593a6dee470 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5593a6dee448 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5593a6dee410 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5593a6dee600 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5593a6dee490 <col:39> 'void *(void *)' Function 0x5593a6de74d8 'P0' 'void *(void *)'
    | `-ParenExpr 0x5593a6dee510 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5593a6dee4e8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5593a6dee4b0 <col:52> 'int' 0
    |-DeclStmt 0x5593a6dee690 <line:796:3, col:18>
    | `-VarDecl 0x5593a6dee628 <col:3, col:13> col:13 used t1504 'pthread_t':'unsigned long'
    |-CallExpr 0x5593a6dee838 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5593a6dee820 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5593a6dee6a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5593a6dcd8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5593a6dee6e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5593a6dee6c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5593a6dee628 't1504' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5593a6dee878 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5593a6dee760 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5593a6dee738 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5593a6dee700 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5593a6dee890 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5593a6dee780 <col:39> 'void *(void *)' Function 0x5593a6de8e98 'P1' 'void *(void *)'
    | `-ParenExpr 0x5593a6dee800 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5593a6dee7d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5593a6dee7a0 <col:52> 'int' 0
    |-DeclStmt 0x5593a6dee920 <line:798:3, col:18>
    | `-VarDecl 0x5593a6dee8b8 <col:3, col:13> col:13 used t1505 'pthread_t':'unsigned long'
    |-CallExpr 0x5593a6deeac8 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5593a6deeab0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5593a6dee938 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5593a6dcd8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5593a6dee978 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5593a6dee958 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5593a6dee8b8 't1505' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5593a6deeb08 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5593a6dee9f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5593a6dee9c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5593a6dee990 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5593a6deeb20 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5593a6deea10 <col:39> 'void *(void *)' Function 0x5593a6dea220 'P2' 'void *(void *)'
    | `-ParenExpr 0x5593a6deea90 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5593a6deea68 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5593a6deea30 <col:52> 'int' 0
    |-CallExpr 0x5593a6deeb70 <line:800:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5593a6deeb58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5593a6deeb38 <col:3> 'void ()' Function 0x5593a6d8d350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5593a6deec40 <line:801:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5593a6deeb90 <col:3> '_Bool' lvalue Var 0x5593a6de6748 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5593a6deec28 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5593a6deec08 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5593a6deebf0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5593a6deebb0 <col:21> 'int' lvalue Var 0x5593a6de6590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5593a6deebd0 <col:41> 'int' 3
    |-CallExpr 0x5593a6deec98 <line:802:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5593a6deec80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5593a6deec60 <col:3> 'void ()' Function 0x5593a6d8d410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5593a6deed10 <line:803:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5593a6deecf8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5593a6deecb8 <col:3> 'void (int)' Function 0x5593a6d8cca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5593a6deed50 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5593a6deed38 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5593a6deecd8 <col:21> '_Bool' lvalue Var 0x5593a6de6748 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5593a6deeda0 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5593a6deed88 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5593a6deed68 <col:3> 'void ()' Function 0x5593a6d8d350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5593a6def0a0 <line:805:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5593a6deedc0 <col:3> 'int' lvalue Var 0x5593a6de6b00 'z' 'int'
    | `-ConditionalOperator 0x5593a6def070 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5593a6deee80 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5593a6deee38 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5593a6deee20 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5593a6deede0 <col:7> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5593a6deee68 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5593a6deee50 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5593a6deee00 <col:25> '_Bool' lvalue Var 0x5593a6de6c90 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5593a6def058 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5593a6deeea0 <col:42> 'int' lvalue Var 0x5593a6de7160 'z$w_buff0' 'int'
    |   `-ParenExpr 0x5593a6def038 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5593a6def008 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5593a6deef60 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5593a6deef18 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5593a6deef00 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5593a6deeec0 <col:55> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5593a6deef48 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5593a6deef30 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5593a6deeee0 <col:73> '_Bool' lvalue Var 0x5593a6de6e70 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5593a6deefc0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5593a6deef80 <col:90> 'int' lvalue Var 0x5593a6de7258 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5593a6deeff0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5593a6deefa0 <col:102> 'int' lvalue Var 0x5593a6de6b00 'z' 'int'
    |-BinaryOperator 0x5593a6def2a8 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5593a6def0c0 <col:3> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5593a6def290 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5593a6def260 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5593a6def180 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5593a6def138 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5593a6def120 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5593a6def0e0 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5593a6def168 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5593a6def150 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5593a6def100 <col:38> '_Bool' lvalue Var 0x5593a6de6c90 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5593a6def218 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5593a6def1d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5593a6def1a0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5593a6def248 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5593a6def230 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5593a6def1f8 <col:66> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5593a6def590 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5593a6def2c8 <col:3> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5593a6def578 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5593a6def548 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5593a6def468 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5593a6def388 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5593a6def340 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5593a6def328 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5593a6def2e8 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5593a6def370 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5593a6def358 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5593a6def308 <col:38> '_Bool' lvalue Var 0x5593a6de6c90 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5593a6def448 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5593a6def400 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5593a6def3e8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5593a6def3a8 <col:56> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5593a6def430 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5593a6def418 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5593a6def3c8 <col:74> '_Bool' lvalue Var 0x5593a6de6e70 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5593a6def500 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5593a6def4b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5593a6def488 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5593a6def530 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5593a6def518 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5593a6def4e0 <col:102> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5593a6def798 <line:808:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5593a6def5b0 <col:3> '_Bool' lvalue Var 0x5593a6de6c90 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5593a6def780 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5593a6def750 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5593a6def670 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5593a6def628 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5593a6def610 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5593a6def5d0 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5593a6def658 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5593a6def640 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5593a6def5f0 <col:38> '_Bool' lvalue Var 0x5593a6de6c90 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5593a6def708 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5593a6def6c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5593a6def690 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5593a6def738 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5593a6def720 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5593a6def6e8 <col:66> '_Bool' lvalue Var 0x5593a6de6c90 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5593a6defa80 <line:809:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5593a6def7b8 <col:3> '_Bool' lvalue Var 0x5593a6de6e70 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5593a6defa68 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5593a6defa38 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5593a6def958 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5593a6def878 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5593a6def830 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5593a6def818 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5593a6def7d8 <col:20> '_Bool' lvalue Var 0x5593a6de71d8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5593a6def860 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5593a6def848 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5593a6def7f8 <col:38> '_Bool' lvalue Var 0x5593a6de6c90 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5593a6def938 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5593a6def8f0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5593a6def8d8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5593a6def898 <col:56> '_Bool' lvalue Var 0x5593a6de72d0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5593a6def920 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5593a6def908 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5593a6def8b8 <col:74> '_Bool' lvalue Var 0x5593a6de6e70 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5593a6def9f0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5593a6def9a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5593a6def978 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5593a6defa20 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5593a6defa08 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5593a6def9d0 <col:102> '_Bool' lvalue Var 0x5593a6de6e70 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5593a6defad8 <line:810:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5593a6defac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5593a6defaa0 <col:3> 'void ()' Function 0x5593a6d8d410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5593a6defb30 <line:811:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5593a6defb18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5593a6defaf8 <col:3> 'void ()' Function 0x5593a6d8d350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5593a6defd68 <line:812:3, col:67> '_Bool' '='
    | |-DeclRefExpr 0x5593a6defb50 <col:3> '_Bool' lvalue Var 0x5593a6de67c0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5593a6defd50 <col:21, col:67> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5593a6defd38 <col:21, col:67> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5593a6defd18 <col:22, col:67> 'int'
    |       `-BinaryOperator 0x5593a6defcf8 <col:23, col:66> 'int' '&&'
    |         |-BinaryOperator 0x5593a6defc60 <col:23, col:38> 'int' '&&'
    |         | |-BinaryOperator 0x5593a6defbc8 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x5593a6defbb0 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x5593a6defb70 <col:23> 'int' lvalue Var 0x5593a6de68c0 'x' 'int'
    |         | | `-IntegerLiteral 0x5593a6defb90 <col:28> 'int' 2
    |         | `-BinaryOperator 0x5593a6defc40 <col:33, col:38> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5593a6defc28 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5593a6defbe8 <col:33> 'int' lvalue Var 0x5593a6de69e0 'y' 'int'
    |         |   `-IntegerLiteral 0x5593a6defc08 <col:38> 'int' 2
    |         `-BinaryOperator 0x5593a6defcd8 <col:43, col:66> 'int' '=='
    |           |-ImplicitCastExpr 0x5593a6defcc0 <col:43> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5593a6defc80 <col:43> 'int' lvalue Var 0x5593a6de66b0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x5593a6defca0 <col:66> 'int' 0
    |-CallExpr 0x5593a6defdc0 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5593a6defda8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5593a6defd88 <col:3> 'void ()' Function 0x5593a6d8d410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5593a6defe38 <line:814:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5593a6defe20 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5593a6defde0 <col:3> 'void (int)' Function 0x5593a6d8d0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5593a6defe78 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5593a6defe60 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5593a6defe00 <col:21> '_Bool' lvalue Var 0x5593a6de67c0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5593a6defeb0 <line:815:3, col:10>
      `-IntegerLiteral 0x5593a6defe90 <col:10> 'int' 0
