TranslationUnitDecl 0x5604044c9f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5604044ca848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5604044ca520 '__int128'
|-TypedefDecl 0x5604044ca8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5604044ca540 'unsigned __int128'
|-TypedefDecl 0x5604044cabc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5604044ca990 'struct __NSConstantString_tag'
|   `-Record 0x5604044ca910 '__NSConstantString_tag'
|-TypedefDecl 0x5604044cac68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5604044cac20 'char *'
|   `-BuiltinType 0x5604044ca020 'char'
|-TypedefDecl 0x560404509b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5604044caf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5604044cad40 'struct __va_list_tag'
|     `-Record 0x5604044cacc0 '__va_list_tag'
|-FunctionDecl 0x560404509c80 <pthread-wmm/mix000_rmo.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x560404509e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x560404509d80 <col:31> col:34 'int'
|-FunctionDecl 0x560404509fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56040450a0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56040450a238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56040450a1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56040450a468 <col:40, col:99>
|   |-IfStmt 0x56040450a438 <col:42, col:88>
|   | |-UnaryOperator 0x56040450a318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56040450a300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56040450a2e0 <col:47> 'int' lvalue ParmVar 0x56040450a1a8 'expression' 'int'
|   | `-CompoundStmt 0x56040450a420 <col:59, col:88>
|   |   `-LabelStmt 0x56040450a408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56040450a398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56040450a380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56040450a330 <col:68> 'void () __attribute__((noreturn))' Function 0x56040450a0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56040450a450 <col:89>
|   `-ReturnStmt 0x56040450a458 <col:91>
|-FunctionDecl 0x56040450a4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56040450a570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56040450a8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56040450a628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56040450a6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56040450a728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56040450a7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56040450a9b0 <line:11:22>
|-FunctionDecl 0x56040452ff10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56040450aa20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56040450aaa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56040452fd40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56040452fdc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56040452ffd0 <line:14:22>
|-FunctionDecl 0x560404530280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560404530040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5604045300c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x560404530140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x560404530338 <line:16:22>
|-TypedefDecl 0x5604045303a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5604044ca0e0 'unsigned char'
|-TypedefDecl 0x560404530418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5604044ca100 'unsigned short'
|-TypedefDecl 0x560404530488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5604044ca120 'unsigned int'
|-TypedefDecl 0x5604045304f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-TypedefDecl 0x560404530568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5604044ca040 'signed char'
|-TypedefDecl 0x5604045305d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5604044ca0e0 'unsigned char'
|-TypedefDecl 0x560404530648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5604044ca060 'short'
|-TypedefDecl 0x5604045306b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5604044ca100 'unsigned short'
|-TypedefDecl 0x560404530728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5604044ca080 'int'
|-TypedefDecl 0x560404530798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5604044ca120 'unsigned int'
|-TypedefDecl 0x560404530808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x560404530878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-TypedefDecl 0x5604045308e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x560404530958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-TypedefDecl 0x5604045309c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-TypedefDecl 0x560404530a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5604044ca120 'unsigned int'
|-TypedefDecl 0x560404530aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5604044ca120 'unsigned int'
|-TypedefDecl 0x560404530b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-TypedefDecl 0x560404530b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-TypedefDecl 0x560404530bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5604044ca120 'unsigned int'
|-TypedefDecl 0x560404530c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-TypedefDecl 0x560404530cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x560404530d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x560404530dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5604044ca080 'int'
|-RecordDecl 0x560404530e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x560404530f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x560404531030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x560404530fd0 'struct __fsid_t' sugar
|   `-RecordType 0x560404530eb0 '__fsid_t'
|     `-Record 0x560404530e30 ''
|-TypedefDecl 0x5604045310b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x560404531128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-TypedefDecl 0x560404531198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-TypedefDecl 0x560404531208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5604044ca120 'unsigned int'
|-TypedefDecl 0x560404531278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x5604045312e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5604044ca120 'unsigned int'
|-TypedefDecl 0x560404531358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x5604045313c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5604044ca080 'int'
|-TypedefDecl 0x560404531438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5604044ca080 'int'
|-TypedefDecl 0x5604045314a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5604044ca080 'int'
|-TypedefDecl 0x560404531518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5604044ca7a0 'void *'
|   `-BuiltinType 0x5604044c9fe0 'void'
|-TypedefDecl 0x560404531588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x5604045315f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x560404531668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x5604045316d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-TypedefDecl 0x560404531748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-TypedefDecl 0x5604045317b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-TypedefDecl 0x560404531828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-TypedefDecl 0x560404531898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x560404531908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x560404531978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x5604045319e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-TypedefDecl 0x560404531a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x560404531a40 '__off64_t' sugar
|   |-Typedef 0x560404530d68 '__off64_t'
|   `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x560404531b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x560404531b30 '__quad_t *'
|   `-TypedefType 0x560404531ad0 '__quad_t' sugar
|     |-Typedef 0x5604045308e8 '__quad_t'
|     `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x560404531be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5604044cac20 'char *'
|   `-BuiltinType 0x5604044ca020 'char'
|-TypedefDecl 0x560404531c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x560404531cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5604044ca120 'unsigned int'
|-FunctionDecl 0x560404531e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x560404531d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x560404532148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x560404532138 <line:73:3, col:34>
|     `-CallExpr 0x5604045320f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5604045320e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560404532070 <col:10> '<builtin fn type>' Function 0x560404531ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x560404532120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560404532090 <col:29> 'unsigned int' lvalue ParmVar 0x560404531d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x560404531ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x560404531f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x560404531ff0 <col:10> Implicit
| `-ConstAttr 0x560404532048 <col:10> Implicit
|-FunctionDecl 0x5604045322a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x560404532198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5604045325b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5604045325a8 <line:78:3, col:34>
|     `-CallExpr 0x560404532568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x560404532550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5604045324d8 <col:10> '<builtin fn type>' Function 0x560404532348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x560404532590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5604045324f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x560404532198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x560404532348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5604045323e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x560404532458 <col:10> Implicit
| `-ConstAttr 0x5604045324b0 <col:10> Implicit
|-TypedefDecl 0x5604045325e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-TypedefDecl 0x560404532678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x560404532640 '__time_t' sugar
|   |-Typedef 0x560404531278 '__time_t'
|   `-BuiltinType 0x5604044ca0a0 'long'
|-RecordDecl 0x5604045326d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x560404532788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x560404532818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5604045328a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x560404532870 '__pid_t' sugar
|   |-Typedef 0x560404530dd8 '__pid_t'
|   `-BuiltinType 0x5604044ca080 'int'
|-RecordDecl 0x560404532900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5604045329c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x560404532a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x560404532ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x560404532b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-RecordDecl 0x560404532b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x560404534e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x560404534f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x560404534ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x560404532c10 'cpu_set_t'
|     `-Record 0x560404532b90 ''
|-FunctionDecl 0x5604045351f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x560404534fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5604045350d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5604045352a8 <line:108:19>
|-FunctionDecl 0x560404535480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x560404535310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x560404535528 <col:69>
|-FunctionDecl 0x5604045356a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x560404535590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x560404535748 <col:64>
|-FunctionDecl 0x560404535a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5604045357b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5604045358e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560404535ab8 <line:114:22>
|-FunctionDecl 0x560404535e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x560404535b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560404535c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x560404535f10 <col:88>
|-FunctionDecl 0x5604045361c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560404535f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560404535ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x560404536088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560404536280 <col:62>
|-FunctionDecl 0x5604045363f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5604045362e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5604045364a0 <col:63>
|-FunctionDecl 0x5604045365c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x560404536668 <col:47>
|-FunctionDecl 0x560404536770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5604045366d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560404536818 <col:69>
|-FunctionDecl 0x560404536920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x560404536888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5604045369c8 <col:69>
|-FunctionDecl 0x560404536c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560404536a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560404536b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x560404536d38 <col:88>
|-TypedefDecl 0x560404536dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560404536d90 '__clock_t' sugar
|   |-Typedef 0x5604045310b8 '__clock_t'
|   `-BuiltinType 0x5604044ca0a0 'long'
|-TypedefDecl 0x5604045377e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x560404536e20 '__clockid_t' sugar
|   |-Typedef 0x5604045314a8 '__clockid_t'
|   `-BuiltinType 0x5604044ca080 'int'
|-TypedefDecl 0x560404537878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560404537840 '__timer_t' sugar
|   |-Typedef 0x560404531518 '__timer_t'
|   `-PointerType 0x5604044ca7a0 'void *'
|     `-BuiltinType 0x5604044c9fe0 'void'
|-RecordDecl 0x5604045378d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x560404537990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5604045379f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x560404537a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560404537ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560404537b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x560404537b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560404537c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x560404537c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560404537cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560404537d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x560404537da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560404537df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x560404537eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560404537f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560404537fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5604045381a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560404538240 <col:45>
|-FunctionDecl 0x560404538420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560404538310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5604045384c8 <col:54>
|-FunctionDecl 0x5604045386c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560404538530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5604045385a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x560404538778 <line:158:22>
| `-ConstAttr 0x560404539410 <col:63>
|-FunctionDecl 0x560404539610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560404539508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5604045396b8 <col:56>
|-FunctionDecl 0x560404539a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560404539728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5604045397a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560404539820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560404539918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560404539b20 <col:54>
|-RecordDecl 0x560404539b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x560404539c28 parent 0x5604044c9f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x560404539e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560404539f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x560404539f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560404539ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56040453a0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56040453a208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56040453a1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x56040453a140 'struct __locale_struct' sugar
|     `-RecordType 0x560404539c00 'struct __locale_struct'
|       `-Record 0x560404539b78 '__locale_struct'
|-TypedefDecl 0x56040453a2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56040453a280 '__locale_t' sugar
|   |-Typedef 0x56040453a208 '__locale_t'
|   `-PointerType 0x56040453a1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x56040453a140 'struct __locale_struct' sugar
|       `-RecordType 0x560404539c00 'struct __locale_struct'
|         `-Record 0x560404539b78 '__locale_struct'
|-FunctionDecl 0x56040453a6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56040453a328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56040453a3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56040453a438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56040453a4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56040453a540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56040453a778 <col:40>
|-FunctionDecl 0x56040453a968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56040453a840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56040453aa10 <col:66>
|-FunctionDecl 0x56040453ab20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56040453aa78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56040453abc8 <col:69>
|-FunctionDecl 0x56040453adf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56040453ac30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56040453acc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56040453aea8 <col:52>
|-FunctionDecl 0x56040453b050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56040453af10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56040453afa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56040453b100 <col:55>
|-FunctionDecl 0x56040453b298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56040453b180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56040453b340 <col:62>
|-FunctionDecl 0x56040453b578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56040453b3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56040453b620 <col:60>
|-FunctionDecl 0x56040453b848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56040453b6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56040453b720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56040453b8f8 <col:44>
|-FunctionDecl 0x56040453bb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56040453b960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56040453b9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56040453bbb8 <col:49>
|-VarDecl 0x56040453bcb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56040453bd38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56040453bdb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56040453be80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56040453bfb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56040453c050 <col:42>
|-VarDecl 0x56040453c0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56040453c140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56040453c2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56040453c1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56040453c370 <col:57>
|-FunctionDecl 0x56040453d4f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56040453c3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56040453d598 <col:56>
|-FunctionDecl 0x56040453d6a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56040453d618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56040453d750 <col:59>
|-FunctionDecl 0x56040453d858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56040453d7c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56040453d900 <col:48>
| `-ConstAttr 0x56040453d958 <col:89>
|-FunctionDecl 0x56040453dbb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56040453da08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56040453da98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56040453de18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56040453dca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56040453dd38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56040453dec8 <col:88>
|-FunctionDecl 0x56040453e060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56040453df30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56040453dfc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56040453e110 <col:88>
|-FunctionDecl 0x56040453e328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56040453e178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56040453e208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56040453e3d8 <line:209:22>
|-FunctionDecl 0x56040453e778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56040453e440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56040453e500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56040453e590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56040453e620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56040453ea78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56040453e878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56040453e950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56040453eb28 <col:85>
|-FunctionDecl 0x56040453ef18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56040453eb90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56040453ecc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56040453edd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56040453efd0 <col:52>
|-FunctionDecl 0x56040453f148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56040453f038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56040453f1f0 <col:61>
|-FunctionDecl 0x56040453f668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56040453f258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56040453f2d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56040453f408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56040453f510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56040453f728 <col:62>
|-FunctionDecl 0x56040453f948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56040453f790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56040453f820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56040453f9f8 <line:222:22>
|-FunctionDecl 0x56040453faf8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56040453fa60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56040453fba0 <col:65>
|-TypedefDecl 0x56040453fc10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5604044ca140 'unsigned long'
|-RecordDecl 0x56040453fc68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x56040453fdb0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56040453fe18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56040453fec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56040453fe70 'union pthread_attr_t' sugar
|   `-RecordType 0x56040453fcf0 'union pthread_attr_t'
|     `-Record 0x56040453fc68 'pthread_attr_t'
|-RecordDecl 0x56040453ff20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560404540098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560404540110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5604045401c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560404540160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56040453ffa0 'struct __pthread_internal_list'
|     `-Record 0x56040453ff20 '__pthread_internal_list'
|-RecordDecl 0x560404540230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x5604045402d8 parent 0x5604044c9f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5604045403b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560404540418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560404540480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560404544530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560404544598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560404544600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x560404544688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x560404544740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x560404544830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x560404544898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560404544a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5604045449c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5604045402b0 'pthread_mutex_t'
|     `-Record 0x560404540230 ''
|-RecordDecl 0x560404544a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x560404544bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560404544c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560404544cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x560404544c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x560404544b10 'pthread_mutexattr_t'
|     `-Record 0x560404544a90 ''
|-RecordDecl 0x560404544d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x560404544e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x560404544ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560404544f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x560404544fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x560404545008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x560404545070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5604045450d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x560404545140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5604045451a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x560404545260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix000_rmo.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix000_rmo.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x560404545350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5604045453b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x560404545540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x560404545490 'union pthread_cond_t' sugar
|   `-RecordType 0x560404544de0 'pthread_cond_t'
|     `-Record 0x560404544d60 ''
|-RecordDecl 0x5604045455b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5604045456b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560404545718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5604045457d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x560404545770 'union pthread_condattr_t' sugar
|   `-RecordType 0x560404545630 'pthread_condattr_t'
|     `-Record 0x5604045455b0 ''
|-TypedefDecl 0x560404545858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5604044ca120 'unsigned int'
|-TypedefDecl 0x5604045458c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5604044ca080 'int'
|-RecordDecl 0x560404545920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5604045459c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x560404545a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560404545af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x560404545b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x560404545bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x560404545c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x560404545c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x560404545d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x560404545d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x560404545dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x560404545e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x560404545ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x560404545f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix000_rmo.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix000_rmo.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x560404545ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560404546060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5604045461b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x560404546150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5604045459a0 'pthread_rwlock_t'
|     `-Record 0x560404545920 ''
|-RecordDecl 0x560404546220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x560404546360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5604045463c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560404546480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x560404546420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5604045462a0 'pthread_rwlockattr_t'
|     `-Record 0x560404546220 ''
|-TypedefDecl 0x560404548560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5604044ca084 'volatile int' volatile
|   `-BuiltinType 0x5604044ca080 'int'
|-RecordDecl 0x5604045485b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x560404548700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x560404548768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560404548820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5604045487c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x560404548640 'pthread_barrier_t'
|     `-Record 0x5604045485b8 ''
|-RecordDecl 0x560404548890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x560404548990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5604045489f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560404548ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560404548a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560404548910 'pthread_barrierattr_t'
|     `-Record 0x560404548890 ''
|-TypedefDecl 0x560404548bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x560404548b60 'long [8]' 8 
|   `-BuiltinType 0x5604044ca0a0 'long'
|-EnumDecl 0x560404548c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x560404548ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560404548d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x560404548d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x560404548e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x560404548ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560404548ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560404548f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560404548fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x560404548fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x560404548f98 <col:26> 'int' EnumConstant 0x560404548e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560404549058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560404549040 <col:29> 'int'
| |   `-DeclRefExpr 0x560404549020 <col:29> 'int' EnumConstant 0x560404548ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5604045490e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5604045490c8 <col:30> 'int'
| |   `-DeclRefExpr 0x5604045490a8 <col:30> 'int' EnumConstant 0x560404548ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560404549168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560404549150 <col:27> 'int'
|     `-DeclRefExpr 0x560404549130 <col:27> 'int' EnumConstant 0x560404548fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5604045491b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x560404549288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560404549310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5604045492f8 <col:30> 'int'
| |   `-DeclRefExpr 0x5604045492d8 <col:30> 'int' EnumConstant 0x560404549288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560404549360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5604045493e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5604045493d0 <col:29> 'int'
|     `-DeclRefExpr 0x5604045493b0 <col:29> 'int' EnumConstant 0x560404549360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560404549438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x560404549508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560404549570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5604045495c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560404549610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5604045496d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x560404549728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x560404549778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560404549800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5604045497e8 <col:31> 'int'
|     `-DeclRefExpr 0x5604045497c8 <col:31> 'int' EnumConstant 0x5604045496d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x560404549850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x560404549918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x560404549968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5604045499b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x560404549a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560404549ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x560404549b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x560404549bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x560404549c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560404549c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560404549ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x560404549f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560404549fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56040454a0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56040454a118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x56040454a1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56040454a238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56040454a288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x56040454a358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56040454a3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56040454a9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56040454a4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56040454a5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56040454a7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56040454a840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56040454aa98 <col:47>
| |-NonNullAttr 0x56040454aaf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x56040454ab28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x56040454ac50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56040454ab80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56040454aea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56040454ad08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56040454ad88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56040454b078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56040454af68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56040454b120 <col:60>
|-FunctionDecl 0x56040454b270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56040454b310 <col:54>
| `-ConstAttr 0x56040454b368 <col:95>
|-FunctionDecl 0x56040454bda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56040454b3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56040454b418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56040454be50 <line:395:19>
| `-ConstAttr 0x56040454bea8 <col:60>
|-FunctionDecl 0x56040454c078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56040454bf40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56040454c120 <col:71>
| `-NonNullAttr 0x56040454c178 <col:112, col:126> 1
|-FunctionDecl 0x56040454c280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56040454c1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56040454c328 <line:398:22>
| `-NonNullAttr 0x56040454c380 <col:63, col:77> 1
|-FunctionDecl 0x56040454c5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56040454c3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56040454c448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56040454c658 <line:401:22>
| `-NonNullAttr 0x56040454c6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x56040454c8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56040454c6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56040454c778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56040454c968 <line:404:22>
| `-NonNullAttr 0x56040454c9c0 <col:63, col:77> 1
|-FunctionDecl 0x56040454cc18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56040454ca08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56040454cab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56040454ccc8 <line:407:22>
| `-NonNullAttr 0x56040454cd20 <col:63, col:80> 1 2
|-FunctionDecl 0x56040454df78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56040454ddc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56040454de38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56040454e028 <line:410:22>
| `-NonNullAttr 0x56040454e080 <col:63, col:77> 1
|-FunctionDecl 0x56040454e2b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56040454e0c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56040454e158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56040454e368 <line:413:22>
| `-NonNullAttr 0x56040454e3c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56040454e5f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56040454e408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56040454e498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56040454e6a8 <col:37>
| `-NonNullAttr 0x56040454e700 <col:78, col:95> 1 2
|-FunctionDecl 0x56040454e8e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56040454e748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56040454e7c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56040454e998 <line:419:22>
| `-NonNullAttr 0x56040454e9f0 <col:63, col:80> 1 2
|-FunctionDecl 0x56040454eb78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56040454ea38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56040454eab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56040454ec28 <line:421:22>
| `-NonNullAttr 0x56040454ec80 <col:63, col:77> 1
|-FunctionDecl 0x56040454fe58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56040454ecc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56040454ed48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56040454ff08 <line:424:22>
| `-NonNullAttr 0x56040454ff60 <col:63, col:80> 1 2
|-FunctionDecl 0x5604045500e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56040454ffa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560404550028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560404550198 <line:427:22>
| `-NonNullAttr 0x5604045501f0 <col:63, col:77> 1
|-FunctionDecl 0x560404550398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560404550238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5604045502b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560404550448 <line:430:22>
| `-NonNullAttr 0x5604045504a0 <col:63, col:80> 1 2
|-FunctionDecl 0x560404550628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5604045504e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560404550568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5604045506d8 <line:432:22>
| `-NonNullAttr 0x560404550730 <col:63, col:77> 1
|-FunctionDecl 0x560404550958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x560404550778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5604045507f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560404550a08 <line:435:22>
| |-NonNullAttr 0x560404550a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x560404550a98 <col:100> "" ""
|-FunctionDecl 0x560404550ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560404550ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560404550b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x560404550d58 <line:438:22>
| |-NonNullAttr 0x560404550db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x560404550df8 <col:97> "" ""
|-FunctionDecl 0x560404550fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560404550e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560404550ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560404551098 <line:441:22>
| `-NonNullAttr 0x5604045510f0 <col:63, col:80> 1 2
|-FunctionDecl 0x560404551270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560404551138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5604045511b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560404551320 <line:444:22>
| `-NonNullAttr 0x560404551378 <col:63, col:77> 1
|-FunctionDecl 0x560404551668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5604045513c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560404551448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5604045514c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560404551720 <line:448:22>
| `-NonNullAttr 0x560404551778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x560404551a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5604045517d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560404551850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5604045518c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560404551ae0 <col:43>
| `-NonNullAttr 0x560404551b38 <col:84, col:98> 1
|-FunctionDecl 0x560404551e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560404551b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560404551c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x560404551c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x560404551ef8 <line:453:22>
| `-NonNullAttr 0x560404551f50 <col:63, col:77> 3
|-FunctionDecl 0x560404552228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560404551f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560404552018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5604045520a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5604045522e0 <line:457:22>
| `-NonNullAttr 0x560404552338 <col:63, col:80> 2 3
|-FunctionDecl 0x560404552528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x560404552388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560404552408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5604045525d8 <line:459:22>
|-FunctionDecl 0x5604045529a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5604045526a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x560404552840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x560404552a58 <col:52, col:69> 1 2
|-FunctionDecl 0x560404552c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x560404552ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x560404552b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x560404552e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x560404552cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x560404552d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x560404552f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x560404552ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5604045530a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x560404553148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x5604045531f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x5604045532e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x560404553350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x560404553520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix000_rmo.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x560404553618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5604045536d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x560404553670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5604045531d0 '__pthread_unwind_buf_t'
| |   `-Record 0x560404553148 ''
| `-AlignedAttr 0x560404553728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5604045537a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x560404553900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x560404553968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5604045539d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x560404553a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x560404553c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560404553b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560404553e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560404553cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560404553fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560404553ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x560404554088 <line:488:22>
|-RecordDecl 0x5604045540e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5604045543f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x560404554258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5604045542d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5604045544a8 <col:86>
| `-ReturnsTwiceAttr 0x560404554500 <col:12> Implicit
|-FunctionDecl 0x560404554828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5604045545d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5604045546e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5604045548d8 <line:494:22>
| `-NonNullAttr 0x560404554930 <col:63, col:77> 1
|-FunctionDecl 0x560404554aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560404554978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560404554b50 <line:496:22>
| `-NonNullAttr 0x560404554ba8 <col:63, col:77> 1
|-FunctionDecl 0x560404554cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560404554bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560404554d58 <line:498:22>
| `-NonNullAttr 0x560404554db0 <col:52, col:66> 1
|-FunctionDecl 0x560404554ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560404554e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560404554f90 <line:500:22>
| `-NonNullAttr 0x560404554fe8 <col:52, col:66> 1
|-FunctionDecl 0x560404555228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560404555038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5604045550c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5604045552d8 <col:36>
| `-NonNullAttr 0x560404555330 <col:66, col:83> 1 2
|-FunctionDecl 0x560404555430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560404555378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5604045554d8 <line:505:22>
| `-NonNullAttr 0x560404555530 <col:52, col:66> 1
|-FunctionDecl 0x5604045557c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5604045555e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560404555660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560404555878 <line:509:22>
| `-NonNullAttr 0x5604045558d0 <col:63, col:80> 1 2
|-FunctionDecl 0x560404555b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x560404555918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560404555998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x560404555a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x560404555c50 <line:513:22>
| `-NonNullAttr 0x560404555ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x560404555e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560404555cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560404555ee8 <line:515:22>
| `-NonNullAttr 0x560404555f40 <col:63, col:77> 1
|-FunctionDecl 0x560404556128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560404555ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5604045561d0 <line:517:22>
| `-NonNullAttr 0x560404556228 <col:63, col:77> 1
|-FunctionDecl 0x560404556330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560404556278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5604045563d8 <line:519:22>
| `-NonNullAttr 0x560404556430 <col:63, col:77> 1
|-FunctionDecl 0x560404556658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560404556478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5604045564f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x560404556708 <line:523:22>
| `-NonNullAttr 0x560404556760 <col:63, col:80> 1 2
|-FunctionDecl 0x560404556968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5604045567a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560404556828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x560404556a18 <line:526:22>
| `-NonNullAttr 0x560404556a70 <col:63, col:77> 1
|-FunctionDecl 0x560404556c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560404556ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560404556b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560404556cc8 <line:529:22>
| `-NonNullAttr 0x560404556d20 <col:63, col:80> 1 2
|-FunctionDecl 0x560404557f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560404556d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560404557e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560404557fd0 <line:531:22>
| `-NonNullAttr 0x560404558028 <col:63, col:77> 1
|-FunctionDecl 0x5604045581d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560404558078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5604045580f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560404558288 <line:535:22>
| `-NonNullAttr 0x5604045582e0 <col:63, col:80> 1 2
|-FunctionDecl 0x560404558468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560404558328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5604045583a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560404558518 <line:538:22>
| `-NonNullAttr 0x560404558570 <col:63, col:77> 1
|-FunctionDecl 0x560404558718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5604045585b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560404558638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5604045587c8 <line:542:22>
| `-NonNullAttr 0x560404558820 <col:63, col:80> 1 2
|-FunctionDecl 0x5604045589a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560404558868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5604045588e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x560404558a58 <line:545:22>
| `-NonNullAttr 0x560404558ab0 <col:63, col:77> 1
|-FunctionDecl 0x560404558c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560404558af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x560404558b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560404558d48 <line:548:22>
| `-NonNullAttr 0x560404558da0 <col:63, col:80> 1 2
|-FunctionDecl 0x560404559f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560404558de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560404559e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56040455a008 <line:551:22>
| `-NonNullAttr 0x56040455a060 <col:63, col:77> 1
|-FunctionDecl 0x56040455a398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56040455a140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56040455a250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56040455a448 <col:29>
| `-NonNullAttr 0x56040455a4a0 <col:70, col:84> 1
|-FunctionDecl 0x56040455a618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56040455a4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56040455a6c0 <line:556:22>
| `-NonNullAttr 0x56040455a718 <col:63, col:77> 1
|-FunctionDecl 0x56040455a820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56040455a768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56040455a8c8 <line:558:22>
| `-NonNullAttr 0x56040455a920 <col:52, col:66> 1
|-FunctionDecl 0x56040455aa20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56040455a968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56040455aac8 <line:560:19>
| `-NonNullAttr 0x56040455ab20 <col:49, col:63> 1
|-FunctionDecl 0x56040455ad58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56040455ab68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56040455abf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56040455ae08 <col:39>
| `-NonNullAttr 0x56040455ae90 <col:69, col:86> 1 2
|-FunctionDecl 0x56040455af90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56040455aed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56040455b038 <line:565:22>
| `-NonNullAttr 0x56040455b090 <col:52, col:66> 1
|-FunctionDecl 0x56040455b190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56040455b0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56040455b238 <line:567:22>
| `-NonNullAttr 0x56040455b290 <col:52, col:66> 1
|-FunctionDecl 0x56040455b448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56040455b2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56040455b368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56040455b4f8 <col:39>
| `-NonNullAttr 0x56040455b550 <col:69, col:86> 1 2
|-FunctionDecl 0x56040455b650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56040455b598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56040455b6f8 <line:572:22>
| `-NonNullAttr 0x56040455b750 <col:52, col:66> 1
|-FunctionDecl 0x56040455b938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56040455b800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56040455b9e0 <line:574:22>
| `-NonNullAttr 0x56040455ba38 <col:63, col:77> 1
|-FunctionDecl 0x56040455bb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56040455ba88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56040455bbe8 <line:576:22>
| `-NonNullAttr 0x56040455bc40 <col:63, col:77> 1
|-FunctionDecl 0x56040455bea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56040455bc88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56040455bd08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56040455bf50 <line:580:22>
| `-NonNullAttr 0x56040455bfa8 <col:63, col:80> 1 2
|-FunctionDecl 0x56040455c1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56040455bff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56040455c078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56040455c268 <line:583:22>
| `-NonNullAttr 0x56040455c2c0 <col:63, col:77> 1
|-FunctionDecl 0x56040455c468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56040455c308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56040455c388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56040455c518 <line:587:22>
| `-NonNullAttr 0x56040455c570 <col:63, col:80> 1 2
|-FunctionDecl 0x56040455c6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56040455c5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56040455c638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56040455c7a8 <col:36>
| `-NonNullAttr 0x56040455c800 <col:77, col:91> 1
|-FunctionDecl 0x56040455cb38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56040455c8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56040455c9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56040455cbe8 <line:592:22>
| `-NonNullAttr 0x56040455cc40 <col:63, col:77> 1
|-FunctionDecl 0x56040455cdb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56040455cc88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56040455ce60 <line:594:22>
| `-NonNullAttr 0x56040455cee0 <col:63, col:77> 1
|-FunctionDecl 0x56040455cfe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56040455cf28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56040455d088 <line:596:22>
| `-NonNullAttr 0x56040455d0e0 <col:52, col:66> 1
|-FunctionDecl 0x56040455d1e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56040455d128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56040455d288 <line:598:22>
| `-NonNullAttr 0x56040455d2e0 <col:52, col:66> 1
|-FunctionDecl 0x56040455d508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56040455d328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56040455d3a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56040455d5b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x56040455d8e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56040455d638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56040455d6b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56040455d740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56040455d9a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x56040455dbb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56040455da80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56040455dc60 <line:607:22>
| `-NonNullAttr 0x56040455dcb8 <col:63, col:77> 1
|-FunctionDecl 0x56040455ddc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56040455dd08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56040455de68 <line:609:22>
| `-NonNullAttr 0x56040455def0 <col:63, col:77> 1
|-FunctionDecl 0x56040455e118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56040455df38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56040455dfb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56040455e1c8 <line:613:22>
| `-NonNullAttr 0x56040455e220 <col:63, col:80> 1 2
|-FunctionDecl 0x56040455e428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56040455e268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56040455e2e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56040455e4d8 <col:37>
| `-NonNullAttr 0x56040455e530 <col:78, col:92> 1
|-FunctionDecl 0x56040455e748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56040455e578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56040455e620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56040455e7f8 <line:619:22>
| `-NonNullAttr 0x56040455e850 <col:63, col:80> 1 2
|-FunctionDecl 0x56040455ea18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56040455e898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56040455e910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56040455eac8 <line:622:22>
| `-NonNullAttr 0x56040455eb20 <col:63, col:77> 1
|-FunctionDecl 0x56040455edc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56040455ec00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56040455ec80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56040455ee78 <line:624:22>
| `-NonNullAttr 0x56040455ef00 <col:63, col:77> 1
|-FunctionDecl 0x56040455f078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56040455ef48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56040455f120 <line:626:22>
| `-NonNullAttr 0x56040455f178 <col:63, col:77> 1
|-FunctionDecl 0x56040455f280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56040455f1c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56040455f328 <line:628:22>
| `-NonNullAttr 0x56040455f380 <col:52, col:66> 1
|-FunctionDecl 0x56040455f480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56040455f3c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56040455f528 <line:630:22>
| `-NonNullAttr 0x56040455f580 <col:52, col:66> 1
|-FunctionDecl 0x56040455f680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56040455f5c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56040455f728 <line:632:22>
| `-NonNullAttr 0x56040455f780 <col:52, col:66> 1
|-FunctionDecl 0x56040455fb58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56040455f860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56040455f970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56040455f9f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56040455fc10 <line:636:22>
| `-NonNullAttr 0x56040455fc68 <col:63, col:77> 1
|-FunctionDecl 0x56040455fde8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56040455fcb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56040455fe90 <line:638:22>
| `-NonNullAttr 0x56040455ff10 <col:63, col:77> 1
|-FunctionDecl 0x560404560010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56040455ff58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5604045600b8 <line:640:22>
| `-NonNullAttr 0x560404560110 <col:52, col:66> 1
|-FunctionDecl 0x5604045602f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5604045601c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5604045603a0 <line:642:22>
| `-NonNullAttr 0x5604045603f8 <col:63, col:77> 1
|-FunctionDecl 0x560404560500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560404560448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5604045605a8 <line:644:22>
| `-NonNullAttr 0x560404560600 <col:63, col:77> 1
|-FunctionDecl 0x560404560828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560404560648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5604045606c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5604045608d8 <line:648:22>
| `-NonNullAttr 0x560404560930 <col:63, col:80> 1 2
|-FunctionDecl 0x560404560b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x560404560978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5604045609f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x560404560be8 <line:651:22>
| `-NonNullAttr 0x560404560c40 <col:63, col:77> 1
|-FunctionDecl 0x560404560fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x560404560d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x560404560e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x560404561058 <line:654:22>
| `-NonNullAttr 0x5604045610b0 <col:63, col:77> 1
|-FunctionDecl 0x560404561208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5604045610f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5604045612b0 <col:69>
|-FunctionDecl 0x560404561428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x560404561318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5604045614d0 <col:72>
|-FunctionDecl 0x560404561708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x560404561538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5604045615e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5604045617b8 <col:44>
|-FunctionDecl 0x5604045619d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x560404561820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560404561898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x560404561a88 <line:661:22>
| `-NonNullAttr 0x560404561ae0 <col:63, col:77> 2
|-FunctionDecl 0x560404562f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x560404561bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x560404561cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x560404561de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x560404563008 <col:47>
|-FunctionDecl 0x560404563110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x560404563078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560404563268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5604045631d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560404563330 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5604045633f0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5604045634b0 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x560404563568 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5604045635e8 prev 0x560404563568 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x560404563650 <col:24> 'int' 0
|-VarDecl 0x560404563688 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x560404563708 prev 0x560404563688 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x560404563770 <col:27> 'int' 0
|-VarDecl 0x5604045637a8 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x560404563828 prev 0x5604045637a8 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x560404563890 <col:27> 'int' 0
|-VarDecl 0x5604045638c8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x560404563948 prev 0x5604045638c8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5604045639b0 <col:27> 'int' 0
|-VarDecl 0x5604045639e8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x560404563a68 prev 0x5604045639e8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x560404563ad0 <col:27> 'int' 0
|-VarDecl 0x560404563b00 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x560404563b78 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x560404563bf8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x560404563c78 prev 0x560404563bf8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x560404563ce0 <col:9> 'int' 0
|-VarDecl 0x560404563d18 <line:685:1, col:5> col:5 used y 'int'
|-VarDecl 0x560404563d98 prev 0x560404563d18 <line:686:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x560404563e00 <col:9> 'int' 0
|-VarDecl 0x560404563e30 <line:687:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x560404563f20 <line:688:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x560404563f98 <line:689:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x560404564010 <line:690:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x560404564088 <line:691:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x560404564100 <line:692:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x560404564178 <line:693:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x5604045641f0 <line:694:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x560404564268 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x5604045642e8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x560404564368 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x5604045643e0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x560404564460 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x5604045644d8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x560404564550 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5604045645c8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5604045646e0 prev 0x560404563110 <line:703:1, line:746:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x560404564648 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560404568998 <line:704:1, line:746:1>
|   |-CallExpr 0x5604045647f8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5604045647e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560404564788 <col:3> 'void ()' Function 0x56040450a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560404564870 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560404564818 <col:3> 'int' lvalue Var 0x560404564460 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x560404564858 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560404564838 <col:15> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5604045648d0 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560404564890 <col:3> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x5604045648b0 <col:15> 'int' 1
|   |-BinaryOperator 0x560404564948 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5604045648f0 <col:3> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560404564930 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560404564910 <col:20> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5604045649e0 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560404564968 <col:3> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5604045649b8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560404564988 <col:27> 'int' 1
|   |-CallExpr 0x560404564b68 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x560404564b50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560404564a00 <col:3> 'void (int)' Function 0x56040450a238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x560404564b00 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x560404564ae0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x560404564ac0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x560404564a78 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x560404564a60 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560404564a20 <col:23> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x560404564aa8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x560404564a90 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x560404564a40 <col:41> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560404564be8 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560404564b90 <col:3> '_Bool' lvalue Var 0x560404564100 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x560404564bd0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560404564bb0 <col:20> '_Bool' lvalue Var 0x560404563f98 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x560404564c60 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560404564c08 <col:3> '_Bool' lvalue Var 0x560404564178 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560404564c48 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560404564c28 <col:20> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560404564cd8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560404564c80 <col:3> '_Bool' lvalue Var 0x5604045641f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560404564cc0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560404564ca0 <col:20> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560404564d70 <line:714:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560404564cf8 <col:3> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x560404564d48 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560404564d18 <col:27> 'int' 1
|   |-CallExpr 0x560404564dc8 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560404564db0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560404564d90 <col:3> 'void ()' Function 0x56040450a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560404564e20 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560404564e08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560404564de8 <col:3> 'void ()' Function 0x56040450a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560404564ee8 <line:717:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560404564e40 <col:3> '_Bool' lvalue Var 0x560404564550 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x560404564ec8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560404564eb0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560404564e60 <col:19> '_Bool (void)' Function 0x560404509c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560404564fa8 <line:718:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560404564f30 <col:3> '_Bool' lvalue Var 0x5604045645c8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x560404564f88 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560404564f70 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560404564f50 <col:19> '_Bool (void)' Function 0x560404509c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560404565020 <line:719:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560404564fc8 <col:3> '_Bool' lvalue Var 0x560404563e30 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560404565008 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560404564fe8 <col:21> '_Bool' lvalue Var 0x5604045645c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560404565098 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560404565040 <col:3> 'int' lvalue Var 0x560404563f20 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560404565080 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560404565060 <col:15> 'int' lvalue Var 0x560404563d98 'y' 'int'
|   |-BinaryOperator 0x5604045654d0 <line:721:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5604045650b8 <col:3> 'int' lvalue Var 0x560404563d98 'y' 'int'
|   | `-ConditionalOperator 0x5604045654a0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5604045652c8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5604045651e8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560404565110 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5604045650f8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5604045650d8 <col:8> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5604045651c8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560404565160 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560404565148 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560404565128 <col:27> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x5604045651b0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560404565198 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560404565178 <col:46> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5604045652a8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560404565240 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560404565228 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560404565208 <col:65> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x560404565290 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560404565278 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560404565258 <col:84> '_Bool' lvalue Var 0x560404564178 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x560404565488 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5604045652e8 <col:101> 'int' lvalue Var 0x560404563d98 'y' 'int'
|   |   `-ParenExpr 0x560404565468 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560404565438 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5604045653a8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560404565360 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560404565348 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560404565308 <col:106> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560404565390 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560404565378 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560404565328 <col:124> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560404565408 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5604045653c8 <col:141> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560404565420 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5604045653e8 <col:153> 'int' lvalue Var 0x560404564460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5604045659e0 <line:722:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5604045654f0 <col:3> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5604045659b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560404565980 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560404565968 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560404565510 <col:15> '_Bool' lvalue Var 0x5604045645c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560404565998 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560404565530 <col:31> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x560404565948 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560404565918 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560404565740 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560404565660 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560404565588 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560404565570 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560404565550 <col:45> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560404565640 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5604045655d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5604045655c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5604045655a0 <col:64> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x560404565628 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560404565610 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5604045655f0 <col:83> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560404565720 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5604045656b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5604045656a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560404565680 <col:102> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x560404565708 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5604045656f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5604045656d0 <col:121> '_Bool' lvalue Var 0x560404564178 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560404565900 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560404565760 <col:138> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5604045658e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5604045658b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560404565820 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5604045657d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5604045657c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560404565780 <col:151> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560404565808 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5604045657f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5604045657a0 <col:169> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x560404565880 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560404565840 <col:186> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560404565898 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560404565860 <col:198> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x560404565ef0 <line:723:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560404565a00 <col:3> 'int' lvalue Var 0x560404564460 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x560404565ec0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560404565e90 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560404565e78 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560404565a20 <col:15> '_Bool' lvalue Var 0x5604045645c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560404565ea8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560404565a40 <col:31> 'int' lvalue Var 0x560404564460 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x560404565e58 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560404565e28 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560404565c50 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560404565b70 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560404565a98 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560404565a80 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560404565a60 <col:45> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560404565b50 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560404565ae8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560404565ad0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560404565ab0 <col:64> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x560404565b38 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560404565b20 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560404565b00 <col:83> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560404565c30 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560404565bc8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560404565bb0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560404565b90 <col:102> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x560404565c18 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560404565c00 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560404565be0 <col:121> '_Bool' lvalue Var 0x560404564178 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560404565e10 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560404565c70 <col:138> 'int' lvalue Var 0x560404564460 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x560404565df0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560404565dc0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560404565d30 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560404565ce8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560404565cd0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560404565c90 <col:151> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560404565d18 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560404565d00 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560404565cb0 <col:169> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x560404565d90 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560404565d50 <col:186> 'int' lvalue Var 0x560404564460 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560404565da8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560404565d70 <col:198> 'int' lvalue Var 0x560404564460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5604045664a8 <line:724:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560404565f10 <col:3> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560404566490 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560404566460 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560404566418 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560404566400 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560404565f40 <col:20> '_Bool' lvalue Var 0x5604045645c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560404566448 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560404566430 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560404565f60 <col:36> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5604045663e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5604045663b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560404566170 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560404566090 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560404565fb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560404565fa0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560404565f80 <col:55> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560404566070 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560404566008 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560404565ff0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560404565fd0 <col:74> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560404566058 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560404566040 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560404566020 <col:93> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560404566150 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5604045660e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5604045660d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5604045660b0 <col:112> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560404566138 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560404566120 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560404566100 <col:131> '_Bool' lvalue Var 0x560404564178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560404566398 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560404566380 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560404566190 <col:148> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560404566360 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560404566330 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560404566250 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560404566208 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5604045661f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5604045661b0 <col:166> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560404566238 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560404566220 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5604045661d0 <col:184> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5604045662e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5604045662a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560404566270 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560404566318 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560404566300 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5604045662c8 <col:212> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560404566a70 <line:725:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5604045664c8 <col:3> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560404566a58 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560404566a28 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5604045669e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5604045669c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5604045664e8 <col:20> '_Bool' lvalue Var 0x5604045645c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560404566a10 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5604045669f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560404566508 <col:36> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5604045669a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560404566978 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560404566718 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560404566638 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560404566560 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560404566548 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560404566528 <col:55> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560404566618 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5604045665b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560404566598 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560404566578 <col:74> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560404566600 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5604045665e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5604045665c8 <col:93> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5604045666f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560404566690 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560404566678 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560404566658 <col:112> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5604045666e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5604045666c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5604045666a8 <col:131> '_Bool' lvalue Var 0x560404564178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560404566960 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560404566948 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560404566738 <col:148> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560404566928 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5604045668f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5604045667f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5604045667b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560404566798 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560404566758 <col:166> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5604045667e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5604045667c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560404566778 <col:184> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5604045668c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560404566848 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560404566818 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5604045668e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5604045668a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560404566870 <col:219> 'int' 0
|   |-BinaryOperator 0x560404567048 <line:726:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560404566a90 <col:3> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560404567030 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560404567000 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560404566fb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560404566fa0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560404566ab0 <col:20> '_Bool' lvalue Var 0x5604045645c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560404566fe8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560404566fd0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560404566ad0 <col:36> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x560404566f80 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560404566f50 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560404566ce0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560404566c00 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560404566b28 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560404566b10 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560404566af0 <col:55> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560404566be0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560404566b78 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560404566b60 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560404566b40 <col:74> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560404566bc8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560404566bb0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560404566b90 <col:93> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560404566cc0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560404566c58 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560404566c40 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560404566c20 <col:112> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560404566ca8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560404566c90 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560404566c70 <col:131> '_Bool' lvalue Var 0x560404564178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560404566f08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560404566ef0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560404566d00 <col:148> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x560404566ed0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560404566ea0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560404566dc0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560404566d78 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560404566d60 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560404566d20 <col:166> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560404566da8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560404566d90 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560404566d40 <col:184> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560404566e58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560404566e10 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560404566de0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560404566e88 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560404566e70 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560404566e38 <col:212> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560404567610 <line:727:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560404567068 <col:3> '_Bool' lvalue Var 0x560404564178 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5604045675f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5604045675c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560404567580 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560404567568 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560404567088 <col:20> '_Bool' lvalue Var 0x5604045645c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5604045675b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560404567598 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5604045670a8 <col:36> '_Bool' lvalue Var 0x560404564178 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x560404567548 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560404567518 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5604045672b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5604045671d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560404567100 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5604045670e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5604045670c8 <col:55> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5604045671b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560404567150 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560404567138 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560404567118 <col:74> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5604045671a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560404567188 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560404567168 <col:93> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560404567298 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560404567230 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560404567218 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5604045671f8 <col:112> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560404567280 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560404567268 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560404567248 <col:131> '_Bool' lvalue Var 0x560404564178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560404567500 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5604045674e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5604045672d8 <col:148> '_Bool' lvalue Var 0x560404564178 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x5604045674c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560404567498 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560404567398 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560404567350 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560404567338 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5604045672f8 <col:166> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560404567380 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560404567368 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560404567318 <col:184> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560404567468 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5604045673e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5604045673b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560404567480 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560404567440 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560404567410 <col:219> 'int' 0
|   |-BinaryOperator 0x560404567688 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560404567630 <col:3> 'int' lvalue Var 0x560404563708 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x560404567670 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560404567650 <col:25> 'int' lvalue Var 0x560404563d98 'y' 'int'
|   |-BinaryOperator 0x5604045677b8 <line:729:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5604045676a8 <col:3> 'int' lvalue Var 0x560404563d98 'y' 'int'
|   | `-ConditionalOperator 0x560404567788 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560404567740 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560404567728 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5604045676c8 <col:7> '_Bool' lvalue Var 0x560404563e30 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560404567758 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5604045676e8 <col:25> 'int' lvalue Var 0x560404563f20 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560404567770 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560404567708 <col:37> 'int' lvalue Var 0x560404563d98 'y' 'int'
|   |-BinaryOperator 0x560404567850 <line:730:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5604045677d8 <col:3> '_Bool' lvalue Var 0x560404563e30 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560404567828 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5604045677f8 <col:28> 'int' 0
|   |-CallExpr 0x5604045678a8 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560404567890 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560404567870 <col:3> 'void ()' Function 0x56040450a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560404567900 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5604045678e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5604045678c8 <col:3> 'void ()' Function 0x56040450a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560404567978 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560404567920 <col:3> 'int' lvalue Var 0x560404563828 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x560404567960 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560404567940 <col:25> 'int' lvalue Var 0x560404563c78 'x' 'int'
|   |-CallExpr 0x5604045679d0 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5604045679b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560404567998 <col:3> 'void ()' Function 0x56040450a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560404567a28 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560404567a10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5604045679f0 <col:3> 'void ()' Function 0x56040450a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560404567d10 <line:736:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560404567a48 <col:3> 'int' lvalue Var 0x560404563d98 'y' 'int'
|   | `-ConditionalOperator 0x560404567ce0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560404567b08 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560404567ac0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560404567aa8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560404567a68 <col:7> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560404567af0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560404567ad8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560404567a88 <col:25> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x560404567cc8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560404567b28 <col:42> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x560404567ca8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560404567c78 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560404567be8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560404567ba0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560404567b88 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560404567b48 <col:55> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560404567bd0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560404567bb8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560404567b68 <col:73> '_Bool' lvalue Var 0x560404564178 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560404567c48 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560404567c08 <col:90> 'int' lvalue Var 0x560404564460 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560404567c60 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560404567c28 <col:102> 'int' lvalue Var 0x560404563d98 'y' 'int'
|   |-BinaryOperator 0x560404567f18 <line:737:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560404567d30 <col:3> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560404567f00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560404567ed0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560404567df0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560404567da8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560404567d90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560404567d50 <col:20> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560404567dd8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560404567dc0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560404567d70 <col:38> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560404567e88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560404567e40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560404567e10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560404567eb8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560404567ea0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560404567e68 <col:66> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560404568228 <line:738:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560404567f60 <col:3> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560404568210 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5604045681e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560404568100 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560404568020 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560404567fd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560404567fc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560404567f80 <col:20> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560404568008 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560404567ff0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560404567fa0 <col:38> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5604045680e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560404568098 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560404568080 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560404568040 <col:56> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5604045680c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5604045680b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560404568060 <col:74> '_Bool' lvalue Var 0x560404564178 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560404568198 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560404568150 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560404568120 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5604045681c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5604045681b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560404568178 <col:102> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560404568430 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560404568248 <col:3> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560404568418 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5604045683e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560404568308 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5604045682c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5604045682a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560404568268 <col:20> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5604045682f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5604045682d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560404568288 <col:38> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5604045683a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560404568358 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560404568328 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5604045683d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5604045683b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560404568380 <col:66> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560404568718 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560404568450 <col:3> '_Bool' lvalue Var 0x560404564178 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560404568700 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5604045686d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5604045685f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560404568510 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5604045684c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5604045684b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560404568470 <col:20> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5604045684f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5604045684e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560404568490 <col:38> '_Bool' lvalue Var 0x560404564010 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5604045685d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560404568588 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560404568570 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560404568530 <col:56> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5604045685b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5604045685a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560404568550 <col:74> '_Bool' lvalue Var 0x560404564178 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560404568688 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560404568640 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560404568610 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5604045686b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5604045686a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560404568668 <col:102> '_Bool' lvalue Var 0x560404564178 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x560404568770 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560404568758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560404568738 <col:3> 'void ()' Function 0x56040450a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5604045687c8 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5604045687b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560404568790 <col:3> 'void ()' Function 0x56040450a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560404568880 <line:743:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5604045687e8 <col:3> 'int' lvalue Var 0x5604045635e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560404568860 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560404568848 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560404568808 <col:22> 'int' lvalue Var 0x5604045635e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560404568828 <col:41> 'int' 1
|   |-CallExpr 0x5604045688d8 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5604045688c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5604045688a0 <col:3> 'void ()' Function 0x56040450a570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560404568988 <line:745:3, col:36>
|     `-CallExpr 0x560404568968 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560404568950 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5604045688f8 <col:10> 'void *(void)' Function 0x560404509fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560404568ba0 prev 0x560404563268 <line:747:1, line:782:1> line:747:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x560404568b08 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56040456c868 <line:748:1, line:782:1>
|   |-CallExpr 0x560404568c80 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560404568c68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560404568c48 <col:3> 'void ()' Function 0x56040450a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560404568ce0 <line:750:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560404568ca0 <col:3> 'int' lvalue Var 0x560404563c78 'x' 'int'
|   | `-IntegerLiteral 0x560404568cc0 <col:7> 'int' 1
|   |-CallExpr 0x560404568d38 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560404568d20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560404568d00 <col:3> 'void ()' Function 0x56040450a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560404568d90 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560404568d78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560404568d58 <col:3> 'void ()' Function 0x56040450a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560404568e08 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560404568db0 <col:3> 'int' lvalue Var 0x560404563948 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x560404568df0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560404568dd0 <col:25> 'int' lvalue Var 0x560404563c78 'x' 'int'
|   |-CallExpr 0x560404568e60 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560404568e48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560404568e28 <col:3> 'void ()' Function 0x56040450a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560404568eb8 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560404568ea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560404568e80 <col:3> 'void ()' Function 0x56040450a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560404568f70 <line:756:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560404568ed8 <col:3> '_Bool' lvalue Var 0x560404564550 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x560404568f30 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560404568f18 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560404568ef8 <col:19> '_Bool (void)' Function 0x560404509c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560404569008 <line:757:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560404568f90 <col:3> '_Bool' lvalue Var 0x5604045645c8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x560404568fe8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560404568fd0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560404568fb0 <col:19> '_Bool (void)' Function 0x560404509c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560404569080 <line:758:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560404569028 <col:3> '_Bool' lvalue Var 0x560404563e30 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560404569068 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560404569048 <col:21> '_Bool' lvalue Var 0x5604045645c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5604045690f8 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5604045690a0 <col:3> 'int' lvalue Var 0x560404563f20 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5604045690e0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5604045690c0 <col:15> 'int' lvalue Var 0x560404563d98 'y' 'int'
|   |-BinaryOperator 0x560404569530 <line:760:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560404569118 <col:3> 'int' lvalue Var 0x560404563d98 'y' 'int'
|   | `-ConditionalOperator 0x560404569500 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560404569328 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560404569248 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560404569170 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560404569158 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560404569138 <col:8> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560404569228 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5604045691c0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5604045691a8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560404569188 <col:27> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x560404569210 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5604045691f8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5604045691d8 <col:46> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560404569308 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5604045692a0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560404569288 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560404569268 <col:65> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5604045692f0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5604045692d8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5604045692b8 <col:84> '_Bool' lvalue Var 0x5604045641f0 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5604045694e8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560404569348 <col:101> 'int' lvalue Var 0x560404563d98 'y' 'int'
|   |   `-ParenExpr 0x5604045694c8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560404569498 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560404569408 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5604045693c0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5604045693a8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560404569368 <col:106> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5604045693f0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5604045693d8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560404569388 <col:124> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560404569468 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560404569428 <col:141> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560404569480 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560404569448 <col:153> 'int' lvalue Var 0x560404564460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x560404569a40 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560404569550 <col:3> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x560404569a10 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5604045699e0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5604045699c8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560404569570 <col:15> '_Bool' lvalue Var 0x5604045645c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5604045699f8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560404569590 <col:31> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5604045699a8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560404569978 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5604045697a0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5604045696c0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5604045695e8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5604045695d0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5604045695b0 <col:45> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5604045696a0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560404569638 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560404569620 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560404569600 <col:64> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x560404569688 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560404569670 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560404569650 <col:83> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560404569780 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560404569718 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560404569700 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5604045696e0 <col:102> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x560404569768 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560404569750 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560404569730 <col:121> '_Bool' lvalue Var 0x5604045641f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560404569960 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5604045697c0 <col:138> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x560404569940 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560404569910 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560404569880 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560404569838 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560404569820 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5604045697e0 <col:151> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560404569868 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560404569850 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560404569800 <col:169> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5604045698e0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5604045698a0 <col:186> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5604045698f8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5604045698c0 <col:198> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x560404569f50 <line:762:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560404569a60 <col:3> 'int' lvalue Var 0x560404564460 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x560404569f20 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560404569ef0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560404569ed8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560404569a80 <col:15> '_Bool' lvalue Var 0x5604045645c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560404569f08 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560404569aa0 <col:31> 'int' lvalue Var 0x560404564460 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x560404569eb8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560404569e88 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560404569cb0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560404569bd0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560404569af8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560404569ae0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560404569ac0 <col:45> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560404569bb0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560404569b48 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560404569b30 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560404569b10 <col:64> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x560404569b98 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560404569b80 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560404569b60 <col:83> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560404569c90 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560404569c28 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560404569c10 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560404569bf0 <col:102> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x560404569c78 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560404569c60 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560404569c40 <col:121> '_Bool' lvalue Var 0x5604045641f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560404569e70 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560404569cd0 <col:138> 'int' lvalue Var 0x560404564460 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x560404569e50 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560404569e20 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560404569d90 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560404569d48 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560404569d30 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560404569cf0 <col:151> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560404569d78 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560404569d60 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560404569d10 <col:169> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x560404569df0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560404569db0 <col:186> 'int' lvalue Var 0x560404564460 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560404569e08 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560404569dd0 <col:198> 'int' lvalue Var 0x560404564460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56040456a508 <line:763:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560404569f80 <col:3> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56040456a4f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56040456a4c0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56040456a478 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56040456a460 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560404569fa0 <col:20> '_Bool' lvalue Var 0x5604045645c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56040456a4a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56040456a490 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560404569fc0 <col:36> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56040456a440 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56040456a410 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56040456a1d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56040456a0f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56040456a018 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56040456a000 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560404569fe0 <col:55> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56040456a0d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56040456a068 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56040456a050 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56040456a030 <col:74> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56040456a0b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56040456a0a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56040456a080 <col:93> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56040456a1b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56040456a148 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56040456a130 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56040456a110 <col:112> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56040456a198 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56040456a180 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56040456a160 <col:131> '_Bool' lvalue Var 0x5604045641f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56040456a3f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56040456a3e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56040456a1f0 <col:148> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56040456a3c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56040456a390 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56040456a2b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56040456a268 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56040456a250 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56040456a210 <col:166> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56040456a298 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56040456a280 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56040456a230 <col:184> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56040456a348 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56040456a300 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56040456a2d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56040456a378 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56040456a360 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56040456a328 <col:212> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56040456aad0 <line:764:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56040456a528 <col:3> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56040456aab8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56040456aa88 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56040456aa40 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56040456aa28 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56040456a548 <col:20> '_Bool' lvalue Var 0x5604045645c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56040456aa70 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56040456aa58 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56040456a568 <col:36> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56040456aa08 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56040456a9d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56040456a778 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56040456a698 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56040456a5c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56040456a5a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56040456a588 <col:55> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56040456a678 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56040456a610 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56040456a5f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56040456a5d8 <col:74> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56040456a660 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56040456a648 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56040456a628 <col:93> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56040456a758 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56040456a6f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56040456a6d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56040456a6b8 <col:112> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56040456a740 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56040456a728 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56040456a708 <col:131> '_Bool' lvalue Var 0x5604045641f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56040456a9c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56040456a9a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56040456a798 <col:148> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56040456a988 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56040456a958 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56040456a858 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56040456a810 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56040456a7f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56040456a7b8 <col:166> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56040456a840 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56040456a828 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56040456a7d8 <col:184> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56040456a928 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56040456a8a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56040456a878 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56040456a940 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56040456a900 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56040456a8d0 <col:219> 'int' 0
|   |-BinaryOperator 0x56040456b088 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56040456aaf0 <col:3> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56040456b070 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56040456b040 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56040456aff8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56040456afe0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56040456ab10 <col:20> '_Bool' lvalue Var 0x5604045645c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56040456b028 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56040456b010 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56040456ab30 <col:36> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x56040456afc0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56040456af90 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56040456ad40 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56040456ac60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56040456ab88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56040456ab70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56040456ab50 <col:55> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56040456ac40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56040456abd8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56040456abc0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56040456aba0 <col:74> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56040456ac28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56040456ac10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56040456abf0 <col:93> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56040456ad20 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56040456acb8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56040456aca0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56040456ac80 <col:112> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56040456ad08 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56040456acf0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56040456acd0 <col:131> '_Bool' lvalue Var 0x5604045641f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56040456af68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56040456af50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56040456ad60 <col:148> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x56040456af30 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56040456af00 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56040456ae20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56040456add8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56040456adc0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56040456ad80 <col:166> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56040456ae08 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56040456adf0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56040456ada0 <col:184> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56040456aeb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56040456ae70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56040456ae40 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56040456aee8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56040456aed0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56040456ae98 <col:212> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56040456b650 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56040456b0a8 <col:3> '_Bool' lvalue Var 0x5604045641f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56040456b638 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56040456b608 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56040456b5c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56040456b5a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56040456b0c8 <col:20> '_Bool' lvalue Var 0x5604045645c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56040456b5f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56040456b5d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56040456b0e8 <col:36> '_Bool' lvalue Var 0x5604045641f0 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x56040456b588 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56040456b558 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56040456b2f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56040456b218 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56040456b140 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56040456b128 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56040456b108 <col:55> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56040456b1f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56040456b190 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56040456b178 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56040456b158 <col:74> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56040456b1e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56040456b1c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56040456b1a8 <col:93> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56040456b2d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56040456b270 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56040456b258 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56040456b238 <col:112> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56040456b2c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56040456b2a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56040456b288 <col:131> '_Bool' lvalue Var 0x5604045641f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56040456b540 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56040456b528 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56040456b318 <col:148> '_Bool' lvalue Var 0x5604045641f0 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x56040456b508 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56040456b4d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56040456b3d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56040456b390 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56040456b378 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56040456b338 <col:166> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56040456b3c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56040456b3a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56040456b358 <col:184> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56040456b4a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56040456b428 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56040456b3f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56040456b4c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56040456b480 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56040456b450 <col:219> 'int' 0
|   |-BinaryOperator 0x56040456b6c8 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56040456b670 <col:3> 'int' lvalue Var 0x560404563a68 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x56040456b6b0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56040456b690 <col:25> 'int' lvalue Var 0x560404563d98 'y' 'int'
|   |-BinaryOperator 0x56040456b7f8 <line:768:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56040456b6e8 <col:3> 'int' lvalue Var 0x560404563d98 'y' 'int'
|   | `-ConditionalOperator 0x56040456b7c8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56040456b780 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56040456b768 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56040456b708 <col:7> '_Bool' lvalue Var 0x560404563e30 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56040456b798 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56040456b728 <col:25> 'int' lvalue Var 0x560404563f20 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56040456b7b0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56040456b748 <col:37> 'int' lvalue Var 0x560404563d98 'y' 'int'
|   |-BinaryOperator 0x56040456b890 <line:769:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56040456b818 <col:3> '_Bool' lvalue Var 0x560404563e30 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56040456b868 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56040456b838 <col:28> 'int' 0
|   |-CallExpr 0x56040456b8e8 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56040456b8d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56040456b8b0 <col:3> 'void ()' Function 0x56040450a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56040456b940 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56040456b928 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56040456b908 <col:3> 'void ()' Function 0x56040450a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56040456bc28 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56040456b960 <col:3> 'int' lvalue Var 0x560404563d98 'y' 'int'
|   | `-ConditionalOperator 0x56040456bbf8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56040456ba20 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56040456b9d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56040456b9c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56040456b980 <col:7> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56040456ba08 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56040456b9f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56040456b9a0 <col:25> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56040456bbe0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56040456ba40 <col:42> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56040456bbc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56040456bb90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56040456bb00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56040456bab8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56040456baa0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56040456ba60 <col:55> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56040456bae8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56040456bad0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56040456ba80 <col:73> '_Bool' lvalue Var 0x5604045641f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56040456bb60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56040456bb20 <col:90> 'int' lvalue Var 0x560404564460 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56040456bb78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56040456bb40 <col:102> 'int' lvalue Var 0x560404563d98 'y' 'int'
|   |-BinaryOperator 0x56040456be30 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56040456bc48 <col:3> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56040456be18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56040456bde8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56040456bd08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56040456bcc0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56040456bca8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56040456bc68 <col:20> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56040456bcf0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56040456bcd8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56040456bc88 <col:38> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56040456bda0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56040456bd58 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56040456bd28 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56040456bdd0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56040456bdb8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56040456bd80 <col:66> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56040456c130 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56040456be50 <col:3> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56040456c118 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56040456c0e8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56040456c008 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56040456bf10 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56040456bec8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56040456beb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56040456be70 <col:20> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56040456bef8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56040456bee0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56040456be90 <col:38> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56040456bfe8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56040456bfa0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56040456bf70 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56040456bf30 <col:56> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56040456bfd0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56040456bfb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56040456bf50 <col:74> '_Bool' lvalue Var 0x5604045641f0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56040456c0a0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56040456c058 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56040456c028 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56040456c0d0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56040456c0b8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56040456c080 <col:102> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56040456c338 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56040456c150 <col:3> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56040456c320 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56040456c2f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56040456c210 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56040456c1c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56040456c1b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56040456c170 <col:20> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56040456c1f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56040456c1e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56040456c190 <col:38> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56040456c2a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56040456c260 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56040456c230 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56040456c2d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56040456c2c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56040456c288 <col:66> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56040456c620 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56040456c358 <col:3> '_Bool' lvalue Var 0x5604045641f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56040456c608 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56040456c5d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56040456c4f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56040456c418 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56040456c3d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56040456c3b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56040456c378 <col:20> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56040456c400 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56040456c3e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56040456c398 <col:38> '_Bool' lvalue Var 0x560404564088 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56040456c4d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56040456c490 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56040456c478 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56040456c438 <col:56> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56040456c4c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56040456c4a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56040456c458 <col:74> '_Bool' lvalue Var 0x5604045641f0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56040456c590 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56040456c548 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56040456c518 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56040456c5c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56040456c5a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56040456c570 <col:102> '_Bool' lvalue Var 0x5604045641f0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x56040456c678 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56040456c660 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56040456c640 <col:3> 'void ()' Function 0x56040450a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56040456c6d0 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56040456c6b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56040456c698 <col:3> 'void ()' Function 0x56040450a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56040456c788 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56040456c6f0 <col:3> 'int' lvalue Var 0x5604045635e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56040456c768 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56040456c750 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56040456c710 <col:22> 'int' lvalue Var 0x5604045635e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56040456c730 <col:41> 'int' 1
|   |-CallExpr 0x56040456c7e0 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56040456c7c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56040456c7a8 <col:3> 'void ()' Function 0x56040450a570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56040456c858 <line:781:3, col:36>
|     `-CallExpr 0x56040456c838 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56040456c820 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56040456c800 <col:10> 'void *(void)' Function 0x560404509fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56040456c9a0 prev 0x560404563330 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x56040456ca40 <line:784:1, line:785:1>
|-FunctionDecl 0x56040456ca70 prev 0x5604045633f0 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x56040456cb10 <line:787:1, line:788:1>
|-FunctionDecl 0x56040456cb40 prev 0x5604045634b0 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x56040456cbe0 <line:790:1, line:791:1>
`-FunctionDecl 0x56040456cc48 <line:792:1, line:814:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x56040456e6d0 <line:793:1, line:814:1>
    |-DeclStmt 0x56040456cd60 <line:794:3, col:15>
    | `-VarDecl 0x56040456ccf8 <col:3, col:13> col:13 used t8 'pthread_t':'unsigned long'
    |-CallExpr 0x56040456cfb0 <line:795:3, col:51> 'int'
    | |-ImplicitCastExpr 0x56040456cf50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56040456cd78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56040454a9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56040456cdb8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56040456cd98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56040456ccf8 't8' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56040456cff0 <col:23, col:33> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56040456ce30 <col:23, col:33> 'void *'
    | |   `-CStyleCastExpr 0x56040456ce08 <col:24, col:32> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56040456cdd0 <col:32> 'int' 0
    | |-ImplicitCastExpr 0x56040456d008 <col:36> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56040456ce50 <col:36> 'void *(void *)' Function 0x5604045646e0 'P0' 'void *(void *)'
    | `-ParenExpr 0x56040456ced0 <col:40, col:50> 'void *'
    |   `-CStyleCastExpr 0x56040456cea8 <col:41, col:49> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56040456ce70 <col:49> 'int' 0
    |-DeclStmt 0x56040456d098 <line:796:3, col:15>
    | `-VarDecl 0x56040456d030 <col:3, col:13> col:13 used t9 'pthread_t':'unsigned long'
    |-CallExpr 0x56040456d240 <line:797:3, col:51> 'int'
    | |-ImplicitCastExpr 0x56040456d228 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56040456d0b0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56040454a9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56040456d0f0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56040456d0d0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56040456d030 't9' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56040456d280 <col:23, col:33> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56040456d168 <col:23, col:33> 'void *'
    | |   `-CStyleCastExpr 0x56040456d140 <col:24, col:32> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56040456d108 <col:32> 'int' 0
    | |-ImplicitCastExpr 0x56040456d298 <col:36> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56040456d188 <col:36> 'void *(void *)' Function 0x560404568ba0 'P1' 'void *(void *)'
    | `-ParenExpr 0x56040456d208 <col:40, col:50> 'void *'
    |   `-CStyleCastExpr 0x56040456d1e0 <col:41, col:49> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56040456d1a8 <col:49> 'int' 0
    |-CallExpr 0x56040456d2e8 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56040456d2d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56040456d2b0 <col:3> 'void ()' Function 0x56040450a4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56040456d3b8 <line:799:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56040456d308 <col:3> '_Bool' lvalue Var 0x560404563b00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56040456d3a0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56040456d380 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56040456d368 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56040456d328 <col:21> 'int' lvalue Var 0x5604045635e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56040456d348 <col:41> 'int' 2
    |-CallExpr 0x56040456d410 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56040456d3f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56040456d3d8 <col:3> 'void ()' Function 0x56040450a570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56040456d488 <line:801:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56040456d470 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56040456d430 <col:3> 'void (int)' Function 0x560404509e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56040456d4c8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56040456d4b0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56040456d450 <col:21> '_Bool' lvalue Var 0x560404563b00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56040456d518 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56040456d500 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56040456d4e0 <col:3> 'void ()' Function 0x56040450a4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56040456d800 <line:803:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56040456d538 <col:3> 'int' lvalue Var 0x560404563d98 'y' 'int'
    | `-ConditionalOperator 0x56040456d7d0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56040456d5f8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56040456d5b0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56040456d598 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56040456d558 <col:7> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56040456d5e0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56040456d5c8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56040456d578 <col:25> '_Bool' lvalue Var 0x560404563f98 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56040456d7b8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56040456d618 <col:42> 'int' lvalue Var 0x560404564368 'y$w_buff0' 'int'
    |   `-ParenExpr 0x56040456d798 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56040456d768 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56040456d6d8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56040456d690 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56040456d678 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56040456d638 <col:55> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56040456d6c0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56040456d6a8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56040456d658 <col:73> '_Bool' lvalue Var 0x560404564100 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56040456d738 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56040456d6f8 <col:90> 'int' lvalue Var 0x560404564460 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56040456d750 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56040456d718 <col:102> 'int' lvalue Var 0x560404563d98 'y' 'int'
    |-BinaryOperator 0x56040456da08 <line:804:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56040456d820 <col:3> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56040456d9f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56040456d9c0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56040456d8e0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56040456d898 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56040456d880 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56040456d840 <col:20> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56040456d8c8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56040456d8b0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56040456d860 <col:38> '_Bool' lvalue Var 0x560404563f98 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56040456d978 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56040456d930 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56040456d900 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56040456d9a8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56040456d990 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56040456d958 <col:66> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56040456dcf0 <line:805:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56040456da28 <col:3> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56040456dcd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56040456dca8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56040456dbc8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56040456dae8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56040456daa0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56040456da88 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56040456da48 <col:20> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56040456dad0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56040456dab8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56040456da68 <col:38> '_Bool' lvalue Var 0x560404563f98 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56040456dba8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56040456db60 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56040456db48 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56040456db08 <col:56> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56040456db90 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56040456db78 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56040456db28 <col:74> '_Bool' lvalue Var 0x560404564100 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56040456dc60 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56040456dc18 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56040456dbe8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56040456dc90 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56040456dc78 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56040456dc40 <col:102> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56040456def8 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56040456dd10 <col:3> '_Bool' lvalue Var 0x560404563f98 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56040456dee0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56040456deb0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56040456ddd0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56040456dd88 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56040456dd70 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56040456dd30 <col:20> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56040456ddb8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56040456dda0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56040456dd50 <col:38> '_Bool' lvalue Var 0x560404563f98 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56040456de68 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56040456de20 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56040456ddf0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56040456de98 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56040456de80 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56040456de48 <col:66> '_Bool' lvalue Var 0x560404563f98 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56040456e1f8 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56040456df18 <col:3> '_Bool' lvalue Var 0x560404564100 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56040456e1e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56040456e1b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56040456e0d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56040456dff0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56040456df90 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56040456df78 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56040456df38 <col:20> '_Bool' lvalue Var 0x5604045643e0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56040456dfd8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56040456dfc0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56040456df58 <col:38> '_Bool' lvalue Var 0x560404563f98 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56040456e0b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56040456e068 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56040456e050 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56040456e010 <col:56> '_Bool' lvalue Var 0x5604045644d8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56040456e098 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56040456e080 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56040456e030 <col:74> '_Bool' lvalue Var 0x560404564100 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56040456e168 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56040456e120 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56040456e0f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56040456e198 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56040456e180 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56040456e148 <col:102> '_Bool' lvalue Var 0x560404564100 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56040456e250 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56040456e238 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56040456e218 <col:3> 'void ()' Function 0x56040450a570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56040456e2a8 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56040456e290 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56040456e270 <col:3> 'void ()' Function 0x56040450a4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56040456e578 <line:810:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x56040456e2c8 <col:3> '_Bool' lvalue Var 0x560404563b78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56040456e560 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56040456e548 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56040456e528 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x56040456e508 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x56040456e470 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x56040456e3d8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x56040456e340 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x56040456e328 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x56040456e2e8 <col:23> 'int' lvalue Var 0x560404563708 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x56040456e308 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x56040456e3b8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x56040456e3a0 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x56040456e360 <col:51> 'int' lvalue Var 0x560404563828 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x56040456e380 <col:74> 'int' 0
    |         | `-BinaryOperator 0x56040456e450 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56040456e438 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56040456e3f8 <col:79> 'int' lvalue Var 0x560404563948 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x56040456e418 <col:102> 'int' 1
    |         `-BinaryOperator 0x56040456e4e8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x56040456e4d0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56040456e490 <col:107> 'int' lvalue Var 0x560404563a68 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x56040456e4b0 <col:130> 'int' 0
    |-CallExpr 0x56040456e5d0 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56040456e5b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56040456e598 <col:3> 'void ()' Function 0x56040450a570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56040456e648 <line:812:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56040456e630 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56040456e5f0 <col:3> 'void (int)' Function 0x56040450a238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56040456e688 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56040456e670 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56040456e610 <col:21> '_Bool' lvalue Var 0x560404563b78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56040456e6c0 <line:813:3, col:10>
      `-IntegerLiteral 0x56040456e6a0 <col:10> 'int' 0
