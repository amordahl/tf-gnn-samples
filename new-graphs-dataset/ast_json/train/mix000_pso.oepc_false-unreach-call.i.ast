TranslationUnitDecl 0x563f5ca0ff88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x563f5ca10848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x563f5ca10520 '__int128'
|-TypedefDecl 0x563f5ca108b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x563f5ca10540 'unsigned __int128'
|-TypedefDecl 0x563f5ca10bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x563f5ca10990 'struct __NSConstantString_tag'
|   `-Record 0x563f5ca10910 '__NSConstantString_tag'
|-TypedefDecl 0x563f5ca10c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x563f5ca10c20 'char *'
|   `-BuiltinType 0x563f5ca10020 'char'
|-TypedefDecl 0x563f5ca4fb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x563f5ca10f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x563f5ca10d40 'struct __va_list_tag'
|     `-Record 0x563f5ca10cc0 '__va_list_tag'
|-FunctionDecl 0x563f5ca4fc80 <pthread-wmm/mix000_pso.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x563f5ca4fe50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x563f5ca4fd80 <col:31> col:34 'int'
|-FunctionDecl 0x563f5ca4ffc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x563f5ca500f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x563f5ca50238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x563f5ca501a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x563f5ca50468 <col:40, col:99>
|   |-IfStmt 0x563f5ca50438 <col:42, col:88>
|   | |-UnaryOperator 0x563f5ca50318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x563f5ca50300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x563f5ca502e0 <col:47> 'int' lvalue ParmVar 0x563f5ca501a8 'expression' 'int'
|   | `-CompoundStmt 0x563f5ca50420 <col:59, col:88>
|   |   `-LabelStmt 0x563f5ca50408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x563f5ca50398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x563f5ca50380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x563f5ca50330 <col:68> 'void () __attribute__((noreturn))' Function 0x563f5ca500f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x563f5ca50450 <col:89>
|   `-ReturnStmt 0x563f5ca50458 <col:91>
|-FunctionDecl 0x563f5ca504b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x563f5ca50570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x563f5ca508f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563f5ca50628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x563f5ca506a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x563f5ca50728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563f5ca507a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563f5ca509b0 <line:11:22>
|-FunctionDecl 0x563f5ca75f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563f5ca50a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x563f5ca50aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x563f5ca75d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563f5ca75dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563f5ca75fd0 <line:14:22>
|-FunctionDecl 0x563f5ca76280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563f5ca76040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x563f5ca760c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x563f5ca76140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x563f5ca76338 <line:16:22>
|-TypedefDecl 0x563f5ca763a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x563f5ca100e0 'unsigned char'
|-TypedefDecl 0x563f5ca76418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x563f5ca10100 'unsigned short'
|-TypedefDecl 0x563f5ca76488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x563f5ca10120 'unsigned int'
|-TypedefDecl 0x563f5ca764f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-TypedefDecl 0x563f5ca76568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x563f5ca10040 'signed char'
|-TypedefDecl 0x563f5ca765d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x563f5ca100e0 'unsigned char'
|-TypedefDecl 0x563f5ca76648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x563f5ca10060 'short'
|-TypedefDecl 0x563f5ca766b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x563f5ca10100 'unsigned short'
|-TypedefDecl 0x563f5ca76728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x563f5ca10080 'int'
|-TypedefDecl 0x563f5ca76798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x563f5ca10120 'unsigned int'
|-TypedefDecl 0x563f5ca76808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca76878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-TypedefDecl 0x563f5ca768e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca76958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-TypedefDecl 0x563f5ca769c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-TypedefDecl 0x563f5ca76a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x563f5ca10120 'unsigned int'
|-TypedefDecl 0x563f5ca76aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x563f5ca10120 'unsigned int'
|-TypedefDecl 0x563f5ca76b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-TypedefDecl 0x563f5ca76b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-TypedefDecl 0x563f5ca76bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x563f5ca10120 'unsigned int'
|-TypedefDecl 0x563f5ca76c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-TypedefDecl 0x563f5ca76cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca76d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca76dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x563f5ca10080 'int'
|-RecordDecl 0x563f5ca76e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x563f5ca76f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x563f5ca77030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x563f5ca76fd0 'struct __fsid_t' sugar
|   `-RecordType 0x563f5ca76eb0 '__fsid_t'
|     `-Record 0x563f5ca76e30 ''
|-TypedefDecl 0x563f5ca770b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca77128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-TypedefDecl 0x563f5ca77198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-TypedefDecl 0x563f5ca77208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x563f5ca10120 'unsigned int'
|-TypedefDecl 0x563f5ca77278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca772e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x563f5ca10120 'unsigned int'
|-TypedefDecl 0x563f5ca77358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca773c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x563f5ca10080 'int'
|-TypedefDecl 0x563f5ca77438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x563f5ca10080 'int'
|-TypedefDecl 0x563f5ca774a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x563f5ca10080 'int'
|-TypedefDecl 0x563f5ca77518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x563f5ca107a0 'void *'
|   `-BuiltinType 0x563f5ca0ffe0 'void'
|-TypedefDecl 0x563f5ca77588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca775f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca77668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca776d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-TypedefDecl 0x563f5ca77748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-TypedefDecl 0x563f5ca777b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-TypedefDecl 0x563f5ca77828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-TypedefDecl 0x563f5ca77898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca77908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca77978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca779e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-TypedefDecl 0x563f5ca77a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x563f5ca77a40 '__off64_t' sugar
|   |-Typedef 0x563f5ca76d68 '__off64_t'
|   `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca77b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x563f5ca77b30 '__quad_t *'
|   `-TypedefType 0x563f5ca77ad0 '__quad_t' sugar
|     |-Typedef 0x563f5ca768e8 '__quad_t'
|     `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca77be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x563f5ca10c20 'char *'
|   `-BuiltinType 0x563f5ca10020 'char'
|-TypedefDecl 0x563f5ca77c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca77cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x563f5ca10120 'unsigned int'
|-FunctionDecl 0x563f5ca77e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x563f5ca77d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x563f5ca78148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x563f5ca78138 <line:73:3, col:34>
|     `-CallExpr 0x563f5ca780f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x563f5ca780e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563f5ca78070 <col:10> '<builtin fn type>' Function 0x563f5ca77ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x563f5ca78120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x563f5ca78090 <col:29> 'unsigned int' lvalue ParmVar 0x563f5ca77d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x563f5ca77ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x563f5ca77f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x563f5ca77ff0 <col:10> Implicit
| `-ConstAttr 0x563f5ca78048 <col:10> Implicit
|-FunctionDecl 0x563f5ca782a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x563f5ca78198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x563f5ca785b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x563f5ca785a8 <line:78:3, col:34>
|     `-CallExpr 0x563f5ca78568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x563f5ca78550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563f5ca784d8 <col:10> '<builtin fn type>' Function 0x563f5ca78348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x563f5ca78590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x563f5ca784f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x563f5ca78198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x563f5ca78348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x563f5ca783e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x563f5ca78458 <col:10> Implicit
| `-ConstAttr 0x563f5ca784b0 <col:10> Implicit
|-TypedefDecl 0x563f5ca785e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-TypedefDecl 0x563f5ca78678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x563f5ca78640 '__time_t' sugar
|   |-Typedef 0x563f5ca77278 '__time_t'
|   `-BuiltinType 0x563f5ca100a0 'long'
|-RecordDecl 0x563f5ca786d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x563f5ca78788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x563f5ca78818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x563f5ca788a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x563f5ca78870 '__pid_t' sugar
|   |-Typedef 0x563f5ca76dd8 '__pid_t'
|   `-BuiltinType 0x563f5ca10080 'int'
|-RecordDecl 0x563f5ca78900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x563f5ca789c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x563f5ca78a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x563f5ca78ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x563f5ca78b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-RecordDecl 0x563f5ca78b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x563f5ca7ae70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x563f5ca7af20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x563f5ca7aec0 'struct cpu_set_t' sugar
|   `-RecordType 0x563f5ca78c10 'cpu_set_t'
|     `-Record 0x563f5ca78b90 ''
|-FunctionDecl 0x563f5ca7b1f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x563f5ca7afc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563f5ca7b0d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x563f5ca7b2a8 <line:108:19>
|-FunctionDecl 0x563f5ca7b480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x563f5ca7b310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x563f5ca7b528 <col:69>
|-FunctionDecl 0x563f5ca7b6a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x563f5ca7b590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x563f5ca7b748 <col:64>
|-FunctionDecl 0x563f5ca7ba08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x563f5ca7b7b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563f5ca7b8e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563f5ca7bab8 <line:114:22>
|-FunctionDecl 0x563f5ca7be60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x563f5ca7bb20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563f5ca7bc18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x563f5ca7bf10 <col:88>
|-FunctionDecl 0x563f5ca7c1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563f5ca7bf78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563f5ca7bff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x563f5ca7c088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563f5ca7c280 <col:62>
|-FunctionDecl 0x563f5ca7c3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x563f5ca7c2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x563f5ca7c4a0 <col:63>
|-FunctionDecl 0x563f5ca7c5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x563f5ca7c668 <col:47>
|-FunctionDecl 0x563f5ca7c770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x563f5ca7c6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563f5ca7c818 <col:69>
|-FunctionDecl 0x563f5ca7c920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x563f5ca7c888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563f5ca7c9c8 <col:69>
|-FunctionDecl 0x563f5ca7cc88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563f5ca7ca30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563f5ca7cb68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x563f5ca7cd38 <col:88>
|-TypedefDecl 0x563f5ca7cdc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x563f5ca7cd90 '__clock_t' sugar
|   |-Typedef 0x563f5ca770b8 '__clock_t'
|   `-BuiltinType 0x563f5ca100a0 'long'
|-TypedefDecl 0x563f5ca7d7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x563f5ca7ce20 '__clockid_t' sugar
|   |-Typedef 0x563f5ca774a8 '__clockid_t'
|   `-BuiltinType 0x563f5ca10080 'int'
|-TypedefDecl 0x563f5ca7d878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x563f5ca7d840 '__timer_t' sugar
|   |-Typedef 0x563f5ca77518 '__timer_t'
|   `-PointerType 0x563f5ca107a0 'void *'
|     `-BuiltinType 0x563f5ca0ffe0 'void'
|-RecordDecl 0x563f5ca7d8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x563f5ca7d990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x563f5ca7d9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x563f5ca7da60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x563f5ca7dac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x563f5ca7db30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x563f5ca7db98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x563f5ca7dc00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x563f5ca7dc68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x563f5ca7dcd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x563f5ca7dd38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x563f5ca7dda0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x563f5ca7ddf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x563f5ca7deb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x563f5ca7df28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x563f5ca7dfd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x563f5ca7e1a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x563f5ca7e240 <col:45>
|-FunctionDecl 0x563f5ca7e420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x563f5ca7e310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x563f5ca7e4c8 <col:54>
|-FunctionDecl 0x563f5ca7e6c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x563f5ca7e530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x563f5ca7e5a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x563f5ca7e778 <line:158:22>
| `-ConstAttr 0x563f5ca7f410 <col:63>
|-FunctionDecl 0x563f5ca7f610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563f5ca7f508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563f5ca7f6b8 <col:56>
|-FunctionDecl 0x563f5ca7fa60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x563f5ca7f728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x563f5ca7f7a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563f5ca7f820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x563f5ca7f918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x563f5ca7fb20 <col:54>
|-RecordDecl 0x563f5ca7fb78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x563f5ca7fc28 parent 0x563f5ca0ff88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x563f5ca7fe88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x563f5ca7ff28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x563f5ca7ff90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x563f5ca7fff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x563f5ca800e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x563f5ca80208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x563f5ca801b0 'struct __locale_struct *'
|   `-ElaboratedType 0x563f5ca80140 'struct __locale_struct' sugar
|     `-RecordType 0x563f5ca7fc00 'struct __locale_struct'
|       `-Record 0x563f5ca7fb78 '__locale_struct'
|-TypedefDecl 0x563f5ca802b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x563f5ca80280 '__locale_t' sugar
|   |-Typedef 0x563f5ca80208 '__locale_t'
|   `-PointerType 0x563f5ca801b0 'struct __locale_struct *'
|     `-ElaboratedType 0x563f5ca80140 'struct __locale_struct' sugar
|       `-RecordType 0x563f5ca7fc00 'struct __locale_struct'
|         `-Record 0x563f5ca7fb78 '__locale_struct'
|-FunctionDecl 0x563f5ca806b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x563f5ca80328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x563f5ca803a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563f5ca80438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x563f5ca804c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563f5ca80540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x563f5ca80778 <col:40>
|-FunctionDecl 0x563f5ca80968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563f5ca80840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x563f5ca80a10 <col:66>
|-FunctionDecl 0x563f5ca80b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563f5ca80a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x563f5ca80bc8 <col:69>
|-FunctionDecl 0x563f5ca80df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563f5ca80c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563f5ca80cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563f5ca80ea8 <col:52>
|-FunctionDecl 0x563f5ca81050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563f5ca80f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563f5ca80fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563f5ca81100 <col:55>
|-FunctionDecl 0x563f5ca81298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x563f5ca81180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x563f5ca81340 <col:62>
|-FunctionDecl 0x563f5ca81578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x563f5ca813a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x563f5ca81620 <col:60>
|-FunctionDecl 0x563f5ca81848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563f5ca816a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563f5ca81720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x563f5ca818f8 <col:44>
|-FunctionDecl 0x563f5ca81b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563f5ca81960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563f5ca819e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x563f5ca81bb8 <col:49>
|-VarDecl 0x563f5ca81cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x563f5ca81d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x563f5ca81db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x563f5ca81e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x563f5ca81fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x563f5ca82050 <col:42>
|-VarDecl 0x563f5ca820c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x563f5ca82140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x563f5ca822c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x563f5ca821b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x563f5ca82370 <col:57>
|-FunctionDecl 0x563f5ca834f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563f5ca823f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563f5ca83598 <col:56>
|-FunctionDecl 0x563f5ca836a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563f5ca83618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x563f5ca83750 <col:59>
|-FunctionDecl 0x563f5ca83858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x563f5ca837c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x563f5ca83900 <col:48>
| `-ConstAttr 0x563f5ca83958 <col:89>
|-FunctionDecl 0x563f5ca83bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563f5ca83a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x563f5ca83a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x563f5ca83e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563f5ca83ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563f5ca83d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x563f5ca83ec8 <col:88>
|-FunctionDecl 0x563f5ca84060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563f5ca83f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563f5ca83fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x563f5ca84110 <col:88>
|-FunctionDecl 0x563f5ca84328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x563f5ca84178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563f5ca84208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x563f5ca843d8 <line:209:22>
|-FunctionDecl 0x563f5ca84778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563f5ca84440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563f5ca84500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x563f5ca84590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x563f5ca84620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x563f5ca84a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x563f5ca84878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x563f5ca84950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x563f5ca84b28 <col:85>
|-FunctionDecl 0x563f5ca84f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x563f5ca84b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563f5ca84cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x563f5ca84dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x563f5ca84fd0 <col:52>
|-FunctionDecl 0x563f5ca85148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x563f5ca85038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563f5ca851f0 <col:61>
|-FunctionDecl 0x563f5ca85668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x563f5ca85258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563f5ca852d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x563f5ca85408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x563f5ca85510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x563f5ca85728 <col:62>
|-FunctionDecl 0x563f5ca85948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x563f5ca85790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563f5ca85820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x563f5ca859f8 <line:222:22>
|-FunctionDecl 0x563f5ca85af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x563f5ca85a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563f5ca85ba0 <col:65>
|-TypedefDecl 0x563f5ca85c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x563f5ca10140 'unsigned long'
|-RecordDecl 0x563f5ca85c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x563f5ca85db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563f5ca85e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563f5ca85ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x563f5ca85e70 'union pthread_attr_t' sugar
|   `-RecordType 0x563f5ca85cf0 'union pthread_attr_t'
|     `-Record 0x563f5ca85c68 'pthread_attr_t'
|-RecordDecl 0x563f5ca85f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x563f5ca86098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x563f5ca86110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x563f5ca861c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x563f5ca86160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x563f5ca85fa0 'struct __pthread_internal_list'
|     `-Record 0x563f5ca85f20 '__pthread_internal_list'
|-RecordDecl 0x563f5ca86230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x563f5ca862d8 parent 0x563f5ca0ff88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x563f5ca863b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563f5ca86418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x563f5ca86480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x563f5ca8a530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x563f5ca8a598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x563f5ca8a600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x563f5ca8a688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x563f5ca8a740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x563f5ca8a830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x563f5ca8a898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563f5ca8aa20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x563f5ca8a9c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x563f5ca862b0 'pthread_mutex_t'
|     `-Record 0x563f5ca86230 ''
|-RecordDecl 0x563f5ca8aa90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x563f5ca8abd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563f5ca8ac38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563f5ca8acf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x563f5ca8ac90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x563f5ca8ab10 'pthread_mutexattr_t'
|     `-Record 0x563f5ca8aa90 ''
|-RecordDecl 0x563f5ca8ad60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x563f5ca8ae08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x563f5ca8aed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563f5ca8af38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x563f5ca8afa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x563f5ca8b008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x563f5ca8b070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x563f5ca8b0d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x563f5ca8b140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x563f5ca8b1a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x563f5ca8b260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix000_pso.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix000_pso.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x563f5ca8b350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x563f5ca8b3b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x563f5ca8b540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x563f5ca8b490 'union pthread_cond_t' sugar
|   `-RecordType 0x563f5ca8ade0 'pthread_cond_t'
|     `-Record 0x563f5ca8ad60 ''
|-RecordDecl 0x563f5ca8b5b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x563f5ca8b6b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563f5ca8b718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563f5ca8b7d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x563f5ca8b770 'union pthread_condattr_t' sugar
|   `-RecordType 0x563f5ca8b630 'pthread_condattr_t'
|     `-Record 0x563f5ca8b5b0 ''
|-TypedefDecl 0x563f5ca8b858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x563f5ca10120 'unsigned int'
|-TypedefDecl 0x563f5ca8b8c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x563f5ca10080 'int'
|-RecordDecl 0x563f5ca8b920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x563f5ca8b9c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x563f5ca8ba90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563f5ca8baf8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x563f5ca8bb60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x563f5ca8bbc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x563f5ca8bc30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x563f5ca8bc98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x563f5ca8bd00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x563f5ca8bd68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x563f5ca8bdd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x563f5ca8be38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x563f5ca8bea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x563f5ca8bf50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix000_pso.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix000_pso.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x563f5ca8bff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563f5ca8c060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563f5ca8c1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x563f5ca8c150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x563f5ca8b9a0 'pthread_rwlock_t'
|     `-Record 0x563f5ca8b920 ''
|-RecordDecl 0x563f5ca8c220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x563f5ca8c360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x563f5ca8c3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563f5ca8c480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x563f5ca8c420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x563f5ca8c2a0 'pthread_rwlockattr_t'
|     `-Record 0x563f5ca8c220 ''
|-TypedefDecl 0x563f5ca8e560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x563f5ca10084 'volatile int' volatile
|   `-BuiltinType 0x563f5ca10080 'int'
|-RecordDecl 0x563f5ca8e5b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x563f5ca8e700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x563f5ca8e768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563f5ca8e820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x563f5ca8e7c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x563f5ca8e640 'pthread_barrier_t'
|     `-Record 0x563f5ca8e5b8 ''
|-RecordDecl 0x563f5ca8e890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x563f5ca8e990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563f5ca8e9f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563f5ca8eab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x563f5ca8ea50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x563f5ca8e910 'pthread_barrierattr_t'
|     `-Record 0x563f5ca8e890 ''
|-TypedefDecl 0x563f5ca8ebc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x563f5ca8eb60 'long [8]' 8 
|   `-BuiltinType 0x563f5ca100a0 'long'
|-EnumDecl 0x563f5ca8ec20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x563f5ca8ece8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x563f5ca8ed38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x563f5ca8ed88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x563f5ca8ee58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x563f5ca8eea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x563f5ca8eef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x563f5ca8ef48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x563f5ca8efd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x563f5ca8efb8 <col:26> 'int'
| |   `-DeclRefExpr 0x563f5ca8ef98 <col:26> 'int' EnumConstant 0x563f5ca8ee58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x563f5ca8f058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x563f5ca8f040 <col:29> 'int'
| |   `-DeclRefExpr 0x563f5ca8f020 <col:29> 'int' EnumConstant 0x563f5ca8eea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x563f5ca8f0e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x563f5ca8f0c8 <col:30> 'int'
| |   `-DeclRefExpr 0x563f5ca8f0a8 <col:30> 'int' EnumConstant 0x563f5ca8eef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x563f5ca8f168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x563f5ca8f150 <col:27> 'int'
|     `-DeclRefExpr 0x563f5ca8f130 <col:27> 'int' EnumConstant 0x563f5ca8efd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x563f5ca8f1b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x563f5ca8f288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x563f5ca8f310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x563f5ca8f2f8 <col:30> 'int'
| |   `-DeclRefExpr 0x563f5ca8f2d8 <col:30> 'int' EnumConstant 0x563f5ca8f288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x563f5ca8f360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x563f5ca8f3e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x563f5ca8f3d0 <col:29> 'int'
|     `-DeclRefExpr 0x563f5ca8f3b0 <col:29> 'int' EnumConstant 0x563f5ca8f360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x563f5ca8f438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x563f5ca8f508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x563f5ca8f570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x563f5ca8f5c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x563f5ca8f610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x563f5ca8f6d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x563f5ca8f728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x563f5ca8f778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x563f5ca8f800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x563f5ca8f7e8 <col:31> 'int'
|     `-DeclRefExpr 0x563f5ca8f7c8 <col:31> 'int' EnumConstant 0x563f5ca8f6d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x563f5ca8f850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x563f5ca8f918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x563f5ca8f968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x563f5ca8f9b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x563f5ca8fa88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x563f5ca8fad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x563f5ca8fb28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x563f5ca8fbf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x563f5ca8fc48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x563f5ca8fc98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x563f5ca8fed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x563f5ca8ff40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x563f5ca8ffa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x563f5ca900c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x563f5ca90118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x563f5ca901e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x563f5ca90238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x563f5ca90288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x563f5ca90358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x563f5ca903a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x563f5ca909d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x563f5ca904a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x563f5ca905c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563f5ca907c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x563f5ca90840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x563f5ca90a98 <col:47>
| |-NonNullAttr 0x563f5ca90af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x563f5ca90b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x563f5ca90c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x563f5ca90b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x563f5ca90ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x563f5ca90d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x563f5ca90d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x563f5ca91078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x563f5ca90f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x563f5ca91120 <col:60>
|-FunctionDecl 0x563f5ca91270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x563f5ca91310 <col:54>
| `-ConstAttr 0x563f5ca91368 <col:95>
|-FunctionDecl 0x563f5ca91da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x563f5ca913a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563f5ca91418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x563f5ca91e50 <line:395:19>
| `-ConstAttr 0x563f5ca91ea8 <col:60>
|-FunctionDecl 0x563f5ca92078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563f5ca91f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563f5ca92120 <col:71>
| `-NonNullAttr 0x563f5ca92178 <col:112, col:126> 1
|-FunctionDecl 0x563f5ca92280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563f5ca921c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563f5ca92328 <line:398:22>
| `-NonNullAttr 0x563f5ca92380 <col:63, col:77> 1
|-FunctionDecl 0x563f5ca925a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x563f5ca923c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563f5ca92448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x563f5ca92658 <line:401:22>
| `-NonNullAttr 0x563f5ca926b0 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5ca928b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563f5ca926f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563f5ca92778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x563f5ca92968 <line:404:22>
| `-NonNullAttr 0x563f5ca929c0 <col:63, col:77> 1
|-FunctionDecl 0x563f5ca92c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x563f5ca92a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563f5ca92ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x563f5ca92cc8 <line:407:22>
| `-NonNullAttr 0x563f5ca92d20 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5ca93f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563f5ca93dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563f5ca93e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563f5ca94028 <line:410:22>
| `-NonNullAttr 0x563f5ca94080 <col:63, col:77> 1
|-FunctionDecl 0x563f5ca942b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563f5ca940c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563f5ca94158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563f5ca94368 <line:413:22>
| `-NonNullAttr 0x563f5ca943c0 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5ca945f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563f5ca94408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x563f5ca94498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x563f5ca946a8 <col:37>
| `-NonNullAttr 0x563f5ca94700 <col:78, col:95> 1 2
|-FunctionDecl 0x563f5ca948e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563f5ca94748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563f5ca947c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x563f5ca94998 <line:419:22>
| `-NonNullAttr 0x563f5ca949f0 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5ca94b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563f5ca94a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563f5ca94ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x563f5ca94c28 <line:421:22>
| `-NonNullAttr 0x563f5ca94c80 <col:63, col:77> 1
|-FunctionDecl 0x563f5ca95e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563f5ca94cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563f5ca94d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x563f5ca95f08 <line:424:22>
| `-NonNullAttr 0x563f5ca95f60 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5ca960e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563f5ca95fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563f5ca96028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x563f5ca96198 <line:427:22>
| `-NonNullAttr 0x563f5ca961f0 <col:63, col:77> 1
|-FunctionDecl 0x563f5ca96398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563f5ca96238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563f5ca962b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x563f5ca96448 <line:430:22>
| `-NonNullAttr 0x563f5ca964a0 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5ca96628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563f5ca964e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563f5ca96568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x563f5ca966d8 <line:432:22>
| `-NonNullAttr 0x563f5ca96730 <col:63, col:77> 1
|-FunctionDecl 0x563f5ca96958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x563f5ca96778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563f5ca967f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x563f5ca96a08 <line:435:22>
| |-NonNullAttr 0x563f5ca96a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x563f5ca96a98 <col:100> "" ""
|-FunctionDecl 0x563f5ca96ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x563f5ca96ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563f5ca96b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x563f5ca96d58 <line:438:22>
| |-NonNullAttr 0x563f5ca96db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x563f5ca96df8 <col:97> "" ""
|-FunctionDecl 0x563f5ca96fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563f5ca96e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563f5ca96ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563f5ca97098 <line:441:22>
| `-NonNullAttr 0x563f5ca970f0 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5ca97270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563f5ca97138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563f5ca971b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563f5ca97320 <line:444:22>
| `-NonNullAttr 0x563f5ca97378 <col:63, col:77> 1
|-FunctionDecl 0x563f5ca97668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563f5ca973c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563f5ca97448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x563f5ca974c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563f5ca97720 <line:448:22>
| `-NonNullAttr 0x563f5ca97778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x563f5ca97a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x563f5ca977d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563f5ca97850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x563f5ca978c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563f5ca97ae0 <col:43>
| `-NonNullAttr 0x563f5ca97b38 <col:84, col:98> 1
|-FunctionDecl 0x563f5ca97e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563f5ca97b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563f5ca97c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x563f5ca97c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x563f5ca97ef8 <line:453:22>
| `-NonNullAttr 0x563f5ca97f50 <col:63, col:77> 3
|-FunctionDecl 0x563f5ca98228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563f5ca97f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563f5ca98018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x563f5ca980a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563f5ca982e0 <line:457:22>
| `-NonNullAttr 0x563f5ca98338 <col:63, col:80> 2 3
|-FunctionDecl 0x563f5ca98528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x563f5ca98388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563f5ca98408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x563f5ca985d8 <line:459:22>
|-FunctionDecl 0x563f5ca989a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x563f5ca986a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x563f5ca98840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x563f5ca98a58 <col:52, col:69> 1 2
|-FunctionDecl 0x563f5ca98c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x563f5ca98ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x563f5ca98b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x563f5ca98e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x563f5ca98cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x563f5ca98d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x563f5ca98f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x563f5ca98ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x563f5ca990a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x563f5ca99148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x563f5ca991f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x563f5ca992e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x563f5ca99350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x563f5ca99520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix000_pso.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x563f5ca99618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x563f5ca996d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x563f5ca99670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x563f5ca991d0 '__pthread_unwind_buf_t'
| |   `-Record 0x563f5ca99148 ''
| `-AlignedAttr 0x563f5ca99728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x563f5ca997a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x563f5ca99900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x563f5ca99968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x563f5ca999d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x563f5ca99a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x563f5ca99c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563f5ca99b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563f5ca99e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563f5ca99cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563f5ca99fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563f5ca99ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x563f5ca9a088 <line:488:22>
|-RecordDecl 0x563f5ca9a0e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x563f5ca9a3f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x563f5ca9a258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x563f5ca9a2d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x563f5ca9a4a8 <col:86>
| `-ReturnsTwiceAttr 0x563f5ca9a500 <col:12> Implicit
|-FunctionDecl 0x563f5ca9a828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563f5ca9a5d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x563f5ca9a6e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x563f5ca9a8d8 <line:494:22>
| `-NonNullAttr 0x563f5ca9a930 <col:63, col:77> 1
|-FunctionDecl 0x563f5ca9aaa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563f5ca9a978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563f5ca9ab50 <line:496:22>
| `-NonNullAttr 0x563f5ca9aba8 <col:63, col:77> 1
|-FunctionDecl 0x563f5ca9acb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563f5ca9abf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563f5ca9ad58 <line:498:22>
| `-NonNullAttr 0x563f5ca9adb0 <col:52, col:66> 1
|-FunctionDecl 0x563f5ca9aee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563f5ca9ae30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563f5ca9af90 <line:500:22>
| `-NonNullAttr 0x563f5ca9afe8 <col:52, col:66> 1
|-FunctionDecl 0x563f5ca9b228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563f5ca9b038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563f5ca9b0c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563f5ca9b2d8 <col:36>
| `-NonNullAttr 0x563f5ca9b330 <col:66, col:83> 1 2
|-FunctionDecl 0x563f5ca9b430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563f5ca9b378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563f5ca9b4d8 <line:505:22>
| `-NonNullAttr 0x563f5ca9b530 <col:52, col:66> 1
|-FunctionDecl 0x563f5ca9b7c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563f5ca9b5e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563f5ca9b660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563f5ca9b878 <line:509:22>
| `-NonNullAttr 0x563f5ca9b8d0 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5ca9bb98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x563f5ca9b918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563f5ca9b998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x563f5ca9ba18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x563f5ca9bc50 <line:513:22>
| `-NonNullAttr 0x563f5ca9bca8 <col:63, col:80> 1 3
|-FunctionDecl 0x563f5ca9be40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563f5ca9bcf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563f5ca9bee8 <line:515:22>
| `-NonNullAttr 0x563f5ca9bf40 <col:63, col:77> 1
|-FunctionDecl 0x563f5ca9c128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563f5ca9bff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563f5ca9c1d0 <line:517:22>
| `-NonNullAttr 0x563f5ca9c228 <col:63, col:77> 1
|-FunctionDecl 0x563f5ca9c330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563f5ca9c278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563f5ca9c3d8 <line:519:22>
| `-NonNullAttr 0x563f5ca9c430 <col:63, col:77> 1
|-FunctionDecl 0x563f5ca9c658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563f5ca9c478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563f5ca9c4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x563f5ca9c708 <line:523:22>
| `-NonNullAttr 0x563f5ca9c760 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5ca9c968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563f5ca9c7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563f5ca9c828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x563f5ca9ca18 <line:526:22>
| `-NonNullAttr 0x563f5ca9ca70 <col:63, col:77> 1
|-FunctionDecl 0x563f5ca9cc18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563f5ca9cab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563f5ca9cb38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x563f5ca9ccc8 <line:529:22>
| `-NonNullAttr 0x563f5ca9cd20 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5ca9df20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563f5ca9cd68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563f5ca9de60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x563f5ca9dfd0 <line:531:22>
| `-NonNullAttr 0x563f5ca9e028 <col:63, col:77> 1
|-FunctionDecl 0x563f5ca9e1d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563f5ca9e078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563f5ca9e0f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x563f5ca9e288 <line:535:22>
| `-NonNullAttr 0x563f5ca9e2e0 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5ca9e468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563f5ca9e328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563f5ca9e3a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x563f5ca9e518 <line:538:22>
| `-NonNullAttr 0x563f5ca9e570 <col:63, col:77> 1
|-FunctionDecl 0x563f5ca9e718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563f5ca9e5b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563f5ca9e638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563f5ca9e7c8 <line:542:22>
| `-NonNullAttr 0x563f5ca9e820 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5ca9e9a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563f5ca9e868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563f5ca9e8e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x563f5ca9ea58 <line:545:22>
| `-NonNullAttr 0x563f5ca9eab0 <col:63, col:77> 1
|-FunctionDecl 0x563f5ca9ec98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x563f5ca9eaf8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x563f5ca9eb78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x563f5ca9ed48 <line:548:22>
| `-NonNullAttr 0x563f5ca9eda0 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5ca9ff58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563f5ca9ede8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563f5ca9fe98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x563f5caa0008 <line:551:22>
| `-NonNullAttr 0x563f5caa0060 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa0398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x563f5caa0140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563f5caa0250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x563f5caa0448 <col:29>
| `-NonNullAttr 0x563f5caa04a0 <col:70, col:84> 1
|-FunctionDecl 0x563f5caa0618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563f5caa04e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563f5caa06c0 <line:556:22>
| `-NonNullAttr 0x563f5caa0718 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa0820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563f5caa0768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563f5caa08c8 <line:558:22>
| `-NonNullAttr 0x563f5caa0920 <col:52, col:66> 1
|-FunctionDecl 0x563f5caa0a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563f5caa0968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563f5caa0ac8 <line:560:19>
| `-NonNullAttr 0x563f5caa0b20 <col:49, col:63> 1
|-FunctionDecl 0x563f5caa0d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563f5caa0b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563f5caa0bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563f5caa0e08 <col:39>
| `-NonNullAttr 0x563f5caa0e90 <col:69, col:86> 1 2
|-FunctionDecl 0x563f5caa0f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563f5caa0ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563f5caa1038 <line:565:22>
| `-NonNullAttr 0x563f5caa1090 <col:52, col:66> 1
|-FunctionDecl 0x563f5caa1190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563f5caa10d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563f5caa1238 <line:567:22>
| `-NonNullAttr 0x563f5caa1290 <col:52, col:66> 1
|-FunctionDecl 0x563f5caa1448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563f5caa12d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563f5caa1368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563f5caa14f8 <col:39>
| `-NonNullAttr 0x563f5caa1550 <col:69, col:86> 1 2
|-FunctionDecl 0x563f5caa1650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563f5caa1598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563f5caa16f8 <line:572:22>
| `-NonNullAttr 0x563f5caa1750 <col:52, col:66> 1
|-FunctionDecl 0x563f5caa1938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563f5caa1800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563f5caa19e0 <line:574:22>
| `-NonNullAttr 0x563f5caa1a38 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa1b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563f5caa1a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563f5caa1be8 <line:576:22>
| `-NonNullAttr 0x563f5caa1c40 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa1ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563f5caa1c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563f5caa1d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x563f5caa1f50 <line:580:22>
| `-NonNullAttr 0x563f5caa1fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5caa21b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563f5caa1ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563f5caa2078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x563f5caa2268 <line:583:22>
| `-NonNullAttr 0x563f5caa22c0 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa2468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563f5caa2308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563f5caa2388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x563f5caa2518 <line:587:22>
| `-NonNullAttr 0x563f5caa2570 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5caa26f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563f5caa25b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563f5caa2638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x563f5caa27a8 <col:36>
| `-NonNullAttr 0x563f5caa2800 <col:77, col:91> 1
|-FunctionDecl 0x563f5caa2b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x563f5caa28e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563f5caa29f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x563f5caa2be8 <line:592:22>
| `-NonNullAttr 0x563f5caa2c40 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa2db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563f5caa2c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563f5caa2e60 <line:594:22>
| `-NonNullAttr 0x563f5caa2ee0 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa2fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563f5caa2f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563f5caa3088 <line:596:22>
| `-NonNullAttr 0x563f5caa30e0 <col:52, col:66> 1
|-FunctionDecl 0x563f5caa31e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563f5caa3128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563f5caa3288 <line:598:22>
| `-NonNullAttr 0x563f5caa32e0 <col:52, col:66> 1
|-FunctionDecl 0x563f5caa3508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x563f5caa3328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563f5caa33a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x563f5caa35b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x563f5caa38e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563f5caa3638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563f5caa36b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563f5caa3740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x563f5caa39a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x563f5caa3bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563f5caa3a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563f5caa3c60 <line:607:22>
| `-NonNullAttr 0x563f5caa3cb8 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa3dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563f5caa3d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563f5caa3e68 <line:609:22>
| `-NonNullAttr 0x563f5caa3ef0 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa4118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563f5caa3f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563f5caa3fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x563f5caa41c8 <line:613:22>
| `-NonNullAttr 0x563f5caa4220 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5caa4428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x563f5caa4268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563f5caa42e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x563f5caa44d8 <col:37>
| `-NonNullAttr 0x563f5caa4530 <col:78, col:92> 1
|-FunctionDecl 0x563f5caa4748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x563f5caa4578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563f5caa4620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x563f5caa47f8 <line:619:22>
| `-NonNullAttr 0x563f5caa4850 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5caa4a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x563f5caa4898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563f5caa4910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x563f5caa4ac8 <line:622:22>
| `-NonNullAttr 0x563f5caa4b20 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa4dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x563f5caa4c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x563f5caa4c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x563f5caa4e78 <line:624:22>
| `-NonNullAttr 0x563f5caa4f00 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa5078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563f5caa4f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563f5caa5120 <line:626:22>
| `-NonNullAttr 0x563f5caa5178 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa5280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563f5caa51c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563f5caa5328 <line:628:22>
| `-NonNullAttr 0x563f5caa5380 <col:52, col:66> 1
|-FunctionDecl 0x563f5caa5480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563f5caa53c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563f5caa5528 <line:630:22>
| `-NonNullAttr 0x563f5caa5580 <col:52, col:66> 1
|-FunctionDecl 0x563f5caa5680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563f5caa55c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563f5caa5728 <line:632:22>
| `-NonNullAttr 0x563f5caa5780 <col:52, col:66> 1
|-FunctionDecl 0x563f5caa5b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x563f5caa5860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x563f5caa5970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563f5caa59f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x563f5caa5c10 <line:636:22>
| `-NonNullAttr 0x563f5caa5c68 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa5de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563f5caa5cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563f5caa5e90 <line:638:22>
| `-NonNullAttr 0x563f5caa5f10 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa6010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563f5caa5f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563f5caa60b8 <line:640:22>
| `-NonNullAttr 0x563f5caa6110 <col:52, col:66> 1
|-FunctionDecl 0x563f5caa62f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563f5caa61c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563f5caa63a0 <line:642:22>
| `-NonNullAttr 0x563f5caa63f8 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa6500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563f5caa6448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563f5caa65a8 <line:644:22>
| `-NonNullAttr 0x563f5caa6600 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa6828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563f5caa6648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563f5caa66c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x563f5caa68d8 <line:648:22>
| `-NonNullAttr 0x563f5caa6930 <col:63, col:80> 1 2
|-FunctionDecl 0x563f5caa6b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x563f5caa6978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x563f5caa69f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x563f5caa6be8 <line:651:22>
| `-NonNullAttr 0x563f5caa6c40 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa6fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x563f5caa6d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x563f5caa6e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x563f5caa7058 <line:654:22>
| `-NonNullAttr 0x563f5caa70b0 <col:63, col:77> 1
|-FunctionDecl 0x563f5caa7208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x563f5caa70f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563f5caa72b0 <col:69>
|-FunctionDecl 0x563f5caa7428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x563f5caa7318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563f5caa74d0 <col:72>
|-FunctionDecl 0x563f5caa7708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x563f5caa7538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x563f5caa75e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x563f5caa77b8 <col:44>
|-FunctionDecl 0x563f5caa79d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x563f5caa7820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563f5caa7898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x563f5caa7a88 <line:661:22>
| `-NonNullAttr 0x563f5caa7ae0 <col:63, col:77> 2
|-FunctionDecl 0x563f5caa8f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x563f5caa7bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x563f5caa7cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x563f5caa7de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x563f5caa9008 <col:47>
|-FunctionDecl 0x563f5caa9110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x563f5caa9078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563f5caa9268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x563f5caa91d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563f5caa9330 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x563f5caa93f0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x563f5caa94b0 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x563f5caa9568 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x563f5caa95e8 prev 0x563f5caa9568 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x563f5caa9650 <col:24> 'int' 0
|-VarDecl 0x563f5caa9688 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x563f5caa9708 prev 0x563f5caa9688 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x563f5caa9770 <col:27> 'int' 0
|-VarDecl 0x563f5caa97a8 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x563f5caa9828 prev 0x563f5caa97a8 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x563f5caa9890 <col:27> 'int' 0
|-VarDecl 0x563f5caa98c8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x563f5caa9948 prev 0x563f5caa98c8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x563f5caa99b0 <col:27> 'int' 0
|-VarDecl 0x563f5caa99e8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x563f5caa9a68 prev 0x563f5caa99e8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x563f5caa9ad0 <col:27> 'int' 0
|-VarDecl 0x563f5caa9b00 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x563f5caa9b78 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x563f5caa9bf8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x563f5caa9c78 prev 0x563f5caa9bf8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x563f5caa9ce0 <col:9> 'int' 0
|-VarDecl 0x563f5caa9d18 <line:685:1, col:5> col:5 used y 'int'
|-VarDecl 0x563f5caa9d98 prev 0x563f5caa9d18 <line:686:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x563f5caa9e00 <col:9> 'int' 0
|-VarDecl 0x563f5caa9e30 <line:687:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x563f5caa9f20 <line:688:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x563f5caa9f98 <line:689:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x563f5caaa010 <line:690:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x563f5caaa088 <line:691:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x563f5caaa100 <line:692:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x563f5caaa178 <line:693:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x563f5caaa1f0 <line:694:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x563f5caaa268 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x563f5caaa2e8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x563f5caaa368 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x563f5caaa3e0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x563f5caaa460 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x563f5caaa4d8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x563f5caaa550 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x563f5caaa5c8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x563f5caaa6e0 prev 0x563f5caa9110 <line:703:1, line:746:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x563f5caaa648 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563f5caae998 <line:704:1, line:746:1>
|   |-CallExpr 0x563f5caaa7f8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563f5caaa7e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5caaa788 <col:3> 'void ()' Function 0x563f5ca504b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563f5caaa870 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563f5caaa818 <col:3> 'int' lvalue Var 0x563f5caaa460 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x563f5caaa858 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f5caaa838 <col:15> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x563f5caaa8d0 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563f5caaa890 <col:3> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x563f5caaa8b0 <col:15> 'int' 1
|   |-BinaryOperator 0x563f5caaa948 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caaa8f0 <col:3> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563f5caaa930 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f5caaa910 <col:20> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563f5caaa9e0 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caaa968 <col:3> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x563f5caaa9b8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563f5caaa988 <col:27> 'int' 1
|   |-CallExpr 0x563f5caaab68 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x563f5caaab50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563f5caaaa00 <col:3> 'void (int)' Function 0x563f5ca50238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x563f5caaab00 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x563f5caaaae0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x563f5caaaac0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x563f5caaaa78 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x563f5caaaa60 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x563f5caaaa20 <col:23> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x563f5caaaaa8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x563f5caaaa90 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x563f5caaaa40 <col:41> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563f5caaabe8 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caaab90 <col:3> '_Bool' lvalue Var 0x563f5caaa100 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x563f5caaabd0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f5caaabb0 <col:20> '_Bool' lvalue Var 0x563f5caa9f98 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x563f5caaac60 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caaac08 <col:3> '_Bool' lvalue Var 0x563f5caaa178 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563f5caaac48 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f5caaac28 <col:20> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563f5caaacd8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caaac80 <col:3> '_Bool' lvalue Var 0x563f5caaa1f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563f5caaacc0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f5caaaca0 <col:20> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563f5caaad70 <line:714:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caaacf8 <col:3> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x563f5caaad48 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563f5caaad18 <col:27> 'int' 1
|   |-CallExpr 0x563f5caaadc8 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563f5caaadb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5caaad90 <col:3> 'void ()' Function 0x563f5ca50570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563f5caaae20 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563f5caaae08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5caaade8 <col:3> 'void ()' Function 0x563f5ca504b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563f5caaaee8 <line:717:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caaae40 <col:3> '_Bool' lvalue Var 0x563f5caaa550 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x563f5caaaec8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x563f5caaaeb0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x563f5caaae60 <col:19> '_Bool (void)' Function 0x563f5ca4fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x563f5caaafa8 <line:718:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caaaf30 <col:3> '_Bool' lvalue Var 0x563f5caaa5c8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x563f5caaaf88 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x563f5caaaf70 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x563f5caaaf50 <col:19> '_Bool (void)' Function 0x563f5ca4fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x563f5caab020 <line:719:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caaafc8 <col:3> '_Bool' lvalue Var 0x563f5caa9e30 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x563f5caab008 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f5caaafe8 <col:21> '_Bool' lvalue Var 0x563f5caaa5c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x563f5caab098 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563f5caab040 <col:3> 'int' lvalue Var 0x563f5caa9f20 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x563f5caab080 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f5caab060 <col:15> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
|   |-BinaryOperator 0x563f5caab4d0 <line:721:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x563f5caab0b8 <col:3> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
|   | `-ConditionalOperator 0x563f5caab4a0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x563f5caab2c8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x563f5caab1e8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x563f5caab110 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x563f5caab0f8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x563f5caab0d8 <col:8> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x563f5caab1c8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x563f5caab160 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x563f5caab148 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x563f5caab128 <col:27> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x563f5caab1b0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x563f5caab198 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x563f5caab178 <col:46> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x563f5caab2a8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x563f5caab240 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x563f5caab228 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x563f5caab208 <col:65> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x563f5caab290 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x563f5caab278 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x563f5caab258 <col:84> '_Bool' lvalue Var 0x563f5caaa178 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x563f5caab488 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563f5caab2e8 <col:101> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
|   |   `-ParenExpr 0x563f5caab468 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x563f5caab438 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x563f5caab3a8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563f5caab360 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563f5caab348 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563f5caab308 <col:106> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563f5caab390 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563f5caab378 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563f5caab328 <col:124> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563f5caab408 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563f5caab3c8 <col:141> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x563f5caab420 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563f5caab3e8 <col:153> 'int' lvalue Var 0x563f5caaa460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x563f5caab9e0 <line:722:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563f5caab4f0 <col:3> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x563f5caab9b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563f5caab980 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563f5caab968 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563f5caab510 <col:15> '_Bool' lvalue Var 0x563f5caaa5c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563f5caab998 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563f5caab530 <col:31> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x563f5caab948 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563f5caab918 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563f5caab740 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563f5caab660 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563f5caab588 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563f5caab570 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563f5caab550 <col:45> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563f5caab640 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563f5caab5d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563f5caab5c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563f5caab5a0 <col:64> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x563f5caab628 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563f5caab610 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563f5caab5f0 <col:83> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563f5caab720 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563f5caab6b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563f5caab6a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563f5caab680 <col:102> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x563f5caab708 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563f5caab6f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563f5caab6d0 <col:121> '_Bool' lvalue Var 0x563f5caaa178 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563f5caab900 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563f5caab760 <col:138> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x563f5caab8e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563f5caab8b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563f5caab820 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563f5caab7d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563f5caab7c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563f5caab780 <col:151> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563f5caab808 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563f5caab7f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563f5caab7a0 <col:169> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x563f5caab880 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563f5caab840 <col:186> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x563f5caab898 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563f5caab860 <col:198> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x563f5caabef0 <line:723:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563f5caaba00 <col:3> 'int' lvalue Var 0x563f5caaa460 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x563f5caabec0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563f5caabe90 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563f5caabe78 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563f5caaba20 <col:15> '_Bool' lvalue Var 0x563f5caaa5c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563f5caabea8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563f5caaba40 <col:31> 'int' lvalue Var 0x563f5caaa460 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x563f5caabe58 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563f5caabe28 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563f5caabc50 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563f5caabb70 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563f5caaba98 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563f5caaba80 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563f5caaba60 <col:45> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563f5caabb50 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563f5caabae8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563f5caabad0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563f5caabab0 <col:64> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x563f5caabb38 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563f5caabb20 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563f5caabb00 <col:83> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563f5caabc30 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563f5caabbc8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563f5caabbb0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563f5caabb90 <col:102> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x563f5caabc18 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563f5caabc00 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563f5caabbe0 <col:121> '_Bool' lvalue Var 0x563f5caaa178 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563f5caabe10 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563f5caabc70 <col:138> 'int' lvalue Var 0x563f5caaa460 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x563f5caabdf0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563f5caabdc0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563f5caabd30 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563f5caabce8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563f5caabcd0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563f5caabc90 <col:151> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563f5caabd18 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563f5caabd00 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563f5caabcb0 <col:169> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x563f5caabd90 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563f5caabd50 <col:186> 'int' lvalue Var 0x563f5caaa460 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x563f5caabda8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563f5caabd70 <col:198> 'int' lvalue Var 0x563f5caaa460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x563f5caac4a8 <line:724:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caabf10 <col:3> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563f5caac490 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563f5caac460 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563f5caac418 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563f5caac400 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563f5caabf40 <col:20> '_Bool' lvalue Var 0x563f5caaa5c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563f5caac448 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563f5caac430 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563f5caabf60 <col:36> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x563f5caac3e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563f5caac3b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563f5caac170 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563f5caac090 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563f5caabfb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563f5caabfa0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563f5caabf80 <col:55> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563f5caac070 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563f5caac008 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563f5caabff0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563f5caabfd0 <col:74> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x563f5caac058 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563f5caac040 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563f5caac020 <col:93> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563f5caac150 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563f5caac0e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563f5caac0d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563f5caac0b0 <col:112> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x563f5caac138 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563f5caac120 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563f5caac100 <col:131> '_Bool' lvalue Var 0x563f5caaa178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x563f5caac398 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563f5caac380 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563f5caac190 <col:148> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x563f5caac360 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563f5caac330 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563f5caac250 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563f5caac208 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563f5caac1f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563f5caac1b0 <col:166> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563f5caac238 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563f5caac220 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563f5caac1d0 <col:184> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x563f5caac2e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563f5caac2a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563f5caac270 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563f5caac318 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563f5caac300 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563f5caac2c8 <col:212> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563f5caaca70 <line:725:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caac4c8 <col:3> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563f5caaca58 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563f5caaca28 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563f5caac9e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563f5caac9c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563f5caac4e8 <col:20> '_Bool' lvalue Var 0x563f5caaa5c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563f5caaca10 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563f5caac9f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563f5caac508 <col:36> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x563f5caac9a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563f5caac978 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563f5caac718 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563f5caac638 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563f5caac560 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563f5caac548 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563f5caac528 <col:55> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563f5caac618 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563f5caac5b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563f5caac598 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563f5caac578 <col:74> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x563f5caac600 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563f5caac5e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563f5caac5c8 <col:93> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563f5caac6f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563f5caac690 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563f5caac678 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563f5caac658 <col:112> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x563f5caac6e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563f5caac6c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563f5caac6a8 <col:131> '_Bool' lvalue Var 0x563f5caaa178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x563f5caac960 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563f5caac948 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563f5caac738 <col:148> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x563f5caac928 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563f5caac8f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563f5caac7f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563f5caac7b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563f5caac798 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563f5caac758 <col:166> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563f5caac7e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563f5caac7c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563f5caac778 <col:184> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x563f5caac8c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563f5caac848 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563f5caac818 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563f5caac8e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563f5caac8a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563f5caac870 <col:219> 'int' 0
|   |-BinaryOperator 0x563f5caad048 <line:726:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caaca90 <col:3> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563f5caad030 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563f5caad000 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563f5caacfb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563f5caacfa0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563f5caacab0 <col:20> '_Bool' lvalue Var 0x563f5caaa5c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563f5caacfe8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563f5caacfd0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563f5caacad0 <col:36> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x563f5caacf80 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563f5caacf50 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563f5caacce0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563f5caacc00 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563f5caacb28 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563f5caacb10 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563f5caacaf0 <col:55> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563f5caacbe0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563f5caacb78 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563f5caacb60 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563f5caacb40 <col:74> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x563f5caacbc8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563f5caacbb0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563f5caacb90 <col:93> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563f5caaccc0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563f5caacc58 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563f5caacc40 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563f5caacc20 <col:112> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x563f5caacca8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563f5caacc90 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563f5caacc70 <col:131> '_Bool' lvalue Var 0x563f5caaa178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x563f5caacf08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563f5caacef0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563f5caacd00 <col:148> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x563f5caaced0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563f5caacea0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563f5caacdc0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563f5caacd78 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563f5caacd60 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563f5caacd20 <col:166> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563f5caacda8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563f5caacd90 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563f5caacd40 <col:184> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x563f5caace58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563f5caace10 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563f5caacde0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563f5caace88 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563f5caace70 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563f5caace38 <col:212> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563f5caad610 <line:727:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caad068 <col:3> '_Bool' lvalue Var 0x563f5caaa178 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563f5caad5f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563f5caad5c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563f5caad580 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563f5caad568 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563f5caad088 <col:20> '_Bool' lvalue Var 0x563f5caaa5c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563f5caad5b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563f5caad598 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563f5caad0a8 <col:36> '_Bool' lvalue Var 0x563f5caaa178 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x563f5caad548 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563f5caad518 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563f5caad2b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563f5caad1d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563f5caad100 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563f5caad0e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563f5caad0c8 <col:55> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563f5caad1b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563f5caad150 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563f5caad138 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563f5caad118 <col:74> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x563f5caad1a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563f5caad188 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563f5caad168 <col:93> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563f5caad298 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563f5caad230 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563f5caad218 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563f5caad1f8 <col:112> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x563f5caad280 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563f5caad268 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563f5caad248 <col:131> '_Bool' lvalue Var 0x563f5caaa178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x563f5caad500 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563f5caad4e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563f5caad2d8 <col:148> '_Bool' lvalue Var 0x563f5caaa178 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x563f5caad4c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563f5caad498 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563f5caad398 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563f5caad350 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563f5caad338 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563f5caad2f8 <col:166> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563f5caad380 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563f5caad368 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563f5caad318 <col:184> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x563f5caad468 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563f5caad3e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563f5caad3b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563f5caad480 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563f5caad440 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563f5caad410 <col:219> 'int' 0
|   |-BinaryOperator 0x563f5caad688 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563f5caad630 <col:3> 'int' lvalue Var 0x563f5caa9708 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x563f5caad670 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f5caad650 <col:25> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
|   |-BinaryOperator 0x563f5caad7b8 <line:729:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x563f5caad6a8 <col:3> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
|   | `-ConditionalOperator 0x563f5caad788 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x563f5caad740 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563f5caad728 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563f5caad6c8 <col:7> '_Bool' lvalue Var 0x563f5caa9e30 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x563f5caad758 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563f5caad6e8 <col:25> 'int' lvalue Var 0x563f5caa9f20 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x563f5caad770 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x563f5caad708 <col:37> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
|   |-BinaryOperator 0x563f5caad850 <line:730:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caad7d8 <col:3> '_Bool' lvalue Var 0x563f5caa9e30 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x563f5caad828 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563f5caad7f8 <col:28> 'int' 0
|   |-CallExpr 0x563f5caad8a8 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563f5caad890 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5caad870 <col:3> 'void ()' Function 0x563f5ca50570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563f5caad900 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563f5caad8e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5caad8c8 <col:3> 'void ()' Function 0x563f5ca504b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563f5caad978 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563f5caad920 <col:3> 'int' lvalue Var 0x563f5caa9828 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x563f5caad960 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f5caad940 <col:25> 'int' lvalue Var 0x563f5caa9c78 'x' 'int'
|   |-CallExpr 0x563f5caad9d0 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563f5caad9b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5caad998 <col:3> 'void ()' Function 0x563f5ca50570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563f5caada28 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563f5caada10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5caad9f0 <col:3> 'void ()' Function 0x563f5ca504b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563f5caadd10 <line:736:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563f5caada48 <col:3> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
|   | `-ConditionalOperator 0x563f5caadce0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563f5caadb08 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563f5caadac0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563f5caadaa8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563f5caada68 <col:7> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563f5caadaf0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563f5caadad8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563f5caada88 <col:25> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x563f5caadcc8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563f5caadb28 <col:42> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x563f5caadca8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563f5caadc78 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563f5caadbe8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563f5caadba0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563f5caadb88 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563f5caadb48 <col:55> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563f5caadbd0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563f5caadbb8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563f5caadb68 <col:73> '_Bool' lvalue Var 0x563f5caaa178 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563f5caadc48 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563f5caadc08 <col:90> 'int' lvalue Var 0x563f5caaa460 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563f5caadc60 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563f5caadc28 <col:102> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
|   |-BinaryOperator 0x563f5caadf18 <line:737:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caadd30 <col:3> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563f5caadf00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563f5caaded0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563f5caaddf0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563f5caadda8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563f5caadd90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563f5caadd50 <col:20> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563f5caaddd8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563f5caaddc0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563f5caadd70 <col:38> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563f5caade88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563f5caade40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563f5caade10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563f5caadeb8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563f5caadea0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563f5caade68 <col:66> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563f5caae228 <line:738:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caadf60 <col:3> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563f5caae210 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563f5caae1e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563f5caae100 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563f5caae020 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563f5caadfd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563f5caadfc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563f5caadf80 <col:20> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563f5caae008 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563f5caadff0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563f5caadfa0 <col:38> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x563f5caae0e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563f5caae098 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563f5caae080 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563f5caae040 <col:56> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563f5caae0c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563f5caae0b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563f5caae060 <col:74> '_Bool' lvalue Var 0x563f5caaa178 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563f5caae198 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563f5caae150 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563f5caae120 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563f5caae1c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563f5caae1b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563f5caae178 <col:102> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563f5caae430 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caae248 <col:3> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563f5caae418 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563f5caae3e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563f5caae308 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563f5caae2c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563f5caae2a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563f5caae268 <col:20> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563f5caae2f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563f5caae2d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563f5caae288 <col:38> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563f5caae3a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563f5caae358 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563f5caae328 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563f5caae3d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563f5caae3b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563f5caae380 <col:66> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563f5caae718 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caae450 <col:3> '_Bool' lvalue Var 0x563f5caaa178 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563f5caae700 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563f5caae6d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563f5caae5f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563f5caae510 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563f5caae4c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563f5caae4b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563f5caae470 <col:20> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563f5caae4f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563f5caae4e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563f5caae490 <col:38> '_Bool' lvalue Var 0x563f5caaa010 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x563f5caae5d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563f5caae588 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563f5caae570 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563f5caae530 <col:56> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563f5caae5b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563f5caae5a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563f5caae550 <col:74> '_Bool' lvalue Var 0x563f5caaa178 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563f5caae688 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563f5caae640 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563f5caae610 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563f5caae6b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563f5caae6a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563f5caae668 <col:102> '_Bool' lvalue Var 0x563f5caaa178 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x563f5caae770 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563f5caae758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5caae738 <col:3> 'void ()' Function 0x563f5ca50570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563f5caae7c8 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563f5caae7b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5caae790 <col:3> 'void ()' Function 0x563f5ca504b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563f5caae880 <line:743:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563f5caae7e8 <col:3> 'int' lvalue Var 0x563f5caa95e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563f5caae860 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563f5caae848 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563f5caae808 <col:22> 'int' lvalue Var 0x563f5caa95e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563f5caae828 <col:41> 'int' 1
|   |-CallExpr 0x563f5caae8d8 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563f5caae8c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5caae8a0 <col:3> 'void ()' Function 0x563f5ca50570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563f5caae988 <line:745:3, col:36>
|     `-CallExpr 0x563f5caae968 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563f5caae950 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563f5caae8f8 <col:10> 'void *(void)' Function 0x563f5ca4ffc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563f5caaeba0 prev 0x563f5caa9268 <line:747:1, line:782:1> line:747:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x563f5caaeb08 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563f5cab2868 <line:748:1, line:782:1>
|   |-CallExpr 0x563f5caaec80 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563f5caaec68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5caaec48 <col:3> 'void ()' Function 0x563f5ca504b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563f5caaece0 <line:750:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563f5caaeca0 <col:3> 'int' lvalue Var 0x563f5caa9c78 'x' 'int'
|   | `-IntegerLiteral 0x563f5caaecc0 <col:7> 'int' 1
|   |-CallExpr 0x563f5caaed38 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563f5caaed20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5caaed00 <col:3> 'void ()' Function 0x563f5ca50570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563f5caaed90 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563f5caaed78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5caaed58 <col:3> 'void ()' Function 0x563f5ca504b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563f5caaee08 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563f5caaedb0 <col:3> 'int' lvalue Var 0x563f5caa9948 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x563f5caaedf0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f5caaedd0 <col:25> 'int' lvalue Var 0x563f5caa9c78 'x' 'int'
|   |-CallExpr 0x563f5caaee60 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563f5caaee48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5caaee28 <col:3> 'void ()' Function 0x563f5ca50570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563f5caaeeb8 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563f5caaeea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5caaee80 <col:3> 'void ()' Function 0x563f5ca504b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563f5caaef70 <line:756:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caaeed8 <col:3> '_Bool' lvalue Var 0x563f5caaa550 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x563f5caaef30 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x563f5caaef18 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x563f5caaeef8 <col:19> '_Bool (void)' Function 0x563f5ca4fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x563f5caaf008 <line:757:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caaef90 <col:3> '_Bool' lvalue Var 0x563f5caaa5c8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x563f5caaefe8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x563f5caaefd0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x563f5caaefb0 <col:19> '_Bool (void)' Function 0x563f5ca4fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x563f5caaf080 <line:758:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caaf028 <col:3> '_Bool' lvalue Var 0x563f5caa9e30 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x563f5caaf068 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f5caaf048 <col:21> '_Bool' lvalue Var 0x563f5caaa5c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x563f5caaf0f8 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563f5caaf0a0 <col:3> 'int' lvalue Var 0x563f5caa9f20 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x563f5caaf0e0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f5caaf0c0 <col:15> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
|   |-BinaryOperator 0x563f5caaf530 <line:760:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x563f5caaf118 <col:3> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
|   | `-ConditionalOperator 0x563f5caaf500 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x563f5caaf328 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x563f5caaf248 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x563f5caaf170 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x563f5caaf158 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x563f5caaf138 <col:8> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x563f5caaf228 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x563f5caaf1c0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x563f5caaf1a8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x563f5caaf188 <col:27> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x563f5caaf210 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x563f5caaf1f8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x563f5caaf1d8 <col:46> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x563f5caaf308 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x563f5caaf2a0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x563f5caaf288 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x563f5caaf268 <col:65> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x563f5caaf2f0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x563f5caaf2d8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x563f5caaf2b8 <col:84> '_Bool' lvalue Var 0x563f5caaa1f0 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x563f5caaf4e8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563f5caaf348 <col:101> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
|   |   `-ParenExpr 0x563f5caaf4c8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x563f5caaf498 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x563f5caaf408 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563f5caaf3c0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563f5caaf3a8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563f5caaf368 <col:106> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563f5caaf3f0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563f5caaf3d8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563f5caaf388 <col:124> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563f5caaf468 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563f5caaf428 <col:141> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x563f5caaf480 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563f5caaf448 <col:153> 'int' lvalue Var 0x563f5caaa460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x563f5caafa40 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563f5caaf550 <col:3> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x563f5caafa10 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563f5caaf9e0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563f5caaf9c8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563f5caaf570 <col:15> '_Bool' lvalue Var 0x563f5caaa5c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563f5caaf9f8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563f5caaf590 <col:31> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x563f5caaf9a8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563f5caaf978 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563f5caaf7a0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563f5caaf6c0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563f5caaf5e8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563f5caaf5d0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563f5caaf5b0 <col:45> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563f5caaf6a0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563f5caaf638 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563f5caaf620 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563f5caaf600 <col:64> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x563f5caaf688 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563f5caaf670 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563f5caaf650 <col:83> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563f5caaf780 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563f5caaf718 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563f5caaf700 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563f5caaf6e0 <col:102> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x563f5caaf768 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563f5caaf750 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563f5caaf730 <col:121> '_Bool' lvalue Var 0x563f5caaa1f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563f5caaf960 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563f5caaf7c0 <col:138> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x563f5caaf940 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563f5caaf910 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563f5caaf880 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563f5caaf838 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563f5caaf820 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563f5caaf7e0 <col:151> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563f5caaf868 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563f5caaf850 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563f5caaf800 <col:169> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x563f5caaf8e0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563f5caaf8a0 <col:186> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x563f5caaf8f8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563f5caaf8c0 <col:198> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x563f5caaff50 <line:762:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563f5caafa60 <col:3> 'int' lvalue Var 0x563f5caaa460 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x563f5caaff20 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563f5caafef0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563f5caafed8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563f5caafa80 <col:15> '_Bool' lvalue Var 0x563f5caaa5c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563f5caaff08 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563f5caafaa0 <col:31> 'int' lvalue Var 0x563f5caaa460 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x563f5caafeb8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563f5caafe88 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563f5caafcb0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563f5caafbd0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563f5caafaf8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563f5caafae0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563f5caafac0 <col:45> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563f5caafbb0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563f5caafb48 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563f5caafb30 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563f5caafb10 <col:64> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x563f5caafb98 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563f5caafb80 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563f5caafb60 <col:83> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563f5caafc90 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563f5caafc28 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563f5caafc10 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563f5caafbf0 <col:102> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x563f5caafc78 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563f5caafc60 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563f5caafc40 <col:121> '_Bool' lvalue Var 0x563f5caaa1f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563f5caafe70 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563f5caafcd0 <col:138> 'int' lvalue Var 0x563f5caaa460 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x563f5caafe50 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563f5caafe20 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563f5caafd90 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563f5caafd48 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563f5caafd30 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563f5caafcf0 <col:151> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563f5caafd78 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563f5caafd60 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563f5caafd10 <col:169> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x563f5caafdf0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563f5caafdb0 <col:186> 'int' lvalue Var 0x563f5caaa460 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x563f5caafe08 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563f5caafdd0 <col:198> 'int' lvalue Var 0x563f5caaa460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x563f5cab0508 <line:763:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563f5caaff80 <col:3> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563f5cab04f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563f5cab04c0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563f5cab0478 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563f5cab0460 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563f5caaffa0 <col:20> '_Bool' lvalue Var 0x563f5caaa5c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563f5cab04a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563f5cab0490 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563f5caaffc0 <col:36> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x563f5cab0440 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563f5cab0410 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563f5cab01d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563f5cab00f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563f5cab0018 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563f5cab0000 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563f5caaffe0 <col:55> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563f5cab00d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563f5cab0068 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563f5cab0050 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563f5cab0030 <col:74> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x563f5cab00b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563f5cab00a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563f5cab0080 <col:93> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563f5cab01b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563f5cab0148 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563f5cab0130 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563f5cab0110 <col:112> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x563f5cab0198 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563f5cab0180 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563f5cab0160 <col:131> '_Bool' lvalue Var 0x563f5caaa1f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x563f5cab03f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563f5cab03e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563f5cab01f0 <col:148> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x563f5cab03c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563f5cab0390 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563f5cab02b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563f5cab0268 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563f5cab0250 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563f5cab0210 <col:166> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563f5cab0298 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563f5cab0280 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563f5cab0230 <col:184> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x563f5cab0348 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563f5cab0300 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563f5cab02d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563f5cab0378 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563f5cab0360 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563f5cab0328 <col:212> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563f5cab0ad0 <line:764:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563f5cab0528 <col:3> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563f5cab0ab8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563f5cab0a88 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563f5cab0a40 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563f5cab0a28 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563f5cab0548 <col:20> '_Bool' lvalue Var 0x563f5caaa5c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563f5cab0a70 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563f5cab0a58 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563f5cab0568 <col:36> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x563f5cab0a08 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563f5cab09d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563f5cab0778 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563f5cab0698 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563f5cab05c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563f5cab05a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563f5cab0588 <col:55> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563f5cab0678 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563f5cab0610 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563f5cab05f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563f5cab05d8 <col:74> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x563f5cab0660 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563f5cab0648 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563f5cab0628 <col:93> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563f5cab0758 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563f5cab06f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563f5cab06d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563f5cab06b8 <col:112> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x563f5cab0740 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563f5cab0728 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563f5cab0708 <col:131> '_Bool' lvalue Var 0x563f5caaa1f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x563f5cab09c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563f5cab09a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563f5cab0798 <col:148> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x563f5cab0988 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563f5cab0958 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563f5cab0858 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563f5cab0810 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563f5cab07f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563f5cab07b8 <col:166> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563f5cab0840 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563f5cab0828 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563f5cab07d8 <col:184> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x563f5cab0928 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563f5cab08a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563f5cab0878 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563f5cab0940 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563f5cab0900 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563f5cab08d0 <col:219> 'int' 0
|   |-BinaryOperator 0x563f5cab1088 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563f5cab0af0 <col:3> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563f5cab1070 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563f5cab1040 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563f5cab0ff8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563f5cab0fe0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563f5cab0b10 <col:20> '_Bool' lvalue Var 0x563f5caaa5c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563f5cab1028 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563f5cab1010 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563f5cab0b30 <col:36> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x563f5cab0fc0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563f5cab0f90 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563f5cab0d40 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563f5cab0c60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563f5cab0b88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563f5cab0b70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563f5cab0b50 <col:55> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563f5cab0c40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563f5cab0bd8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563f5cab0bc0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563f5cab0ba0 <col:74> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x563f5cab0c28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563f5cab0c10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563f5cab0bf0 <col:93> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563f5cab0d20 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563f5cab0cb8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563f5cab0ca0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563f5cab0c80 <col:112> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x563f5cab0d08 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563f5cab0cf0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563f5cab0cd0 <col:131> '_Bool' lvalue Var 0x563f5caaa1f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x563f5cab0f68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563f5cab0f50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563f5cab0d60 <col:148> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x563f5cab0f30 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563f5cab0f00 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563f5cab0e20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563f5cab0dd8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563f5cab0dc0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563f5cab0d80 <col:166> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563f5cab0e08 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563f5cab0df0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563f5cab0da0 <col:184> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x563f5cab0eb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563f5cab0e70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563f5cab0e40 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563f5cab0ee8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563f5cab0ed0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563f5cab0e98 <col:212> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563f5cab1650 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563f5cab10a8 <col:3> '_Bool' lvalue Var 0x563f5caaa1f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563f5cab1638 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563f5cab1608 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563f5cab15c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563f5cab15a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563f5cab10c8 <col:20> '_Bool' lvalue Var 0x563f5caaa5c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563f5cab15f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563f5cab15d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563f5cab10e8 <col:36> '_Bool' lvalue Var 0x563f5caaa1f0 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x563f5cab1588 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563f5cab1558 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563f5cab12f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563f5cab1218 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563f5cab1140 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563f5cab1128 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563f5cab1108 <col:55> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563f5cab11f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563f5cab1190 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563f5cab1178 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563f5cab1158 <col:74> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x563f5cab11e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563f5cab11c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563f5cab11a8 <col:93> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563f5cab12d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563f5cab1270 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563f5cab1258 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563f5cab1238 <col:112> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x563f5cab12c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563f5cab12a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563f5cab1288 <col:131> '_Bool' lvalue Var 0x563f5caaa1f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x563f5cab1540 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563f5cab1528 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563f5cab1318 <col:148> '_Bool' lvalue Var 0x563f5caaa1f0 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x563f5cab1508 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563f5cab14d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563f5cab13d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563f5cab1390 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563f5cab1378 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563f5cab1338 <col:166> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563f5cab13c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563f5cab13a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563f5cab1358 <col:184> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x563f5cab14a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563f5cab1428 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563f5cab13f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563f5cab14c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563f5cab1480 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563f5cab1450 <col:219> 'int' 0
|   |-BinaryOperator 0x563f5cab16c8 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563f5cab1670 <col:3> 'int' lvalue Var 0x563f5caa9a68 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x563f5cab16b0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f5cab1690 <col:25> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
|   |-BinaryOperator 0x563f5cab17f8 <line:768:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x563f5cab16e8 <col:3> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
|   | `-ConditionalOperator 0x563f5cab17c8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x563f5cab1780 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563f5cab1768 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563f5cab1708 <col:7> '_Bool' lvalue Var 0x563f5caa9e30 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x563f5cab1798 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563f5cab1728 <col:25> 'int' lvalue Var 0x563f5caa9f20 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x563f5cab17b0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x563f5cab1748 <col:37> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
|   |-BinaryOperator 0x563f5cab1890 <line:769:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x563f5cab1818 <col:3> '_Bool' lvalue Var 0x563f5caa9e30 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x563f5cab1868 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563f5cab1838 <col:28> 'int' 0
|   |-CallExpr 0x563f5cab18e8 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563f5cab18d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5cab18b0 <col:3> 'void ()' Function 0x563f5ca50570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563f5cab1940 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563f5cab1928 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5cab1908 <col:3> 'void ()' Function 0x563f5ca504b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563f5cab1c28 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563f5cab1960 <col:3> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
|   | `-ConditionalOperator 0x563f5cab1bf8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563f5cab1a20 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563f5cab19d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563f5cab19c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563f5cab1980 <col:7> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563f5cab1a08 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563f5cab19f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563f5cab19a0 <col:25> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x563f5cab1be0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563f5cab1a40 <col:42> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x563f5cab1bc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563f5cab1b90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563f5cab1b00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563f5cab1ab8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563f5cab1aa0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563f5cab1a60 <col:55> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563f5cab1ae8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563f5cab1ad0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563f5cab1a80 <col:73> '_Bool' lvalue Var 0x563f5caaa1f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563f5cab1b60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563f5cab1b20 <col:90> 'int' lvalue Var 0x563f5caaa460 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563f5cab1b78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563f5cab1b40 <col:102> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
|   |-BinaryOperator 0x563f5cab1e30 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563f5cab1c48 <col:3> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563f5cab1e18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563f5cab1de8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563f5cab1d08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563f5cab1cc0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563f5cab1ca8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563f5cab1c68 <col:20> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563f5cab1cf0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563f5cab1cd8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563f5cab1c88 <col:38> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563f5cab1da0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563f5cab1d58 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563f5cab1d28 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563f5cab1dd0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563f5cab1db8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563f5cab1d80 <col:66> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563f5cab2130 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563f5cab1e50 <col:3> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563f5cab2118 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563f5cab20e8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563f5cab2008 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563f5cab1f10 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563f5cab1ec8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563f5cab1eb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563f5cab1e70 <col:20> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563f5cab1ef8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563f5cab1ee0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563f5cab1e90 <col:38> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563f5cab1fe8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563f5cab1fa0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563f5cab1f70 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563f5cab1f30 <col:56> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563f5cab1fd0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563f5cab1fb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563f5cab1f50 <col:74> '_Bool' lvalue Var 0x563f5caaa1f0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563f5cab20a0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563f5cab2058 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563f5cab2028 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563f5cab20d0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563f5cab20b8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563f5cab2080 <col:102> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563f5cab2338 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563f5cab2150 <col:3> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563f5cab2320 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563f5cab22f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563f5cab2210 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563f5cab21c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563f5cab21b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563f5cab2170 <col:20> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563f5cab21f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563f5cab21e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563f5cab2190 <col:38> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563f5cab22a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563f5cab2260 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563f5cab2230 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563f5cab22d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563f5cab22c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563f5cab2288 <col:66> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563f5cab2620 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563f5cab2358 <col:3> '_Bool' lvalue Var 0x563f5caaa1f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563f5cab2608 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563f5cab25d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563f5cab24f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563f5cab2418 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563f5cab23d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563f5cab23b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563f5cab2378 <col:20> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563f5cab2400 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563f5cab23e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563f5cab2398 <col:38> '_Bool' lvalue Var 0x563f5caaa088 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563f5cab24d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563f5cab2490 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563f5cab2478 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563f5cab2438 <col:56> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563f5cab24c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563f5cab24a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563f5cab2458 <col:74> '_Bool' lvalue Var 0x563f5caaa1f0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563f5cab2590 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563f5cab2548 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563f5cab2518 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563f5cab25c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563f5cab25a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563f5cab2570 <col:102> '_Bool' lvalue Var 0x563f5caaa1f0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x563f5cab2678 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563f5cab2660 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5cab2640 <col:3> 'void ()' Function 0x563f5ca50570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563f5cab26d0 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563f5cab26b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5cab2698 <col:3> 'void ()' Function 0x563f5ca504b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563f5cab2788 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563f5cab26f0 <col:3> 'int' lvalue Var 0x563f5caa95e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563f5cab2768 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563f5cab2750 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563f5cab2710 <col:22> 'int' lvalue Var 0x563f5caa95e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563f5cab2730 <col:41> 'int' 1
|   |-CallExpr 0x563f5cab27e0 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563f5cab27c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f5cab27a8 <col:3> 'void ()' Function 0x563f5ca50570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563f5cab2858 <line:781:3, col:36>
|     `-CallExpr 0x563f5cab2838 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563f5cab2820 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563f5cab2800 <col:10> 'void *(void)' Function 0x563f5ca4ffc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563f5cab29a0 prev 0x563f5caa9330 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x563f5cab2a40 <line:784:1, line:785:1>
|-FunctionDecl 0x563f5cab2a70 prev 0x563f5caa93f0 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x563f5cab2b10 <line:787:1, line:788:1>
|-FunctionDecl 0x563f5cab2b40 prev 0x563f5caa94b0 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x563f5cab2be0 <line:790:1, line:791:1>
`-FunctionDecl 0x563f5cab2c48 <line:792:1, line:814:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x563f5cab46d0 <line:793:1, line:814:1>
    |-DeclStmt 0x563f5cab2d60 <line:794:3, col:15>
    | `-VarDecl 0x563f5cab2cf8 <col:3, col:13> col:13 used t4 'pthread_t':'unsigned long'
    |-CallExpr 0x563f5cab2fb0 <line:795:3, col:51> 'int'
    | |-ImplicitCastExpr 0x563f5cab2f50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563f5cab2d78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563f5ca909d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563f5cab2db8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563f5cab2d98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563f5cab2cf8 't4' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563f5cab2ff0 <col:23, col:33> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563f5cab2e30 <col:23, col:33> 'void *'
    | |   `-CStyleCastExpr 0x563f5cab2e08 <col:24, col:32> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563f5cab2dd0 <col:32> 'int' 0
    | |-ImplicitCastExpr 0x563f5cab3008 <col:36> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563f5cab2e50 <col:36> 'void *(void *)' Function 0x563f5caaa6e0 'P0' 'void *(void *)'
    | `-ParenExpr 0x563f5cab2ed0 <col:40, col:50> 'void *'
    |   `-CStyleCastExpr 0x563f5cab2ea8 <col:41, col:49> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563f5cab2e70 <col:49> 'int' 0
    |-DeclStmt 0x563f5cab3098 <line:796:3, col:15>
    | `-VarDecl 0x563f5cab3030 <col:3, col:13> col:13 used t5 'pthread_t':'unsigned long'
    |-CallExpr 0x563f5cab3240 <line:797:3, col:51> 'int'
    | |-ImplicitCastExpr 0x563f5cab3228 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563f5cab30b0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563f5ca909d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563f5cab30f0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563f5cab30d0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563f5cab3030 't5' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563f5cab3280 <col:23, col:33> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563f5cab3168 <col:23, col:33> 'void *'
    | |   `-CStyleCastExpr 0x563f5cab3140 <col:24, col:32> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563f5cab3108 <col:32> 'int' 0
    | |-ImplicitCastExpr 0x563f5cab3298 <col:36> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563f5cab3188 <col:36> 'void *(void *)' Function 0x563f5caaeba0 'P1' 'void *(void *)'
    | `-ParenExpr 0x563f5cab3208 <col:40, col:50> 'void *'
    |   `-CStyleCastExpr 0x563f5cab31e0 <col:41, col:49> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563f5cab31a8 <col:49> 'int' 0
    |-CallExpr 0x563f5cab32e8 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563f5cab32d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563f5cab32b0 <col:3> 'void ()' Function 0x563f5ca504b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563f5cab33b8 <line:799:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x563f5cab3308 <col:3> '_Bool' lvalue Var 0x563f5caa9b00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x563f5cab33a0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x563f5cab3380 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x563f5cab3368 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x563f5cab3328 <col:21> 'int' lvalue Var 0x563f5caa95e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x563f5cab3348 <col:41> 'int' 2
    |-CallExpr 0x563f5cab3410 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563f5cab33f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563f5cab33d8 <col:3> 'void ()' Function 0x563f5ca50570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563f5cab3488 <line:801:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563f5cab3470 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563f5cab3430 <col:3> 'void (int)' Function 0x563f5ca4fe50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x563f5cab34c8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563f5cab34b0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563f5cab3450 <col:21> '_Bool' lvalue Var 0x563f5caa9b00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x563f5cab3518 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563f5cab3500 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563f5cab34e0 <col:3> 'void ()' Function 0x563f5ca504b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563f5cab3800 <line:803:3, col:103> 'int' '='
    | |-DeclRefExpr 0x563f5cab3538 <col:3> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
    | `-ConditionalOperator 0x563f5cab37d0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x563f5cab35f8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x563f5cab35b0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x563f5cab3598 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x563f5cab3558 <col:7> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x563f5cab35e0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x563f5cab35c8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x563f5cab3578 <col:25> '_Bool' lvalue Var 0x563f5caa9f98 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x563f5cab37b8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563f5cab3618 <col:42> 'int' lvalue Var 0x563f5caaa368 'y$w_buff0' 'int'
    |   `-ParenExpr 0x563f5cab3798 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x563f5cab3768 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x563f5cab36d8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x563f5cab3690 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x563f5cab3678 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x563f5cab3638 <col:55> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x563f5cab36c0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x563f5cab36a8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x563f5cab3658 <col:73> '_Bool' lvalue Var 0x563f5caaa100 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x563f5cab3738 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x563f5cab36f8 <col:90> 'int' lvalue Var 0x563f5caaa460 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x563f5cab3750 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x563f5cab3718 <col:102> 'int' lvalue Var 0x563f5caa9d98 'y' 'int'
    |-BinaryOperator 0x563f5cab3a08 <line:804:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563f5cab3820 <col:3> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x563f5cab39f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563f5cab39c0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563f5cab38e0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563f5cab3898 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563f5cab3880 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563f5cab3840 <col:20> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563f5cab38c8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563f5cab38b0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563f5cab3860 <col:38> '_Bool' lvalue Var 0x563f5caa9f98 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563f5cab3978 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563f5cab3930 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563f5cab3900 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563f5cab39a8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563f5cab3990 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563f5cab3958 <col:66> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x563f5cab3cf0 <line:805:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563f5cab3a28 <col:3> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x563f5cab3cd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563f5cab3ca8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563f5cab3bc8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563f5cab3ae8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563f5cab3aa0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563f5cab3a88 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563f5cab3a48 <col:20> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563f5cab3ad0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563f5cab3ab8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563f5cab3a68 <col:38> '_Bool' lvalue Var 0x563f5caa9f98 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563f5cab3ba8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563f5cab3b60 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563f5cab3b48 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563f5cab3b08 <col:56> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563f5cab3b90 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563f5cab3b78 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563f5cab3b28 <col:74> '_Bool' lvalue Var 0x563f5caaa100 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563f5cab3c60 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563f5cab3c18 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563f5cab3be8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563f5cab3c90 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563f5cab3c78 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563f5cab3c40 <col:102> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x563f5cab3ef8 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563f5cab3d10 <col:3> '_Bool' lvalue Var 0x563f5caa9f98 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563f5cab3ee0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563f5cab3eb0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563f5cab3dd0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563f5cab3d88 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563f5cab3d70 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563f5cab3d30 <col:20> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563f5cab3db8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563f5cab3da0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563f5cab3d50 <col:38> '_Bool' lvalue Var 0x563f5caa9f98 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563f5cab3e68 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563f5cab3e20 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563f5cab3df0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563f5cab3e98 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563f5cab3e80 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563f5cab3e48 <col:66> '_Bool' lvalue Var 0x563f5caa9f98 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x563f5cab41f8 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563f5cab3f18 <col:3> '_Bool' lvalue Var 0x563f5caaa100 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563f5cab41e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563f5cab41b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563f5cab40d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563f5cab3ff0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563f5cab3f90 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563f5cab3f78 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563f5cab3f38 <col:20> '_Bool' lvalue Var 0x563f5caaa3e0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563f5cab3fd8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563f5cab3fc0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563f5cab3f58 <col:38> '_Bool' lvalue Var 0x563f5caa9f98 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563f5cab40b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563f5cab4068 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563f5cab4050 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563f5cab4010 <col:56> '_Bool' lvalue Var 0x563f5caaa4d8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563f5cab4098 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563f5cab4080 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563f5cab4030 <col:74> '_Bool' lvalue Var 0x563f5caaa100 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563f5cab4168 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563f5cab4120 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563f5cab40f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563f5cab4198 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563f5cab4180 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563f5cab4148 <col:102> '_Bool' lvalue Var 0x563f5caaa100 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x563f5cab4250 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563f5cab4238 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563f5cab4218 <col:3> 'void ()' Function 0x563f5ca50570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563f5cab42a8 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563f5cab4290 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563f5cab4270 <col:3> 'void ()' Function 0x563f5ca504b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563f5cab4578 <line:810:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x563f5cab42c8 <col:3> '_Bool' lvalue Var 0x563f5caa9b78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x563f5cab4560 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x563f5cab4548 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x563f5cab4528 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x563f5cab4508 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x563f5cab4470 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x563f5cab43d8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x563f5cab4340 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x563f5cab4328 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x563f5cab42e8 <col:23> 'int' lvalue Var 0x563f5caa9708 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x563f5cab4308 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x563f5cab43b8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x563f5cab43a0 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x563f5cab4360 <col:51> 'int' lvalue Var 0x563f5caa9828 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x563f5cab4380 <col:74> 'int' 0
    |         | `-BinaryOperator 0x563f5cab4450 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x563f5cab4438 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x563f5cab43f8 <col:79> 'int' lvalue Var 0x563f5caa9948 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x563f5cab4418 <col:102> 'int' 1
    |         `-BinaryOperator 0x563f5cab44e8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x563f5cab44d0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x563f5cab4490 <col:107> 'int' lvalue Var 0x563f5caa9a68 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x563f5cab44b0 <col:130> 'int' 0
    |-CallExpr 0x563f5cab45d0 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563f5cab45b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563f5cab4598 <col:3> 'void ()' Function 0x563f5ca50570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563f5cab4648 <line:812:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563f5cab4630 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563f5cab45f0 <col:3> 'void (int)' Function 0x563f5ca50238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x563f5cab4688 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563f5cab4670 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563f5cab4610 <col:21> '_Bool' lvalue Var 0x563f5caa9b78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x563f5cab46c0 <line:813:3, col:10>
      `-IntegerLiteral 0x563f5cab46a0 <col:10> 'int' 0
