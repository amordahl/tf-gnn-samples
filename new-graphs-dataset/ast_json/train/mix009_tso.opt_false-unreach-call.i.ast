TranslationUnitDecl 0x55815d971f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55815d972848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55815d972520 '__int128'
|-TypedefDecl 0x55815d9728b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55815d972540 'unsigned __int128'
|-TypedefDecl 0x55815d972bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55815d972990 'struct __NSConstantString_tag'
|   `-Record 0x55815d972910 '__NSConstantString_tag'
|-TypedefDecl 0x55815d972c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55815d972c20 'char *'
|   `-BuiltinType 0x55815d972020 'char'
|-TypedefDecl 0x55815d9b1b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55815d972f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55815d972d40 'struct __va_list_tag'
|     `-Record 0x55815d972cc0 '__va_list_tag'
|-FunctionDecl 0x55815d9b1c80 <pthread-wmm/mix009_tso.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55815d9b1e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55815d9b1d80 <col:31> col:34 'int'
|-FunctionDecl 0x55815d9b1fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55815d9b20f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55815d9b2238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55815d9b21a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55815d9b2468 <col:40, col:99>
|   |-IfStmt 0x55815d9b2438 <col:42, col:88>
|   | |-UnaryOperator 0x55815d9b2318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55815d9b2300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55815d9b22e0 <col:47> 'int' lvalue ParmVar 0x55815d9b21a8 'expression' 'int'
|   | `-CompoundStmt 0x55815d9b2420 <col:59, col:88>
|   |   `-LabelStmt 0x55815d9b2408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55815d9b2398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55815d9b2380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55815d9b2330 <col:68> 'void () __attribute__((noreturn))' Function 0x55815d9b20f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55815d9b2450 <col:89>
|   `-ReturnStmt 0x55815d9b2458 <col:91>
|-FunctionDecl 0x55815d9b24b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55815d9b2570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55815d9b28f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55815d9b2628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55815d9b26a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55815d9b2728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55815d9b27a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55815d9b29b0 <line:11:22>
|-FunctionDecl 0x55815d9d7f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55815d9b2a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55815d9b2aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55815d9d7d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55815d9d7dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55815d9d7fd0 <line:14:22>
|-FunctionDecl 0x55815d9d8280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55815d9d8040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55815d9d80c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55815d9d8140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55815d9d8338 <line:16:22>
|-TypedefDecl 0x55815d9d83a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55815d9720e0 'unsigned char'
|-TypedefDecl 0x55815d9d8418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55815d972100 'unsigned short'
|-TypedefDecl 0x55815d9d8488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55815d972120 'unsigned int'
|-TypedefDecl 0x55815d9d84f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-TypedefDecl 0x55815d9d8568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55815d972040 'signed char'
|-TypedefDecl 0x55815d9d85d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55815d9720e0 'unsigned char'
|-TypedefDecl 0x55815d9d8648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55815d972060 'short'
|-TypedefDecl 0x55815d9d86b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55815d972100 'unsigned short'
|-TypedefDecl 0x55815d9d8728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55815d972080 'int'
|-TypedefDecl 0x55815d9d8798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55815d972120 'unsigned int'
|-TypedefDecl 0x55815d9d8808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9d8878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-TypedefDecl 0x55815d9d88e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9d8958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-TypedefDecl 0x55815d9d89c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-TypedefDecl 0x55815d9d8a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55815d972120 'unsigned int'
|-TypedefDecl 0x55815d9d8aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55815d972120 'unsigned int'
|-TypedefDecl 0x55815d9d8b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-TypedefDecl 0x55815d9d8b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-TypedefDecl 0x55815d9d8bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55815d972120 'unsigned int'
|-TypedefDecl 0x55815d9d8c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-TypedefDecl 0x55815d9d8cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9d8d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9d8dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55815d972080 'int'
|-RecordDecl 0x55815d9d8e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55815d9d8f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55815d9d9030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55815d9d8fd0 'struct __fsid_t' sugar
|   `-RecordType 0x55815d9d8eb0 '__fsid_t'
|     `-Record 0x55815d9d8e30 ''
|-TypedefDecl 0x55815d9d90b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9d9128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-TypedefDecl 0x55815d9d9198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-TypedefDecl 0x55815d9d9208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55815d972120 'unsigned int'
|-TypedefDecl 0x55815d9d9278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9d92e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55815d972120 'unsigned int'
|-TypedefDecl 0x55815d9d9358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9d93c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55815d972080 'int'
|-TypedefDecl 0x55815d9d9438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55815d972080 'int'
|-TypedefDecl 0x55815d9d94a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55815d972080 'int'
|-TypedefDecl 0x55815d9d9518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55815d9727a0 'void *'
|   `-BuiltinType 0x55815d971fe0 'void'
|-TypedefDecl 0x55815d9d9588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9d95f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9d9668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9d96d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-TypedefDecl 0x55815d9d9748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-TypedefDecl 0x55815d9d97b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-TypedefDecl 0x55815d9d9828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-TypedefDecl 0x55815d9d9898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9d9908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9d9978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9d99e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-TypedefDecl 0x55815d9d9a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55815d9d9a40 '__off64_t' sugar
|   |-Typedef 0x55815d9d8d68 '__off64_t'
|   `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9d9b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55815d9d9b30 '__quad_t *'
|   `-TypedefType 0x55815d9d9ad0 '__quad_t' sugar
|     |-Typedef 0x55815d9d88e8 '__quad_t'
|     `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9d9be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55815d972c20 'char *'
|   `-BuiltinType 0x55815d972020 'char'
|-TypedefDecl 0x55815d9d9c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9d9cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55815d972120 'unsigned int'
|-FunctionDecl 0x55815d9d9e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55815d9d9d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55815d9da148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55815d9da138 <line:73:3, col:34>
|     `-CallExpr 0x55815d9da0f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55815d9da0e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55815d9da070 <col:10> '<builtin fn type>' Function 0x55815d9d9ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55815d9da120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55815d9da090 <col:29> 'unsigned int' lvalue ParmVar 0x55815d9d9d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x55815d9d9ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55815d9d9f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55815d9d9ff0 <col:10> Implicit
| `-ConstAttr 0x55815d9da048 <col:10> Implicit
|-FunctionDecl 0x55815d9da2a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55815d9da198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55815d9da5b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55815d9da5a8 <line:78:3, col:34>
|     `-CallExpr 0x55815d9da568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55815d9da550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55815d9da4d8 <col:10> '<builtin fn type>' Function 0x55815d9da348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55815d9da590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55815d9da4f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55815d9da198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55815d9da348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55815d9da3e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55815d9da458 <col:10> Implicit
| `-ConstAttr 0x55815d9da4b0 <col:10> Implicit
|-TypedefDecl 0x55815d9da5e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-TypedefDecl 0x55815d9da678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55815d9da640 '__time_t' sugar
|   |-Typedef 0x55815d9d9278 '__time_t'
|   `-BuiltinType 0x55815d9720a0 'long'
|-RecordDecl 0x55815d9da6d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55815d9da788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55815d9da818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55815d9da8a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55815d9da870 '__pid_t' sugar
|   |-Typedef 0x55815d9d8dd8 '__pid_t'
|   `-BuiltinType 0x55815d972080 'int'
|-RecordDecl 0x55815d9da900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55815d9da9c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55815d9daa10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55815d9daad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55815d9dab38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-RecordDecl 0x55815d9dab90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55815d9dce70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55815d9dcf20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55815d9dcec0 'struct cpu_set_t' sugar
|   `-RecordType 0x55815d9dac10 'cpu_set_t'
|     `-Record 0x55815d9dab90 ''
|-FunctionDecl 0x55815d9dd1f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55815d9dcfc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55815d9dd0d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55815d9dd2a8 <line:108:19>
|-FunctionDecl 0x55815d9dd480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55815d9dd310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55815d9dd528 <col:69>
|-FunctionDecl 0x55815d9dd6a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55815d9dd590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55815d9dd748 <col:64>
|-FunctionDecl 0x55815d9dda08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55815d9dd7b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55815d9dd8e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55815d9ddab8 <line:114:22>
|-FunctionDecl 0x55815d9dde60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55815d9ddb20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55815d9ddc18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55815d9ddf10 <col:88>
|-FunctionDecl 0x55815d9de1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55815d9ddf78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55815d9ddff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55815d9de088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55815d9de280 <col:62>
|-FunctionDecl 0x55815d9de3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55815d9de2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55815d9de4a0 <col:63>
|-FunctionDecl 0x55815d9de5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55815d9de668 <col:47>
|-FunctionDecl 0x55815d9de770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55815d9de6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55815d9de818 <col:69>
|-FunctionDecl 0x55815d9de920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55815d9de888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55815d9de9c8 <col:69>
|-FunctionDecl 0x55815d9dec88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55815d9dea30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55815d9deb68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55815d9ded38 <col:88>
|-TypedefDecl 0x55815d9dedc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55815d9ded90 '__clock_t' sugar
|   |-Typedef 0x55815d9d90b8 '__clock_t'
|   `-BuiltinType 0x55815d9720a0 'long'
|-TypedefDecl 0x55815d9df7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55815d9dee20 '__clockid_t' sugar
|   |-Typedef 0x55815d9d94a8 '__clockid_t'
|   `-BuiltinType 0x55815d972080 'int'
|-TypedefDecl 0x55815d9df878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55815d9df840 '__timer_t' sugar
|   |-Typedef 0x55815d9d9518 '__timer_t'
|   `-PointerType 0x55815d9727a0 'void *'
|     `-BuiltinType 0x55815d971fe0 'void'
|-RecordDecl 0x55815d9df8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55815d9df990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55815d9df9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55815d9dfa60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55815d9dfac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55815d9dfb30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55815d9dfb98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55815d9dfc00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55815d9dfc68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55815d9dfcd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55815d9dfd38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55815d9dfda0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55815d9dfdf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55815d9dfeb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55815d9dff28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55815d9dffd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55815d9e01a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55815d9e0240 <col:45>
|-FunctionDecl 0x55815d9e0420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55815d9e0310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55815d9e04c8 <col:54>
|-FunctionDecl 0x55815d9e06c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55815d9e0530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55815d9e05a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55815d9e0778 <line:158:22>
| `-ConstAttr 0x55815d9e1410 <col:63>
|-FunctionDecl 0x55815d9e1610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55815d9e1508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55815d9e16b8 <col:56>
|-FunctionDecl 0x55815d9e1a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55815d9e1728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55815d9e17a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55815d9e1820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55815d9e1918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55815d9e1b20 <col:54>
|-RecordDecl 0x55815d9e1b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55815d9e1c28 parent 0x55815d971f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55815d9e1e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55815d9e1f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55815d9e1f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55815d9e1ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55815d9e20e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55815d9e2208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55815d9e21b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55815d9e2140 'struct __locale_struct' sugar
|     `-RecordType 0x55815d9e1c00 'struct __locale_struct'
|       `-Record 0x55815d9e1b78 '__locale_struct'
|-TypedefDecl 0x55815d9e22b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55815d9e2280 '__locale_t' sugar
|   |-Typedef 0x55815d9e2208 '__locale_t'
|   `-PointerType 0x55815d9e21b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55815d9e2140 'struct __locale_struct' sugar
|       `-RecordType 0x55815d9e1c00 'struct __locale_struct'
|         `-Record 0x55815d9e1b78 '__locale_struct'
|-FunctionDecl 0x55815d9e26b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55815d9e2328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55815d9e23a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55815d9e2438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55815d9e24c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55815d9e2540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55815d9e2778 <col:40>
|-FunctionDecl 0x55815d9e2968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55815d9e2840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55815d9e2a10 <col:66>
|-FunctionDecl 0x55815d9e2b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55815d9e2a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55815d9e2bc8 <col:69>
|-FunctionDecl 0x55815d9e2df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55815d9e2c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55815d9e2cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55815d9e2ea8 <col:52>
|-FunctionDecl 0x55815d9e3050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55815d9e2f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55815d9e2fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55815d9e3100 <col:55>
|-FunctionDecl 0x55815d9e3298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55815d9e3180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55815d9e3340 <col:62>
|-FunctionDecl 0x55815d9e3578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55815d9e33a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55815d9e3620 <col:60>
|-FunctionDecl 0x55815d9e3848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55815d9e36a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55815d9e3720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55815d9e38f8 <col:44>
|-FunctionDecl 0x55815d9e3b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55815d9e3960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55815d9e39e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55815d9e3bb8 <col:49>
|-VarDecl 0x55815d9e3cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55815d9e3d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55815d9e3db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55815d9e3e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55815d9e3fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55815d9e4050 <col:42>
|-VarDecl 0x55815d9e40c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55815d9e4140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55815d9e42c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55815d9e41b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55815d9e4370 <col:57>
|-FunctionDecl 0x55815d9e54f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55815d9e43f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55815d9e5598 <col:56>
|-FunctionDecl 0x55815d9e56a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55815d9e5618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55815d9e5750 <col:59>
|-FunctionDecl 0x55815d9e5858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55815d9e57c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55815d9e5900 <col:48>
| `-ConstAttr 0x55815d9e5958 <col:89>
|-FunctionDecl 0x55815d9e5bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55815d9e5a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55815d9e5a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55815d9e5e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55815d9e5ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55815d9e5d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55815d9e5ec8 <col:88>
|-FunctionDecl 0x55815d9e6060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55815d9e5f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55815d9e5fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55815d9e6110 <col:88>
|-FunctionDecl 0x55815d9e6328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55815d9e6178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55815d9e6208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55815d9e63d8 <line:209:22>
|-FunctionDecl 0x55815d9e6778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55815d9e6440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55815d9e6500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55815d9e6590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55815d9e6620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55815d9e6a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55815d9e6878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55815d9e6950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55815d9e6b28 <col:85>
|-FunctionDecl 0x55815d9e6f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55815d9e6b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55815d9e6cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55815d9e6dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55815d9e6fd0 <col:52>
|-FunctionDecl 0x55815d9e7148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55815d9e7038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55815d9e71f0 <col:61>
|-FunctionDecl 0x55815d9e7668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55815d9e7258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55815d9e72d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55815d9e7408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55815d9e7510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55815d9e7728 <col:62>
|-FunctionDecl 0x55815d9e7948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55815d9e7790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55815d9e7820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55815d9e79f8 <line:222:22>
|-FunctionDecl 0x55815d9e7af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55815d9e7a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55815d9e7ba0 <col:65>
|-TypedefDecl 0x55815d9e7c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55815d972140 'unsigned long'
|-RecordDecl 0x55815d9e7c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55815d9e7db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55815d9e7e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55815d9e7ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55815d9e7e70 'union pthread_attr_t' sugar
|   `-RecordType 0x55815d9e7cf0 'union pthread_attr_t'
|     `-Record 0x55815d9e7c68 'pthread_attr_t'
|-RecordDecl 0x55815d9e7f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55815d9e8098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55815d9e8110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55815d9e81c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55815d9e8160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55815d9e7fa0 'struct __pthread_internal_list'
|     `-Record 0x55815d9e7f20 '__pthread_internal_list'
|-RecordDecl 0x55815d9e8230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55815d9e82d8 parent 0x55815d971f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55815d9e83b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55815d9e8418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55815d9e8480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55815d9ec530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55815d9ec598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55815d9ec600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55815d9ec688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55815d9ec740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55815d9ec830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55815d9ec898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55815d9eca20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55815d9ec9c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55815d9e82b0 'pthread_mutex_t'
|     `-Record 0x55815d9e8230 ''
|-RecordDecl 0x55815d9eca90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55815d9ecbd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55815d9ecc38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55815d9eccf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55815d9ecc90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55815d9ecb10 'pthread_mutexattr_t'
|     `-Record 0x55815d9eca90 ''
|-RecordDecl 0x55815d9ecd60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55815d9ece08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55815d9eced0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55815d9ecf38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55815d9ecfa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55815d9ed008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55815d9ed070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55815d9ed0d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55815d9ed140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55815d9ed1a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55815d9ed260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix009_tso.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix009_tso.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55815d9ed350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55815d9ed3b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55815d9ed540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55815d9ed490 'union pthread_cond_t' sugar
|   `-RecordType 0x55815d9ecde0 'pthread_cond_t'
|     `-Record 0x55815d9ecd60 ''
|-RecordDecl 0x55815d9ed5b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55815d9ed6b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55815d9ed718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55815d9ed7d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55815d9ed770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55815d9ed630 'pthread_condattr_t'
|     `-Record 0x55815d9ed5b0 ''
|-TypedefDecl 0x55815d9ed858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55815d972120 'unsigned int'
|-TypedefDecl 0x55815d9ed8c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55815d972080 'int'
|-RecordDecl 0x55815d9ed920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55815d9ed9c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55815d9eda90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55815d9edaf8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55815d9edb60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55815d9edbc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55815d9edc30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55815d9edc98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55815d9edd00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55815d9edd68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55815d9eddd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55815d9ede38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55815d9edea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55815d9edf50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix009_tso.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix009_tso.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55815d9edff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55815d9ee060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55815d9ee1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55815d9ee150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55815d9ed9a0 'pthread_rwlock_t'
|     `-Record 0x55815d9ed920 ''
|-RecordDecl 0x55815d9ee220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55815d9ee360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55815d9ee3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55815d9ee480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55815d9ee420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55815d9ee2a0 'pthread_rwlockattr_t'
|     `-Record 0x55815d9ee220 ''
|-TypedefDecl 0x55815d9f0560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55815d972084 'volatile int' volatile
|   `-BuiltinType 0x55815d972080 'int'
|-RecordDecl 0x55815d9f05b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55815d9f0700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55815d9f0768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55815d9f0820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55815d9f07c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55815d9f0640 'pthread_barrier_t'
|     `-Record 0x55815d9f05b8 ''
|-RecordDecl 0x55815d9f0890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55815d9f0990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55815d9f09f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55815d9f0ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55815d9f0a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55815d9f0910 'pthread_barrierattr_t'
|     `-Record 0x55815d9f0890 ''
|-TypedefDecl 0x55815d9f0bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55815d9f0b60 'long [8]' 8 
|   `-BuiltinType 0x55815d9720a0 'long'
|-EnumDecl 0x55815d9f0c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55815d9f0ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55815d9f0d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55815d9f0d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55815d9f0e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55815d9f0ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55815d9f0ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55815d9f0f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55815d9f0fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55815d9f0fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55815d9f0f98 <col:26> 'int' EnumConstant 0x55815d9f0e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55815d9f1058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55815d9f1040 <col:29> 'int'
| |   `-DeclRefExpr 0x55815d9f1020 <col:29> 'int' EnumConstant 0x55815d9f0ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55815d9f10e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55815d9f10c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55815d9f10a8 <col:30> 'int' EnumConstant 0x55815d9f0ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55815d9f1168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55815d9f1150 <col:27> 'int'
|     `-DeclRefExpr 0x55815d9f1130 <col:27> 'int' EnumConstant 0x55815d9f0fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55815d9f11b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55815d9f1288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55815d9f1310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55815d9f12f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55815d9f12d8 <col:30> 'int' EnumConstant 0x55815d9f1288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55815d9f1360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55815d9f13e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55815d9f13d0 <col:29> 'int'
|     `-DeclRefExpr 0x55815d9f13b0 <col:29> 'int' EnumConstant 0x55815d9f1360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55815d9f1438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55815d9f1508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55815d9f1570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55815d9f15c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55815d9f1610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55815d9f16d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55815d9f1728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55815d9f1778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55815d9f1800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55815d9f17e8 <col:31> 'int'
|     `-DeclRefExpr 0x55815d9f17c8 <col:31> 'int' EnumConstant 0x55815d9f16d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55815d9f1850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55815d9f1918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55815d9f1968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55815d9f19b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55815d9f1a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55815d9f1ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55815d9f1b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55815d9f1bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55815d9f1c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55815d9f1c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55815d9f1ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55815d9f1f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55815d9f1fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55815d9f20c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55815d9f2118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55815d9f21e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55815d9f2238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55815d9f2288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55815d9f2358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55815d9f23a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55815d9f29d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55815d9f24a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55815d9f25c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55815d9f27c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55815d9f2840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55815d9f2a98 <col:47>
| |-NonNullAttr 0x55815d9f2af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55815d9f2b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55815d9f2c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55815d9f2b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55815d9f2ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55815d9f2d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55815d9f2d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55815d9f3078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55815d9f2f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55815d9f3120 <col:60>
|-FunctionDecl 0x55815d9f3270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55815d9f3310 <col:54>
| `-ConstAttr 0x55815d9f3368 <col:95>
|-FunctionDecl 0x55815d9f3da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55815d9f33a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55815d9f3418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55815d9f3e50 <line:395:19>
| `-ConstAttr 0x55815d9f3ea8 <col:60>
|-FunctionDecl 0x55815d9f4078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55815d9f3f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55815d9f4120 <col:71>
| `-NonNullAttr 0x55815d9f4178 <col:112, col:126> 1
|-FunctionDecl 0x55815d9f4280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55815d9f41c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55815d9f4328 <line:398:22>
| `-NonNullAttr 0x55815d9f4380 <col:63, col:77> 1
|-FunctionDecl 0x55815d9f45a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55815d9f43c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55815d9f4448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55815d9f4658 <line:401:22>
| `-NonNullAttr 0x55815d9f46b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55815d9f48b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55815d9f46f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55815d9f4778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55815d9f4968 <line:404:22>
| `-NonNullAttr 0x55815d9f49c0 <col:63, col:77> 1
|-FunctionDecl 0x55815d9f4c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55815d9f4a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55815d9f4ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55815d9f4cc8 <line:407:22>
| `-NonNullAttr 0x55815d9f4d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55815d9f5f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55815d9f5dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55815d9f5e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55815d9f6028 <line:410:22>
| `-NonNullAttr 0x55815d9f6080 <col:63, col:77> 1
|-FunctionDecl 0x55815d9f62b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55815d9f60c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55815d9f6158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55815d9f6368 <line:413:22>
| `-NonNullAttr 0x55815d9f63c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55815d9f65f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55815d9f6408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55815d9f6498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55815d9f66a8 <col:37>
| `-NonNullAttr 0x55815d9f6700 <col:78, col:95> 1 2
|-FunctionDecl 0x55815d9f68e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55815d9f6748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55815d9f67c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55815d9f6998 <line:419:22>
| `-NonNullAttr 0x55815d9f69f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55815d9f6b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55815d9f6a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55815d9f6ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55815d9f6c28 <line:421:22>
| `-NonNullAttr 0x55815d9f6c80 <col:63, col:77> 1
|-FunctionDecl 0x55815d9f7e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55815d9f6cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55815d9f6d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55815d9f7f08 <line:424:22>
| `-NonNullAttr 0x55815d9f7f60 <col:63, col:80> 1 2
|-FunctionDecl 0x55815d9f80e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55815d9f7fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55815d9f8028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55815d9f8198 <line:427:22>
| `-NonNullAttr 0x55815d9f81f0 <col:63, col:77> 1
|-FunctionDecl 0x55815d9f8398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55815d9f8238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55815d9f82b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55815d9f8448 <line:430:22>
| `-NonNullAttr 0x55815d9f84a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55815d9f8628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55815d9f84e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55815d9f8568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55815d9f86d8 <line:432:22>
| `-NonNullAttr 0x55815d9f8730 <col:63, col:77> 1
|-FunctionDecl 0x55815d9f8958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55815d9f8778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55815d9f87f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55815d9f8a08 <line:435:22>
| |-NonNullAttr 0x55815d9f8a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55815d9f8a98 <col:100> "" ""
|-FunctionDecl 0x55815d9f8ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55815d9f8ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55815d9f8b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55815d9f8d58 <line:438:22>
| |-NonNullAttr 0x55815d9f8db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x55815d9f8df8 <col:97> "" ""
|-FunctionDecl 0x55815d9f8fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55815d9f8e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55815d9f8ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55815d9f9098 <line:441:22>
| `-NonNullAttr 0x55815d9f90f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55815d9f9270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55815d9f9138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55815d9f91b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55815d9f9320 <line:444:22>
| `-NonNullAttr 0x55815d9f9378 <col:63, col:77> 1
|-FunctionDecl 0x55815d9f9668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55815d9f93c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55815d9f9448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55815d9f94c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55815d9f9720 <line:448:22>
| `-NonNullAttr 0x55815d9f9778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55815d9f9a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55815d9f97d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55815d9f9850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55815d9f98c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55815d9f9ae0 <col:43>
| `-NonNullAttr 0x55815d9f9b38 <col:84, col:98> 1
|-FunctionDecl 0x55815d9f9e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55815d9f9b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55815d9f9c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55815d9f9c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55815d9f9ef8 <line:453:22>
| `-NonNullAttr 0x55815d9f9f50 <col:63, col:77> 3
|-FunctionDecl 0x55815d9fa228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55815d9f9f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55815d9fa018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55815d9fa0a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55815d9fa2e0 <line:457:22>
| `-NonNullAttr 0x55815d9fa338 <col:63, col:80> 2 3
|-FunctionDecl 0x55815d9fa528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55815d9fa388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55815d9fa408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55815d9fa5d8 <line:459:22>
|-FunctionDecl 0x55815d9fa9a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55815d9fa6a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55815d9fa840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55815d9faa58 <col:52, col:69> 1 2
|-FunctionDecl 0x55815d9fac00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55815d9faae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55815d9fab60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55815d9fae10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55815d9facc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55815d9fad48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55815d9faf68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55815d9faed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55815d9fb0a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55815d9fb148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55815d9fb1f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55815d9fb2e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55815d9fb350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55815d9fb520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix009_tso.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55815d9fb618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55815d9fb6d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55815d9fb670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55815d9fb1d0 '__pthread_unwind_buf_t'
| |   `-Record 0x55815d9fb148 ''
| `-AlignedAttr 0x55815d9fb728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55815d9fb7a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55815d9fb900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55815d9fb968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55815d9fb9d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55815d9fba38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55815d9fbc40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55815d9fbb30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55815d9fbe20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55815d9fbcf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55815d9fbfe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55815d9fbed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55815d9fc088 <line:488:22>
|-RecordDecl 0x55815d9fc0e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55815d9fc3f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55815d9fc258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55815d9fc2d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55815d9fc4a8 <col:86>
| `-ReturnsTwiceAttr 0x55815d9fc500 <col:12> Implicit
|-FunctionDecl 0x55815d9fc828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55815d9fc5d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55815d9fc6e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55815d9fc8d8 <line:494:22>
| `-NonNullAttr 0x55815d9fc930 <col:63, col:77> 1
|-FunctionDecl 0x55815d9fcaa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55815d9fc978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55815d9fcb50 <line:496:22>
| `-NonNullAttr 0x55815d9fcba8 <col:63, col:77> 1
|-FunctionDecl 0x55815d9fccb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55815d9fcbf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55815d9fcd58 <line:498:22>
| `-NonNullAttr 0x55815d9fcdb0 <col:52, col:66> 1
|-FunctionDecl 0x55815d9fcee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55815d9fce30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55815d9fcf90 <line:500:22>
| `-NonNullAttr 0x55815d9fcfe8 <col:52, col:66> 1
|-FunctionDecl 0x55815d9fd228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55815d9fd038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55815d9fd0c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55815d9fd2d8 <col:36>
| `-NonNullAttr 0x55815d9fd330 <col:66, col:83> 1 2
|-FunctionDecl 0x55815d9fd430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55815d9fd378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55815d9fd4d8 <line:505:22>
| `-NonNullAttr 0x55815d9fd530 <col:52, col:66> 1
|-FunctionDecl 0x55815d9fd7c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55815d9fd5e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55815d9fd660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55815d9fd878 <line:509:22>
| `-NonNullAttr 0x55815d9fd8d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55815d9fdb98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55815d9fd918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55815d9fd998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55815d9fda18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55815d9fdc50 <line:513:22>
| `-NonNullAttr 0x55815d9fdca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55815d9fde40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55815d9fdcf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55815d9fdee8 <line:515:22>
| `-NonNullAttr 0x55815d9fdf40 <col:63, col:77> 1
|-FunctionDecl 0x55815d9fe128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55815d9fdff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55815d9fe1d0 <line:517:22>
| `-NonNullAttr 0x55815d9fe228 <col:63, col:77> 1
|-FunctionDecl 0x55815d9fe330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55815d9fe278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55815d9fe3d8 <line:519:22>
| `-NonNullAttr 0x55815d9fe430 <col:63, col:77> 1
|-FunctionDecl 0x55815d9fe658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55815d9fe478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55815d9fe4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55815d9fe708 <line:523:22>
| `-NonNullAttr 0x55815d9fe760 <col:63, col:80> 1 2
|-FunctionDecl 0x55815d9fe968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55815d9fe7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55815d9fe828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55815d9fea18 <line:526:22>
| `-NonNullAttr 0x55815d9fea70 <col:63, col:77> 1
|-FunctionDecl 0x55815d9fec18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55815d9feab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55815d9feb38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55815d9fecc8 <line:529:22>
| `-NonNullAttr 0x55815d9fed20 <col:63, col:80> 1 2
|-FunctionDecl 0x55815d9fff20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55815d9fed68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55815d9ffe60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55815d9fffd0 <line:531:22>
| `-NonNullAttr 0x55815da00028 <col:63, col:77> 1
|-FunctionDecl 0x55815da001d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55815da00078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55815da000f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55815da00288 <line:535:22>
| `-NonNullAttr 0x55815da002e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55815da00468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55815da00328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55815da003a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55815da00518 <line:538:22>
| `-NonNullAttr 0x55815da00570 <col:63, col:77> 1
|-FunctionDecl 0x55815da00718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55815da005b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55815da00638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55815da007c8 <line:542:22>
| `-NonNullAttr 0x55815da00820 <col:63, col:80> 1 2
|-FunctionDecl 0x55815da009a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55815da00868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55815da008e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55815da00a58 <line:545:22>
| `-NonNullAttr 0x55815da00ab0 <col:63, col:77> 1
|-FunctionDecl 0x55815da00c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55815da00af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55815da00b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55815da00d48 <line:548:22>
| `-NonNullAttr 0x55815da00da0 <col:63, col:80> 1 2
|-FunctionDecl 0x55815da01f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55815da00de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55815da01e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55815da02008 <line:551:22>
| `-NonNullAttr 0x55815da02060 <col:63, col:77> 1
|-FunctionDecl 0x55815da02398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55815da02140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55815da02250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55815da02448 <col:29>
| `-NonNullAttr 0x55815da024a0 <col:70, col:84> 1
|-FunctionDecl 0x55815da02618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55815da024e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55815da026c0 <line:556:22>
| `-NonNullAttr 0x55815da02718 <col:63, col:77> 1
|-FunctionDecl 0x55815da02820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55815da02768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55815da028c8 <line:558:22>
| `-NonNullAttr 0x55815da02920 <col:52, col:66> 1
|-FunctionDecl 0x55815da02a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55815da02968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55815da02ac8 <line:560:19>
| `-NonNullAttr 0x55815da02b20 <col:49, col:63> 1
|-FunctionDecl 0x55815da02d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55815da02b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55815da02bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55815da02e08 <col:39>
| `-NonNullAttr 0x55815da02e90 <col:69, col:86> 1 2
|-FunctionDecl 0x55815da02f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55815da02ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55815da03038 <line:565:22>
| `-NonNullAttr 0x55815da03090 <col:52, col:66> 1
|-FunctionDecl 0x55815da03190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55815da030d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55815da03238 <line:567:22>
| `-NonNullAttr 0x55815da03290 <col:52, col:66> 1
|-FunctionDecl 0x55815da03448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55815da032d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55815da03368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55815da034f8 <col:39>
| `-NonNullAttr 0x55815da03550 <col:69, col:86> 1 2
|-FunctionDecl 0x55815da03650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55815da03598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55815da036f8 <line:572:22>
| `-NonNullAttr 0x55815da03750 <col:52, col:66> 1
|-FunctionDecl 0x55815da03938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55815da03800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55815da039e0 <line:574:22>
| `-NonNullAttr 0x55815da03a38 <col:63, col:77> 1
|-FunctionDecl 0x55815da03b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55815da03a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55815da03be8 <line:576:22>
| `-NonNullAttr 0x55815da03c40 <col:63, col:77> 1
|-FunctionDecl 0x55815da03ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55815da03c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55815da03d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55815da03f50 <line:580:22>
| `-NonNullAttr 0x55815da03fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x55815da041b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55815da03ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55815da04078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55815da04268 <line:583:22>
| `-NonNullAttr 0x55815da042c0 <col:63, col:77> 1
|-FunctionDecl 0x55815da04468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55815da04308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55815da04388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55815da04518 <line:587:22>
| `-NonNullAttr 0x55815da04570 <col:63, col:80> 1 2
|-FunctionDecl 0x55815da046f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55815da045b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55815da04638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55815da047a8 <col:36>
| `-NonNullAttr 0x55815da04800 <col:77, col:91> 1
|-FunctionDecl 0x55815da04b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55815da048e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55815da049f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55815da04be8 <line:592:22>
| `-NonNullAttr 0x55815da04c40 <col:63, col:77> 1
|-FunctionDecl 0x55815da04db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55815da04c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55815da04e60 <line:594:22>
| `-NonNullAttr 0x55815da04ee0 <col:63, col:77> 1
|-FunctionDecl 0x55815da04fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55815da04f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55815da05088 <line:596:22>
| `-NonNullAttr 0x55815da050e0 <col:52, col:66> 1
|-FunctionDecl 0x55815da051e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55815da05128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55815da05288 <line:598:22>
| `-NonNullAttr 0x55815da052e0 <col:52, col:66> 1
|-FunctionDecl 0x55815da05508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55815da05328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55815da053a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55815da055b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55815da058e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55815da05638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55815da056b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55815da05740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55815da059a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55815da05bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55815da05a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55815da05c60 <line:607:22>
| `-NonNullAttr 0x55815da05cb8 <col:63, col:77> 1
|-FunctionDecl 0x55815da05dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55815da05d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55815da05e68 <line:609:22>
| `-NonNullAttr 0x55815da05ef0 <col:63, col:77> 1
|-FunctionDecl 0x55815da06118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55815da05f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55815da05fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55815da061c8 <line:613:22>
| `-NonNullAttr 0x55815da06220 <col:63, col:80> 1 2
|-FunctionDecl 0x55815da06428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55815da06268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55815da062e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55815da064d8 <col:37>
| `-NonNullAttr 0x55815da06530 <col:78, col:92> 1
|-FunctionDecl 0x55815da06748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55815da06578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55815da06620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55815da067f8 <line:619:22>
| `-NonNullAttr 0x55815da06850 <col:63, col:80> 1 2
|-FunctionDecl 0x55815da06a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55815da06898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55815da06910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55815da06ac8 <line:622:22>
| `-NonNullAttr 0x55815da06b20 <col:63, col:77> 1
|-FunctionDecl 0x55815da06dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55815da06c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55815da06c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55815da06e78 <line:624:22>
| `-NonNullAttr 0x55815da06f00 <col:63, col:77> 1
|-FunctionDecl 0x55815da07078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55815da06f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55815da07120 <line:626:22>
| `-NonNullAttr 0x55815da07178 <col:63, col:77> 1
|-FunctionDecl 0x55815da07280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55815da071c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55815da07328 <line:628:22>
| `-NonNullAttr 0x55815da07380 <col:52, col:66> 1
|-FunctionDecl 0x55815da07480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55815da073c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55815da07528 <line:630:22>
| `-NonNullAttr 0x55815da07580 <col:52, col:66> 1
|-FunctionDecl 0x55815da07680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55815da075c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55815da07728 <line:632:22>
| `-NonNullAttr 0x55815da07780 <col:52, col:66> 1
|-FunctionDecl 0x55815da07b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55815da07860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55815da07970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55815da079f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55815da07c10 <line:636:22>
| `-NonNullAttr 0x55815da07c68 <col:63, col:77> 1
|-FunctionDecl 0x55815da07de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55815da07cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55815da07e90 <line:638:22>
| `-NonNullAttr 0x55815da07f10 <col:63, col:77> 1
|-FunctionDecl 0x55815da08010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55815da07f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55815da080b8 <line:640:22>
| `-NonNullAttr 0x55815da08110 <col:52, col:66> 1
|-FunctionDecl 0x55815da082f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55815da081c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55815da083a0 <line:642:22>
| `-NonNullAttr 0x55815da083f8 <col:63, col:77> 1
|-FunctionDecl 0x55815da08500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55815da08448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55815da085a8 <line:644:22>
| `-NonNullAttr 0x55815da08600 <col:63, col:77> 1
|-FunctionDecl 0x55815da08828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55815da08648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55815da086c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55815da088d8 <line:648:22>
| `-NonNullAttr 0x55815da08930 <col:63, col:80> 1 2
|-FunctionDecl 0x55815da08b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55815da08978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55815da089f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55815da08be8 <line:651:22>
| `-NonNullAttr 0x55815da08c40 <col:63, col:77> 1
|-FunctionDecl 0x55815da08fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55815da08d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55815da08e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55815da09058 <line:654:22>
| `-NonNullAttr 0x55815da090b0 <col:63, col:77> 1
|-FunctionDecl 0x55815da09208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55815da090f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55815da092b0 <col:69>
|-FunctionDecl 0x55815da09428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55815da09318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55815da094d0 <col:72>
|-FunctionDecl 0x55815da09708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55815da09538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55815da095e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55815da097b8 <col:44>
|-FunctionDecl 0x55815da099d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55815da09820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55815da09898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55815da09a88 <line:661:22>
| `-NonNullAttr 0x55815da09ae0 <col:63, col:77> 2
|-FunctionDecl 0x55815da0af50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55815da09bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55815da09cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55815da09de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55815da0b008 <col:47>
|-FunctionDecl 0x55815da0b110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55815da0b078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55815da0b268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55815da0b1d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55815da0b330 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55815da0b3f0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55815da0b4b0 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55815da0b568 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55815da0b5e8 prev 0x55815da0b568 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55815da0b650 <col:24> 'int' 0
|-VarDecl 0x55815da0b688 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55815da0b708 prev 0x55815da0b688 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55815da0b770 <col:27> 'int' 0
|-VarDecl 0x55815da0b7a8 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55815da0b828 prev 0x55815da0b7a8 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55815da0b890 <col:27> 'int' 0
|-VarDecl 0x55815da0b8c8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55815da0b948 prev 0x55815da0b8c8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55815da0b9b0 <col:27> 'int' 0
|-VarDecl 0x55815da0b9e8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55815da0ba68 prev 0x55815da0b9e8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55815da0bad0 <col:27> 'int' 0
|-VarDecl 0x55815da0bb00 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55815da0bb78 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55815da0bbf8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x55815da0bc78 prev 0x55815da0bbf8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55815da0bce0 <col:9> 'int' 0
|-VarDecl 0x55815da0bd18 <line:685:1, col:5> col:5 used y 'int'
|-VarDecl 0x55815da0bd98 prev 0x55815da0bd18 <line:686:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55815da0be00 <col:9> 'int' 0
|-VarDecl 0x55815da0be30 <line:687:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55815da0bf20 <line:688:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55815da0bf98 <line:689:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55815da0c010 <line:690:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55815da0c088 <line:691:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55815da0c100 <line:692:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55815da0c178 <line:693:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55815da0c1f0 <line:694:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55815da0c268 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55815da0c2e8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55815da0c368 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55815da0c3e0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55815da0c460 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55815da0c4d8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55815da0c558 <line:701:1, col:5> col:5 used z 'int'
|-VarDecl 0x55815da0c5d8 prev 0x55815da0c558 <line:702:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55815da0c640 <col:9> 'int' 0
|-VarDecl 0x55815da0c670 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55815da0c6e8 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55815da0c800 prev 0x55815da0b110 <line:705:1, line:738:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55815da0c768 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55815da0f9b8 <line:706:1, line:738:1>
|   |-CallExpr 0x55815da0c918 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55815da0c900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da0c8a8 <col:3> 'void ()' Function 0x55815d9b24b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55815da0c978 <line:708:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55815da0c938 <col:3> 'int' lvalue Var 0x55815da0c5d8 'z' 'int'
|   | `-IntegerLiteral 0x55815da0c958 <col:7> 'int' 1
|   |-CallExpr 0x55815da0c9d0 <line:709:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55815da0c9b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da0c998 <col:3> 'void ()' Function 0x55815d9b2570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55815da0ca28 <line:710:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55815da0ca10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da0c9f0 <col:3> 'void ()' Function 0x55815d9b24b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55815da0ca88 <line:711:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55815da0ca48 <col:3> 'int' lvalue Var 0x55815da0bc78 'x' 'int'
|   | `-IntegerLiteral 0x55815da0ca68 <col:7> 'int' 1
|   |-CallExpr 0x55815da0cae0 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55815da0cac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da0caa8 <col:3> 'void ()' Function 0x55815d9b2570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55815da0cb38 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55815da0cb20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da0cb00 <col:3> 'void ()' Function 0x55815d9b24b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55815da0cbb0 <line:714:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55815da0cb58 <col:3> 'int' lvalue Var 0x55815da0b708 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55815da0cb98 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55815da0cb78 <col:25> 'int' lvalue Var 0x55815da0bc78 'x' 'int'
|   |-CallExpr 0x55815da0cc08 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55815da0cbf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da0cbd0 <col:3> 'void ()' Function 0x55815d9b2570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55815da0cc60 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55815da0cc48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da0cc28 <col:3> 'void ()' Function 0x55815d9b24b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55815da0cd28 <line:717:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55815da0cc80 <col:3> '_Bool' lvalue Var 0x55815da0c670 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55815da0cd08 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55815da0ccf0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55815da0cca0 <col:19> '_Bool (void)' Function 0x55815d9b1c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55815da0cdc0 <line:718:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55815da0cd48 <col:3> '_Bool' lvalue Var 0x55815da0c6e8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55815da0cda0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55815da0cd88 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55815da0cd68 <col:19> '_Bool (void)' Function 0x55815d9b1c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55815da0ce38 <line:719:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55815da0cde0 <col:3> '_Bool' lvalue Var 0x55815da0be30 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55815da0ce20 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55815da0ce00 <col:21> '_Bool' lvalue Var 0x55815da0c6e8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55815da0ceb0 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55815da0ce58 <col:3> 'int' lvalue Var 0x55815da0bf20 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55815da0ce98 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55815da0ce78 <col:15> 'int' lvalue Var 0x55815da0bd98 'y' 'int'
|   |-BinaryOperator 0x55815da0d308 <line:721:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55815da0ced0 <col:3> 'int' lvalue Var 0x55815da0bd98 'y' 'int'
|   | `-ConditionalOperator 0x55815da0d2d8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55815da0d100 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55815da0d020 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55815da0cf48 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55815da0cf30 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55815da0cef0 <col:8> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55815da0d000 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55815da0cf98 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55815da0cf80 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55815da0cf60 <col:27> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55815da0cfe8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55815da0cfd0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55815da0cfb0 <col:46> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55815da0d0e0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55815da0d078 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55815da0d060 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55815da0d040 <col:65> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55815da0d0c8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55815da0d0b0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55815da0d090 <col:84> '_Bool' lvalue Var 0x55815da0c178 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55815da0d2c0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55815da0d120 <col:101> 'int' lvalue Var 0x55815da0bd98 'y' 'int'
|   |   `-ParenExpr 0x55815da0d2a0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55815da0d270 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55815da0d1e0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55815da0d198 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55815da0d180 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55815da0d140 <col:106> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55815da0d1c8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55815da0d1b0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55815da0d160 <col:124> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55815da0d240 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55815da0d200 <col:141> 'int' lvalue Var 0x55815da0c368 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55815da0d258 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55815da0d220 <col:153> 'int' lvalue Var 0x55815da0c460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55815da0d818 <line:722:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55815da0d328 <col:3> 'int' lvalue Var 0x55815da0c368 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55815da0d7e8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55815da0d7b8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55815da0d7a0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55815da0d348 <col:15> '_Bool' lvalue Var 0x55815da0c6e8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55815da0d7d0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55815da0d368 <col:31> 'int' lvalue Var 0x55815da0c368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55815da0d780 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55815da0d750 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55815da0d578 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55815da0d498 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55815da0d3c0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55815da0d3a8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55815da0d388 <col:45> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55815da0d478 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55815da0d410 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55815da0d3f8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55815da0d3d8 <col:64> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55815da0d460 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55815da0d448 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55815da0d428 <col:83> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55815da0d558 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55815da0d4f0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55815da0d4d8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55815da0d4b8 <col:102> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55815da0d540 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55815da0d528 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55815da0d508 <col:121> '_Bool' lvalue Var 0x55815da0c178 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55815da0d738 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55815da0d598 <col:138> 'int' lvalue Var 0x55815da0c368 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55815da0d718 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55815da0d6e8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55815da0d658 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55815da0d610 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55815da0d5f8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55815da0d5b8 <col:151> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55815da0d640 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55815da0d628 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55815da0d5d8 <col:169> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55815da0d6b8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55815da0d678 <col:186> 'int' lvalue Var 0x55815da0c368 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55815da0d6d0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55815da0d698 <col:198> 'int' lvalue Var 0x55815da0c368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55815da0dd28 <line:723:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55815da0d838 <col:3> 'int' lvalue Var 0x55815da0c460 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55815da0dcf8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55815da0dcc8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55815da0dcb0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55815da0d858 <col:15> '_Bool' lvalue Var 0x55815da0c6e8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55815da0dce0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55815da0d878 <col:31> 'int' lvalue Var 0x55815da0c460 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55815da0dc90 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55815da0dc60 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55815da0da88 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55815da0d9a8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55815da0d8d0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55815da0d8b8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55815da0d898 <col:45> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55815da0d988 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55815da0d920 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55815da0d908 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55815da0d8e8 <col:64> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55815da0d970 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55815da0d958 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55815da0d938 <col:83> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55815da0da68 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55815da0da00 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55815da0d9e8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55815da0d9c8 <col:102> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55815da0da50 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55815da0da38 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55815da0da18 <col:121> '_Bool' lvalue Var 0x55815da0c178 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55815da0dc48 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55815da0daa8 <col:138> 'int' lvalue Var 0x55815da0c460 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55815da0dc28 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55815da0dbf8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55815da0db68 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55815da0db20 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55815da0db08 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55815da0dac8 <col:151> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55815da0db50 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55815da0db38 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55815da0dae8 <col:169> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55815da0dbc8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55815da0db88 <col:186> 'int' lvalue Var 0x55815da0c460 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55815da0dbe0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55815da0dba8 <col:198> 'int' lvalue Var 0x55815da0c460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55815da0e2e8 <line:724:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55815da0dd48 <col:3> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55815da0e2d0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55815da0e2a0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55815da0e258 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55815da0e240 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55815da0dd68 <col:20> '_Bool' lvalue Var 0x55815da0c6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55815da0e288 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55815da0e270 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55815da0dd88 <col:36> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55815da0e220 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55815da0e1f0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55815da0dfb0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55815da0deb8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55815da0dde0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55815da0ddc8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55815da0dda8 <col:55> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55815da0de98 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55815da0de30 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55815da0de18 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55815da0ddf8 <col:74> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55815da0de80 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55815da0de68 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55815da0de48 <col:93> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55815da0df90 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55815da0df10 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55815da0def8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55815da0ded8 <col:112> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55815da0df78 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55815da0df60 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55815da0df40 <col:131> '_Bool' lvalue Var 0x55815da0c178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55815da0e1d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55815da0e1c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55815da0dfd0 <col:148> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55815da0e1a0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55815da0e170 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55815da0e090 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55815da0e048 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55815da0e030 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55815da0dff0 <col:166> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55815da0e078 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55815da0e060 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55815da0e010 <col:184> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55815da0e128 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55815da0e0e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55815da0e0b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55815da0e158 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55815da0e140 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55815da0e108 <col:212> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55815da0e8b0 <line:725:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55815da0e308 <col:3> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55815da0e898 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55815da0e868 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55815da0e820 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55815da0e808 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55815da0e328 <col:20> '_Bool' lvalue Var 0x55815da0c6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55815da0e850 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55815da0e838 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55815da0e348 <col:36> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55815da0e7e8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55815da0e7b8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55815da0e558 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55815da0e478 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55815da0e3a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55815da0e388 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55815da0e368 <col:55> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55815da0e458 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55815da0e3f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55815da0e3d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55815da0e3b8 <col:74> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55815da0e440 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55815da0e428 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55815da0e408 <col:93> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55815da0e538 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55815da0e4d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55815da0e4b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55815da0e498 <col:112> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55815da0e520 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55815da0e508 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55815da0e4e8 <col:131> '_Bool' lvalue Var 0x55815da0c178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55815da0e7a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55815da0e788 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55815da0e578 <col:148> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55815da0e768 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55815da0e738 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55815da0e638 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55815da0e5f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55815da0e5d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55815da0e598 <col:166> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55815da0e620 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55815da0e608 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55815da0e5b8 <col:184> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55815da0e708 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55815da0e688 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55815da0e658 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55815da0e720 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55815da0e6e0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55815da0e6b0 <col:219> 'int' 0
|   |-BinaryOperator 0x55815da0ee58 <line:726:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55815da0e8d0 <col:3> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55815da0ee40 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55815da0ee10 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55815da0edc8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55815da0edb0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55815da0e8f0 <col:20> '_Bool' lvalue Var 0x55815da0c6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55815da0edf8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55815da0ede0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55815da0e910 <col:36> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55815da0ed90 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55815da0ed60 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55815da0eb20 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55815da0ea40 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55815da0e968 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55815da0e950 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55815da0e930 <col:55> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55815da0ea20 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55815da0e9b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55815da0e9a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55815da0e980 <col:74> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55815da0ea08 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55815da0e9f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55815da0e9d0 <col:93> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55815da0eb00 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55815da0ea98 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55815da0ea80 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55815da0ea60 <col:112> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55815da0eae8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55815da0ead0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55815da0eab0 <col:131> '_Bool' lvalue Var 0x55815da0c178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55815da0ed48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55815da0ed30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55815da0eb40 <col:148> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55815da0ed10 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55815da0ece0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55815da0ec00 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55815da0ebb8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55815da0eba0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55815da0eb60 <col:166> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55815da0ebe8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55815da0ebd0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55815da0eb80 <col:184> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55815da0ec98 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55815da0ec50 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55815da0ec20 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55815da0ecc8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55815da0ecb0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55815da0ec78 <col:212> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55815da0f448 <line:727:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55815da0ee78 <col:3> '_Bool' lvalue Var 0x55815da0c178 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55815da0f430 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55815da0f400 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55815da0f3b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55815da0f3a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55815da0ee98 <col:20> '_Bool' lvalue Var 0x55815da0c6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55815da0f3e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55815da0f3d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55815da0eeb8 <col:36> '_Bool' lvalue Var 0x55815da0c178 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55815da0f380 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55815da0f350 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55815da0f0f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55815da0f010 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55815da0ef10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55815da0eef8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55815da0eed8 <col:55> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55815da0eff0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55815da0ef88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55815da0ef70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55815da0ef50 <col:74> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55815da0efd8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55815da0efc0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55815da0efa0 <col:93> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55815da0f0d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55815da0f068 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55815da0f050 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55815da0f030 <col:112> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55815da0f0b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55815da0f0a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55815da0f080 <col:131> '_Bool' lvalue Var 0x55815da0c178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55815da0f338 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55815da0f320 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55815da0f110 <col:148> '_Bool' lvalue Var 0x55815da0c178 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55815da0f300 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55815da0f2d0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55815da0f1d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55815da0f188 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55815da0f170 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55815da0f130 <col:166> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55815da0f1b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55815da0f1a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55815da0f150 <col:184> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55815da0f2a0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55815da0f220 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55815da0f1f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55815da0f2b8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55815da0f278 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55815da0f248 <col:219> 'int' 0
|   |-BinaryOperator 0x55815da0f4c0 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55815da0f468 <col:3> 'int' lvalue Var 0x55815da0b828 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55815da0f4a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55815da0f488 <col:25> 'int' lvalue Var 0x55815da0bd98 'y' 'int'
|   |-BinaryOperator 0x55815da0f5f0 <line:729:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55815da0f4e0 <col:3> 'int' lvalue Var 0x55815da0bd98 'y' 'int'
|   | `-ConditionalOperator 0x55815da0f5c0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55815da0f578 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55815da0f560 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55815da0f500 <col:7> '_Bool' lvalue Var 0x55815da0be30 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55815da0f590 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55815da0f520 <col:25> 'int' lvalue Var 0x55815da0bf20 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55815da0f5a8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55815da0f540 <col:37> 'int' lvalue Var 0x55815da0bd98 'y' 'int'
|   |-BinaryOperator 0x55815da0f688 <line:730:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55815da0f610 <col:3> '_Bool' lvalue Var 0x55815da0be30 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55815da0f660 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55815da0f630 <col:28> 'int' 0
|   |-CallExpr 0x55815da0f6e0 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55815da0f6c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da0f6a8 <col:3> 'void ()' Function 0x55815d9b2570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55815da0f738 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55815da0f720 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da0f700 <col:3> 'void ()' Function 0x55815d9b24b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55815da0f790 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55815da0f778 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da0f758 <col:3> 'void ()' Function 0x55815d9b2570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55815da0f7e8 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55815da0f7d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da0f7b0 <col:3> 'void ()' Function 0x55815d9b24b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55815da0f8a0 <line:735:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55815da0f808 <col:3> 'int' lvalue Var 0x55815da0b5e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55815da0f880 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55815da0f868 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55815da0f828 <col:22> 'int' lvalue Var 0x55815da0b5e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55815da0f848 <col:41> 'int' 1
|   |-CallExpr 0x55815da0f8f8 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55815da0f8e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da0f8c0 <col:3> 'void ()' Function 0x55815d9b2570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55815da0f9a8 <line:737:3, col:36>
|     `-CallExpr 0x55815da0f988 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55815da0f970 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55815da0f918 <col:10> 'void *(void)' Function 0x55815d9b1fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55815da0fb70 prev 0x55815da0b268 <line:739:1, line:782:1> line:739:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55815da0fad8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55815da13d60 <line:740:1, line:782:1>
|   |-CallExpr 0x55815da0fc50 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55815da0fc38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da0fc18 <col:3> 'void ()' Function 0x55815d9b24b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55815da0fcc8 <line:742:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55815da0fc70 <col:3> 'int' lvalue Var 0x55815da0c460 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55815da0fcb0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55815da0fc90 <col:15> 'int' lvalue Var 0x55815da0c368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55815da0fd28 <line:743:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55815da0fce8 <col:3> 'int' lvalue Var 0x55815da0c368 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55815da0fd08 <col:15> 'int' 1
|   |-BinaryOperator 0x55815da0fda0 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55815da0fd48 <col:3> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55815da0fd88 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55815da0fd68 <col:20> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55815da0fe38 <line:745:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55815da0fdc0 <col:3> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55815da0fe10 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55815da0fde0 <col:27> 'int' 1
|   |-CallExpr 0x55815da0ffe8 <line:746:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55815da0ffd0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55815da0fe58 <col:3> 'void (int)' Function 0x55815d9b2238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55815da0ff80 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55815da0ff60 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55815da0ff18 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55815da0fed0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55815da0feb8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55815da0fe78 <col:23> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55815da0ff00 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55815da0fee8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55815da0fe98 <col:41> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55815da10068 <line:747:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55815da10010 <col:3> '_Bool' lvalue Var 0x55815da0c100 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55815da10050 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55815da10030 <col:20> '_Bool' lvalue Var 0x55815da0bf98 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55815da100e0 <line:748:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55815da10088 <col:3> '_Bool' lvalue Var 0x55815da0c178 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55815da100c8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55815da100a8 <col:20> '_Bool' lvalue Var 0x55815da0c010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55815da10158 <line:749:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55815da10100 <col:3> '_Bool' lvalue Var 0x55815da0c1f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55815da10140 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55815da10120 <col:20> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55815da101f0 <line:750:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55815da10178 <col:3> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55815da101c8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55815da10198 <col:27> 'int' 1
|   |-CallExpr 0x55815da10248 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55815da10230 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da10210 <col:3> 'void ()' Function 0x55815d9b2570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55815da102a0 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55815da10288 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da10268 <col:3> 'void ()' Function 0x55815d9b24b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55815da10338 <line:753:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55815da102c0 <col:3> '_Bool' lvalue Var 0x55815da0c670 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55815da10318 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55815da10300 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55815da102e0 <col:19> '_Bool (void)' Function 0x55815d9b1c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55815da103d0 <line:754:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55815da10358 <col:3> '_Bool' lvalue Var 0x55815da0c6e8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55815da103b0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55815da10398 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55815da10378 <col:19> '_Bool (void)' Function 0x55815d9b1c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55815da10448 <line:755:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55815da103f0 <col:3> '_Bool' lvalue Var 0x55815da0be30 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55815da10430 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55815da10410 <col:21> '_Bool' lvalue Var 0x55815da0c6e8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55815da104c0 <line:756:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55815da10468 <col:3> 'int' lvalue Var 0x55815da0bf20 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55815da104a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55815da10488 <col:15> 'int' lvalue Var 0x55815da0bd98 'y' 'int'
|   |-BinaryOperator 0x55815da108f8 <line:757:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55815da104e0 <col:3> 'int' lvalue Var 0x55815da0bd98 'y' 'int'
|   | `-ConditionalOperator 0x55815da108c8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55815da106f0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55815da10610 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55815da10538 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55815da10520 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55815da10500 <col:8> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55815da105f0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55815da10588 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55815da10570 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55815da10550 <col:27> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55815da105d8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55815da105c0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55815da105a0 <col:46> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55815da106d0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55815da10668 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55815da10650 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55815da10630 <col:65> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55815da106b8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55815da106a0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55815da10680 <col:84> '_Bool' lvalue Var 0x55815da0c1f0 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55815da108b0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55815da10710 <col:101> 'int' lvalue Var 0x55815da0bd98 'y' 'int'
|   |   `-ParenExpr 0x55815da10890 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55815da10860 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55815da107d0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55815da10788 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55815da10770 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55815da10730 <col:106> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55815da107b8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55815da107a0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55815da10750 <col:124> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55815da10830 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55815da107f0 <col:141> 'int' lvalue Var 0x55815da0c368 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55815da10848 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55815da10810 <col:153> 'int' lvalue Var 0x55815da0c460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55815da10e08 <line:758:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55815da10918 <col:3> 'int' lvalue Var 0x55815da0c368 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55815da10dd8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55815da10da8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55815da10d90 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55815da10938 <col:15> '_Bool' lvalue Var 0x55815da0c6e8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55815da10dc0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55815da10958 <col:31> 'int' lvalue Var 0x55815da0c368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55815da10d70 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55815da10d40 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55815da10b68 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55815da10a88 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55815da109b0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55815da10998 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55815da10978 <col:45> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55815da10a68 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55815da10a00 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55815da109e8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55815da109c8 <col:64> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55815da10a50 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55815da10a38 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55815da10a18 <col:83> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55815da10b48 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55815da10ae0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55815da10ac8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55815da10aa8 <col:102> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55815da10b30 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55815da10b18 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55815da10af8 <col:121> '_Bool' lvalue Var 0x55815da0c1f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55815da10d28 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55815da10b88 <col:138> 'int' lvalue Var 0x55815da0c368 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55815da10d08 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55815da10cd8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55815da10c48 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55815da10c00 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55815da10be8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55815da10ba8 <col:151> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55815da10c30 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55815da10c18 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55815da10bc8 <col:169> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55815da10ca8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55815da10c68 <col:186> 'int' lvalue Var 0x55815da0c368 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55815da10cc0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55815da10c88 <col:198> 'int' lvalue Var 0x55815da0c368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55815da11328 <line:759:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55815da10e28 <col:3> 'int' lvalue Var 0x55815da0c460 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55815da112f8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55815da112c8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55815da112b0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55815da10e48 <col:15> '_Bool' lvalue Var 0x55815da0c6e8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55815da112e0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55815da10e68 <col:31> 'int' lvalue Var 0x55815da0c460 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55815da11290 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55815da11260 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55815da11088 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55815da10fa8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55815da10ec0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55815da10ea8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55815da10e88 <col:45> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55815da10f88 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55815da10f10 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55815da10ef8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55815da10ed8 <col:64> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55815da10f70 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55815da10f48 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55815da10f28 <col:83> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55815da11068 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55815da11000 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55815da10fe8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55815da10fc8 <col:102> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55815da11050 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55815da11038 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55815da11018 <col:121> '_Bool' lvalue Var 0x55815da0c1f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55815da11248 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55815da110a8 <col:138> 'int' lvalue Var 0x55815da0c460 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55815da11228 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55815da111f8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55815da11168 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55815da11120 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55815da11108 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55815da110c8 <col:151> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55815da11150 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55815da11138 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55815da110e8 <col:169> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55815da111c8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55815da11188 <col:186> 'int' lvalue Var 0x55815da0c460 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55815da111e0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55815da111a8 <col:198> 'int' lvalue Var 0x55815da0c460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55815da118d0 <line:760:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55815da11348 <col:3> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55815da118b8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55815da11888 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55815da11840 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55815da11828 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55815da11368 <col:20> '_Bool' lvalue Var 0x55815da0c6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55815da11870 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55815da11858 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55815da11388 <col:36> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55815da11808 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55815da117d8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55815da11598 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55815da114b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55815da113e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55815da113c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55815da113a8 <col:55> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55815da11498 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55815da11430 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55815da11418 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55815da113f8 <col:74> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55815da11480 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55815da11468 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55815da11448 <col:93> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55815da11578 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55815da11510 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55815da114f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55815da114d8 <col:112> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55815da11560 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55815da11548 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55815da11528 <col:131> '_Bool' lvalue Var 0x55815da0c1f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55815da117c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55815da117a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55815da115b8 <col:148> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55815da11788 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55815da11758 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55815da11678 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55815da11630 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55815da11618 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55815da115d8 <col:166> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55815da11660 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55815da11648 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55815da115f8 <col:184> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55815da11710 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55815da116c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55815da11698 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55815da11740 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55815da11728 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55815da116f0 <col:212> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55815da11e98 <line:761:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55815da118f0 <col:3> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55815da11e80 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55815da11e50 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55815da11e08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55815da11df0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55815da11910 <col:20> '_Bool' lvalue Var 0x55815da0c6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55815da11e38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55815da11e20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55815da11930 <col:36> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55815da11dd0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55815da11da0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55815da11b40 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55815da11a60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55815da11988 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55815da11970 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55815da11950 <col:55> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55815da11a40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55815da119d8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55815da119c0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55815da119a0 <col:74> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55815da11a28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55815da11a10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55815da119f0 <col:93> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55815da11b20 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55815da11ab8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55815da11aa0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55815da11a80 <col:112> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55815da11b08 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55815da11af0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55815da11ad0 <col:131> '_Bool' lvalue Var 0x55815da0c1f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55815da11d88 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55815da11d70 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55815da11b60 <col:148> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55815da11d50 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55815da11d20 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55815da11c20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55815da11bd8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55815da11bc0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55815da11b80 <col:166> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55815da11c08 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55815da11bf0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55815da11ba0 <col:184> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55815da11cf0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55815da11c70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55815da11c40 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55815da11d08 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55815da11cc8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55815da11c98 <col:219> 'int' 0
|   |-BinaryOperator 0x55815da12458 <line:762:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55815da11eb8 <col:3> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55815da12440 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55815da12410 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55815da123c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55815da123b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55815da11ed8 <col:20> '_Bool' lvalue Var 0x55815da0c6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55815da123f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55815da123e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55815da11ef8 <col:36> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55815da12390 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55815da12360 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55815da12120 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55815da12040 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55815da11f50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55815da11f38 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55815da11f18 <col:55> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55815da12020 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55815da11fb8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55815da11fa0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55815da11f80 <col:74> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55815da12008 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55815da11ff0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55815da11fd0 <col:93> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55815da12100 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55815da12098 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55815da12080 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55815da12060 <col:112> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55815da120e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55815da120d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55815da120b0 <col:131> '_Bool' lvalue Var 0x55815da0c1f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55815da12348 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55815da12330 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55815da12140 <col:148> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55815da12310 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55815da122e0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55815da12200 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55815da121b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55815da121a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55815da12160 <col:166> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55815da121e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55815da121d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55815da12180 <col:184> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55815da12298 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55815da12250 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55815da12220 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55815da122c8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55815da122b0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55815da12278 <col:212> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55815da12a20 <line:763:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55815da12478 <col:3> '_Bool' lvalue Var 0x55815da0c1f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55815da12a08 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55815da129d8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55815da12990 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55815da12978 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55815da12498 <col:20> '_Bool' lvalue Var 0x55815da0c6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55815da129c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55815da129a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55815da124b8 <col:36> '_Bool' lvalue Var 0x55815da0c1f0 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55815da12958 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55815da12928 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55815da126c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55815da125e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55815da12510 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55815da124f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55815da124d8 <col:55> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55815da125c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55815da12560 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55815da12548 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55815da12528 <col:74> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55815da125b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55815da12598 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55815da12578 <col:93> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55815da126a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55815da12640 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55815da12628 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55815da12608 <col:112> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55815da12690 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55815da12678 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55815da12658 <col:131> '_Bool' lvalue Var 0x55815da0c1f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55815da12910 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55815da128f8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55815da126e8 <col:148> '_Bool' lvalue Var 0x55815da0c1f0 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55815da128d8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55815da128a8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55815da127a8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55815da12760 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55815da12748 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55815da12708 <col:166> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55815da12790 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55815da12778 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55815da12728 <col:184> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55815da12878 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55815da127f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55815da127c8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55815da12890 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55815da12850 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55815da12820 <col:219> 'int' 0
|   |-BinaryOperator 0x55815da12a98 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55815da12a40 <col:3> 'int' lvalue Var 0x55815da0b948 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55815da12a80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55815da12a60 <col:25> 'int' lvalue Var 0x55815da0bd98 'y' 'int'
|   |-BinaryOperator 0x55815da12bc8 <line:765:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55815da12ab8 <col:3> 'int' lvalue Var 0x55815da0bd98 'y' 'int'
|   | `-ConditionalOperator 0x55815da12b98 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55815da12b50 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55815da12b38 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55815da12ad8 <col:7> '_Bool' lvalue Var 0x55815da0be30 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55815da12b68 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55815da12af8 <col:25> 'int' lvalue Var 0x55815da0bf20 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55815da12b80 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55815da12b18 <col:37> 'int' lvalue Var 0x55815da0bd98 'y' 'int'
|   |-BinaryOperator 0x55815da12c60 <line:766:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55815da12be8 <col:3> '_Bool' lvalue Var 0x55815da0be30 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55815da12c38 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55815da12c08 <col:28> 'int' 0
|   |-CallExpr 0x55815da12cb8 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55815da12ca0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da12c80 <col:3> 'void ()' Function 0x55815d9b2570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55815da12d10 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55815da12cf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da12cd8 <col:3> 'void ()' Function 0x55815d9b24b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55815da12d88 <line:769:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55815da12d30 <col:3> 'int' lvalue Var 0x55815da0ba68 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55815da12d70 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55815da12d50 <col:25> 'int' lvalue Var 0x55815da0c5d8 'z' 'int'
|   |-CallExpr 0x55815da12de0 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55815da12dc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da12da8 <col:3> 'void ()' Function 0x55815d9b2570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55815da12e38 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55815da12e20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da12e00 <col:3> 'void ()' Function 0x55815d9b24b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55815da13138 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55815da12e58 <col:3> 'int' lvalue Var 0x55815da0bd98 'y' 'int'
|   | `-ConditionalOperator 0x55815da13108 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55815da12f18 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55815da12ed0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55815da12eb8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55815da12e78 <col:7> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55815da12f00 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55815da12ee8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55815da12e98 <col:25> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55815da130f0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55815da12f38 <col:42> 'int' lvalue Var 0x55815da0c368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55815da130d0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55815da130a0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55815da13010 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55815da12fc8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55815da12fb0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55815da12f58 <col:55> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55815da12ff8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55815da12fe0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55815da12f90 <col:73> '_Bool' lvalue Var 0x55815da0c1f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55815da13070 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55815da13030 <col:90> 'int' lvalue Var 0x55815da0c460 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55815da13088 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55815da13050 <col:102> 'int' lvalue Var 0x55815da0bd98 'y' 'int'
|   |-BinaryOperator 0x55815da13340 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55815da13158 <col:3> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55815da13328 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55815da132f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55815da13218 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55815da131d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55815da131b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55815da13178 <col:20> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55815da13200 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55815da131e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55815da13198 <col:38> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55815da132b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55815da13268 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55815da13238 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55815da132e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55815da132c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55815da13290 <col:66> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55815da13628 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55815da13360 <col:3> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55815da13610 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55815da135e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55815da13500 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55815da13420 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55815da133d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55815da133c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55815da13380 <col:20> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55815da13408 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55815da133f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55815da133a0 <col:38> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55815da134e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55815da13498 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55815da13480 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55815da13440 <col:56> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55815da134c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55815da134b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55815da13460 <col:74> '_Bool' lvalue Var 0x55815da0c1f0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55815da13598 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55815da13550 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55815da13520 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55815da135c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55815da135b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55815da13578 <col:102> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55815da13830 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55815da13648 <col:3> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55815da13818 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55815da137e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55815da13708 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55815da136c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55815da136a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55815da13668 <col:20> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55815da136f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55815da136d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55815da13688 <col:38> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55815da137a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55815da13758 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55815da13728 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55815da137d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55815da137b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55815da13780 <col:66> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55815da13b18 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55815da13850 <col:3> '_Bool' lvalue Var 0x55815da0c1f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55815da13b00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55815da13ad0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55815da139f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55815da13910 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55815da138c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55815da138b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55815da13870 <col:20> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55815da138f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55815da138e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55815da13890 <col:38> '_Bool' lvalue Var 0x55815da0c088 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55815da139d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55815da13988 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55815da13970 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55815da13930 <col:56> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55815da139b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55815da139a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55815da13950 <col:74> '_Bool' lvalue Var 0x55815da0c1f0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55815da13a88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55815da13a40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55815da13a10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55815da13ab8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55815da13aa0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55815da13a68 <col:102> '_Bool' lvalue Var 0x55815da0c1f0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55815da13b70 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55815da13b58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da13b38 <col:3> 'void ()' Function 0x55815d9b2570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55815da13bc8 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55815da13bb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da13b90 <col:3> 'void ()' Function 0x55815d9b24b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55815da13c80 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55815da13be8 <col:3> 'int' lvalue Var 0x55815da0b5e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55815da13c60 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55815da13c48 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55815da13c08 <col:22> 'int' lvalue Var 0x55815da0b5e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55815da13c28 <col:41> 'int' 1
|   |-CallExpr 0x55815da13cd8 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55815da13cc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55815da13ca0 <col:3> 'void ()' Function 0x55815d9b2570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55815da13d50 <line:781:3, col:36>
|     `-CallExpr 0x55815da13d30 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55815da13d18 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55815da13cf8 <col:10> 'void *(void)' Function 0x55815d9b1fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55815da13ed8 prev 0x55815da0b330 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x55815da13f78 <line:784:1, line:785:1>
|-FunctionDecl 0x55815da13fc0 prev 0x55815da0b3f0 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x55815da14060 <line:787:1, line:788:1>
|-FunctionDecl 0x55815da14090 prev 0x55815da0b4b0 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x55815da14130 <line:790:1, line:791:1>
`-FunctionDecl 0x55815da14198 <line:792:1, line:814:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x55815da15be0 <line:793:1, line:814:1>
    |-DeclStmt 0x55815da142b0 <line:794:3, col:17>
    | `-VarDecl 0x55815da14248 <col:3, col:13> col:13 used t257 'pthread_t':'unsigned long'
    |-CallExpr 0x55815da144b8 <line:795:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55815da144a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55815da142c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55815d9f29d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55815da14308 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55815da142e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55815da14248 't257' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55815da144f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55815da14380 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55815da14358 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55815da14320 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55815da14510 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55815da143a0 <col:38> 'void *(void *)' Function 0x55815da0c800 'P0' 'void *(void *)'
    | `-ParenExpr 0x55815da14420 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55815da143f8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55815da143c0 <col:51> 'int' 0
    |-DeclStmt 0x55815da145a0 <line:796:3, col:17>
    | `-VarDecl 0x55815da14538 <col:3, col:13> col:13 used t258 'pthread_t':'unsigned long'
    |-CallExpr 0x55815da14748 <line:797:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55815da14730 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55815da145b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55815d9f29d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55815da145f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55815da145d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55815da14538 't258' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55815da14788 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55815da14670 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55815da14648 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55815da14610 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55815da147a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55815da14690 <col:38> 'void *(void *)' Function 0x55815da0fb70 'P1' 'void *(void *)'
    | `-ParenExpr 0x55815da14710 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55815da146e8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55815da146b0 <col:51> 'int' 0
    |-CallExpr 0x55815da147f0 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55815da147d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55815da147b8 <col:3> 'void ()' Function 0x55815d9b24b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55815da148c0 <line:799:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55815da14810 <col:3> '_Bool' lvalue Var 0x55815da0bb00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55815da148a8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55815da14888 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55815da14870 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55815da14830 <col:21> 'int' lvalue Var 0x55815da0b5e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55815da14850 <col:41> 'int' 2
    |-CallExpr 0x55815da14918 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55815da14900 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55815da148e0 <col:3> 'void ()' Function 0x55815d9b2570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55815da14990 <line:801:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55815da14978 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55815da14938 <col:3> 'void (int)' Function 0x55815d9b1e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55815da149d0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55815da149b8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55815da14958 <col:21> '_Bool' lvalue Var 0x55815da0bb00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55815da14a20 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55815da14a08 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55815da149e8 <col:3> 'void ()' Function 0x55815d9b24b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55815da14d08 <line:803:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55815da14a40 <col:3> 'int' lvalue Var 0x55815da0bd98 'y' 'int'
    | `-ConditionalOperator 0x55815da14cd8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55815da14b00 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55815da14ab8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55815da14aa0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55815da14a60 <col:7> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55815da14ae8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55815da14ad0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55815da14a80 <col:25> '_Bool' lvalue Var 0x55815da0bf98 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55815da14cc0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55815da14b20 <col:42> 'int' lvalue Var 0x55815da0c368 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55815da14ca0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55815da14c70 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55815da14be0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55815da14b98 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55815da14b80 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55815da14b40 <col:55> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55815da14bc8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55815da14bb0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55815da14b60 <col:73> '_Bool' lvalue Var 0x55815da0c100 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55815da14c40 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55815da14c00 <col:90> 'int' lvalue Var 0x55815da0c460 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55815da14c58 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55815da14c20 <col:102> 'int' lvalue Var 0x55815da0bd98 'y' 'int'
    |-BinaryOperator 0x55815da14f10 <line:804:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55815da14d28 <col:3> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55815da14ef8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55815da14ec8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55815da14de8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55815da14da0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55815da14d88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55815da14d48 <col:20> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55815da14dd0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55815da14db8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55815da14d68 <col:38> '_Bool' lvalue Var 0x55815da0bf98 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55815da14e80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55815da14e38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55815da14e08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55815da14eb0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55815da14e98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55815da14e60 <col:66> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55815da15218 <line:805:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55815da14f30 <col:3> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55815da15200 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55815da151d0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55815da150f0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55815da15010 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55815da14fc8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55815da14fb0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55815da14f50 <col:20> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55815da14ff8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55815da14fe0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55815da14f70 <col:38> '_Bool' lvalue Var 0x55815da0bf98 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55815da150d0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55815da15088 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55815da15070 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55815da15030 <col:56> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55815da150b8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55815da150a0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55815da15050 <col:74> '_Bool' lvalue Var 0x55815da0c100 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55815da15188 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55815da15140 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55815da15110 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55815da151b8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55815da151a0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55815da15168 <col:102> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55815da15420 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55815da15238 <col:3> '_Bool' lvalue Var 0x55815da0bf98 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55815da15408 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55815da153d8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55815da152f8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55815da152b0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55815da15298 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55815da15258 <col:20> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55815da152e0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55815da152c8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55815da15278 <col:38> '_Bool' lvalue Var 0x55815da0bf98 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55815da15390 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55815da15348 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55815da15318 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55815da153c0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55815da153a8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55815da15370 <col:66> '_Bool' lvalue Var 0x55815da0bf98 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55815da15708 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55815da15440 <col:3> '_Bool' lvalue Var 0x55815da0c100 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55815da156f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55815da156c0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55815da155e0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55815da15500 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55815da154b8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55815da154a0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55815da15460 <col:20> '_Bool' lvalue Var 0x55815da0c3e0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55815da154e8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55815da154d0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55815da15480 <col:38> '_Bool' lvalue Var 0x55815da0bf98 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55815da155c0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55815da15578 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55815da15560 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55815da15520 <col:56> '_Bool' lvalue Var 0x55815da0c4d8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55815da155a8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55815da15590 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55815da15540 <col:74> '_Bool' lvalue Var 0x55815da0c100 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55815da15678 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55815da15630 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55815da15600 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55815da156a8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55815da15690 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55815da15658 <col:102> '_Bool' lvalue Var 0x55815da0c100 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55815da15760 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55815da15748 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55815da15728 <col:3> 'void ()' Function 0x55815d9b2570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55815da157b8 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55815da157a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55815da15780 <col:3> 'void ()' Function 0x55815d9b24b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55815da15a88 <line:810:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x55815da157d8 <col:3> '_Bool' lvalue Var 0x55815da0bb78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55815da15a70 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55815da15a58 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55815da15a38 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x55815da15a18 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x55815da15980 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x55815da158e8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x55815da15850 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55815da15838 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55815da157f8 <col:23> 'int' lvalue Var 0x55815da0b708 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x55815da15818 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x55815da158c8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55815da158b0 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55815da15870 <col:51> 'int' lvalue Var 0x55815da0b828 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x55815da15890 <col:74> 'int' 0
    |         | `-BinaryOperator 0x55815da15960 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55815da15948 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55815da15908 <col:79> 'int' lvalue Var 0x55815da0b948 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55815da15928 <col:102> 'int' 1
    |         `-BinaryOperator 0x55815da159f8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x55815da159e0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55815da159a0 <col:107> 'int' lvalue Var 0x55815da0ba68 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55815da159c0 <col:130> 'int' 0
    |-CallExpr 0x55815da15ae0 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55815da15ac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55815da15aa8 <col:3> 'void ()' Function 0x55815d9b2570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55815da15b58 <line:812:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55815da15b40 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55815da15b00 <col:3> 'void (int)' Function 0x55815d9b2238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55815da15b98 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55815da15b80 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55815da15b20 <col:21> '_Bool' lvalue Var 0x55815da0bb78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55815da15bd0 <line:813:3, col:10>
      `-IntegerLiteral 0x55815da15bb0 <col:10> 'int' 0
