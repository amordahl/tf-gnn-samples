TranslationUnitDecl 0x563d0e4cef88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x563d0e4cf848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x563d0e4cf520 '__int128'
|-TypedefDecl 0x563d0e4cf8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x563d0e4cf540 'unsigned __int128'
|-TypedefDecl 0x563d0e4cfbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x563d0e4cf990 'struct __NSConstantString_tag'
|   `-Record 0x563d0e4cf910 '__NSConstantString_tag'
|-TypedefDecl 0x563d0e4cfc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x563d0e4cfc20 'char *'
|   `-BuiltinType 0x563d0e4cf020 'char'
|-TypedefDecl 0x563d0e50eb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x563d0e4cff00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x563d0e4cfd40 'struct __va_list_tag'
|     `-Record 0x563d0e4cfcc0 '__va_list_tag'
|-FunctionDecl 0x563d0e50ec80 <pthread-wmm/rfi008_pso.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x563d0e50ee50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x563d0e50ed80 <col:31> col:34 'int'
|-FunctionDecl 0x563d0e50efc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x563d0e50f0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x563d0e50f238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x563d0e50f1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x563d0e50f468 <col:40, col:99>
|   |-IfStmt 0x563d0e50f438 <col:42, col:88>
|   | |-UnaryOperator 0x563d0e50f318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x563d0e50f300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x563d0e50f2e0 <col:47> 'int' lvalue ParmVar 0x563d0e50f1a8 'expression' 'int'
|   | `-CompoundStmt 0x563d0e50f420 <col:59, col:88>
|   |   `-LabelStmt 0x563d0e50f408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x563d0e50f398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x563d0e50f380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x563d0e50f330 <col:68> 'void () __attribute__((noreturn))' Function 0x563d0e50f0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x563d0e50f450 <col:89>
|   `-ReturnStmt 0x563d0e50f458 <col:91>
|-FunctionDecl 0x563d0e50f4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x563d0e50f570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x563d0e50f8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563d0e50f628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x563d0e50f6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x563d0e50f728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563d0e50f7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563d0e50f9b0 <line:11:22>
|-FunctionDecl 0x563d0e534f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563d0e50fa20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x563d0e50faa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x563d0e534d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563d0e534dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563d0e534fd0 <line:14:22>
|-FunctionDecl 0x563d0e535280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563d0e535040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x563d0e5350c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x563d0e535140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x563d0e535338 <line:16:22>
|-TypedefDecl 0x563d0e5353a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x563d0e4cf0e0 'unsigned char'
|-TypedefDecl 0x563d0e535418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x563d0e4cf100 'unsigned short'
|-TypedefDecl 0x563d0e535488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x563d0e4cf120 'unsigned int'
|-TypedefDecl 0x563d0e5354f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-TypedefDecl 0x563d0e535568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x563d0e4cf040 'signed char'
|-TypedefDecl 0x563d0e5355d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x563d0e4cf0e0 'unsigned char'
|-TypedefDecl 0x563d0e535648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x563d0e4cf060 'short'
|-TypedefDecl 0x563d0e5356b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x563d0e4cf100 'unsigned short'
|-TypedefDecl 0x563d0e535728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x563d0e4cf080 'int'
|-TypedefDecl 0x563d0e535798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x563d0e4cf120 'unsigned int'
|-TypedefDecl 0x563d0e535808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e535878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-TypedefDecl 0x563d0e5358e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e535958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-TypedefDecl 0x563d0e5359c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-TypedefDecl 0x563d0e535a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x563d0e4cf120 'unsigned int'
|-TypedefDecl 0x563d0e535aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x563d0e4cf120 'unsigned int'
|-TypedefDecl 0x563d0e535b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-TypedefDecl 0x563d0e535b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-TypedefDecl 0x563d0e535bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x563d0e4cf120 'unsigned int'
|-TypedefDecl 0x563d0e535c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-TypedefDecl 0x563d0e535cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e535d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e535dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x563d0e4cf080 'int'
|-RecordDecl 0x563d0e535e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x563d0e535f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x563d0e536030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x563d0e535fd0 'struct __fsid_t' sugar
|   `-RecordType 0x563d0e535eb0 '__fsid_t'
|     `-Record 0x563d0e535e30 ''
|-TypedefDecl 0x563d0e5360b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e536128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-TypedefDecl 0x563d0e536198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-TypedefDecl 0x563d0e536208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x563d0e4cf120 'unsigned int'
|-TypedefDecl 0x563d0e536278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e5362e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x563d0e4cf120 'unsigned int'
|-TypedefDecl 0x563d0e536358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e5363c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x563d0e4cf080 'int'
|-TypedefDecl 0x563d0e536438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x563d0e4cf080 'int'
|-TypedefDecl 0x563d0e5364a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x563d0e4cf080 'int'
|-TypedefDecl 0x563d0e536518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x563d0e4cf7a0 'void *'
|   `-BuiltinType 0x563d0e4cefe0 'void'
|-TypedefDecl 0x563d0e536588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e5365f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e536668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e5366d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-TypedefDecl 0x563d0e536748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-TypedefDecl 0x563d0e5367b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-TypedefDecl 0x563d0e536828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-TypedefDecl 0x563d0e536898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e536908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e536978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e5369e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-TypedefDecl 0x563d0e536a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x563d0e536a40 '__off64_t' sugar
|   |-Typedef 0x563d0e535d68 '__off64_t'
|   `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e536b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x563d0e536b30 '__quad_t *'
|   `-TypedefType 0x563d0e536ad0 '__quad_t' sugar
|     |-Typedef 0x563d0e5358e8 '__quad_t'
|     `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e536be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x563d0e4cfc20 'char *'
|   `-BuiltinType 0x563d0e4cf020 'char'
|-TypedefDecl 0x563d0e536c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e536cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x563d0e4cf120 'unsigned int'
|-FunctionDecl 0x563d0e536e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x563d0e536d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x563d0e537148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x563d0e537138 <line:73:3, col:34>
|     `-CallExpr 0x563d0e5370f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x563d0e5370e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563d0e537070 <col:10> '<builtin fn type>' Function 0x563d0e536ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x563d0e537120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x563d0e537090 <col:29> 'unsigned int' lvalue ParmVar 0x563d0e536d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x563d0e536ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x563d0e536f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x563d0e536ff0 <col:10> Implicit
| `-ConstAttr 0x563d0e537048 <col:10> Implicit
|-FunctionDecl 0x563d0e5372a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x563d0e537198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x563d0e5375b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x563d0e5375a8 <line:78:3, col:34>
|     `-CallExpr 0x563d0e537568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x563d0e537550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563d0e5374d8 <col:10> '<builtin fn type>' Function 0x563d0e537348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x563d0e537590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x563d0e5374f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x563d0e537198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x563d0e537348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x563d0e5373e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x563d0e537458 <col:10> Implicit
| `-ConstAttr 0x563d0e5374b0 <col:10> Implicit
|-TypedefDecl 0x563d0e5375e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-TypedefDecl 0x563d0e537678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x563d0e537640 '__time_t' sugar
|   |-Typedef 0x563d0e536278 '__time_t'
|   `-BuiltinType 0x563d0e4cf0a0 'long'
|-RecordDecl 0x563d0e5376d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x563d0e537788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x563d0e537818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x563d0e5378a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x563d0e537870 '__pid_t' sugar
|   |-Typedef 0x563d0e535dd8 '__pid_t'
|   `-BuiltinType 0x563d0e4cf080 'int'
|-RecordDecl 0x563d0e537900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x563d0e5379c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x563d0e537a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x563d0e537ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x563d0e537b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-RecordDecl 0x563d0e537b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x563d0e539e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x563d0e539f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x563d0e539ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x563d0e537c10 'cpu_set_t'
|     `-Record 0x563d0e537b90 ''
|-FunctionDecl 0x563d0e53a1f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x563d0e539fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563d0e53a0d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x563d0e53a2a8 <line:108:19>
|-FunctionDecl 0x563d0e53a480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x563d0e53a310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x563d0e53a528 <col:69>
|-FunctionDecl 0x563d0e53a6a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x563d0e53a590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x563d0e53a748 <col:64>
|-FunctionDecl 0x563d0e53aa08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x563d0e53a7b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563d0e53a8e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563d0e53aab8 <line:114:22>
|-FunctionDecl 0x563d0e53ae60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x563d0e53ab20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563d0e53ac18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x563d0e53af10 <col:88>
|-FunctionDecl 0x563d0e53b1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563d0e53af78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563d0e53aff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x563d0e53b088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563d0e53b280 <col:62>
|-FunctionDecl 0x563d0e53b3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x563d0e53b2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x563d0e53b4a0 <col:63>
|-FunctionDecl 0x563d0e53b5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x563d0e53b668 <col:47>
|-FunctionDecl 0x563d0e53b770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x563d0e53b6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563d0e53b818 <col:69>
|-FunctionDecl 0x563d0e53b920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x563d0e53b888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563d0e53b9c8 <col:69>
|-FunctionDecl 0x563d0e53bc88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563d0e53ba30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563d0e53bb68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x563d0e53bd38 <col:88>
|-TypedefDecl 0x563d0e53bdc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x563d0e53bd90 '__clock_t' sugar
|   |-Typedef 0x563d0e5360b8 '__clock_t'
|   `-BuiltinType 0x563d0e4cf0a0 'long'
|-TypedefDecl 0x563d0e53c7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x563d0e53be20 '__clockid_t' sugar
|   |-Typedef 0x563d0e5364a8 '__clockid_t'
|   `-BuiltinType 0x563d0e4cf080 'int'
|-TypedefDecl 0x563d0e53c878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x563d0e53c840 '__timer_t' sugar
|   |-Typedef 0x563d0e536518 '__timer_t'
|   `-PointerType 0x563d0e4cf7a0 'void *'
|     `-BuiltinType 0x563d0e4cefe0 'void'
|-RecordDecl 0x563d0e53c8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x563d0e53c990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x563d0e53c9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x563d0e53ca60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x563d0e53cac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x563d0e53cb30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x563d0e53cb98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x563d0e53cc00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x563d0e53cc68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x563d0e53ccd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x563d0e53cd38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x563d0e53cda0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x563d0e53cdf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x563d0e53ceb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x563d0e53cf28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x563d0e53cfd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x563d0e53d1a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x563d0e53d240 <col:45>
|-FunctionDecl 0x563d0e53d420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x563d0e53d310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x563d0e53d4c8 <col:54>
|-FunctionDecl 0x563d0e53d6c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x563d0e53d530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x563d0e53d5a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x563d0e53d778 <line:158:22>
| `-ConstAttr 0x563d0e53e410 <col:63>
|-FunctionDecl 0x563d0e53e610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563d0e53e508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563d0e53e6b8 <col:56>
|-FunctionDecl 0x563d0e53ea60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x563d0e53e728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x563d0e53e7a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563d0e53e820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x563d0e53e918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x563d0e53eb20 <col:54>
|-RecordDecl 0x563d0e53eb78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x563d0e53ec28 parent 0x563d0e4cef88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x563d0e53ee88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x563d0e53ef28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x563d0e53ef90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x563d0e53eff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x563d0e53f0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x563d0e53f208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x563d0e53f1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x563d0e53f140 'struct __locale_struct' sugar
|     `-RecordType 0x563d0e53ec00 'struct __locale_struct'
|       `-Record 0x563d0e53eb78 '__locale_struct'
|-TypedefDecl 0x563d0e53f2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x563d0e53f280 '__locale_t' sugar
|   |-Typedef 0x563d0e53f208 '__locale_t'
|   `-PointerType 0x563d0e53f1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x563d0e53f140 'struct __locale_struct' sugar
|       `-RecordType 0x563d0e53ec00 'struct __locale_struct'
|         `-Record 0x563d0e53eb78 '__locale_struct'
|-FunctionDecl 0x563d0e53f6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x563d0e53f328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x563d0e53f3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563d0e53f438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x563d0e53f4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563d0e53f540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x563d0e53f778 <col:40>
|-FunctionDecl 0x563d0e53f968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563d0e53f840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x563d0e53fa10 <col:66>
|-FunctionDecl 0x563d0e53fb20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563d0e53fa78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x563d0e53fbc8 <col:69>
|-FunctionDecl 0x563d0e53fdf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563d0e53fc30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563d0e53fcc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563d0e53fea8 <col:52>
|-FunctionDecl 0x563d0e540050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563d0e53ff10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563d0e53ffa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563d0e540100 <col:55>
|-FunctionDecl 0x563d0e540298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x563d0e540180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x563d0e540340 <col:62>
|-FunctionDecl 0x563d0e540578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x563d0e5403a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x563d0e540620 <col:60>
|-FunctionDecl 0x563d0e540848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563d0e5406a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563d0e540720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x563d0e5408f8 <col:44>
|-FunctionDecl 0x563d0e540b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563d0e540960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563d0e5409e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x563d0e540bb8 <col:49>
|-VarDecl 0x563d0e540cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x563d0e540d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x563d0e540db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x563d0e540e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x563d0e540fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x563d0e541050 <col:42>
|-VarDecl 0x563d0e5410c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x563d0e541140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x563d0e5412c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x563d0e5411b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x563d0e541370 <col:57>
|-FunctionDecl 0x563d0e5424f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563d0e5413f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563d0e542598 <col:56>
|-FunctionDecl 0x563d0e5426a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563d0e542618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x563d0e542750 <col:59>
|-FunctionDecl 0x563d0e542858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x563d0e5427c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x563d0e542900 <col:48>
| `-ConstAttr 0x563d0e542958 <col:89>
|-FunctionDecl 0x563d0e542bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563d0e542a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x563d0e542a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x563d0e542e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563d0e542ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563d0e542d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x563d0e542ec8 <col:88>
|-FunctionDecl 0x563d0e543060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563d0e542f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563d0e542fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x563d0e543110 <col:88>
|-FunctionDecl 0x563d0e543328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x563d0e543178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563d0e543208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x563d0e5433d8 <line:209:22>
|-FunctionDecl 0x563d0e543778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563d0e543440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563d0e543500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x563d0e543590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x563d0e543620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x563d0e543a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x563d0e543878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x563d0e543950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x563d0e543b28 <col:85>
|-FunctionDecl 0x563d0e543f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x563d0e543b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563d0e543cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x563d0e543dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x563d0e543fd0 <col:52>
|-FunctionDecl 0x563d0e544148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x563d0e544038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563d0e5441f0 <col:61>
|-FunctionDecl 0x563d0e544668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x563d0e544258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563d0e5442d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x563d0e544408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x563d0e544510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x563d0e544728 <col:62>
|-FunctionDecl 0x563d0e544948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x563d0e544790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563d0e544820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x563d0e5449f8 <line:222:22>
|-FunctionDecl 0x563d0e544af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x563d0e544a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563d0e544ba0 <col:65>
|-TypedefDecl 0x563d0e544c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x563d0e4cf140 'unsigned long'
|-RecordDecl 0x563d0e544c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x563d0e544db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563d0e544e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563d0e544ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x563d0e544e70 'union pthread_attr_t' sugar
|   `-RecordType 0x563d0e544cf0 'union pthread_attr_t'
|     `-Record 0x563d0e544c68 'pthread_attr_t'
|-RecordDecl 0x563d0e544f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x563d0e545098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x563d0e545110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x563d0e5451c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x563d0e545160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x563d0e544fa0 'struct __pthread_internal_list'
|     `-Record 0x563d0e544f20 '__pthread_internal_list'
|-RecordDecl 0x563d0e545230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x563d0e5452d8 parent 0x563d0e4cef88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x563d0e5453b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563d0e545418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x563d0e545480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x563d0e549530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x563d0e549598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x563d0e549600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x563d0e549688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x563d0e549740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x563d0e549830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x563d0e549898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563d0e549a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x563d0e5499c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x563d0e5452b0 'pthread_mutex_t'
|     `-Record 0x563d0e545230 ''
|-RecordDecl 0x563d0e549a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x563d0e549bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563d0e549c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563d0e549cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x563d0e549c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x563d0e549b10 'pthread_mutexattr_t'
|     `-Record 0x563d0e549a90 ''
|-RecordDecl 0x563d0e549d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x563d0e549e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x563d0e549ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563d0e549f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x563d0e549fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x563d0e54a008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x563d0e54a070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x563d0e54a0d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x563d0e54a140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x563d0e54a1a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x563d0e54a260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi008_pso.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/rfi008_pso.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x563d0e54a350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x563d0e54a3b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x563d0e54a540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x563d0e54a490 'union pthread_cond_t' sugar
|   `-RecordType 0x563d0e549de0 'pthread_cond_t'
|     `-Record 0x563d0e549d60 ''
|-RecordDecl 0x563d0e54a5b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x563d0e54a6b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563d0e54a718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563d0e54a7d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x563d0e54a770 'union pthread_condattr_t' sugar
|   `-RecordType 0x563d0e54a630 'pthread_condattr_t'
|     `-Record 0x563d0e54a5b0 ''
|-TypedefDecl 0x563d0e54a858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x563d0e4cf120 'unsigned int'
|-TypedefDecl 0x563d0e54a8c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x563d0e4cf080 'int'
|-RecordDecl 0x563d0e54a920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x563d0e54a9c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x563d0e54aa90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563d0e54aaf8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x563d0e54ab60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x563d0e54abc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x563d0e54ac30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x563d0e54ac98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x563d0e54ad00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x563d0e54ad68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x563d0e54add0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x563d0e54ae38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x563d0e54aea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x563d0e54af50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi008_pso.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/rfi008_pso.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x563d0e54aff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563d0e54b060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563d0e54b1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x563d0e54b150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x563d0e54a9a0 'pthread_rwlock_t'
|     `-Record 0x563d0e54a920 ''
|-RecordDecl 0x563d0e54b220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x563d0e54b360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x563d0e54b3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563d0e54b480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x563d0e54b420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x563d0e54b2a0 'pthread_rwlockattr_t'
|     `-Record 0x563d0e54b220 ''
|-TypedefDecl 0x563d0e54d560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x563d0e4cf084 'volatile int' volatile
|   `-BuiltinType 0x563d0e4cf080 'int'
|-RecordDecl 0x563d0e54d5b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x563d0e54d700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x563d0e54d768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563d0e54d820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x563d0e54d7c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x563d0e54d640 'pthread_barrier_t'
|     `-Record 0x563d0e54d5b8 ''
|-RecordDecl 0x563d0e54d890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x563d0e54d990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563d0e54d9f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563d0e54dab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x563d0e54da50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x563d0e54d910 'pthread_barrierattr_t'
|     `-Record 0x563d0e54d890 ''
|-TypedefDecl 0x563d0e54dbc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x563d0e54db60 'long [8]' 8 
|   `-BuiltinType 0x563d0e4cf0a0 'long'
|-EnumDecl 0x563d0e54dc20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x563d0e54dce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x563d0e54dd38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x563d0e54dd88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x563d0e54de58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x563d0e54dea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x563d0e54def8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x563d0e54df48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x563d0e54dfd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x563d0e54dfb8 <col:26> 'int'
| |   `-DeclRefExpr 0x563d0e54df98 <col:26> 'int' EnumConstant 0x563d0e54de58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x563d0e54e058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x563d0e54e040 <col:29> 'int'
| |   `-DeclRefExpr 0x563d0e54e020 <col:29> 'int' EnumConstant 0x563d0e54dea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x563d0e54e0e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x563d0e54e0c8 <col:30> 'int'
| |   `-DeclRefExpr 0x563d0e54e0a8 <col:30> 'int' EnumConstant 0x563d0e54def8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x563d0e54e168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x563d0e54e150 <col:27> 'int'
|     `-DeclRefExpr 0x563d0e54e130 <col:27> 'int' EnumConstant 0x563d0e54dfd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x563d0e54e1b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x563d0e54e288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x563d0e54e310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x563d0e54e2f8 <col:30> 'int'
| |   `-DeclRefExpr 0x563d0e54e2d8 <col:30> 'int' EnumConstant 0x563d0e54e288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x563d0e54e360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x563d0e54e3e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x563d0e54e3d0 <col:29> 'int'
|     `-DeclRefExpr 0x563d0e54e3b0 <col:29> 'int' EnumConstant 0x563d0e54e360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x563d0e54e438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x563d0e54e508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x563d0e54e570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x563d0e54e5c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x563d0e54e610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x563d0e54e6d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x563d0e54e728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x563d0e54e778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x563d0e54e800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x563d0e54e7e8 <col:31> 'int'
|     `-DeclRefExpr 0x563d0e54e7c8 <col:31> 'int' EnumConstant 0x563d0e54e6d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x563d0e54e850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x563d0e54e918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x563d0e54e968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x563d0e54e9b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x563d0e54ea88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x563d0e54ead8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x563d0e54eb28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x563d0e54ebf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x563d0e54ec48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x563d0e54ec98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x563d0e54eed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x563d0e54ef40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x563d0e54efa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x563d0e54f0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x563d0e54f118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x563d0e54f1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x563d0e54f238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x563d0e54f288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x563d0e54f358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x563d0e54f3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x563d0e54f9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x563d0e54f4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x563d0e54f5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d0e54f7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x563d0e54f840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x563d0e54fa98 <col:47>
| |-NonNullAttr 0x563d0e54faf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x563d0e54fb28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x563d0e54fc50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x563d0e54fb80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x563d0e54fea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x563d0e54fd08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x563d0e54fd88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x563d0e550078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x563d0e54ff68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x563d0e550120 <col:60>
|-FunctionDecl 0x563d0e550270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x563d0e550310 <col:54>
| `-ConstAttr 0x563d0e550368 <col:95>
|-FunctionDecl 0x563d0e550da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x563d0e5503a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563d0e550418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x563d0e550e50 <line:395:19>
| `-ConstAttr 0x563d0e550ea8 <col:60>
|-FunctionDecl 0x563d0e551078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563d0e550f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563d0e551120 <col:71>
| `-NonNullAttr 0x563d0e551178 <col:112, col:126> 1
|-FunctionDecl 0x563d0e551280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563d0e5511c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563d0e551328 <line:398:22>
| `-NonNullAttr 0x563d0e551380 <col:63, col:77> 1
|-FunctionDecl 0x563d0e5515a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x563d0e5513c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563d0e551448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x563d0e551658 <line:401:22>
| `-NonNullAttr 0x563d0e5516b0 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e5518b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563d0e5516f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563d0e551778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x563d0e551968 <line:404:22>
| `-NonNullAttr 0x563d0e5519c0 <col:63, col:77> 1
|-FunctionDecl 0x563d0e551c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x563d0e551a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563d0e551ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x563d0e551cc8 <line:407:22>
| `-NonNullAttr 0x563d0e551d20 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e552f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563d0e552dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563d0e552e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563d0e553028 <line:410:22>
| `-NonNullAttr 0x563d0e553080 <col:63, col:77> 1
|-FunctionDecl 0x563d0e5532b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563d0e5530c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d0e553158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563d0e553368 <line:413:22>
| `-NonNullAttr 0x563d0e5533c0 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e5535f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563d0e553408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d0e553498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x563d0e5536a8 <col:37>
| `-NonNullAttr 0x563d0e553700 <col:78, col:95> 1 2
|-FunctionDecl 0x563d0e5538e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d0e553748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d0e5537c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x563d0e553998 <line:419:22>
| `-NonNullAttr 0x563d0e5539f0 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e553b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563d0e553a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563d0e553ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x563d0e553c28 <line:421:22>
| `-NonNullAttr 0x563d0e553c80 <col:63, col:77> 1
|-FunctionDecl 0x563d0e554e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d0e553cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d0e553d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x563d0e554f08 <line:424:22>
| `-NonNullAttr 0x563d0e554f60 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e5550e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563d0e554fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563d0e555028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x563d0e555198 <line:427:22>
| `-NonNullAttr 0x563d0e5551f0 <col:63, col:77> 1
|-FunctionDecl 0x563d0e555398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d0e555238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d0e5552b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x563d0e555448 <line:430:22>
| `-NonNullAttr 0x563d0e5554a0 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e555628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563d0e5554e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563d0e555568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x563d0e5556d8 <line:432:22>
| `-NonNullAttr 0x563d0e555730 <col:63, col:77> 1
|-FunctionDecl 0x563d0e555958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x563d0e555778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d0e5557f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x563d0e555a08 <line:435:22>
| |-NonNullAttr 0x563d0e555a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x563d0e555a98 <col:100> "" ""
|-FunctionDecl 0x563d0e555ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x563d0e555ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563d0e555b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x563d0e555d58 <line:438:22>
| |-NonNullAttr 0x563d0e555db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x563d0e555df8 <col:97> "" ""
|-FunctionDecl 0x563d0e555fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563d0e555e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d0e555ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563d0e556098 <line:441:22>
| `-NonNullAttr 0x563d0e5560f0 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e556270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563d0e556138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563d0e5561b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563d0e556320 <line:444:22>
| `-NonNullAttr 0x563d0e556378 <col:63, col:77> 1
|-FunctionDecl 0x563d0e556668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563d0e5563c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d0e556448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x563d0e5564c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563d0e556720 <line:448:22>
| `-NonNullAttr 0x563d0e556778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x563d0e556a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x563d0e5567d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563d0e556850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x563d0e5568c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563d0e556ae0 <col:43>
| `-NonNullAttr 0x563d0e556b38 <col:84, col:98> 1
|-FunctionDecl 0x563d0e556e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563d0e556b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563d0e556c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x563d0e556c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x563d0e556ef8 <line:453:22>
| `-NonNullAttr 0x563d0e556f50 <col:63, col:77> 3
|-FunctionDecl 0x563d0e557228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563d0e556f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563d0e557018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x563d0e5570a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563d0e5572e0 <line:457:22>
| `-NonNullAttr 0x563d0e557338 <col:63, col:80> 2 3
|-FunctionDecl 0x563d0e557528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x563d0e557388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563d0e557408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x563d0e5575d8 <line:459:22>
|-FunctionDecl 0x563d0e5579a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x563d0e5576a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x563d0e557840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x563d0e557a58 <col:52, col:69> 1 2
|-FunctionDecl 0x563d0e557c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x563d0e557ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x563d0e557b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x563d0e557e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x563d0e557cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x563d0e557d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x563d0e557f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x563d0e557ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x563d0e5580a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x563d0e558148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x563d0e5581f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x563d0e5582e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x563d0e558350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x563d0e558520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/rfi008_pso.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x563d0e558618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x563d0e5586d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x563d0e558670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x563d0e5581d0 '__pthread_unwind_buf_t'
| |   `-Record 0x563d0e558148 ''
| `-AlignedAttr 0x563d0e558728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x563d0e5587a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x563d0e558900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x563d0e558968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x563d0e5589d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x563d0e558a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x563d0e558c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563d0e558b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563d0e558e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563d0e558cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563d0e558fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563d0e558ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x563d0e559088 <line:488:22>
|-RecordDecl 0x563d0e5590e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x563d0e5593f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x563d0e559258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x563d0e5592d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x563d0e5594a8 <col:86>
| `-ReturnsTwiceAttr 0x563d0e559500 <col:12> Implicit
|-FunctionDecl 0x563d0e559828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563d0e5595d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x563d0e5596e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x563d0e5598d8 <line:494:22>
| `-NonNullAttr 0x563d0e559930 <col:63, col:77> 1
|-FunctionDecl 0x563d0e559aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563d0e559978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563d0e559b50 <line:496:22>
| `-NonNullAttr 0x563d0e559ba8 <col:63, col:77> 1
|-FunctionDecl 0x563d0e559cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563d0e559bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563d0e559d58 <line:498:22>
| `-NonNullAttr 0x563d0e559db0 <col:52, col:66> 1
|-FunctionDecl 0x563d0e559ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563d0e559e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563d0e559f90 <line:500:22>
| `-NonNullAttr 0x563d0e559fe8 <col:52, col:66> 1
|-FunctionDecl 0x563d0e55a228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563d0e55a038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563d0e55a0c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563d0e55a2d8 <col:36>
| `-NonNullAttr 0x563d0e55a330 <col:66, col:83> 1 2
|-FunctionDecl 0x563d0e55a430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563d0e55a378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563d0e55a4d8 <line:505:22>
| `-NonNullAttr 0x563d0e55a530 <col:52, col:66> 1
|-FunctionDecl 0x563d0e55a7c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d0e55a5e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563d0e55a660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563d0e55a878 <line:509:22>
| `-NonNullAttr 0x563d0e55a8d0 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e55ab98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x563d0e55a918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563d0e55a998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x563d0e55aa18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x563d0e55ac50 <line:513:22>
| `-NonNullAttr 0x563d0e55aca8 <col:63, col:80> 1 3
|-FunctionDecl 0x563d0e55ae40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563d0e55acf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563d0e55aee8 <line:515:22>
| `-NonNullAttr 0x563d0e55af40 <col:63, col:77> 1
|-FunctionDecl 0x563d0e55b128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563d0e55aff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563d0e55b1d0 <line:517:22>
| `-NonNullAttr 0x563d0e55b228 <col:63, col:77> 1
|-FunctionDecl 0x563d0e55b330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563d0e55b278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563d0e55b3d8 <line:519:22>
| `-NonNullAttr 0x563d0e55b430 <col:63, col:77> 1
|-FunctionDecl 0x563d0e55b658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d0e55b478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563d0e55b4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x563d0e55b708 <line:523:22>
| `-NonNullAttr 0x563d0e55b760 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e55b968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563d0e55b7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563d0e55b828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x563d0e55ba18 <line:526:22>
| `-NonNullAttr 0x563d0e55ba70 <col:63, col:77> 1
|-FunctionDecl 0x563d0e55bc18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d0e55bab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563d0e55bb38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x563d0e55bcc8 <line:529:22>
| `-NonNullAttr 0x563d0e55bd20 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e55cf20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563d0e55bd68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563d0e55ce60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x563d0e55cfd0 <line:531:22>
| `-NonNullAttr 0x563d0e55d028 <col:63, col:77> 1
|-FunctionDecl 0x563d0e55d1d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d0e55d078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563d0e55d0f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x563d0e55d288 <line:535:22>
| `-NonNullAttr 0x563d0e55d2e0 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e55d468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563d0e55d328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563d0e55d3a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x563d0e55d518 <line:538:22>
| `-NonNullAttr 0x563d0e55d570 <col:63, col:77> 1
|-FunctionDecl 0x563d0e55d718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d0e55d5b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563d0e55d638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563d0e55d7c8 <line:542:22>
| `-NonNullAttr 0x563d0e55d820 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e55d9a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563d0e55d868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563d0e55d8e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x563d0e55da58 <line:545:22>
| `-NonNullAttr 0x563d0e55dab0 <col:63, col:77> 1
|-FunctionDecl 0x563d0e55dc98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x563d0e55daf8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x563d0e55db78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x563d0e55dd48 <line:548:22>
| `-NonNullAttr 0x563d0e55dda0 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e55ef58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563d0e55dde8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563d0e55ee98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x563d0e55f008 <line:551:22>
| `-NonNullAttr 0x563d0e55f060 <col:63, col:77> 1
|-FunctionDecl 0x563d0e55f398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x563d0e55f140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563d0e55f250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x563d0e55f448 <col:29>
| `-NonNullAttr 0x563d0e55f4a0 <col:70, col:84> 1
|-FunctionDecl 0x563d0e55f618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563d0e55f4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563d0e55f6c0 <line:556:22>
| `-NonNullAttr 0x563d0e55f718 <col:63, col:77> 1
|-FunctionDecl 0x563d0e55f820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563d0e55f768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563d0e55f8c8 <line:558:22>
| `-NonNullAttr 0x563d0e55f920 <col:52, col:66> 1
|-FunctionDecl 0x563d0e55fa20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563d0e55f968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563d0e55fac8 <line:560:19>
| `-NonNullAttr 0x563d0e55fb20 <col:49, col:63> 1
|-FunctionDecl 0x563d0e55fd58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563d0e55fb68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563d0e55fbf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563d0e55fe08 <col:39>
| `-NonNullAttr 0x563d0e55fe90 <col:69, col:86> 1 2
|-FunctionDecl 0x563d0e55ff90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563d0e55fed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563d0e560038 <line:565:22>
| `-NonNullAttr 0x563d0e560090 <col:52, col:66> 1
|-FunctionDecl 0x563d0e560190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563d0e5600d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563d0e560238 <line:567:22>
| `-NonNullAttr 0x563d0e560290 <col:52, col:66> 1
|-FunctionDecl 0x563d0e560448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563d0e5602d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563d0e560368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563d0e5604f8 <col:39>
| `-NonNullAttr 0x563d0e560550 <col:69, col:86> 1 2
|-FunctionDecl 0x563d0e560650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563d0e560598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563d0e5606f8 <line:572:22>
| `-NonNullAttr 0x563d0e560750 <col:52, col:66> 1
|-FunctionDecl 0x563d0e560938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563d0e560800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563d0e5609e0 <line:574:22>
| `-NonNullAttr 0x563d0e560a38 <col:63, col:77> 1
|-FunctionDecl 0x563d0e560b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563d0e560a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563d0e560be8 <line:576:22>
| `-NonNullAttr 0x563d0e560c40 <col:63, col:77> 1
|-FunctionDecl 0x563d0e560ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d0e560c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563d0e560d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x563d0e560f50 <line:580:22>
| `-NonNullAttr 0x563d0e560fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e5611b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563d0e560ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563d0e561078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x563d0e561268 <line:583:22>
| `-NonNullAttr 0x563d0e5612c0 <col:63, col:77> 1
|-FunctionDecl 0x563d0e561468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d0e561308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563d0e561388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x563d0e561518 <line:587:22>
| `-NonNullAttr 0x563d0e561570 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e5616f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563d0e5615b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563d0e561638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x563d0e5617a8 <col:36>
| `-NonNullAttr 0x563d0e561800 <col:77, col:91> 1
|-FunctionDecl 0x563d0e561b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x563d0e5618e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563d0e5619f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x563d0e561be8 <line:592:22>
| `-NonNullAttr 0x563d0e561c40 <col:63, col:77> 1
|-FunctionDecl 0x563d0e561db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563d0e561c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563d0e561e60 <line:594:22>
| `-NonNullAttr 0x563d0e561ee0 <col:63, col:77> 1
|-FunctionDecl 0x563d0e561fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563d0e561f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563d0e562088 <line:596:22>
| `-NonNullAttr 0x563d0e5620e0 <col:52, col:66> 1
|-FunctionDecl 0x563d0e5621e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563d0e562128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563d0e562288 <line:598:22>
| `-NonNullAttr 0x563d0e5622e0 <col:52, col:66> 1
|-FunctionDecl 0x563d0e562508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x563d0e562328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563d0e5623a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x563d0e5625b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x563d0e5628e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563d0e562638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563d0e5626b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563d0e562740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x563d0e5629a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x563d0e562bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563d0e562a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563d0e562c60 <line:607:22>
| `-NonNullAttr 0x563d0e562cb8 <col:63, col:77> 1
|-FunctionDecl 0x563d0e562dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563d0e562d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563d0e562e68 <line:609:22>
| `-NonNullAttr 0x563d0e562ef0 <col:63, col:77> 1
|-FunctionDecl 0x563d0e563118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d0e562f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563d0e562fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x563d0e5631c8 <line:613:22>
| `-NonNullAttr 0x563d0e563220 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e563428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x563d0e563268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563d0e5632e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x563d0e5634d8 <col:37>
| `-NonNullAttr 0x563d0e563530 <col:78, col:92> 1
|-FunctionDecl 0x563d0e563748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x563d0e563578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563d0e563620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x563d0e5637f8 <line:619:22>
| `-NonNullAttr 0x563d0e563850 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e563a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x563d0e563898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563d0e563910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x563d0e563ac8 <line:622:22>
| `-NonNullAttr 0x563d0e563b20 <col:63, col:77> 1
|-FunctionDecl 0x563d0e563dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x563d0e563c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x563d0e563c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x563d0e563e78 <line:624:22>
| `-NonNullAttr 0x563d0e563f00 <col:63, col:77> 1
|-FunctionDecl 0x563d0e564078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563d0e563f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563d0e564120 <line:626:22>
| `-NonNullAttr 0x563d0e564178 <col:63, col:77> 1
|-FunctionDecl 0x563d0e564280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563d0e5641c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563d0e564328 <line:628:22>
| `-NonNullAttr 0x563d0e564380 <col:52, col:66> 1
|-FunctionDecl 0x563d0e564480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563d0e5643c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563d0e564528 <line:630:22>
| `-NonNullAttr 0x563d0e564580 <col:52, col:66> 1
|-FunctionDecl 0x563d0e564680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563d0e5645c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563d0e564728 <line:632:22>
| `-NonNullAttr 0x563d0e564780 <col:52, col:66> 1
|-FunctionDecl 0x563d0e564b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x563d0e564860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x563d0e564970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563d0e5649f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x563d0e564c10 <line:636:22>
| `-NonNullAttr 0x563d0e564c68 <col:63, col:77> 1
|-FunctionDecl 0x563d0e564de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563d0e564cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563d0e564e90 <line:638:22>
| `-NonNullAttr 0x563d0e564f10 <col:63, col:77> 1
|-FunctionDecl 0x563d0e565010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563d0e564f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563d0e5650b8 <line:640:22>
| `-NonNullAttr 0x563d0e565110 <col:52, col:66> 1
|-FunctionDecl 0x563d0e5652f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563d0e5651c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563d0e5653a0 <line:642:22>
| `-NonNullAttr 0x563d0e5653f8 <col:63, col:77> 1
|-FunctionDecl 0x563d0e565500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563d0e565448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563d0e5655a8 <line:644:22>
| `-NonNullAttr 0x563d0e565600 <col:63, col:77> 1
|-FunctionDecl 0x563d0e565828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d0e565648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563d0e5656c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x563d0e5658d8 <line:648:22>
| `-NonNullAttr 0x563d0e565930 <col:63, col:80> 1 2
|-FunctionDecl 0x563d0e565b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x563d0e565978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x563d0e5659f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x563d0e565be8 <line:651:22>
| `-NonNullAttr 0x563d0e565c40 <col:63, col:77> 1
|-FunctionDecl 0x563d0e565fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x563d0e565d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x563d0e565e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x563d0e566058 <line:654:22>
| `-NonNullAttr 0x563d0e5660b0 <col:63, col:77> 1
|-FunctionDecl 0x563d0e566208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x563d0e5660f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563d0e5662b0 <col:69>
|-FunctionDecl 0x563d0e566428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x563d0e566318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563d0e5664d0 <col:72>
|-FunctionDecl 0x563d0e566708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x563d0e566538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x563d0e5665e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x563d0e5667b8 <col:44>
|-FunctionDecl 0x563d0e5669d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x563d0e566820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563d0e566898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x563d0e566a88 <line:661:22>
| `-NonNullAttr 0x563d0e566ae0 <col:63, col:77> 2
|-FunctionDecl 0x563d0e567f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x563d0e566bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x563d0e566cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x563d0e566de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x563d0e568008 <col:47>
|-FunctionDecl 0x563d0e568110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x563d0e568078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563d0e568268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x563d0e5681d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563d0e568330 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x563d0e5683f0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x563d0e5684b0 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x563d0e568568 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x563d0e5685e8 prev 0x563d0e568568 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x563d0e568650 <col:24> 'int' 0
|-VarDecl 0x563d0e568688 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x563d0e568708 prev 0x563d0e568688 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x563d0e568770 <col:27> 'int' 0
|-VarDecl 0x563d0e5687a8 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x563d0e568828 prev 0x563d0e5687a8 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x563d0e568890 <col:27> 'int' 0
|-VarDecl 0x563d0e5688c8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x563d0e568948 prev 0x563d0e5688c8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x563d0e5689b0 <col:27> 'int' 0
|-VarDecl 0x563d0e5689e8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x563d0e568a68 prev 0x563d0e5689e8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x563d0e568ad0 <col:27> 'int' 0
|-VarDecl 0x563d0e568b00 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x563d0e568b78 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x563d0e568bf8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x563d0e568c78 prev 0x563d0e568bf8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x563d0e568ce0 <col:9> 'int' 0
|-VarDecl 0x563d0e568d10 <line:685:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x563d0e568d90 <line:686:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x563d0e568e08 <line:687:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x563d0e568e80 <line:688:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x563d0e568f20 <line:689:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x563d0e568f98 <line:690:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x563d0e569010 <line:691:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x563d0e569088 <line:692:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x563d0e569100 <line:693:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x563d0e569180 <line:694:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x563d0e569200 <line:695:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x563d0e569278 <line:696:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x563d0e5692f8 <line:697:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x563d0e569370 <line:698:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x563d0e5693f0 <line:699:1, col:5> col:5 used y 'int'
|-VarDecl 0x563d0e569470 prev 0x563d0e5693f0 <line:700:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x563d0e5694d8 <col:9> 'int' 0
|-VarDecl 0x563d0e569508 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x563d0e569580 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x563d0e569698 prev 0x563d0e568110 <line:703:1, line:746:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x563d0e569600 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563d0e56d938 <line:704:1, line:746:1>
|   |-CallExpr 0x563d0e5697a8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d0e569790 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e569740 <col:3> 'void ()' Function 0x563d0e50f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d0e569820 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563d0e5697c8 <col:3> 'int' lvalue Var 0x563d0e5692f8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x563d0e569808 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d0e5697e8 <col:15> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x563d0e569880 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563d0e569840 <col:3> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x563d0e569860 <col:15> 'int' 1
|   |-BinaryOperator 0x563d0e5698f8 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e5698a0 <col:3> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e5698e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d0e5698c0 <col:20> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563d0e569990 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e569918 <col:3> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x563d0e569968 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563d0e569938 <col:27> 'int' 1
|   |-CallExpr 0x563d0e569b18 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x563d0e569b00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563d0e5699b0 <col:3> 'void (int)' Function 0x563d0e50f238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x563d0e569ab0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x563d0e569a90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x563d0e569a70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x563d0e569a28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x563d0e569a10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x563d0e5699d0 <col:23> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x563d0e569a58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x563d0e569a40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x563d0e5699f0 <col:41> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563d0e569b98 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e569b40 <col:3> '_Bool' lvalue Var 0x563d0e568f98 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e569b80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d0e569b60 <col:20> '_Bool' lvalue Var 0x563d0e568e08 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x563d0e569c10 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e569bb8 <col:3> '_Bool' lvalue Var 0x563d0e569010 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e569bf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d0e569bd8 <col:20> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563d0e569c88 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e569c30 <col:3> '_Bool' lvalue Var 0x563d0e569088 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e569c70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d0e569c50 <col:20> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563d0e569d20 <line:714:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e569ca8 <col:3> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x563d0e569cf8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563d0e569cc8 <col:27> 'int' 1
|   |-CallExpr 0x563d0e569d78 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d0e569d60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e569d40 <col:3> 'void ()' Function 0x563d0e50f570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d0e569dd0 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d0e569db8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e569d98 <col:3> 'void ()' Function 0x563d0e50f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d0e569e98 <line:717:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e569df0 <col:3> '_Bool' lvalue Var 0x563d0e569508 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x563d0e569e78 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x563d0e569e60 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x563d0e569e10 <col:19> '_Bool (void)' Function 0x563d0e50ec80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x563d0e569f50 <line:718:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e569eb8 <col:3> '_Bool' lvalue Var 0x563d0e569580 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x563d0e569f30 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x563d0e569ef8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x563d0e569ed8 <col:19> '_Bool (void)' Function 0x563d0e50ec80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x563d0e569fc8 <line:719:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e569f70 <col:3> '_Bool' lvalue Var 0x563d0e568d10 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e569fb0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d0e569f90 <col:21> '_Bool' lvalue Var 0x563d0e569580 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x563d0e56a040 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563d0e569fe8 <col:3> 'int' lvalue Var 0x563d0e568d90 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x563d0e56a028 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d0e56a008 <col:15> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
|   |-BinaryOperator 0x563d0e56a478 <line:721:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x563d0e56a060 <col:3> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
|   | `-ConditionalOperator 0x563d0e56a448 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x563d0e56a270 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x563d0e56a190 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x563d0e56a0b8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x563d0e56a0a0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x563d0e56a080 <col:8> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x563d0e56a170 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x563d0e56a108 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x563d0e56a0f0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x563d0e56a0d0 <col:27> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x563d0e56a158 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x563d0e56a140 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x563d0e56a120 <col:46> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x563d0e56a250 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x563d0e56a1e8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x563d0e56a1d0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x563d0e56a1b0 <col:65> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x563d0e56a238 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x563d0e56a220 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x563d0e56a200 <col:84> '_Bool' lvalue Var 0x563d0e569010 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x563d0e56a430 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d0e56a290 <col:101> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
|   |   `-ParenExpr 0x563d0e56a410 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x563d0e56a3e0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x563d0e56a350 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563d0e56a308 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563d0e56a2f0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563d0e56a2b0 <col:106> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563d0e56a338 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563d0e56a320 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563d0e56a2d0 <col:124> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563d0e56a3b0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563d0e56a370 <col:141> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x563d0e56a3c8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d0e56a390 <col:153> 'int' lvalue Var 0x563d0e5692f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x563d0e56a988 <line:722:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563d0e56a498 <col:3> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x563d0e56a958 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563d0e56a928 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563d0e56a910 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563d0e56a4b8 <col:15> '_Bool' lvalue Var 0x563d0e569580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563d0e56a940 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d0e56a4d8 <col:31> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x563d0e56a8f0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563d0e56a8c0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563d0e56a6e8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563d0e56a608 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563d0e56a530 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563d0e56a518 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563d0e56a4f8 <col:45> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563d0e56a5e8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563d0e56a580 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563d0e56a568 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563d0e56a548 <col:64> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x563d0e56a5d0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563d0e56a5b8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563d0e56a598 <col:83> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563d0e56a6c8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563d0e56a660 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563d0e56a648 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563d0e56a628 <col:102> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x563d0e56a6b0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563d0e56a698 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563d0e56a678 <col:121> '_Bool' lvalue Var 0x563d0e569010 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563d0e56a8a8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563d0e56a708 <col:138> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x563d0e56a888 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563d0e56a858 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563d0e56a7c8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563d0e56a780 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563d0e56a768 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563d0e56a728 <col:151> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563d0e56a7b0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563d0e56a798 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563d0e56a748 <col:169> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x563d0e56a828 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563d0e56a7e8 <col:186> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x563d0e56a840 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563d0e56a808 <col:198> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x563d0e56ae98 <line:723:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563d0e56a9a8 <col:3> 'int' lvalue Var 0x563d0e5692f8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x563d0e56ae68 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563d0e56ae38 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563d0e56ae20 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563d0e56a9c8 <col:15> '_Bool' lvalue Var 0x563d0e569580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563d0e56ae50 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d0e56a9e8 <col:31> 'int' lvalue Var 0x563d0e5692f8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x563d0e56ae00 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563d0e56add0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563d0e56abf8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563d0e56ab18 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563d0e56aa40 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563d0e56aa28 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563d0e56aa08 <col:45> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563d0e56aaf8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563d0e56aa90 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563d0e56aa78 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563d0e56aa58 <col:64> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x563d0e56aae0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563d0e56aac8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563d0e56aaa8 <col:83> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563d0e56abd8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563d0e56ab70 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563d0e56ab58 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563d0e56ab38 <col:102> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x563d0e56abc0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563d0e56aba8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563d0e56ab88 <col:121> '_Bool' lvalue Var 0x563d0e569010 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563d0e56adb8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563d0e56ac18 <col:138> 'int' lvalue Var 0x563d0e5692f8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x563d0e56ad98 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563d0e56ad68 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563d0e56acd8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563d0e56ac90 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563d0e56ac78 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563d0e56ac38 <col:151> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563d0e56acc0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563d0e56aca8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563d0e56ac58 <col:169> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x563d0e56ad38 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563d0e56acf8 <col:186> 'int' lvalue Var 0x563d0e5692f8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x563d0e56ad50 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563d0e56ad18 <col:198> 'int' lvalue Var 0x563d0e5692f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x563d0e56b468 <line:724:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e56aeb8 <col:3> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e56b450 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d0e56b420 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563d0e56b3d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d0e56b3c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d0e56aed8 <col:20> '_Bool' lvalue Var 0x563d0e569580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d0e56b408 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d0e56b3f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d0e56aef8 <col:36> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x563d0e56b3a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563d0e56b370 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563d0e56b130 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563d0e56b050 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563d0e56af78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563d0e56af60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563d0e56af40 <col:55> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563d0e56b030 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563d0e56afc8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563d0e56afb0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563d0e56af90 <col:74> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x563d0e56b018 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563d0e56b000 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563d0e56afe0 <col:93> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563d0e56b110 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563d0e56b0a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563d0e56b090 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563d0e56b070 <col:112> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x563d0e56b0f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563d0e56b0e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563d0e56b0c0 <col:131> '_Bool' lvalue Var 0x563d0e569010 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x563d0e56b358 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563d0e56b340 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563d0e56b150 <col:148> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x563d0e56b320 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563d0e56b2f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563d0e56b210 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563d0e56b1c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563d0e56b1b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563d0e56b170 <col:166> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563d0e56b1f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563d0e56b1e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563d0e56b190 <col:184> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x563d0e56b2a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563d0e56b260 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563d0e56b230 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563d0e56b2d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563d0e56b2c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563d0e56b288 <col:212> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563d0e56ba30 <line:725:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e56b488 <col:3> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e56ba18 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d0e56b9e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563d0e56b9a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d0e56b988 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d0e56b4a8 <col:20> '_Bool' lvalue Var 0x563d0e569580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d0e56b9d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d0e56b9b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d0e56b4c8 <col:36> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x563d0e56b968 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563d0e56b938 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563d0e56b6d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563d0e56b5f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563d0e56b520 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563d0e56b508 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563d0e56b4e8 <col:55> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563d0e56b5d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563d0e56b570 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563d0e56b558 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563d0e56b538 <col:74> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x563d0e56b5c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563d0e56b5a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563d0e56b588 <col:93> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563d0e56b6b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563d0e56b650 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563d0e56b638 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563d0e56b618 <col:112> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x563d0e56b6a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563d0e56b688 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563d0e56b668 <col:131> '_Bool' lvalue Var 0x563d0e569010 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x563d0e56b920 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563d0e56b908 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563d0e56b6f8 <col:148> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x563d0e56b8e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563d0e56b8b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563d0e56b7b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563d0e56b770 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563d0e56b758 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563d0e56b718 <col:166> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563d0e56b7a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563d0e56b788 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563d0e56b738 <col:184> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x563d0e56b888 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563d0e56b808 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563d0e56b7d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563d0e56b8a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563d0e56b860 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563d0e56b830 <col:219> 'int' 0
|   |-BinaryOperator 0x563d0e56bff8 <line:726:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e56ba50 <col:3> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e56bfe0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d0e56bfb0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563d0e56bf68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d0e56bf50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d0e56ba70 <col:20> '_Bool' lvalue Var 0x563d0e569580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d0e56bf98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d0e56bf80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d0e56ba90 <col:36> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x563d0e56bf10 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563d0e56bee0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563d0e56bca0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563d0e56bbc0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563d0e56bae8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563d0e56bad0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563d0e56bab0 <col:55> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563d0e56bba0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563d0e56bb38 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563d0e56bb20 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563d0e56bb00 <col:74> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x563d0e56bb88 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563d0e56bb70 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563d0e56bb50 <col:93> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563d0e56bc80 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563d0e56bc18 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563d0e56bc00 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563d0e56bbe0 <col:112> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x563d0e56bc68 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563d0e56bc50 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563d0e56bc30 <col:131> '_Bool' lvalue Var 0x563d0e569010 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x563d0e56bec8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563d0e56beb0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563d0e56bcc0 <col:148> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x563d0e56be90 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563d0e56be60 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563d0e56bd80 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563d0e56bd38 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563d0e56bd20 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563d0e56bce0 <col:166> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563d0e56bd68 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563d0e56bd50 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563d0e56bd00 <col:184> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x563d0e56be18 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563d0e56bdd0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563d0e56bda0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563d0e56be48 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563d0e56be30 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563d0e56bdf8 <col:212> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563d0e56c5c0 <line:727:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e56c018 <col:3> '_Bool' lvalue Var 0x563d0e569010 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e56c5a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d0e56c578 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563d0e56c530 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d0e56c518 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d0e56c038 <col:20> '_Bool' lvalue Var 0x563d0e569580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d0e56c560 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d0e56c548 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d0e56c058 <col:36> '_Bool' lvalue Var 0x563d0e569010 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x563d0e56c4f8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563d0e56c4c8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563d0e56c268 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563d0e56c188 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563d0e56c0b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563d0e56c098 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563d0e56c078 <col:55> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563d0e56c168 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563d0e56c100 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563d0e56c0e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563d0e56c0c8 <col:74> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x563d0e56c150 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563d0e56c138 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563d0e56c118 <col:93> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563d0e56c248 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563d0e56c1e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563d0e56c1c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563d0e56c1a8 <col:112> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x563d0e56c230 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563d0e56c218 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563d0e56c1f8 <col:131> '_Bool' lvalue Var 0x563d0e569010 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x563d0e56c4b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563d0e56c498 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563d0e56c288 <col:148> '_Bool' lvalue Var 0x563d0e569010 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x563d0e56c478 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563d0e56c448 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563d0e56c348 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563d0e56c300 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563d0e56c2e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563d0e56c2a8 <col:166> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563d0e56c330 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563d0e56c318 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563d0e56c2c8 <col:184> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x563d0e56c418 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563d0e56c398 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563d0e56c368 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563d0e56c430 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563d0e56c3f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563d0e56c3c0 <col:219> 'int' 0
|   |-BinaryOperator 0x563d0e56c638 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563d0e56c5e0 <col:3> 'int' lvalue Var 0x563d0e568708 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x563d0e56c620 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d0e56c600 <col:25> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
|   |-BinaryOperator 0x563d0e56c768 <line:729:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x563d0e56c658 <col:3> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
|   | `-ConditionalOperator 0x563d0e56c738 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x563d0e56c6f0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563d0e56c6d8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563d0e56c678 <col:7> '_Bool' lvalue Var 0x563d0e568d10 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x563d0e56c708 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d0e56c698 <col:25> 'int' lvalue Var 0x563d0e568d90 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x563d0e56c720 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x563d0e56c6b8 <col:37> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
|   |-BinaryOperator 0x563d0e56c800 <line:730:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e56c788 <col:3> '_Bool' lvalue Var 0x563d0e568d10 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x563d0e56c7d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563d0e56c7a8 <col:28> 'int' 0
|   |-CallExpr 0x563d0e56c858 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d0e56c840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e56c820 <col:3> 'void ()' Function 0x563d0e50f570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d0e56c8b0 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d0e56c898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e56c878 <col:3> 'void ()' Function 0x563d0e50f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d0e56c928 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563d0e56c8d0 <col:3> 'int' lvalue Var 0x563d0e568828 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x563d0e56c910 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d0e56c8f0 <col:25> 'int' lvalue Var 0x563d0e569470 'y' 'int'
|   |-CallExpr 0x563d0e56c980 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d0e56c968 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e56c948 <col:3> 'void ()' Function 0x563d0e50f570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d0e56c9d8 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d0e56c9c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e56c9a0 <col:3> 'void ()' Function 0x563d0e50f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d0e56ccc0 <line:736:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563d0e56c9f8 <col:3> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
|   | `-ConditionalOperator 0x563d0e56cc90 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563d0e56cab8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563d0e56ca70 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563d0e56ca58 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563d0e56ca18 <col:7> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563d0e56caa0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563d0e56ca88 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563d0e56ca38 <col:25> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x563d0e56cc78 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d0e56cad8 <col:42> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x563d0e56cc58 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563d0e56cc28 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563d0e56cb98 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563d0e56cb50 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563d0e56cb38 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563d0e56caf8 <col:55> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563d0e56cb80 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563d0e56cb68 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563d0e56cb18 <col:73> '_Bool' lvalue Var 0x563d0e569010 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563d0e56cbf8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563d0e56cbb8 <col:90> 'int' lvalue Var 0x563d0e5692f8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563d0e56cc10 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d0e56cbd8 <col:102> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
|   |-BinaryOperator 0x563d0e56cec8 <line:737:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e56cce0 <col:3> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e56ceb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d0e56ce80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563d0e56cda0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563d0e56cd58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563d0e56cd40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563d0e56cd00 <col:20> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563d0e56cd88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563d0e56cd70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563d0e56cd20 <col:38> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563d0e56ce38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563d0e56cdf0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563d0e56cdc0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563d0e56ce68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563d0e56ce50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d0e56ce18 <col:66> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563d0e56d1c8 <line:738:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e56cee8 <col:3> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e56d1b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d0e56d180 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563d0e56d0a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563d0e56cfc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563d0e56cf78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563d0e56cf60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563d0e56cf08 <col:20> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563d0e56cfa8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563d0e56cf90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563d0e56cf28 <col:38> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x563d0e56d080 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563d0e56d038 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563d0e56d020 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563d0e56cfe0 <col:56> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563d0e56d068 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563d0e56d050 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563d0e56d000 <col:74> '_Bool' lvalue Var 0x563d0e569010 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563d0e56d138 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563d0e56d0f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563d0e56d0c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563d0e56d168 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563d0e56d150 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d0e56d118 <col:102> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563d0e56d3d0 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e56d1e8 <col:3> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e56d3b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d0e56d388 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563d0e56d2a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563d0e56d260 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563d0e56d248 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563d0e56d208 <col:20> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563d0e56d290 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563d0e56d278 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563d0e56d228 <col:38> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563d0e56d340 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563d0e56d2f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563d0e56d2c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563d0e56d370 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563d0e56d358 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d0e56d320 <col:66> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563d0e56d6b8 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e56d3f0 <col:3> '_Bool' lvalue Var 0x563d0e569010 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e56d6a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d0e56d670 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563d0e56d590 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563d0e56d4b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563d0e56d468 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563d0e56d450 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563d0e56d410 <col:20> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563d0e56d498 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563d0e56d480 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563d0e56d430 <col:38> '_Bool' lvalue Var 0x563d0e568e80 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x563d0e56d570 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563d0e56d528 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563d0e56d510 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563d0e56d4d0 <col:56> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563d0e56d558 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563d0e56d540 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563d0e56d4f0 <col:74> '_Bool' lvalue Var 0x563d0e569010 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563d0e56d628 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563d0e56d5e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563d0e56d5b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563d0e56d658 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563d0e56d640 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d0e56d608 <col:102> '_Bool' lvalue Var 0x563d0e569010 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x563d0e56d710 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d0e56d6f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e56d6d8 <col:3> 'void ()' Function 0x563d0e50f570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d0e56d768 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d0e56d750 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e56d730 <col:3> 'void ()' Function 0x563d0e50f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d0e56d820 <line:743:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563d0e56d788 <col:3> 'int' lvalue Var 0x563d0e5685e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563d0e56d800 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563d0e56d7e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d0e56d7a8 <col:22> 'int' lvalue Var 0x563d0e5685e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563d0e56d7c8 <col:41> 'int' 1
|   |-CallExpr 0x563d0e56d878 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d0e56d860 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e56d840 <col:3> 'void ()' Function 0x563d0e50f570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563d0e56d928 <line:745:3, col:36>
|     `-CallExpr 0x563d0e56d908 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563d0e56d8f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563d0e56d898 <col:10> 'void *(void)' Function 0x563d0e50efc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563d0e56db40 prev 0x563d0e568268 <line:747:1, line:782:1> line:747:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x563d0e56daa8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563d0e571820 <line:748:1, line:782:1>
|   |-CallExpr 0x563d0e56dc20 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d0e56dc08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e56dbe8 <col:3> 'void ()' Function 0x563d0e50f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d0e56dc80 <line:750:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563d0e56dc40 <col:3> 'int' lvalue Var 0x563d0e569470 'y' 'int'
|   | `-IntegerLiteral 0x563d0e56dc60 <col:7> 'int' 1
|   |-CallExpr 0x563d0e56dcd8 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d0e56dcc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e56dca0 <col:3> 'void ()' Function 0x563d0e50f570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d0e56dd30 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d0e56dd18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e56dcf8 <col:3> 'void ()' Function 0x563d0e50f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d0e56dda8 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563d0e56dd50 <col:3> 'int' lvalue Var 0x563d0e568948 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x563d0e56dd90 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d0e56dd70 <col:25> 'int' lvalue Var 0x563d0e569470 'y' 'int'
|   |-CallExpr 0x563d0e56de00 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d0e56dde8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e56ddc8 <col:3> 'void ()' Function 0x563d0e50f570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d0e56de58 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d0e56de40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e56de20 <col:3> 'void ()' Function 0x563d0e50f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d0e56def0 <line:756:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e56de78 <col:3> '_Bool' lvalue Var 0x563d0e569508 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x563d0e56ded0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x563d0e56deb8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x563d0e56de98 <col:19> '_Bool (void)' Function 0x563d0e50ec80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x563d0e56dfa8 <line:757:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e56df10 <col:3> '_Bool' lvalue Var 0x563d0e569580 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x563d0e56df88 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x563d0e56df70 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x563d0e56df30 <col:19> '_Bool (void)' Function 0x563d0e50ec80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x563d0e56e020 <line:758:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e56dfc8 <col:3> '_Bool' lvalue Var 0x563d0e568d10 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e56e008 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d0e56dfe8 <col:21> '_Bool' lvalue Var 0x563d0e569580 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x563d0e56e098 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563d0e56e040 <col:3> 'int' lvalue Var 0x563d0e568d90 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x563d0e56e080 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d0e56e060 <col:15> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
|   |-BinaryOperator 0x563d0e56e4d0 <line:760:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x563d0e56e0b8 <col:3> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
|   | `-ConditionalOperator 0x563d0e56e4a0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x563d0e56e2c8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x563d0e56e1e8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x563d0e56e110 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x563d0e56e0f8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x563d0e56e0d8 <col:8> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x563d0e56e1c8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x563d0e56e160 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x563d0e56e148 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x563d0e56e128 <col:27> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x563d0e56e1b0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x563d0e56e198 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x563d0e56e178 <col:46> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x563d0e56e2a8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x563d0e56e240 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x563d0e56e228 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x563d0e56e208 <col:65> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x563d0e56e290 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x563d0e56e278 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x563d0e56e258 <col:84> '_Bool' lvalue Var 0x563d0e569088 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x563d0e56e488 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d0e56e2e8 <col:101> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
|   |   `-ParenExpr 0x563d0e56e468 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x563d0e56e438 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x563d0e56e3a8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563d0e56e360 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563d0e56e348 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563d0e56e308 <col:106> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563d0e56e390 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563d0e56e378 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563d0e56e328 <col:124> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563d0e56e408 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563d0e56e3c8 <col:141> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x563d0e56e420 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d0e56e3e8 <col:153> 'int' lvalue Var 0x563d0e5692f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x563d0e56e9e0 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563d0e56e4f0 <col:3> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x563d0e56e9b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563d0e56e980 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563d0e56e968 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563d0e56e510 <col:15> '_Bool' lvalue Var 0x563d0e569580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563d0e56e998 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d0e56e530 <col:31> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x563d0e56e948 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563d0e56e918 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563d0e56e740 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563d0e56e660 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563d0e56e588 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563d0e56e570 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563d0e56e550 <col:45> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563d0e56e640 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563d0e56e5d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563d0e56e5c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563d0e56e5a0 <col:64> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x563d0e56e628 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563d0e56e610 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563d0e56e5f0 <col:83> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563d0e56e720 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563d0e56e6b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563d0e56e6a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563d0e56e680 <col:102> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x563d0e56e708 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563d0e56e6f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563d0e56e6d0 <col:121> '_Bool' lvalue Var 0x563d0e569088 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563d0e56e900 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563d0e56e760 <col:138> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x563d0e56e8e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563d0e56e8b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563d0e56e820 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563d0e56e7d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563d0e56e7c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563d0e56e780 <col:151> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563d0e56e808 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563d0e56e7f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563d0e56e7a0 <col:169> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x563d0e56e880 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563d0e56e840 <col:186> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x563d0e56e898 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563d0e56e860 <col:198> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x563d0e56eef0 <line:762:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563d0e56ea00 <col:3> 'int' lvalue Var 0x563d0e5692f8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x563d0e56eec0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563d0e56ee90 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563d0e56ee78 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563d0e56ea20 <col:15> '_Bool' lvalue Var 0x563d0e569580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563d0e56eea8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d0e56ea40 <col:31> 'int' lvalue Var 0x563d0e5692f8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x563d0e56ee58 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563d0e56ee28 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563d0e56ec50 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563d0e56eb70 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563d0e56ea98 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563d0e56ea80 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563d0e56ea60 <col:45> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563d0e56eb50 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563d0e56eae8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563d0e56ead0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563d0e56eab0 <col:64> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x563d0e56eb38 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563d0e56eb20 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563d0e56eb00 <col:83> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563d0e56ec30 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563d0e56ebc8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563d0e56ebb0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563d0e56eb90 <col:102> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x563d0e56ec18 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563d0e56ec00 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563d0e56ebe0 <col:121> '_Bool' lvalue Var 0x563d0e569088 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563d0e56ee10 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563d0e56ec70 <col:138> 'int' lvalue Var 0x563d0e5692f8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x563d0e56edf0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563d0e56edc0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563d0e56ed30 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563d0e56ece8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563d0e56ecd0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563d0e56ec90 <col:151> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563d0e56ed18 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563d0e56ed00 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563d0e56ecb0 <col:169> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x563d0e56ed90 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563d0e56ed50 <col:186> 'int' lvalue Var 0x563d0e5692f8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x563d0e56eda8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563d0e56ed70 <col:198> 'int' lvalue Var 0x563d0e5692f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x563d0e56f4a8 <line:763:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e56ef10 <col:3> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e56f490 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d0e56f460 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563d0e56f418 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d0e56f400 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d0e56ef30 <col:20> '_Bool' lvalue Var 0x563d0e569580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d0e56f448 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d0e56f430 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d0e56ef50 <col:36> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x563d0e56f3e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563d0e56f3b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563d0e56f170 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563d0e56f090 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563d0e56efb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563d0e56efa0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563d0e56ef80 <col:55> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563d0e56f070 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563d0e56f008 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563d0e56eff0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563d0e56efd0 <col:74> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x563d0e56f058 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563d0e56f040 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563d0e56f020 <col:93> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563d0e56f150 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563d0e56f0e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563d0e56f0d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563d0e56f0b0 <col:112> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x563d0e56f138 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563d0e56f120 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563d0e56f100 <col:131> '_Bool' lvalue Var 0x563d0e569088 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x563d0e56f398 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563d0e56f380 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563d0e56f190 <col:148> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x563d0e56f360 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563d0e56f330 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563d0e56f250 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563d0e56f208 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563d0e56f1f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563d0e56f1b0 <col:166> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563d0e56f238 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563d0e56f220 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563d0e56f1d0 <col:184> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x563d0e56f2e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563d0e56f2a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563d0e56f270 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563d0e56f318 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563d0e56f300 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563d0e56f2c8 <col:212> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563d0e56fa70 <line:764:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e56f4c8 <col:3> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e56fa58 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d0e56fa28 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563d0e56f9e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d0e56f9c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d0e56f4e8 <col:20> '_Bool' lvalue Var 0x563d0e569580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d0e56fa10 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d0e56f9f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d0e56f508 <col:36> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x563d0e56f9a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563d0e56f978 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563d0e56f718 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563d0e56f638 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563d0e56f560 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563d0e56f548 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563d0e56f528 <col:55> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563d0e56f618 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563d0e56f5b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563d0e56f598 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563d0e56f578 <col:74> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x563d0e56f600 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563d0e56f5e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563d0e56f5c8 <col:93> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563d0e56f6f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563d0e56f690 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563d0e56f678 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563d0e56f658 <col:112> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x563d0e56f6e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563d0e56f6c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563d0e56f6a8 <col:131> '_Bool' lvalue Var 0x563d0e569088 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x563d0e56f960 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563d0e56f948 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563d0e56f738 <col:148> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x563d0e56f928 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563d0e56f8f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563d0e56f7f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563d0e56f7b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563d0e56f798 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563d0e56f758 <col:166> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563d0e56f7e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563d0e56f7c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563d0e56f778 <col:184> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x563d0e56f8c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563d0e56f848 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563d0e56f818 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563d0e56f8e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563d0e56f8a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563d0e56f870 <col:219> 'int' 0
|   |-BinaryOperator 0x563d0e570038 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e56fa90 <col:3> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e570020 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d0e56fff0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563d0e56ffa8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d0e56ff90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d0e56fab0 <col:20> '_Bool' lvalue Var 0x563d0e569580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d0e56ffd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d0e56ffc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d0e56fad0 <col:36> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x563d0e56ff50 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563d0e56ff20 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563d0e56fce0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563d0e56fc00 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563d0e56fb28 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563d0e56fb10 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563d0e56faf0 <col:55> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563d0e56fbe0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563d0e56fb78 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563d0e56fb60 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563d0e56fb40 <col:74> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x563d0e56fbc8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563d0e56fbb0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563d0e56fb90 <col:93> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563d0e56fcc0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563d0e56fc58 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563d0e56fc40 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563d0e56fc20 <col:112> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x563d0e56fca8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563d0e56fc90 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563d0e56fc70 <col:131> '_Bool' lvalue Var 0x563d0e569088 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x563d0e56ff08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563d0e56fef0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563d0e56fd00 <col:148> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x563d0e56fed0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563d0e56fea0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563d0e56fdc0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563d0e56fd78 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563d0e56fd60 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563d0e56fd20 <col:166> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563d0e56fda8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563d0e56fd90 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563d0e56fd40 <col:184> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x563d0e56fe58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563d0e56fe10 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563d0e56fde0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563d0e56fe88 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563d0e56fe70 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563d0e56fe38 <col:212> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563d0e570600 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e570058 <col:3> '_Bool' lvalue Var 0x563d0e569088 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e5705e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d0e5705b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563d0e570570 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d0e570558 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d0e570078 <col:20> '_Bool' lvalue Var 0x563d0e569580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d0e5705a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d0e570588 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d0e570098 <col:36> '_Bool' lvalue Var 0x563d0e569088 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x563d0e570538 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563d0e570508 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563d0e5702a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563d0e5701c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563d0e5700f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563d0e5700d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563d0e5700b8 <col:55> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563d0e5701a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563d0e570140 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563d0e570128 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563d0e570108 <col:74> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x563d0e570190 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563d0e570178 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563d0e570158 <col:93> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563d0e570288 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563d0e570220 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563d0e570208 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563d0e5701e8 <col:112> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x563d0e570270 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563d0e570258 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563d0e570238 <col:131> '_Bool' lvalue Var 0x563d0e569088 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x563d0e5704f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563d0e5704d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563d0e5702c8 <col:148> '_Bool' lvalue Var 0x563d0e569088 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x563d0e5704b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563d0e570488 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563d0e570388 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563d0e570340 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563d0e570328 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563d0e5702e8 <col:166> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563d0e570370 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563d0e570358 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563d0e570308 <col:184> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x563d0e570458 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563d0e5703d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563d0e5703a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563d0e570470 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563d0e570430 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563d0e570400 <col:219> 'int' 0
|   |-BinaryOperator 0x563d0e570678 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563d0e570620 <col:3> 'int' lvalue Var 0x563d0e568a68 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x563d0e570660 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d0e570640 <col:25> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
|   |-BinaryOperator 0x563d0e5707a8 <line:768:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x563d0e570698 <col:3> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
|   | `-ConditionalOperator 0x563d0e570778 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x563d0e570730 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563d0e570718 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563d0e5706b8 <col:7> '_Bool' lvalue Var 0x563d0e568d10 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x563d0e570748 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d0e5706d8 <col:25> 'int' lvalue Var 0x563d0e568d90 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x563d0e570760 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x563d0e5706f8 <col:37> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
|   |-BinaryOperator 0x563d0e570840 <line:769:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e5707c8 <col:3> '_Bool' lvalue Var 0x563d0e568d10 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x563d0e570818 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563d0e5707e8 <col:28> 'int' 0
|   |-CallExpr 0x563d0e570898 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d0e570880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e570860 <col:3> 'void ()' Function 0x563d0e50f570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d0e5708f0 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d0e5708d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e5708b8 <col:3> 'void ()' Function 0x563d0e50f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d0e570bd8 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563d0e570910 <col:3> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
|   | `-ConditionalOperator 0x563d0e570ba8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563d0e5709d0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563d0e570988 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563d0e570970 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563d0e570930 <col:7> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563d0e5709b8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563d0e5709a0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563d0e570950 <col:25> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x563d0e570b90 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d0e5709f0 <col:42> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x563d0e570b70 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563d0e570b40 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563d0e570ab0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563d0e570a68 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563d0e570a50 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563d0e570a10 <col:55> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563d0e570a98 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563d0e570a80 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563d0e570a30 <col:73> '_Bool' lvalue Var 0x563d0e569088 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563d0e570b10 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563d0e570ad0 <col:90> 'int' lvalue Var 0x563d0e5692f8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563d0e570b28 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d0e570af0 <col:102> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
|   |-BinaryOperator 0x563d0e570de0 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e570bf8 <col:3> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e570dc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d0e570d98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563d0e570cb8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563d0e570c70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563d0e570c58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563d0e570c18 <col:20> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563d0e570ca0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563d0e570c88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563d0e570c38 <col:38> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d0e570d50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563d0e570d08 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563d0e570cd8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563d0e570d80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563d0e570d68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d0e570d30 <col:66> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563d0e5710e8 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e570e00 <col:3> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e5710d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d0e5710a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563d0e570fc0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563d0e570ec0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563d0e570e78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563d0e570e60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563d0e570e20 <col:20> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563d0e570ea8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563d0e570e90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563d0e570e40 <col:38> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563d0e570fa0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563d0e570f38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563d0e570f20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563d0e570ee0 <col:56> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563d0e570f68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563d0e570f50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563d0e570f00 <col:74> '_Bool' lvalue Var 0x563d0e569088 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d0e571058 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563d0e571010 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563d0e570fe0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563d0e571088 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563d0e571070 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d0e571038 <col:102> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563d0e5712f0 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e571108 <col:3> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e5712d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d0e5712a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563d0e5711c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563d0e571180 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563d0e571168 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563d0e571128 <col:20> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563d0e5711b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563d0e571198 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563d0e571148 <col:38> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d0e571260 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563d0e571218 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563d0e5711e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563d0e571290 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563d0e571278 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d0e571240 <col:66> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563d0e5715d8 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563d0e571310 <col:3> '_Bool' lvalue Var 0x563d0e569088 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563d0e5715c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d0e571590 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563d0e5714b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563d0e5713d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563d0e571388 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563d0e571370 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563d0e571330 <col:20> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563d0e5713b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563d0e5713a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563d0e571350 <col:38> '_Bool' lvalue Var 0x563d0e568f20 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563d0e571490 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563d0e571448 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563d0e571430 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563d0e5713f0 <col:56> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563d0e571478 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563d0e571460 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563d0e571410 <col:74> '_Bool' lvalue Var 0x563d0e569088 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d0e571548 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563d0e571500 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563d0e5714d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563d0e571578 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563d0e571560 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d0e571528 <col:102> '_Bool' lvalue Var 0x563d0e569088 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x563d0e571630 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d0e571618 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e5715f8 <col:3> 'void ()' Function 0x563d0e50f570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d0e571688 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d0e571670 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e571650 <col:3> 'void ()' Function 0x563d0e50f4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d0e571740 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563d0e5716a8 <col:3> 'int' lvalue Var 0x563d0e5685e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563d0e571720 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563d0e571708 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d0e5716c8 <col:22> 'int' lvalue Var 0x563d0e5685e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563d0e5716e8 <col:41> 'int' 1
|   |-CallExpr 0x563d0e571798 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d0e571780 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d0e571760 <col:3> 'void ()' Function 0x563d0e50f570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563d0e571810 <line:781:3, col:36>
|     `-CallExpr 0x563d0e5717f0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563d0e5717d8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563d0e5717b8 <col:10> 'void *(void)' Function 0x563d0e50efc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563d0e571958 prev 0x563d0e568330 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x563d0e5719f8 <line:784:1, line:785:1>
|-FunctionDecl 0x563d0e571a28 prev 0x563d0e5683f0 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x563d0e571ac8 <line:787:1, line:788:1>
|-FunctionDecl 0x563d0e571af8 prev 0x563d0e5684b0 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x563d0e571b98 <line:790:1, line:791:1>
`-FunctionDecl 0x563d0e571c08 <line:792:1, line:814:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x563d0e573660 <line:793:1, line:814:1>
    |-DeclStmt 0x563d0e571d20 <line:794:3, col:18>
    | `-VarDecl 0x563d0e571cb8 <col:3, col:13> col:13 used t1727 'pthread_t':'unsigned long'
    |-CallExpr 0x563d0e571f28 <line:795:3, col:54> 'int'
    | |-ImplicitCastExpr 0x563d0e571f10 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563d0e571d38 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563d0e54f9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563d0e571d78 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563d0e571d58 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563d0e571cb8 't1727' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563d0e571f68 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563d0e571df0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x563d0e571dc8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563d0e571d90 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x563d0e571f80 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563d0e571e10 <col:39> 'void *(void *)' Function 0x563d0e569698 'P0' 'void *(void *)'
    | `-ParenExpr 0x563d0e571e90 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x563d0e571e68 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563d0e571e30 <col:52> 'int' 0
    |-DeclStmt 0x563d0e572028 <line:796:3, col:18>
    | `-VarDecl 0x563d0e571fc0 <col:3, col:13> col:13 used t1728 'pthread_t':'unsigned long'
    |-CallExpr 0x563d0e5721d0 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x563d0e5721b8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563d0e572040 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563d0e54f9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563d0e572080 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563d0e572060 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563d0e571fc0 't1728' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563d0e572210 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563d0e5720f8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x563d0e5720d0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563d0e572098 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x563d0e572228 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563d0e572118 <col:39> 'void *(void *)' Function 0x563d0e56db40 'P1' 'void *(void *)'
    | `-ParenExpr 0x563d0e572198 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x563d0e572170 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563d0e572138 <col:52> 'int' 0
    |-CallExpr 0x563d0e572278 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563d0e572260 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563d0e572240 <col:3> 'void ()' Function 0x563d0e50f4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563d0e572348 <line:799:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x563d0e572298 <col:3> '_Bool' lvalue Var 0x563d0e568b00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x563d0e572330 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x563d0e572310 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x563d0e5722f8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x563d0e5722b8 <col:21> 'int' lvalue Var 0x563d0e5685e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x563d0e5722d8 <col:41> 'int' 2
    |-CallExpr 0x563d0e5723a0 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563d0e572388 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563d0e572368 <col:3> 'void ()' Function 0x563d0e50f570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563d0e572418 <line:801:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563d0e572400 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563d0e5723c0 <col:3> 'void (int)' Function 0x563d0e50ee50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x563d0e572458 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563d0e572440 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563d0e5723e0 <col:21> '_Bool' lvalue Var 0x563d0e568b00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x563d0e5724a8 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563d0e572490 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563d0e572470 <col:3> 'void ()' Function 0x563d0e50f4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563d0e572790 <line:803:3, col:103> 'int' '='
    | |-DeclRefExpr 0x563d0e5724c8 <col:3> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
    | `-ConditionalOperator 0x563d0e572760 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x563d0e572588 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x563d0e572540 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x563d0e572528 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x563d0e5724e8 <col:7> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x563d0e572570 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x563d0e572558 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x563d0e572508 <col:25> '_Bool' lvalue Var 0x563d0e568e08 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x563d0e572748 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563d0e5725a8 <col:42> 'int' lvalue Var 0x563d0e569200 'x$w_buff0' 'int'
    |   `-ParenExpr 0x563d0e572728 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x563d0e5726f8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x563d0e572668 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x563d0e572620 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x563d0e572608 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x563d0e5725c8 <col:55> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x563d0e572650 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x563d0e572638 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x563d0e5725e8 <col:73> '_Bool' lvalue Var 0x563d0e568f98 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x563d0e5726c8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x563d0e572688 <col:90> 'int' lvalue Var 0x563d0e5692f8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x563d0e5726e0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x563d0e5726a8 <col:102> 'int' lvalue Var 0x563d0e568c78 'x' 'int'
    |-BinaryOperator 0x563d0e572998 <line:804:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563d0e5727b0 <col:3> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x563d0e572980 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563d0e572950 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563d0e572870 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563d0e572828 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563d0e572810 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563d0e5727d0 <col:20> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563d0e572858 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563d0e572840 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563d0e5727f0 <col:38> '_Bool' lvalue Var 0x563d0e568e08 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563d0e572908 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563d0e5728c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563d0e572890 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563d0e572938 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563d0e572920 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563d0e5728e8 <col:66> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x563d0e572c80 <line:805:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563d0e5729b8 <col:3> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x563d0e572c68 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563d0e572c38 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563d0e572b58 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563d0e572a78 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563d0e572a30 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563d0e572a18 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563d0e5729d8 <col:20> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563d0e572a60 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563d0e572a48 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563d0e5729f8 <col:38> '_Bool' lvalue Var 0x563d0e568e08 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563d0e572b38 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563d0e572af0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563d0e572ad8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563d0e572a98 <col:56> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563d0e572b20 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563d0e572b08 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563d0e572ab8 <col:74> '_Bool' lvalue Var 0x563d0e568f98 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563d0e572bf0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563d0e572ba8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563d0e572b78 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563d0e572c20 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563d0e572c08 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563d0e572bd0 <col:102> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x563d0e572e88 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563d0e572ca0 <col:3> '_Bool' lvalue Var 0x563d0e568e08 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563d0e572e70 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563d0e572e40 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563d0e572d60 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563d0e572d18 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563d0e572d00 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563d0e572cc0 <col:20> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563d0e572d48 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563d0e572d30 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563d0e572ce0 <col:38> '_Bool' lvalue Var 0x563d0e568e08 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563d0e572df8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563d0e572db0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563d0e572d80 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563d0e572e28 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563d0e572e10 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563d0e572dd8 <col:66> '_Bool' lvalue Var 0x563d0e568e08 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x563d0e573188 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563d0e572ea8 <col:3> '_Bool' lvalue Var 0x563d0e568f98 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563d0e573170 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563d0e573140 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563d0e573060 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563d0e572f68 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563d0e572f20 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563d0e572f08 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563d0e572ec8 <col:20> '_Bool' lvalue Var 0x563d0e569278 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563d0e572f50 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563d0e572f38 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563d0e572ee8 <col:38> '_Bool' lvalue Var 0x563d0e568e08 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563d0e573040 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563d0e572ff8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563d0e572fe0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563d0e572f88 <col:56> '_Bool' lvalue Var 0x563d0e569370 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563d0e573028 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563d0e573010 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563d0e572fc0 <col:74> '_Bool' lvalue Var 0x563d0e568f98 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563d0e5730f8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563d0e5730b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563d0e573080 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563d0e573128 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563d0e573110 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563d0e5730d8 <col:102> '_Bool' lvalue Var 0x563d0e568f98 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x563d0e5731e0 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563d0e5731c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563d0e5731a8 <col:3> 'void ()' Function 0x563d0e50f570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563d0e573238 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563d0e573220 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563d0e573200 <col:3> 'void ()' Function 0x563d0e50f4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563d0e573508 <line:810:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x563d0e573258 <col:3> '_Bool' lvalue Var 0x563d0e568b78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x563d0e5734f0 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x563d0e5734d8 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x563d0e5734b8 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x563d0e573498 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x563d0e573400 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x563d0e573368 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x563d0e5732d0 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x563d0e5732b8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x563d0e573278 <col:23> 'int' lvalue Var 0x563d0e568708 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x563d0e573298 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x563d0e573348 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x563d0e573330 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x563d0e5732f0 <col:51> 'int' lvalue Var 0x563d0e568828 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x563d0e573310 <col:74> 'int' 0
    |         | `-BinaryOperator 0x563d0e5733e0 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x563d0e5733c8 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x563d0e573388 <col:79> 'int' lvalue Var 0x563d0e568948 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x563d0e5733a8 <col:102> 'int' 1
    |         `-BinaryOperator 0x563d0e573478 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x563d0e573460 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x563d0e573420 <col:107> 'int' lvalue Var 0x563d0e568a68 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x563d0e573440 <col:130> 'int' 0
    |-CallExpr 0x563d0e573560 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563d0e573548 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563d0e573528 <col:3> 'void ()' Function 0x563d0e50f570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563d0e5735d8 <line:812:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563d0e5735c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563d0e573580 <col:3> 'void (int)' Function 0x563d0e50f238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x563d0e573618 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563d0e573600 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563d0e5735a0 <col:21> '_Bool' lvalue Var 0x563d0e568b78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x563d0e573650 <line:813:3, col:10>
      `-IntegerLiteral 0x563d0e573630 <col:10> 'int' 0
