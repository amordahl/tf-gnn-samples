TranslationUnitDecl 0x56450adb5f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56450adb6848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56450adb6520 '__int128'
|-TypedefDecl 0x56450adb68b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56450adb6540 'unsigned __int128'
|-TypedefDecl 0x56450adb6bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56450adb6990 'struct __NSConstantString_tag'
|   `-Record 0x56450adb6910 '__NSConstantString_tag'
|-TypedefDecl 0x56450adb6c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56450adb6c20 'char *'
|   `-BuiltinType 0x56450adb6020 'char'
|-TypedefDecl 0x56450adf5b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56450adb6f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56450adb6d40 'struct __va_list_tag'
|     `-Record 0x56450adb6cc0 '__va_list_tag'
|-FunctionDecl 0x56450adf5ca0 <pthread-wmm/mix033_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56450adf5bd0 <col:31> col:34 'int'
|-FunctionDecl 0x56450adf5e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56450adf5f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56450adf60d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56450adf6048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56450adf6308 <col:40, col:99>
|   |-IfStmt 0x56450adf62d8 <col:42, col:88>
|   | |-UnaryOperator 0x56450adf61b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56450adf61a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56450adf6180 <col:47> 'int' lvalue ParmVar 0x56450adf6048 'expression' 'int'
|   | `-CompoundStmt 0x56450adf62c0 <col:59, col:88>
|   |   `-LabelStmt 0x56450adf62a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56450adf6238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56450adf6220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56450adf61d0 <col:68> 'void () __attribute__((noreturn))' Function 0x56450adf5f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56450adf62f0 <col:89>
|   `-ReturnStmt 0x56450adf62f8 <col:91>
|-FunctionDecl 0x56450adf6350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56450adf6410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56450adf6790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56450adf64c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56450adf6548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56450adf65c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56450adf6648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56450adf6850 <line:10:22>
|-FunctionDecl 0x56450ae1c8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56450adf68c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56450adf6940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56450adf69c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56450adf6a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56450ae1c960 <line:13:22>
|-FunctionDecl 0x56450ae1cc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56450ae1c9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56450ae1ca50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56450ae1cad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56450ae1ccc8 <line:15:22>
|-TypedefDecl 0x56450ae1cd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56450adb60e0 'unsigned char'
|-TypedefDecl 0x56450ae1cda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56450adb6100 'unsigned short'
|-TypedefDecl 0x56450ae1ce18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56450adb6120 'unsigned int'
|-TypedefDecl 0x56450ae1ce88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-TypedefDecl 0x56450ae1cef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56450adb6040 'signed char'
|-TypedefDecl 0x56450ae1cf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56450adb60e0 'unsigned char'
|-TypedefDecl 0x56450ae1cfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56450adb6060 'short'
|-TypedefDecl 0x56450ae1d048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56450adb6100 'unsigned short'
|-TypedefDecl 0x56450ae1d0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56450adb6080 'int'
|-TypedefDecl 0x56450ae1d128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56450adb6120 'unsigned int'
|-TypedefDecl 0x56450ae1d198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae1d208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-TypedefDecl 0x56450ae1d278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae1d2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-TypedefDecl 0x56450ae1d358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-TypedefDecl 0x56450ae1d3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56450adb6120 'unsigned int'
|-TypedefDecl 0x56450ae1d438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56450adb6120 'unsigned int'
|-TypedefDecl 0x56450ae1d4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-TypedefDecl 0x56450ae1d518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-TypedefDecl 0x56450ae1d588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56450adb6120 'unsigned int'
|-TypedefDecl 0x56450ae1d5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-TypedefDecl 0x56450ae1d668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae1d6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae1d748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56450adb6080 'int'
|-RecordDecl 0x56450ae1d7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56450ae1d918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56450ae1d9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56450ae1d970 'struct __fsid_t' sugar
|   `-RecordType 0x56450ae1d820 '__fsid_t'
|     `-Record 0x56450ae1d7a0 ''
|-TypedefDecl 0x56450ae1da58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae1dac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-TypedefDecl 0x56450ae1db38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-TypedefDecl 0x56450ae1dba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56450adb6120 'unsigned int'
|-TypedefDecl 0x56450ae1dc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae1dc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56450adb6120 'unsigned int'
|-TypedefDecl 0x56450ae1dcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae1dd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56450adb6080 'int'
|-TypedefDecl 0x56450ae1ddd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56450adb6080 'int'
|-TypedefDecl 0x56450ae1de48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56450adb6080 'int'
|-TypedefDecl 0x56450ae1deb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56450adb67a0 'void *'
|   `-BuiltinType 0x56450adb5fe0 'void'
|-TypedefDecl 0x56450ae1df28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae1df98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae1e008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae1e078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-TypedefDecl 0x56450ae1e0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-TypedefDecl 0x56450ae1e158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-TypedefDecl 0x56450ae1e1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-TypedefDecl 0x56450ae1e238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae1e2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae1e318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae1e388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-TypedefDecl 0x56450ae1e418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56450ae1e3e0 '__off64_t' sugar
|   |-Typedef 0x56450ae1d6d8 '__off64_t'
|   `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae1e510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56450ae1e4d0 '__quad_t *'
|   `-TypedefType 0x56450ae1e470 '__quad_t' sugar
|     |-Typedef 0x56450ae1d278 '__quad_t'
|     `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae1e580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56450adb6c20 'char *'
|   `-BuiltinType 0x56450adb6020 'char'
|-TypedefDecl 0x56450ae1e5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae1e660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56450adb6120 'unsigned int'
|-FunctionDecl 0x56450ae1e7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56450ae1e6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56450ae1eae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56450ae1ead8 <line:72:3, col:34>
|     `-CallExpr 0x56450ae1ea98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56450ae1ea80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56450ae1ea10 <col:10> '<builtin fn type>' Function 0x56450ae1e880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56450ae1eac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56450ae1ea30 <col:29> 'unsigned int' lvalue ParmVar 0x56450ae1e6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56450ae1e880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56450ae1e920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56450ae1e990 <col:10> Implicit
| `-ConstAttr 0x56450ae1e9e8 <col:10> Implicit
|-FunctionDecl 0x56450ae1ec40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56450ae1eb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56450ae1ef58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56450ae1ef48 <line:77:3, col:34>
|     `-CallExpr 0x56450ae1ef08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56450ae1eef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56450ae1ee78 <col:10> '<builtin fn type>' Function 0x56450ae1ece8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56450ae1ef30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56450ae1ee98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56450ae1eb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56450ae1ece8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56450ae1ed88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56450ae1edf8 <col:10> Implicit
| `-ConstAttr 0x56450ae1ee50 <col:10> Implicit
|-TypedefDecl 0x56450ae1ef88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-TypedefDecl 0x56450ae1f018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56450ae1efe0 '__time_t' sugar
|   |-Typedef 0x56450ae1dc18 '__time_t'
|   `-BuiltinType 0x56450adb60a0 'long'
|-RecordDecl 0x56450ae1f070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56450ae1f128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56450ae1f1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56450ae1f248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56450ae1f210 '__pid_t' sugar
|   |-Typedef 0x56450ae1d748 '__pid_t'
|   `-BuiltinType 0x56450adb6080 'int'
|-RecordDecl 0x56450ae1f2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56450ae1f360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56450ae1f3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56450ae1f470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56450ae1f4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-RecordDecl 0x56450ae1f530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56450ae1f7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56450ae218b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56450ae1f810 'struct cpu_set_t' sugar
|   `-RecordType 0x56450ae1f5b0 'cpu_set_t'
|     `-Record 0x56450ae1f530 ''
|-FunctionDecl 0x56450ae21b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56450ae21958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56450ae21a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56450ae21c38 <line:107:19>
|-FunctionDecl 0x56450ae21e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56450ae21ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56450ae21eb8 <col:69>
|-FunctionDecl 0x56450ae22030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56450ae21f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56450ae220d8 <col:64>
|-FunctionDecl 0x56450ae22398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56450ae22140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56450ae22278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56450ae22448 <line:113:22>
|-FunctionDecl 0x56450ae226c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56450ae224b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56450ae225a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56450ae22778 <col:88>
|-FunctionDecl 0x56450ae22a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56450ae227e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56450ae228c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56450ae22950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56450ae22b50 <col:62>
|-FunctionDecl 0x56450ae22cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56450ae22bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56450ae22d70 <col:63>
|-FunctionDecl 0x56450ae22e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56450ae22f38 <col:47>
|-FunctionDecl 0x56450ae23040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56450ae22fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56450ae230e8 <col:69>
|-FunctionDecl 0x56450ae231f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56450ae23158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56450ae23298 <col:69>
|-FunctionDecl 0x56450ae23558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56450ae23300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56450ae23438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56450ae23608 <col:88>
|-TypedefDecl 0x56450ae23698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56450ae23660 '__clock_t' sugar
|   |-Typedef 0x56450ae1da58 '__clock_t'
|   `-BuiltinType 0x56450adb60a0 'long'
|-TypedefDecl 0x56450ae23728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56450ae236f0 '__clockid_t' sugar
|   |-Typedef 0x56450ae1de48 '__clockid_t'
|   `-BuiltinType 0x56450adb6080 'int'
|-TypedefDecl 0x56450ae237b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56450ae23780 '__timer_t' sugar
|   |-Typedef 0x56450ae1deb8 '__timer_t'
|   `-PointerType 0x56450adb67a0 'void *'
|     `-BuiltinType 0x56450adb5fe0 'void'
|-RecordDecl 0x56450ae23810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56450ae238e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56450ae23950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56450ae239b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56450ae23a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56450ae23a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56450ae23af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56450ae23b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56450ae23bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56450ae23c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56450ae23c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56450ae23cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56450ae23d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56450ae23e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56450ae23e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56450ae23f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56450ae24100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56450ae241a0 <col:45>
|-FunctionDecl 0x56450ae24380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56450ae24270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56450ae24428 <col:54>
|-FunctionDecl 0x56450ae24628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56450ae24490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56450ae24508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56450ae246d8 <line:157:22>
| `-ConstAttr 0x56450ae24730 <col:63>
|-FunctionDecl 0x56450ae25560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56450ae24828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56450ae25608 <col:56>
|-FunctionDecl 0x56450ae259b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56450ae25678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56450ae256f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56450ae25770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56450ae25868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56450ae25a70 <col:54>
|-RecordDecl 0x56450ae25ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56450ae25b78 parent 0x56450adb5f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56450ae25dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56450ae25e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56450ae25ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56450ae25f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56450ae26038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56450ae26158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56450ae26100 'struct __locale_struct *'
|   `-ElaboratedType 0x56450ae26090 'struct __locale_struct' sugar
|     `-RecordType 0x56450ae25b50 'struct __locale_struct'
|       `-Record 0x56450ae25ac8 '__locale_struct'
|-TypedefDecl 0x56450ae26208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56450ae261d0 '__locale_t' sugar
|   |-Typedef 0x56450ae26158 '__locale_t'
|   `-PointerType 0x56450ae26100 'struct __locale_struct *'
|     `-ElaboratedType 0x56450ae26090 'struct __locale_struct' sugar
|       `-RecordType 0x56450ae25b50 'struct __locale_struct'
|         `-Record 0x56450ae25ac8 '__locale_struct'
|-FunctionDecl 0x56450ae26610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56450ae26278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56450ae262f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56450ae26370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56450ae26400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56450ae26478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56450ae266d8 <col:40>
|-FunctionDecl 0x56450ae268c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56450ae267a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56450ae26970 <col:66>
|-FunctionDecl 0x56450ae26a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56450ae269d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56450ae26b28 <col:69>
|-FunctionDecl 0x56450ae26d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56450ae26b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56450ae26c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56450ae26e08 <col:52>
|-FunctionDecl 0x56450ae26fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56450ae26e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56450ae26f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56450ae27060 <col:55>
|-FunctionDecl 0x56450ae271f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56450ae270e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56450ae272a0 <col:62>
|-FunctionDecl 0x56450ae27418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56450ae27308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56450ae274c0 <col:60>
|-FunctionDecl 0x56450ae27718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56450ae27578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56450ae275f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56450ae277c8 <col:44>
|-FunctionDecl 0x56450ae279d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56450ae27830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56450ae278b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56450ae27a88 <col:49>
|-VarDecl 0x56450ae27b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56450ae27c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56450ae27c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56450ae27d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56450ae27e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56450ae27f20 <col:42>
|-VarDecl 0x56450ae27f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56450ae28010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56450ae28198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56450ae28088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56450ae28240 <col:57>
|-FunctionDecl 0x56450ae28350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56450ae282c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56450ae283f8 <col:56>
|-FunctionDecl 0x56450ae29540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56450ae28478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56450ae295e8 <col:59>
|-FunctionDecl 0x56450ae296f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56450ae29658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56450ae29798 <col:48>
| `-ConstAttr 0x56450ae297f0 <col:89>
|-FunctionDecl 0x56450ae29a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56450ae298a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56450ae29938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56450ae29cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56450ae29b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56450ae29bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56450ae29d68 <col:88>
|-FunctionDecl 0x56450ae29f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56450ae29dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56450ae29e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56450ae29fb0 <col:88>
|-FunctionDecl 0x56450ae2a1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56450ae2a018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56450ae2a0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56450ae2a278 <line:208:22>
|-FunctionDecl 0x56450ae2a5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56450ae2a2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56450ae2a360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56450ae2a3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56450ae2a480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56450ae2a8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56450ae2a6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56450ae2a7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56450ae2a998 <col:85>
|-FunctionDecl 0x56450ae2ad88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56450ae2aa00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56450ae2ab38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56450ae2ac40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56450ae2ae40 <col:52>
|-FunctionDecl 0x56450ae2afb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56450ae2aea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56450ae2b060 <col:61>
|-FunctionDecl 0x56450ae2b560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56450ae2b0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56450ae2b148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56450ae2b278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56450ae2b368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56450ae2b620 <col:62>
|-FunctionDecl 0x56450ae2b838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56450ae2b688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56450ae2b718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56450ae2b8e8 <line:221:22>
|-FunctionDecl 0x56450ae2b9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56450ae2b950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56450ae2ba90 <col:65>
|-TypedefDecl 0x56450ae2bb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56450adb6140 'unsigned long'
|-RecordDecl 0x56450ae2bb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56450ae2bca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56450ae2bd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56450ae2bdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56450ae2bd60 'union pthread_attr_t' sugar
|   `-RecordType 0x56450ae2bbe0 'union pthread_attr_t'
|     `-Record 0x56450ae2bb58 'pthread_attr_t'
|-RecordDecl 0x56450ae2be10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56450ae2bf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56450ae2c000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56450ae2c0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56450ae2c050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56450ae2be90 'struct __pthread_internal_list'
|     `-Record 0x56450ae2be10 '__pthread_internal_list'
|-RecordDecl 0x56450ae2c120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56450ae2c1c8 parent 0x56450adb5f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56450ae2c2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56450ae2c308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56450ae2c370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56450ae2c3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56450ae2c440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56450ae2c4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56450ae30580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56450ae30630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56450ae30720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56450ae30788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56450ae30910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56450ae308b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x56450ae2c1a0 'pthread_mutex_t'
|     `-Record 0x56450ae2c120 ''
|-RecordDecl 0x56450ae30980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56450ae30ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56450ae30b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56450ae30be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56450ae30b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56450ae30a00 'pthread_mutexattr_t'
|     `-Record 0x56450ae30980 ''
|-RecordDecl 0x56450ae30c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56450ae30cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56450ae30dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56450ae30e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56450ae30e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56450ae30ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56450ae30f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56450ae30fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56450ae31030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56450ae31098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56450ae31150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix033_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix033_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56450ae31240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56450ae312a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56450ae313e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56450ae31380 'union pthread_cond_t' sugar
|   `-RecordType 0x56450ae30cd0 'pthread_cond_t'
|     `-Record 0x56450ae30c50 ''
|-RecordDecl 0x56450ae31450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56450ae31590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56450ae315f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56450ae316b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56450ae31650 'union pthread_condattr_t' sugar
|   `-RecordType 0x56450ae314d0 'pthread_condattr_t'
|     `-Record 0x56450ae31450 ''
|-TypedefDecl 0x56450ae31738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56450adb6120 'unsigned int'
|-TypedefDecl 0x56450ae317a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56450adb6080 'int'
|-RecordDecl 0x56450ae31800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56450ae318a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56450ae31970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56450ae319d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56450ae31a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56450ae31aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56450ae31b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56450ae31b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56450ae31be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56450ae31c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56450ae31cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56450ae31d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56450ae31d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56450ae31e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix033_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix033_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56450ae31ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56450ae31f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56450ae32090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56450ae32030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56450ae31880 'pthread_rwlock_t'
|     `-Record 0x56450ae31800 ''
|-RecordDecl 0x56450ae32100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56450ae32240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56450ae322a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56450ae32360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56450ae32300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56450ae32180 'pthread_rwlockattr_t'
|     `-Record 0x56450ae32100 ''
|-TypedefDecl 0x56450ae323e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56450adb6084 'volatile int' volatile
|   `-BuiltinType 0x56450adb6080 'int'
|-RecordDecl 0x56450ae32440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56450ae345b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56450ae34618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56450ae346d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56450ae34670 'union pthread_barrier_t' sugar
|   `-RecordType 0x56450ae324c0 'pthread_barrier_t'
|     `-Record 0x56450ae32440 ''
|-RecordDecl 0x56450ae34740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56450ae34840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56450ae348a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56450ae34960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56450ae34900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56450ae347c0 'pthread_barrierattr_t'
|     `-Record 0x56450ae34740 ''
|-TypedefDecl 0x56450ae34a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56450ae34a10 'long [8]' 8 
|   `-BuiltinType 0x56450adb60a0 'long'
|-EnumDecl 0x56450ae34ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56450ae34b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56450ae34be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56450ae34c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56450ae34d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56450ae34d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56450ae34da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56450ae34df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56450ae34e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56450ae34e68 <col:26> 'int'
| |   `-DeclRefExpr 0x56450ae34e48 <col:26> 'int' EnumConstant 0x56450ae34d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56450ae34f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56450ae34ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x56450ae34ed0 <col:29> 'int' EnumConstant 0x56450ae34d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56450ae34f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56450ae34f78 <col:30> 'int'
| |   `-DeclRefExpr 0x56450ae34f58 <col:30> 'int' EnumConstant 0x56450ae34da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56450ae35018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56450ae35000 <col:27> 'int'
|     `-DeclRefExpr 0x56450ae34fe0 <col:27> 'int' EnumConstant 0x56450ae34e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56450ae35068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56450ae35138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56450ae351c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56450ae351a8 <col:30> 'int'
| |   `-DeclRefExpr 0x56450ae35188 <col:30> 'int' EnumConstant 0x56450ae35138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56450ae35210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56450ae35298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56450ae35280 <col:29> 'int'
|     `-DeclRefExpr 0x56450ae35260 <col:29> 'int' EnumConstant 0x56450ae35210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56450ae352e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56450ae353b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56450ae35408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56450ae35458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56450ae354a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56450ae355c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56450ae35610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56450ae35660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56450ae356e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56450ae356d0 <col:31> 'int'
|     `-DeclRefExpr 0x56450ae356b0 <col:31> 'int' EnumConstant 0x56450ae355c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56450ae35738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56450ae35808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56450ae35858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56450ae358a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56450ae35978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56450ae359c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56450ae35a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56450ae35ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56450ae35b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56450ae35b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56450ae35dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56450ae35e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56450ae35e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56450ae35fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56450ae36008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56450ae360d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56450ae36128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56450ae36178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56450ae36248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56450ae36298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56450ae368f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56450ae36390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56450ae364a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56450ae366e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56450ae36760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56450ae369b8 <col:47>
| |-NonNullAttr 0x56450ae36a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x56450ae36a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56450ae36b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56450ae36aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56450ae36dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56450ae36c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56450ae36ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56450ae36f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56450ae36e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56450ae37040 <col:60>
|-FunctionDecl 0x56450ae37190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56450ae37230 <col:54>
| `-ConstAttr 0x56450ae37288 <col:95>
|-FunctionDecl 0x56450ae37458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56450ae372c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56450ae37338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56450ae37508 <line:394:19>
| `-ConstAttr 0x56450ae37560 <col:60>
|-FunctionDecl 0x56450ae37f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56450ae37e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56450ae38010 <col:71>
| `-NonNullAttr 0x56450ae38068 <col:112, col:126> 1
|-FunctionDecl 0x56450ae38170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56450ae380b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56450ae38218 <line:397:22>
| `-NonNullAttr 0x56450ae38270 <col:63, col:77> 1
|-FunctionDecl 0x56450ae38498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56450ae382b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56450ae38338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56450ae38548 <line:400:22>
| `-NonNullAttr 0x56450ae385a0 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae387a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56450ae385e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56450ae38668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56450ae38858 <line:403:22>
| `-NonNullAttr 0x56450ae388b0 <col:63, col:77> 1
|-FunctionDecl 0x56450ae38b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56450ae388f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56450ae389a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56450ae38bb8 <line:406:22>
| `-NonNullAttr 0x56450ae38c10 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae39e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56450ae38c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56450ae38cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56450ae39ef8 <line:409:22>
| `-NonNullAttr 0x56450ae39f50 <col:63, col:77> 1
|-FunctionDecl 0x56450ae3a188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56450ae39f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56450ae3a028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56450ae3a238 <line:412:22>
| `-NonNullAttr 0x56450ae3a290 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae3a4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56450ae3a2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56450ae3a368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56450ae3a578 <col:37>
| `-NonNullAttr 0x56450ae3a5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x56450ae3a7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56450ae3a618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56450ae3a698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56450ae3a868 <line:418:22>
| `-NonNullAttr 0x56450ae3a8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae3aa48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56450ae3a908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56450ae3a988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56450ae3aaf8 <line:420:22>
| `-NonNullAttr 0x56450ae3ab50 <col:63, col:77> 1
|-FunctionDecl 0x56450ae3acf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56450ae3ab98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56450ae3ac18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56450ae3ada8 <line:423:22>
| `-NonNullAttr 0x56450ae3be30 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae3bfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56450ae3be78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56450ae3bef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56450ae3c068 <line:426:22>
| `-NonNullAttr 0x56450ae3c0c0 <col:63, col:77> 1
|-FunctionDecl 0x56450ae3c268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56450ae3c108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56450ae3c188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56450ae3c318 <line:429:22>
| `-NonNullAttr 0x56450ae3c370 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae3c4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56450ae3c3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56450ae3c438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56450ae3c5a8 <line:431:22>
| `-NonNullAttr 0x56450ae3c600 <col:63, col:77> 1
|-FunctionDecl 0x56450ae3c828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56450ae3c648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56450ae3c6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56450ae3c8d8 <line:434:22>
| |-NonNullAttr 0x56450ae3c930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56450ae3c968 <col:100> "" ""
|-FunctionDecl 0x56450ae3cb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56450ae3c9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56450ae3ca38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56450ae3cc28 <line:437:22>
| |-NonNullAttr 0x56450ae3cc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x56450ae3ccb8 <col:97> "" ""
|-FunctionDecl 0x56450ae3ceb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56450ae3cd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56450ae3cd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56450ae3cf68 <line:440:22>
| `-NonNullAttr 0x56450ae3cfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae3d140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56450ae3d008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56450ae3d080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56450ae3d1f0 <line:443:22>
| `-NonNullAttr 0x56450ae3d248 <col:63, col:77> 1
|-FunctionDecl 0x56450ae3d538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56450ae3d298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56450ae3d318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56450ae3d390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56450ae3d5f0 <line:447:22>
| `-NonNullAttr 0x56450ae3d648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56450ae3d8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56450ae3d6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56450ae3d720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56450ae3d798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56450ae3d9b0 <col:43>
| `-NonNullAttr 0x56450ae3da08 <col:84, col:98> 1
|-FunctionDecl 0x56450ae3dcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56450ae3da58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56450ae3dad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56450ae3db68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56450ae3dd80 <line:452:22>
| `-NonNullAttr 0x56450ae3ddd8 <col:63, col:77> 3
|-FunctionDecl 0x56450ae3e0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56450ae3de50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56450ae3ded0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56450ae3df60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56450ae3e1a0 <line:456:22>
| `-NonNullAttr 0x56450ae3e1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x56450ae3e3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56450ae3e248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56450ae3e2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56450ae3e498 <line:458:22>
|-FunctionDecl 0x56450ae3e868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56450ae3e560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56450ae3e700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56450ae3e918 <col:52, col:69> 1 2
|-FunctionDecl 0x56450ae3eac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56450ae3e9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56450ae3ea20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56450ae3eca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56450ae3eb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56450ae3ec08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56450ae3ee60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56450ae3ed68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56450ae3efa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56450ae3f040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56450ae3f0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56450ae3f1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56450ae3f240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56450ae3f410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix033_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56450ae3f508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56450ae3f5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56450ae3f560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56450ae3f0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x56450ae3f040 ''
| `-AlignedAttr 0x56450ae3f618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56450ae3f690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56450ae3f7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56450ae3f858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56450ae3f8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56450ae3f928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56450ae3fb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56450ae3fa20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56450ae3fc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56450ae3fbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56450ae3fe70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56450ae3fd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56450ae3ff18 <line:487:22>
|-RecordDecl 0x56450ae3ff70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56450ae40288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56450ae400e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56450ae40168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56450ae40338 <col:86>
| `-ReturnsTwiceAttr 0x56450ae40390 <col:12> Implicit
|-FunctionDecl 0x56450ae406b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56450ae40460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56450ae40570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56450ae40768 <line:493:22>
| `-NonNullAttr 0x56450ae407c0 <col:63, col:77> 1
|-FunctionDecl 0x56450ae40938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56450ae40808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56450ae409e0 <line:495:22>
| `-NonNullAttr 0x56450ae40a38 <col:63, col:77> 1
|-FunctionDecl 0x56450ae40b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56450ae40a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56450ae40be8 <line:497:22>
| `-NonNullAttr 0x56450ae40c40 <col:52, col:66> 1
|-FunctionDecl 0x56450ae40d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56450ae40c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56450ae40de8 <line:499:22>
| `-NonNullAttr 0x56450ae40e40 <col:52, col:66> 1
|-FunctionDecl 0x56450ae41088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56450ae40e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56450ae40f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56450ae41138 <col:36>
| `-NonNullAttr 0x56450ae41190 <col:66, col:83> 1 2
|-FunctionDecl 0x56450ae41290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56450ae411d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56450ae41338 <line:504:22>
| `-NonNullAttr 0x56450ae41390 <col:52, col:66> 1
|-FunctionDecl 0x56450ae41628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56450ae41440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56450ae414c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56450ae416d8 <line:508:22>
| `-NonNullAttr 0x56450ae41730 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae419f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56450ae41778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56450ae417f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56450ae41878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56450ae41ab0 <line:512:22>
| `-NonNullAttr 0x56450ae41b08 <col:63, col:80> 1 3
|-FunctionDecl 0x56450ae41c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56450ae41b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56450ae41cb8 <line:514:22>
| `-NonNullAttr 0x56450ae41d10 <col:63, col:77> 1
|-FunctionDecl 0x56450ae41f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56450ae41dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56450ae41fe0 <line:516:22>
| `-NonNullAttr 0x56450ae42038 <col:63, col:77> 1
|-FunctionDecl 0x56450ae42140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56450ae42088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56450ae421e8 <line:518:22>
| `-NonNullAttr 0x56450ae42240 <col:63, col:77> 1
|-FunctionDecl 0x56450ae42468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56450ae42288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56450ae42308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56450ae42518 <line:522:22>
| `-NonNullAttr 0x56450ae42570 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae42778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56450ae425b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56450ae42638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56450ae42828 <line:525:22>
| `-NonNullAttr 0x56450ae42880 <col:63, col:77> 1
|-FunctionDecl 0x56450ae42a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56450ae428c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56450ae42948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56450ae42ad8 <line:528:22>
| `-NonNullAttr 0x56450ae42b30 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae42cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56450ae42b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56450ae42bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56450ae42d68 <line:530:22>
| `-NonNullAttr 0x56450ae42dc0 <col:63, col:77> 1
|-FunctionDecl 0x56450ae43f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56450ae42e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56450ae43eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56450ae44040 <line:534:22>
| `-NonNullAttr 0x56450ae44098 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae44228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56450ae440e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56450ae44168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56450ae442d8 <line:537:22>
| `-NonNullAttr 0x56450ae44330 <col:63, col:77> 1
|-FunctionDecl 0x56450ae444d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56450ae44378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56450ae443f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56450ae44588 <line:541:22>
| `-NonNullAttr 0x56450ae445e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae44768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56450ae44628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56450ae446a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56450ae44818 <line:544:22>
| `-NonNullAttr 0x56450ae44870 <col:63, col:77> 1
|-FunctionDecl 0x56450ae44a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56450ae448b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56450ae44938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56450ae44b08 <line:547:22>
| `-NonNullAttr 0x56450ae44b60 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae44ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56450ae44ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56450ae44c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56450ae44d98 <line:550:22>
| `-NonNullAttr 0x56450ae44df0 <col:63, col:77> 1
|-FunctionDecl 0x56450ae46168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56450ae45f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56450ae46020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56450ae46218 <col:29>
| `-NonNullAttr 0x56450ae46270 <col:70, col:84> 1
|-FunctionDecl 0x56450ae463e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56450ae462b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56450ae46490 <line:555:22>
| `-NonNullAttr 0x56450ae464e8 <col:63, col:77> 1
|-FunctionDecl 0x56450ae465f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56450ae46538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56450ae46698 <line:557:22>
| `-NonNullAttr 0x56450ae466f0 <col:52, col:66> 1
|-FunctionDecl 0x56450ae467f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56450ae46738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56450ae46898 <line:559:19>
| `-NonNullAttr 0x56450ae468f0 <col:49, col:63> 1
|-FunctionDecl 0x56450ae46b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56450ae46938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56450ae469c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56450ae46bd8 <col:39>
| `-NonNullAttr 0x56450ae46c30 <col:69, col:86> 1 2
|-FunctionDecl 0x56450ae46d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56450ae46c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56450ae46dd8 <line:564:22>
| `-NonNullAttr 0x56450ae46e30 <col:52, col:66> 1
|-FunctionDecl 0x56450ae46f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56450ae46ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56450ae47040 <line:566:22>
| `-NonNullAttr 0x56450ae47098 <col:52, col:66> 1
|-FunctionDecl 0x56450ae47258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56450ae470e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56450ae47178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56450ae47308 <col:39>
| `-NonNullAttr 0x56450ae47360 <col:69, col:86> 1 2
|-FunctionDecl 0x56450ae47460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56450ae473a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56450ae47508 <line:571:22>
| `-NonNullAttr 0x56450ae47560 <col:52, col:66> 1
|-FunctionDecl 0x56450ae47748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56450ae47610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56450ae477f0 <line:573:22>
| `-NonNullAttr 0x56450ae47848 <col:63, col:77> 1
|-FunctionDecl 0x56450ae47950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56450ae47898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56450ae479f8 <line:575:22>
| `-NonNullAttr 0x56450ae47a50 <col:63, col:77> 1
|-FunctionDecl 0x56450ae47c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56450ae47a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56450ae47b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56450ae47d28 <line:579:22>
| `-NonNullAttr 0x56450ae47d80 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae47fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56450ae47dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56450ae47e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56450ae48058 <line:582:22>
| `-NonNullAttr 0x56450ae480b0 <col:63, col:77> 1
|-FunctionDecl 0x56450ae48258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56450ae480f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56450ae48178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56450ae48308 <line:586:22>
| `-NonNullAttr 0x56450ae48360 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae484e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56450ae483a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56450ae48428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56450ae48598 <col:36>
| `-NonNullAttr 0x56450ae485f0 <col:77, col:91> 1
|-FunctionDecl 0x56450ae48928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56450ae486d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56450ae487e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56450ae489d8 <line:591:22>
| `-NonNullAttr 0x56450ae48a30 <col:63, col:77> 1
|-FunctionDecl 0x56450ae48ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56450ae48a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56450ae48c50 <line:593:22>
| `-NonNullAttr 0x56450ae48ca8 <col:63, col:77> 1
|-FunctionDecl 0x56450ae48db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56450ae48cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56450ae48e58 <line:595:22>
| `-NonNullAttr 0x56450ae48eb0 <col:52, col:66> 1
|-FunctionDecl 0x56450ae48fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56450ae48f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56450ae49070 <line:597:22>
| `-NonNullAttr 0x56450ae490c8 <col:52, col:66> 1
|-FunctionDecl 0x56450ae492f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56450ae49118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56450ae49190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56450ae493a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56450ae496d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56450ae49428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56450ae494a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56450ae49530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56450ae49790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56450ae499a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56450ae49870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56450ae49a50 <line:606:22>
| `-NonNullAttr 0x56450ae49aa8 <col:63, col:77> 1
|-FunctionDecl 0x56450ae49bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56450ae49af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56450ae49c58 <line:608:22>
| `-NonNullAttr 0x56450ae49cb0 <col:63, col:77> 1
|-FunctionDecl 0x56450ae49f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56450ae49cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56450ae49d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56450ae49fc0 <line:612:22>
| `-NonNullAttr 0x56450ae4a018 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae4a228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56450ae4a068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56450ae4a0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56450ae4a2d8 <col:37>
| `-NonNullAttr 0x56450ae4a330 <col:78, col:92> 1
|-FunctionDecl 0x56450ae4a548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56450ae4a378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56450ae4a420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56450ae4a5f8 <line:618:22>
| `-NonNullAttr 0x56450ae4a650 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae4a818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56450ae4a698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56450ae4a710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56450ae4a8c8 <line:621:22>
| `-NonNullAttr 0x56450ae4a920 <col:63, col:77> 1
|-FunctionDecl 0x56450ae4abc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56450ae4aa00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56450ae4aa80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56450ae4ac78 <line:623:22>
| `-NonNullAttr 0x56450ae4acd0 <col:63, col:77> 1
|-FunctionDecl 0x56450ae4ae48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56450ae4ad18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56450ae4af20 <line:625:22>
| `-NonNullAttr 0x56450ae4af78 <col:63, col:77> 1
|-FunctionDecl 0x56450ae4b080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56450ae4afc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56450ae4b128 <line:627:22>
| `-NonNullAttr 0x56450ae4b180 <col:52, col:66> 1
|-FunctionDecl 0x56450ae4b280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56450ae4b1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56450ae4b328 <line:629:22>
| `-NonNullAttr 0x56450ae4b380 <col:52, col:66> 1
|-FunctionDecl 0x56450ae4b480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56450ae4b3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56450ae4b528 <line:631:22>
| `-NonNullAttr 0x56450ae4b580 <col:52, col:66> 1
|-FunctionDecl 0x56450ae4b958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56450ae4b660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56450ae4b770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56450ae4b7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56450ae4ba10 <line:635:22>
| `-NonNullAttr 0x56450ae4ba68 <col:63, col:77> 1
|-FunctionDecl 0x56450ae4bbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56450ae4bab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56450ae4bc90 <line:637:22>
| `-NonNullAttr 0x56450ae4bce8 <col:63, col:77> 1
|-FunctionDecl 0x56450ae4bdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56450ae4bd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56450ae4be98 <line:639:22>
| `-NonNullAttr 0x56450ae4bef0 <col:52, col:66> 1
|-FunctionDecl 0x56450ae4c0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56450ae4bfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56450ae4c190 <line:641:22>
| `-NonNullAttr 0x56450ae4c1e8 <col:63, col:77> 1
|-FunctionDecl 0x56450ae4c2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56450ae4c238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56450ae4c398 <line:643:22>
| `-NonNullAttr 0x56450ae4c3f0 <col:63, col:77> 1
|-FunctionDecl 0x56450ae4c618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56450ae4c438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56450ae4c4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56450ae4c6c8 <line:647:22>
| `-NonNullAttr 0x56450ae4c720 <col:63, col:80> 1 2
|-FunctionDecl 0x56450ae4c928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56450ae4c768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56450ae4c7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56450ae4c9d8 <line:650:22>
| `-NonNullAttr 0x56450ae4ca30 <col:63, col:77> 1
|-FunctionDecl 0x56450ae4cd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56450ae4cb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56450ae4cc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56450ae4ce28 <line:653:22>
| `-NonNullAttr 0x56450ae4ce80 <col:63, col:77> 1
|-FunctionDecl 0x56450ae4cfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56450ae4cec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56450ae4d090 <col:69>
|-FunctionDecl 0x56450ae4d208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56450ae4d0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56450ae4d2b0 <col:72>
|-FunctionDecl 0x56450ae4d4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56450ae4d318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56450ae4d3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56450ae4d598 <col:44>
|-FunctionDecl 0x56450ae4d7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56450ae4d600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56450ae4d678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56450ae4d868 <line:660:22>
| `-NonNullAttr 0x56450ae4d8c0 <col:63, col:77> 2
|-FunctionDecl 0x56450ae4dd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56450ae4d9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56450ae4dab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56450ae4dbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56450ae4ddc0 <col:47>
|-FunctionDecl 0x56450ae4ef60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56450ae4de30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56450ae4f0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56450ae4f020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56450ae4f210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56450ae4f178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56450ae4f2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56450ae4f398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56450ae4f458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56450ae4f510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56450ae4f590 prev 0x56450ae4f510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56450ae4f5f8 <col:24> 'int' 0
|-VarDecl 0x56450ae4f630 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56450ae4f6b0 prev 0x56450ae4f630 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56450ae4f718 <col:27> 'int' 0
|-VarDecl 0x56450ae4f750 <line:675:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x56450ae4f7d0 prev 0x56450ae4f750 <line:676:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x56450ae4f838 <col:27> 'int' 0
|-VarDecl 0x56450ae4f870 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x56450ae4f8f0 prev 0x56450ae4f870 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x56450ae4f958 <col:27> 'int' 0
|-VarDecl 0x56450ae4f990 <line:679:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x56450ae4fa10 prev 0x56450ae4f990 <line:680:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x56450ae4fa78 <col:27> 'int' 0
|-VarDecl 0x56450ae4fab0 <line:681:1, col:5> col:5 used a 'int'
|-VarDecl 0x56450ae4fb30 prev 0x56450ae4fab0 <line:682:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x56450ae4fb98 <col:9> 'int' 0
|-VarDecl 0x56450ae4fbd0 <line:683:1, col:5> col:5 used b 'int'
|-VarDecl 0x56450ae4fc50 prev 0x56450ae4fbd0 <line:684:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x56450ae4fcb8 <col:9> 'int' 0
|-VarDecl 0x56450ae4fce8 <line:685:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x56450ae4fd68 <line:686:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x56450ae4fde0 <line:687:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x56450ae4fe58 <line:688:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x56450ae4fed0 <line:689:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x56450ae4ff70 <line:690:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x56450ae4ffe8 <line:691:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x56450ae50060 <line:692:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x56450ae500d8 <line:693:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x56450ae50150 <line:694:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x56450ae501c8 <line:695:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x56450ae50248 <line:696:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x56450ae502c8 <line:697:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x56450ae50340 <line:698:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x56450ae503c0 <line:699:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x56450ae50438 <line:700:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x56450ae504b0 <line:701:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56450ae50528 <line:702:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56450ae505a8 <line:703:1, col:5> col:5 used x 'int'
|-VarDecl 0x56450ae50628 prev 0x56450ae505a8 <line:704:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56450ae50690 <col:9> 'int' 0
|-VarDecl 0x56450ae506c8 <line:705:1, col:5> col:5 used y 'int'
|-VarDecl 0x56450ae50748 prev 0x56450ae506c8 <line:706:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56450ae507b0 <col:9> 'int' 0
|-VarDecl 0x56450ae507e8 <line:707:1, col:5> col:5 used z 'int'
|-VarDecl 0x56450ae50868 prev 0x56450ae507e8 <line:708:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56450ae508d0 <col:9> 'int' 0
|-VarDecl 0x56450ae50900 <line:709:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56450ae50978 <line:710:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56450ae50a90 prev 0x56450ae4ef60 <line:711:1, line:739:1> line:711:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56450ae509f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56450ae522e8 <line:712:1, line:739:1>
|   |-CallExpr 0x56450ae50ba8 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56450ae50b90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae50b38 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56450ae50c20 <line:714:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56450ae50bc8 <col:3> 'int' lvalue Var 0x56450ae503c0 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56450ae50c08 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56450ae50be8 <col:15> 'int' lvalue Var 0x56450ae502c8 'b$w_buff0' 'int'
|   |-BinaryOperator 0x56450ae50c80 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56450ae50c40 <col:3> 'int' lvalue Var 0x56450ae502c8 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x56450ae50c60 <col:15> 'int' 1
|   |-BinaryOperator 0x56450ae50cf8 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae50ca0 <col:3> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae50ce0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56450ae50cc0 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56450ae50d90 <line:717:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae50d18 <col:3> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56450ae50d68 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56450ae50d38 <col:27> 'int' 1
|   |-CallExpr 0x56450ae50f18 <line:718:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56450ae50f00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56450ae50db0 <col:3> 'void (int)' Function 0x56450adf60d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56450ae50eb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56450ae50e90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56450ae50e70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56450ae50e28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56450ae50e10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56450ae50dd0 <col:23> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56450ae50e58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56450ae50e40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56450ae50df0 <col:41> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56450ae50fb8 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae50f40 <col:3> '_Bool' lvalue Var 0x56450ae4ffe8 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae50fa0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56450ae50f80 <col:20> '_Bool' lvalue Var 0x56450ae4fde0 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56450ae51030 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae50fd8 <col:3> '_Bool' lvalue Var 0x56450ae50060 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae51018 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56450ae50ff8 <col:20> '_Bool' lvalue Var 0x56450ae4fe58 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56450ae510a8 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae51050 <col:3> '_Bool' lvalue Var 0x56450ae500d8 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae51090 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56450ae51070 <col:20> '_Bool' lvalue Var 0x56450ae4fed0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56450ae51120 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae510c8 <col:3> '_Bool' lvalue Var 0x56450ae50150 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae51108 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56450ae510e8 <col:20> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56450ae511b8 <line:723:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae51140 <col:3> '_Bool' lvalue Var 0x56450ae4fe58 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x56450ae51190 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56450ae51160 <col:27> 'int' 1
|   |-CallExpr 0x56450ae51210 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56450ae511f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae511d8 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56450ae51268 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56450ae51250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae51230 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56450ae512c8 <line:726:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56450ae51288 <col:3> 'int' lvalue Var 0x56450ae50628 'x' 'int'
|   | `-IntegerLiteral 0x56450ae512a8 <col:7> 'int' 1
|   |-CallExpr 0x56450ae51320 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56450ae51308 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae512e8 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56450ae51378 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56450ae51360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae51340 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56450ae51660 <line:729:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56450ae51398 <col:3> 'int' lvalue Var 0x56450ae4fc50 'b' 'int'
|   | `-ConditionalOperator 0x56450ae51630 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56450ae51458 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56450ae51410 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56450ae513f8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56450ae513b8 <col:7> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56450ae51440 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56450ae51428 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56450ae513d8 <col:25> '_Bool' lvalue Var 0x56450ae4fe58 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x56450ae51618 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56450ae51478 <col:42> 'int' lvalue Var 0x56450ae502c8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x56450ae515f8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56450ae515c8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56450ae51538 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56450ae514f0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56450ae514d8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56450ae51498 <col:55> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56450ae51520 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56450ae51508 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56450ae514b8 <col:73> '_Bool' lvalue Var 0x56450ae50060 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56450ae51598 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56450ae51558 <col:90> 'int' lvalue Var 0x56450ae503c0 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56450ae515b0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56450ae51578 <col:102> 'int' lvalue Var 0x56450ae4fc50 'b' 'int'
|   |-BinaryOperator 0x56450ae51868 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae51680 <col:3> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae51850 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56450ae51820 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56450ae51740 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56450ae516f8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56450ae516e0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56450ae516a0 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56450ae51728 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56450ae51710 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56450ae516c0 <col:38> '_Bool' lvalue Var 0x56450ae4fe58 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56450ae517d8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56450ae51790 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56450ae51760 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56450ae51808 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56450ae517f0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56450ae517b8 <col:66> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56450ae51b50 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae51888 <col:3> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae51b38 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56450ae51b08 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56450ae51a28 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56450ae51948 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56450ae51900 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56450ae518e8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56450ae518a8 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56450ae51930 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56450ae51918 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56450ae518c8 <col:38> '_Bool' lvalue Var 0x56450ae4fe58 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56450ae51a08 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56450ae519c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56450ae519a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56450ae51968 <col:56> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56450ae519f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56450ae519d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56450ae51988 <col:74> '_Bool' lvalue Var 0x56450ae50060 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56450ae51ac0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56450ae51a78 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56450ae51a48 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56450ae51af0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56450ae51ad8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56450ae51aa0 <col:102> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56450ae51d58 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae51b70 <col:3> '_Bool' lvalue Var 0x56450ae4fe58 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae51d40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56450ae51d10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56450ae51c30 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56450ae51be8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56450ae51bd0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56450ae51b90 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56450ae51c18 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56450ae51c00 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56450ae51bb0 <col:38> '_Bool' lvalue Var 0x56450ae4fe58 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56450ae51cc8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56450ae51c80 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56450ae51c50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56450ae51cf8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56450ae51ce0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56450ae51ca8 <col:66> '_Bool' lvalue Var 0x56450ae4fe58 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56450ae52068 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae51d78 <col:3> '_Bool' lvalue Var 0x56450ae50060 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae52050 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56450ae52020 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56450ae51f18 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56450ae51e38 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56450ae51df0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56450ae51dd8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56450ae51d98 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56450ae51e20 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56450ae51e08 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56450ae51db8 <col:38> '_Bool' lvalue Var 0x56450ae4fe58 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56450ae51ef8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56450ae51eb0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56450ae51e98 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56450ae51e58 <col:56> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56450ae51ee0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56450ae51ec8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56450ae51e78 <col:74> '_Bool' lvalue Var 0x56450ae50060 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56450ae51fd8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56450ae51f90 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56450ae51f38 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56450ae52008 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56450ae51ff0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56450ae51fb8 <col:102> '_Bool' lvalue Var 0x56450ae50060 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x56450ae520c0 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56450ae520a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae52088 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56450ae52118 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56450ae52100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae520e0 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56450ae521d0 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56450ae52138 <col:3> 'int' lvalue Var 0x56450ae4f590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56450ae521b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56450ae52198 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56450ae52158 <col:22> 'int' lvalue Var 0x56450ae4f590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56450ae52178 <col:41> 'int' 1
|   |-CallExpr 0x56450ae52228 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56450ae52210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae521f0 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56450ae522d8 <line:738:3, col:36>
|     `-CallExpr 0x56450ae522b8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56450ae522a0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56450ae52248 <col:10> 'void *(void)' Function 0x56450adf5e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56450ae52478 prev 0x56450ae4f0b8 <line:740:1, line:765:1> line:740:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56450ae523e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56450ae538f8 <line:741:1, line:765:1>
|   |-CallExpr 0x56450ae52558 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56450ae52540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae52520 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56450ae525b8 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56450ae52578 <col:3> 'int' lvalue Var 0x56450ae50628 'x' 'int'
|   | `-IntegerLiteral 0x56450ae52598 <col:7> 'int' 2
|   |-CallExpr 0x56450ae52610 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56450ae525f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae525d8 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56450ae52668 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56450ae52650 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae52630 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56450ae526c8 <line:746:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56450ae52688 <col:3> 'int' lvalue Var 0x56450ae50748 'y' 'int'
|   | `-IntegerLiteral 0x56450ae526a8 <col:7> 'int' 1
|   |-CallExpr 0x56450ae52720 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56450ae52708 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae526e8 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56450ae52778 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56450ae52760 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae52740 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56450ae527f0 <line:749:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56450ae52798 <col:3> 'int' lvalue Var 0x56450ae4f6b0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x56450ae527d8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56450ae527b8 <col:25> 'int' lvalue Var 0x56450ae50748 'y' 'int'
|   |-CallExpr 0x56450ae52848 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56450ae52830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae52810 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56450ae528a0 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56450ae52888 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae52868 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56450ae52918 <line:752:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56450ae528c0 <col:3> 'int' lvalue Var 0x56450ae4f7d0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x56450ae52900 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56450ae528e0 <col:25> 'int' lvalue Var 0x56450ae50868 'z' 'int'
|   |-CallExpr 0x56450ae52970 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56450ae52958 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae52938 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56450ae529c8 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56450ae529b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae52990 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56450ae52cb0 <line:755:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56450ae529e8 <col:3> 'int' lvalue Var 0x56450ae4fc50 'b' 'int'
|   | `-ConditionalOperator 0x56450ae52c80 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56450ae52aa8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56450ae52a60 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56450ae52a48 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56450ae52a08 <col:7> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56450ae52a90 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56450ae52a78 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56450ae52a28 <col:25> '_Bool' lvalue Var 0x56450ae4fed0 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56450ae52c68 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56450ae52ac8 <col:42> 'int' lvalue Var 0x56450ae502c8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x56450ae52c48 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56450ae52c18 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56450ae52b88 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56450ae52b40 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56450ae52b28 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56450ae52ae8 <col:55> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56450ae52b70 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56450ae52b58 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56450ae52b08 <col:73> '_Bool' lvalue Var 0x56450ae500d8 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56450ae52be8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56450ae52ba8 <col:90> 'int' lvalue Var 0x56450ae503c0 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56450ae52c00 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56450ae52bc8 <col:102> 'int' lvalue Var 0x56450ae4fc50 'b' 'int'
|   |-BinaryOperator 0x56450ae52eb8 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae52cd0 <col:3> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae52ea0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56450ae52e70 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56450ae52d90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56450ae52d48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56450ae52d30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56450ae52cf0 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56450ae52d78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56450ae52d60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56450ae52d10 <col:38> '_Bool' lvalue Var 0x56450ae4fed0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56450ae52e28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56450ae52de0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56450ae52db0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56450ae52e58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56450ae52e40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56450ae52e08 <col:66> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56450ae531c0 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae52ed8 <col:3> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae531a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56450ae53178 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56450ae53098 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56450ae52fb8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56450ae52f50 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56450ae52f38 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56450ae52ef8 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56450ae52fa0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56450ae52f68 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56450ae52f18 <col:38> '_Bool' lvalue Var 0x56450ae4fed0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56450ae53078 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56450ae53030 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56450ae53018 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56450ae52fd8 <col:56> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56450ae53060 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56450ae53048 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56450ae52ff8 <col:74> '_Bool' lvalue Var 0x56450ae500d8 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56450ae53130 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56450ae530e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56450ae530b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56450ae53160 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56450ae53148 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56450ae53110 <col:102> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56450ae533c8 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae531e0 <col:3> '_Bool' lvalue Var 0x56450ae4fed0 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae533b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56450ae53380 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56450ae532a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56450ae53258 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56450ae53240 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56450ae53200 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56450ae53288 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56450ae53270 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56450ae53220 <col:38> '_Bool' lvalue Var 0x56450ae4fed0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56450ae53338 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56450ae532f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56450ae532c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56450ae53368 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56450ae53350 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56450ae53318 <col:66> '_Bool' lvalue Var 0x56450ae4fed0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56450ae536b0 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae533e8 <col:3> '_Bool' lvalue Var 0x56450ae500d8 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae53698 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56450ae53668 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56450ae53588 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56450ae534a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56450ae53460 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56450ae53448 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56450ae53408 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56450ae53490 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56450ae53478 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56450ae53428 <col:38> '_Bool' lvalue Var 0x56450ae4fed0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56450ae53568 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56450ae53520 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56450ae53508 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56450ae534c8 <col:56> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56450ae53550 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56450ae53538 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56450ae534e8 <col:74> '_Bool' lvalue Var 0x56450ae500d8 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56450ae53620 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56450ae535d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56450ae535a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56450ae53650 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56450ae53638 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56450ae53600 <col:102> '_Bool' lvalue Var 0x56450ae500d8 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x56450ae53708 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56450ae536f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae536d0 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56450ae53760 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56450ae53748 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae53728 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56450ae53818 <line:762:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56450ae53780 <col:3> 'int' lvalue Var 0x56450ae4f590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56450ae537f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56450ae537e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56450ae537a0 <col:22> 'int' lvalue Var 0x56450ae4f590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56450ae537c0 <col:41> 'int' 1
|   |-CallExpr 0x56450ae53870 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56450ae53858 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae53838 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56450ae538e8 <line:764:3, col:36>
|     `-CallExpr 0x56450ae538c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56450ae538b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56450ae53890 <col:10> 'void *(void)' Function 0x56450adf5e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56450ae53a70 prev 0x56450ae4f210 <line:766:1, line:804:1> line:766:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56450ae539d8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56450ae578a8 <line:767:1, line:804:1>
|   |-CallExpr 0x56450ae53b50 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56450ae53b38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae53b18 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56450ae53bb0 <line:769:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56450ae53b70 <col:3> 'int' lvalue Var 0x56450ae50868 'z' 'int'
|   | `-IntegerLiteral 0x56450ae53b90 <col:7> 'int' 1
|   |-CallExpr 0x56450ae53c08 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56450ae53bf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae53bd0 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56450ae53c60 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56450ae53c48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae53c28 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56450ae53cc0 <line:772:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56450ae53c80 <col:3> 'int' lvalue Var 0x56450ae4fb30 'a' 'int'
|   | `-IntegerLiteral 0x56450ae53ca0 <col:7> 'int' 1
|   |-CallExpr 0x56450ae53d18 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56450ae53d00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae53ce0 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56450ae53d70 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56450ae53d58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae53d38 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56450ae53de8 <line:775:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56450ae53d90 <col:3> 'int' lvalue Var 0x56450ae4f8f0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x56450ae53dd0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56450ae53db0 <col:25> 'int' lvalue Var 0x56450ae4fb30 'a' 'int'
|   |-CallExpr 0x56450ae53e40 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56450ae53e28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae53e08 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56450ae53e98 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56450ae53e80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae53e60 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56450ae53f48 <line:778:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae53eb8 <col:3> '_Bool' lvalue Var 0x56450ae50900 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae53f30 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56450ae53f10 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56450ae53ef8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56450ae53ed8 <col:19> 'void *(void)' Function 0x56450adf5e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56450ae54020 <line:779:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae53f68 <col:3> '_Bool' lvalue Var 0x56450ae50978 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae54008 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56450ae53fe8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56450ae53fd0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56450ae53fb0 <col:19> 'void *(void)' Function 0x56450adf5e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56450ae54098 <line:780:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae54040 <col:3> '_Bool' lvalue Var 0x56450ae4fce8 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae54080 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56450ae54060 <col:21> '_Bool' lvalue Var 0x56450ae50978 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56450ae54110 <line:781:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56450ae540b8 <col:3> 'int' lvalue Var 0x56450ae4fd68 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56450ae540f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56450ae540d8 <col:15> 'int' lvalue Var 0x56450ae4fc50 'b' 'int'
|   |-BinaryOperator 0x56450ae54548 <line:782:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56450ae54130 <col:3> 'int' lvalue Var 0x56450ae4fc50 'b' 'int'
|   | `-ConditionalOperator 0x56450ae54518 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56450ae54340 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56450ae54260 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56450ae54188 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56450ae54170 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56450ae54150 <col:8> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56450ae54240 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56450ae541d8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56450ae541c0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56450ae541a0 <col:27> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x56450ae54228 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56450ae54210 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56450ae541f0 <col:46> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56450ae54320 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56450ae542b8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56450ae542a0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56450ae54280 <col:65> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x56450ae54308 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56450ae542f0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56450ae542d0 <col:84> '_Bool' lvalue Var 0x56450ae50150 'b$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56450ae54500 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56450ae54360 <col:101> 'int' lvalue Var 0x56450ae4fc50 'b' 'int'
|   |   `-ParenExpr 0x56450ae544e0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56450ae544b0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56450ae54420 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56450ae543d8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56450ae543c0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56450ae54380 <col:106> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56450ae54408 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56450ae543f0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56450ae543a0 <col:124> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56450ae54480 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56450ae54440 <col:141> 'int' lvalue Var 0x56450ae502c8 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56450ae54498 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56450ae54460 <col:153> 'int' lvalue Var 0x56450ae503c0 'b$w_buff1' 'int'
|   |-BinaryOperator 0x56450ae54a58 <line:783:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56450ae54568 <col:3> 'int' lvalue Var 0x56450ae502c8 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x56450ae54a28 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56450ae549f8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56450ae549e0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56450ae54588 <col:15> '_Bool' lvalue Var 0x56450ae50978 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56450ae54a10 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56450ae545a8 <col:31> 'int' lvalue Var 0x56450ae502c8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x56450ae549c0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56450ae54990 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56450ae547b8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56450ae546d8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56450ae54600 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56450ae545e8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56450ae545c8 <col:45> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56450ae546b8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56450ae54650 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56450ae54638 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56450ae54618 <col:64> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56450ae546a0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56450ae54688 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56450ae54668 <col:83> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56450ae54798 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56450ae54730 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56450ae54718 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56450ae546f8 <col:102> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56450ae54780 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56450ae54768 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56450ae54748 <col:121> '_Bool' lvalue Var 0x56450ae50150 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56450ae54978 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56450ae547d8 <col:138> 'int' lvalue Var 0x56450ae502c8 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x56450ae54958 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56450ae54928 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56450ae54898 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56450ae54850 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56450ae54838 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56450ae547f8 <col:151> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56450ae54880 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56450ae54868 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56450ae54818 <col:169> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56450ae548f8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56450ae548b8 <col:186> 'int' lvalue Var 0x56450ae502c8 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56450ae54910 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56450ae548d8 <col:198> 'int' lvalue Var 0x56450ae502c8 'b$w_buff0' 'int'
|   |-BinaryOperator 0x56450ae54f68 <line:784:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56450ae54a78 <col:3> 'int' lvalue Var 0x56450ae503c0 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x56450ae54f38 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56450ae54f08 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56450ae54ef0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56450ae54a98 <col:15> '_Bool' lvalue Var 0x56450ae50978 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56450ae54f20 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56450ae54ab8 <col:31> 'int' lvalue Var 0x56450ae503c0 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x56450ae54ed0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56450ae54ea0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56450ae54cc8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56450ae54be8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56450ae54b10 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56450ae54af8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56450ae54ad8 <col:45> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56450ae54bc8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56450ae54b60 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56450ae54b48 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56450ae54b28 <col:64> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56450ae54bb0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56450ae54b98 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56450ae54b78 <col:83> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56450ae54ca8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56450ae54c40 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56450ae54c28 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56450ae54c08 <col:102> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56450ae54c90 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56450ae54c78 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56450ae54c58 <col:121> '_Bool' lvalue Var 0x56450ae50150 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56450ae54e88 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56450ae54ce8 <col:138> 'int' lvalue Var 0x56450ae503c0 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x56450ae54e68 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56450ae54e38 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56450ae54da8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56450ae54d60 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56450ae54d48 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56450ae54d08 <col:151> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56450ae54d90 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56450ae54d78 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56450ae54d28 <col:169> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56450ae54e08 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56450ae54dc8 <col:186> 'int' lvalue Var 0x56450ae503c0 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56450ae54e20 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56450ae54de8 <col:198> 'int' lvalue Var 0x56450ae503c0 'b$w_buff1' 'int'
|   |-BinaryOperator 0x56450ae55528 <line:785:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae54f88 <col:3> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae55510 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56450ae554e0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56450ae55498 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56450ae55480 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56450ae54fc0 <col:20> '_Bool' lvalue Var 0x56450ae50978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56450ae554c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56450ae554b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56450ae54fe0 <col:36> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56450ae55460 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56450ae55430 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56450ae551f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56450ae55110 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56450ae55038 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56450ae55020 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56450ae55000 <col:55> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56450ae550f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56450ae55088 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56450ae55070 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56450ae55050 <col:74> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56450ae550d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56450ae550c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56450ae550a0 <col:93> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56450ae551d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56450ae55168 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56450ae55150 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56450ae55130 <col:112> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56450ae551b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56450ae551a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56450ae55180 <col:131> '_Bool' lvalue Var 0x56450ae50150 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56450ae55418 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56450ae55400 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56450ae55210 <col:148> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56450ae553e0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56450ae553b0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56450ae552d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56450ae55288 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56450ae55270 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56450ae55230 <col:166> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56450ae552b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56450ae552a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56450ae55250 <col:184> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56450ae55368 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56450ae55320 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56450ae552f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56450ae55398 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56450ae55380 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56450ae55348 <col:212> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56450ae55af0 <line:786:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae55548 <col:3> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae55ad8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56450ae55aa8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56450ae55a60 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56450ae55a48 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56450ae55568 <col:20> '_Bool' lvalue Var 0x56450ae50978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56450ae55a90 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56450ae55a78 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56450ae55588 <col:36> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56450ae55a28 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56450ae559f8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56450ae55798 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56450ae556b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56450ae555e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56450ae555c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56450ae555a8 <col:55> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56450ae55698 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56450ae55630 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56450ae55618 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56450ae555f8 <col:74> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56450ae55680 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56450ae55668 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56450ae55648 <col:93> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56450ae55778 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56450ae55710 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56450ae556f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56450ae556d8 <col:112> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56450ae55760 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56450ae55748 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56450ae55728 <col:131> '_Bool' lvalue Var 0x56450ae50150 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56450ae559e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56450ae559c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56450ae557b8 <col:148> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56450ae559a8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56450ae55978 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56450ae55878 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56450ae55830 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56450ae55818 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56450ae557d8 <col:166> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56450ae55860 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56450ae55848 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56450ae557f8 <col:184> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56450ae55948 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56450ae558c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56450ae55898 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56450ae55960 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56450ae55920 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56450ae558f0 <col:219> 'int' 0
|   |-BinaryOperator 0x56450ae560c8 <line:787:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae55b10 <col:3> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae560b0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56450ae56080 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56450ae56038 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56450ae56020 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56450ae55b30 <col:20> '_Bool' lvalue Var 0x56450ae50978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56450ae56068 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56450ae56050 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56450ae55b50 <col:36> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x56450ae56000 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56450ae55fd0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56450ae55d60 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56450ae55c80 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56450ae55ba8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56450ae55b90 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56450ae55b70 <col:55> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56450ae55c60 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56450ae55bf8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56450ae55be0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56450ae55bc0 <col:74> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56450ae55c48 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56450ae55c30 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56450ae55c10 <col:93> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56450ae55d40 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56450ae55cd8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56450ae55cc0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56450ae55ca0 <col:112> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56450ae55d28 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56450ae55d10 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56450ae55cf0 <col:131> '_Bool' lvalue Var 0x56450ae50150 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56450ae55f88 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56450ae55f70 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56450ae55d80 <col:148> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x56450ae55f50 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56450ae55f20 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56450ae55e40 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56450ae55df8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56450ae55de0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56450ae55da0 <col:166> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56450ae55e28 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56450ae55e10 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56450ae55dc0 <col:184> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56450ae55ed8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56450ae55e90 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56450ae55e60 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56450ae55f08 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56450ae55ef0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56450ae55eb8 <col:212> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56450ae56690 <line:788:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae560e8 <col:3> '_Bool' lvalue Var 0x56450ae50150 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae56678 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56450ae56648 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56450ae56600 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56450ae565e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56450ae56108 <col:20> '_Bool' lvalue Var 0x56450ae50978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56450ae56630 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56450ae56618 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56450ae56128 <col:36> '_Bool' lvalue Var 0x56450ae50150 'b$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x56450ae565c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56450ae56598 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56450ae56338 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56450ae56258 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56450ae56180 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56450ae56168 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56450ae56148 <col:55> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56450ae56238 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56450ae561d0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56450ae561b8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56450ae56198 <col:74> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56450ae56220 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56450ae56208 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56450ae561e8 <col:93> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56450ae56318 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56450ae562b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56450ae56298 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56450ae56278 <col:112> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56450ae56300 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56450ae562e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56450ae562c8 <col:131> '_Bool' lvalue Var 0x56450ae50150 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56450ae56580 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56450ae56568 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56450ae56358 <col:148> '_Bool' lvalue Var 0x56450ae50150 'b$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x56450ae56548 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56450ae56518 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56450ae56418 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56450ae563d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56450ae563b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56450ae56378 <col:166> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56450ae56400 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56450ae563e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56450ae56398 <col:184> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56450ae564e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56450ae56468 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56450ae56438 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56450ae56500 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56450ae564c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56450ae56490 <col:219> 'int' 0
|   |-BinaryOperator 0x56450ae56708 <line:789:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56450ae566b0 <col:3> 'int' lvalue Var 0x56450ae4fa10 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x56450ae566f0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56450ae566d0 <col:25> 'int' lvalue Var 0x56450ae4fc50 'b' 'int'
|   |-BinaryOperator 0x56450ae56838 <line:790:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56450ae56728 <col:3> 'int' lvalue Var 0x56450ae4fc50 'b' 'int'
|   | `-ConditionalOperator 0x56450ae56808 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56450ae567c0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56450ae567a8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56450ae56748 <col:7> '_Bool' lvalue Var 0x56450ae4fce8 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56450ae567d8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56450ae56768 <col:25> 'int' lvalue Var 0x56450ae4fd68 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56450ae567f0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56450ae56788 <col:37> 'int' lvalue Var 0x56450ae4fc50 'b' 'int'
|   |-BinaryOperator 0x56450ae568d0 <line:791:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae56858 <col:3> '_Bool' lvalue Var 0x56450ae4fce8 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56450ae568a8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56450ae56878 <col:28> 'int' 0
|   |-CallExpr 0x56450ae56928 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56450ae56910 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae568f0 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56450ae56980 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56450ae56968 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae56948 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56450ae56c68 <line:794:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56450ae569a0 <col:3> 'int' lvalue Var 0x56450ae4fc50 'b' 'int'
|   | `-ConditionalOperator 0x56450ae56c38 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56450ae56a60 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56450ae56a18 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56450ae56a00 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56450ae569c0 <col:7> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56450ae56a48 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56450ae56a30 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56450ae569e0 <col:25> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56450ae56c20 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56450ae56a80 <col:42> 'int' lvalue Var 0x56450ae502c8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x56450ae56c00 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56450ae56bd0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56450ae56b40 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56450ae56af8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56450ae56ae0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56450ae56aa0 <col:55> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56450ae56b28 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56450ae56b10 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56450ae56ac0 <col:73> '_Bool' lvalue Var 0x56450ae50150 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56450ae56ba0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56450ae56b60 <col:90> 'int' lvalue Var 0x56450ae503c0 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56450ae56bb8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56450ae56b80 <col:102> 'int' lvalue Var 0x56450ae4fc50 'b' 'int'
|   |-BinaryOperator 0x56450ae56e70 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae56c88 <col:3> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae56e58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56450ae56e28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56450ae56d48 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56450ae56d00 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56450ae56ce8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56450ae56ca8 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56450ae56d30 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56450ae56d18 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56450ae56cc8 <col:38> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56450ae56de0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56450ae56d98 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56450ae56d68 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56450ae56e10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56450ae56df8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56450ae56dc0 <col:66> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56450ae57170 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae56e90 <col:3> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae57158 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56450ae57128 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56450ae57048 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56450ae56f50 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56450ae56f08 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56450ae56ef0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56450ae56eb0 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56450ae56f38 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56450ae56f20 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56450ae56ed0 <col:38> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56450ae57028 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56450ae56fe0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56450ae56fb0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56450ae56f70 <col:56> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56450ae57010 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56450ae56ff8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56450ae56f90 <col:74> '_Bool' lvalue Var 0x56450ae50150 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56450ae570e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56450ae57098 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56450ae57068 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56450ae57110 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56450ae570f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56450ae570c0 <col:102> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56450ae57378 <line:797:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae57190 <col:3> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae57360 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56450ae57330 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56450ae57250 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56450ae57208 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56450ae571f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56450ae571b0 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56450ae57238 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56450ae57220 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56450ae571d0 <col:38> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56450ae572e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56450ae572a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56450ae57270 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56450ae57318 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56450ae57300 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56450ae572c8 <col:66> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56450ae57660 <line:798:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56450ae57398 <col:3> '_Bool' lvalue Var 0x56450ae50150 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56450ae57648 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56450ae57618 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56450ae57538 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56450ae57458 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56450ae57410 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56450ae573f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56450ae573b8 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56450ae57440 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56450ae57428 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56450ae573d8 <col:38> '_Bool' lvalue Var 0x56450ae4ff70 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56450ae57518 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56450ae574d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56450ae574b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56450ae57478 <col:56> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56450ae57500 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56450ae574e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56450ae57498 <col:74> '_Bool' lvalue Var 0x56450ae50150 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56450ae575d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56450ae57588 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56450ae57558 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56450ae57600 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56450ae575e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56450ae575b0 <col:102> '_Bool' lvalue Var 0x56450ae50150 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x56450ae576b8 <line:799:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56450ae576a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae57680 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56450ae57710 <line:800:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56450ae576f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae576d8 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56450ae577c8 <line:801:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56450ae57730 <col:3> 'int' lvalue Var 0x56450ae4f590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56450ae577a8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56450ae57790 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56450ae57750 <col:22> 'int' lvalue Var 0x56450ae4f590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56450ae57770 <col:41> 'int' 1
|   |-CallExpr 0x56450ae57820 <line:802:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56450ae57808 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56450ae577e8 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56450ae57898 <line:803:3, col:36>
|     `-CallExpr 0x56450ae57878 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56450ae57860 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56450ae57840 <col:10> 'void *(void)' Function 0x56450adf5e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56450ae579f8 prev 0x56450ae4f2d8 <line:805:1, line:807:1> line:805:6 fence 'void ()'
| `-CompoundStmt 0x56450ae57a98 <line:806:1, line:807:1>
|-FunctionDecl 0x56450ae57ac8 prev 0x56450ae4f398 <line:808:1, line:810:1> line:808:6 isync 'void ()'
| `-CompoundStmt 0x56450ae57b68 <line:809:1, line:810:1>
|-FunctionDecl 0x56450ae57b98 prev 0x56450ae4f458 <line:811:1, line:813:1> line:811:6 lwfence 'void ()'
| `-CompoundStmt 0x56450ae57c38 <line:812:1, line:813:1>
`-FunctionDecl 0x56450ae57ca8 <line:814:1, line:838:1> line:814:5 main 'int ()'
  `-CompoundStmt 0x56450ae59a40 <line:815:1, line:838:1>
    |-DeclStmt 0x56450ae57dc0 <line:816:3, col:17>
    | `-VarDecl 0x56450ae57d58 <col:3, col:13> col:13 used t881 'pthread_t':'unsigned long'
    |-CallExpr 0x56450ae57ff0 <line:817:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56450ae57fb0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56450ae57dd8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56450ae368f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56450ae57e18 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56450ae57df8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56450ae57d58 't881' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56450ae58030 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56450ae57e90 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56450ae57e68 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56450ae57e30 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56450ae58048 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56450ae57eb0 <col:38> 'void *(void *)' Function 0x56450ae50a90 'P0' 'void *(void *)'
    | `-ParenExpr 0x56450ae57f30 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56450ae57f08 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56450ae57ed0 <col:51> 'int' 0
    |-DeclStmt 0x56450ae580d8 <line:818:3, col:17>
    | `-VarDecl 0x56450ae58070 <col:3, col:13> col:13 used t882 'pthread_t':'unsigned long'
    |-CallExpr 0x56450ae58280 <line:819:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56450ae58268 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56450ae580f0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56450ae368f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56450ae58130 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56450ae58110 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56450ae58070 't882' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56450ae582c0 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56450ae581a8 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56450ae58180 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56450ae58148 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56450ae582d8 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56450ae581c8 <col:38> 'void *(void *)' Function 0x56450ae52478 'P1' 'void *(void *)'
    | `-ParenExpr 0x56450ae58248 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56450ae58220 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56450ae581e8 <col:51> 'int' 0
    |-DeclStmt 0x56450ae58368 <line:820:3, col:17>
    | `-VarDecl 0x56450ae58300 <col:3, col:13> col:13 used t883 'pthread_t':'unsigned long'
    |-CallExpr 0x56450ae58510 <line:821:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56450ae584f8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56450ae58380 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56450ae368f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56450ae583c0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56450ae583a0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56450ae58300 't883' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56450ae58550 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56450ae58438 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56450ae58410 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56450ae583d8 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56450ae58568 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56450ae58458 <col:38> 'void *(void *)' Function 0x56450ae53a70 'P2' 'void *(void *)'
    | `-ParenExpr 0x56450ae584d8 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56450ae584b0 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56450ae58478 <col:51> 'int' 0
    |-CallExpr 0x56450ae585b8 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56450ae585a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56450ae58580 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56450ae58688 <line:823:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56450ae585d8 <col:3> '_Bool' lvalue Var 0x56450ae504b0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56450ae58670 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56450ae58650 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56450ae58638 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56450ae585f8 <col:21> 'int' lvalue Var 0x56450ae4f590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56450ae58618 <col:41> 'int' 3
    |-CallExpr 0x56450ae586e0 <line:824:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56450ae586c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56450ae586a8 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56450ae58758 <line:825:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56450ae58740 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56450ae58700 <col:3> 'void (int)' Function 0x56450adf5ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56450ae58798 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56450ae58780 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56450ae58720 <col:21> '_Bool' lvalue Var 0x56450ae504b0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56450ae587e8 <line:826:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56450ae587d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56450ae587b0 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56450ae58ad0 <line:827:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56450ae58808 <col:3> 'int' lvalue Var 0x56450ae4fc50 'b' 'int'
    | `-ConditionalOperator 0x56450ae58aa0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56450ae588c8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56450ae58880 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56450ae58868 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56450ae58828 <col:7> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56450ae588b0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56450ae58898 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56450ae58848 <col:25> '_Bool' lvalue Var 0x56450ae4fde0 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56450ae58a88 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56450ae588e8 <col:42> 'int' lvalue Var 0x56450ae502c8 'b$w_buff0' 'int'
    |   `-ParenExpr 0x56450ae58a68 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56450ae58a38 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56450ae589a8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56450ae58960 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56450ae58948 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56450ae58908 <col:55> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56450ae58990 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56450ae58978 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56450ae58928 <col:73> '_Bool' lvalue Var 0x56450ae4ffe8 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56450ae58a08 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56450ae589c8 <col:90> 'int' lvalue Var 0x56450ae503c0 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56450ae58a20 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56450ae589e8 <col:102> 'int' lvalue Var 0x56450ae4fc50 'b' 'int'
    |-BinaryOperator 0x56450ae58cd8 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56450ae58af0 <col:3> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56450ae58cc0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56450ae58c90 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56450ae58bb0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56450ae58b68 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56450ae58b50 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56450ae58b10 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56450ae58b98 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56450ae58b80 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56450ae58b30 <col:38> '_Bool' lvalue Var 0x56450ae4fde0 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56450ae58c48 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56450ae58c00 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56450ae58bd0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56450ae58c78 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56450ae58c60 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56450ae58c28 <col:66> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56450ae58fc0 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56450ae58cf8 <col:3> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56450ae58fa8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56450ae58f78 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56450ae58e98 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56450ae58db8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56450ae58d70 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56450ae58d58 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56450ae58d18 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56450ae58da0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56450ae58d88 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56450ae58d38 <col:38> '_Bool' lvalue Var 0x56450ae4fde0 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56450ae58e78 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56450ae58e30 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56450ae58e18 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56450ae58dd8 <col:56> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56450ae58e60 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56450ae58e48 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56450ae58df8 <col:74> '_Bool' lvalue Var 0x56450ae4ffe8 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56450ae58f30 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56450ae58ee8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56450ae58eb8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56450ae58f60 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56450ae58f48 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56450ae58f10 <col:102> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56450ae591e8 <line:830:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56450ae59000 <col:3> '_Bool' lvalue Var 0x56450ae4fde0 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56450ae591d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56450ae591a0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56450ae590c0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56450ae59078 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56450ae59060 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56450ae59020 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56450ae590a8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56450ae59090 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56450ae59040 <col:38> '_Bool' lvalue Var 0x56450ae4fde0 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56450ae59158 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56450ae59110 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56450ae590e0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56450ae59188 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56450ae59170 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56450ae59138 <col:66> '_Bool' lvalue Var 0x56450ae4fde0 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56450ae594d0 <line:831:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56450ae59208 <col:3> '_Bool' lvalue Var 0x56450ae4ffe8 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56450ae594b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56450ae59488 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56450ae593a8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56450ae592c8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56450ae59280 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56450ae59268 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56450ae59228 <col:20> '_Bool' lvalue Var 0x56450ae50340 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56450ae592b0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56450ae59298 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56450ae59248 <col:38> '_Bool' lvalue Var 0x56450ae4fde0 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56450ae59388 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56450ae59340 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56450ae59328 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56450ae592e8 <col:56> '_Bool' lvalue Var 0x56450ae50438 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56450ae59370 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56450ae59358 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56450ae59308 <col:74> '_Bool' lvalue Var 0x56450ae4ffe8 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56450ae59440 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56450ae593f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56450ae593c8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56450ae59470 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56450ae59458 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56450ae59420 <col:102> '_Bool' lvalue Var 0x56450ae4ffe8 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56450ae59528 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56450ae59510 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56450ae594f0 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56450ae59580 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56450ae59568 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56450ae59548 <col:3> 'void ()' Function 0x56450adf6350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56450ae598e8 <line:834:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x56450ae595a0 <col:3> '_Bool' lvalue Var 0x56450ae50528 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56450ae598d0 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56450ae598b8 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56450ae59898 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x56450ae59878 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x56450ae597e0 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x56450ae59748 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x56450ae596b0 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x56450ae59618 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x56450ae59600 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x56450ae595c0 <col:23> 'int' lvalue Var 0x56450ae50628 'x' 'int'
    |         | | | | `-IntegerLiteral 0x56450ae595e0 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x56450ae59690 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x56450ae59678 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x56450ae59638 <col:33> 'int' lvalue Var 0x56450ae4f6b0 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x56450ae59658 <col:56> 'int' 1
    |         | | `-BinaryOperator 0x56450ae59728 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x56450ae59710 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x56450ae596d0 <col:61> 'int' lvalue Var 0x56450ae4f7d0 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x56450ae596f0 <col:84> 'int' 0
    |         | `-BinaryOperator 0x56450ae597c0 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56450ae597a8 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56450ae59768 <col:89> 'int' lvalue Var 0x56450ae4f8f0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x56450ae59788 <col:112> 'int' 1
    |         `-BinaryOperator 0x56450ae59858 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x56450ae59840 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56450ae59800 <col:117> 'int' lvalue Var 0x56450ae4fa10 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x56450ae59820 <col:140> 'int' 0
    |-CallExpr 0x56450ae59940 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56450ae59928 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56450ae59908 <col:3> 'void ()' Function 0x56450adf6410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56450ae599b8 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56450ae599a0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56450ae59960 <col:3> 'void (int)' Function 0x56450adf60d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56450ae599f8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56450ae599e0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56450ae59980 <col:21> '_Bool' lvalue Var 0x56450ae50528 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56450ae59a30 <line:837:3, col:10>
      `-IntegerLiteral 0x56450ae59a10 <col:10> 'int' 0
