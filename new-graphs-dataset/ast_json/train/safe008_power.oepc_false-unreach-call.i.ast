TranslationUnitDecl 0x5572f8413f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5572f8414848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5572f8414520 '__int128'
|-TypedefDecl 0x5572f84148b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5572f8414540 'unsigned __int128'
|-TypedefDecl 0x5572f8414bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5572f8414990 'struct __NSConstantString_tag'
|   `-Record 0x5572f8414910 '__NSConstantString_tag'
|-TypedefDecl 0x5572f8414c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5572f8414c20 'char *'
|   `-BuiltinType 0x5572f8414020 'char'
|-TypedefDecl 0x5572f8453b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5572f8414f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5572f8414d40 'struct __va_list_tag'
|     `-Record 0x5572f8414cc0 '__va_list_tag'
|-FunctionDecl 0x5572f8453ca0 <pthread-wmm/safe008_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5572f8453bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5572f8453e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5572f8453f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5572f84540d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5572f8454048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5572f8454308 <col:40, col:99>
|   |-IfStmt 0x5572f84542d8 <col:42, col:88>
|   | |-UnaryOperator 0x5572f84541b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5572f84541a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5572f8454180 <col:47> 'int' lvalue ParmVar 0x5572f8454048 'expression' 'int'
|   | `-CompoundStmt 0x5572f84542c0 <col:59, col:88>
|   |   `-LabelStmt 0x5572f84542a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5572f8454238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5572f8454220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5572f84541d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5572f8453f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5572f84542f0 <col:89>
|   `-ReturnStmt 0x5572f84542f8 <col:91>
|-FunctionDecl 0x5572f8454350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5572f8454410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5572f8454790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5572f84544c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5572f8454548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5572f84545c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5572f8454648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5572f8454850 <line:10:22>
|-FunctionDecl 0x5572f847a8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5572f84548c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5572f8454940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5572f84549c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5572f8454a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5572f847a960 <line:13:22>
|-FunctionDecl 0x5572f847ac10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5572f847a9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5572f847aa50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5572f847aad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5572f847acc8 <line:15:22>
|-TypedefDecl 0x5572f847ad38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5572f84140e0 'unsigned char'
|-TypedefDecl 0x5572f847ada8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5572f8414100 'unsigned short'
|-TypedefDecl 0x5572f847ae18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5572f8414120 'unsigned int'
|-TypedefDecl 0x5572f847ae88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-TypedefDecl 0x5572f847aef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5572f8414040 'signed char'
|-TypedefDecl 0x5572f847af68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5572f84140e0 'unsigned char'
|-TypedefDecl 0x5572f847afd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5572f8414060 'short'
|-TypedefDecl 0x5572f847b048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5572f8414100 'unsigned short'
|-TypedefDecl 0x5572f847b0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5572f8414080 'int'
|-TypedefDecl 0x5572f847b128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5572f8414120 'unsigned int'
|-TypedefDecl 0x5572f847b198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f847b208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-TypedefDecl 0x5572f847b278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f847b2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-TypedefDecl 0x5572f847b358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-TypedefDecl 0x5572f847b3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5572f8414120 'unsigned int'
|-TypedefDecl 0x5572f847b438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5572f8414120 'unsigned int'
|-TypedefDecl 0x5572f847b4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-TypedefDecl 0x5572f847b518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-TypedefDecl 0x5572f847b588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5572f8414120 'unsigned int'
|-TypedefDecl 0x5572f847b5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-TypedefDecl 0x5572f847b668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f847b6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f847b748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5572f8414080 'int'
|-RecordDecl 0x5572f847b7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5572f847b918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5572f847b9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5572f847b970 'struct __fsid_t' sugar
|   `-RecordType 0x5572f847b820 '__fsid_t'
|     `-Record 0x5572f847b7a0 ''
|-TypedefDecl 0x5572f847ba58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f847bac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-TypedefDecl 0x5572f847bb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-TypedefDecl 0x5572f847bba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5572f8414120 'unsigned int'
|-TypedefDecl 0x5572f847bc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f847bc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5572f8414120 'unsigned int'
|-TypedefDecl 0x5572f847bcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f847bd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5572f8414080 'int'
|-TypedefDecl 0x5572f847bdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5572f8414080 'int'
|-TypedefDecl 0x5572f847be48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5572f8414080 'int'
|-TypedefDecl 0x5572f847beb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5572f84147a0 'void *'
|   `-BuiltinType 0x5572f8413fe0 'void'
|-TypedefDecl 0x5572f847bf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f847bf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f847c008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f847c078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-TypedefDecl 0x5572f847c0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-TypedefDecl 0x5572f847c158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-TypedefDecl 0x5572f847c1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-TypedefDecl 0x5572f847c238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f847c2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f847c318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f847c388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-TypedefDecl 0x5572f847c418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5572f847c3e0 '__off64_t' sugar
|   |-Typedef 0x5572f847b6d8 '__off64_t'
|   `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f847c510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5572f847c4d0 '__quad_t *'
|   `-TypedefType 0x5572f847c470 '__quad_t' sugar
|     |-Typedef 0x5572f847b278 '__quad_t'
|     `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f847c580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5572f8414c20 'char *'
|   `-BuiltinType 0x5572f8414020 'char'
|-TypedefDecl 0x5572f847c5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f847c660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5572f8414120 'unsigned int'
|-FunctionDecl 0x5572f847c7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5572f847c6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5572f847cae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5572f847cad8 <line:72:3, col:34>
|     `-CallExpr 0x5572f847ca98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5572f847ca80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5572f847ca10 <col:10> '<builtin fn type>' Function 0x5572f847c880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5572f847cac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5572f847ca30 <col:29> 'unsigned int' lvalue ParmVar 0x5572f847c6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5572f847c880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5572f847c920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5572f847c990 <col:10> Implicit
| `-ConstAttr 0x5572f847c9e8 <col:10> Implicit
|-FunctionDecl 0x5572f847cc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5572f847cb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5572f847cf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5572f847cf48 <line:77:3, col:34>
|     `-CallExpr 0x5572f847cf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5572f847cef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5572f847ce78 <col:10> '<builtin fn type>' Function 0x5572f847cce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5572f847cf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5572f847ce98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5572f847cb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5572f847cce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5572f847cd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5572f847cdf8 <col:10> Implicit
| `-ConstAttr 0x5572f847ce50 <col:10> Implicit
|-TypedefDecl 0x5572f847cf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-TypedefDecl 0x5572f847d018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5572f847cfe0 '__time_t' sugar
|   |-Typedef 0x5572f847bc18 '__time_t'
|   `-BuiltinType 0x5572f84140a0 'long'
|-RecordDecl 0x5572f847d070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5572f847d128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5572f847d1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5572f847d248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5572f847d210 '__pid_t' sugar
|   |-Typedef 0x5572f847b748 '__pid_t'
|   `-BuiltinType 0x5572f8414080 'int'
|-RecordDecl 0x5572f847d2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5572f847d360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5572f847d3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5572f847d470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5572f847d4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-RecordDecl 0x5572f847d530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5572f847d7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5572f847f8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5572f847d810 'struct cpu_set_t' sugar
|   `-RecordType 0x5572f847d5b0 'cpu_set_t'
|     `-Record 0x5572f847d530 ''
|-FunctionDecl 0x5572f847fb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5572f847f958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5572f847fa60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5572f847fc38 <line:107:19>
|-FunctionDecl 0x5572f847fe10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5572f847fca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5572f847feb8 <col:69>
|-FunctionDecl 0x5572f8480030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5572f847ff20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5572f84800d8 <col:64>
|-FunctionDecl 0x5572f8480398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5572f8480140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5572f8480278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5572f8480448 <line:113:22>
|-FunctionDecl 0x5572f84806c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5572f84804b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5572f84805a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5572f8480778 <col:88>
|-FunctionDecl 0x5572f8480a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5572f84807e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5572f84808c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5572f8480950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5572f8480b50 <col:62>
|-FunctionDecl 0x5572f8480cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5572f8480bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5572f8480d70 <col:63>
|-FunctionDecl 0x5572f8480e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5572f8480f38 <col:47>
|-FunctionDecl 0x5572f8481040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5572f8480fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5572f84810e8 <col:69>
|-FunctionDecl 0x5572f84811f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5572f8481158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5572f8481298 <col:69>
|-FunctionDecl 0x5572f8481558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5572f8481300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5572f8481438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5572f8481608 <col:88>
|-TypedefDecl 0x5572f8481698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5572f8481660 '__clock_t' sugar
|   |-Typedef 0x5572f847ba58 '__clock_t'
|   `-BuiltinType 0x5572f84140a0 'long'
|-TypedefDecl 0x5572f8481728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5572f84816f0 '__clockid_t' sugar
|   |-Typedef 0x5572f847be48 '__clockid_t'
|   `-BuiltinType 0x5572f8414080 'int'
|-TypedefDecl 0x5572f84817b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5572f8481780 '__timer_t' sugar
|   |-Typedef 0x5572f847beb8 '__timer_t'
|   `-PointerType 0x5572f84147a0 'void *'
|     `-BuiltinType 0x5572f8413fe0 'void'
|-RecordDecl 0x5572f8481810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5572f84818e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5572f8481950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5572f84819b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5572f8481a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5572f8481a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5572f8481af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5572f8481b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5572f8481bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5572f8481c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5572f8481c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5572f8481cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5572f8481d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5572f8481e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5572f8481e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5572f8481f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5572f8482100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5572f84821a0 <col:45>
|-FunctionDecl 0x5572f8482380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5572f8482270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5572f8482428 <col:54>
|-FunctionDecl 0x5572f8482628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5572f8482490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5572f8482508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5572f84826d8 <line:157:22>
| `-ConstAttr 0x5572f8482730 <col:63>
|-FunctionDecl 0x5572f8483560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5572f8482828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5572f8483608 <col:56>
|-FunctionDecl 0x5572f84839b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5572f8483678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5572f84836f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5572f8483770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5572f8483868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5572f8483a70 <col:54>
|-RecordDecl 0x5572f8483ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5572f8483b78 parent 0x5572f8413f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5572f8483dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5572f8483e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5572f8483ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5572f8483f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5572f8484038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5572f8484158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5572f8484100 'struct __locale_struct *'
|   `-ElaboratedType 0x5572f8484090 'struct __locale_struct' sugar
|     `-RecordType 0x5572f8483b50 'struct __locale_struct'
|       `-Record 0x5572f8483ac8 '__locale_struct'
|-TypedefDecl 0x5572f8484208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5572f84841d0 '__locale_t' sugar
|   |-Typedef 0x5572f8484158 '__locale_t'
|   `-PointerType 0x5572f8484100 'struct __locale_struct *'
|     `-ElaboratedType 0x5572f8484090 'struct __locale_struct' sugar
|       `-RecordType 0x5572f8483b50 'struct __locale_struct'
|         `-Record 0x5572f8483ac8 '__locale_struct'
|-FunctionDecl 0x5572f8484610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5572f8484278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5572f84842f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5572f8484370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5572f8484400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5572f8484478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5572f84846d8 <col:40>
|-FunctionDecl 0x5572f84848c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5572f84847a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5572f8484970 <col:66>
|-FunctionDecl 0x5572f8484a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5572f84849d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5572f8484b28 <col:69>
|-FunctionDecl 0x5572f8484d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5572f8484b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5572f8484c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5572f8484e08 <col:52>
|-FunctionDecl 0x5572f8484fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5572f8484e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5572f8484f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5572f8485060 <col:55>
|-FunctionDecl 0x5572f84851f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5572f84850e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5572f84852a0 <col:62>
|-FunctionDecl 0x5572f8485418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5572f8485308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5572f84854c0 <col:60>
|-FunctionDecl 0x5572f8485718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5572f8485578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5572f84855f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5572f84857c8 <col:44>
|-FunctionDecl 0x5572f84859d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5572f8485830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5572f84858b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5572f8485a88 <col:49>
|-VarDecl 0x5572f8485b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5572f8485c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5572f8485c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5572f8485d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5572f8485e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5572f8485f20 <col:42>
|-VarDecl 0x5572f8485f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5572f8486010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5572f8486198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5572f8486088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5572f8486240 <col:57>
|-FunctionDecl 0x5572f8486350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5572f84862c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5572f84863f8 <col:56>
|-FunctionDecl 0x5572f8487540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5572f8486478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5572f84875e8 <col:59>
|-FunctionDecl 0x5572f84876f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5572f8487658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5572f8487798 <col:48>
| `-ConstAttr 0x5572f84877f0 <col:89>
|-FunctionDecl 0x5572f8487a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5572f84878a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5572f8487938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5572f8487cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5572f8487b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5572f8487bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5572f8487d68 <col:88>
|-FunctionDecl 0x5572f8487f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5572f8487dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5572f8487e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5572f8487fb0 <col:88>
|-FunctionDecl 0x5572f84881c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5572f8488018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5572f84880a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5572f8488278 <line:208:22>
|-FunctionDecl 0x5572f84885e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5572f84882e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5572f8488360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5572f84883f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5572f8488480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5572f84888e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5572f84886e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5572f84887c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5572f8488998 <col:85>
|-FunctionDecl 0x5572f8488d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5572f8488a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5572f8488b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5572f8488c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5572f8488e40 <col:52>
|-FunctionDecl 0x5572f8488fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5572f8488ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5572f8489060 <col:61>
|-FunctionDecl 0x5572f8489560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5572f84890c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5572f8489148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5572f8489278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5572f8489368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5572f8489620 <col:62>
|-FunctionDecl 0x5572f8489838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5572f8489688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5572f8489718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5572f84898e8 <line:221:22>
|-FunctionDecl 0x5572f84899e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5572f8489950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5572f8489a90 <col:65>
|-TypedefDecl 0x5572f8489b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5572f8414140 'unsigned long'
|-RecordDecl 0x5572f8489b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5572f8489ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5572f8489d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5572f8489db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5572f8489d60 'union pthread_attr_t' sugar
|   `-RecordType 0x5572f8489be0 'union pthread_attr_t'
|     `-Record 0x5572f8489b58 'pthread_attr_t'
|-RecordDecl 0x5572f8489e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5572f8489f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5572f848a000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5572f848a0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5572f848a050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5572f8489e90 'struct __pthread_internal_list'
|     `-Record 0x5572f8489e10 '__pthread_internal_list'
|-RecordDecl 0x5572f848a120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5572f848a1c8 parent 0x5572f8413f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5572f848a2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5572f848a308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5572f848a370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5572f848a3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5572f848a440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5572f848a4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5572f848e580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5572f848e630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5572f848e720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5572f848e788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5572f848e910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5572f848e8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5572f848a1a0 'pthread_mutex_t'
|     `-Record 0x5572f848a120 ''
|-RecordDecl 0x5572f848e980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5572f848eac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5572f848eb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5572f848ebe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5572f848eb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5572f848ea00 'pthread_mutexattr_t'
|     `-Record 0x5572f848e980 ''
|-RecordDecl 0x5572f848ec50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5572f848ecf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5572f848edc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5572f848ee28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5572f848ee90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5572f848eef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5572f848ef60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5572f848efc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5572f848f030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5572f848f098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5572f848f150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe008_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe008_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5572f848f240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5572f848f2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5572f848f3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5572f848f380 'union pthread_cond_t' sugar
|   `-RecordType 0x5572f848ecd0 'pthread_cond_t'
|     `-Record 0x5572f848ec50 ''
|-RecordDecl 0x5572f848f450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5572f848f590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5572f848f5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5572f848f6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5572f848f650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5572f848f4d0 'pthread_condattr_t'
|     `-Record 0x5572f848f450 ''
|-TypedefDecl 0x5572f848f738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5572f8414120 'unsigned int'
|-TypedefDecl 0x5572f848f7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5572f8414080 'int'
|-RecordDecl 0x5572f848f800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5572f848f8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5572f848f970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5572f848f9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5572f848fa40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5572f848faa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5572f848fb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5572f848fb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5572f848fbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5572f848fc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5572f848fcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5572f848fd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5572f848fd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5572f848fe30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe008_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe008_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5572f848fed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5572f848ff40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5572f8490090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5572f8490030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5572f848f880 'pthread_rwlock_t'
|     `-Record 0x5572f848f800 ''
|-RecordDecl 0x5572f8490100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5572f8490240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5572f84902a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5572f8490360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5572f8490300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5572f8490180 'pthread_rwlockattr_t'
|     `-Record 0x5572f8490100 ''
|-TypedefDecl 0x5572f84903e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5572f8414084 'volatile int' volatile
|   `-BuiltinType 0x5572f8414080 'int'
|-RecordDecl 0x5572f8490440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5572f84925b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5572f8492618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5572f84926d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5572f8492670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5572f84904c0 'pthread_barrier_t'
|     `-Record 0x5572f8490440 ''
|-RecordDecl 0x5572f8492740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5572f8492840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5572f84928a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5572f8492960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5572f8492900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5572f84927c0 'pthread_barrierattr_t'
|     `-Record 0x5572f8492740 ''
|-TypedefDecl 0x5572f8492a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5572f8492a10 'long [8]' 8 
|   `-BuiltinType 0x5572f84140a0 'long'
|-EnumDecl 0x5572f8492ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5572f8492b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5572f8492be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5572f8492c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5572f8492d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5572f8492d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5572f8492da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5572f8492df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5572f8492e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5572f8492e68 <col:26> 'int'
| |   `-DeclRefExpr 0x5572f8492e48 <col:26> 'int' EnumConstant 0x5572f8492d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5572f8492f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5572f8492ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5572f8492ed0 <col:29> 'int' EnumConstant 0x5572f8492d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5572f8492f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5572f8492f78 <col:30> 'int'
| |   `-DeclRefExpr 0x5572f8492f58 <col:30> 'int' EnumConstant 0x5572f8492da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5572f8493018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5572f8493000 <col:27> 'int'
|     `-DeclRefExpr 0x5572f8492fe0 <col:27> 'int' EnumConstant 0x5572f8492e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5572f8493068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5572f8493138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5572f84931c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5572f84931a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5572f8493188 <col:30> 'int' EnumConstant 0x5572f8493138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5572f8493210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5572f8493298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5572f8493280 <col:29> 'int'
|     `-DeclRefExpr 0x5572f8493260 <col:29> 'int' EnumConstant 0x5572f8493210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5572f84932e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5572f84933b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5572f8493408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5572f8493458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5572f84934a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5572f84935c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5572f8493610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5572f8493660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5572f84936e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5572f84936d0 <col:31> 'int'
|     `-DeclRefExpr 0x5572f84936b0 <col:31> 'int' EnumConstant 0x5572f84935c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5572f8493738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5572f8493808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5572f8493858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5572f84938a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5572f8493978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5572f84939c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5572f8493a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5572f8493ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5572f8493b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5572f8493b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5572f8493dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5572f8493e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5572f8493e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5572f8493fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5572f8494008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5572f84940d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5572f8494128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5572f8494178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5572f8494248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5572f8494298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5572f84948f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5572f8494390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5572f84944a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5572f84946e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5572f8494760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5572f84949b8 <col:47>
| |-NonNullAttr 0x5572f8494a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5572f8494a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5572f8494b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5572f8494aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5572f8494dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5572f8494c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5572f8494ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5572f8494f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5572f8494e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5572f8495040 <col:60>
|-FunctionDecl 0x5572f8495190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5572f8495230 <col:54>
| `-ConstAttr 0x5572f8495288 <col:95>
|-FunctionDecl 0x5572f8495458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5572f84952c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5572f8495338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5572f8495508 <line:394:19>
| `-ConstAttr 0x5572f8495560 <col:60>
|-FunctionDecl 0x5572f8495f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5572f8495e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5572f8496010 <col:71>
| `-NonNullAttr 0x5572f8496068 <col:112, col:126> 1
|-FunctionDecl 0x5572f8496170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5572f84960b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5572f8496218 <line:397:22>
| `-NonNullAttr 0x5572f8496270 <col:63, col:77> 1
|-FunctionDecl 0x5572f8496498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5572f84962b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5572f8496338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5572f8496548 <line:400:22>
| `-NonNullAttr 0x5572f84965a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f84967a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5572f84965e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5572f8496668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5572f8496858 <line:403:22>
| `-NonNullAttr 0x5572f84968b0 <col:63, col:77> 1
|-FunctionDecl 0x5572f8496b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5572f84968f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5572f84969a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5572f8496bb8 <line:406:22>
| `-NonNullAttr 0x5572f8496c10 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f8497e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5572f8496c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5572f8496cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5572f8497ef8 <line:409:22>
| `-NonNullAttr 0x5572f8497f50 <col:63, col:77> 1
|-FunctionDecl 0x5572f8498188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5572f8497f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5572f8498028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5572f8498238 <line:412:22>
| `-NonNullAttr 0x5572f8498290 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f84984c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5572f84982d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5572f8498368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5572f8498578 <col:37>
| `-NonNullAttr 0x5572f84985d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5572f84987b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5572f8498618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5572f8498698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5572f8498868 <line:418:22>
| `-NonNullAttr 0x5572f84988c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f8498a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5572f8498908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5572f8498988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5572f8498af8 <line:420:22>
| `-NonNullAttr 0x5572f8498b50 <col:63, col:77> 1
|-FunctionDecl 0x5572f8498cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5572f8498b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5572f8498c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5572f8498da8 <line:423:22>
| `-NonNullAttr 0x5572f8499e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f8499fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5572f8499e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5572f8499ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5572f849a068 <line:426:22>
| `-NonNullAttr 0x5572f849a0c0 <col:63, col:77> 1
|-FunctionDecl 0x5572f849a268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5572f849a108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5572f849a188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5572f849a318 <line:429:22>
| `-NonNullAttr 0x5572f849a370 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f849a4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5572f849a3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5572f849a438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5572f849a5a8 <line:431:22>
| `-NonNullAttr 0x5572f849a600 <col:63, col:77> 1
|-FunctionDecl 0x5572f849a828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5572f849a648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5572f849a6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5572f849a8d8 <line:434:22>
| |-NonNullAttr 0x5572f849a930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5572f849a968 <col:100> "" ""
|-FunctionDecl 0x5572f849ab78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5572f849a9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5572f849aa38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5572f849ac28 <line:437:22>
| |-NonNullAttr 0x5572f849ac80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5572f849acb8 <col:97> "" ""
|-FunctionDecl 0x5572f849aeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5572f849ad08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5572f849ad80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5572f849af68 <line:440:22>
| `-NonNullAttr 0x5572f849afc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f849b140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5572f849b008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5572f849b080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5572f849b1f0 <line:443:22>
| `-NonNullAttr 0x5572f849b248 <col:63, col:77> 1
|-FunctionDecl 0x5572f849b538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5572f849b298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5572f849b318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5572f849b390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5572f849b5f0 <line:447:22>
| `-NonNullAttr 0x5572f849b648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5572f849b8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5572f849b6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5572f849b720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5572f849b798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5572f849b9b0 <col:43>
| `-NonNullAttr 0x5572f849ba08 <col:84, col:98> 1
|-FunctionDecl 0x5572f849bcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5572f849ba58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5572f849bad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5572f849bb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5572f849bd80 <line:452:22>
| `-NonNullAttr 0x5572f849bdd8 <col:63, col:77> 3
|-FunctionDecl 0x5572f849c0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5572f849be50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5572f849bed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5572f849bf60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5572f849c1a0 <line:456:22>
| `-NonNullAttr 0x5572f849c1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5572f849c3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5572f849c248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5572f849c2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5572f849c498 <line:458:22>
|-FunctionDecl 0x5572f849c868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5572f849c560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5572f849c700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5572f849c918 <col:52, col:69> 1 2
|-FunctionDecl 0x5572f849cac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5572f849c9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5572f849ca20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5572f849cca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5572f849cb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5572f849cc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5572f849ce60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5572f849cd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5572f849cfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5572f849d040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5572f849d0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5572f849d1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5572f849d240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5572f849d410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe008_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5572f849d508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5572f849d5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5572f849d560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5572f849d0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5572f849d040 ''
| `-AlignedAttr 0x5572f849d618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5572f849d690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5572f849d7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5572f849d858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5572f849d8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5572f849d928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5572f849db30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5572f849da20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5572f849dc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5572f849dbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5572f849de70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5572f849dd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5572f849df18 <line:487:22>
|-RecordDecl 0x5572f849df70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5572f849e288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5572f849e0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5572f849e168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5572f849e338 <col:86>
| `-ReturnsTwiceAttr 0x5572f849e390 <col:12> Implicit
|-FunctionDecl 0x5572f849e6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5572f849e460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5572f849e570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5572f849e768 <line:493:22>
| `-NonNullAttr 0x5572f849e7c0 <col:63, col:77> 1
|-FunctionDecl 0x5572f849e938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5572f849e808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5572f849e9e0 <line:495:22>
| `-NonNullAttr 0x5572f849ea38 <col:63, col:77> 1
|-FunctionDecl 0x5572f849eb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5572f849ea88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5572f849ebe8 <line:497:22>
| `-NonNullAttr 0x5572f849ec40 <col:52, col:66> 1
|-FunctionDecl 0x5572f849ed40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5572f849ec88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5572f849ede8 <line:499:22>
| `-NonNullAttr 0x5572f849ee40 <col:52, col:66> 1
|-FunctionDecl 0x5572f849f088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5572f849ee98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5572f849ef28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5572f849f138 <col:36>
| `-NonNullAttr 0x5572f849f190 <col:66, col:83> 1 2
|-FunctionDecl 0x5572f849f290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5572f849f1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5572f849f338 <line:504:22>
| `-NonNullAttr 0x5572f849f390 <col:52, col:66> 1
|-FunctionDecl 0x5572f849f628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5572f849f440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5572f849f4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5572f849f6d8 <line:508:22>
| `-NonNullAttr 0x5572f849f730 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f849f9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5572f849f778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5572f849f7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5572f849f878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5572f849fab0 <line:512:22>
| `-NonNullAttr 0x5572f849fb08 <col:63, col:80> 1 3
|-FunctionDecl 0x5572f849fc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5572f849fb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5572f849fcb8 <line:514:22>
| `-NonNullAttr 0x5572f849fd10 <col:63, col:77> 1
|-FunctionDecl 0x5572f849ff38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5572f849fdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5572f849ffe0 <line:516:22>
| `-NonNullAttr 0x5572f84a0038 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a0140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5572f84a0088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5572f84a01e8 <line:518:22>
| `-NonNullAttr 0x5572f84a0240 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a0468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5572f84a0288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5572f84a0308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5572f84a0518 <line:522:22>
| `-NonNullAttr 0x5572f84a0570 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f84a0778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5572f84a05b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5572f84a0638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5572f84a0828 <line:525:22>
| `-NonNullAttr 0x5572f84a0880 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a0a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5572f84a08c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5572f84a0948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5572f84a0ad8 <line:528:22>
| `-NonNullAttr 0x5572f84a0b30 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f84a0cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5572f84a0b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5572f84a0bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5572f84a0d68 <line:530:22>
| `-NonNullAttr 0x5572f84a0dc0 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a1f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5572f84a0e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5572f84a1eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5572f84a2040 <line:534:22>
| `-NonNullAttr 0x5572f84a2098 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f84a2228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5572f84a20e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5572f84a2168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5572f84a22d8 <line:537:22>
| `-NonNullAttr 0x5572f84a2330 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a24d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5572f84a2378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5572f84a23f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5572f84a2588 <line:541:22>
| `-NonNullAttr 0x5572f84a25e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f84a2768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5572f84a2628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5572f84a26a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5572f84a2818 <line:544:22>
| `-NonNullAttr 0x5572f84a2870 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a2a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5572f84a28b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5572f84a2938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5572f84a2b08 <line:547:22>
| `-NonNullAttr 0x5572f84a2b60 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f84a2ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5572f84a2ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5572f84a2c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5572f84a2d98 <line:550:22>
| `-NonNullAttr 0x5572f84a2df0 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a4168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5572f84a3f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5572f84a4020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5572f84a4218 <col:29>
| `-NonNullAttr 0x5572f84a4270 <col:70, col:84> 1
|-FunctionDecl 0x5572f84a43e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5572f84a42b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5572f84a4490 <line:555:22>
| `-NonNullAttr 0x5572f84a44e8 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a45f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5572f84a4538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5572f84a4698 <line:557:22>
| `-NonNullAttr 0x5572f84a46f0 <col:52, col:66> 1
|-FunctionDecl 0x5572f84a47f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5572f84a4738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5572f84a4898 <line:559:19>
| `-NonNullAttr 0x5572f84a48f0 <col:49, col:63> 1
|-FunctionDecl 0x5572f84a4b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5572f84a4938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5572f84a49c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5572f84a4bd8 <col:39>
| `-NonNullAttr 0x5572f84a4c30 <col:69, col:86> 1 2
|-FunctionDecl 0x5572f84a4d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5572f84a4c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5572f84a4dd8 <line:564:22>
| `-NonNullAttr 0x5572f84a4e30 <col:52, col:66> 1
|-FunctionDecl 0x5572f84a4f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5572f84a4ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5572f84a5040 <line:566:22>
| `-NonNullAttr 0x5572f84a5098 <col:52, col:66> 1
|-FunctionDecl 0x5572f84a5258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5572f84a50e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5572f84a5178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5572f84a5308 <col:39>
| `-NonNullAttr 0x5572f84a5360 <col:69, col:86> 1 2
|-FunctionDecl 0x5572f84a5460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5572f84a53a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5572f84a5508 <line:571:22>
| `-NonNullAttr 0x5572f84a5560 <col:52, col:66> 1
|-FunctionDecl 0x5572f84a5748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5572f84a5610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5572f84a57f0 <line:573:22>
| `-NonNullAttr 0x5572f84a5848 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a5950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5572f84a5898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5572f84a59f8 <line:575:22>
| `-NonNullAttr 0x5572f84a5a50 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a5c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5572f84a5a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5572f84a5b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5572f84a5d28 <line:579:22>
| `-NonNullAttr 0x5572f84a5d80 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f84a5fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5572f84a5dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5572f84a5e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5572f84a6058 <line:582:22>
| `-NonNullAttr 0x5572f84a60b0 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a6258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5572f84a60f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5572f84a6178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5572f84a6308 <line:586:22>
| `-NonNullAttr 0x5572f84a6360 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f84a64e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5572f84a63a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5572f84a6428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5572f84a6598 <col:36>
| `-NonNullAttr 0x5572f84a65f0 <col:77, col:91> 1
|-FunctionDecl 0x5572f84a6928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5572f84a66d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5572f84a67e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5572f84a69d8 <line:591:22>
| `-NonNullAttr 0x5572f84a6a30 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a6ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5572f84a6a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5572f84a6c50 <line:593:22>
| `-NonNullAttr 0x5572f84a6ca8 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a6db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5572f84a6cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5572f84a6e58 <line:595:22>
| `-NonNullAttr 0x5572f84a6eb0 <col:52, col:66> 1
|-FunctionDecl 0x5572f84a6fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5572f84a6f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5572f84a7070 <line:597:22>
| `-NonNullAttr 0x5572f84a70c8 <col:52, col:66> 1
|-FunctionDecl 0x5572f84a72f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5572f84a7118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5572f84a7190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5572f84a73a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5572f84a76d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5572f84a7428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5572f84a74a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5572f84a7530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5572f84a7790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5572f84a79a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5572f84a7870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5572f84a7a50 <line:606:22>
| `-NonNullAttr 0x5572f84a7aa8 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a7bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5572f84a7af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5572f84a7c58 <line:608:22>
| `-NonNullAttr 0x5572f84a7cb0 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a7f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5572f84a7cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5572f84a7d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5572f84a7fc0 <line:612:22>
| `-NonNullAttr 0x5572f84a8018 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f84a8228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5572f84a8068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5572f84a80e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5572f84a82d8 <col:37>
| `-NonNullAttr 0x5572f84a8330 <col:78, col:92> 1
|-FunctionDecl 0x5572f84a8548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5572f84a8378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5572f84a8420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5572f84a85f8 <line:618:22>
| `-NonNullAttr 0x5572f84a8650 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f84a8818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5572f84a8698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5572f84a8710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5572f84a88c8 <line:621:22>
| `-NonNullAttr 0x5572f84a8920 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a8bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5572f84a8a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5572f84a8a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5572f84a8c78 <line:623:22>
| `-NonNullAttr 0x5572f84a8cd0 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a8e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5572f84a8d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5572f84a8f20 <line:625:22>
| `-NonNullAttr 0x5572f84a8f78 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a9080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5572f84a8fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5572f84a9128 <line:627:22>
| `-NonNullAttr 0x5572f84a9180 <col:52, col:66> 1
|-FunctionDecl 0x5572f84a9280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5572f84a91c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5572f84a9328 <line:629:22>
| `-NonNullAttr 0x5572f84a9380 <col:52, col:66> 1
|-FunctionDecl 0x5572f84a9480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5572f84a93c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5572f84a9528 <line:631:22>
| `-NonNullAttr 0x5572f84a9580 <col:52, col:66> 1
|-FunctionDecl 0x5572f84a9958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5572f84a9660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5572f84a9770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5572f84a97f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5572f84a9a10 <line:635:22>
| `-NonNullAttr 0x5572f84a9a68 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a9be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5572f84a9ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5572f84a9c90 <line:637:22>
| `-NonNullAttr 0x5572f84a9ce8 <col:63, col:77> 1
|-FunctionDecl 0x5572f84a9df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5572f84a9d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5572f84a9e98 <line:639:22>
| `-NonNullAttr 0x5572f84a9ef0 <col:52, col:66> 1
|-FunctionDecl 0x5572f84aa0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5572f84a9fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5572f84aa190 <line:641:22>
| `-NonNullAttr 0x5572f84aa1e8 <col:63, col:77> 1
|-FunctionDecl 0x5572f84aa2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5572f84aa238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5572f84aa398 <line:643:22>
| `-NonNullAttr 0x5572f84aa3f0 <col:63, col:77> 1
|-FunctionDecl 0x5572f84aa618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5572f84aa438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5572f84aa4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5572f84aa6c8 <line:647:22>
| `-NonNullAttr 0x5572f84aa720 <col:63, col:80> 1 2
|-FunctionDecl 0x5572f84aa928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5572f84aa768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5572f84aa7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5572f84aa9d8 <line:650:22>
| `-NonNullAttr 0x5572f84aaa30 <col:63, col:77> 1
|-FunctionDecl 0x5572f84aad78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5572f84aab10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5572f84aac30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5572f84aae28 <line:653:22>
| `-NonNullAttr 0x5572f84aae80 <col:63, col:77> 1
|-FunctionDecl 0x5572f84aafe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5572f84aaec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5572f84ab090 <col:69>
|-FunctionDecl 0x5572f84ab208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5572f84ab0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5572f84ab2b0 <col:72>
|-FunctionDecl 0x5572f84ab4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5572f84ab318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5572f84ab3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5572f84ab598 <col:44>
|-FunctionDecl 0x5572f84ab7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5572f84ab600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5572f84ab678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5572f84ab868 <line:660:22>
| `-NonNullAttr 0x5572f84ab8c0 <col:63, col:77> 2
|-FunctionDecl 0x5572f84abd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5572f84ab9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5572f84abab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5572f84abbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5572f84abdc0 <col:47>
|-FunctionDecl 0x5572f84acf60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5572f84abe30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5572f84ad0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5572f84ad020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5572f84ad210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5572f84ad178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5572f84ad2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5572f84ad398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5572f84ad458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5572f84ad510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5572f84ad590 prev 0x5572f84ad510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5572f84ad5f8 <col:24> 'int' 0
|-VarDecl 0x5572f84ad630 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5572f84ad6b0 prev 0x5572f84ad630 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5572f84ad718 <col:27> 'int' 0
|-VarDecl 0x5572f84ad750 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5572f84ad7d0 prev 0x5572f84ad750 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5572f84ad838 <col:27> 'int' 0
|-VarDecl 0x5572f84ad868 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5572f84ad8e0 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5572f84ad960 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x5572f84ad9e0 prev 0x5572f84ad960 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5572f84ada48 <col:9> 'int' 0
|-VarDecl 0x5572f84ada80 <line:681:1, col:5> col:5 used y 'int'
|-VarDecl 0x5572f84adb00 prev 0x5572f84ada80 <line:682:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5572f84adb68 <col:9> 'int' 0
|-VarDecl 0x5572f84adba0 <line:683:1, col:5> col:5 used z 'int'
|-VarDecl 0x5572f84adc20 prev 0x5572f84adba0 <line:684:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5572f84adc88 <col:9> 'int' 0
|-VarDecl 0x5572f84adcb8 <line:685:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x5572f84add38 <line:686:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x5572f84addb0 <line:687:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x5572f84ade28 <line:688:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x5572f84adea0 <line:689:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x5572f84adf70 <line:690:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x5572f84adfe8 <line:691:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x5572f84ae060 <line:692:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x5572f84ae0d8 <line:693:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x5572f84ae150 <line:694:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x5572f84ae1c8 <line:695:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x5572f84ae248 <line:696:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x5572f84ae2c8 <line:697:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x5572f84ae340 <line:698:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x5572f84ae3c0 <line:699:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x5572f84ae438 <line:700:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x5572f84ae4b0 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5572f84ae528 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5572f84ae640 prev 0x5572f84acf60 <line:703:1, line:731:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5572f84ae5a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5572f84afe68 <line:704:1, line:731:1>
|   |-CallExpr 0x5572f84ae758 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5572f84ae740 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84ae6e8 <col:3> 'void ()' Function 0x5572f8454350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5572f84ae7d0 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5572f84ae778 <col:3> 'int' lvalue Var 0x5572f84ae3c0 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5572f84ae7b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5572f84ae798 <col:15> 'int' lvalue Var 0x5572f84ae2c8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5572f84ae830 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5572f84ae7f0 <col:3> 'int' lvalue Var 0x5572f84ae2c8 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x5572f84ae810 <col:15> 'int' 2
|   |-BinaryOperator 0x5572f84ae8a8 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84ae850 <col:3> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84ae890 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5572f84ae870 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5572f84ae940 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84ae8c8 <col:3> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5572f84ae918 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5572f84ae8e8 <col:27> 'int' 1
|   |-CallExpr 0x5572f84aeac8 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5572f84aeab0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5572f84ae960 <col:3> 'void (int)' Function 0x5572f84540d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5572f84aea60 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5572f84aea40 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5572f84aea20 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5572f84ae9d8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5572f84ae9c0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5572f84ae980 <col:23> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5572f84aea08 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5572f84ae9f0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5572f84ae9a0 <col:41> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5572f84aeb48 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84aeaf0 <col:3> '_Bool' lvalue Var 0x5572f84adfe8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84aeb30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5572f84aeb10 <col:20> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5572f84aebc0 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84aeb68 <col:3> '_Bool' lvalue Var 0x5572f84ae060 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84aeba8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5572f84aeb88 <col:20> '_Bool' lvalue Var 0x5572f84ade28 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5572f84aec38 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84aebe0 <col:3> '_Bool' lvalue Var 0x5572f84ae0d8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84aec20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5572f84aec00 <col:20> '_Bool' lvalue Var 0x5572f84adea0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5572f84aecb0 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84aec58 <col:3> '_Bool' lvalue Var 0x5572f84ae150 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84aec98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5572f84aec78 <col:20> '_Bool' lvalue Var 0x5572f84adf70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5572f84aed48 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84aecd0 <col:3> '_Bool' lvalue Var 0x5572f84ade28 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5572f84aed20 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5572f84aecf0 <col:27> 'int' 1
|   |-CallExpr 0x5572f84aeda0 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5572f84aed88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84aed68 <col:3> 'void ()' Function 0x5572f8454410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5572f84aedf8 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5572f84aede0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84aedc0 <col:3> 'void ()' Function 0x5572f8454350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5572f84aee58 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5572f84aee18 <col:3> 'int' lvalue Var 0x5572f84ad9e0 'x' 'int'
|   | `-IntegerLiteral 0x5572f84aee38 <col:7> 'int' 1
|   |-CallExpr 0x5572f84aeeb0 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5572f84aee98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84aee78 <col:3> 'void ()' Function 0x5572f8454410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5572f84aef08 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5572f84aeef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84aeed0 <col:3> 'void ()' Function 0x5572f8454350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5572f84af208 <line:721:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5572f84aef28 <col:3> 'int' lvalue Var 0x5572f84adc20 'z' 'int'
|   | `-ConditionalOperator 0x5572f84af1d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5572f84af000 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5572f84aefb8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5572f84aefa0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5572f84aef48 <col:7> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5572f84aefe8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5572f84aefd0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5572f84aef80 <col:25> '_Bool' lvalue Var 0x5572f84ade28 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5572f84af1c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5572f84af020 <col:42> 'int' lvalue Var 0x5572f84ae2c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5572f84af1a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5572f84af170 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5572f84af0e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5572f84af098 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5572f84af080 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5572f84af040 <col:55> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5572f84af0c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5572f84af0b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5572f84af060 <col:73> '_Bool' lvalue Var 0x5572f84ae060 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5572f84af140 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5572f84af100 <col:90> 'int' lvalue Var 0x5572f84ae3c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5572f84af158 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5572f84af120 <col:102> 'int' lvalue Var 0x5572f84adc20 'z' 'int'
|   |-BinaryOperator 0x5572f84af410 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84af228 <col:3> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84af3f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5572f84af3c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5572f84af2e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5572f84af2a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5572f84af288 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5572f84af248 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5572f84af2d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5572f84af2b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5572f84af268 <col:38> '_Bool' lvalue Var 0x5572f84ade28 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5572f84af380 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5572f84af338 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5572f84af308 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5572f84af3b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5572f84af398 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5572f84af360 <col:66> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5572f84af6f8 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84af430 <col:3> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84af6e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5572f84af6b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5572f84af5d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5572f84af4f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5572f84af4a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5572f84af490 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5572f84af450 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5572f84af4d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5572f84af4c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5572f84af470 <col:38> '_Bool' lvalue Var 0x5572f84ade28 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5572f84af5b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5572f84af568 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5572f84af550 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5572f84af510 <col:56> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5572f84af598 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5572f84af580 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5572f84af530 <col:74> '_Bool' lvalue Var 0x5572f84ae060 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5572f84af668 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5572f84af620 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5572f84af5f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5572f84af698 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5572f84af680 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5572f84af648 <col:102> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5572f84af900 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84af718 <col:3> '_Bool' lvalue Var 0x5572f84ade28 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84af8e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5572f84af8b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5572f84af7d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5572f84af790 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5572f84af778 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5572f84af738 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5572f84af7c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5572f84af7a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5572f84af758 <col:38> '_Bool' lvalue Var 0x5572f84ade28 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5572f84af870 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5572f84af828 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5572f84af7f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5572f84af8a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5572f84af888 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5572f84af850 <col:66> '_Bool' lvalue Var 0x5572f84ade28 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5572f84afbe8 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84af920 <col:3> '_Bool' lvalue Var 0x5572f84ae060 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84afbd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5572f84afba0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5572f84afac0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5572f84af9e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5572f84af998 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5572f84af980 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5572f84af940 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5572f84af9c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5572f84af9b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5572f84af960 <col:38> '_Bool' lvalue Var 0x5572f84ade28 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5572f84afaa0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5572f84afa58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5572f84afa40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5572f84afa00 <col:56> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5572f84afa88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5572f84afa70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5572f84afa20 <col:74> '_Bool' lvalue Var 0x5572f84ae060 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5572f84afb58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5572f84afb10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5572f84afae0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5572f84afb88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5572f84afb70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5572f84afb38 <col:102> '_Bool' lvalue Var 0x5572f84ae060 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5572f84afc40 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5572f84afc28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84afc08 <col:3> 'void ()' Function 0x5572f8454410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5572f84afc98 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5572f84afc80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84afc60 <col:3> 'void ()' Function 0x5572f8454350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5572f84afd50 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5572f84afcb8 <col:3> 'int' lvalue Var 0x5572f84ad590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5572f84afd30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5572f84afd18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5572f84afcd8 <col:22> 'int' lvalue Var 0x5572f84ad590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5572f84afcf8 <col:41> 'int' 1
|   |-CallExpr 0x5572f84afda8 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5572f84afd90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84afd70 <col:3> 'void ()' Function 0x5572f8454410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5572f84afe58 <line:730:3, col:36>
|     `-CallExpr 0x5572f84afe38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5572f84afe20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5572f84afdc8 <col:10> 'void *(void)' Function 0x5572f8453e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5572f84b0028 prev 0x5572f84ad0b8 <line:732:1, line:751:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5572f84aff90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5572f84b1260 <line:733:1, line:751:1>
|   |-CallExpr 0x5572f84b0108 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5572f84b00f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84b00d0 <col:3> 'void ()' Function 0x5572f8454350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5572f84b0180 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5572f84b0128 <col:3> 'int' lvalue Var 0x5572f84ad6b0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5572f84b0168 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5572f84b0148 <col:25> 'int' lvalue Var 0x5572f84ad9e0 'x' 'int'
|   |-CallExpr 0x5572f84b01d8 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5572f84b01c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84b01a0 <col:3> 'void ()' Function 0x5572f8454410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5572f84b0230 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5572f84b0218 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84b01f8 <col:3> 'void ()' Function 0x5572f8454350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5572f84b0290 <line:738:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5572f84b0250 <col:3> 'int' lvalue Var 0x5572f84adb00 'y' 'int'
|   | `-IntegerLiteral 0x5572f84b0270 <col:7> 'int' 1
|   |-CallExpr 0x5572f84b02e8 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5572f84b02d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84b02b0 <col:3> 'void ()' Function 0x5572f8454410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5572f84b0340 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5572f84b0328 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84b0308 <col:3> 'void ()' Function 0x5572f8454350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5572f84b0628 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5572f84b0360 <col:3> 'int' lvalue Var 0x5572f84adc20 'z' 'int'
|   | `-ConditionalOperator 0x5572f84b05f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5572f84b0420 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5572f84b03d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5572f84b03c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5572f84b0380 <col:7> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5572f84b0408 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5572f84b03f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5572f84b03a0 <col:25> '_Bool' lvalue Var 0x5572f84adea0 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5572f84b05e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5572f84b0440 <col:42> 'int' lvalue Var 0x5572f84ae2c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5572f84b05c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5572f84b0590 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5572f84b0500 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5572f84b04b8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5572f84b04a0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5572f84b0460 <col:55> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5572f84b04e8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5572f84b04d0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5572f84b0480 <col:73> '_Bool' lvalue Var 0x5572f84ae0d8 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5572f84b0560 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5572f84b0520 <col:90> 'int' lvalue Var 0x5572f84ae3c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5572f84b0578 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5572f84b0540 <col:102> 'int' lvalue Var 0x5572f84adc20 'z' 'int'
|   |-BinaryOperator 0x5572f84b0830 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84b0648 <col:3> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84b0818 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5572f84b07e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5572f84b0708 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5572f84b06c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5572f84b06a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5572f84b0668 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5572f84b06f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5572f84b06d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5572f84b0688 <col:38> '_Bool' lvalue Var 0x5572f84adea0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5572f84b07a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5572f84b0758 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5572f84b0728 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5572f84b07d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5572f84b07b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5572f84b0780 <col:66> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5572f84b0b18 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84b0850 <col:3> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84b0b00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5572f84b0ad0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5572f84b09f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5572f84b0910 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5572f84b08c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5572f84b08b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5572f84b0870 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5572f84b08f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5572f84b08e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5572f84b0890 <col:38> '_Bool' lvalue Var 0x5572f84adea0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5572f84b09d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5572f84b0988 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5572f84b0970 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5572f84b0930 <col:56> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5572f84b09b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5572f84b09a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5572f84b0950 <col:74> '_Bool' lvalue Var 0x5572f84ae0d8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5572f84b0a88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5572f84b0a40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5572f84b0a10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5572f84b0ab8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5572f84b0aa0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5572f84b0a68 <col:102> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5572f84b0d20 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84b0b38 <col:3> '_Bool' lvalue Var 0x5572f84adea0 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84b0d08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5572f84b0cd8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5572f84b0bf8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5572f84b0bb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5572f84b0b98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5572f84b0b58 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5572f84b0be0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5572f84b0bc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5572f84b0b78 <col:38> '_Bool' lvalue Var 0x5572f84adea0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5572f84b0c90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5572f84b0c48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5572f84b0c18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5572f84b0cc0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5572f84b0ca8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5572f84b0c70 <col:66> '_Bool' lvalue Var 0x5572f84adea0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5572f84b1018 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84b0d40 <col:3> '_Bool' lvalue Var 0x5572f84ae0d8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84b1000 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5572f84b0fd0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5572f84b0ee0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5572f84b0e00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5572f84b0db8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5572f84b0da0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5572f84b0d60 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5572f84b0de8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5572f84b0dd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5572f84b0d80 <col:38> '_Bool' lvalue Var 0x5572f84adea0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5572f84b0ec0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5572f84b0e78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5572f84b0e60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5572f84b0e20 <col:56> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5572f84b0ea8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5572f84b0e90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5572f84b0e40 <col:74> '_Bool' lvalue Var 0x5572f84ae0d8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5572f84b0f78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5572f84b0f30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5572f84b0f00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5572f84b0fb8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5572f84b0fa0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5572f84b0f58 <col:102> '_Bool' lvalue Var 0x5572f84ae0d8 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5572f84b1070 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5572f84b1058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84b1038 <col:3> 'void ()' Function 0x5572f8454410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5572f84b10c8 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5572f84b10b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84b1090 <col:3> 'void ()' Function 0x5572f8454350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5572f84b1180 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5572f84b10e8 <col:3> 'int' lvalue Var 0x5572f84ad590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5572f84b1160 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5572f84b1148 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5572f84b1108 <col:22> 'int' lvalue Var 0x5572f84ad590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5572f84b1128 <col:41> 'int' 1
|   |-CallExpr 0x5572f84b11d8 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5572f84b11c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84b11a0 <col:3> 'void ()' Function 0x5572f8454410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5572f84b1250 <line:750:3, col:36>
|     `-CallExpr 0x5572f84b1230 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5572f84b1218 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5572f84b11f8 <col:10> 'void *(void)' Function 0x5572f8453e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5572f84b13a8 prev 0x5572f84ad210 <line:752:1, line:771:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5572f84b1310 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5572f84b25e8 <line:753:1, line:771:1>
|   |-CallExpr 0x5572f84b1488 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5572f84b1470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84b1450 <col:3> 'void ()' Function 0x5572f8454350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5572f84b1500 <line:755:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5572f84b14a8 <col:3> 'int' lvalue Var 0x5572f84ad7d0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5572f84b14e8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5572f84b14c8 <col:25> 'int' lvalue Var 0x5572f84adb00 'y' 'int'
|   |-CallExpr 0x5572f84b1558 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5572f84b1540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84b1520 <col:3> 'void ()' Function 0x5572f8454410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5572f84b15b0 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5572f84b1598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84b1578 <col:3> 'void ()' Function 0x5572f8454350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5572f84b1610 <line:758:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5572f84b15d0 <col:3> 'int' lvalue Var 0x5572f84adc20 'z' 'int'
|   | `-IntegerLiteral 0x5572f84b15f0 <col:7> 'int' 1
|   |-CallExpr 0x5572f84b1668 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5572f84b1650 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84b1630 <col:3> 'void ()' Function 0x5572f8454410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5572f84b16c0 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5572f84b16a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84b1688 <col:3> 'void ()' Function 0x5572f8454350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5572f84b19a8 <line:761:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5572f84b16e0 <col:3> 'int' lvalue Var 0x5572f84adc20 'z' 'int'
|   | `-ConditionalOperator 0x5572f84b1978 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5572f84b17a0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5572f84b1758 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5572f84b1740 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5572f84b1700 <col:7> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5572f84b1788 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5572f84b1770 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5572f84b1720 <col:25> '_Bool' lvalue Var 0x5572f84adf70 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5572f84b1960 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5572f84b17c0 <col:42> 'int' lvalue Var 0x5572f84ae2c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5572f84b1940 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5572f84b1910 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5572f84b1880 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5572f84b1838 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5572f84b1820 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5572f84b17e0 <col:55> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5572f84b1868 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5572f84b1850 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5572f84b1800 <col:73> '_Bool' lvalue Var 0x5572f84ae150 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5572f84b18e0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5572f84b18a0 <col:90> 'int' lvalue Var 0x5572f84ae3c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5572f84b18f8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5572f84b18c0 <col:102> 'int' lvalue Var 0x5572f84adc20 'z' 'int'
|   |-BinaryOperator 0x5572f84b1bb0 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84b19c8 <col:3> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84b1b98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5572f84b1b68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5572f84b1a88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5572f84b1a40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5572f84b1a28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5572f84b19e8 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5572f84b1a70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5572f84b1a58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5572f84b1a08 <col:38> '_Bool' lvalue Var 0x5572f84adf70 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5572f84b1b20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5572f84b1ad8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5572f84b1aa8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5572f84b1b50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5572f84b1b38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5572f84b1b00 <col:66> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5572f84b1e98 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84b1bd0 <col:3> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84b1e80 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5572f84b1e50 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5572f84b1d70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5572f84b1c90 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5572f84b1c48 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5572f84b1c30 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5572f84b1bf0 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5572f84b1c78 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5572f84b1c60 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5572f84b1c10 <col:38> '_Bool' lvalue Var 0x5572f84adf70 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5572f84b1d50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5572f84b1d08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5572f84b1cf0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5572f84b1cb0 <col:56> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5572f84b1d38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5572f84b1d20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5572f84b1cd0 <col:74> '_Bool' lvalue Var 0x5572f84ae150 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5572f84b1e08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5572f84b1dc0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5572f84b1d90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5572f84b1e38 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5572f84b1e20 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5572f84b1de8 <col:102> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5572f84b20b8 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84b1eb8 <col:3> '_Bool' lvalue Var 0x5572f84adf70 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84b20a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5572f84b2070 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5572f84b1f78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5572f84b1f30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5572f84b1f18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5572f84b1ed8 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5572f84b1f60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5572f84b1f48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5572f84b1ef8 <col:38> '_Bool' lvalue Var 0x5572f84adf70 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5572f84b2028 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5572f84b1fe0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5572f84b1fb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5572f84b2058 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5572f84b2040 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5572f84b2008 <col:66> '_Bool' lvalue Var 0x5572f84adf70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5572f84b23a0 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5572f84b20d8 <col:3> '_Bool' lvalue Var 0x5572f84ae150 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5572f84b2388 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5572f84b2358 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5572f84b2278 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5572f84b2198 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5572f84b2150 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5572f84b2138 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5572f84b20f8 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5572f84b2180 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5572f84b2168 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5572f84b2118 <col:38> '_Bool' lvalue Var 0x5572f84adf70 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5572f84b2258 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5572f84b2210 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5572f84b21f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5572f84b21b8 <col:56> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5572f84b2240 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5572f84b2228 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5572f84b21d8 <col:74> '_Bool' lvalue Var 0x5572f84ae150 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5572f84b2310 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5572f84b22c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5572f84b2298 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5572f84b2340 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5572f84b2328 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5572f84b22f0 <col:102> '_Bool' lvalue Var 0x5572f84ae150 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5572f84b23f8 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5572f84b23e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84b23c0 <col:3> 'void ()' Function 0x5572f8454410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5572f84b2450 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5572f84b2438 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84b2418 <col:3> 'void ()' Function 0x5572f8454350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5572f84b2508 <line:768:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5572f84b2470 <col:3> 'int' lvalue Var 0x5572f84ad590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5572f84b24e8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5572f84b24d0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5572f84b2490 <col:22> 'int' lvalue Var 0x5572f84ad590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5572f84b24b0 <col:41> 'int' 1
|   |-CallExpr 0x5572f84b2560 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5572f84b2548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5572f84b2528 <col:3> 'void ()' Function 0x5572f8454410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5572f84b25d8 <line:770:3, col:36>
|     `-CallExpr 0x5572f84b25b8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5572f84b25a0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5572f84b2580 <col:10> 'void *(void)' Function 0x5572f8453e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5572f84b26a0 prev 0x5572f84ad2d8 <line:772:1, line:774:1> line:772:6 fence 'void ()'
| `-CompoundStmt 0x5572f84b2740 <line:773:1, line:774:1>
|-FunctionDecl 0x5572f84b2770 prev 0x5572f84ad398 <line:775:1, line:777:1> line:775:6 isync 'void ()'
| `-CompoundStmt 0x5572f84b2810 <line:776:1, line:777:1>
|-FunctionDecl 0x5572f84b2840 prev 0x5572f84ad458 <line:778:1, line:780:1> line:778:6 lwfence 'void ()'
| `-CompoundStmt 0x5572f84b28e0 <line:779:1, line:780:1>
`-FunctionDecl 0x5572f84b2948 <line:781:1, line:818:1> line:781:5 main 'int ()'
  `-CompoundStmt 0x5572f84b7000 <line:782:1, line:818:1>
    |-DeclStmt 0x5572f84b2a60 <line:783:3, col:18>
    | `-VarDecl 0x5572f84b29f8 <col:3, col:13> col:13 used t1963 'pthread_t':'unsigned long'
    |-CallExpr 0x5572f84b2c68 <line:784:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5572f84b2c50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5572f84b2a78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5572f84948f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5572f84b2ab8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5572f84b2a98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5572f84b29f8 't1963' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5572f84b2ca8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5572f84b2b30 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5572f84b2b08 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5572f84b2ad0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5572f84b2cc0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5572f84b2b50 <col:39> 'void *(void *)' Function 0x5572f84ae640 'P0' 'void *(void *)'
    | `-ParenExpr 0x5572f84b2bd0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5572f84b2ba8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5572f84b2b70 <col:52> 'int' 0
    |-DeclStmt 0x5572f84b2d50 <line:785:3, col:18>
    | `-VarDecl 0x5572f84b2ce8 <col:3, col:13> col:13 used t1964 'pthread_t':'unsigned long'
    |-CallExpr 0x5572f84b2ef8 <line:786:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5572f84b2ee0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5572f84b2d68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5572f84948f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5572f84b2da8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5572f84b2d88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5572f84b2ce8 't1964' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5572f84b2f38 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5572f84b2e20 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5572f84b2df8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5572f84b2dc0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5572f84b2f50 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5572f84b2e40 <col:39> 'void *(void *)' Function 0x5572f84b0028 'P1' 'void *(void *)'
    | `-ParenExpr 0x5572f84b2ec0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5572f84b2e98 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5572f84b2e60 <col:52> 'int' 0
    |-DeclStmt 0x5572f84b3028 <line:787:3, col:18>
    | `-VarDecl 0x5572f84b2fc0 <col:3, col:13> col:13 used t1965 'pthread_t':'unsigned long'
    |-CallExpr 0x5572f84b31d0 <line:788:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5572f84b31b8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5572f84b3040 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5572f84948f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5572f84b3080 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5572f84b3060 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5572f84b2fc0 't1965' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5572f84b3210 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5572f84b30f8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5572f84b30d0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5572f84b3098 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5572f84b3228 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5572f84b3118 <col:39> 'void *(void *)' Function 0x5572f84b13a8 'P2' 'void *(void *)'
    | `-ParenExpr 0x5572f84b3198 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5572f84b3170 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5572f84b3138 <col:52> 'int' 0
    |-CallExpr 0x5572f84b3278 <line:789:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5572f84b3260 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5572f84b3240 <col:3> 'void ()' Function 0x5572f8454350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5572f84b3348 <line:790:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5572f84b3298 <col:3> '_Bool' lvalue Var 0x5572f84ad868 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5572f84b3330 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5572f84b3310 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5572f84b32f8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5572f84b32b8 <col:21> 'int' lvalue Var 0x5572f84ad590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5572f84b32d8 <col:41> 'int' 3
    |-CallExpr 0x5572f84b33a0 <line:791:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5572f84b3388 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5572f84b3368 <col:3> 'void ()' Function 0x5572f8454410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5572f84b3418 <line:792:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5572f84b3400 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5572f84b33c0 <col:3> 'void (int)' Function 0x5572f8453ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5572f84b3458 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5572f84b3440 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5572f84b33e0 <col:21> '_Bool' lvalue Var 0x5572f84ad868 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5572f84b34a8 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5572f84b3490 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5572f84b3470 <col:3> 'void ()' Function 0x5572f8454350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5572f84b3790 <line:794:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5572f84b34c8 <col:3> 'int' lvalue Var 0x5572f84adc20 'z' 'int'
    | `-ConditionalOperator 0x5572f84b3760 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5572f84b3588 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5572f84b3540 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5572f84b3528 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5572f84b34e8 <col:7> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5572f84b3570 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5572f84b3558 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5572f84b3508 <col:25> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5572f84b3748 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5572f84b35a8 <col:42> 'int' lvalue Var 0x5572f84ae2c8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x5572f84b3728 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5572f84b36f8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5572f84b3668 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5572f84b3620 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5572f84b3608 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5572f84b35c8 <col:55> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5572f84b3650 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5572f84b3638 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5572f84b35e8 <col:73> '_Bool' lvalue Var 0x5572f84adfe8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5572f84b36c8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5572f84b3688 <col:90> 'int' lvalue Var 0x5572f84ae3c0 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5572f84b36e0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5572f84b36a8 <col:102> 'int' lvalue Var 0x5572f84adc20 'z' 'int'
    |-BinaryOperator 0x5572f84b3998 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5572f84b37b0 <col:3> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5572f84b3980 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5572f84b3950 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5572f84b3870 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5572f84b3828 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5572f84b3810 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5572f84b37d0 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5572f84b3858 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5572f84b3840 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5572f84b37f0 <col:38> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5572f84b3908 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5572f84b38c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5572f84b3890 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5572f84b3938 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5572f84b3920 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5572f84b38e8 <col:66> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5572f84b3c80 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5572f84b39b8 <col:3> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5572f84b3c68 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5572f84b3c38 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5572f84b3b58 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5572f84b3a78 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5572f84b3a30 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5572f84b3a18 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5572f84b39d8 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5572f84b3a60 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5572f84b3a48 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5572f84b39f8 <col:38> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5572f84b3b38 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5572f84b3af0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5572f84b3ad8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5572f84b3a98 <col:56> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5572f84b3b20 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5572f84b3b08 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5572f84b3ab8 <col:74> '_Bool' lvalue Var 0x5572f84adfe8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5572f84b3bf0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5572f84b3ba8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5572f84b3b78 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5572f84b3c20 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5572f84b3c08 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5572f84b3bd0 <col:102> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5572f84b3e88 <line:797:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5572f84b3ca0 <col:3> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5572f84b3e70 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5572f84b3e40 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5572f84b3d60 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5572f84b3d18 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5572f84b3d00 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5572f84b3cc0 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5572f84b3d48 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5572f84b3d30 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5572f84b3ce0 <col:38> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5572f84b3df8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5572f84b3db0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5572f84b3d80 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5572f84b3e28 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5572f84b3e10 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5572f84b3dd8 <col:66> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5572f84b4198 <line:798:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5572f84b3ea8 <col:3> '_Bool' lvalue Var 0x5572f84adfe8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5572f84b4180 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5572f84b4150 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5572f84b4070 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5572f84b3f68 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5572f84b3f20 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5572f84b3f08 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5572f84b3ec8 <col:20> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5572f84b3f50 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5572f84b3f38 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5572f84b3ee8 <col:38> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5572f84b4050 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5572f84b4008 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5572f84b3ff0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5572f84b3f88 <col:56> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5572f84b4038 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5572f84b4020 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5572f84b3fd0 <col:74> '_Bool' lvalue Var 0x5572f84adfe8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5572f84b4108 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5572f84b40c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5572f84b4090 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5572f84b4138 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5572f84b4120 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5572f84b40e8 <col:102> '_Bool' lvalue Var 0x5572f84adfe8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5572f84b41f0 <line:799:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5572f84b41d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5572f84b41b8 <col:3> 'void ()' Function 0x5572f8454410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5572f84b4248 <line:800:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5572f84b4230 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5572f84b4210 <col:3> 'void ()' Function 0x5572f8454350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5572f84b42f8 <line:801:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5572f84b4268 <col:3> '_Bool' lvalue Var 0x5572f84ae4b0 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x5572f84b42e0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5572f84b42c0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5572f84b42a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5572f84b4288 <col:19> 'void *(void)' Function 0x5572f8453e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5572f84b43a8 <line:802:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5572f84b4318 <col:3> '_Bool' lvalue Var 0x5572f84ae528 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x5572f84b4390 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5572f84b4370 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5572f84b4358 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5572f84b4338 <col:19> 'void *(void)' Function 0x5572f8453e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5572f84b4420 <line:803:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x5572f84b43c8 <col:3> '_Bool' lvalue Var 0x5572f84adcb8 'z$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x5572f84b4408 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x5572f84b43e8 <col:21> '_Bool' lvalue Var 0x5572f84ae528 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x5572f84b4498 <line:804:3, col:15> 'int' '='
    | |-DeclRefExpr 0x5572f84b4440 <col:3> 'int' lvalue Var 0x5572f84add38 'z$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x5572f84b4480 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5572f84b4460 <col:15> 'int' lvalue Var 0x5572f84adc20 'z' 'int'
    |-BinaryOperator 0x5572f84b48d0 <line:805:3, col:162> 'int' '='
    | |-DeclRefExpr 0x5572f84b44b8 <col:3> 'int' lvalue Var 0x5572f84adc20 'z' 'int'
    | `-ConditionalOperator 0x5572f84b48a0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x5572f84b46c8 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x5572f84b45e8 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x5572f84b4510 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x5572f84b44f8 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x5572f84b44d8 <col:8> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x5572f84b45c8 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x5572f84b4560 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x5572f84b4548 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x5572f84b4528 <col:27> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x5572f84b45b0 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x5572f84b4598 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x5572f84b4578 <col:46> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x5572f84b46a8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x5572f84b4640 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x5572f84b4628 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5572f84b4608 <col:65> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x5572f84b4690 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x5572f84b4678 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5572f84b4658 <col:84> '_Bool' lvalue Var 0x5572f84adfe8 'z$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5572f84b4888 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5572f84b46e8 <col:101> 'int' lvalue Var 0x5572f84adc20 'z' 'int'
    |   `-ParenExpr 0x5572f84b4868 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x5572f84b4838 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x5572f84b47a8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5572f84b4760 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5572f84b4748 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5572f84b4708 <col:106> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5572f84b4790 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5572f84b4778 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5572f84b4728 <col:124> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5572f84b4808 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5572f84b47c8 <col:141> 'int' lvalue Var 0x5572f84ae2c8 'z$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x5572f84b4820 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5572f84b47e8 <col:153> 'int' lvalue Var 0x5572f84ae3c0 'z$w_buff1' 'int'
    |-BinaryOperator 0x5572f84b4de0 <line:806:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5572f84b48f0 <col:3> 'int' lvalue Var 0x5572f84ae2c8 'z$w_buff0' 'int'
    | `-ConditionalOperator 0x5572f84b4db0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5572f84b4d80 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5572f84b4d68 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5572f84b4910 <col:15> '_Bool' lvalue Var 0x5572f84ae528 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5572f84b4d98 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5572f84b4930 <col:31> 'int' lvalue Var 0x5572f84ae2c8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x5572f84b4d48 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5572f84b4d18 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5572f84b4b40 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5572f84b4a60 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5572f84b4988 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5572f84b4970 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5572f84b4950 <col:45> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5572f84b4a40 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5572f84b49d8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5572f84b49c0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5572f84b49a0 <col:64> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5572f84b4a28 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5572f84b4a10 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5572f84b49f0 <col:83> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5572f84b4b20 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5572f84b4ab8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5572f84b4aa0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5572f84b4a80 <col:102> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5572f84b4b08 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5572f84b4af0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5572f84b4ad0 <col:121> '_Bool' lvalue Var 0x5572f84adfe8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5572f84b4d00 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5572f84b4b60 <col:138> 'int' lvalue Var 0x5572f84ae2c8 'z$w_buff0' 'int'
    |       `-ParenExpr 0x5572f84b4ce0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5572f84b4cb0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5572f84b4c20 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5572f84b4bd8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5572f84b4bc0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5572f84b4b80 <col:151> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5572f84b4c08 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5572f84b4bf0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5572f84b4ba0 <col:169> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5572f84b4c80 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5572f84b4c40 <col:186> 'int' lvalue Var 0x5572f84ae2c8 'z$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x5572f84b4c98 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5572f84b4c60 <col:198> 'int' lvalue Var 0x5572f84ae2c8 'z$w_buff0' 'int'
    |-BinaryOperator 0x5572f84b5308 <line:807:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5572f84b4e00 <col:3> 'int' lvalue Var 0x5572f84ae3c0 'z$w_buff1' 'int'
    | `-ConditionalOperator 0x5572f84b52d8 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5572f84b52a8 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5572f84b5290 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5572f84b4e20 <col:15> '_Bool' lvalue Var 0x5572f84ae528 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5572f84b52c0 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5572f84b4e40 <col:31> 'int' lvalue Var 0x5572f84ae3c0 'z$w_buff1' 'int'
    |   `-ParenExpr 0x5572f84b5270 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5572f84b5240 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5572f84b5068 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5572f84b4f70 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5572f84b4e98 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5572f84b4e80 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5572f84b4e60 <col:45> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5572f84b4f50 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5572f84b4ee8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5572f84b4ed0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5572f84b4eb0 <col:64> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5572f84b4f38 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5572f84b4f20 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5572f84b4f00 <col:83> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5572f84b5048 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5572f84b4fe0 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5572f84b4fb0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5572f84b4f90 <col:102> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5572f84b5030 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5572f84b5018 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5572f84b4ff8 <col:121> '_Bool' lvalue Var 0x5572f84adfe8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5572f84b5228 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5572f84b5088 <col:138> 'int' lvalue Var 0x5572f84ae3c0 'z$w_buff1' 'int'
    |       `-ParenExpr 0x5572f84b5208 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5572f84b51d8 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5572f84b5148 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5572f84b5100 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5572f84b50e8 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5572f84b50a8 <col:151> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5572f84b5130 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5572f84b5118 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5572f84b50c8 <col:169> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5572f84b51a8 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5572f84b5168 <col:186> 'int' lvalue Var 0x5572f84ae3c0 'z$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x5572f84b51c0 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5572f84b5188 <col:198> 'int' lvalue Var 0x5572f84ae3c0 'z$w_buff1' 'int'
    |-BinaryOperator 0x5572f84b58b0 <line:808:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5572f84b5328 <col:3> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5572f84b5898 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5572f84b5868 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5572f84b5820 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5572f84b5808 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5572f84b5348 <col:20> '_Bool' lvalue Var 0x5572f84ae528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5572f84b5850 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5572f84b5838 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5572f84b5368 <col:36> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x5572f84b57e8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5572f84b57b8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5572f84b5578 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5572f84b5498 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5572f84b53c0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5572f84b53a8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5572f84b5388 <col:55> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5572f84b5478 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5572f84b5410 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5572f84b53f8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5572f84b53d8 <col:74> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5572f84b5460 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5572f84b5448 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5572f84b5428 <col:93> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5572f84b5558 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5572f84b54f0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5572f84b54d8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5572f84b54b8 <col:112> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5572f84b5540 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5572f84b5528 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5572f84b5508 <col:131> '_Bool' lvalue Var 0x5572f84adfe8 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5572f84b57a0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5572f84b5788 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5572f84b5598 <col:148> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x5572f84b5768 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5572f84b5738 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5572f84b5658 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5572f84b5610 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5572f84b55f8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5572f84b55b8 <col:166> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5572f84b5640 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5572f84b5628 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5572f84b55d8 <col:184> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5572f84b56f0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5572f84b56a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5572f84b5678 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5572f84b5720 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5572f84b5708 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5572f84b56d0 <col:212> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5572f84b5e78 <line:809:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5572f84b58d0 <col:3> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5572f84b5e60 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5572f84b5e30 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5572f84b5de8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5572f84b5dd0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5572f84b58f0 <col:20> '_Bool' lvalue Var 0x5572f84ae528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5572f84b5e18 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5572f84b5e00 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5572f84b5910 <col:36> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x5572f84b5db0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5572f84b5d80 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5572f84b5b20 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5572f84b5a40 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5572f84b5968 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5572f84b5950 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5572f84b5930 <col:55> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5572f84b5a20 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5572f84b59b8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5572f84b59a0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5572f84b5980 <col:74> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5572f84b5a08 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5572f84b59f0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5572f84b59d0 <col:93> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5572f84b5b00 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5572f84b5a98 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5572f84b5a80 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5572f84b5a60 <col:112> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5572f84b5ae8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5572f84b5ad0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5572f84b5ab0 <col:131> '_Bool' lvalue Var 0x5572f84adfe8 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5572f84b5d68 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5572f84b5d50 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5572f84b5b40 <col:148> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x5572f84b5d30 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5572f84b5d00 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5572f84b5c00 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5572f84b5bb8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5572f84b5ba0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5572f84b5b60 <col:166> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5572f84b5be8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5572f84b5bd0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5572f84b5b80 <col:184> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5572f84b5cd0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5572f84b5c50 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5572f84b5c20 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5572f84b5ce8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5572f84b5ca8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5572f84b5c78 <col:219> 'int' 0
    |-BinaryOperator 0x5572f84b6440 <line:810:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5572f84b5e98 <col:3> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5572f84b6428 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5572f84b63f8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5572f84b63b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5572f84b6398 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5572f84b5eb8 <col:20> '_Bool' lvalue Var 0x5572f84ae528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5572f84b63e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5572f84b63c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5572f84b5ed8 <col:36> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x5572f84b6378 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5572f84b6348 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5572f84b6108 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5572f84b6028 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5572f84b5f30 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5572f84b5f18 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5572f84b5ef8 <col:55> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5572f84b6008 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5572f84b5f80 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5572f84b5f68 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5572f84b5f48 <col:74> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5572f84b5ff0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5572f84b5fb8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5572f84b5f98 <col:93> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5572f84b60e8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5572f84b6080 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5572f84b6068 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5572f84b6048 <col:112> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5572f84b60d0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5572f84b60b8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5572f84b6098 <col:131> '_Bool' lvalue Var 0x5572f84adfe8 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5572f84b6330 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5572f84b6318 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5572f84b6128 <col:148> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x5572f84b62f8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5572f84b62c8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5572f84b61e8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5572f84b61a0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5572f84b6188 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5572f84b6148 <col:166> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5572f84b61d0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5572f84b61b8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5572f84b6168 <col:184> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5572f84b6280 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5572f84b6238 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5572f84b6208 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5572f84b62b0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5572f84b6298 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5572f84b6260 <col:212> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5572f84b6a08 <line:811:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5572f84b6460 <col:3> '_Bool' lvalue Var 0x5572f84adfe8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5572f84b69f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5572f84b69c0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5572f84b6978 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5572f84b6960 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5572f84b6480 <col:20> '_Bool' lvalue Var 0x5572f84ae528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5572f84b69a8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5572f84b6990 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5572f84b64a0 <col:36> '_Bool' lvalue Var 0x5572f84adfe8 'z$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x5572f84b6940 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5572f84b6910 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5572f84b66b0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5572f84b65d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5572f84b64f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5572f84b64e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5572f84b64c0 <col:55> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5572f84b65b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5572f84b6548 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5572f84b6530 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5572f84b6510 <col:74> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5572f84b6598 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5572f84b6580 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5572f84b6560 <col:93> '_Bool' lvalue Var 0x5572f84ae438 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5572f84b6690 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5572f84b6628 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5572f84b6610 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5572f84b65f0 <col:112> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5572f84b6678 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5572f84b6660 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5572f84b6640 <col:131> '_Bool' lvalue Var 0x5572f84adfe8 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5572f84b68f8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5572f84b68e0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5572f84b66d0 <col:148> '_Bool' lvalue Var 0x5572f84adfe8 'z$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x5572f84b68c0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5572f84b6890 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5572f84b6790 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5572f84b6748 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5572f84b6730 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5572f84b66f0 <col:166> '_Bool' lvalue Var 0x5572f84ae340 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5572f84b6778 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5572f84b6760 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5572f84b6710 <col:184> '_Bool' lvalue Var 0x5572f84addb0 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5572f84b6860 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5572f84b67e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5572f84b67b0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5572f84b6878 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5572f84b6838 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5572f84b6808 <col:219> 'int' 0
    |-BinaryOperator 0x5572f84b6c40 <line:812:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x5572f84b6a28 <col:3> '_Bool' lvalue Var 0x5572f84ad8e0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5572f84b6c28 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5572f84b6c10 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5572f84b6bf0 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x5572f84b6bd0 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x5572f84b6b38 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x5572f84b6aa0 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x5572f84b6a88 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x5572f84b6a48 <col:23> 'int' lvalue Var 0x5572f84adc20 'z' 'int'
    |         | | `-IntegerLiteral 0x5572f84b6a68 <col:28> 'int' 2
    |         | `-BinaryOperator 0x5572f84b6b18 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5572f84b6b00 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5572f84b6ac0 <col:33> 'int' lvalue Var 0x5572f84ad6b0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x5572f84b6ae0 <col:56> 'int' 1
    |         `-BinaryOperator 0x5572f84b6bb0 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x5572f84b6b98 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5572f84b6b58 <col:61> 'int' lvalue Var 0x5572f84ad7d0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x5572f84b6b78 <col:84> 'int' 1
    |-BinaryOperator 0x5572f84b6d70 <line:813:3, col:37> 'int' '='
    | |-DeclRefExpr 0x5572f84b6c60 <col:3> 'int' lvalue Var 0x5572f84adc20 'z' 'int'
    | `-ConditionalOperator 0x5572f84b6d40 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x5572f84b6cf8 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5572f84b6ce0 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5572f84b6c80 <col:7> '_Bool' lvalue Var 0x5572f84adcb8 'z$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x5572f84b6d10 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5572f84b6ca0 <col:25> 'int' lvalue Var 0x5572f84add38 'z$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x5572f84b6d28 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5572f84b6cc0 <col:37> 'int' lvalue Var 0x5572f84adc20 'z' 'int'
    |-BinaryOperator 0x5572f84b6e08 <line:814:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x5572f84b6d90 <col:3> '_Bool' lvalue Var 0x5572f84adcb8 'z$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x5572f84b6de0 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x5572f84b6db0 <col:28> 'int' 0
    |-CallExpr 0x5572f84b6e60 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5572f84b6e48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5572f84b6e28 <col:3> 'void ()' Function 0x5572f8454410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5572f84b6ed8 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5572f84b6ec0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5572f84b6e80 <col:3> 'void (int)' Function 0x5572f84540d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5572f84b6f18 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5572f84b6f00 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5572f84b6ea0 <col:21> '_Bool' lvalue Var 0x5572f84ad8e0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5572f84b6f50 <line:817:3, col:10>
      `-IntegerLiteral 0x5572f84b6f30 <col:10> 'int' 0
