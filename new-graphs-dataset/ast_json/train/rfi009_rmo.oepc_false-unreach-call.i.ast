TranslationUnitDecl 0x55e481feaf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55e481feb848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55e481feb520 '__int128'
|-TypedefDecl 0x55e481feb8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55e481feb540 'unsigned __int128'
|-TypedefDecl 0x55e481febbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55e481feb990 'struct __NSConstantString_tag'
|   `-Record 0x55e481feb910 '__NSConstantString_tag'
|-TypedefDecl 0x55e481febc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55e481febc20 'char *'
|   `-BuiltinType 0x55e481feb020 'char'
|-TypedefDecl 0x55e48202ab60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55e481febf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55e481febd40 'struct __va_list_tag'
|     `-Record 0x55e481febcc0 '__va_list_tag'
|-FunctionDecl 0x55e48202ac80 <pthread-wmm/rfi009_rmo.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55e48202ae50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55e48202ad80 <col:31> col:34 'int'
|-FunctionDecl 0x55e48202afc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55e48202b0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55e48202b238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55e48202b1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55e48202b468 <col:40, col:99>
|   |-IfStmt 0x55e48202b438 <col:42, col:88>
|   | |-UnaryOperator 0x55e48202b318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55e48202b300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55e48202b2e0 <col:47> 'int' lvalue ParmVar 0x55e48202b1a8 'expression' 'int'
|   | `-CompoundStmt 0x55e48202b420 <col:59, col:88>
|   |   `-LabelStmt 0x55e48202b408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55e48202b398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55e48202b380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55e48202b330 <col:68> 'void () __attribute__((noreturn))' Function 0x55e48202b0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55e48202b450 <col:89>
|   `-ReturnStmt 0x55e48202b458 <col:91>
|-FunctionDecl 0x55e48202b4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55e48202b570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55e48202b8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e48202b628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55e48202b6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55e48202b728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55e48202b7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55e48202b9b0 <line:11:22>
|-FunctionDecl 0x55e482050f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e48202ba20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55e48202baa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55e482050d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55e482050dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55e482050fd0 <line:14:22>
|-FunctionDecl 0x55e482051280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e482051040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55e4820510c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55e482051140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55e482051338 <line:16:22>
|-TypedefDecl 0x55e4820513a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55e481feb0e0 'unsigned char'
|-TypedefDecl 0x55e482051418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55e481feb100 'unsigned short'
|-TypedefDecl 0x55e482051488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55e481feb120 'unsigned int'
|-TypedefDecl 0x55e4820514f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-TypedefDecl 0x55e482051568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55e481feb040 'signed char'
|-TypedefDecl 0x55e4820515d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55e481feb0e0 'unsigned char'
|-TypedefDecl 0x55e482051648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55e481feb060 'short'
|-TypedefDecl 0x55e4820516b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55e481feb100 'unsigned short'
|-TypedefDecl 0x55e482051728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55e481feb080 'int'
|-TypedefDecl 0x55e482051798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55e481feb120 'unsigned int'
|-TypedefDecl 0x55e482051808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e482051878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-TypedefDecl 0x55e4820518e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e482051958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-TypedefDecl 0x55e4820519c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-TypedefDecl 0x55e482051a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55e481feb120 'unsigned int'
|-TypedefDecl 0x55e482051aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55e481feb120 'unsigned int'
|-TypedefDecl 0x55e482051b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-TypedefDecl 0x55e482051b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-TypedefDecl 0x55e482051bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55e481feb120 'unsigned int'
|-TypedefDecl 0x55e482051c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-TypedefDecl 0x55e482051cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e482051d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e482051dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55e481feb080 'int'
|-RecordDecl 0x55e482051e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55e482051f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55e482052030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55e482051fd0 'struct __fsid_t' sugar
|   `-RecordType 0x55e482051eb0 '__fsid_t'
|     `-Record 0x55e482051e30 ''
|-TypedefDecl 0x55e4820520b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e482052128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-TypedefDecl 0x55e482052198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-TypedefDecl 0x55e482052208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55e481feb120 'unsigned int'
|-TypedefDecl 0x55e482052278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e4820522e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55e481feb120 'unsigned int'
|-TypedefDecl 0x55e482052358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e4820523c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55e481feb080 'int'
|-TypedefDecl 0x55e482052438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55e481feb080 'int'
|-TypedefDecl 0x55e4820524a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55e481feb080 'int'
|-TypedefDecl 0x55e482052518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55e481feb7a0 'void *'
|   `-BuiltinType 0x55e481feafe0 'void'
|-TypedefDecl 0x55e482052588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e4820525f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e482052668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e4820526d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-TypedefDecl 0x55e482052748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-TypedefDecl 0x55e4820527b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-TypedefDecl 0x55e482052828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-TypedefDecl 0x55e482052898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e482052908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e482052978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e4820529e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-TypedefDecl 0x55e482052a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55e482052a40 '__off64_t' sugar
|   |-Typedef 0x55e482051d68 '__off64_t'
|   `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e482052b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55e482052b30 '__quad_t *'
|   `-TypedefType 0x55e482052ad0 '__quad_t' sugar
|     |-Typedef 0x55e4820518e8 '__quad_t'
|     `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e482052be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55e481febc20 'char *'
|   `-BuiltinType 0x55e481feb020 'char'
|-TypedefDecl 0x55e482052c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e482052cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55e481feb120 'unsigned int'
|-FunctionDecl 0x55e482052e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55e482052d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55e482053148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55e482053138 <line:73:3, col:34>
|     `-CallExpr 0x55e4820530f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55e4820530e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55e482053070 <col:10> '<builtin fn type>' Function 0x55e482052ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55e482053120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55e482053090 <col:29> 'unsigned int' lvalue ParmVar 0x55e482052d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x55e482052ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55e482052f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55e482052ff0 <col:10> Implicit
| `-ConstAttr 0x55e482053048 <col:10> Implicit
|-FunctionDecl 0x55e4820532a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55e482053198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55e4820535b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55e4820535a8 <line:78:3, col:34>
|     `-CallExpr 0x55e482053568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55e482053550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55e4820534d8 <col:10> '<builtin fn type>' Function 0x55e482053348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55e482053590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55e4820534f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55e482053198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55e482053348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55e4820533e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55e482053458 <col:10> Implicit
| `-ConstAttr 0x55e4820534b0 <col:10> Implicit
|-TypedefDecl 0x55e4820535e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-TypedefDecl 0x55e482053678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55e482053640 '__time_t' sugar
|   |-Typedef 0x55e482052278 '__time_t'
|   `-BuiltinType 0x55e481feb0a0 'long'
|-RecordDecl 0x55e4820536d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55e482053788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55e482053818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55e4820538a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55e482053870 '__pid_t' sugar
|   |-Typedef 0x55e482051dd8 '__pid_t'
|   `-BuiltinType 0x55e481feb080 'int'
|-RecordDecl 0x55e482053900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55e4820539c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55e482053a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55e482053ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55e482053b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-RecordDecl 0x55e482053b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55e482055e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55e482055f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55e482055ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x55e482053c10 'cpu_set_t'
|     `-Record 0x55e482053b90 ''
|-FunctionDecl 0x55e4820561f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55e482055fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e4820560d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55e4820562a8 <line:108:19>
|-FunctionDecl 0x55e482056480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55e482056310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55e482056528 <col:69>
|-FunctionDecl 0x55e4820566a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55e482056590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55e482056748 <col:64>
|-FunctionDecl 0x55e482056a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55e4820567b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e4820568e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55e482056ab8 <line:114:22>
|-FunctionDecl 0x55e482056e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55e482056b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e482056c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55e482056f10 <col:88>
|-FunctionDecl 0x55e4820571c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55e482056f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e482056ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55e482057088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55e482057280 <col:62>
|-FunctionDecl 0x55e4820573f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55e4820572e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55e4820574a0 <col:63>
|-FunctionDecl 0x55e4820575c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55e482057668 <col:47>
|-FunctionDecl 0x55e482057770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55e4820576d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55e482057818 <col:69>
|-FunctionDecl 0x55e482057920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55e482057888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55e4820579c8 <col:69>
|-FunctionDecl 0x55e482057c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55e482057a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e482057b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55e482057d38 <col:88>
|-TypedefDecl 0x55e482057dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55e482057d90 '__clock_t' sugar
|   |-Typedef 0x55e4820520b8 '__clock_t'
|   `-BuiltinType 0x55e481feb0a0 'long'
|-TypedefDecl 0x55e4820587e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55e482057e20 '__clockid_t' sugar
|   |-Typedef 0x55e4820524a8 '__clockid_t'
|   `-BuiltinType 0x55e481feb080 'int'
|-TypedefDecl 0x55e482058878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55e482058840 '__timer_t' sugar
|   |-Typedef 0x55e482052518 '__timer_t'
|   `-PointerType 0x55e481feb7a0 'void *'
|     `-BuiltinType 0x55e481feafe0 'void'
|-RecordDecl 0x55e4820588d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55e482058990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55e4820589f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55e482058a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55e482058ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55e482058b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55e482058b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55e482058c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55e482058c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55e482058cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55e482058d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55e482058da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55e482058df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55e482058eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55e482058f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55e482058fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55e4820591a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55e482059240 <col:45>
|-FunctionDecl 0x55e482059420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55e482059310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55e4820594c8 <col:54>
|-FunctionDecl 0x55e4820596c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55e482059530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55e4820595a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55e482059778 <line:158:22>
| `-ConstAttr 0x55e48205a410 <col:63>
|-FunctionDecl 0x55e48205a610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55e48205a508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55e48205a6b8 <col:56>
|-FunctionDecl 0x55e48205aa60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55e48205a728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55e48205a7a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e48205a820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55e48205a918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55e48205ab20 <col:54>
|-RecordDecl 0x55e48205ab78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55e48205ac28 parent 0x55e481feaf88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55e48205ae88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55e48205af28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55e48205af90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55e48205aff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55e48205b0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55e48205b208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55e48205b1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55e48205b140 'struct __locale_struct' sugar
|     `-RecordType 0x55e48205ac00 'struct __locale_struct'
|       `-Record 0x55e48205ab78 '__locale_struct'
|-TypedefDecl 0x55e48205b2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55e48205b280 '__locale_t' sugar
|   |-Typedef 0x55e48205b208 '__locale_t'
|   `-PointerType 0x55e48205b1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55e48205b140 'struct __locale_struct' sugar
|       `-RecordType 0x55e48205ac00 'struct __locale_struct'
|         `-Record 0x55e48205ab78 '__locale_struct'
|-FunctionDecl 0x55e48205b6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55e48205b328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55e48205b3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e48205b438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55e48205b4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55e48205b540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55e48205b778 <col:40>
|-FunctionDecl 0x55e48205b968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55e48205b840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55e48205ba10 <col:66>
|-FunctionDecl 0x55e48205bb20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55e48205ba78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55e48205bbc8 <col:69>
|-FunctionDecl 0x55e48205bdf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55e48205bc30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55e48205bcc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55e48205bea8 <col:52>
|-FunctionDecl 0x55e48205c050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55e48205bf10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55e48205bfa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55e48205c100 <col:55>
|-FunctionDecl 0x55e48205c298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55e48205c180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55e48205c340 <col:62>
|-FunctionDecl 0x55e48205c578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55e48205c3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55e48205c620 <col:60>
|-FunctionDecl 0x55e48205c848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55e48205c6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55e48205c720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55e48205c8f8 <col:44>
|-FunctionDecl 0x55e48205cb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55e48205c960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55e48205c9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55e48205cbb8 <col:49>
|-VarDecl 0x55e48205ccb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55e48205cd38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55e48205cdb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55e48205ce80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55e48205cfb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55e48205d050 <col:42>
|-VarDecl 0x55e48205d0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55e48205d140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55e48205d2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55e48205d1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55e48205d370 <col:57>
|-FunctionDecl 0x55e48205e4f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55e48205d3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55e48205e598 <col:56>
|-FunctionDecl 0x55e48205e6a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55e48205e618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55e48205e750 <col:59>
|-FunctionDecl 0x55e48205e858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55e48205e7c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55e48205e900 <col:48>
| `-ConstAttr 0x55e48205e958 <col:89>
|-FunctionDecl 0x55e48205ebb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55e48205ea08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55e48205ea98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55e48205ee18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55e48205eca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e48205ed38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55e48205eec8 <col:88>
|-FunctionDecl 0x55e48205f060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55e48205ef30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e48205efc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55e48205f110 <col:88>
|-FunctionDecl 0x55e48205f328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55e48205f178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e48205f208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55e48205f3d8 <line:209:22>
|-FunctionDecl 0x55e48205f778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55e48205f440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e48205f500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55e48205f590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55e48205f620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55e48205fa78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55e48205f878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55e48205f950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55e48205fb28 <col:85>
|-FunctionDecl 0x55e48205ff18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55e48205fb90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e48205fcc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55e48205fdd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55e48205ffd0 <col:52>
|-FunctionDecl 0x55e482060148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55e482060038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55e4820601f0 <col:61>
|-FunctionDecl 0x55e482060668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55e482060258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55e4820602d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55e482060408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55e482060510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55e482060728 <col:62>
|-FunctionDecl 0x55e482060948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55e482060790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55e482060820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55e4820609f8 <line:222:22>
|-FunctionDecl 0x55e482060af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55e482060a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55e482060ba0 <col:65>
|-TypedefDecl 0x55e482060c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55e481feb140 'unsigned long'
|-RecordDecl 0x55e482060c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55e482060db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55e482060e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e482060ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55e482060e70 'union pthread_attr_t' sugar
|   `-RecordType 0x55e482060cf0 'union pthread_attr_t'
|     `-Record 0x55e482060c68 'pthread_attr_t'
|-RecordDecl 0x55e482060f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55e482061098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55e482061110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55e4820611c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55e482061160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55e482060fa0 'struct __pthread_internal_list'
|     `-Record 0x55e482060f20 '__pthread_internal_list'
|-RecordDecl 0x55e482061230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55e4820612d8 parent 0x55e481feaf88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55e4820613b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55e482061418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55e482061480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55e482065530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55e482065598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55e482065600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55e482065688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55e482065740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55e482065830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55e482065898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e482065a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55e4820659c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55e4820612b0 'pthread_mutex_t'
|     `-Record 0x55e482061230 ''
|-RecordDecl 0x55e482065a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55e482065bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55e482065c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55e482065cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55e482065c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55e482065b10 'pthread_mutexattr_t'
|     `-Record 0x55e482065a90 ''
|-RecordDecl 0x55e482065d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55e482065e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55e482065ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55e482065f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55e482065fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55e482066008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55e482066070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55e4820660d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55e482066140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55e4820661a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55e482066260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi009_rmo.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/rfi009_rmo.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55e482066350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55e4820663b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55e482066540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55e482066490 'union pthread_cond_t' sugar
|   `-RecordType 0x55e482065de0 'pthread_cond_t'
|     `-Record 0x55e482065d60 ''
|-RecordDecl 0x55e4820665b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55e4820666b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55e482066718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55e4820667d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55e482066770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55e482066630 'pthread_condattr_t'
|     `-Record 0x55e4820665b0 ''
|-TypedefDecl 0x55e482066858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55e481feb120 'unsigned int'
|-TypedefDecl 0x55e4820668c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55e481feb080 'int'
|-RecordDecl 0x55e482066920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55e4820669c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55e482066a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55e482066af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55e482066b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55e482066bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55e482066c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55e482066c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55e482066d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55e482066d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55e482066dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55e482066e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55e482066ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55e482066f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi009_rmo.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/rfi009_rmo.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55e482066ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55e482067060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e4820671b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55e482067150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55e4820669a0 'pthread_rwlock_t'
|     `-Record 0x55e482066920 ''
|-RecordDecl 0x55e482067220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55e482067360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55e4820673c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e482067480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55e482067420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55e4820672a0 'pthread_rwlockattr_t'
|     `-Record 0x55e482067220 ''
|-TypedefDecl 0x55e482069560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55e481feb084 'volatile int' volatile
|   `-BuiltinType 0x55e481feb080 'int'
|-RecordDecl 0x55e4820695b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55e482069700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55e482069768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e482069820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55e4820697c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55e482069640 'pthread_barrier_t'
|     `-Record 0x55e4820695b8 ''
|-RecordDecl 0x55e482069890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55e482069990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55e4820699f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55e482069ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55e482069a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55e482069910 'pthread_barrierattr_t'
|     `-Record 0x55e482069890 ''
|-TypedefDecl 0x55e482069bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55e482069b60 'long [8]' 8 
|   `-BuiltinType 0x55e481feb0a0 'long'
|-EnumDecl 0x55e482069c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55e482069ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55e482069d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55e482069d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55e482069e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55e482069ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55e482069ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55e482069f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55e482069fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55e482069fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55e482069f98 <col:26> 'int' EnumConstant 0x55e482069e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55e48206a058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55e48206a040 <col:29> 'int'
| |   `-DeclRefExpr 0x55e48206a020 <col:29> 'int' EnumConstant 0x55e482069ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55e48206a0e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55e48206a0c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55e48206a0a8 <col:30> 'int' EnumConstant 0x55e482069ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55e48206a168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55e48206a150 <col:27> 'int'
|     `-DeclRefExpr 0x55e48206a130 <col:27> 'int' EnumConstant 0x55e482069fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55e48206a1b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55e48206a288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55e48206a310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55e48206a2f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55e48206a2d8 <col:30> 'int' EnumConstant 0x55e48206a288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55e48206a360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55e48206a3e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55e48206a3d0 <col:29> 'int'
|     `-DeclRefExpr 0x55e48206a3b0 <col:29> 'int' EnumConstant 0x55e48206a360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55e48206a438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55e48206a508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55e48206a570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55e48206a5c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55e48206a610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55e48206a6d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55e48206a728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55e48206a778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55e48206a800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55e48206a7e8 <col:31> 'int'
|     `-DeclRefExpr 0x55e48206a7c8 <col:31> 'int' EnumConstant 0x55e48206a6d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55e48206a850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55e48206a918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55e48206a968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55e48206a9b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55e48206aa88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55e48206aad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55e48206ab28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55e48206abf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55e48206ac48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55e48206ac98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55e48206aed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55e48206af40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55e48206afa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55e48206b0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55e48206b118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55e48206b1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55e48206b238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55e48206b288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55e48206b358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55e48206b3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55e48206b9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55e48206b4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55e48206b5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e48206b7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55e48206b840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55e48206ba98 <col:47>
| |-NonNullAttr 0x55e48206baf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55e48206bb28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55e48206bc50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55e48206bb80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55e48206bea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55e48206bd08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55e48206bd88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55e48206c078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55e48206bf68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55e48206c120 <col:60>
|-FunctionDecl 0x55e48206c270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55e48206c310 <col:54>
| `-ConstAttr 0x55e48206c368 <col:95>
|-FunctionDecl 0x55e48206cda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55e48206c3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e48206c418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55e48206ce50 <line:395:19>
| `-ConstAttr 0x55e48206cea8 <col:60>
|-FunctionDecl 0x55e48206d078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55e48206cf40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55e48206d120 <col:71>
| `-NonNullAttr 0x55e48206d178 <col:112, col:126> 1
|-FunctionDecl 0x55e48206d280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55e48206d1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55e48206d328 <line:398:22>
| `-NonNullAttr 0x55e48206d380 <col:63, col:77> 1
|-FunctionDecl 0x55e48206d5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55e48206d3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55e48206d448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55e48206d658 <line:401:22>
| `-NonNullAttr 0x55e48206d6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e48206d8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e48206d6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e48206d778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55e48206d968 <line:404:22>
| `-NonNullAttr 0x55e48206d9c0 <col:63, col:77> 1
|-FunctionDecl 0x55e48206dc18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55e48206da08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55e48206dab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55e48206dcc8 <line:407:22>
| `-NonNullAttr 0x55e48206dd20 <col:63, col:80> 1 2
|-FunctionDecl 0x55e48206ef78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55e48206edc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e48206ee38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55e48206f028 <line:410:22>
| `-NonNullAttr 0x55e48206f080 <col:63, col:77> 1
|-FunctionDecl 0x55e48206f2b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55e48206f0c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e48206f158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55e48206f368 <line:413:22>
| `-NonNullAttr 0x55e48206f3c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e48206f5f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55e48206f408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e48206f498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55e48206f6a8 <col:37>
| `-NonNullAttr 0x55e48206f700 <col:78, col:95> 1 2
|-FunctionDecl 0x55e48206f8e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e48206f748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e48206f7c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55e48206f998 <line:419:22>
| `-NonNullAttr 0x55e48206f9f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e48206fb78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e48206fa38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e48206fab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55e48206fc28 <line:421:22>
| `-NonNullAttr 0x55e48206fc80 <col:63, col:77> 1
|-FunctionDecl 0x55e482070e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e48206fcc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e48206fd48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55e482070f08 <line:424:22>
| `-NonNullAttr 0x55e482070f60 <col:63, col:80> 1 2
|-FunctionDecl 0x55e4820710e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e482070fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e482071028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55e482071198 <line:427:22>
| `-NonNullAttr 0x55e4820711f0 <col:63, col:77> 1
|-FunctionDecl 0x55e482071398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e482071238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e4820712b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55e482071448 <line:430:22>
| `-NonNullAttr 0x55e4820714a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e482071628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e4820714e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e482071568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55e4820716d8 <line:432:22>
| `-NonNullAttr 0x55e482071730 <col:63, col:77> 1
|-FunctionDecl 0x55e482071958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55e482071778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e4820717f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55e482071a08 <line:435:22>
| |-NonNullAttr 0x55e482071a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55e482071a98 <col:100> "" ""
|-FunctionDecl 0x55e482071ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55e482071ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e482071b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55e482071d58 <line:438:22>
| |-NonNullAttr 0x55e482071db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x55e482071df8 <col:97> "" ""
|-FunctionDecl 0x55e482071fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55e482071e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e482071ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55e482072098 <line:441:22>
| `-NonNullAttr 0x55e4820720f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e482072270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55e482072138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e4820721b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55e482072320 <line:444:22>
| `-NonNullAttr 0x55e482072378 <col:63, col:77> 1
|-FunctionDecl 0x55e482072668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55e4820723c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e482072448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55e4820724c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55e482072720 <line:448:22>
| `-NonNullAttr 0x55e482072778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55e482072a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55e4820727d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e482072850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55e4820728c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55e482072ae0 <col:43>
| `-NonNullAttr 0x55e482072b38 <col:84, col:98> 1
|-FunctionDecl 0x55e482072e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55e482072b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e482072c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55e482072c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55e482072ef8 <line:453:22>
| `-NonNullAttr 0x55e482072f50 <col:63, col:77> 3
|-FunctionDecl 0x55e482073228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55e482072f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e482073018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55e4820730a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55e4820732e0 <line:457:22>
| `-NonNullAttr 0x55e482073338 <col:63, col:80> 2 3
|-FunctionDecl 0x55e482073528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55e482073388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e482073408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55e4820735d8 <line:459:22>
|-FunctionDecl 0x55e4820739a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55e4820736a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55e482073840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55e482073a58 <col:52, col:69> 1 2
|-FunctionDecl 0x55e482073c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55e482073ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55e482073b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55e482073e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55e482073cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55e482073d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55e482073f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55e482073ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55e4820740a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55e482074148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55e4820741f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55e4820742e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55e482074350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55e482074520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/rfi009_rmo.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55e482074618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55e4820746d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55e482074670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55e4820741d0 '__pthread_unwind_buf_t'
| |   `-Record 0x55e482074148 ''
| `-AlignedAttr 0x55e482074728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55e4820747a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55e482074900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55e482074968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55e4820749d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55e482074a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55e482074c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55e482074b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55e482074e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55e482074cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55e482074fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e482074ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55e482075088 <line:488:22>
|-RecordDecl 0x55e4820750e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55e4820753f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55e482075258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55e4820752d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55e4820754a8 <col:86>
| `-ReturnsTwiceAttr 0x55e482075500 <col:12> Implicit
|-FunctionDecl 0x55e482075828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55e4820755d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55e4820756e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55e4820758d8 <line:494:22>
| `-NonNullAttr 0x55e482075930 <col:63, col:77> 1
|-FunctionDecl 0x55e482075aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e482075978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e482075b50 <line:496:22>
| `-NonNullAttr 0x55e482075ba8 <col:63, col:77> 1
|-FunctionDecl 0x55e482075cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e482075bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e482075d58 <line:498:22>
| `-NonNullAttr 0x55e482075db0 <col:52, col:66> 1
|-FunctionDecl 0x55e482075ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e482075e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e482075f90 <line:500:22>
| `-NonNullAttr 0x55e482075fe8 <col:52, col:66> 1
|-FunctionDecl 0x55e482076228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e482076038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e4820760c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55e4820762d8 <col:36>
| `-NonNullAttr 0x55e482076330 <col:66, col:83> 1 2
|-FunctionDecl 0x55e482076430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e482076378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e4820764d8 <line:505:22>
| `-NonNullAttr 0x55e482076530 <col:52, col:66> 1
|-FunctionDecl 0x55e4820767c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e4820765e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e482076660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55e482076878 <line:509:22>
| `-NonNullAttr 0x55e4820768d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e482076b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55e482076918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e482076998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55e482076a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55e482076c50 <line:513:22>
| `-NonNullAttr 0x55e482076ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55e482076e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e482076cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e482076ee8 <line:515:22>
| `-NonNullAttr 0x55e482076f40 <col:63, col:77> 1
|-FunctionDecl 0x55e482077128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55e482076ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55e4820771d0 <line:517:22>
| `-NonNullAttr 0x55e482077228 <col:63, col:77> 1
|-FunctionDecl 0x55e482077330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55e482077278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55e4820773d8 <line:519:22>
| `-NonNullAttr 0x55e482077430 <col:63, col:77> 1
|-FunctionDecl 0x55e482077658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e482077478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e4820774f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e482077708 <line:523:22>
| `-NonNullAttr 0x55e482077760 <col:63, col:80> 1 2
|-FunctionDecl 0x55e482077968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e4820777a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e482077828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55e482077a18 <line:526:22>
| `-NonNullAttr 0x55e482077a70 <col:63, col:77> 1
|-FunctionDecl 0x55e482077c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e482077ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e482077b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55e482077cc8 <line:529:22>
| `-NonNullAttr 0x55e482077d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55e482078f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e482077d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e482078e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55e482078fd0 <line:531:22>
| `-NonNullAttr 0x55e482079028 <col:63, col:77> 1
|-FunctionDecl 0x55e4820791d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e482079078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e4820790f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55e482079288 <line:535:22>
| `-NonNullAttr 0x55e4820792e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e482079468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e482079328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e4820793a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55e482079518 <line:538:22>
| `-NonNullAttr 0x55e482079570 <col:63, col:77> 1
|-FunctionDecl 0x55e482079718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e4820795b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e482079638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55e4820797c8 <line:542:22>
| `-NonNullAttr 0x55e482079820 <col:63, col:80> 1 2
|-FunctionDecl 0x55e4820799a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e482079868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e4820798e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55e482079a58 <line:545:22>
| `-NonNullAttr 0x55e482079ab0 <col:63, col:77> 1
|-FunctionDecl 0x55e482079c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55e482079af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e482079b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55e482079d48 <line:548:22>
| `-NonNullAttr 0x55e482079da0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e48207af58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e482079de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e48207ae98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55e48207b008 <line:551:22>
| `-NonNullAttr 0x55e48207b060 <col:63, col:77> 1
|-FunctionDecl 0x55e48207b398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55e48207b140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55e48207b250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55e48207b448 <col:29>
| `-NonNullAttr 0x55e48207b4a0 <col:70, col:84> 1
|-FunctionDecl 0x55e48207b618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e48207b4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e48207b6c0 <line:556:22>
| `-NonNullAttr 0x55e48207b718 <col:63, col:77> 1
|-FunctionDecl 0x55e48207b820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e48207b768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e48207b8c8 <line:558:22>
| `-NonNullAttr 0x55e48207b920 <col:52, col:66> 1
|-FunctionDecl 0x55e48207ba20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e48207b968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e48207bac8 <line:560:19>
| `-NonNullAttr 0x55e48207bb20 <col:49, col:63> 1
|-FunctionDecl 0x55e48207bd58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e48207bb68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55e48207bbf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55e48207be08 <col:39>
| `-NonNullAttr 0x55e48207be90 <col:69, col:86> 1 2
|-FunctionDecl 0x55e48207bf90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e48207bed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e48207c038 <line:565:22>
| `-NonNullAttr 0x55e48207c090 <col:52, col:66> 1
|-FunctionDecl 0x55e48207c190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e48207c0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e48207c238 <line:567:22>
| `-NonNullAttr 0x55e48207c290 <col:52, col:66> 1
|-FunctionDecl 0x55e48207c448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e48207c2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55e48207c368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55e48207c4f8 <col:39>
| `-NonNullAttr 0x55e48207c550 <col:69, col:86> 1 2
|-FunctionDecl 0x55e48207c650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e48207c598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e48207c6f8 <line:572:22>
| `-NonNullAttr 0x55e48207c750 <col:52, col:66> 1
|-FunctionDecl 0x55e48207c938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55e48207c800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55e48207c9e0 <line:574:22>
| `-NonNullAttr 0x55e48207ca38 <col:63, col:77> 1
|-FunctionDecl 0x55e48207cb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55e48207ca88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55e48207cbe8 <line:576:22>
| `-NonNullAttr 0x55e48207cc40 <col:63, col:77> 1
|-FunctionDecl 0x55e48207cea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e48207cc88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55e48207cd08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e48207cf50 <line:580:22>
| `-NonNullAttr 0x55e48207cfa8 <col:63, col:80> 1 2
|-FunctionDecl 0x55e48207d1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55e48207cff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55e48207d078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55e48207d268 <line:583:22>
| `-NonNullAttr 0x55e48207d2c0 <col:63, col:77> 1
|-FunctionDecl 0x55e48207d468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e48207d308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55e48207d388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55e48207d518 <line:587:22>
| `-NonNullAttr 0x55e48207d570 <col:63, col:80> 1 2
|-FunctionDecl 0x55e48207d6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55e48207d5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55e48207d638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55e48207d7a8 <col:36>
| `-NonNullAttr 0x55e48207d800 <col:77, col:91> 1
|-FunctionDecl 0x55e48207db38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55e48207d8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55e48207d9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55e48207dbe8 <line:592:22>
| `-NonNullAttr 0x55e48207dc40 <col:63, col:77> 1
|-FunctionDecl 0x55e48207ddb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55e48207dc88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55e48207de60 <line:594:22>
| `-NonNullAttr 0x55e48207dee0 <col:63, col:77> 1
|-FunctionDecl 0x55e48207dfe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55e48207df28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55e48207e088 <line:596:22>
| `-NonNullAttr 0x55e48207e0e0 <col:52, col:66> 1
|-FunctionDecl 0x55e48207e1e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55e48207e128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55e48207e288 <line:598:22>
| `-NonNullAttr 0x55e48207e2e0 <col:52, col:66> 1
|-FunctionDecl 0x55e48207e508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55e48207e328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55e48207e3a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55e48207e5b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55e48207e8e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e48207e638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55e48207e6b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e48207e740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55e48207e9a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55e48207ebb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55e48207ea80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55e48207ec60 <line:607:22>
| `-NonNullAttr 0x55e48207ecb8 <col:63, col:77> 1
|-FunctionDecl 0x55e48207edc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55e48207ed08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55e48207ee68 <line:609:22>
| `-NonNullAttr 0x55e48207eef0 <col:63, col:77> 1
|-FunctionDecl 0x55e48207f118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e48207ef38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55e48207efb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e48207f1c8 <line:613:22>
| `-NonNullAttr 0x55e48207f220 <col:63, col:80> 1 2
|-FunctionDecl 0x55e48207f428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55e48207f268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55e48207f2e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55e48207f4d8 <col:37>
| `-NonNullAttr 0x55e48207f530 <col:78, col:92> 1
|-FunctionDecl 0x55e48207f748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55e48207f578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55e48207f620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55e48207f7f8 <line:619:22>
| `-NonNullAttr 0x55e48207f850 <col:63, col:80> 1 2
|-FunctionDecl 0x55e48207fa18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55e48207f898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55e48207f910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55e48207fac8 <line:622:22>
| `-NonNullAttr 0x55e48207fb20 <col:63, col:77> 1
|-FunctionDecl 0x55e48207fdc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55e48207fc00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55e48207fc80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55e48207fe78 <line:624:22>
| `-NonNullAttr 0x55e48207ff00 <col:63, col:77> 1
|-FunctionDecl 0x55e482080078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e48207ff48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e482080120 <line:626:22>
| `-NonNullAttr 0x55e482080178 <col:63, col:77> 1
|-FunctionDecl 0x55e482080280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e4820801c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e482080328 <line:628:22>
| `-NonNullAttr 0x55e482080380 <col:52, col:66> 1
|-FunctionDecl 0x55e482080480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e4820803c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e482080528 <line:630:22>
| `-NonNullAttr 0x55e482080580 <col:52, col:66> 1
|-FunctionDecl 0x55e482080680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e4820805c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e482080728 <line:632:22>
| `-NonNullAttr 0x55e482080780 <col:52, col:66> 1
|-FunctionDecl 0x55e482080b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55e482080860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55e482080970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55e4820809f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55e482080c10 <line:636:22>
| `-NonNullAttr 0x55e482080c68 <col:63, col:77> 1
|-FunctionDecl 0x55e482080de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55e482080cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55e482080e90 <line:638:22>
| `-NonNullAttr 0x55e482080f10 <col:63, col:77> 1
|-FunctionDecl 0x55e482081010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55e482080f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55e4820810b8 <line:640:22>
| `-NonNullAttr 0x55e482081110 <col:52, col:66> 1
|-FunctionDecl 0x55e4820812f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55e4820811c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55e4820813a0 <line:642:22>
| `-NonNullAttr 0x55e4820813f8 <col:63, col:77> 1
|-FunctionDecl 0x55e482081500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55e482081448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55e4820815a8 <line:644:22>
| `-NonNullAttr 0x55e482081600 <col:63, col:77> 1
|-FunctionDecl 0x55e482081828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e482081648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55e4820816c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e4820818d8 <line:648:22>
| `-NonNullAttr 0x55e482081930 <col:63, col:80> 1 2
|-FunctionDecl 0x55e482081b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55e482081978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55e4820819f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55e482081be8 <line:651:22>
| `-NonNullAttr 0x55e482081c40 <col:63, col:77> 1
|-FunctionDecl 0x55e482081fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55e482081d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55e482081e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55e482082058 <line:654:22>
| `-NonNullAttr 0x55e4820820b0 <col:63, col:77> 1
|-FunctionDecl 0x55e482082208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55e4820820f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55e4820822b0 <col:69>
|-FunctionDecl 0x55e482082428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55e482082318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55e4820824d0 <col:72>
|-FunctionDecl 0x55e482082708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55e482082538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55e4820825e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55e4820827b8 <col:44>
|-FunctionDecl 0x55e4820829d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55e482082820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e482082898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55e482082a88 <line:661:22>
| `-NonNullAttr 0x55e482082ae0 <col:63, col:77> 2
|-FunctionDecl 0x55e482083f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55e482082bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55e482082cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55e482082de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55e482084008 <col:47>
|-FunctionDecl 0x55e482084110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55e482084078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e482084268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55e4820841d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e4820843c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55e482084328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e482084488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55e482084548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55e482084608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55e4820846c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55e482084740 prev 0x55e4820846c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55e4820847a8 <col:24> 'int' 0
|-VarDecl 0x55e4820847e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55e482084860 prev 0x55e4820847e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55e4820848c8 <col:27> 'int' 0
|-VarDecl 0x55e4820848f8 <line:676:1, col:7> col:7 __unbuffered_p0_EAX$flush_delayed '_Bool'
|-VarDecl 0x55e482084978 <line:677:1, col:5> col:5 __unbuffered_p0_EAX$mem_tmp 'int'
|-VarDecl 0x55e4820849f0 <line:678:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55e482084a68 <line:679:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55e482084ae0 <line:680:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55e482084b58 <line:681:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55e482084bd0 <line:682:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55e482084c48 <line:683:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55e482084cc0 <line:684:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55e482084d38 <line:685:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55e482084db0 <line:686:1, col:7> col:7 used __unbuffered_p0_EAX$read_delayed '_Bool'
|-VarDecl 0x55e482084e30 <line:687:1, col:6> col:6 used __unbuffered_p0_EAX$read_delayed_var 'int *'
|-VarDecl 0x55e482084f20 <line:688:1, col:5> col:5 __unbuffered_p0_EAX$w_buff0 'int'
|-VarDecl 0x55e482084f98 <line:689:1, col:7> col:7 __unbuffered_p0_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55e482085018 <line:690:1, col:5> col:5 __unbuffered_p0_EAX$w_buff1 'int'
|-VarDecl 0x55e482085090 <line:691:1, col:7> col:7 __unbuffered_p0_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55e482085110 <line:692:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55e482085190 prev 0x55e482085110 <line:693:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55e4820851f8 <col:27> 'int' 0
|-VarDecl 0x55e482085230 <line:694:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55e4820852b0 prev 0x55e482085230 <line:695:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55e482085318 <col:27> 'int' 0
|-VarDecl 0x55e482085350 <line:696:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55e4820853d0 prev 0x55e482085350 <line:697:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55e482085438 <col:27> 'int' 0
|-VarDecl 0x55e482085468 <line:698:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55e4820854e0 <line:699:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55e482085560 <line:700:1, col:5> col:5 used x 'int'
|-VarDecl 0x55e4820855e0 prev 0x55e482085560 <line:701:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55e482085648 <col:9> 'int' 0
|-VarDecl 0x55e482085678 <line:702:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55e4820856f8 <line:703:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55e482085770 <line:704:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55e4820857e8 <line:705:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55e482085860 <line:706:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55e4820858d8 <line:707:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55e482085950 <line:708:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55e4820859c8 <line:709:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55e482085a40 <line:710:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55e482085ab8 <line:711:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55e482085b30 <line:712:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55e482085bb0 <line:713:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55e482085c30 <line:714:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55e482085ca8 <line:715:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55e482085d28 <line:716:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55e482085da0 <line:717:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55e482085e20 <line:718:1, col:5> col:5 used y 'int'
|-VarDecl 0x55e482085ea0 prev 0x55e482085e20 <line:719:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55e482085f30 <col:9> 'int' 0
|-VarDecl 0x55e482085f60 <line:720:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55e482085fd8 <line:721:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55e482086050 <line:722:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55e482086168 prev 0x55e482084110 <line:723:1, line:752:1> line:723:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55e4820860d0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e4820891f8 <line:724:1, line:752:1>
|   |-CallExpr 0x55e482086278 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e482086260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e482086210 <col:3> 'void ()' Function 0x55e48202b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e482086348 <line:726:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55e482086298 <col:3> '_Bool' lvalue Var 0x55e482085f60 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55e482086328 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55e482086310 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55e4820862b8 <col:19> '_Bool (void)' Function 0x55e48202ac80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55e4820863e0 <line:727:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55e482086368 <col:3> '_Bool' lvalue Var 0x55e482086050 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55e4820863c0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55e4820863a8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55e482086388 <col:19> '_Bool (void)' Function 0x55e48202ac80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55e482086458 <line:728:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55e482086400 <col:3> '_Bool' lvalue Var 0x55e482085678 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55e482086440 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e482086420 <col:21> '_Bool' lvalue Var 0x55e482086050 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55e4820864d0 <line:729:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55e482086478 <col:3> 'int' lvalue Var 0x55e4820856f8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55e4820864b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e482086498 <col:15> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
|   |-BinaryOperator 0x55e482086908 <line:730:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55e4820864f0 <col:3> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
|   | `-ConditionalOperator 0x55e4820868d8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55e482086700 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55e482086620 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55e482086548 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55e482086530 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55e482086510 <col:8> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55e482086600 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55e482086598 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55e482086580 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55e482086560 <col:27> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55e4820865e8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55e4820865d0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55e4820865b0 <col:46> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55e4820866e0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55e482086678 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55e482086660 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55e482086640 <col:65> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55e4820866c8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55e4820866b0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55e482086690 <col:84> '_Bool' lvalue Var 0x55e4820859c8 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55e4820868c0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e482086720 <col:101> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
|   |   `-ParenExpr 0x55e4820868a0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55e482086870 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55e4820867e0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55e482086798 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55e482086780 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55e482086740 <col:106> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55e4820867c8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55e4820867b0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55e482086760 <col:124> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55e482086840 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e482086800 <col:141> 'int' lvalue Var 0x55e482085c30 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55e482086858 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e482086820 <col:153> 'int' lvalue Var 0x55e482085d28 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55e482086e18 <line:731:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55e482086928 <col:3> 'int' lvalue Var 0x55e482085c30 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55e482086de8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55e482086db8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e482086da0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e482086948 <col:15> '_Bool' lvalue Var 0x55e482086050 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e482086dd0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e482086968 <col:31> 'int' lvalue Var 0x55e482085c30 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55e482086d80 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55e482086d50 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55e482086b78 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55e482086a98 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55e4820869c0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55e4820869a8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55e482086988 <col:45> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55e482086a78 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55e482086a10 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55e4820869f8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55e4820869d8 <col:64> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55e482086a60 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55e482086a48 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55e482086a28 <col:83> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55e482086b58 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55e482086af0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55e482086ad8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55e482086ab8 <col:102> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55e482086b40 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55e482086b28 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55e482086b08 <col:121> '_Bool' lvalue Var 0x55e4820859c8 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55e482086d38 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e482086b98 <col:138> 'int' lvalue Var 0x55e482085c30 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55e482086d18 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55e482086ce8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55e482086c58 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55e482086c10 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55e482086bf8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55e482086bb8 <col:151> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55e482086c40 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55e482086c28 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55e482086bd8 <col:169> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55e482086cb8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55e482086c78 <col:186> 'int' lvalue Var 0x55e482085c30 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55e482086cd0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55e482086c98 <col:198> 'int' lvalue Var 0x55e482085c30 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55e482087348 <line:732:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55e482086e38 <col:3> 'int' lvalue Var 0x55e482085d28 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55e482087318 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55e4820872e8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e4820872d0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e482086e58 <col:15> '_Bool' lvalue Var 0x55e482086050 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e482087300 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e482086e78 <col:31> 'int' lvalue Var 0x55e482085d28 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55e4820872b0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55e482087280 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55e4820870a8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55e482086fc8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55e482086ed0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55e482086eb8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55e482086e98 <col:45> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55e482086fa8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55e482086f40 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55e482086f08 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55e482086ee8 <col:64> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55e482086f90 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55e482086f78 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55e482086f58 <col:83> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55e482087088 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55e482087020 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55e482087008 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55e482086fe8 <col:102> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55e482087070 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55e482087058 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55e482087038 <col:121> '_Bool' lvalue Var 0x55e4820859c8 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55e482087268 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e4820870c8 <col:138> 'int' lvalue Var 0x55e482085d28 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55e482087248 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55e482087218 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55e482087188 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55e482087140 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55e482087128 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55e4820870e8 <col:151> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55e482087170 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55e482087158 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55e482087108 <col:169> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55e4820871e8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55e4820871a8 <col:186> 'int' lvalue Var 0x55e482085d28 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55e482087200 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55e4820871c8 <col:198> 'int' lvalue Var 0x55e482085d28 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55e4820878f0 <line:733:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55e482087368 <col:3> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e4820878d8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e4820878a8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55e482087860 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e482087848 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e482087388 <col:20> '_Bool' lvalue Var 0x55e482086050 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e482087890 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e482087878 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e4820873a8 <col:36> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55e482087828 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55e4820877f8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55e4820875b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e4820874d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e482087400 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e4820873e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e4820873c8 <col:55> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e4820874b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e482087450 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e482087438 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e482087418 <col:74> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55e4820874a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e482087488 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e482087468 <col:93> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e482087598 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e482087530 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e482087518 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e4820874f8 <col:112> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55e482087580 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e482087568 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e482087548 <col:131> '_Bool' lvalue Var 0x55e4820859c8 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55e4820877e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e4820877c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e4820875d8 <col:148> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55e4820877a8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55e482087778 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55e482087698 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e482087650 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e482087638 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e4820875f8 <col:166> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e482087680 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e482087668 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e482087618 <col:184> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55e482087730 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e4820876e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e4820876b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e482087760 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55e482087748 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55e482087710 <col:212> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e482087eb8 <line:734:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55e482087910 <col:3> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e482087ea0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e482087e70 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55e482087e28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e482087e10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e482087930 <col:20> '_Bool' lvalue Var 0x55e482086050 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e482087e58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e482087e40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e482087950 <col:36> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55e482087df0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55e482087dc0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55e482087b60 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e482087a80 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e4820879a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e482087990 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e482087970 <col:55> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e482087a60 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e4820879f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e4820879e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e4820879c0 <col:74> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55e482087a48 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e482087a30 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e482087a10 <col:93> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e482087b40 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e482087ad8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e482087ac0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e482087aa0 <col:112> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55e482087b28 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e482087b10 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e482087af0 <col:131> '_Bool' lvalue Var 0x55e4820859c8 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55e482087da8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e482087d90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e482087b80 <col:148> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55e482087d70 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55e482087d40 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55e482087c40 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e482087bf8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e482087be0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e482087ba0 <col:166> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e482087c28 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e482087c10 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e482087bc0 <col:184> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55e482087d10 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e482087c90 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e482087c60 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e482087d28 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55e482087ce8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55e482087cb8 <col:219> 'int' 0
|   |-BinaryOperator 0x55e482088478 <line:735:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55e482087ed8 <col:3> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55e482088460 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e482088430 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55e4820883e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e4820883d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e482087ef8 <col:20> '_Bool' lvalue Var 0x55e482086050 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e482088418 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e482088400 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e482087f18 <col:36> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55e4820883b0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55e482088380 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55e482088140 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e482088060 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e482087f88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e482087f70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e482087f50 <col:55> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e482088040 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e482087fd8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e482087fc0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e482087fa0 <col:74> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55e482088028 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e482088010 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e482087ff0 <col:93> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e482088120 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e4820880b8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e4820880a0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e482088080 <col:112> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55e482088108 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e4820880f0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e4820880d0 <col:131> '_Bool' lvalue Var 0x55e4820859c8 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55e482088368 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e482088350 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e482088160 <col:148> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55e482088330 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55e482088300 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55e482088220 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e4820881d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e4820881c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e482088180 <col:166> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e482088208 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e4820881f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e4820881a0 <col:184> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55e4820882b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e482088270 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e482088240 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e4820882e8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55e4820882d0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55e482088298 <col:212> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55e482088a40 <line:736:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55e482088498 <col:3> '_Bool' lvalue Var 0x55e4820859c8 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55e482088a28 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e4820889f8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55e4820889b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e482088998 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e4820884b8 <col:20> '_Bool' lvalue Var 0x55e482086050 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e4820889e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e4820889c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e4820884d8 <col:36> '_Bool' lvalue Var 0x55e4820859c8 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55e482088978 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55e482088948 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55e4820886e8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e482088608 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e482088530 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e482088518 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e4820884f8 <col:55> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e4820885e8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e482088580 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e482088568 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e482088548 <col:74> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55e4820885d0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e4820885b8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e482088598 <col:93> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e4820886c8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e482088660 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e482088648 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e482088628 <col:112> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55e4820886b0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e482088698 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e482088678 <col:131> '_Bool' lvalue Var 0x55e4820859c8 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55e482088930 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e482088918 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e482088708 <col:148> '_Bool' lvalue Var 0x55e4820859c8 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55e4820888f8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55e4820888c8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55e4820887c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e482088780 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e482088768 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e482088728 <col:166> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e4820887b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e482088798 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e482088748 <col:184> '_Bool' lvalue Var 0x55e4820857e8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55e482088898 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e482088818 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e4820887e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e4820888b0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55e482088870 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55e482088840 <col:219> 'int' 0
|   |-BinaryOperator 0x55e482088ad8 <line:737:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55e482088a60 <col:3> '_Bool' lvalue Var 0x55e482084db0 '__unbuffered_p0_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55e482088ab0 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e482088a80 <col:45> 'int' 1
|   |-BinaryOperator 0x55e482088b50 <line:738:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55e482088af8 <col:3> 'int *' lvalue Var 0x55e482084e30 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55e482088b38 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55e482088b18 <col:43> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
|   |-BinaryOperator 0x55e482088bc8 <line:739:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55e482088b70 <col:3> 'int' lvalue Var 0x55e482084860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55e482088bb0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e482088b90 <col:25> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
|   |-BinaryOperator 0x55e482088cf8 <line:740:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55e482088be8 <col:3> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
|   | `-ConditionalOperator 0x55e482088cc8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55e482088c80 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e482088c68 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e482088c08 <col:7> '_Bool' lvalue Var 0x55e482085678 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55e482088c98 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e482088c28 <col:25> 'int' lvalue Var 0x55e4820856f8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55e482088cb0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55e482088c48 <col:37> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
|   |-BinaryOperator 0x55e482088d90 <line:741:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55e482088d18 <col:3> '_Bool' lvalue Var 0x55e482085678 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55e482088d68 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e482088d38 <col:28> 'int' 0
|   |-CallExpr 0x55e482088de8 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e482088dd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e482088db0 <col:3> 'void ()' Function 0x55e48202b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e482088e40 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e482088e28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e482088e08 <col:3> 'void ()' Function 0x55e48202b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e482088eb8 <line:744:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55e482088e60 <col:3> 'int' lvalue Var 0x55e482085190 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55e482088ea0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e482088e80 <col:25> 'int' lvalue Var 0x55e482085ea0 'y' 'int'
|   |-CallExpr 0x55e482088f10 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e482088ef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e482088ed8 <col:3> 'void ()' Function 0x55e48202b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e482088f78 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e482088f60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e482088f30 <col:3> 'void ()' Function 0x55e48202b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55e482088fd0 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e482088fb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e482088f98 <col:3> 'void ()' Function 0x55e48202b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e482089028 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e482089010 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e482088ff0 <col:3> 'void ()' Function 0x55e48202b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e4820890e0 <line:749:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e482089048 <col:3> 'int' lvalue Var 0x55e482084740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e4820890c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e4820890a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e482089068 <col:22> 'int' lvalue Var 0x55e482084740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e482089088 <col:41> 'int' 1
|   |-CallExpr 0x55e482089138 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e482089120 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e482089100 <col:3> 'void ()' Function 0x55e48202b570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e4820891e8 <line:751:3, col:36>
|     `-CallExpr 0x55e4820891c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e4820891b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e482089158 <col:10> 'void *(void)' Function 0x55e48202afc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e482089390 prev 0x55e482084268 <line:753:1, line:783:1> line:753:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55e4820892f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e48208c398 <line:754:1, line:783:1>
|   |-CallExpr 0x55e482089470 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e482089458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e482089438 <col:3> 'void ()' Function 0x55e48202b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e4820894d0 <line:756:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55e482089490 <col:3> 'int' lvalue Var 0x55e482085ea0 'y' 'int'
|   | `-IntegerLiteral 0x55e4820894b0 <col:7> 'int' 1
|   |-CallExpr 0x55e482089528 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e482089510 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e4820894f0 <col:3> 'void ()' Function 0x55e48202b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e482089580 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e482089568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e482089548 <col:3> 'void ()' Function 0x55e48202b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e4820895f8 <line:759:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55e4820895a0 <col:3> 'int' lvalue Var 0x55e4820852b0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55e4820895e0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e4820895c0 <col:25> 'int' lvalue Var 0x55e482085ea0 'y' 'int'
|   |-CallExpr 0x55e482089650 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e482089638 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e482089618 <col:3> 'void ()' Function 0x55e48202b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e4820896a8 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e482089690 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e482089670 <col:3> 'void ()' Function 0x55e48202b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e482089740 <line:762:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55e4820896c8 <col:3> '_Bool' lvalue Var 0x55e482085f60 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55e482089720 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55e482089708 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55e4820896e8 <col:19> '_Bool (void)' Function 0x55e48202ac80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55e4820897d8 <line:763:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55e482089760 <col:3> '_Bool' lvalue Var 0x55e482086050 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55e4820897b8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55e4820897a0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55e482089780 <col:19> '_Bool (void)' Function 0x55e48202ac80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55e482089850 <line:764:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55e4820897f8 <col:3> '_Bool' lvalue Var 0x55e482085678 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55e482089838 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e482089818 <col:21> '_Bool' lvalue Var 0x55e482086050 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55e4820898c8 <line:765:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55e482089870 <col:3> 'int' lvalue Var 0x55e4820856f8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55e4820898b0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e482089890 <col:15> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
|   |-BinaryOperator 0x55e482089d00 <line:766:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55e4820898e8 <col:3> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
|   | `-ConditionalOperator 0x55e482089cd0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55e482089af8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55e482089a18 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55e482089940 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55e482089928 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55e482089908 <col:8> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55e4820899f8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55e482089990 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55e482089978 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55e482089958 <col:27> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55e4820899e0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55e4820899c8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55e4820899a8 <col:46> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55e482089ad8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55e482089a70 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55e482089a58 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55e482089a38 <col:65> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55e482089ac0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55e482089aa8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55e482089a88 <col:84> '_Bool' lvalue Var 0x55e482085a40 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e482089cb8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e482089b18 <col:101> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
|   |   `-ParenExpr 0x55e482089c98 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55e482089c68 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55e482089bd8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55e482089b90 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55e482089b78 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55e482089b38 <col:106> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55e482089bc0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55e482089ba8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55e482089b58 <col:124> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55e482089c38 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e482089bf8 <col:141> 'int' lvalue Var 0x55e482085c30 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55e482089c50 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e482089c18 <col:153> 'int' lvalue Var 0x55e482085d28 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55e48208a230 <line:767:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55e482089d20 <col:3> 'int' lvalue Var 0x55e482085c30 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55e48208a200 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55e48208a1d0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e48208a1b8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e482089d40 <col:15> '_Bool' lvalue Var 0x55e482086050 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e48208a1e8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e482089d60 <col:31> 'int' lvalue Var 0x55e482085c30 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55e48208a198 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55e48208a168 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55e482089f90 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55e482089e90 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55e482089db8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55e482089da0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55e482089d80 <col:45> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55e482089e70 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55e482089e08 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55e482089df0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55e482089dd0 <col:64> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55e482089e58 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55e482089e40 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55e482089e20 <col:83> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55e482089f70 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55e482089ee8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55e482089ed0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55e482089eb0 <col:102> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55e482089f38 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55e482089f20 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55e482089f00 <col:121> '_Bool' lvalue Var 0x55e482085a40 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55e48208a150 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e482089fb0 <col:138> 'int' lvalue Var 0x55e482085c30 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55e48208a130 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55e48208a100 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55e48208a070 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55e48208a028 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55e48208a010 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55e482089fd0 <col:151> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55e48208a058 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55e48208a040 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55e482089ff0 <col:169> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55e48208a0d0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55e48208a090 <col:186> 'int' lvalue Var 0x55e482085c30 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55e48208a0e8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55e48208a0b0 <col:198> 'int' lvalue Var 0x55e482085c30 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55e48208a740 <line:768:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55e48208a250 <col:3> 'int' lvalue Var 0x55e482085d28 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55e48208a710 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55e48208a6e0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e48208a6c8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e48208a270 <col:15> '_Bool' lvalue Var 0x55e482086050 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e48208a6f8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e48208a290 <col:31> 'int' lvalue Var 0x55e482085d28 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55e48208a6a8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55e48208a678 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55e48208a4a0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55e48208a3c0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55e48208a2e8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55e48208a2d0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55e48208a2b0 <col:45> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55e48208a3a0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55e48208a338 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55e48208a320 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55e48208a300 <col:64> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55e48208a388 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55e48208a370 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55e48208a350 <col:83> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55e48208a480 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55e48208a418 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55e48208a400 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55e48208a3e0 <col:102> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55e48208a468 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55e48208a450 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55e48208a430 <col:121> '_Bool' lvalue Var 0x55e482085a40 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55e48208a660 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e48208a4c0 <col:138> 'int' lvalue Var 0x55e482085d28 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55e48208a640 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55e48208a610 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55e48208a580 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55e48208a538 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55e48208a520 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55e48208a4e0 <col:151> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55e48208a568 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55e48208a550 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55e48208a500 <col:169> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55e48208a5e0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55e48208a5a0 <col:186> 'int' lvalue Var 0x55e482085d28 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55e48208a5f8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55e48208a5c0 <col:198> 'int' lvalue Var 0x55e482085d28 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55e48208ace8 <line:769:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55e48208a760 <col:3> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e48208acd0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e48208aca0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55e48208ac58 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e48208ac40 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e48208a780 <col:20> '_Bool' lvalue Var 0x55e482086050 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e48208ac88 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e48208ac70 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e48208a7a0 <col:36> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55e48208ac20 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55e48208abf0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55e48208a9b0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e48208a8d0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e48208a7f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e48208a7e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e48208a7c0 <col:55> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e48208a8b0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e48208a848 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e48208a830 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e48208a810 <col:74> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55e48208a898 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e48208a880 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e48208a860 <col:93> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e48208a990 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e48208a928 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e48208a910 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e48208a8f0 <col:112> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55e48208a978 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e48208a960 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e48208a940 <col:131> '_Bool' lvalue Var 0x55e482085a40 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55e48208abd8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e48208abc0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e48208a9d0 <col:148> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55e48208aba0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55e48208ab70 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55e48208aa90 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e48208aa48 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e48208aa30 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e48208a9f0 <col:166> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e48208aa78 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e48208aa60 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e48208aa10 <col:184> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55e48208ab28 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e48208aae0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e48208aab0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e48208ab58 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55e48208ab40 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55e48208ab08 <col:212> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e48208b2d8 <line:770:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55e48208ad08 <col:3> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e48208b2c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e48208b290 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55e48208b248 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e48208b230 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e48208ad28 <col:20> '_Bool' lvalue Var 0x55e482086050 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e48208b278 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e48208b260 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e48208ad48 <col:36> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55e48208b210 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55e48208b1e0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55e48208af80 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e48208ae78 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e48208ada0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e48208ad88 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e48208ad68 <col:55> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e48208ae58 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e48208adf0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e48208add8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e48208adb8 <col:74> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55e48208ae40 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e48208ae28 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e48208ae08 <col:93> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e48208af38 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e48208aed0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e48208aeb8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e48208ae98 <col:112> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55e48208af20 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e48208af08 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e48208aee8 <col:131> '_Bool' lvalue Var 0x55e482085a40 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55e48208b1c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e48208b1b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e48208afa0 <col:148> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55e48208b190 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55e48208b160 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55e48208b060 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e48208b018 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e48208b000 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e48208afc0 <col:166> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e48208b048 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e48208b030 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e48208afe0 <col:184> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55e48208b130 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e48208b0b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e48208b080 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e48208b148 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55e48208b108 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55e48208b0d8 <col:219> 'int' 0
|   |-BinaryOperator 0x55e48208b880 <line:771:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55e48208b2f8 <col:3> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55e48208b868 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e48208b838 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55e48208b7f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e48208b7d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e48208b318 <col:20> '_Bool' lvalue Var 0x55e482086050 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e48208b820 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e48208b808 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e48208b338 <col:36> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55e48208b7b8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55e48208b788 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55e48208b548 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e48208b468 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e48208b390 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e48208b378 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e48208b358 <col:55> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e48208b448 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e48208b3e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e48208b3c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e48208b3a8 <col:74> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55e48208b430 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e48208b418 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e48208b3f8 <col:93> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e48208b528 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e48208b4c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e48208b4a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e48208b488 <col:112> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55e48208b510 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e48208b4f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e48208b4d8 <col:131> '_Bool' lvalue Var 0x55e482085a40 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55e48208b770 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e48208b758 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e48208b568 <col:148> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55e48208b738 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55e48208b708 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55e48208b628 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e48208b5e0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e48208b5c8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e48208b588 <col:166> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e48208b610 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e48208b5f8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e48208b5a8 <col:184> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55e48208b6c0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e48208b678 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e48208b648 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e48208b6f0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55e48208b6d8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55e48208b6a0 <col:212> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55e48208be48 <line:772:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55e48208b8a0 <col:3> '_Bool' lvalue Var 0x55e482085a40 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55e48208be30 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e48208be00 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55e48208bdb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e48208bda0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e48208b8c0 <col:20> '_Bool' lvalue Var 0x55e482086050 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e48208bde8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e48208bdd0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e48208b8e0 <col:36> '_Bool' lvalue Var 0x55e482085a40 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55e48208bd80 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55e48208bd50 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55e48208baf0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e48208ba10 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e48208b938 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e48208b920 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e48208b900 <col:55> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e48208b9f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e48208b988 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e48208b970 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e48208b950 <col:74> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55e48208b9d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e48208b9c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e48208b9a0 <col:93> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e48208bad0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e48208ba68 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e48208ba50 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e48208ba30 <col:112> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55e48208bab8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e48208baa0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e48208ba80 <col:131> '_Bool' lvalue Var 0x55e482085a40 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55e48208bd38 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e48208bd20 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e48208bb10 <col:148> '_Bool' lvalue Var 0x55e482085a40 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55e48208bd00 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55e48208bcd0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55e48208bbd0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e48208bb88 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e48208bb70 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e48208bb30 <col:166> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e48208bbb8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e48208bba0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e48208bb50 <col:184> '_Bool' lvalue Var 0x55e482085860 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55e48208bca0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e48208bc20 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e48208bbf0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e48208bcb8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55e48208bc78 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55e48208bc48 <col:219> 'int' 0
|   |-BinaryOperator 0x55e48208bec0 <line:773:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55e48208be68 <col:3> 'int' lvalue Var 0x55e4820853d0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55e48208bea8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e48208be88 <col:25> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
|   |-BinaryOperator 0x55e48208c008 <line:774:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55e48208bee0 <col:3> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
|   | `-ConditionalOperator 0x55e48208bfd8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55e48208bf90 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e48208bf60 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e48208bf00 <col:7> '_Bool' lvalue Var 0x55e482085678 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55e48208bfa8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e48208bf20 <col:25> 'int' lvalue Var 0x55e4820856f8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55e48208bfc0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55e48208bf40 <col:37> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
|   |-BinaryOperator 0x55e48208c0a0 <line:775:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55e48208c028 <col:3> '_Bool' lvalue Var 0x55e482085678 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55e48208c078 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e48208c048 <col:28> 'int' 0
|   |-CallExpr 0x55e48208c0f8 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e48208c0e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e48208c0c0 <col:3> 'void ()' Function 0x55e48202b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e48208c150 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e48208c138 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e48208c118 <col:3> 'void ()' Function 0x55e48202b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55e48208c1a8 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e48208c190 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e48208c170 <col:3> 'void ()' Function 0x55e48202b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e48208c200 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e48208c1e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e48208c1c8 <col:3> 'void ()' Function 0x55e48202b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e48208c2b8 <line:780:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e48208c220 <col:3> 'int' lvalue Var 0x55e482084740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e48208c298 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e48208c280 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e48208c240 <col:22> 'int' lvalue Var 0x55e482084740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e48208c260 <col:41> 'int' 1
|   |-CallExpr 0x55e48208c310 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e48208c2f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e48208c2d8 <col:3> 'void ()' Function 0x55e48202b570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e48208c388 <line:782:3, col:36>
|     `-CallExpr 0x55e48208c368 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e48208c350 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e48208c330 <col:10> 'void *(void)' Function 0x55e48202afc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e48208c538 prev 0x55e4820843c0 <line:784:1, line:800:1> line:784:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55e48208c4a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e48208d658 <line:785:1, line:800:1>
|   |-CallExpr 0x55e48208c618 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e48208c600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e48208c5e0 <col:3> 'void ()' Function 0x55e48202b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e48208c678 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55e48208c638 <col:3> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
|   | `-IntegerLiteral 0x55e48208c658 <col:7> 'int' 1
|   |-CallExpr 0x55e48208c6d0 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e48208c6b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e48208c698 <col:3> 'void ()' Function 0x55e48202b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e48208c728 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e48208c710 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e48208c6f0 <col:3> 'void ()' Function 0x55e48202b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e48208ca10 <line:790:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55e48208c748 <col:3> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
|   | `-ConditionalOperator 0x55e48208c9e0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55e48208c808 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55e48208c7c0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55e48208c7a8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55e48208c768 <col:7> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55e48208c7f0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55e48208c7d8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55e48208c788 <col:25> '_Bool' lvalue Var 0x55e4820858d8 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55e48208c9c8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e48208c828 <col:42> 'int' lvalue Var 0x55e482085c30 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55e48208c9a8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55e48208c978 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55e48208c8e8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55e48208c8a0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55e48208c888 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55e48208c848 <col:55> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55e48208c8d0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55e48208c8b8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55e48208c868 <col:73> '_Bool' lvalue Var 0x55e482085ab8 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55e48208c948 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e48208c908 <col:90> 'int' lvalue Var 0x55e482085d28 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55e48208c960 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e48208c928 <col:102> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
|   |-BinaryOperator 0x55e48208cc18 <line:791:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e48208ca30 <col:3> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e48208cc00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e48208cbd0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e48208caf0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e48208caa8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e48208ca90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e48208ca50 <col:20> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e48208cad8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e48208cac0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e48208ca70 <col:38> '_Bool' lvalue Var 0x55e4820858d8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55e48208cb88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e48208cb40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e48208cb10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e48208cbb8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e48208cba0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e48208cb68 <col:66> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e48208cf00 <line:792:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e48208cc38 <col:3> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e48208cee8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e48208ceb8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e48208cdd8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e48208ccf8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e48208ccb0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e48208cc98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e48208cc58 <col:20> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e48208cce0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e48208ccc8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e48208cc78 <col:38> '_Bool' lvalue Var 0x55e4820858d8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55e48208cdb8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e48208cd70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e48208cd58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e48208cd18 <col:56> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e48208cda0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e48208cd88 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e48208cd38 <col:74> '_Bool' lvalue Var 0x55e482085ab8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55e48208ce70 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e48208ce28 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e48208cdf8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e48208cea0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e48208ce88 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e48208ce50 <col:102> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55e48208d128 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e48208cf20 <col:3> '_Bool' lvalue Var 0x55e4820858d8 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55e48208d110 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e48208d0e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e48208d000 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e48208cfb8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e48208cfa0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e48208cf40 <col:20> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e48208cfe8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e48208cfd0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e48208cf60 <col:38> '_Bool' lvalue Var 0x55e4820858d8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55e48208d098 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e48208d050 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e48208d020 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e48208d0c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e48208d0b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e48208d078 <col:66> '_Bool' lvalue Var 0x55e4820858d8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55e48208d410 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e48208d148 <col:3> '_Bool' lvalue Var 0x55e482085ab8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55e48208d3f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e48208d3c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e48208d2e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e48208d208 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e48208d1c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e48208d1a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e48208d168 <col:20> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e48208d1f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e48208d1d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e48208d188 <col:38> '_Bool' lvalue Var 0x55e4820858d8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55e48208d2c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e48208d280 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e48208d268 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e48208d228 <col:56> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e48208d2b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e48208d298 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e48208d248 <col:74> '_Bool' lvalue Var 0x55e482085ab8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55e48208d380 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e48208d338 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e48208d308 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e48208d3b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e48208d398 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e48208d360 <col:102> '_Bool' lvalue Var 0x55e482085ab8 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55e48208d468 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e48208d450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e48208d430 <col:3> 'void ()' Function 0x55e48202b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e48208d4c0 <line:796:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e48208d4a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e48208d488 <col:3> 'void ()' Function 0x55e48202b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e48208d578 <line:797:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e48208d4e0 <col:3> 'int' lvalue Var 0x55e482084740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e48208d558 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e48208d540 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e48208d500 <col:22> 'int' lvalue Var 0x55e482084740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e48208d520 <col:41> 'int' 1
|   |-CallExpr 0x55e48208d5d0 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e48208d5b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e48208d598 <col:3> 'void ()' Function 0x55e48202b570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e48208d648 <line:799:3, col:36>
|     `-CallExpr 0x55e48208d628 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e48208d610 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e48208d5f0 <col:10> 'void *(void)' Function 0x55e48202afc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e48208d6f8 prev 0x55e482084488 <line:801:1, line:803:1> line:801:6 fence 'void ()'
| `-CompoundStmt 0x55e48208d798 <line:802:1, line:803:1>
|-FunctionDecl 0x55e48208d7c8 prev 0x55e482084548 <line:804:1, line:806:1> line:804:6 isync 'void ()'
| `-CompoundStmt 0x55e48208d868 <line:805:1, line:806:1>
|-FunctionDecl 0x55e48208d898 prev 0x55e482084608 <line:807:1, line:809:1> line:807:6 lwfence 'void ()'
| `-CompoundStmt 0x55e48208d938 <line:808:1, line:809:1>
`-FunctionDecl 0x55e48208d9a8 <line:810:1, line:836:1> line:810:5 main 'int ()'
  `-CompoundStmt 0x55e48208f988 <line:811:1, line:836:1>
    |-DeclStmt 0x55e48208dac0 <line:812:3, col:18>
    | `-VarDecl 0x55e48208da58 <col:3, col:13> col:13 used t1751 'pthread_t':'unsigned long'
    |-CallExpr 0x55e48208dcc8 <line:813:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55e48208dcb0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e48208dad8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e48206b9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e48208db18 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e48208daf8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e48208da58 't1751' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e48208dd08 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e48208db90 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55e48208db68 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e48208db30 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55e48208dd20 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e48208dbb0 <col:39> 'void *(void *)' Function 0x55e482086168 'P0' 'void *(void *)'
    | `-ParenExpr 0x55e48208dc30 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55e48208dc08 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e48208dbd0 <col:52> 'int' 0
    |-DeclStmt 0x55e48208ddb0 <line:814:3, col:18>
    | `-VarDecl 0x55e48208dd48 <col:3, col:13> col:13 used t1752 'pthread_t':'unsigned long'
    |-CallExpr 0x55e48208df58 <line:815:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55e48208df40 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e48208ddc8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e48206b9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e48208de08 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e48208dde8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e48208dd48 't1752' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e48208dfb0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e48208de80 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55e48208de58 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e48208de20 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55e48208dfc8 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e48208dea0 <col:39> 'void *(void *)' Function 0x55e482089390 'P1' 'void *(void *)'
    | `-ParenExpr 0x55e48208df20 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55e48208def8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e48208dec0 <col:52> 'int' 0
    |-DeclStmt 0x55e48208e058 <line:816:3, col:18>
    | `-VarDecl 0x55e48208dff0 <col:3, col:13> col:13 used t1753 'pthread_t':'unsigned long'
    |-CallExpr 0x55e48208e200 <line:817:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55e48208e1e8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e48208e070 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e48206b9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e48208e0b0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e48208e090 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e48208dff0 't1753' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e48208e240 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e48208e128 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55e48208e100 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e48208e0c8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55e48208e258 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e48208e148 <col:39> 'void *(void *)' Function 0x55e48208c538 'P2' 'void *(void *)'
    | `-ParenExpr 0x55e48208e1c8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55e48208e1a0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e48208e168 <col:52> 'int' 0
    |-CallExpr 0x55e48208e2a8 <line:818:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55e48208e290 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e48208e270 <col:3> 'void ()' Function 0x55e48202b4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55e48208e378 <line:819:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55e48208e2c8 <col:3> '_Bool' lvalue Var 0x55e482085468 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55e48208e360 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55e48208e340 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55e48208e328 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55e48208e2e8 <col:21> 'int' lvalue Var 0x55e482084740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55e48208e308 <col:41> 'int' 3
    |-CallExpr 0x55e48208e3d0 <line:820:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55e48208e3b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e48208e398 <col:3> 'void ()' Function 0x55e48202b570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55e48208e478 <line:821:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55e48208e460 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e48208e3f0 <col:3> 'void (int)' Function 0x55e48202ae50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55e48208e4b8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55e48208e4a0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55e48208e410 <col:21> '_Bool' lvalue Var 0x55e482085468 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55e48208e508 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55e48208e4f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e48208e4d0 <col:3> 'void ()' Function 0x55e48202b4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55e48208e7f0 <line:823:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55e48208e528 <col:3> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
    | `-ConditionalOperator 0x55e48208e7c0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55e48208e5e8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55e48208e5a0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55e48208e588 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55e48208e548 <col:7> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55e48208e5d0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55e48208e5b8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55e48208e568 <col:25> '_Bool' lvalue Var 0x55e482085770 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55e48208e7a8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e48208e608 <col:42> 'int' lvalue Var 0x55e482085c30 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55e48208e788 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55e48208e758 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55e48208e6c8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55e48208e680 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55e48208e668 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55e48208e628 <col:55> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55e48208e6b0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55e48208e698 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55e48208e648 <col:73> '_Bool' lvalue Var 0x55e482085950 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55e48208e728 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55e48208e6e8 <col:90> 'int' lvalue Var 0x55e482085d28 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55e48208e740 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55e48208e708 <col:102> 'int' lvalue Var 0x55e4820855e0 'x' 'int'
    |-BinaryOperator 0x55e48208e9f8 <line:824:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55e48208e810 <col:3> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55e48208e9e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e48208e9b0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55e48208e8d0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55e48208e888 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55e48208e870 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55e48208e830 <col:20> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55e48208e8b8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55e48208e8a0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55e48208e850 <col:38> '_Bool' lvalue Var 0x55e482085770 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e48208e968 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e48208e920 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e48208e8f0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55e48208e998 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e48208e980 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e48208e948 <col:66> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55e48208ece0 <line:825:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55e48208ea18 <col:3> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55e48208ecc8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e48208ec98 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55e48208ebb8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55e48208ead8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55e48208ea90 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55e48208ea78 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55e48208ea38 <col:20> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55e48208eac0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55e48208eaa8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55e48208ea58 <col:38> '_Bool' lvalue Var 0x55e482085770 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55e48208eb98 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55e48208eb50 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55e48208eb38 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55e48208eaf8 <col:56> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55e48208eb80 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55e48208eb68 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55e48208eb18 <col:74> '_Bool' lvalue Var 0x55e482085950 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e48208ec50 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e48208ec08 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e48208ebd8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55e48208ec80 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e48208ec68 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e48208ec30 <col:102> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55e48208eee8 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55e48208ed00 <col:3> '_Bool' lvalue Var 0x55e482085770 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55e48208eed0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e48208eea0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55e48208edc0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55e48208ed78 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55e48208ed60 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55e48208ed20 <col:20> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55e48208eda8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55e48208ed90 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55e48208ed40 <col:38> '_Bool' lvalue Var 0x55e482085770 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e48208ee58 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e48208ee10 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e48208ede0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55e48208ee88 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e48208ee70 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e48208ee38 <col:66> '_Bool' lvalue Var 0x55e482085770 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55e48208f1e0 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55e48208ef08 <col:3> '_Bool' lvalue Var 0x55e482085950 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55e48208f1c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e48208f198 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55e48208f0b8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55e48208efd8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55e48208ef80 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55e48208ef68 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55e48208ef28 <col:20> '_Bool' lvalue Var 0x55e482085ca8 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55e48208efc0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55e48208ef98 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55e48208ef48 <col:38> '_Bool' lvalue Var 0x55e482085770 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55e48208f098 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55e48208f050 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55e48208f038 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55e48208eff8 <col:56> '_Bool' lvalue Var 0x55e482085da0 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55e48208f080 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55e48208f068 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55e48208f018 <col:74> '_Bool' lvalue Var 0x55e482085950 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e48208f150 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e48208f108 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e48208f0d8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55e48208f180 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e48208f168 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e48208f130 <col:102> '_Bool' lvalue Var 0x55e482085950 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55e48208f238 <line:828:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55e48208f220 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e48208f200 <col:3> 'void ()' Function 0x55e48202b570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55e48208f290 <line:829:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55e48208f278 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e48208f258 <col:3> 'void ()' Function 0x55e48202b4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55e48208f328 <line:830:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55e48208f2b0 <col:3> '_Bool' lvalue Var 0x55e482085fd8 'weak$$choice1' '_Bool'
    | `-CallExpr 0x55e48208f308 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55e48208f2f0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55e48208f2d0 <col:19> '_Bool (void)' Function 0x55e48202ac80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55e48208f560 <line:831:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55e48208f348 <col:3> 'int' lvalue Var 0x55e482084860 '__unbuffered_p0_EAX' 'int'
    | `-ConditionalOperator 0x55e48208f530 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55e48208f500 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55e48208f4e8 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55e48208f368 <col:25> '_Bool' lvalue Var 0x55e482084db0 '__unbuffered_p0_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55e48208f4a8 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55e48208f478 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55e48208f430 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55e48208f418 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55e48208f388 <col:61> '_Bool' lvalue Var 0x55e482085fd8 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55e48208f448 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55e48208f3e0 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55e48208f3c8 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55e48208f3a8 <col:78> 'int *' lvalue Var 0x55e482084e30 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55e48208f460 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55e48208f3f8 <col:117> 'int' lvalue Var 0x55e482084860 '__unbuffered_p0_EAX' 'int'
    |   `-ImplicitCastExpr 0x55e48208f518 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55e48208f4c8 <col:140> 'int' lvalue Var 0x55e482084860 '__unbuffered_p0_EAX' 'int'
    |-BinaryOperator 0x55e48208f830 <line:832:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x55e48208f580 <col:3> '_Bool' lvalue Var 0x55e4820854e0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55e48208f818 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55e48208f800 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55e48208f7e0 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x55e48208f7c0 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x55e48208f728 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x55e48208f690 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x55e48208f5f8 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55e48208f5e0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55e48208f5a0 <col:23> 'int' lvalue Var 0x55e482084860 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x55e48208f5c0 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x55e48208f670 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55e48208f658 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55e48208f618 <col:51> 'int' lvalue Var 0x55e482085190 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x55e48208f638 <col:74> 'int' 0
    |         | `-BinaryOperator 0x55e48208f708 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55e48208f6f0 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55e48208f6b0 <col:79> 'int' lvalue Var 0x55e4820852b0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55e48208f6d0 <col:102> 'int' 1
    |         `-BinaryOperator 0x55e48208f7a0 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x55e48208f788 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55e48208f748 <col:107> 'int' lvalue Var 0x55e4820853d0 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55e48208f768 <col:130> 'int' 0
    |-CallExpr 0x55e48208f888 <line:833:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55e48208f870 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e48208f850 <col:3> 'void ()' Function 0x55e48202b570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55e48208f900 <line:834:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55e48208f8e8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e48208f8a8 <col:3> 'void (int)' Function 0x55e48202b238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55e48208f940 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55e48208f928 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55e48208f8c8 <col:21> '_Bool' lvalue Var 0x55e4820854e0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55e48208f978 <line:835:3, col:10>
      `-IntegerLiteral 0x55e48208f958 <col:10> 'int' 0
