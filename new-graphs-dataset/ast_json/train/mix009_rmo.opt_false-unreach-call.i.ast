TranslationUnitDecl 0x556468d31f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x556468d32848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x556468d32520 '__int128'
|-TypedefDecl 0x556468d328b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x556468d32540 'unsigned __int128'
|-TypedefDecl 0x556468d32bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x556468d32990 'struct __NSConstantString_tag'
|   `-Record 0x556468d32910 '__NSConstantString_tag'
|-TypedefDecl 0x556468d32c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x556468d32c20 'char *'
|   `-BuiltinType 0x556468d32020 'char'
|-TypedefDecl 0x556468d71b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x556468d32f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x556468d32d40 'struct __va_list_tag'
|     `-Record 0x556468d32cc0 '__va_list_tag'
|-FunctionDecl 0x556468d71c80 <pthread-wmm/mix009_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x556468d71e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x556468d71d80 <col:31> col:34 'int'
|-FunctionDecl 0x556468d71fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x556468d720f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x556468d72238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x556468d721a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x556468d72468 <col:40, col:99>
|   |-IfStmt 0x556468d72438 <col:42, col:88>
|   | |-UnaryOperator 0x556468d72318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x556468d72300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x556468d722e0 <col:47> 'int' lvalue ParmVar 0x556468d721a8 'expression' 'int'
|   | `-CompoundStmt 0x556468d72420 <col:59, col:88>
|   |   `-LabelStmt 0x556468d72408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x556468d72398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x556468d72380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x556468d72330 <col:68> 'void () __attribute__((noreturn))' Function 0x556468d720f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x556468d72450 <col:89>
|   `-ReturnStmt 0x556468d72458 <col:91>
|-FunctionDecl 0x556468d724b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x556468d72570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x556468d728f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556468d72628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x556468d726a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x556468d72728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x556468d727a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x556468d729b0 <line:11:22>
|-FunctionDecl 0x556468d97f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556468d72a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x556468d72aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x556468d97d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x556468d97dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x556468d97fd0 <line:14:22>
|-FunctionDecl 0x556468d98280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556468d98040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x556468d980c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x556468d98140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x556468d98338 <line:16:22>
|-TypedefDecl 0x556468d983a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x556468d320e0 'unsigned char'
|-TypedefDecl 0x556468d98418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x556468d32100 'unsigned short'
|-TypedefDecl 0x556468d98488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x556468d32120 'unsigned int'
|-TypedefDecl 0x556468d984f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-TypedefDecl 0x556468d98568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x556468d32040 'signed char'
|-TypedefDecl 0x556468d985d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x556468d320e0 'unsigned char'
|-TypedefDecl 0x556468d98648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x556468d32060 'short'
|-TypedefDecl 0x556468d986b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x556468d32100 'unsigned short'
|-TypedefDecl 0x556468d98728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x556468d32080 'int'
|-TypedefDecl 0x556468d98798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x556468d32120 'unsigned int'
|-TypedefDecl 0x556468d98808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d98878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-TypedefDecl 0x556468d988e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d98958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-TypedefDecl 0x556468d989c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-TypedefDecl 0x556468d98a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x556468d32120 'unsigned int'
|-TypedefDecl 0x556468d98aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x556468d32120 'unsigned int'
|-TypedefDecl 0x556468d98b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-TypedefDecl 0x556468d98b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-TypedefDecl 0x556468d98bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x556468d32120 'unsigned int'
|-TypedefDecl 0x556468d98c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-TypedefDecl 0x556468d98cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d98d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d98dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x556468d32080 'int'
|-RecordDecl 0x556468d98e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x556468d98f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x556468d99030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x556468d98fd0 'struct __fsid_t' sugar
|   `-RecordType 0x556468d98eb0 '__fsid_t'
|     `-Record 0x556468d98e30 ''
|-TypedefDecl 0x556468d990b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d99128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-TypedefDecl 0x556468d99198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-TypedefDecl 0x556468d99208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x556468d32120 'unsigned int'
|-TypedefDecl 0x556468d99278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d992e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x556468d32120 'unsigned int'
|-TypedefDecl 0x556468d99358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d993c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x556468d32080 'int'
|-TypedefDecl 0x556468d99438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x556468d32080 'int'
|-TypedefDecl 0x556468d994a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x556468d32080 'int'
|-TypedefDecl 0x556468d99518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x556468d327a0 'void *'
|   `-BuiltinType 0x556468d31fe0 'void'
|-TypedefDecl 0x556468d99588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d995f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d99668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d996d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-TypedefDecl 0x556468d99748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-TypedefDecl 0x556468d997b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-TypedefDecl 0x556468d99828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-TypedefDecl 0x556468d99898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d99908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d99978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d999e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-TypedefDecl 0x556468d99a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x556468d99a40 '__off64_t' sugar
|   |-Typedef 0x556468d98d68 '__off64_t'
|   `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d99b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x556468d99b30 '__quad_t *'
|   `-TypedefType 0x556468d99ad0 '__quad_t' sugar
|     |-Typedef 0x556468d988e8 '__quad_t'
|     `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d99be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x556468d32c20 'char *'
|   `-BuiltinType 0x556468d32020 'char'
|-TypedefDecl 0x556468d99c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d99cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x556468d32120 'unsigned int'
|-FunctionDecl 0x556468d99e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x556468d99d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x556468d9a148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x556468d9a138 <line:73:3, col:34>
|     `-CallExpr 0x556468d9a0f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x556468d9a0e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x556468d9a070 <col:10> '<builtin fn type>' Function 0x556468d99ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x556468d9a120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x556468d9a090 <col:29> 'unsigned int' lvalue ParmVar 0x556468d99d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x556468d99ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x556468d99f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x556468d99ff0 <col:10> Implicit
| `-ConstAttr 0x556468d9a048 <col:10> Implicit
|-FunctionDecl 0x556468d9a2a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x556468d9a198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x556468d9a5b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x556468d9a5a8 <line:78:3, col:34>
|     `-CallExpr 0x556468d9a568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x556468d9a550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x556468d9a4d8 <col:10> '<builtin fn type>' Function 0x556468d9a348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x556468d9a590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x556468d9a4f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x556468d9a198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x556468d9a348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x556468d9a3e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x556468d9a458 <col:10> Implicit
| `-ConstAttr 0x556468d9a4b0 <col:10> Implicit
|-TypedefDecl 0x556468d9a5e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-TypedefDecl 0x556468d9a678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x556468d9a640 '__time_t' sugar
|   |-Typedef 0x556468d99278 '__time_t'
|   `-BuiltinType 0x556468d320a0 'long'
|-RecordDecl 0x556468d9a6d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x556468d9a788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x556468d9a818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x556468d9a8a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x556468d9a870 '__pid_t' sugar
|   |-Typedef 0x556468d98dd8 '__pid_t'
|   `-BuiltinType 0x556468d32080 'int'
|-RecordDecl 0x556468d9a900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x556468d9a9c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x556468d9aa10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x556468d9aad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x556468d9ab38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-RecordDecl 0x556468d9ab90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x556468d9ce70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x556468d9cf20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x556468d9cec0 'struct cpu_set_t' sugar
|   `-RecordType 0x556468d9ac10 'cpu_set_t'
|     `-Record 0x556468d9ab90 ''
|-FunctionDecl 0x556468d9d1f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x556468d9cfc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556468d9d0d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x556468d9d2a8 <line:108:19>
|-FunctionDecl 0x556468d9d480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x556468d9d310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x556468d9d528 <col:69>
|-FunctionDecl 0x556468d9d6a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x556468d9d590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x556468d9d748 <col:64>
|-FunctionDecl 0x556468d9da08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x556468d9d7b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556468d9d8e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x556468d9dab8 <line:114:22>
|-FunctionDecl 0x556468d9de60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x556468d9db20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556468d9dc18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x556468d9df10 <col:88>
|-FunctionDecl 0x556468d9e1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x556468d9df78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556468d9dff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x556468d9e088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x556468d9e280 <col:62>
|-FunctionDecl 0x556468d9e3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x556468d9e2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x556468d9e4a0 <col:63>
|-FunctionDecl 0x556468d9e5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x556468d9e668 <col:47>
|-FunctionDecl 0x556468d9e770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x556468d9e6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x556468d9e818 <col:69>
|-FunctionDecl 0x556468d9e920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x556468d9e888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x556468d9e9c8 <col:69>
|-FunctionDecl 0x556468d9ec88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556468d9ea30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556468d9eb68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x556468d9ed38 <col:88>
|-TypedefDecl 0x556468d9edc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x556468d9ed90 '__clock_t' sugar
|   |-Typedef 0x556468d990b8 '__clock_t'
|   `-BuiltinType 0x556468d320a0 'long'
|-TypedefDecl 0x556468d9f7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x556468d9ee20 '__clockid_t' sugar
|   |-Typedef 0x556468d994a8 '__clockid_t'
|   `-BuiltinType 0x556468d32080 'int'
|-TypedefDecl 0x556468d9f878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x556468d9f840 '__timer_t' sugar
|   |-Typedef 0x556468d99518 '__timer_t'
|   `-PointerType 0x556468d327a0 'void *'
|     `-BuiltinType 0x556468d31fe0 'void'
|-RecordDecl 0x556468d9f8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x556468d9f990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x556468d9f9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x556468d9fa60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x556468d9fac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x556468d9fb30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x556468d9fb98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x556468d9fc00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x556468d9fc68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x556468d9fcd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x556468d9fd38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x556468d9fda0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x556468d9fdf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x556468d9feb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x556468d9ff28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x556468d9ffd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x556468da01a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x556468da0240 <col:45>
|-FunctionDecl 0x556468da0420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x556468da0310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x556468da04c8 <col:54>
|-FunctionDecl 0x556468da06c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x556468da0530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x556468da05a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x556468da0778 <line:158:22>
| `-ConstAttr 0x556468da1410 <col:63>
|-FunctionDecl 0x556468da1610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556468da1508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x556468da16b8 <col:56>
|-FunctionDecl 0x556468da1a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x556468da1728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x556468da17a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556468da1820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x556468da1918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x556468da1b20 <col:54>
|-RecordDecl 0x556468da1b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x556468da1c28 parent 0x556468d31f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x556468da1e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x556468da1f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x556468da1f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x556468da1ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x556468da20e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x556468da2208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x556468da21b0 'struct __locale_struct *'
|   `-ElaboratedType 0x556468da2140 'struct __locale_struct' sugar
|     `-RecordType 0x556468da1c00 'struct __locale_struct'
|       `-Record 0x556468da1b78 '__locale_struct'
|-TypedefDecl 0x556468da22b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x556468da2280 '__locale_t' sugar
|   |-Typedef 0x556468da2208 '__locale_t'
|   `-PointerType 0x556468da21b0 'struct __locale_struct *'
|     `-ElaboratedType 0x556468da2140 'struct __locale_struct' sugar
|       `-RecordType 0x556468da1c00 'struct __locale_struct'
|         `-Record 0x556468da1b78 '__locale_struct'
|-FunctionDecl 0x556468da26b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x556468da2328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x556468da23a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556468da2438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x556468da24c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x556468da2540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x556468da2778 <col:40>
|-FunctionDecl 0x556468da2968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x556468da2840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x556468da2a10 <col:66>
|-FunctionDecl 0x556468da2b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x556468da2a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x556468da2bc8 <col:69>
|-FunctionDecl 0x556468da2df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x556468da2c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556468da2cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x556468da2ea8 <col:52>
|-FunctionDecl 0x556468da3050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x556468da2f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556468da2fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x556468da3100 <col:55>
|-FunctionDecl 0x556468da3298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x556468da3180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x556468da3340 <col:62>
|-FunctionDecl 0x556468da3578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x556468da33a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x556468da3620 <col:60>
|-FunctionDecl 0x556468da3848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x556468da36a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x556468da3720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x556468da38f8 <col:44>
|-FunctionDecl 0x556468da3b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x556468da3960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556468da39e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x556468da3bb8 <col:49>
|-VarDecl 0x556468da3cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x556468da3d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x556468da3db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x556468da3e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x556468da3fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x556468da4050 <col:42>
|-VarDecl 0x556468da40c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x556468da4140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x556468da42c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x556468da41b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x556468da4370 <col:57>
|-FunctionDecl 0x556468da54f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556468da43f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x556468da5598 <col:56>
|-FunctionDecl 0x556468da56a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556468da5618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x556468da5750 <col:59>
|-FunctionDecl 0x556468da5858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x556468da57c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x556468da5900 <col:48>
| `-ConstAttr 0x556468da5958 <col:89>
|-FunctionDecl 0x556468da5bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x556468da5a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x556468da5a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x556468da5e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556468da5ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556468da5d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x556468da5ec8 <col:88>
|-FunctionDecl 0x556468da6060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556468da5f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556468da5fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x556468da6110 <col:88>
|-FunctionDecl 0x556468da6328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x556468da6178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556468da6208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x556468da63d8 <line:209:22>
|-FunctionDecl 0x556468da6778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x556468da6440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556468da6500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x556468da6590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x556468da6620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x556468da6a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x556468da6878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x556468da6950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x556468da6b28 <col:85>
|-FunctionDecl 0x556468da6f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x556468da6b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556468da6cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x556468da6dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x556468da6fd0 <col:52>
|-FunctionDecl 0x556468da7148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x556468da7038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x556468da71f0 <col:61>
|-FunctionDecl 0x556468da7668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x556468da7258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x556468da72d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x556468da7408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x556468da7510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x556468da7728 <col:62>
|-FunctionDecl 0x556468da7948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x556468da7790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x556468da7820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x556468da79f8 <line:222:22>
|-FunctionDecl 0x556468da7af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x556468da7a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x556468da7ba0 <col:65>
|-TypedefDecl 0x556468da7c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x556468d32140 'unsigned long'
|-RecordDecl 0x556468da7c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x556468da7db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x556468da7e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556468da7ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x556468da7e70 'union pthread_attr_t' sugar
|   `-RecordType 0x556468da7cf0 'union pthread_attr_t'
|     `-Record 0x556468da7c68 'pthread_attr_t'
|-RecordDecl 0x556468da7f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x556468da8098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x556468da8110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x556468da81c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x556468da8160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x556468da7fa0 'struct __pthread_internal_list'
|     `-Record 0x556468da7f20 '__pthread_internal_list'
|-RecordDecl 0x556468da8230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x556468da82d8 parent 0x556468d31f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x556468da83b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556468da8418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x556468da8480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x556468dac530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x556468dac598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x556468dac600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x556468dac688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x556468dac740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x556468dac830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x556468dac898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556468daca20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x556468dac9c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x556468da82b0 'pthread_mutex_t'
|     `-Record 0x556468da8230 ''
|-RecordDecl 0x556468daca90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x556468dacbd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556468dacc38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556468daccf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x556468dacc90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x556468dacb10 'pthread_mutexattr_t'
|     `-Record 0x556468daca90 ''
|-RecordDecl 0x556468dacd60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x556468dace08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x556468daced0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556468dacf38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x556468dacfa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x556468dad008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x556468dad070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x556468dad0d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x556468dad140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x556468dad1a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x556468dad260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix009_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix009_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x556468dad350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x556468dad3b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x556468dad540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x556468dad490 'union pthread_cond_t' sugar
|   `-RecordType 0x556468dacde0 'pthread_cond_t'
|     `-Record 0x556468dacd60 ''
|-RecordDecl 0x556468dad5b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x556468dad6b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556468dad718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556468dad7d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x556468dad770 'union pthread_condattr_t' sugar
|   `-RecordType 0x556468dad630 'pthread_condattr_t'
|     `-Record 0x556468dad5b0 ''
|-TypedefDecl 0x556468dad858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x556468d32120 'unsigned int'
|-TypedefDecl 0x556468dad8c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x556468d32080 'int'
|-RecordDecl 0x556468dad920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x556468dad9c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x556468dada90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556468dadaf8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x556468dadb60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x556468dadbc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x556468dadc30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x556468dadc98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x556468dadd00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x556468dadd68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x556468daddd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x556468dade38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x556468dadea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x556468dadf50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix009_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix009_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x556468dadff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x556468dae060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556468dae1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x556468dae150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x556468dad9a0 'pthread_rwlock_t'
|     `-Record 0x556468dad920 ''
|-RecordDecl 0x556468dae220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x556468dae360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x556468dae3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556468dae480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x556468dae420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x556468dae2a0 'pthread_rwlockattr_t'
|     `-Record 0x556468dae220 ''
|-TypedefDecl 0x556468db0560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x556468d32084 'volatile int' volatile
|   `-BuiltinType 0x556468d32080 'int'
|-RecordDecl 0x556468db05b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x556468db0700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x556468db0768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556468db0820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x556468db07c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x556468db0640 'pthread_barrier_t'
|     `-Record 0x556468db05b8 ''
|-RecordDecl 0x556468db0890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x556468db0990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556468db09f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556468db0ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x556468db0a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x556468db0910 'pthread_barrierattr_t'
|     `-Record 0x556468db0890 ''
|-TypedefDecl 0x556468db0bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x556468db0b60 'long [8]' 8 
|   `-BuiltinType 0x556468d320a0 'long'
|-EnumDecl 0x556468db0c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x556468db0ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x556468db0d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x556468db0d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x556468db0e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x556468db0ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x556468db0ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x556468db0f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x556468db0fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x556468db0fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x556468db0f98 <col:26> 'int' EnumConstant 0x556468db0e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x556468db1058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x556468db1040 <col:29> 'int'
| |   `-DeclRefExpr 0x556468db1020 <col:29> 'int' EnumConstant 0x556468db0ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x556468db10e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x556468db10c8 <col:30> 'int'
| |   `-DeclRefExpr 0x556468db10a8 <col:30> 'int' EnumConstant 0x556468db0ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x556468db1168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x556468db1150 <col:27> 'int'
|     `-DeclRefExpr 0x556468db1130 <col:27> 'int' EnumConstant 0x556468db0fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x556468db11b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x556468db1288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x556468db1310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x556468db12f8 <col:30> 'int'
| |   `-DeclRefExpr 0x556468db12d8 <col:30> 'int' EnumConstant 0x556468db1288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x556468db1360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x556468db13e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x556468db13d0 <col:29> 'int'
|     `-DeclRefExpr 0x556468db13b0 <col:29> 'int' EnumConstant 0x556468db1360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x556468db1438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x556468db1508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x556468db1570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x556468db15c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x556468db1610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x556468db16d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x556468db1728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x556468db1778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x556468db1800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x556468db17e8 <col:31> 'int'
|     `-DeclRefExpr 0x556468db17c8 <col:31> 'int' EnumConstant 0x556468db16d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x556468db1850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x556468db1918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x556468db1968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x556468db19b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x556468db1a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x556468db1ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x556468db1b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x556468db1bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x556468db1c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x556468db1c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x556468db1ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x556468db1f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x556468db1fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x556468db20c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x556468db2118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x556468db21e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x556468db2238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x556468db2288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x556468db2358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x556468db23a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x556468db29d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x556468db24a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x556468db25c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556468db27c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x556468db2840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x556468db2a98 <col:47>
| |-NonNullAttr 0x556468db2af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x556468db2b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x556468db2c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x556468db2b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x556468db2ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x556468db2d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x556468db2d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x556468db3078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x556468db2f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x556468db3120 <col:60>
|-FunctionDecl 0x556468db3270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x556468db3310 <col:54>
| `-ConstAttr 0x556468db3368 <col:95>
|-FunctionDecl 0x556468db3da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x556468db33a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556468db3418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x556468db3e50 <line:395:19>
| `-ConstAttr 0x556468db3ea8 <col:60>
|-FunctionDecl 0x556468db4078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x556468db3f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x556468db4120 <col:71>
| `-NonNullAttr 0x556468db4178 <col:112, col:126> 1
|-FunctionDecl 0x556468db4280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x556468db41c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x556468db4328 <line:398:22>
| `-NonNullAttr 0x556468db4380 <col:63, col:77> 1
|-FunctionDecl 0x556468db45a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x556468db43c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x556468db4448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x556468db4658 <line:401:22>
| `-NonNullAttr 0x556468db46b0 <col:63, col:80> 1 2
|-FunctionDecl 0x556468db48b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556468db46f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556468db4778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x556468db4968 <line:404:22>
| `-NonNullAttr 0x556468db49c0 <col:63, col:77> 1
|-FunctionDecl 0x556468db4c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x556468db4a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x556468db4ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x556468db4cc8 <line:407:22>
| `-NonNullAttr 0x556468db4d20 <col:63, col:80> 1 2
|-FunctionDecl 0x556468db5f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x556468db5dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556468db5e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556468db6028 <line:410:22>
| `-NonNullAttr 0x556468db6080 <col:63, col:77> 1
|-FunctionDecl 0x556468db62b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556468db60c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556468db6158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x556468db6368 <line:413:22>
| `-NonNullAttr 0x556468db63c0 <col:63, col:80> 1 2
|-FunctionDecl 0x556468db65f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556468db6408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x556468db6498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x556468db66a8 <col:37>
| `-NonNullAttr 0x556468db6700 <col:78, col:95> 1 2
|-FunctionDecl 0x556468db68e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556468db6748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556468db67c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x556468db6998 <line:419:22>
| `-NonNullAttr 0x556468db69f0 <col:63, col:80> 1 2
|-FunctionDecl 0x556468db6b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556468db6a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556468db6ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x556468db6c28 <line:421:22>
| `-NonNullAttr 0x556468db6c80 <col:63, col:77> 1
|-FunctionDecl 0x556468db7e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556468db6cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556468db6d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x556468db7f08 <line:424:22>
| `-NonNullAttr 0x556468db7f60 <col:63, col:80> 1 2
|-FunctionDecl 0x556468db80e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556468db7fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556468db8028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x556468db8198 <line:427:22>
| `-NonNullAttr 0x556468db81f0 <col:63, col:77> 1
|-FunctionDecl 0x556468db8398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556468db8238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556468db82b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x556468db8448 <line:430:22>
| `-NonNullAttr 0x556468db84a0 <col:63, col:80> 1 2
|-FunctionDecl 0x556468db8628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556468db84e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556468db8568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x556468db86d8 <line:432:22>
| `-NonNullAttr 0x556468db8730 <col:63, col:77> 1
|-FunctionDecl 0x556468db8958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x556468db8778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556468db87f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x556468db8a08 <line:435:22>
| |-NonNullAttr 0x556468db8a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x556468db8a98 <col:100> "" ""
|-FunctionDecl 0x556468db8ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x556468db8ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556468db8b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x556468db8d58 <line:438:22>
| |-NonNullAttr 0x556468db8db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x556468db8df8 <col:97> "" ""
|-FunctionDecl 0x556468db8fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x556468db8e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556468db8ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x556468db9098 <line:441:22>
| `-NonNullAttr 0x556468db90f0 <col:63, col:80> 1 2
|-FunctionDecl 0x556468db9270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x556468db9138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556468db91b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556468db9320 <line:444:22>
| `-NonNullAttr 0x556468db9378 <col:63, col:77> 1
|-FunctionDecl 0x556468db9668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x556468db93c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556468db9448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x556468db94c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x556468db9720 <line:448:22>
| `-NonNullAttr 0x556468db9778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x556468db9a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x556468db97d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556468db9850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x556468db98c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556468db9ae0 <col:43>
| `-NonNullAttr 0x556468db9b38 <col:84, col:98> 1
|-FunctionDecl 0x556468db9e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x556468db9b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556468db9c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x556468db9c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x556468db9ef8 <line:453:22>
| `-NonNullAttr 0x556468db9f50 <col:63, col:77> 3
|-FunctionDecl 0x556468dba228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556468db9f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556468dba018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x556468dba0a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x556468dba2e0 <line:457:22>
| `-NonNullAttr 0x556468dba338 <col:63, col:80> 2 3
|-FunctionDecl 0x556468dba528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x556468dba388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556468dba408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x556468dba5d8 <line:459:22>
|-FunctionDecl 0x556468dba9a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x556468dba6a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x556468dba840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x556468dbaa58 <col:52, col:69> 1 2
|-FunctionDecl 0x556468dbac00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x556468dbaae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x556468dbab60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x556468dbae10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x556468dbacc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x556468dbad48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x556468dbaf68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x556468dbaed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x556468dbb0a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x556468dbb148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x556468dbb1f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x556468dbb2e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x556468dbb350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x556468dbb520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix009_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x556468dbb618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x556468dbb6d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x556468dbb670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x556468dbb1d0 '__pthread_unwind_buf_t'
| |   `-Record 0x556468dbb148 ''
| `-AlignedAttr 0x556468dbb728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x556468dbb7a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x556468dbb900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x556468dbb968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x556468dbb9d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x556468dbba38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x556468dbbc40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x556468dbbb30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x556468dbbe20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x556468dbbcf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x556468dbbfe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556468dbbed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x556468dbc088 <line:488:22>
|-RecordDecl 0x556468dbc0e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x556468dbc3f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x556468dbc258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x556468dbc2d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x556468dbc4a8 <col:86>
| `-ReturnsTwiceAttr 0x556468dbc500 <col:12> Implicit
|-FunctionDecl 0x556468dbc828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556468dbc5d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x556468dbc6e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x556468dbc8d8 <line:494:22>
| `-NonNullAttr 0x556468dbc930 <col:63, col:77> 1
|-FunctionDecl 0x556468dbcaa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556468dbc978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556468dbcb50 <line:496:22>
| `-NonNullAttr 0x556468dbcba8 <col:63, col:77> 1
|-FunctionDecl 0x556468dbccb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556468dbcbf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556468dbcd58 <line:498:22>
| `-NonNullAttr 0x556468dbcdb0 <col:52, col:66> 1
|-FunctionDecl 0x556468dbcee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556468dbce30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556468dbcf90 <line:500:22>
| `-NonNullAttr 0x556468dbcfe8 <col:52, col:66> 1
|-FunctionDecl 0x556468dbd228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556468dbd038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556468dbd0c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556468dbd2d8 <col:36>
| `-NonNullAttr 0x556468dbd330 <col:66, col:83> 1 2
|-FunctionDecl 0x556468dbd430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556468dbd378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556468dbd4d8 <line:505:22>
| `-NonNullAttr 0x556468dbd530 <col:52, col:66> 1
|-FunctionDecl 0x556468dbd7c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556468dbd5e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556468dbd660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x556468dbd878 <line:509:22>
| `-NonNullAttr 0x556468dbd8d0 <col:63, col:80> 1 2
|-FunctionDecl 0x556468dbdb98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x556468dbd918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556468dbd998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x556468dbda18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x556468dbdc50 <line:513:22>
| `-NonNullAttr 0x556468dbdca8 <col:63, col:80> 1 3
|-FunctionDecl 0x556468dbde40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556468dbdcf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556468dbdee8 <line:515:22>
| `-NonNullAttr 0x556468dbdf40 <col:63, col:77> 1
|-FunctionDecl 0x556468dbe128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556468dbdff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x556468dbe1d0 <line:517:22>
| `-NonNullAttr 0x556468dbe228 <col:63, col:77> 1
|-FunctionDecl 0x556468dbe330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556468dbe278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x556468dbe3d8 <line:519:22>
| `-NonNullAttr 0x556468dbe430 <col:63, col:77> 1
|-FunctionDecl 0x556468dbe658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556468dbe478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556468dbe4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x556468dbe708 <line:523:22>
| `-NonNullAttr 0x556468dbe760 <col:63, col:80> 1 2
|-FunctionDecl 0x556468dbe968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556468dbe7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556468dbe828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x556468dbea18 <line:526:22>
| `-NonNullAttr 0x556468dbea70 <col:63, col:77> 1
|-FunctionDecl 0x556468dbec18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556468dbeab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556468dbeb38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x556468dbecc8 <line:529:22>
| `-NonNullAttr 0x556468dbed20 <col:63, col:80> 1 2
|-FunctionDecl 0x556468dbff20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556468dbed68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556468dbfe60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x556468dbffd0 <line:531:22>
| `-NonNullAttr 0x556468dc0028 <col:63, col:77> 1
|-FunctionDecl 0x556468dc01d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556468dc0078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556468dc00f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x556468dc0288 <line:535:22>
| `-NonNullAttr 0x556468dc02e0 <col:63, col:80> 1 2
|-FunctionDecl 0x556468dc0468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556468dc0328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556468dc03a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x556468dc0518 <line:538:22>
| `-NonNullAttr 0x556468dc0570 <col:63, col:77> 1
|-FunctionDecl 0x556468dc0718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556468dc05b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556468dc0638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x556468dc07c8 <line:542:22>
| `-NonNullAttr 0x556468dc0820 <col:63, col:80> 1 2
|-FunctionDecl 0x556468dc09a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556468dc0868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556468dc08e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x556468dc0a58 <line:545:22>
| `-NonNullAttr 0x556468dc0ab0 <col:63, col:77> 1
|-FunctionDecl 0x556468dc0c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x556468dc0af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x556468dc0b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x556468dc0d48 <line:548:22>
| `-NonNullAttr 0x556468dc0da0 <col:63, col:80> 1 2
|-FunctionDecl 0x556468dc1f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556468dc0de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556468dc1e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x556468dc2008 <line:551:22>
| `-NonNullAttr 0x556468dc2060 <col:63, col:77> 1
|-FunctionDecl 0x556468dc2398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x556468dc2140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556468dc2250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x556468dc2448 <col:29>
| `-NonNullAttr 0x556468dc24a0 <col:70, col:84> 1
|-FunctionDecl 0x556468dc2618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556468dc24e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556468dc26c0 <line:556:22>
| `-NonNullAttr 0x556468dc2718 <col:63, col:77> 1
|-FunctionDecl 0x556468dc2820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556468dc2768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556468dc28c8 <line:558:22>
| `-NonNullAttr 0x556468dc2920 <col:52, col:66> 1
|-FunctionDecl 0x556468dc2a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556468dc2968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556468dc2ac8 <line:560:19>
| `-NonNullAttr 0x556468dc2b20 <col:49, col:63> 1
|-FunctionDecl 0x556468dc2d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556468dc2b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556468dc2bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556468dc2e08 <col:39>
| `-NonNullAttr 0x556468dc2e90 <col:69, col:86> 1 2
|-FunctionDecl 0x556468dc2f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556468dc2ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556468dc3038 <line:565:22>
| `-NonNullAttr 0x556468dc3090 <col:52, col:66> 1
|-FunctionDecl 0x556468dc3190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556468dc30d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556468dc3238 <line:567:22>
| `-NonNullAttr 0x556468dc3290 <col:52, col:66> 1
|-FunctionDecl 0x556468dc3448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556468dc32d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556468dc3368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556468dc34f8 <col:39>
| `-NonNullAttr 0x556468dc3550 <col:69, col:86> 1 2
|-FunctionDecl 0x556468dc3650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556468dc3598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556468dc36f8 <line:572:22>
| `-NonNullAttr 0x556468dc3750 <col:52, col:66> 1
|-FunctionDecl 0x556468dc3938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x556468dc3800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x556468dc39e0 <line:574:22>
| `-NonNullAttr 0x556468dc3a38 <col:63, col:77> 1
|-FunctionDecl 0x556468dc3b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x556468dc3a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x556468dc3be8 <line:576:22>
| `-NonNullAttr 0x556468dc3c40 <col:63, col:77> 1
|-FunctionDecl 0x556468dc3ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556468dc3c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x556468dc3d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x556468dc3f50 <line:580:22>
| `-NonNullAttr 0x556468dc3fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x556468dc41b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x556468dc3ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x556468dc4078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x556468dc4268 <line:583:22>
| `-NonNullAttr 0x556468dc42c0 <col:63, col:77> 1
|-FunctionDecl 0x556468dc4468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556468dc4308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x556468dc4388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x556468dc4518 <line:587:22>
| `-NonNullAttr 0x556468dc4570 <col:63, col:80> 1 2
|-FunctionDecl 0x556468dc46f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x556468dc45b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x556468dc4638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x556468dc47a8 <col:36>
| `-NonNullAttr 0x556468dc4800 <col:77, col:91> 1
|-FunctionDecl 0x556468dc4b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x556468dc48e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556468dc49f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x556468dc4be8 <line:592:22>
| `-NonNullAttr 0x556468dc4c40 <col:63, col:77> 1
|-FunctionDecl 0x556468dc4db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556468dc4c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556468dc4e60 <line:594:22>
| `-NonNullAttr 0x556468dc4ee0 <col:63, col:77> 1
|-FunctionDecl 0x556468dc4fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556468dc4f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556468dc5088 <line:596:22>
| `-NonNullAttr 0x556468dc50e0 <col:52, col:66> 1
|-FunctionDecl 0x556468dc51e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556468dc5128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556468dc5288 <line:598:22>
| `-NonNullAttr 0x556468dc52e0 <col:52, col:66> 1
|-FunctionDecl 0x556468dc5508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x556468dc5328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556468dc53a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x556468dc55b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x556468dc58e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556468dc5638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556468dc56b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556468dc5740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x556468dc59a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x556468dc5bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x556468dc5a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x556468dc5c60 <line:607:22>
| `-NonNullAttr 0x556468dc5cb8 <col:63, col:77> 1
|-FunctionDecl 0x556468dc5dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x556468dc5d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x556468dc5e68 <line:609:22>
| `-NonNullAttr 0x556468dc5ef0 <col:63, col:77> 1
|-FunctionDecl 0x556468dc6118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556468dc5f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x556468dc5fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x556468dc61c8 <line:613:22>
| `-NonNullAttr 0x556468dc6220 <col:63, col:80> 1 2
|-FunctionDecl 0x556468dc6428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x556468dc6268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x556468dc62e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x556468dc64d8 <col:37>
| `-NonNullAttr 0x556468dc6530 <col:78, col:92> 1
|-FunctionDecl 0x556468dc6748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x556468dc6578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x556468dc6620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x556468dc67f8 <line:619:22>
| `-NonNullAttr 0x556468dc6850 <col:63, col:80> 1 2
|-FunctionDecl 0x556468dc6a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x556468dc6898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x556468dc6910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x556468dc6ac8 <line:622:22>
| `-NonNullAttr 0x556468dc6b20 <col:63, col:77> 1
|-FunctionDecl 0x556468dc6dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x556468dc6c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x556468dc6c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x556468dc6e78 <line:624:22>
| `-NonNullAttr 0x556468dc6f00 <col:63, col:77> 1
|-FunctionDecl 0x556468dc7078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556468dc6f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556468dc7120 <line:626:22>
| `-NonNullAttr 0x556468dc7178 <col:63, col:77> 1
|-FunctionDecl 0x556468dc7280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556468dc71c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556468dc7328 <line:628:22>
| `-NonNullAttr 0x556468dc7380 <col:52, col:66> 1
|-FunctionDecl 0x556468dc7480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556468dc73c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556468dc7528 <line:630:22>
| `-NonNullAttr 0x556468dc7580 <col:52, col:66> 1
|-FunctionDecl 0x556468dc7680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556468dc75c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556468dc7728 <line:632:22>
| `-NonNullAttr 0x556468dc7780 <col:52, col:66> 1
|-FunctionDecl 0x556468dc7b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x556468dc7860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x556468dc7970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x556468dc79f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x556468dc7c10 <line:636:22>
| `-NonNullAttr 0x556468dc7c68 <col:63, col:77> 1
|-FunctionDecl 0x556468dc7de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x556468dc7cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x556468dc7e90 <line:638:22>
| `-NonNullAttr 0x556468dc7f10 <col:63, col:77> 1
|-FunctionDecl 0x556468dc8010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x556468dc7f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x556468dc80b8 <line:640:22>
| `-NonNullAttr 0x556468dc8110 <col:52, col:66> 1
|-FunctionDecl 0x556468dc82f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x556468dc81c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x556468dc83a0 <line:642:22>
| `-NonNullAttr 0x556468dc83f8 <col:63, col:77> 1
|-FunctionDecl 0x556468dc8500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x556468dc8448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x556468dc85a8 <line:644:22>
| `-NonNullAttr 0x556468dc8600 <col:63, col:77> 1
|-FunctionDecl 0x556468dc8828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556468dc8648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x556468dc86c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x556468dc88d8 <line:648:22>
| `-NonNullAttr 0x556468dc8930 <col:63, col:80> 1 2
|-FunctionDecl 0x556468dc8b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x556468dc8978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x556468dc89f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x556468dc8be8 <line:651:22>
| `-NonNullAttr 0x556468dc8c40 <col:63, col:77> 1
|-FunctionDecl 0x556468dc8fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x556468dc8d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x556468dc8e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x556468dc9058 <line:654:22>
| `-NonNullAttr 0x556468dc90b0 <col:63, col:77> 1
|-FunctionDecl 0x556468dc9208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x556468dc90f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x556468dc92b0 <col:69>
|-FunctionDecl 0x556468dc9428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x556468dc9318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x556468dc94d0 <col:72>
|-FunctionDecl 0x556468dc9708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x556468dc9538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x556468dc95e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x556468dc97b8 <col:44>
|-FunctionDecl 0x556468dc99d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x556468dc9820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556468dc9898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x556468dc9a88 <line:661:22>
| `-NonNullAttr 0x556468dc9ae0 <col:63, col:77> 2
|-FunctionDecl 0x556468dcaf50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x556468dc9bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x556468dc9cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x556468dc9de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x556468dcb008 <col:47>
|-FunctionDecl 0x556468dcb110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x556468dcb078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556468dcb268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x556468dcb1d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556468dcb330 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x556468dcb3f0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x556468dcb4b0 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x556468dcb568 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x556468dcb5e8 prev 0x556468dcb568 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x556468dcb650 <col:24> 'int' 0
|-VarDecl 0x556468dcb688 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x556468dcb708 prev 0x556468dcb688 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x556468dcb770 <col:27> 'int' 0
|-VarDecl 0x556468dcb7a8 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x556468dcb828 prev 0x556468dcb7a8 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x556468dcb890 <col:27> 'int' 0
|-VarDecl 0x556468dcb8c8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x556468dcb948 prev 0x556468dcb8c8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x556468dcb9b0 <col:27> 'int' 0
|-VarDecl 0x556468dcb9e8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x556468dcba68 prev 0x556468dcb9e8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x556468dcbad0 <col:27> 'int' 0
|-VarDecl 0x556468dcbb00 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x556468dcbb78 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x556468dcbbf8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x556468dcbc78 prev 0x556468dcbbf8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x556468dcbce0 <col:9> 'int' 0
|-VarDecl 0x556468dcbd18 <line:685:1, col:5> col:5 used y 'int'
|-VarDecl 0x556468dcbd98 prev 0x556468dcbd18 <line:686:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x556468dcbe00 <col:9> 'int' 0
|-VarDecl 0x556468dcbe30 <line:687:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x556468dcbf20 <line:688:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x556468dcbf98 <line:689:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x556468dcc010 <line:690:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x556468dcc088 <line:691:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x556468dcc100 <line:692:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x556468dcc178 <line:693:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x556468dcc1f0 <line:694:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x556468dcc268 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x556468dcc2e8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x556468dcc368 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x556468dcc3e0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x556468dcc460 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x556468dcc4d8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x556468dcc558 <line:701:1, col:5> col:5 used z 'int'
|-VarDecl 0x556468dcc5d8 prev 0x556468dcc558 <line:702:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x556468dcc640 <col:9> 'int' 0
|-VarDecl 0x556468dcc670 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x556468dcc6e8 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x556468dcc800 prev 0x556468dcb110 <line:705:1, line:738:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x556468dcc768 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556468dcf9b8 <line:706:1, line:738:1>
|   |-CallExpr 0x556468dcc918 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556468dcc900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dcc8a8 <col:3> 'void ()' Function 0x556468d724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556468dcc978 <line:708:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556468dcc938 <col:3> 'int' lvalue Var 0x556468dcc5d8 'z' 'int'
|   | `-IntegerLiteral 0x556468dcc958 <col:7> 'int' 1
|   |-CallExpr 0x556468dcc9d0 <line:709:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556468dcc9b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dcc998 <col:3> 'void ()' Function 0x556468d72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556468dcca28 <line:710:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556468dcca10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dcc9f0 <col:3> 'void ()' Function 0x556468d724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556468dcca88 <line:711:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556468dcca48 <col:3> 'int' lvalue Var 0x556468dcbc78 'x' 'int'
|   | `-IntegerLiteral 0x556468dcca68 <col:7> 'int' 1
|   |-CallExpr 0x556468dccae0 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556468dccac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dccaa8 <col:3> 'void ()' Function 0x556468d72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556468dccb38 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556468dccb20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dccb00 <col:3> 'void ()' Function 0x556468d724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556468dccbb0 <line:714:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556468dccb58 <col:3> 'int' lvalue Var 0x556468dcb708 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x556468dccb98 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556468dccb78 <col:25> 'int' lvalue Var 0x556468dcbc78 'x' 'int'
|   |-CallExpr 0x556468dccc08 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556468dccbf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dccbd0 <col:3> 'void ()' Function 0x556468d72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556468dccc60 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556468dccc48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dccc28 <col:3> 'void ()' Function 0x556468d724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556468dccd28 <line:717:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x556468dccc80 <col:3> '_Bool' lvalue Var 0x556468dcc670 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x556468dccd08 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x556468dcccf0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x556468dccca0 <col:19> '_Bool (void)' Function 0x556468d71c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x556468dccdc0 <line:718:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x556468dccd48 <col:3> '_Bool' lvalue Var 0x556468dcc6e8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x556468dccda0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x556468dccd88 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x556468dccd68 <col:19> '_Bool (void)' Function 0x556468d71c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x556468dcce38 <line:719:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x556468dccde0 <col:3> '_Bool' lvalue Var 0x556468dcbe30 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x556468dcce20 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556468dcce00 <col:21> '_Bool' lvalue Var 0x556468dcc6e8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x556468dcceb0 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556468dcce58 <col:3> 'int' lvalue Var 0x556468dcbf20 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x556468dcce98 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556468dcce78 <col:15> 'int' lvalue Var 0x556468dcbd98 'y' 'int'
|   |-BinaryOperator 0x556468dcd308 <line:721:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x556468dcced0 <col:3> 'int' lvalue Var 0x556468dcbd98 'y' 'int'
|   | `-ConditionalOperator 0x556468dcd2d8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x556468dcd100 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x556468dcd020 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x556468dccf48 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x556468dccf30 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x556468dccef0 <col:8> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x556468dcd000 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x556468dccf98 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x556468dccf80 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x556468dccf60 <col:27> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x556468dccfe8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x556468dccfd0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x556468dccfb0 <col:46> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x556468dcd0e0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x556468dcd078 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x556468dcd060 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x556468dcd040 <col:65> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x556468dcd0c8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x556468dcd0b0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x556468dcd090 <col:84> '_Bool' lvalue Var 0x556468dcc178 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x556468dcd2c0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556468dcd120 <col:101> 'int' lvalue Var 0x556468dcbd98 'y' 'int'
|   |   `-ParenExpr 0x556468dcd2a0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x556468dcd270 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x556468dcd1e0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556468dcd198 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556468dcd180 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556468dcd140 <col:106> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556468dcd1c8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556468dcd1b0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556468dcd160 <col:124> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x556468dcd240 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556468dcd200 <col:141> 'int' lvalue Var 0x556468dcc368 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x556468dcd258 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556468dcd220 <col:153> 'int' lvalue Var 0x556468dcc460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x556468dcd818 <line:722:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556468dcd328 <col:3> 'int' lvalue Var 0x556468dcc368 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x556468dcd7e8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556468dcd7b8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556468dcd7a0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556468dcd348 <col:15> '_Bool' lvalue Var 0x556468dcc6e8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556468dcd7d0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556468dcd368 <col:31> 'int' lvalue Var 0x556468dcc368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x556468dcd780 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556468dcd750 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556468dcd578 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556468dcd498 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556468dcd3c0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556468dcd3a8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556468dcd388 <col:45> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556468dcd478 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556468dcd410 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556468dcd3f8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556468dcd3d8 <col:64> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x556468dcd460 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556468dcd448 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556468dcd428 <col:83> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556468dcd558 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556468dcd4f0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556468dcd4d8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556468dcd4b8 <col:102> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x556468dcd540 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556468dcd528 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556468dcd508 <col:121> '_Bool' lvalue Var 0x556468dcc178 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x556468dcd738 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556468dcd598 <col:138> 'int' lvalue Var 0x556468dcc368 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x556468dcd718 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556468dcd6e8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556468dcd658 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556468dcd610 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556468dcd5f8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556468dcd5b8 <col:151> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556468dcd640 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556468dcd628 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556468dcd5d8 <col:169> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x556468dcd6b8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556468dcd678 <col:186> 'int' lvalue Var 0x556468dcc368 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x556468dcd6d0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556468dcd698 <col:198> 'int' lvalue Var 0x556468dcc368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x556468dcdd28 <line:723:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556468dcd838 <col:3> 'int' lvalue Var 0x556468dcc460 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x556468dcdcf8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556468dcdcc8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556468dcdcb0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556468dcd858 <col:15> '_Bool' lvalue Var 0x556468dcc6e8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556468dcdce0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556468dcd878 <col:31> 'int' lvalue Var 0x556468dcc460 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x556468dcdc90 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556468dcdc60 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556468dcda88 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556468dcd9a8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556468dcd8d0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556468dcd8b8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556468dcd898 <col:45> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556468dcd988 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556468dcd920 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556468dcd908 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556468dcd8e8 <col:64> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x556468dcd970 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556468dcd958 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556468dcd938 <col:83> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556468dcda68 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556468dcda00 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556468dcd9e8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556468dcd9c8 <col:102> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x556468dcda50 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556468dcda38 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556468dcda18 <col:121> '_Bool' lvalue Var 0x556468dcc178 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x556468dcdc48 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556468dcdaa8 <col:138> 'int' lvalue Var 0x556468dcc460 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x556468dcdc28 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556468dcdbf8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556468dcdb68 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556468dcdb20 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556468dcdb08 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556468dcdac8 <col:151> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556468dcdb50 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556468dcdb38 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556468dcdae8 <col:169> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x556468dcdbc8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556468dcdb88 <col:186> 'int' lvalue Var 0x556468dcc460 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x556468dcdbe0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556468dcdba8 <col:198> 'int' lvalue Var 0x556468dcc460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x556468dce2e8 <line:724:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556468dcdd48 <col:3> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556468dce2d0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556468dce2a0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556468dce258 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556468dce240 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556468dcdd68 <col:20> '_Bool' lvalue Var 0x556468dcc6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556468dce288 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556468dce270 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556468dcdd88 <col:36> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x556468dce220 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556468dce1f0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556468dcdfb0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556468dcdeb8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556468dcdde0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556468dcddc8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556468dcdda8 <col:55> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556468dcde98 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556468dcde30 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556468dcde18 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556468dcddf8 <col:74> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x556468dcde80 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556468dcde68 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556468dcde48 <col:93> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556468dcdf90 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556468dcdf10 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556468dcdef8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556468dcded8 <col:112> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x556468dcdf78 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556468dcdf60 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556468dcdf40 <col:131> '_Bool' lvalue Var 0x556468dcc178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x556468dce1d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556468dce1c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556468dcdfd0 <col:148> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x556468dce1a0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556468dce170 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556468dce090 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556468dce048 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556468dce030 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556468dcdff0 <col:166> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556468dce078 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556468dce060 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556468dce010 <col:184> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x556468dce128 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556468dce0e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556468dce0b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556468dce158 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556468dce140 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556468dce108 <col:212> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556468dce8b0 <line:725:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556468dce308 <col:3> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556468dce898 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556468dce868 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556468dce820 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556468dce808 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556468dce328 <col:20> '_Bool' lvalue Var 0x556468dcc6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556468dce850 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556468dce838 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556468dce348 <col:36> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x556468dce7e8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556468dce7b8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556468dce558 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556468dce478 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556468dce3a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556468dce388 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556468dce368 <col:55> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556468dce458 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556468dce3f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556468dce3d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556468dce3b8 <col:74> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x556468dce440 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556468dce428 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556468dce408 <col:93> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556468dce538 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556468dce4d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556468dce4b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556468dce498 <col:112> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x556468dce520 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556468dce508 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556468dce4e8 <col:131> '_Bool' lvalue Var 0x556468dcc178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x556468dce7a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556468dce788 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556468dce578 <col:148> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x556468dce768 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556468dce738 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556468dce638 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556468dce5f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556468dce5d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556468dce598 <col:166> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556468dce620 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556468dce608 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556468dce5b8 <col:184> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x556468dce708 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556468dce688 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556468dce658 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556468dce720 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556468dce6e0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556468dce6b0 <col:219> 'int' 0
|   |-BinaryOperator 0x556468dcee58 <line:726:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556468dce8d0 <col:3> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556468dcee40 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556468dcee10 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556468dcedc8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556468dcedb0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556468dce8f0 <col:20> '_Bool' lvalue Var 0x556468dcc6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556468dcedf8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556468dcede0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556468dce910 <col:36> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x556468dced90 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556468dced60 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556468dceb20 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556468dcea40 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556468dce968 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556468dce950 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556468dce930 <col:55> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556468dcea20 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556468dce9b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556468dce9a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556468dce980 <col:74> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x556468dcea08 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556468dce9f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556468dce9d0 <col:93> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556468dceb00 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556468dcea98 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556468dcea80 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556468dcea60 <col:112> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x556468dceae8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556468dcead0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556468dceab0 <col:131> '_Bool' lvalue Var 0x556468dcc178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x556468dced48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556468dced30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556468dceb40 <col:148> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x556468dced10 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556468dcece0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556468dcec00 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556468dcebb8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556468dceba0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556468dceb60 <col:166> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556468dcebe8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556468dcebd0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556468dceb80 <col:184> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x556468dcec98 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556468dcec50 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556468dcec20 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556468dcecc8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556468dcecb0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556468dcec78 <col:212> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x556468dcf448 <line:727:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556468dcee78 <col:3> '_Bool' lvalue Var 0x556468dcc178 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556468dcf430 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556468dcf400 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556468dcf3b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556468dcf3a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556468dcee98 <col:20> '_Bool' lvalue Var 0x556468dcc6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556468dcf3e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556468dcf3d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556468dceeb8 <col:36> '_Bool' lvalue Var 0x556468dcc178 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x556468dcf380 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556468dcf350 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556468dcf0f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556468dcf010 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556468dcef10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556468dceef8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556468dceed8 <col:55> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556468dceff0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556468dcef88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556468dcef70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556468dcef50 <col:74> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x556468dcefd8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556468dcefc0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556468dcefa0 <col:93> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556468dcf0d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556468dcf068 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556468dcf050 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556468dcf030 <col:112> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x556468dcf0b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556468dcf0a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556468dcf080 <col:131> '_Bool' lvalue Var 0x556468dcc178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x556468dcf338 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556468dcf320 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556468dcf110 <col:148> '_Bool' lvalue Var 0x556468dcc178 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x556468dcf300 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556468dcf2d0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556468dcf1d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556468dcf188 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556468dcf170 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556468dcf130 <col:166> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556468dcf1b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556468dcf1a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556468dcf150 <col:184> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x556468dcf2a0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556468dcf220 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556468dcf1f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556468dcf2b8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556468dcf278 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556468dcf248 <col:219> 'int' 0
|   |-BinaryOperator 0x556468dcf4c0 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556468dcf468 <col:3> 'int' lvalue Var 0x556468dcb828 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x556468dcf4a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556468dcf488 <col:25> 'int' lvalue Var 0x556468dcbd98 'y' 'int'
|   |-BinaryOperator 0x556468dcf5f0 <line:729:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x556468dcf4e0 <col:3> 'int' lvalue Var 0x556468dcbd98 'y' 'int'
|   | `-ConditionalOperator 0x556468dcf5c0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x556468dcf578 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556468dcf560 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556468dcf500 <col:7> '_Bool' lvalue Var 0x556468dcbe30 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x556468dcf590 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556468dcf520 <col:25> 'int' lvalue Var 0x556468dcbf20 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x556468dcf5a8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x556468dcf540 <col:37> 'int' lvalue Var 0x556468dcbd98 'y' 'int'
|   |-BinaryOperator 0x556468dcf688 <line:730:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x556468dcf610 <col:3> '_Bool' lvalue Var 0x556468dcbe30 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x556468dcf660 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556468dcf630 <col:28> 'int' 0
|   |-CallExpr 0x556468dcf6e0 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556468dcf6c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dcf6a8 <col:3> 'void ()' Function 0x556468d72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556468dcf738 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556468dcf720 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dcf700 <col:3> 'void ()' Function 0x556468d724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x556468dcf790 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556468dcf778 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dcf758 <col:3> 'void ()' Function 0x556468d72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556468dcf7e8 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556468dcf7d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dcf7b0 <col:3> 'void ()' Function 0x556468d724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556468dcf8a0 <line:735:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556468dcf808 <col:3> 'int' lvalue Var 0x556468dcb5e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556468dcf880 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556468dcf868 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556468dcf828 <col:22> 'int' lvalue Var 0x556468dcb5e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556468dcf848 <col:41> 'int' 1
|   |-CallExpr 0x556468dcf8f8 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556468dcf8e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dcf8c0 <col:3> 'void ()' Function 0x556468d72570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556468dcf9a8 <line:737:3, col:36>
|     `-CallExpr 0x556468dcf988 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556468dcf970 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556468dcf918 <col:10> 'void *(void)' Function 0x556468d71fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556468dcfb70 prev 0x556468dcb268 <line:739:1, line:782:1> line:739:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x556468dcfad8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556468dd3d60 <line:740:1, line:782:1>
|   |-CallExpr 0x556468dcfc50 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556468dcfc38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dcfc18 <col:3> 'void ()' Function 0x556468d724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556468dcfcc8 <line:742:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556468dcfc70 <col:3> 'int' lvalue Var 0x556468dcc460 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x556468dcfcb0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556468dcfc90 <col:15> 'int' lvalue Var 0x556468dcc368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x556468dcfd28 <line:743:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556468dcfce8 <col:3> 'int' lvalue Var 0x556468dcc368 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x556468dcfd08 <col:15> 'int' 1
|   |-BinaryOperator 0x556468dcfda0 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556468dcfd48 <col:3> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556468dcfd88 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556468dcfd68 <col:20> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556468dcfe38 <line:745:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x556468dcfdc0 <col:3> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x556468dcfe10 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556468dcfde0 <col:27> 'int' 1
|   |-CallExpr 0x556468dcffe8 <line:746:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x556468dcffd0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x556468dcfe58 <col:3> 'void (int)' Function 0x556468d72238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x556468dcff80 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x556468dcff60 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x556468dcff18 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x556468dcfed0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x556468dcfeb8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x556468dcfe78 <col:23> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x556468dcff00 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x556468dcfee8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x556468dcfe98 <col:41> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556468dd0068 <line:747:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556468dd0010 <col:3> '_Bool' lvalue Var 0x556468dcc100 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x556468dd0050 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556468dd0030 <col:20> '_Bool' lvalue Var 0x556468dcbf98 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x556468dd00e0 <line:748:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556468dd0088 <col:3> '_Bool' lvalue Var 0x556468dcc178 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556468dd00c8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556468dd00a8 <col:20> '_Bool' lvalue Var 0x556468dcc010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x556468dd0158 <line:749:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556468dd0100 <col:3> '_Bool' lvalue Var 0x556468dcc1f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556468dd0140 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556468dd0120 <col:20> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556468dd01f0 <line:750:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x556468dd0178 <col:3> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x556468dd01c8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556468dd0198 <col:27> 'int' 1
|   |-CallExpr 0x556468dd0248 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556468dd0230 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dd0210 <col:3> 'void ()' Function 0x556468d72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556468dd02a0 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556468dd0288 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dd0268 <col:3> 'void ()' Function 0x556468d724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556468dd0338 <line:753:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x556468dd02c0 <col:3> '_Bool' lvalue Var 0x556468dcc670 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x556468dd0318 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x556468dd0300 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x556468dd02e0 <col:19> '_Bool (void)' Function 0x556468d71c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x556468dd03d0 <line:754:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x556468dd0358 <col:3> '_Bool' lvalue Var 0x556468dcc6e8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x556468dd03b0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x556468dd0398 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x556468dd0378 <col:19> '_Bool (void)' Function 0x556468d71c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x556468dd0448 <line:755:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x556468dd03f0 <col:3> '_Bool' lvalue Var 0x556468dcbe30 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x556468dd0430 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556468dd0410 <col:21> '_Bool' lvalue Var 0x556468dcc6e8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x556468dd04c0 <line:756:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556468dd0468 <col:3> 'int' lvalue Var 0x556468dcbf20 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x556468dd04a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556468dd0488 <col:15> 'int' lvalue Var 0x556468dcbd98 'y' 'int'
|   |-BinaryOperator 0x556468dd08f8 <line:757:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x556468dd04e0 <col:3> 'int' lvalue Var 0x556468dcbd98 'y' 'int'
|   | `-ConditionalOperator 0x556468dd08c8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x556468dd06f0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x556468dd0610 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x556468dd0538 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x556468dd0520 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x556468dd0500 <col:8> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x556468dd05f0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x556468dd0588 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x556468dd0570 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x556468dd0550 <col:27> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x556468dd05d8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x556468dd05c0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x556468dd05a0 <col:46> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x556468dd06d0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x556468dd0668 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x556468dd0650 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x556468dd0630 <col:65> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x556468dd06b8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x556468dd06a0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x556468dd0680 <col:84> '_Bool' lvalue Var 0x556468dcc1f0 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x556468dd08b0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556468dd0710 <col:101> 'int' lvalue Var 0x556468dcbd98 'y' 'int'
|   |   `-ParenExpr 0x556468dd0890 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x556468dd0860 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x556468dd07d0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556468dd0788 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556468dd0770 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556468dd0730 <col:106> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556468dd07b8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556468dd07a0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556468dd0750 <col:124> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556468dd0830 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556468dd07f0 <col:141> 'int' lvalue Var 0x556468dcc368 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x556468dd0848 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556468dd0810 <col:153> 'int' lvalue Var 0x556468dcc460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x556468dd0e08 <line:758:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556468dd0918 <col:3> 'int' lvalue Var 0x556468dcc368 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x556468dd0dd8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556468dd0da8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556468dd0d90 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556468dd0938 <col:15> '_Bool' lvalue Var 0x556468dcc6e8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556468dd0dc0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556468dd0958 <col:31> 'int' lvalue Var 0x556468dcc368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x556468dd0d70 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556468dd0d40 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556468dd0b68 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556468dd0a88 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556468dd09b0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556468dd0998 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556468dd0978 <col:45> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556468dd0a68 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556468dd0a00 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556468dd09e8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556468dd09c8 <col:64> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x556468dd0a50 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556468dd0a38 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556468dd0a18 <col:83> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556468dd0b48 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556468dd0ae0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556468dd0ac8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556468dd0aa8 <col:102> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x556468dd0b30 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556468dd0b18 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556468dd0af8 <col:121> '_Bool' lvalue Var 0x556468dcc1f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556468dd0d28 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556468dd0b88 <col:138> 'int' lvalue Var 0x556468dcc368 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x556468dd0d08 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556468dd0cd8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556468dd0c48 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556468dd0c00 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556468dd0be8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556468dd0ba8 <col:151> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556468dd0c30 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556468dd0c18 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556468dd0bc8 <col:169> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x556468dd0ca8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556468dd0c68 <col:186> 'int' lvalue Var 0x556468dcc368 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x556468dd0cc0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556468dd0c88 <col:198> 'int' lvalue Var 0x556468dcc368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x556468dd1328 <line:759:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556468dd0e28 <col:3> 'int' lvalue Var 0x556468dcc460 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x556468dd12f8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556468dd12c8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556468dd12b0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556468dd0e48 <col:15> '_Bool' lvalue Var 0x556468dcc6e8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556468dd12e0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556468dd0e68 <col:31> 'int' lvalue Var 0x556468dcc460 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x556468dd1290 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556468dd1260 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556468dd1088 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556468dd0fa8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556468dd0ec0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556468dd0ea8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556468dd0e88 <col:45> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556468dd0f88 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556468dd0f10 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556468dd0ef8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556468dd0ed8 <col:64> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x556468dd0f70 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556468dd0f48 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556468dd0f28 <col:83> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556468dd1068 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556468dd1000 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556468dd0fe8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556468dd0fc8 <col:102> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x556468dd1050 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556468dd1038 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556468dd1018 <col:121> '_Bool' lvalue Var 0x556468dcc1f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556468dd1248 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556468dd10a8 <col:138> 'int' lvalue Var 0x556468dcc460 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x556468dd1228 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556468dd11f8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556468dd1168 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556468dd1120 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556468dd1108 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556468dd10c8 <col:151> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556468dd1150 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556468dd1138 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556468dd10e8 <col:169> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x556468dd11c8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556468dd1188 <col:186> 'int' lvalue Var 0x556468dcc460 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x556468dd11e0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556468dd11a8 <col:198> 'int' lvalue Var 0x556468dcc460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x556468dd18d0 <line:760:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556468dd1348 <col:3> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556468dd18b8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556468dd1888 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556468dd1840 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556468dd1828 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556468dd1368 <col:20> '_Bool' lvalue Var 0x556468dcc6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556468dd1870 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556468dd1858 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556468dd1388 <col:36> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x556468dd1808 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556468dd17d8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556468dd1598 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556468dd14b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556468dd13e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556468dd13c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556468dd13a8 <col:55> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556468dd1498 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556468dd1430 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556468dd1418 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556468dd13f8 <col:74> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x556468dd1480 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556468dd1468 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556468dd1448 <col:93> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556468dd1578 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556468dd1510 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556468dd14f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556468dd14d8 <col:112> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x556468dd1560 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556468dd1548 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556468dd1528 <col:131> '_Bool' lvalue Var 0x556468dcc1f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x556468dd17c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556468dd17a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556468dd15b8 <col:148> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x556468dd1788 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556468dd1758 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556468dd1678 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556468dd1630 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556468dd1618 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556468dd15d8 <col:166> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556468dd1660 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556468dd1648 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556468dd15f8 <col:184> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x556468dd1710 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556468dd16c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556468dd1698 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556468dd1740 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556468dd1728 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556468dd16f0 <col:212> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556468dd1e98 <line:761:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556468dd18f0 <col:3> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556468dd1e80 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556468dd1e50 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556468dd1e08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556468dd1df0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556468dd1910 <col:20> '_Bool' lvalue Var 0x556468dcc6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556468dd1e38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556468dd1e20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556468dd1930 <col:36> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x556468dd1dd0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556468dd1da0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556468dd1b40 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556468dd1a60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556468dd1988 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556468dd1970 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556468dd1950 <col:55> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556468dd1a40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556468dd19d8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556468dd19c0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556468dd19a0 <col:74> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x556468dd1a28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556468dd1a10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556468dd19f0 <col:93> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556468dd1b20 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556468dd1ab8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556468dd1aa0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556468dd1a80 <col:112> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x556468dd1b08 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556468dd1af0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556468dd1ad0 <col:131> '_Bool' lvalue Var 0x556468dcc1f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x556468dd1d88 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556468dd1d70 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556468dd1b60 <col:148> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x556468dd1d50 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556468dd1d20 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556468dd1c20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556468dd1bd8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556468dd1bc0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556468dd1b80 <col:166> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556468dd1c08 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556468dd1bf0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556468dd1ba0 <col:184> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x556468dd1cf0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556468dd1c70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556468dd1c40 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556468dd1d08 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556468dd1cc8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556468dd1c98 <col:219> 'int' 0
|   |-BinaryOperator 0x556468dd2458 <line:762:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556468dd1eb8 <col:3> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556468dd2440 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556468dd2410 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556468dd23c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556468dd23b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556468dd1ed8 <col:20> '_Bool' lvalue Var 0x556468dcc6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556468dd23f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556468dd23e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556468dd1ef8 <col:36> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x556468dd2390 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556468dd2360 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556468dd2120 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556468dd2040 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556468dd1f50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556468dd1f38 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556468dd1f18 <col:55> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556468dd2020 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556468dd1fb8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556468dd1fa0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556468dd1f80 <col:74> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x556468dd2008 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556468dd1ff0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556468dd1fd0 <col:93> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556468dd2100 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556468dd2098 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556468dd2080 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556468dd2060 <col:112> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x556468dd20e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556468dd20d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556468dd20b0 <col:131> '_Bool' lvalue Var 0x556468dcc1f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x556468dd2348 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556468dd2330 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556468dd2140 <col:148> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x556468dd2310 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556468dd22e0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556468dd2200 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556468dd21b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556468dd21a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556468dd2160 <col:166> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556468dd21e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556468dd21d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556468dd2180 <col:184> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x556468dd2298 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556468dd2250 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556468dd2220 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556468dd22c8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556468dd22b0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556468dd2278 <col:212> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556468dd2a20 <line:763:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556468dd2478 <col:3> '_Bool' lvalue Var 0x556468dcc1f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556468dd2a08 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556468dd29d8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556468dd2990 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556468dd2978 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556468dd2498 <col:20> '_Bool' lvalue Var 0x556468dcc6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556468dd29c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556468dd29a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556468dd24b8 <col:36> '_Bool' lvalue Var 0x556468dcc1f0 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x556468dd2958 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556468dd2928 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556468dd26c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556468dd25e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556468dd2510 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556468dd24f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556468dd24d8 <col:55> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556468dd25c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556468dd2560 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556468dd2548 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556468dd2528 <col:74> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x556468dd25b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556468dd2598 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556468dd2578 <col:93> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556468dd26a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556468dd2640 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556468dd2628 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556468dd2608 <col:112> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x556468dd2690 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556468dd2678 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556468dd2658 <col:131> '_Bool' lvalue Var 0x556468dcc1f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x556468dd2910 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556468dd28f8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556468dd26e8 <col:148> '_Bool' lvalue Var 0x556468dcc1f0 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x556468dd28d8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556468dd28a8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556468dd27a8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556468dd2760 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556468dd2748 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556468dd2708 <col:166> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556468dd2790 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556468dd2778 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556468dd2728 <col:184> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x556468dd2878 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556468dd27f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556468dd27c8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556468dd2890 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556468dd2850 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556468dd2820 <col:219> 'int' 0
|   |-BinaryOperator 0x556468dd2a98 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556468dd2a40 <col:3> 'int' lvalue Var 0x556468dcb948 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x556468dd2a80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556468dd2a60 <col:25> 'int' lvalue Var 0x556468dcbd98 'y' 'int'
|   |-BinaryOperator 0x556468dd2bc8 <line:765:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x556468dd2ab8 <col:3> 'int' lvalue Var 0x556468dcbd98 'y' 'int'
|   | `-ConditionalOperator 0x556468dd2b98 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x556468dd2b50 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556468dd2b38 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556468dd2ad8 <col:7> '_Bool' lvalue Var 0x556468dcbe30 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x556468dd2b68 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556468dd2af8 <col:25> 'int' lvalue Var 0x556468dcbf20 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x556468dd2b80 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x556468dd2b18 <col:37> 'int' lvalue Var 0x556468dcbd98 'y' 'int'
|   |-BinaryOperator 0x556468dd2c60 <line:766:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x556468dd2be8 <col:3> '_Bool' lvalue Var 0x556468dcbe30 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x556468dd2c38 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556468dd2c08 <col:28> 'int' 0
|   |-CallExpr 0x556468dd2cb8 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556468dd2ca0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dd2c80 <col:3> 'void ()' Function 0x556468d72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556468dd2d10 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556468dd2cf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dd2cd8 <col:3> 'void ()' Function 0x556468d724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556468dd2d88 <line:769:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556468dd2d30 <col:3> 'int' lvalue Var 0x556468dcba68 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x556468dd2d70 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556468dd2d50 <col:25> 'int' lvalue Var 0x556468dcc5d8 'z' 'int'
|   |-CallExpr 0x556468dd2de0 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556468dd2dc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dd2da8 <col:3> 'void ()' Function 0x556468d72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556468dd2e38 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556468dd2e20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dd2e00 <col:3> 'void ()' Function 0x556468d724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556468dd3138 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556468dd2e58 <col:3> 'int' lvalue Var 0x556468dcbd98 'y' 'int'
|   | `-ConditionalOperator 0x556468dd3108 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556468dd2f18 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556468dd2ed0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556468dd2eb8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556468dd2e78 <col:7> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556468dd2f00 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556468dd2ee8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556468dd2e98 <col:25> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x556468dd30f0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556468dd2f38 <col:42> 'int' lvalue Var 0x556468dcc368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x556468dd30d0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556468dd30a0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556468dd3010 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556468dd2fc8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556468dd2fb0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556468dd2f58 <col:55> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556468dd2ff8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556468dd2fe0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556468dd2f90 <col:73> '_Bool' lvalue Var 0x556468dcc1f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556468dd3070 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556468dd3030 <col:90> 'int' lvalue Var 0x556468dcc460 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556468dd3088 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556468dd3050 <col:102> 'int' lvalue Var 0x556468dcbd98 'y' 'int'
|   |-BinaryOperator 0x556468dd3340 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556468dd3158 <col:3> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556468dd3328 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556468dd32f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556468dd3218 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556468dd31d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556468dd31b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556468dd3178 <col:20> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556468dd3200 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556468dd31e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556468dd3198 <col:38> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556468dd32b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556468dd3268 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556468dd3238 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556468dd32e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556468dd32c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556468dd3290 <col:66> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556468dd3628 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556468dd3360 <col:3> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556468dd3610 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556468dd35e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556468dd3500 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556468dd3420 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556468dd33d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556468dd33c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556468dd3380 <col:20> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556468dd3408 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556468dd33f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556468dd33a0 <col:38> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x556468dd34e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556468dd3498 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556468dd3480 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556468dd3440 <col:56> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556468dd34c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556468dd34b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556468dd3460 <col:74> '_Bool' lvalue Var 0x556468dcc1f0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556468dd3598 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556468dd3550 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556468dd3520 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556468dd35c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556468dd35b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556468dd3578 <col:102> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556468dd3830 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556468dd3648 <col:3> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556468dd3818 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556468dd37e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556468dd3708 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556468dd36c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556468dd36a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556468dd3668 <col:20> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556468dd36f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556468dd36d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556468dd3688 <col:38> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556468dd37a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556468dd3758 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556468dd3728 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556468dd37d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556468dd37b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556468dd3780 <col:66> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556468dd3b18 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556468dd3850 <col:3> '_Bool' lvalue Var 0x556468dcc1f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556468dd3b00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556468dd3ad0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556468dd39f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556468dd3910 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556468dd38c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556468dd38b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556468dd3870 <col:20> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556468dd38f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556468dd38e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556468dd3890 <col:38> '_Bool' lvalue Var 0x556468dcc088 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x556468dd39d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556468dd3988 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556468dd3970 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556468dd3930 <col:56> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556468dd39b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556468dd39a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556468dd3950 <col:74> '_Bool' lvalue Var 0x556468dcc1f0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556468dd3a88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556468dd3a40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556468dd3a10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556468dd3ab8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556468dd3aa0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556468dd3a68 <col:102> '_Bool' lvalue Var 0x556468dcc1f0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x556468dd3b70 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556468dd3b58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dd3b38 <col:3> 'void ()' Function 0x556468d72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556468dd3bc8 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556468dd3bb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dd3b90 <col:3> 'void ()' Function 0x556468d724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556468dd3c80 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556468dd3be8 <col:3> 'int' lvalue Var 0x556468dcb5e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556468dd3c60 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556468dd3c48 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556468dd3c08 <col:22> 'int' lvalue Var 0x556468dcb5e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556468dd3c28 <col:41> 'int' 1
|   |-CallExpr 0x556468dd3cd8 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556468dd3cc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556468dd3ca0 <col:3> 'void ()' Function 0x556468d72570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556468dd3d50 <line:781:3, col:36>
|     `-CallExpr 0x556468dd3d30 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556468dd3d18 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556468dd3cf8 <col:10> 'void *(void)' Function 0x556468d71fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556468dd3ed8 prev 0x556468dcb330 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x556468dd3f78 <line:784:1, line:785:1>
|-FunctionDecl 0x556468dd3fc0 prev 0x556468dcb3f0 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x556468dd4060 <line:787:1, line:788:1>
|-FunctionDecl 0x556468dd4090 prev 0x556468dcb4b0 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x556468dd4130 <line:790:1, line:791:1>
`-FunctionDecl 0x556468dd4198 <line:792:1, line:814:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x556468dd5be0 <line:793:1, line:814:1>
    |-DeclStmt 0x556468dd42b0 <line:794:3, col:17>
    | `-VarDecl 0x556468dd4248 <col:3, col:13> col:13 used t253 'pthread_t':'unsigned long'
    |-CallExpr 0x556468dd44b8 <line:795:3, col:53> 'int'
    | |-ImplicitCastExpr 0x556468dd44a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556468dd42c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556468db29d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556468dd4308 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556468dd42e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556468dd4248 't253' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556468dd44f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556468dd4380 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x556468dd4358 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556468dd4320 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x556468dd4510 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556468dd43a0 <col:38> 'void *(void *)' Function 0x556468dcc800 'P0' 'void *(void *)'
    | `-ParenExpr 0x556468dd4420 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x556468dd43f8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556468dd43c0 <col:51> 'int' 0
    |-DeclStmt 0x556468dd45a0 <line:796:3, col:17>
    | `-VarDecl 0x556468dd4538 <col:3, col:13> col:13 used t254 'pthread_t':'unsigned long'
    |-CallExpr 0x556468dd4748 <line:797:3, col:53> 'int'
    | |-ImplicitCastExpr 0x556468dd4730 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556468dd45b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556468db29d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556468dd45f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556468dd45d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556468dd4538 't254' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556468dd4788 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556468dd4670 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x556468dd4648 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556468dd4610 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x556468dd47a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556468dd4690 <col:38> 'void *(void *)' Function 0x556468dcfb70 'P1' 'void *(void *)'
    | `-ParenExpr 0x556468dd4710 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x556468dd46e8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556468dd46b0 <col:51> 'int' 0
    |-CallExpr 0x556468dd47f0 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556468dd47d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556468dd47b8 <col:3> 'void ()' Function 0x556468d724b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556468dd48c0 <line:799:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x556468dd4810 <col:3> '_Bool' lvalue Var 0x556468dcbb00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x556468dd48a8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x556468dd4888 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x556468dd4870 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x556468dd4830 <col:21> 'int' lvalue Var 0x556468dcb5e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x556468dd4850 <col:41> 'int' 2
    |-CallExpr 0x556468dd4918 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556468dd4900 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556468dd48e0 <col:3> 'void ()' Function 0x556468d72570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556468dd4990 <line:801:3, col:36> 'void'
    | |-ImplicitCastExpr 0x556468dd4978 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556468dd4938 <col:3> 'void (int)' Function 0x556468d71e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x556468dd49d0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x556468dd49b8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x556468dd4958 <col:21> '_Bool' lvalue Var 0x556468dcbb00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x556468dd4a20 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556468dd4a08 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556468dd49e8 <col:3> 'void ()' Function 0x556468d724b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556468dd4d08 <line:803:3, col:103> 'int' '='
    | |-DeclRefExpr 0x556468dd4a40 <col:3> 'int' lvalue Var 0x556468dcbd98 'y' 'int'
    | `-ConditionalOperator 0x556468dd4cd8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x556468dd4b00 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x556468dd4ab8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x556468dd4aa0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x556468dd4a60 <col:7> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x556468dd4ae8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x556468dd4ad0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x556468dd4a80 <col:25> '_Bool' lvalue Var 0x556468dcbf98 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x556468dd4cc0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x556468dd4b20 <col:42> 'int' lvalue Var 0x556468dcc368 'y$w_buff0' 'int'
    |   `-ParenExpr 0x556468dd4ca0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x556468dd4c70 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x556468dd4be0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x556468dd4b98 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x556468dd4b80 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x556468dd4b40 <col:55> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x556468dd4bc8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x556468dd4bb0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x556468dd4b60 <col:73> '_Bool' lvalue Var 0x556468dcc100 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x556468dd4c40 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x556468dd4c00 <col:90> 'int' lvalue Var 0x556468dcc460 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x556468dd4c58 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x556468dd4c20 <col:102> 'int' lvalue Var 0x556468dcbd98 'y' 'int'
    |-BinaryOperator 0x556468dd4f10 <line:804:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x556468dd4d28 <col:3> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x556468dd4ef8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556468dd4ec8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x556468dd4de8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x556468dd4da0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x556468dd4d88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x556468dd4d48 <col:20> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x556468dd4dd0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x556468dd4db8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x556468dd4d68 <col:38> '_Bool' lvalue Var 0x556468dcbf98 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556468dd4e80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556468dd4e38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556468dd4e08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x556468dd4eb0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556468dd4e98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556468dd4e60 <col:66> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x556468dd5218 <line:805:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x556468dd4f30 <col:3> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x556468dd5200 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556468dd51d0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x556468dd50f0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x556468dd5010 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x556468dd4fc8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x556468dd4fb0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x556468dd4f50 <col:20> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x556468dd4ff8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x556468dd4fe0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x556468dd4f70 <col:38> '_Bool' lvalue Var 0x556468dcbf98 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x556468dd50d0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x556468dd5088 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x556468dd5070 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x556468dd5030 <col:56> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x556468dd50b8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x556468dd50a0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x556468dd5050 <col:74> '_Bool' lvalue Var 0x556468dcc100 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556468dd5188 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556468dd5140 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556468dd5110 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x556468dd51b8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556468dd51a0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556468dd5168 <col:102> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x556468dd5420 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x556468dd5238 <col:3> '_Bool' lvalue Var 0x556468dcbf98 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x556468dd5408 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556468dd53d8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x556468dd52f8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x556468dd52b0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x556468dd5298 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x556468dd5258 <col:20> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x556468dd52e0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x556468dd52c8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x556468dd5278 <col:38> '_Bool' lvalue Var 0x556468dcbf98 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556468dd5390 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556468dd5348 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556468dd5318 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x556468dd53c0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556468dd53a8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556468dd5370 <col:66> '_Bool' lvalue Var 0x556468dcbf98 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x556468dd5708 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x556468dd5440 <col:3> '_Bool' lvalue Var 0x556468dcc100 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x556468dd56f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556468dd56c0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x556468dd55e0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x556468dd5500 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x556468dd54b8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x556468dd54a0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x556468dd5460 <col:20> '_Bool' lvalue Var 0x556468dcc3e0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x556468dd54e8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x556468dd54d0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x556468dd5480 <col:38> '_Bool' lvalue Var 0x556468dcbf98 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x556468dd55c0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x556468dd5578 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x556468dd5560 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x556468dd5520 <col:56> '_Bool' lvalue Var 0x556468dcc4d8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x556468dd55a8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x556468dd5590 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x556468dd5540 <col:74> '_Bool' lvalue Var 0x556468dcc100 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556468dd5678 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556468dd5630 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556468dd5600 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x556468dd56a8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556468dd5690 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556468dd5658 <col:102> '_Bool' lvalue Var 0x556468dcc100 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x556468dd5760 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556468dd5748 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556468dd5728 <col:3> 'void ()' Function 0x556468d72570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556468dd57b8 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556468dd57a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556468dd5780 <col:3> 'void ()' Function 0x556468d724b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556468dd5a88 <line:810:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x556468dd57d8 <col:3> '_Bool' lvalue Var 0x556468dcbb78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x556468dd5a70 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x556468dd5a58 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x556468dd5a38 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x556468dd5a18 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x556468dd5980 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x556468dd58e8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x556468dd5850 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x556468dd5838 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x556468dd57f8 <col:23> 'int' lvalue Var 0x556468dcb708 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x556468dd5818 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x556468dd58c8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x556468dd58b0 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x556468dd5870 <col:51> 'int' lvalue Var 0x556468dcb828 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x556468dd5890 <col:74> 'int' 0
    |         | `-BinaryOperator 0x556468dd5960 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x556468dd5948 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x556468dd5908 <col:79> 'int' lvalue Var 0x556468dcb948 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x556468dd5928 <col:102> 'int' 1
    |         `-BinaryOperator 0x556468dd59f8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x556468dd59e0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x556468dd59a0 <col:107> 'int' lvalue Var 0x556468dcba68 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x556468dd59c0 <col:130> 'int' 0
    |-CallExpr 0x556468dd5ae0 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556468dd5ac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556468dd5aa8 <col:3> 'void ()' Function 0x556468d72570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556468dd5b58 <line:812:3, col:36> 'void'
    | |-ImplicitCastExpr 0x556468dd5b40 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556468dd5b00 <col:3> 'void (int)' Function 0x556468d72238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x556468dd5b98 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x556468dd5b80 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x556468dd5b20 <col:21> '_Bool' lvalue Var 0x556468dcbb78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x556468dd5bd0 <line:813:3, col:10>
      `-IntegerLiteral 0x556468dd5bb0 <col:10> 'int' 0
