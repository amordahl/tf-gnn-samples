TranslationUnitDecl 0x562dbdf61f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x562dbdf62848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x562dbdf62520 '__int128'
|-TypedefDecl 0x562dbdf628b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x562dbdf62540 'unsigned __int128'
|-TypedefDecl 0x562dbdf62bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x562dbdf62990 'struct __NSConstantString_tag'
|   `-Record 0x562dbdf62910 '__NSConstantString_tag'
|-TypedefDecl 0x562dbdf62c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x562dbdf62c20 'char *'
|   `-BuiltinType 0x562dbdf62020 'char'
|-TypedefDecl 0x562dbdfa1b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x562dbdf62f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x562dbdf62d40 'struct __va_list_tag'
|     `-Record 0x562dbdf62cc0 '__va_list_tag'
|-FunctionDecl 0x562dbdfa1ca0 <pthread-wmm/mix002_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x562dbdfa1bd0 <col:31> col:34 'int'
|-FunctionDecl 0x562dbdfa1e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x562dbdfa1f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x562dbdfa20d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x562dbdfa2048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x562dbdfa2308 <col:40, col:99>
|   |-IfStmt 0x562dbdfa22d8 <col:42, col:88>
|   | |-UnaryOperator 0x562dbdfa21b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x562dbdfa21a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x562dbdfa2180 <col:47> 'int' lvalue ParmVar 0x562dbdfa2048 'expression' 'int'
|   | `-CompoundStmt 0x562dbdfa22c0 <col:59, col:88>
|   |   `-LabelStmt 0x562dbdfa22a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x562dbdfa2238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x562dbdfa2220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x562dbdfa21d0 <col:68> 'void () __attribute__((noreturn))' Function 0x562dbdfa1f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x562dbdfa22f0 <col:89>
|   `-ReturnStmt 0x562dbdfa22f8 <col:91>
|-FunctionDecl 0x562dbdfa2350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x562dbdfa2410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x562dbdfa2790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562dbdfa24c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x562dbdfa2548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x562dbdfa25c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562dbdfa2648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562dbdfa2850 <line:10:22>
|-FunctionDecl 0x562dbdfc88a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562dbdfa28c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x562dbdfa2940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x562dbdfa29c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562dbdfa2a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562dbdfc8960 <line:13:22>
|-FunctionDecl 0x562dbdfc8c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562dbdfc89d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x562dbdfc8a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x562dbdfc8ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x562dbdfc8cc8 <line:15:22>
|-TypedefDecl 0x562dbdfc8d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x562dbdf620e0 'unsigned char'
|-TypedefDecl 0x562dbdfc8da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x562dbdf62100 'unsigned short'
|-TypedefDecl 0x562dbdfc8e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x562dbdf62120 'unsigned int'
|-TypedefDecl 0x562dbdfc8e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-TypedefDecl 0x562dbdfc8ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x562dbdf62040 'signed char'
|-TypedefDecl 0x562dbdfc8f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x562dbdf620e0 'unsigned char'
|-TypedefDecl 0x562dbdfc8fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x562dbdf62060 'short'
|-TypedefDecl 0x562dbdfc9048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x562dbdf62100 'unsigned short'
|-TypedefDecl 0x562dbdfc90b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x562dbdf62080 'int'
|-TypedefDecl 0x562dbdfc9128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x562dbdf62120 'unsigned int'
|-TypedefDecl 0x562dbdfc9198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfc9208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-TypedefDecl 0x562dbdfc9278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfc92e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-TypedefDecl 0x562dbdfc9358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-TypedefDecl 0x562dbdfc93c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x562dbdf62120 'unsigned int'
|-TypedefDecl 0x562dbdfc9438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x562dbdf62120 'unsigned int'
|-TypedefDecl 0x562dbdfc94a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-TypedefDecl 0x562dbdfc9518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-TypedefDecl 0x562dbdfc9588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x562dbdf62120 'unsigned int'
|-TypedefDecl 0x562dbdfc95f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-TypedefDecl 0x562dbdfc9668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfc96d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfc9748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x562dbdf62080 'int'
|-RecordDecl 0x562dbdfc97a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x562dbdfc9918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x562dbdfc99d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x562dbdfc9970 'struct __fsid_t' sugar
|   `-RecordType 0x562dbdfc9820 '__fsid_t'
|     `-Record 0x562dbdfc97a0 ''
|-TypedefDecl 0x562dbdfc9a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfc9ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-TypedefDecl 0x562dbdfc9b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-TypedefDecl 0x562dbdfc9ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x562dbdf62120 'unsigned int'
|-TypedefDecl 0x562dbdfc9c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfc9c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x562dbdf62120 'unsigned int'
|-TypedefDecl 0x562dbdfc9cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfc9d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x562dbdf62080 'int'
|-TypedefDecl 0x562dbdfc9dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x562dbdf62080 'int'
|-TypedefDecl 0x562dbdfc9e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x562dbdf62080 'int'
|-TypedefDecl 0x562dbdfc9eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x562dbdf627a0 'void *'
|   `-BuiltinType 0x562dbdf61fe0 'void'
|-TypedefDecl 0x562dbdfc9f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfc9f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfca008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfca078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-TypedefDecl 0x562dbdfca0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-TypedefDecl 0x562dbdfca158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-TypedefDecl 0x562dbdfca1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-TypedefDecl 0x562dbdfca238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfca2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfca318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfca388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-TypedefDecl 0x562dbdfca418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x562dbdfca3e0 '__off64_t' sugar
|   |-Typedef 0x562dbdfc96d8 '__off64_t'
|   `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfca510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x562dbdfca4d0 '__quad_t *'
|   `-TypedefType 0x562dbdfca470 '__quad_t' sugar
|     |-Typedef 0x562dbdfc9278 '__quad_t'
|     `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfca580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x562dbdf62c20 'char *'
|   `-BuiltinType 0x562dbdf62020 'char'
|-TypedefDecl 0x562dbdfca5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfca660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x562dbdf62120 'unsigned int'
|-FunctionDecl 0x562dbdfca7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x562dbdfca6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x562dbdfcaae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x562dbdfcaad8 <line:72:3, col:34>
|     `-CallExpr 0x562dbdfcaa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x562dbdfcaa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562dbdfcaa10 <col:10> '<builtin fn type>' Function 0x562dbdfca880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x562dbdfcaac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x562dbdfcaa30 <col:29> 'unsigned int' lvalue ParmVar 0x562dbdfca6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x562dbdfca880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x562dbdfca920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x562dbdfca990 <col:10> Implicit
| `-ConstAttr 0x562dbdfca9e8 <col:10> Implicit
|-FunctionDecl 0x562dbdfcac40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x562dbdfcab38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x562dbdfcaf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x562dbdfcaf48 <line:77:3, col:34>
|     `-CallExpr 0x562dbdfcaf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x562dbdfcaef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562dbdfcae78 <col:10> '<builtin fn type>' Function 0x562dbdfcace8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x562dbdfcaf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x562dbdfcae98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x562dbdfcab38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x562dbdfcace8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x562dbdfcad88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x562dbdfcadf8 <col:10> Implicit
| `-ConstAttr 0x562dbdfcae50 <col:10> Implicit
|-TypedefDecl 0x562dbdfcaf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-TypedefDecl 0x562dbdfcb018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x562dbdfcafe0 '__time_t' sugar
|   |-Typedef 0x562dbdfc9c18 '__time_t'
|   `-BuiltinType 0x562dbdf620a0 'long'
|-RecordDecl 0x562dbdfcb070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x562dbdfcb128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x562dbdfcb1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x562dbdfcb248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x562dbdfcb210 '__pid_t' sugar
|   |-Typedef 0x562dbdfc9748 '__pid_t'
|   `-BuiltinType 0x562dbdf62080 'int'
|-RecordDecl 0x562dbdfcb2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x562dbdfcb360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x562dbdfcb3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x562dbdfcb470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x562dbdfcb4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-RecordDecl 0x562dbdfcb530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x562dbdfcb7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x562dbdfcd8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x562dbdfcb810 'struct cpu_set_t' sugar
|   `-RecordType 0x562dbdfcb5b0 'cpu_set_t'
|     `-Record 0x562dbdfcb530 ''
|-FunctionDecl 0x562dbdfcdb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x562dbdfcd958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562dbdfcda60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x562dbdfcdc38 <line:107:19>
|-FunctionDecl 0x562dbdfcde10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x562dbdfcdca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x562dbdfcdeb8 <col:69>
|-FunctionDecl 0x562dbdfce030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x562dbdfcdf20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x562dbdfce0d8 <col:64>
|-FunctionDecl 0x562dbdfce398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x562dbdfce140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562dbdfce278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562dbdfce448 <line:113:22>
|-FunctionDecl 0x562dbdfce6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x562dbdfce4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562dbdfce5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x562dbdfce778 <col:88>
|-FunctionDecl 0x562dbdfcea98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562dbdfce7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562dbdfce8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x562dbdfce950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562dbdfceb50 <col:62>
|-FunctionDecl 0x562dbdfcecc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x562dbdfcebb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x562dbdfced70 <col:63>
|-FunctionDecl 0x562dbdfcee98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x562dbdfcef38 <col:47>
|-FunctionDecl 0x562dbdfcf040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x562dbdfcefa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562dbdfcf0e8 <col:69>
|-FunctionDecl 0x562dbdfcf1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x562dbdfcf158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562dbdfcf298 <col:69>
|-FunctionDecl 0x562dbdfcf558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562dbdfcf300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562dbdfcf438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x562dbdfcf608 <col:88>
|-TypedefDecl 0x562dbdfcf698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x562dbdfcf660 '__clock_t' sugar
|   |-Typedef 0x562dbdfc9a58 '__clock_t'
|   `-BuiltinType 0x562dbdf620a0 'long'
|-TypedefDecl 0x562dbdfcf728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x562dbdfcf6f0 '__clockid_t' sugar
|   |-Typedef 0x562dbdfc9e48 '__clockid_t'
|   `-BuiltinType 0x562dbdf62080 'int'
|-TypedefDecl 0x562dbdfcf7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x562dbdfcf780 '__timer_t' sugar
|   |-Typedef 0x562dbdfc9eb8 '__timer_t'
|   `-PointerType 0x562dbdf627a0 'void *'
|     `-BuiltinType 0x562dbdf61fe0 'void'
|-RecordDecl 0x562dbdfcf810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x562dbdfcf8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x562dbdfcf950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x562dbdfcf9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x562dbdfcfa20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x562dbdfcfa88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x562dbdfcfaf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x562dbdfcfb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x562dbdfcfbc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x562dbdfcfc28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x562dbdfcfc90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x562dbdfcfcf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x562dbdfcfd48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x562dbdfcfe18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x562dbdfcfe88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x562dbdfcff30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x562dbdfd0100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x562dbdfd01a0 <col:45>
|-FunctionDecl 0x562dbdfd0380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x562dbdfd0270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x562dbdfd0428 <col:54>
|-FunctionDecl 0x562dbdfd0628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x562dbdfd0490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x562dbdfd0508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x562dbdfd06d8 <line:157:22>
| `-ConstAttr 0x562dbdfd0730 <col:63>
|-FunctionDecl 0x562dbdfd1560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562dbdfd0828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562dbdfd1608 <col:56>
|-FunctionDecl 0x562dbdfd19b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x562dbdfd1678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x562dbdfd16f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562dbdfd1770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x562dbdfd1868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x562dbdfd1a70 <col:54>
|-RecordDecl 0x562dbdfd1ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x562dbdfd1b78 parent 0x562dbdf61f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x562dbdfd1dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x562dbdfd1e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x562dbdfd1ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x562dbdfd1f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x562dbdfd2038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x562dbdfd2158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x562dbdfd2100 'struct __locale_struct *'
|   `-ElaboratedType 0x562dbdfd2090 'struct __locale_struct' sugar
|     `-RecordType 0x562dbdfd1b50 'struct __locale_struct'
|       `-Record 0x562dbdfd1ac8 '__locale_struct'
|-TypedefDecl 0x562dbdfd2208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x562dbdfd21d0 '__locale_t' sugar
|   |-Typedef 0x562dbdfd2158 '__locale_t'
|   `-PointerType 0x562dbdfd2100 'struct __locale_struct *'
|     `-ElaboratedType 0x562dbdfd2090 'struct __locale_struct' sugar
|       `-RecordType 0x562dbdfd1b50 'struct __locale_struct'
|         `-Record 0x562dbdfd1ac8 '__locale_struct'
|-FunctionDecl 0x562dbdfd2610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x562dbdfd2278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x562dbdfd22f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562dbdfd2370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x562dbdfd2400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562dbdfd2478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x562dbdfd26d8 <col:40>
|-FunctionDecl 0x562dbdfd28c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562dbdfd27a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x562dbdfd2970 <col:66>
|-FunctionDecl 0x562dbdfd2a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562dbdfd29d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x562dbdfd2b28 <col:69>
|-FunctionDecl 0x562dbdfd2d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562dbdfd2b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562dbdfd2c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562dbdfd2e08 <col:52>
|-FunctionDecl 0x562dbdfd2fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562dbdfd2e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562dbdfd2f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562dbdfd3060 <col:55>
|-FunctionDecl 0x562dbdfd31f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x562dbdfd30e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x562dbdfd32a0 <col:62>
|-FunctionDecl 0x562dbdfd3418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x562dbdfd3308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x562dbdfd34c0 <col:60>
|-FunctionDecl 0x562dbdfd3718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562dbdfd3578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562dbdfd35f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x562dbdfd37c8 <col:44>
|-FunctionDecl 0x562dbdfd39d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562dbdfd3830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562dbdfd38b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x562dbdfd3a88 <col:49>
|-VarDecl 0x562dbdfd3b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x562dbdfd3c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x562dbdfd3c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x562dbdfd3d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x562dbdfd3e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x562dbdfd3f20 <col:42>
|-VarDecl 0x562dbdfd3f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x562dbdfd4010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x562dbdfd4198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x562dbdfd4088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x562dbdfd4240 <col:57>
|-FunctionDecl 0x562dbdfd4350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562dbdfd42c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562dbdfd43f8 <col:56>
|-FunctionDecl 0x562dbdfd5540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562dbdfd4478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x562dbdfd55e8 <col:59>
|-FunctionDecl 0x562dbdfd56f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x562dbdfd5658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x562dbdfd5798 <col:48>
| `-ConstAttr 0x562dbdfd57f0 <col:89>
|-FunctionDecl 0x562dbdfd5a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562dbdfd58a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x562dbdfd5938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x562dbdfd5cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562dbdfd5b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562dbdfd5bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x562dbdfd5d68 <col:88>
|-FunctionDecl 0x562dbdfd5f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562dbdfd5dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562dbdfd5e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x562dbdfd5fb0 <col:88>
|-FunctionDecl 0x562dbdfd61c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x562dbdfd6018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562dbdfd60a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x562dbdfd6278 <line:208:22>
|-FunctionDecl 0x562dbdfd65e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562dbdfd62e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562dbdfd6360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x562dbdfd63f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x562dbdfd6480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x562dbdfd68e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x562dbdfd66e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x562dbdfd67c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x562dbdfd6998 <col:85>
|-FunctionDecl 0x562dbdfd6d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x562dbdfd6a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562dbdfd6b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x562dbdfd6c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x562dbdfd6e40 <col:52>
|-FunctionDecl 0x562dbdfd6fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x562dbdfd6ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562dbdfd7060 <col:61>
|-FunctionDecl 0x562dbdfd7560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x562dbdfd70c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562dbdfd7148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x562dbdfd7278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x562dbdfd7368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x562dbdfd7620 <col:62>
|-FunctionDecl 0x562dbdfd7838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x562dbdfd7688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562dbdfd7718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x562dbdfd78e8 <line:221:22>
|-FunctionDecl 0x562dbdfd79e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x562dbdfd7950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562dbdfd7a90 <col:65>
|-TypedefDecl 0x562dbdfd7b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x562dbdf62140 'unsigned long'
|-RecordDecl 0x562dbdfd7b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x562dbdfd7ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562dbdfd7d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562dbdfd7db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x562dbdfd7d60 'union pthread_attr_t' sugar
|   `-RecordType 0x562dbdfd7be0 'union pthread_attr_t'
|     `-Record 0x562dbdfd7b58 'pthread_attr_t'
|-RecordDecl 0x562dbdfd7e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x562dbdfd7f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x562dbdfd8000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x562dbdfd80b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x562dbdfd8050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x562dbdfd7e90 'struct __pthread_internal_list'
|     `-Record 0x562dbdfd7e10 '__pthread_internal_list'
|-RecordDecl 0x562dbdfd8120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x562dbdfd81c8 parent 0x562dbdf61f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x562dbdfd82a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562dbdfd8308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x562dbdfd8370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x562dbdfd83d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x562dbdfd8440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x562dbdfd84a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x562dbdfdc580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x562dbdfdc630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x562dbdfdc720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x562dbdfdc788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562dbdfdc910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x562dbdfdc8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x562dbdfd81a0 'pthread_mutex_t'
|     `-Record 0x562dbdfd8120 ''
|-RecordDecl 0x562dbdfdc980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x562dbdfdcac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562dbdfdcb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562dbdfdcbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x562dbdfdcb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x562dbdfdca00 'pthread_mutexattr_t'
|     `-Record 0x562dbdfdc980 ''
|-RecordDecl 0x562dbdfdcc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x562dbdfdccf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x562dbdfdcdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562dbdfdce28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x562dbdfdce90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x562dbdfdcef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x562dbdfdcf60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x562dbdfdcfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x562dbdfdd030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x562dbdfdd098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x562dbdfdd150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix002_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix002_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x562dbdfdd240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x562dbdfdd2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x562dbdfdd3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x562dbdfdd380 'union pthread_cond_t' sugar
|   `-RecordType 0x562dbdfdccd0 'pthread_cond_t'
|     `-Record 0x562dbdfdcc50 ''
|-RecordDecl 0x562dbdfdd450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x562dbdfdd590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562dbdfdd5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562dbdfdd6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x562dbdfdd650 'union pthread_condattr_t' sugar
|   `-RecordType 0x562dbdfdd4d0 'pthread_condattr_t'
|     `-Record 0x562dbdfdd450 ''
|-TypedefDecl 0x562dbdfdd738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x562dbdf62120 'unsigned int'
|-TypedefDecl 0x562dbdfdd7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x562dbdf62080 'int'
|-RecordDecl 0x562dbdfdd800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x562dbdfdd8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x562dbdfdd970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562dbdfdd9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x562dbdfdda40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x562dbdfddaa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x562dbdfddb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x562dbdfddb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x562dbdfddbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x562dbdfddc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x562dbdfddcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x562dbdfddd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x562dbdfddd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x562dbdfdde30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix002_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix002_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x562dbdfdded8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562dbdfddf40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562dbdfde090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x562dbdfde030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x562dbdfdd880 'pthread_rwlock_t'
|     `-Record 0x562dbdfdd800 ''
|-RecordDecl 0x562dbdfde100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x562dbdfde240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x562dbdfde2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562dbdfde360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x562dbdfde300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x562dbdfde180 'pthread_rwlockattr_t'
|     `-Record 0x562dbdfde100 ''
|-TypedefDecl 0x562dbdfde3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x562dbdf62084 'volatile int' volatile
|   `-BuiltinType 0x562dbdf62080 'int'
|-RecordDecl 0x562dbdfde440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x562dbdfe05b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x562dbdfe0618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562dbdfe06d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x562dbdfe0670 'union pthread_barrier_t' sugar
|   `-RecordType 0x562dbdfde4c0 'pthread_barrier_t'
|     `-Record 0x562dbdfde440 ''
|-RecordDecl 0x562dbdfe0740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x562dbdfe0840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562dbdfe08a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562dbdfe0960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x562dbdfe0900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x562dbdfe07c0 'pthread_barrierattr_t'
|     `-Record 0x562dbdfe0740 ''
|-TypedefDecl 0x562dbdfe0a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x562dbdfe0a10 'long [8]' 8 
|   `-BuiltinType 0x562dbdf620a0 'long'
|-EnumDecl 0x562dbdfe0ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x562dbdfe0b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x562dbdfe0be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x562dbdfe0c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x562dbdfe0d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x562dbdfe0d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x562dbdfe0da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x562dbdfe0df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x562dbdfe0e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x562dbdfe0e68 <col:26> 'int'
| |   `-DeclRefExpr 0x562dbdfe0e48 <col:26> 'int' EnumConstant 0x562dbdfe0d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x562dbdfe0f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x562dbdfe0ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x562dbdfe0ed0 <col:29> 'int' EnumConstant 0x562dbdfe0d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x562dbdfe0f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x562dbdfe0f78 <col:30> 'int'
| |   `-DeclRefExpr 0x562dbdfe0f58 <col:30> 'int' EnumConstant 0x562dbdfe0da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x562dbdfe1018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x562dbdfe1000 <col:27> 'int'
|     `-DeclRefExpr 0x562dbdfe0fe0 <col:27> 'int' EnumConstant 0x562dbdfe0e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x562dbdfe1068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x562dbdfe1138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x562dbdfe11c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x562dbdfe11a8 <col:30> 'int'
| |   `-DeclRefExpr 0x562dbdfe1188 <col:30> 'int' EnumConstant 0x562dbdfe1138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x562dbdfe1210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x562dbdfe1298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x562dbdfe1280 <col:29> 'int'
|     `-DeclRefExpr 0x562dbdfe1260 <col:29> 'int' EnumConstant 0x562dbdfe1210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x562dbdfe12e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x562dbdfe13b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x562dbdfe1408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x562dbdfe1458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x562dbdfe14a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x562dbdfe15c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x562dbdfe1610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x562dbdfe1660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x562dbdfe16e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x562dbdfe16d0 <col:31> 'int'
|     `-DeclRefExpr 0x562dbdfe16b0 <col:31> 'int' EnumConstant 0x562dbdfe15c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x562dbdfe1738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x562dbdfe1808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x562dbdfe1858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x562dbdfe18a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x562dbdfe1978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x562dbdfe19c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x562dbdfe1a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x562dbdfe1ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x562dbdfe1b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x562dbdfe1b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x562dbdfe1dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x562dbdfe1e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x562dbdfe1e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x562dbdfe1fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x562dbdfe2008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x562dbdfe20d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x562dbdfe2128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x562dbdfe2178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x562dbdfe2248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x562dbdfe2298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x562dbdfe28f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x562dbdfe2390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x562dbdfe24a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562dbdfe26e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x562dbdfe2760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x562dbdfe29b8 <col:47>
| |-NonNullAttr 0x562dbdfe2a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x562dbdfe2a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x562dbdfe2b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x562dbdfe2aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x562dbdfe2dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x562dbdfe2c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x562dbdfe2ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x562dbdfe2f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x562dbdfe2e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x562dbdfe3040 <col:60>
|-FunctionDecl 0x562dbdfe3190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x562dbdfe3230 <col:54>
| `-ConstAttr 0x562dbdfe3288 <col:95>
|-FunctionDecl 0x562dbdfe3458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x562dbdfe32c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562dbdfe3338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x562dbdfe3508 <line:394:19>
| `-ConstAttr 0x562dbdfe3560 <col:60>
|-FunctionDecl 0x562dbdfe3f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562dbdfe3e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562dbdfe4010 <col:71>
| `-NonNullAttr 0x562dbdfe4068 <col:112, col:126> 1
|-FunctionDecl 0x562dbdfe4170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562dbdfe40b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562dbdfe4218 <line:397:22>
| `-NonNullAttr 0x562dbdfe4270 <col:63, col:77> 1
|-FunctionDecl 0x562dbdfe4498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x562dbdfe42b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562dbdfe4338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x562dbdfe4548 <line:400:22>
| `-NonNullAttr 0x562dbdfe45a0 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdfe47a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562dbdfe45e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562dbdfe4668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x562dbdfe4858 <line:403:22>
| `-NonNullAttr 0x562dbdfe48b0 <col:63, col:77> 1
|-FunctionDecl 0x562dbdfe4b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x562dbdfe48f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562dbdfe49a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x562dbdfe4bb8 <line:406:22>
| `-NonNullAttr 0x562dbdfe4c10 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdfe5e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562dbdfe4c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562dbdfe4cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562dbdfe5ef8 <line:409:22>
| `-NonNullAttr 0x562dbdfe5f50 <col:63, col:77> 1
|-FunctionDecl 0x562dbdfe6188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562dbdfe5f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562dbdfe6028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562dbdfe6238 <line:412:22>
| `-NonNullAttr 0x562dbdfe6290 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdfe64c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562dbdfe62d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x562dbdfe6368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x562dbdfe6578 <col:37>
| `-NonNullAttr 0x562dbdfe65d0 <col:78, col:95> 1 2
|-FunctionDecl 0x562dbdfe67b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562dbdfe6618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562dbdfe6698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x562dbdfe6868 <line:418:22>
| `-NonNullAttr 0x562dbdfe68c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdfe6a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562dbdfe6908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562dbdfe6988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x562dbdfe6af8 <line:420:22>
| `-NonNullAttr 0x562dbdfe6b50 <col:63, col:77> 1
|-FunctionDecl 0x562dbdfe6cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562dbdfe6b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562dbdfe6c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x562dbdfe6da8 <line:423:22>
| `-NonNullAttr 0x562dbdfe7e30 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdfe7fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562dbdfe7e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562dbdfe7ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x562dbdfe8068 <line:426:22>
| `-NonNullAttr 0x562dbdfe80c0 <col:63, col:77> 1
|-FunctionDecl 0x562dbdfe8268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562dbdfe8108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562dbdfe8188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x562dbdfe8318 <line:429:22>
| `-NonNullAttr 0x562dbdfe8370 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdfe84f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562dbdfe83b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562dbdfe8438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x562dbdfe85a8 <line:431:22>
| `-NonNullAttr 0x562dbdfe8600 <col:63, col:77> 1
|-FunctionDecl 0x562dbdfe8828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x562dbdfe8648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562dbdfe86c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x562dbdfe88d8 <line:434:22>
| |-NonNullAttr 0x562dbdfe8930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x562dbdfe8968 <col:100> "" ""
|-FunctionDecl 0x562dbdfe8b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x562dbdfe89b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562dbdfe8a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x562dbdfe8c28 <line:437:22>
| |-NonNullAttr 0x562dbdfe8c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x562dbdfe8cb8 <col:97> "" ""
|-FunctionDecl 0x562dbdfe8eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562dbdfe8d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562dbdfe8d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562dbdfe8f68 <line:440:22>
| `-NonNullAttr 0x562dbdfe8fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdfe9140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562dbdfe9008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562dbdfe9080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562dbdfe91f0 <line:443:22>
| `-NonNullAttr 0x562dbdfe9248 <col:63, col:77> 1
|-FunctionDecl 0x562dbdfe9538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562dbdfe9298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562dbdfe9318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x562dbdfe9390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562dbdfe95f0 <line:447:22>
| `-NonNullAttr 0x562dbdfe9648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x562dbdfe98f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x562dbdfe96a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562dbdfe9720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x562dbdfe9798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562dbdfe99b0 <col:43>
| `-NonNullAttr 0x562dbdfe9a08 <col:84, col:98> 1
|-FunctionDecl 0x562dbdfe9cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562dbdfe9a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562dbdfe9ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x562dbdfe9b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x562dbdfe9d80 <line:452:22>
| `-NonNullAttr 0x562dbdfe9dd8 <col:63, col:77> 3
|-FunctionDecl 0x562dbdfea0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562dbdfe9e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562dbdfe9ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x562dbdfe9f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562dbdfea1a0 <line:456:22>
| `-NonNullAttr 0x562dbdfea1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x562dbdfea3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x562dbdfea248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562dbdfea2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x562dbdfea498 <line:458:22>
|-FunctionDecl 0x562dbdfea868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x562dbdfea560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x562dbdfea700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x562dbdfea918 <col:52, col:69> 1 2
|-FunctionDecl 0x562dbdfeaac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x562dbdfea9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x562dbdfeaa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x562dbdfeaca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x562dbdfeab88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x562dbdfeac08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x562dbdfeae60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x562dbdfead68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x562dbdfeafa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x562dbdfeb040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x562dbdfeb0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x562dbdfeb1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x562dbdfeb240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x562dbdfeb410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix002_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x562dbdfeb508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x562dbdfeb5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x562dbdfeb560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x562dbdfeb0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x562dbdfeb040 ''
| `-AlignedAttr 0x562dbdfeb618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x562dbdfeb690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x562dbdfeb7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x562dbdfeb858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x562dbdfeb8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x562dbdfeb928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x562dbdfebb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562dbdfeba20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562dbdfebc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562dbdfebbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562dbdfebe70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562dbdfebd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x562dbdfebf18 <line:487:22>
|-RecordDecl 0x562dbdfebf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x562dbdfec288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x562dbdfec0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x562dbdfec168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x562dbdfec338 <col:86>
| `-ReturnsTwiceAttr 0x562dbdfec390 <col:12> Implicit
|-FunctionDecl 0x562dbdfec6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562dbdfec460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x562dbdfec570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x562dbdfec768 <line:493:22>
| `-NonNullAttr 0x562dbdfec7c0 <col:63, col:77> 1
|-FunctionDecl 0x562dbdfec938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562dbdfec808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562dbdfec9e0 <line:495:22>
| `-NonNullAttr 0x562dbdfeca38 <col:63, col:77> 1
|-FunctionDecl 0x562dbdfecb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562dbdfeca88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562dbdfecbe8 <line:497:22>
| `-NonNullAttr 0x562dbdfecc40 <col:52, col:66> 1
|-FunctionDecl 0x562dbdfecd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562dbdfecc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562dbdfecde8 <line:499:22>
| `-NonNullAttr 0x562dbdfece40 <col:52, col:66> 1
|-FunctionDecl 0x562dbdfed088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562dbdfece98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562dbdfecf28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562dbdfed138 <col:36>
| `-NonNullAttr 0x562dbdfed190 <col:66, col:83> 1 2
|-FunctionDecl 0x562dbdfed290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562dbdfed1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562dbdfed338 <line:504:22>
| `-NonNullAttr 0x562dbdfed390 <col:52, col:66> 1
|-FunctionDecl 0x562dbdfed628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562dbdfed440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562dbdfed4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562dbdfed6d8 <line:508:22>
| `-NonNullAttr 0x562dbdfed730 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdfed9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x562dbdfed778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562dbdfed7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x562dbdfed878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x562dbdfedab0 <line:512:22>
| `-NonNullAttr 0x562dbdfedb08 <col:63, col:80> 1 3
|-FunctionDecl 0x562dbdfedc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562dbdfedb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562dbdfedcb8 <line:514:22>
| `-NonNullAttr 0x562dbdfedd10 <col:63, col:77> 1
|-FunctionDecl 0x562dbdfedf38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562dbdfeddc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562dbdfedfe0 <line:516:22>
| `-NonNullAttr 0x562dbdfee038 <col:63, col:77> 1
|-FunctionDecl 0x562dbdfee140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562dbdfee088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562dbdfee1e8 <line:518:22>
| `-NonNullAttr 0x562dbdfee240 <col:63, col:77> 1
|-FunctionDecl 0x562dbdfee468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562dbdfee288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562dbdfee308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x562dbdfee518 <line:522:22>
| `-NonNullAttr 0x562dbdfee570 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdfee778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562dbdfee5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562dbdfee638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x562dbdfee828 <line:525:22>
| `-NonNullAttr 0x562dbdfee880 <col:63, col:77> 1
|-FunctionDecl 0x562dbdfeea28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562dbdfee8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562dbdfee948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x562dbdfeead8 <line:528:22>
| `-NonNullAttr 0x562dbdfeeb30 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdfeecb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562dbdfeeb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562dbdfeebf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x562dbdfeed68 <line:530:22>
| `-NonNullAttr 0x562dbdfeedc0 <col:63, col:77> 1
|-FunctionDecl 0x562dbdfeff90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562dbdfeee08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562dbdfefeb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x562dbdff0040 <line:534:22>
| `-NonNullAttr 0x562dbdff0098 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdff0228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562dbdff00e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562dbdff0168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x562dbdff02d8 <line:537:22>
| `-NonNullAttr 0x562dbdff0330 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff04d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562dbdff0378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562dbdff03f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562dbdff0588 <line:541:22>
| `-NonNullAttr 0x562dbdff05e0 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdff0768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562dbdff0628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562dbdff06a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x562dbdff0818 <line:544:22>
| `-NonNullAttr 0x562dbdff0870 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff0a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x562dbdff08b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x562dbdff0938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x562dbdff0b08 <line:547:22>
| `-NonNullAttr 0x562dbdff0b60 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdff0ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562dbdff0ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562dbdff0c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x562dbdff0d98 <line:550:22>
| `-NonNullAttr 0x562dbdff0df0 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff2168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x562dbdff1f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562dbdff2020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x562dbdff2218 <col:29>
| `-NonNullAttr 0x562dbdff2270 <col:70, col:84> 1
|-FunctionDecl 0x562dbdff23e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562dbdff22b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562dbdff2490 <line:555:22>
| `-NonNullAttr 0x562dbdff24e8 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff25f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562dbdff2538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562dbdff2698 <line:557:22>
| `-NonNullAttr 0x562dbdff26f0 <col:52, col:66> 1
|-FunctionDecl 0x562dbdff27f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562dbdff2738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562dbdff2898 <line:559:19>
| `-NonNullAttr 0x562dbdff28f0 <col:49, col:63> 1
|-FunctionDecl 0x562dbdff2b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562dbdff2938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562dbdff29c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562dbdff2bd8 <col:39>
| `-NonNullAttr 0x562dbdff2c30 <col:69, col:86> 1 2
|-FunctionDecl 0x562dbdff2d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562dbdff2c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562dbdff2dd8 <line:564:22>
| `-NonNullAttr 0x562dbdff2e30 <col:52, col:66> 1
|-FunctionDecl 0x562dbdff2f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562dbdff2ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562dbdff3040 <line:566:22>
| `-NonNullAttr 0x562dbdff3098 <col:52, col:66> 1
|-FunctionDecl 0x562dbdff3258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562dbdff30e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562dbdff3178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562dbdff3308 <col:39>
| `-NonNullAttr 0x562dbdff3360 <col:69, col:86> 1 2
|-FunctionDecl 0x562dbdff3460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562dbdff33a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562dbdff3508 <line:571:22>
| `-NonNullAttr 0x562dbdff3560 <col:52, col:66> 1
|-FunctionDecl 0x562dbdff3748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562dbdff3610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562dbdff37f0 <line:573:22>
| `-NonNullAttr 0x562dbdff3848 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff3950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562dbdff3898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562dbdff39f8 <line:575:22>
| `-NonNullAttr 0x562dbdff3a50 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff3c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562dbdff3a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562dbdff3b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x562dbdff3d28 <line:579:22>
| `-NonNullAttr 0x562dbdff3d80 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdff3fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562dbdff3dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562dbdff3e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x562dbdff4058 <line:582:22>
| `-NonNullAttr 0x562dbdff40b0 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff4258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562dbdff40f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562dbdff4178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x562dbdff4308 <line:586:22>
| `-NonNullAttr 0x562dbdff4360 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdff44e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562dbdff43a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562dbdff4428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x562dbdff4598 <col:36>
| `-NonNullAttr 0x562dbdff45f0 <col:77, col:91> 1
|-FunctionDecl 0x562dbdff4928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x562dbdff46d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562dbdff47e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x562dbdff49d8 <line:591:22>
| `-NonNullAttr 0x562dbdff4a30 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff4ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562dbdff4a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562dbdff4c50 <line:593:22>
| `-NonNullAttr 0x562dbdff4ca8 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff4db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562dbdff4cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562dbdff4e58 <line:595:22>
| `-NonNullAttr 0x562dbdff4eb0 <col:52, col:66> 1
|-FunctionDecl 0x562dbdff4fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562dbdff4f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562dbdff5070 <line:597:22>
| `-NonNullAttr 0x562dbdff50c8 <col:52, col:66> 1
|-FunctionDecl 0x562dbdff52f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x562dbdff5118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562dbdff5190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x562dbdff53a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x562dbdff56d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562dbdff5428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562dbdff54a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562dbdff5530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x562dbdff5790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x562dbdff59a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562dbdff5870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562dbdff5a50 <line:606:22>
| `-NonNullAttr 0x562dbdff5aa8 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff5bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562dbdff5af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562dbdff5c58 <line:608:22>
| `-NonNullAttr 0x562dbdff5cb0 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff5f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562dbdff5cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562dbdff5d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x562dbdff5fc0 <line:612:22>
| `-NonNullAttr 0x562dbdff6018 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdff6228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x562dbdff6068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562dbdff60e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x562dbdff62d8 <col:37>
| `-NonNullAttr 0x562dbdff6330 <col:78, col:92> 1
|-FunctionDecl 0x562dbdff6548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x562dbdff6378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562dbdff6420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x562dbdff65f8 <line:618:22>
| `-NonNullAttr 0x562dbdff6650 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdff6818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x562dbdff6698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562dbdff6710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x562dbdff68c8 <line:621:22>
| `-NonNullAttr 0x562dbdff6920 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff6bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x562dbdff6a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x562dbdff6a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x562dbdff6c78 <line:623:22>
| `-NonNullAttr 0x562dbdff6cd0 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff6e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562dbdff6d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562dbdff6f20 <line:625:22>
| `-NonNullAttr 0x562dbdff6f78 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff7080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562dbdff6fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562dbdff7128 <line:627:22>
| `-NonNullAttr 0x562dbdff7180 <col:52, col:66> 1
|-FunctionDecl 0x562dbdff7280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562dbdff71c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562dbdff7328 <line:629:22>
| `-NonNullAttr 0x562dbdff7380 <col:52, col:66> 1
|-FunctionDecl 0x562dbdff7480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562dbdff73c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562dbdff7528 <line:631:22>
| `-NonNullAttr 0x562dbdff7580 <col:52, col:66> 1
|-FunctionDecl 0x562dbdff7958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x562dbdff7660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x562dbdff7770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562dbdff77f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x562dbdff7a10 <line:635:22>
| `-NonNullAttr 0x562dbdff7a68 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff7be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562dbdff7ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562dbdff7c90 <line:637:22>
| `-NonNullAttr 0x562dbdff7ce8 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff7df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562dbdff7d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562dbdff7e98 <line:639:22>
| `-NonNullAttr 0x562dbdff7ef0 <col:52, col:66> 1
|-FunctionDecl 0x562dbdff80e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562dbdff7fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562dbdff8190 <line:641:22>
| `-NonNullAttr 0x562dbdff81e8 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff82f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562dbdff8238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562dbdff8398 <line:643:22>
| `-NonNullAttr 0x562dbdff83f0 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff8618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562dbdff8438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562dbdff84b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x562dbdff86c8 <line:647:22>
| `-NonNullAttr 0x562dbdff8720 <col:63, col:80> 1 2
|-FunctionDecl 0x562dbdff8928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x562dbdff8768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x562dbdff87e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x562dbdff89d8 <line:650:22>
| `-NonNullAttr 0x562dbdff8a30 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff8d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x562dbdff8b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x562dbdff8c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x562dbdff8e28 <line:653:22>
| `-NonNullAttr 0x562dbdff8e80 <col:63, col:77> 1
|-FunctionDecl 0x562dbdff8fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x562dbdff8ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562dbdff9090 <col:69>
|-FunctionDecl 0x562dbdff9208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x562dbdff90f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562dbdff92b0 <col:72>
|-FunctionDecl 0x562dbdff94e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x562dbdff9318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x562dbdff93c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x562dbdff9598 <col:44>
|-FunctionDecl 0x562dbdff97b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x562dbdff9600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562dbdff9678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x562dbdff9868 <line:660:22>
| `-NonNullAttr 0x562dbdff98c0 <col:63, col:77> 2
|-FunctionDecl 0x562dbdff9d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x562dbdff99a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x562dbdff9ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x562dbdff9bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x562dbdff9dc0 <col:47>
|-FunctionDecl 0x562dbdffaf60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x562dbdff9e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562dbdffb0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x562dbdffb020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562dbdffb210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x562dbdffb178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562dbdffb2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x562dbdffb398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x562dbdffb458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x562dbdffb510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x562dbdffb590 prev 0x562dbdffb510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x562dbdffb5f8 <col:24> 'int' 0
|-VarDecl 0x562dbdffb630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x562dbdffb6b0 prev 0x562dbdffb630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x562dbdffb718 <col:27> 'int' 0
|-VarDecl 0x562dbdffb750 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x562dbdffb7d0 prev 0x562dbdffb750 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x562dbdffb838 <col:27> 'int' 0
|-VarDecl 0x562dbdffb870 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x562dbdffb8f0 prev 0x562dbdffb870 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x562dbdffb958 <col:27> 'int' 0
|-VarDecl 0x562dbdffb990 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x562dbdffba10 prev 0x562dbdffb990 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x562dbdffba78 <col:27> 'int' 0
|-VarDecl 0x562dbdffbab0 <line:681:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x562dbdffbb30 prev 0x562dbdffbab0 <line:682:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x562dbdffbb98 <col:27> 'int' 0
|-VarDecl 0x562dbdffbbd0 <line:683:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x562dbdffbc50 prev 0x562dbdffbbd0 <line:684:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x562dbdffbcb8 <col:27> 'int' 0
|-VarDecl 0x562dbdffbcf0 <line:685:1, col:5> col:5 used a 'int'
|-VarDecl 0x562dbdffbd70 prev 0x562dbdffbcf0 <line:686:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x562dbdffbdd8 <col:9> 'int' 0
|-VarDecl 0x562dbdffbe08 <line:687:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x562dbdffbe80 <line:688:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x562dbdffbf70 <line:689:1, col:5> col:5 used x 'int'
|-VarDecl 0x562dbdffbff0 prev 0x562dbdffbf70 <line:690:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x562dbdffc058 <col:9> 'int' 0
|-VarDecl 0x562dbdffc090 <line:691:1, col:5> col:5 used y 'int'
|-VarDecl 0x562dbdffc110 prev 0x562dbdffc090 <line:692:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x562dbdffc178 <col:9> 'int' 0
|-VarDecl 0x562dbdffc1b0 <line:693:1, col:5> col:5 used z 'int'
|-VarDecl 0x562dbdffc230 prev 0x562dbdffc1b0 <line:694:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x562dbdffc298 <col:9> 'int' 0
|-VarDecl 0x562dbdffc2c8 <line:695:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x562dbdffc348 <line:696:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x562dbdffc3c0 <line:697:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x562dbdffc438 <line:698:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x562dbdffc4b0 <line:699:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x562dbdffc528 <line:700:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x562dbdffc5a0 <line:701:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x562dbdffc618 <line:702:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x562dbdffc690 <line:703:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x562dbdffc708 <line:704:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x562dbdffc780 <line:705:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x562dbdffc800 <line:706:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x562dbdffc880 <line:707:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x562dbdffc8f8 <line:708:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x562dbdffc978 <line:709:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x562dbdffc9f0 <line:710:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x562dbdffca68 <line:711:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x562dbdffcae0 <line:712:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x562dbdffcbf8 prev 0x562dbdffaf60 <line:713:1, line:733:1> line:713:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x562dbdffcb60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562dbdffd408 <line:714:1, line:733:1>
|   |-CallExpr 0x562dbdffcd08 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562dbdffccf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffcca0 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562dbdffcd68 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562dbdffcd28 <col:3> 'int' lvalue Var 0x562dbdffbd70 'a' 'int'
|   | `-IntegerLiteral 0x562dbdffcd48 <col:7> 'int' 1
|   |-CallExpr 0x562dbdffcdc0 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562dbdffcda8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffcd88 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562dbdffce18 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562dbdffce00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffcde0 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562dbdffce78 <line:719:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562dbdffce38 <col:3> 'int' lvalue Var 0x562dbdffbff0 'x' 'int'
|   | `-IntegerLiteral 0x562dbdffce58 <col:7> 'int' 1
|   |-CallExpr 0x562dbdffced0 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562dbdffceb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffce98 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562dbdffcf28 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562dbdffcf10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffcef0 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562dbdffcfb8 <line:722:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562dbdffcf48 <col:3> 'int' lvalue Var 0x562dbdffb6b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x562dbdffcfa0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562dbdffcf80 <col:25> 'int' lvalue Var 0x562dbdffbff0 'x' 'int'
|   |-CallExpr 0x562dbdffd010 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562dbdffcff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffcfd8 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562dbdffd068 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562dbdffd050 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffd030 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562dbdffd0e0 <line:725:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562dbdffd088 <col:3> 'int' lvalue Var 0x562dbdffb7d0 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x562dbdffd0c8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562dbdffd0a8 <col:25> 'int' lvalue Var 0x562dbdffc110 'y' 'int'
|   |-CallExpr 0x562dbdffd138 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562dbdffd120 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffd100 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562dbdffd190 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562dbdffd178 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffd158 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x562dbdffd1e8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562dbdffd1d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffd1b0 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562dbdffd240 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562dbdffd228 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffd208 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562dbdffd2f8 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562dbdffd260 <col:3> 'int' lvalue Var 0x562dbdffb590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562dbdffd2d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562dbdffd2c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562dbdffd280 <col:22> 'int' lvalue Var 0x562dbdffb590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562dbdffd2a0 <col:41> 'int' 1
|   |-CallExpr 0x562dbdffd350 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562dbdffd338 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffd318 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562dbdffd3f8 <line:732:3, col:36>
|     `-CallExpr 0x562dbdffd3d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562dbdffd3c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562dbdffd370 <col:10> 'void *(void)' Function 0x562dbdfa1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562dbdffd558 prev 0x562dbdffb0b8 <line:734:1, line:764:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x562dbdffd4c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562dbe000578 <line:735:1, line:764:1>
|   |-CallExpr 0x562dbdffd638 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562dbdffd620 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffd600 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562dbdffd698 <line:737:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562dbdffd658 <col:3> 'int' lvalue Var 0x562dbdffc110 'y' 'int'
|   | `-IntegerLiteral 0x562dbdffd678 <col:7> 'int' 1
|   |-CallExpr 0x562dbdffd6f0 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562dbdffd6d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffd6b8 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562dbdffd748 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562dbdffd730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffd710 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562dbdffd7c0 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562dbdffd768 <col:3> 'int' lvalue Var 0x562dbdffb8f0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x562dbdffd7a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562dbdffd788 <col:25> 'int' lvalue Var 0x562dbdffc110 'y' 'int'
|   |-CallExpr 0x562dbdffd818 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562dbdffd800 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffd7e0 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562dbdffd870 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562dbdffd858 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbdffd838 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562dbdffd920 <line:743:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562dbdffd890 <col:3> '_Bool' lvalue Var 0x562dbdffca68 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x562dbdffd908 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562dbdffd8e8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562dbdffd8d0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562dbdffd8b0 <col:19> 'void *(void)' Function 0x562dbdfa1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562dbdffd9d0 <line:744:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562dbdffd940 <col:3> '_Bool' lvalue Var 0x562dbdffcae0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x562dbdffd9b8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562dbdffd998 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562dbdffd980 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562dbdffd960 <col:19> 'void *(void)' Function 0x562dbdfa1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562dbdffda48 <line:745:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x562dbdffd9f0 <col:3> '_Bool' lvalue Var 0x562dbdffc2c8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x562dbdffda30 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562dbdffda10 <col:21> '_Bool' lvalue Var 0x562dbdffcae0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x562dbdffdac0 <line:746:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562dbdffda68 <col:3> 'int' lvalue Var 0x562dbdffc348 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x562dbdffdaa8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562dbdffda88 <col:15> 'int' lvalue Var 0x562dbdffc230 'z' 'int'
|   |-BinaryOperator 0x562dbdffdef8 <line:747:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x562dbdffdae0 <col:3> 'int' lvalue Var 0x562dbdffc230 'z' 'int'
|   | `-ConditionalOperator 0x562dbdffdec8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x562dbdffdcf0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x562dbdffdc10 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x562dbdffdb38 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x562dbdffdb20 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x562dbdffdb00 <col:8> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x562dbdffdbf0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x562dbdffdb88 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x562dbdffdb70 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x562dbdffdb50 <col:27> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x562dbdffdbd8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x562dbdffdbc0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x562dbdffdba0 <col:46> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x562dbdffdcd0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x562dbdffdc68 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x562dbdffdc50 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x562dbdffdc30 <col:65> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x562dbdffdcb8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x562dbdffdca0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x562dbdffdc80 <col:84> '_Bool' lvalue Var 0x562dbdffc690 'z$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x562dbdffdeb0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562dbdffdd10 <col:101> 'int' lvalue Var 0x562dbdffc230 'z' 'int'
|   |   `-ParenExpr 0x562dbdffde90 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x562dbdffde60 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x562dbdffddd0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562dbdffdd88 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562dbdffdd70 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562dbdffdd30 <col:106> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562dbdffddb8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562dbdffdda0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562dbdffdd50 <col:124> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562dbdffde30 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562dbdffddf0 <col:141> 'int' lvalue Var 0x562dbdffc880 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x562dbdffde48 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562dbdffde10 <col:153> 'int' lvalue Var 0x562dbdffc978 'z$w_buff1' 'int'
|   |-BinaryOperator 0x562dbdffe420 <line:748:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562dbdffdf18 <col:3> 'int' lvalue Var 0x562dbdffc880 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x562dbdffe3f0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562dbdffe3c0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562dbdffe3a8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562dbdffdf38 <col:15> '_Bool' lvalue Var 0x562dbdffcae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562dbdffe3d8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562dbdffdf58 <col:31> 'int' lvalue Var 0x562dbdffc880 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x562dbdffe388 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562dbdffe358 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562dbdffe180 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562dbdffe0a0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562dbdffdfc8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562dbdffdfb0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562dbdffdf90 <col:45> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562dbdffe080 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562dbdffe018 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562dbdffe000 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562dbdffdfe0 <col:64> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x562dbdffe068 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562dbdffe050 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562dbdffe030 <col:83> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562dbdffe160 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562dbdffe0f8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562dbdffe0e0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562dbdffe0c0 <col:102> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x562dbdffe148 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562dbdffe130 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562dbdffe110 <col:121> '_Bool' lvalue Var 0x562dbdffc690 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562dbdffe340 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562dbdffe1a0 <col:138> 'int' lvalue Var 0x562dbdffc880 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x562dbdffe320 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562dbdffe2f0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562dbdffe260 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562dbdffe218 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562dbdffe200 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562dbdffe1c0 <col:151> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562dbdffe248 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562dbdffe230 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562dbdffe1e0 <col:169> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x562dbdffe2c0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562dbdffe280 <col:186> 'int' lvalue Var 0x562dbdffc880 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x562dbdffe2d8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562dbdffe2a0 <col:198> 'int' lvalue Var 0x562dbdffc880 'z$w_buff0' 'int'
|   |-BinaryOperator 0x562dbdffe930 <line:749:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562dbdffe440 <col:3> 'int' lvalue Var 0x562dbdffc978 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x562dbdffe900 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562dbdffe8d0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562dbdffe8b8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562dbdffe460 <col:15> '_Bool' lvalue Var 0x562dbdffcae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562dbdffe8e8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562dbdffe480 <col:31> 'int' lvalue Var 0x562dbdffc978 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x562dbdffe898 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562dbdffe868 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562dbdffe690 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562dbdffe5b0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562dbdffe4d8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562dbdffe4c0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562dbdffe4a0 <col:45> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562dbdffe590 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562dbdffe528 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562dbdffe510 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562dbdffe4f0 <col:64> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x562dbdffe578 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562dbdffe560 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562dbdffe540 <col:83> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562dbdffe670 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562dbdffe608 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562dbdffe5f0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562dbdffe5d0 <col:102> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x562dbdffe658 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562dbdffe640 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562dbdffe620 <col:121> '_Bool' lvalue Var 0x562dbdffc690 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562dbdffe850 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562dbdffe6b0 <col:138> 'int' lvalue Var 0x562dbdffc978 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x562dbdffe830 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562dbdffe800 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562dbdffe770 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562dbdffe728 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562dbdffe710 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562dbdffe6d0 <col:151> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562dbdffe758 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562dbdffe740 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562dbdffe6f0 <col:169> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x562dbdffe7d0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562dbdffe790 <col:186> 'int' lvalue Var 0x562dbdffc978 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x562dbdffe7e8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562dbdffe7b0 <col:198> 'int' lvalue Var 0x562dbdffc978 'z$w_buff1' 'int'
|   |-BinaryOperator 0x562dbdffeed8 <line:750:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562dbdffe950 <col:3> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562dbdffeec0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562dbdffee90 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562dbdffee48 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562dbdffee30 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562dbdffe970 <col:20> '_Bool' lvalue Var 0x562dbdffcae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562dbdffee78 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562dbdffee60 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562dbdffe990 <col:36> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x562dbdffee10 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562dbdffede0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562dbdffeba0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562dbdffeac0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562dbdffe9e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562dbdffe9d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562dbdffe9b0 <col:55> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562dbdffeaa0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562dbdffea38 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562dbdffea20 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562dbdffea00 <col:74> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562dbdffea88 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562dbdffea70 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562dbdffea50 <col:93> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562dbdffeb80 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562dbdffeb18 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562dbdffeb00 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562dbdffeae0 <col:112> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562dbdffeb68 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562dbdffeb50 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562dbdffeb30 <col:131> '_Bool' lvalue Var 0x562dbdffc690 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562dbdffedc8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562dbdffedb0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562dbdffebc0 <col:148> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x562dbdffed90 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562dbdffed60 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562dbdffec80 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562dbdffec38 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562dbdffec20 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562dbdffebe0 <col:166> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562dbdffec68 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562dbdffec50 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562dbdffec00 <col:184> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562dbdffed18 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562dbdffecd0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562dbdffeca0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562dbdffed48 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562dbdffed30 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562dbdffecf8 <col:212> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562dbdfff4b0 <line:751:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562dbdffeef8 <col:3> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562dbdfff498 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562dbdfff468 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562dbdfff420 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562dbdfff408 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562dbdffef18 <col:20> '_Bool' lvalue Var 0x562dbdffcae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562dbdfff450 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562dbdfff438 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562dbdffef38 <col:36> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x562dbdfff3e8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562dbdfff3b8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562dbdfff158 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562dbdfff078 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562dbdffefa0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562dbdffef78 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562dbdffef58 <col:55> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562dbdfff058 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562dbdffeff0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562dbdffefd8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562dbdffefb8 <col:74> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562dbdfff040 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562dbdfff028 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562dbdfff008 <col:93> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562dbdfff138 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562dbdfff0d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562dbdfff0b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562dbdfff098 <col:112> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562dbdfff120 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562dbdfff108 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562dbdfff0e8 <col:131> '_Bool' lvalue Var 0x562dbdffc690 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562dbdfff3a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562dbdfff388 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562dbdfff178 <col:148> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x562dbdfff368 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562dbdfff338 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562dbdfff238 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562dbdfff1f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562dbdfff1d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562dbdfff198 <col:166> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562dbdfff220 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562dbdfff208 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562dbdfff1b8 <col:184> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562dbdfff308 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562dbdfff288 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562dbdfff258 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562dbdfff320 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562dbdfff2e0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562dbdfff2b0 <col:219> 'int' 0
|   |-BinaryOperator 0x562dbdfffa58 <line:752:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562dbdfff4d0 <col:3> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562dbdfffa40 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562dbdfffa10 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562dbdfff9c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562dbdfff9b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562dbdfff4f0 <col:20> '_Bool' lvalue Var 0x562dbdffcae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562dbdfff9f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562dbdfff9e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562dbdfff510 <col:36> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x562dbdfff990 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562dbdfff960 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562dbdfff720 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562dbdfff640 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562dbdfff568 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562dbdfff550 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562dbdfff530 <col:55> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562dbdfff620 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562dbdfff5b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562dbdfff5a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562dbdfff580 <col:74> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562dbdfff608 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562dbdfff5f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562dbdfff5d0 <col:93> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562dbdfff700 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562dbdfff698 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562dbdfff680 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562dbdfff660 <col:112> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562dbdfff6e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562dbdfff6d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562dbdfff6b0 <col:131> '_Bool' lvalue Var 0x562dbdffc690 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562dbdfff948 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562dbdfff930 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562dbdfff740 <col:148> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x562dbdfff910 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562dbdfff8e0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562dbdfff800 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562dbdfff7b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562dbdfff7a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562dbdfff760 <col:166> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562dbdfff7e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562dbdfff7d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562dbdfff780 <col:184> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562dbdfff898 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562dbdfff850 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562dbdfff820 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562dbdfff8c8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562dbdfff8b0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562dbdfff878 <col:212> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562dbe000040 <line:753:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562dbdfffa78 <col:3> '_Bool' lvalue Var 0x562dbdffc690 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe000028 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562dbdfffff8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562dbdffffb0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562dbdffff78 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562dbdfffa98 <col:20> '_Bool' lvalue Var 0x562dbdffcae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562dbdffffe0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562dbdffffc8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562dbdfffab8 <col:36> '_Bool' lvalue Var 0x562dbdffc690 'z$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x562dbdffff58 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562dbdffff28 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562dbdfffcc8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562dbdfffbe8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562dbdfffb10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562dbdfffaf8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562dbdfffad8 <col:55> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562dbdfffbc8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562dbdfffb60 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562dbdfffb48 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562dbdfffb28 <col:74> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562dbdfffbb0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562dbdfffb98 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562dbdfffb78 <col:93> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562dbdfffca8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562dbdfffc40 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562dbdfffc28 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562dbdfffc08 <col:112> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562dbdfffc90 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562dbdfffc78 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562dbdfffc58 <col:131> '_Bool' lvalue Var 0x562dbdffc690 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562dbdffff10 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562dbdfffef8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562dbdfffce8 <col:148> '_Bool' lvalue Var 0x562dbdffc690 'z$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x562dbdfffed8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562dbdfffea8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562dbdfffda8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562dbdfffd60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562dbdfffd48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562dbdfffd08 <col:166> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562dbdfffd90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562dbdfffd78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562dbdfffd28 <col:184> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562dbdfffe78 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562dbdfffdf8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562dbdfffdc8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562dbdfffe90 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562dbdfffe50 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562dbdfffe20 <col:219> 'int' 0
|   |-BinaryOperator 0x562dbe0000b8 <line:754:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562dbe000060 <col:3> 'int' lvalue Var 0x562dbdffba10 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x562dbe0000a0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562dbe000080 <col:25> 'int' lvalue Var 0x562dbdffc230 'z' 'int'
|   |-BinaryOperator 0x562dbe0001e8 <line:755:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x562dbe0000d8 <col:3> 'int' lvalue Var 0x562dbdffc230 'z' 'int'
|   | `-ConditionalOperator 0x562dbe0001b8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x562dbe000170 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562dbe000158 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562dbe0000f8 <col:7> '_Bool' lvalue Var 0x562dbdffc2c8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x562dbe000188 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562dbe000118 <col:25> 'int' lvalue Var 0x562dbdffc348 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x562dbe0001a0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x562dbe000138 <col:37> 'int' lvalue Var 0x562dbdffc230 'z' 'int'
|   |-BinaryOperator 0x562dbe000280 <line:756:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe000208 <col:3> '_Bool' lvalue Var 0x562dbdffc2c8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x562dbe000258 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562dbe000228 <col:28> 'int' 0
|   |-CallExpr 0x562dbe0002d8 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562dbe0002c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbe0002a0 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562dbe000330 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562dbe000318 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbe0002f8 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x562dbe000388 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562dbe000370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbe000350 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562dbe0003e0 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562dbe0003c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbe0003a8 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562dbe000498 <line:761:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562dbe000400 <col:3> 'int' lvalue Var 0x562dbdffb590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562dbe000478 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562dbe000460 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562dbe000420 <col:22> 'int' lvalue Var 0x562dbdffb590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562dbe000440 <col:41> 'int' 1
|   |-CallExpr 0x562dbe0004f0 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562dbe0004d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbe0004b8 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562dbe000568 <line:763:3, col:36>
|     `-CallExpr 0x562dbe000548 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562dbe000530 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562dbe000510 <col:10> 'void *(void)' Function 0x562dbdfa1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562dbe000718 prev 0x562dbdffb210 <line:765:1, line:809:1> line:765:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x562dbe000680 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562dbe0049b0 <line:766:1, line:809:1>
|   |-CallExpr 0x562dbe0007f8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562dbe0007e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbe0007c0 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562dbe000870 <line:768:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562dbe000818 <col:3> 'int' lvalue Var 0x562dbdffc978 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x562dbe000858 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562dbe000838 <col:15> 'int' lvalue Var 0x562dbdffc880 'z$w_buff0' 'int'
|   |-BinaryOperator 0x562dbe0008d0 <line:769:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562dbe000890 <col:3> 'int' lvalue Var 0x562dbdffc880 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x562dbe0008b0 <col:15> 'int' 1
|   |-BinaryOperator 0x562dbe000948 <line:770:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe0008f0 <col:3> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe000930 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562dbe000910 <col:20> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562dbe0009e0 <line:771:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe000968 <col:3> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x562dbe0009b8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562dbe000988 <col:27> 'int' 1
|   |-CallExpr 0x562dbe000b68 <line:772:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x562dbe000b50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x562dbe000a00 <col:3> 'void (int)' Function 0x562dbdfa20d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x562dbe000b00 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x562dbe000ae0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x562dbe000ac0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x562dbe000a78 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x562dbe000a60 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x562dbe000a20 <col:23> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x562dbe000aa8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x562dbe000a90 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x562dbe000a40 <col:41> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562dbe000be8 <line:773:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe000b90 <col:3> '_Bool' lvalue Var 0x562dbdffc5a0 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe000bd0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562dbe000bb0 <col:20> '_Bool' lvalue Var 0x562dbdffc3c0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x562dbe000c60 <line:774:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe000c08 <col:3> '_Bool' lvalue Var 0x562dbdffc618 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe000c48 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562dbe000c28 <col:20> '_Bool' lvalue Var 0x562dbdffc438 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562dbe000cd8 <line:775:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe000c80 <col:3> '_Bool' lvalue Var 0x562dbdffc690 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe000cc0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562dbe000ca0 <col:20> '_Bool' lvalue Var 0x562dbdffc4b0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562dbe000d50 <line:776:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe000cf8 <col:3> '_Bool' lvalue Var 0x562dbdffc708 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe000d38 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562dbe000d18 <col:20> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562dbe000de8 <line:777:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe000d70 <col:3> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x562dbe000dc0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562dbe000d90 <col:27> 'int' 1
|   |-CallExpr 0x562dbe000e40 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562dbe000e28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbe000e08 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562dbe000e98 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562dbe000e80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbe000e60 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562dbe000f48 <line:780:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe000eb8 <col:3> '_Bool' lvalue Var 0x562dbdffca68 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe000f30 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562dbe000f10 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562dbe000ef8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562dbe000ed8 <col:19> 'void *(void)' Function 0x562dbdfa1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562dbe001010 <line:781:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe000f68 <col:3> '_Bool' lvalue Var 0x562dbdffcae0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe000ff8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562dbe000fd8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562dbe000fc0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562dbe000f88 <col:19> 'void *(void)' Function 0x562dbdfa1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562dbe001088 <line:782:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe001030 <col:3> '_Bool' lvalue Var 0x562dbdffc2c8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe001070 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562dbe001050 <col:21> '_Bool' lvalue Var 0x562dbdffcae0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x562dbe001100 <line:783:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562dbe0010a8 <col:3> 'int' lvalue Var 0x562dbdffc348 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x562dbe0010e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562dbe0010c8 <col:15> 'int' lvalue Var 0x562dbdffc230 'z' 'int'
|   |-BinaryOperator 0x562dbe001538 <line:784:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x562dbe001120 <col:3> 'int' lvalue Var 0x562dbdffc230 'z' 'int'
|   | `-ConditionalOperator 0x562dbe001508 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x562dbe001330 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x562dbe001250 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x562dbe001178 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x562dbe001160 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x562dbe001140 <col:8> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x562dbe001230 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x562dbe0011c8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x562dbe0011b0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x562dbe001190 <col:27> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x562dbe001218 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x562dbe001200 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x562dbe0011e0 <col:46> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x562dbe001310 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x562dbe0012a8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x562dbe001290 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x562dbe001270 <col:65> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x562dbe0012f8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x562dbe0012e0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x562dbe0012c0 <col:84> '_Bool' lvalue Var 0x562dbdffc708 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x562dbe0014f0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562dbe001350 <col:101> 'int' lvalue Var 0x562dbdffc230 'z' 'int'
|   |   `-ParenExpr 0x562dbe0014d0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x562dbe0014a0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x562dbe001410 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562dbe0013c8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562dbe0013b0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562dbe001370 <col:106> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562dbe0013f8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562dbe0013e0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562dbe001390 <col:124> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562dbe001470 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562dbe001430 <col:141> 'int' lvalue Var 0x562dbdffc880 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x562dbe001488 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562dbe001450 <col:153> 'int' lvalue Var 0x562dbdffc978 'z$w_buff1' 'int'
|   |-BinaryOperator 0x562dbe001a48 <line:785:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562dbe001558 <col:3> 'int' lvalue Var 0x562dbdffc880 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x562dbe001a18 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562dbe0019e8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562dbe0019d0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562dbe001578 <col:15> '_Bool' lvalue Var 0x562dbdffcae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562dbe001a00 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562dbe001598 <col:31> 'int' lvalue Var 0x562dbdffc880 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x562dbe0019b0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562dbe001980 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562dbe0017a8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562dbe0016c8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562dbe0015f0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562dbe0015d8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562dbe0015b8 <col:45> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562dbe0016a8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562dbe001640 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562dbe001628 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562dbe001608 <col:64> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x562dbe001690 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562dbe001678 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562dbe001658 <col:83> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562dbe001788 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562dbe001720 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562dbe001708 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562dbe0016e8 <col:102> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x562dbe001770 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562dbe001758 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562dbe001738 <col:121> '_Bool' lvalue Var 0x562dbdffc708 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562dbe001968 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562dbe0017c8 <col:138> 'int' lvalue Var 0x562dbdffc880 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x562dbe001948 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562dbe001918 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562dbe001888 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562dbe001840 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562dbe001828 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562dbe0017e8 <col:151> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562dbe001870 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562dbe001858 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562dbe001808 <col:169> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x562dbe0018e8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562dbe0018a8 <col:186> 'int' lvalue Var 0x562dbdffc880 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x562dbe001900 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562dbe0018c8 <col:198> 'int' lvalue Var 0x562dbdffc880 'z$w_buff0' 'int'
|   |-BinaryOperator 0x562dbe001f58 <line:786:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562dbe001a68 <col:3> 'int' lvalue Var 0x562dbdffc978 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x562dbe001f28 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562dbe001ef8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562dbe001ee0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562dbe001a88 <col:15> '_Bool' lvalue Var 0x562dbdffcae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562dbe001f10 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562dbe001aa8 <col:31> 'int' lvalue Var 0x562dbdffc978 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x562dbe001ec0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562dbe001e90 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562dbe001cb8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562dbe001bd8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562dbe001b00 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562dbe001ae8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562dbe001ac8 <col:45> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562dbe001bb8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562dbe001b50 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562dbe001b38 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562dbe001b18 <col:64> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x562dbe001ba0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562dbe001b88 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562dbe001b68 <col:83> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562dbe001c98 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562dbe001c30 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562dbe001c18 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562dbe001bf8 <col:102> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x562dbe001c80 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562dbe001c68 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562dbe001c48 <col:121> '_Bool' lvalue Var 0x562dbdffc708 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562dbe001e78 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562dbe001cd8 <col:138> 'int' lvalue Var 0x562dbdffc978 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x562dbe001e58 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562dbe001e28 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562dbe001d98 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562dbe001d50 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562dbe001d38 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562dbe001cf8 <col:151> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562dbe001d80 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562dbe001d68 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562dbe001d18 <col:169> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x562dbe001df8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562dbe001db8 <col:186> 'int' lvalue Var 0x562dbdffc978 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x562dbe001e10 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562dbe001dd8 <col:198> 'int' lvalue Var 0x562dbdffc978 'z$w_buff1' 'int'
|   |-BinaryOperator 0x562dbe002518 <line:787:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe001f78 <col:3> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe002500 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562dbe0024d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562dbe002488 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562dbe002470 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562dbe001f98 <col:20> '_Bool' lvalue Var 0x562dbdffcae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562dbe0024b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562dbe0024a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562dbe001fd0 <col:36> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x562dbe002450 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562dbe002420 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562dbe0021e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562dbe002100 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562dbe002028 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562dbe002010 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562dbe001ff0 <col:55> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562dbe0020e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562dbe002078 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562dbe002060 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562dbe002040 <col:74> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x562dbe0020c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562dbe0020b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562dbe002090 <col:93> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562dbe0021c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562dbe002158 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562dbe002140 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562dbe002120 <col:112> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x562dbe0021a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562dbe002190 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562dbe002170 <col:131> '_Bool' lvalue Var 0x562dbdffc708 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x562dbe002408 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562dbe0023f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562dbe002200 <col:148> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x562dbe0023d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562dbe0023a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562dbe0022c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562dbe002278 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562dbe002260 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562dbe002220 <col:166> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562dbe0022a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562dbe002290 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562dbe002240 <col:184> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x562dbe002358 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562dbe002310 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562dbe0022e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562dbe002388 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562dbe002370 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562dbe002338 <col:212> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562dbe002ae0 <line:788:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe002538 <col:3> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe002ac8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562dbe002a98 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562dbe002a50 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562dbe002a38 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562dbe002558 <col:20> '_Bool' lvalue Var 0x562dbdffcae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562dbe002a80 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562dbe002a68 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562dbe002578 <col:36> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x562dbe002a18 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562dbe0029e8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562dbe002788 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562dbe0026a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562dbe0025d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562dbe0025b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562dbe002598 <col:55> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562dbe002688 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562dbe002620 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562dbe002608 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562dbe0025e8 <col:74> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x562dbe002670 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562dbe002658 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562dbe002638 <col:93> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562dbe002768 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562dbe002700 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562dbe0026e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562dbe0026c8 <col:112> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x562dbe002750 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562dbe002738 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562dbe002718 <col:131> '_Bool' lvalue Var 0x562dbdffc708 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x562dbe0029d0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562dbe0029b8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562dbe0027a8 <col:148> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x562dbe002998 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562dbe002968 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562dbe002868 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562dbe002820 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562dbe002808 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562dbe0027c8 <col:166> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562dbe002850 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562dbe002838 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562dbe0027e8 <col:184> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x562dbe002938 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562dbe0028b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562dbe002888 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562dbe002950 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562dbe002910 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562dbe0028e0 <col:219> 'int' 0
|   |-BinaryOperator 0x562dbe0030a8 <line:789:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe002b00 <col:3> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe003090 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562dbe003060 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562dbe003018 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562dbe003000 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562dbe002b20 <col:20> '_Bool' lvalue Var 0x562dbdffcae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562dbe003048 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562dbe003030 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562dbe002b40 <col:36> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x562dbe002fe0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562dbe002f90 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562dbe002d50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562dbe002c70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562dbe002b98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562dbe002b80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562dbe002b60 <col:55> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562dbe002c50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562dbe002be8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562dbe002bd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562dbe002bb0 <col:74> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x562dbe002c38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562dbe002c20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562dbe002c00 <col:93> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562dbe002d30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562dbe002cc8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562dbe002cb0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562dbe002c90 <col:112> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x562dbe002d18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562dbe002d00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562dbe002ce0 <col:131> '_Bool' lvalue Var 0x562dbdffc708 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x562dbe002f78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562dbe002f60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562dbe002d70 <col:148> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x562dbe002f40 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562dbe002f10 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562dbe002e30 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562dbe002de8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562dbe002dd0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562dbe002d90 <col:166> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562dbe002e18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562dbe002e00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562dbe002db0 <col:184> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x562dbe002ec8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562dbe002e80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562dbe002e50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562dbe002ef8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562dbe002ee0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562dbe002ea8 <col:212> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562dbe003670 <line:790:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe0030c8 <col:3> '_Bool' lvalue Var 0x562dbdffc708 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe003658 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562dbe003628 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562dbe0035e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562dbe0035c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562dbe0030e8 <col:20> '_Bool' lvalue Var 0x562dbdffcae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562dbe003610 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562dbe0035f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562dbe003108 <col:36> '_Bool' lvalue Var 0x562dbdffc708 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x562dbe0035a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562dbe003578 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562dbe003318 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562dbe003238 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562dbe003160 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562dbe003148 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562dbe003128 <col:55> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562dbe003218 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562dbe0031b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562dbe003198 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562dbe003178 <col:74> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x562dbe003200 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562dbe0031e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562dbe0031c8 <col:93> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562dbe0032f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562dbe003290 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562dbe003278 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562dbe003258 <col:112> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x562dbe0032e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562dbe0032c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562dbe0032a8 <col:131> '_Bool' lvalue Var 0x562dbdffc708 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x562dbe003560 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562dbe003548 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562dbe003338 <col:148> '_Bool' lvalue Var 0x562dbdffc708 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x562dbe003528 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562dbe0034f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562dbe0033f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562dbe0033b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562dbe003398 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562dbe003358 <col:166> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562dbe0033e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562dbe0033c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562dbe003378 <col:184> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x562dbe0034c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562dbe003448 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562dbe003418 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562dbe0034e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562dbe0034a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562dbe003470 <col:219> 'int' 0
|   |-BinaryOperator 0x562dbe0036e8 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562dbe003690 <col:3> 'int' lvalue Var 0x562dbdffbb30 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x562dbe0036d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562dbe0036b0 <col:25> 'int' lvalue Var 0x562dbdffc230 'z' 'int'
|   |-BinaryOperator 0x562dbe003818 <line:792:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x562dbe003708 <col:3> 'int' lvalue Var 0x562dbdffc230 'z' 'int'
|   | `-ConditionalOperator 0x562dbe0037e8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x562dbe0037a0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562dbe003788 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562dbe003728 <col:7> '_Bool' lvalue Var 0x562dbdffc2c8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x562dbe0037b8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562dbe003748 <col:25> 'int' lvalue Var 0x562dbdffc348 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x562dbe0037d0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x562dbe003768 <col:37> 'int' lvalue Var 0x562dbdffc230 'z' 'int'
|   |-BinaryOperator 0x562dbe0038b0 <line:793:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe003838 <col:3> '_Bool' lvalue Var 0x562dbdffc2c8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x562dbe003888 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562dbe003858 <col:28> 'int' 0
|   |-CallExpr 0x562dbe003908 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562dbe0038f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbe0038d0 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562dbe003960 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562dbe003948 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbe003928 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562dbe0039d8 <line:796:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562dbe003980 <col:3> 'int' lvalue Var 0x562dbdffbc50 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x562dbe0039c0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562dbe0039a0 <col:25> 'int' lvalue Var 0x562dbdffbd70 'a' 'int'
|   |-CallExpr 0x562dbe003a30 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562dbe003a18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbe0039f8 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562dbe003a88 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562dbe003a70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbe003a50 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562dbe003d70 <line:799:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562dbe003aa8 <col:3> 'int' lvalue Var 0x562dbdffc230 'z' 'int'
|   | `-ConditionalOperator 0x562dbe003d40 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562dbe003b68 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562dbe003b20 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562dbe003b08 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562dbe003ac8 <col:7> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562dbe003b50 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562dbe003b38 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562dbe003ae8 <col:25> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x562dbe003d28 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562dbe003b88 <col:42> 'int' lvalue Var 0x562dbdffc880 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x562dbe003d08 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562dbe003cd8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562dbe003c48 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562dbe003c00 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562dbe003be8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562dbe003ba8 <col:55> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562dbe003c30 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562dbe003c18 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562dbe003bc8 <col:73> '_Bool' lvalue Var 0x562dbdffc708 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562dbe003ca8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562dbe003c68 <col:90> 'int' lvalue Var 0x562dbdffc978 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562dbe003cc0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562dbe003c88 <col:102> 'int' lvalue Var 0x562dbdffc230 'z' 'int'
|   |-BinaryOperator 0x562dbe003f78 <line:800:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe003d90 <col:3> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe003f60 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562dbe003f30 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562dbe003e50 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562dbe003e08 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562dbe003df0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562dbe003db0 <col:20> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562dbe003e38 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562dbe003e20 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562dbe003dd0 <col:38> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562dbe003ee8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562dbe003ea0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562dbe003e70 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562dbe003f18 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562dbe003f00 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562dbe003ec8 <col:66> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562dbe004278 <line:801:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe003f98 <col:3> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe004260 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562dbe004230 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562dbe004150 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562dbe004070 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562dbe004028 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562dbe004010 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562dbe003fb8 <col:20> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562dbe004058 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562dbe004040 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562dbe003ff0 <col:38> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562dbe004130 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562dbe0040e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562dbe0040d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562dbe004090 <col:56> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562dbe004118 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562dbe004100 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562dbe0040b0 <col:74> '_Bool' lvalue Var 0x562dbdffc708 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562dbe0041e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562dbe0041a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562dbe004170 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562dbe004218 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562dbe004200 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562dbe0041c8 <col:102> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562dbe004480 <line:802:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe004298 <col:3> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe004468 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562dbe004438 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562dbe004358 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562dbe004310 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562dbe0042f8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562dbe0042b8 <col:20> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562dbe004340 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562dbe004328 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562dbe0042d8 <col:38> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562dbe0043f0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562dbe0043a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562dbe004378 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562dbe004420 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562dbe004408 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562dbe0043d0 <col:66> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562dbe004768 <line:803:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562dbe0044a0 <col:3> '_Bool' lvalue Var 0x562dbdffc708 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562dbe004750 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562dbe004720 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562dbe004640 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562dbe004560 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562dbe004518 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562dbe004500 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562dbe0044c0 <col:20> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562dbe004548 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562dbe004530 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562dbe0044e0 <col:38> '_Bool' lvalue Var 0x562dbdffc528 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562dbe004620 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562dbe0045d8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562dbe0045c0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562dbe004580 <col:56> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562dbe004608 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562dbe0045f0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562dbe0045a0 <col:74> '_Bool' lvalue Var 0x562dbdffc708 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562dbe0046d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562dbe004690 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562dbe004660 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562dbe004708 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562dbe0046f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562dbe0046b8 <col:102> '_Bool' lvalue Var 0x562dbdffc708 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x562dbe0047c0 <line:804:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562dbe0047a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbe004788 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562dbe004818 <line:805:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562dbe004800 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbe0047e0 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562dbe0048d0 <line:806:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562dbe004838 <col:3> 'int' lvalue Var 0x562dbdffb590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562dbe0048b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562dbe004898 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562dbe004858 <col:22> 'int' lvalue Var 0x562dbdffb590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562dbe004878 <col:41> 'int' 1
|   |-CallExpr 0x562dbe004928 <line:807:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562dbe004910 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562dbe0048f0 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562dbe0049a0 <line:808:3, col:36>
|     `-CallExpr 0x562dbe004980 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562dbe004968 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562dbe004948 <col:10> 'void *(void)' Function 0x562dbdfa1e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562dbe004b30 prev 0x562dbdffb2d8 <line:810:1, line:812:1> line:810:6 fence 'void ()'
| `-CompoundStmt 0x562dbe004bd0 <line:811:1, line:812:1>
|-FunctionDecl 0x562dbe004c00 prev 0x562dbdffb398 <line:813:1, line:815:1> line:813:6 isync 'void ()'
| `-CompoundStmt 0x562dbe004ca0 <line:814:1, line:815:1>
|-FunctionDecl 0x562dbe004cd0 prev 0x562dbdffb458 <line:816:1, line:818:1> line:816:6 lwfence 'void ()'
| `-CompoundStmt 0x562dbe004d70 <line:817:1, line:818:1>
`-FunctionDecl 0x562dbe004dd8 <line:819:1, line:843:1> line:819:5 main 'int ()'
  `-CompoundStmt 0x562dbe006bf0 <line:820:1, line:843:1>
    |-DeclStmt 0x562dbe004ef0 <line:821:3, col:16>
    | `-VarDecl 0x562dbe004e88 <col:3, col:13> col:13 used t49 'pthread_t':'unsigned long'
    |-CallExpr 0x562dbe005118 <line:822:3, col:52> 'int'
    | |-ImplicitCastExpr 0x562dbe005100 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562dbe004f08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562dbdfe28f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562dbe004f48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562dbe004f28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562dbe004e88 't49' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562dbe005158 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562dbe004fc0 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x562dbe004f98 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562dbe004f60 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x562dbe005170 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562dbe005000 <col:37> 'void *(void *)' Function 0x562dbdffcbf8 'P0' 'void *(void *)'
    | `-ParenExpr 0x562dbe005080 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x562dbe005058 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562dbe005020 <col:50> 'int' 0
    |-DeclStmt 0x562dbe005200 <line:823:3, col:16>
    | `-VarDecl 0x562dbe005198 <col:3, col:13> col:13 used t50 'pthread_t':'unsigned long'
    |-CallExpr 0x562dbe0053a8 <line:824:3, col:52> 'int'
    | |-ImplicitCastExpr 0x562dbe005390 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562dbe005218 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562dbdfe28f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562dbe005258 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562dbe005238 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562dbe005198 't50' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562dbe0053e8 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562dbe0052d0 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x562dbe0052a8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562dbe005270 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x562dbe005400 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562dbe0052f0 <col:37> 'void *(void *)' Function 0x562dbdffd558 'P1' 'void *(void *)'
    | `-ParenExpr 0x562dbe005370 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x562dbe005348 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562dbe005310 <col:50> 'int' 0
    |-DeclStmt 0x562dbe005490 <line:825:3, col:16>
    | `-VarDecl 0x562dbe005428 <col:3, col:13> col:13 used t51 'pthread_t':'unsigned long'
    |-CallExpr 0x562dbe005638 <line:826:3, col:52> 'int'
    | |-ImplicitCastExpr 0x562dbe005620 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562dbe0054a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562dbdfe28f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562dbe0054e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562dbe0054c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562dbe005428 't51' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562dbe005678 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562dbe005560 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x562dbe005538 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562dbe005500 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x562dbe005690 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562dbe005580 <col:37> 'void *(void *)' Function 0x562dbe000718 'P2' 'void *(void *)'
    | `-ParenExpr 0x562dbe005600 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x562dbe0055d8 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562dbe0055a0 <col:50> 'int' 0
    |-CallExpr 0x562dbe0056e0 <line:827:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562dbe0056c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562dbe0056a8 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562dbe0057b0 <line:828:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x562dbe005700 <col:3> '_Bool' lvalue Var 0x562dbdffbe08 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x562dbe005798 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x562dbe005778 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x562dbe005760 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x562dbe005720 <col:21> 'int' lvalue Var 0x562dbdffb590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x562dbe005740 <col:41> 'int' 3
    |-CallExpr 0x562dbe005808 <line:829:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562dbe0057f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562dbe0057d0 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562dbe005880 <line:830:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562dbe005868 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562dbe005828 <col:3> 'void (int)' Function 0x562dbdfa1ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x562dbe0058c0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562dbe0058a8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562dbe005848 <col:21> '_Bool' lvalue Var 0x562dbdffbe08 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x562dbe005910 <line:831:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562dbe0058f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562dbe0058d8 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562dbe005bf8 <line:832:3, col:103> 'int' '='
    | |-DeclRefExpr 0x562dbe005930 <col:3> 'int' lvalue Var 0x562dbdffc230 'z' 'int'
    | `-ConditionalOperator 0x562dbe005bc8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x562dbe0059f0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x562dbe0059a8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x562dbe005990 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x562dbe005950 <col:7> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x562dbe0059d8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x562dbe0059c0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x562dbe005970 <col:25> '_Bool' lvalue Var 0x562dbdffc3c0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x562dbe005bb0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562dbe005a10 <col:42> 'int' lvalue Var 0x562dbdffc880 'z$w_buff0' 'int'
    |   `-ParenExpr 0x562dbe005b90 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x562dbe005b60 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x562dbe005ad0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x562dbe005a88 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x562dbe005a70 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x562dbe005a30 <col:55> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x562dbe005ab8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x562dbe005aa0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x562dbe005a50 <col:73> '_Bool' lvalue Var 0x562dbdffc5a0 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562dbe005b30 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562dbe005af0 <col:90> 'int' lvalue Var 0x562dbdffc978 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x562dbe005b48 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x562dbe005b10 <col:102> 'int' lvalue Var 0x562dbdffc230 'z' 'int'
    |-BinaryOperator 0x562dbe005e00 <line:833:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562dbe005c18 <col:3> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x562dbe005de8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562dbe005db8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562dbe005cd8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562dbe005c90 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562dbe005c78 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562dbe005c38 <col:20> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562dbe005cc0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562dbe005ca8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562dbe005c58 <col:38> '_Bool' lvalue Var 0x562dbdffc3c0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562dbe005d70 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562dbe005d28 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562dbe005cf8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562dbe005da0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562dbe005d88 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562dbe005d50 <col:66> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x562dbe0060f8 <line:834:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562dbe005e20 <col:3> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x562dbe0060e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562dbe0060b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562dbe005fc0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562dbe005ee0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562dbe005e98 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562dbe005e80 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562dbe005e40 <col:20> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562dbe005ec8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562dbe005eb0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562dbe005e60 <col:38> '_Bool' lvalue Var 0x562dbdffc3c0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562dbe005fa0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562dbe005f58 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562dbe005f40 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562dbe005f00 <col:56> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562dbe005f88 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562dbe005f70 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562dbe005f20 <col:74> '_Bool' lvalue Var 0x562dbdffc5a0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562dbe006068 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562dbe006020 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562dbe005fe0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562dbe006098 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562dbe006080 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562dbe006048 <col:102> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x562dbe006300 <line:835:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562dbe006118 <col:3> '_Bool' lvalue Var 0x562dbdffc3c0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562dbe0062e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562dbe0062b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562dbe0061d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562dbe006190 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562dbe006178 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562dbe006138 <col:20> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562dbe0061c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562dbe0061a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562dbe006158 <col:38> '_Bool' lvalue Var 0x562dbdffc3c0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562dbe006270 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562dbe006228 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562dbe0061f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562dbe0062a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562dbe006288 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562dbe006250 <col:66> '_Bool' lvalue Var 0x562dbdffc3c0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x562dbe0065e8 <line:836:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562dbe006320 <col:3> '_Bool' lvalue Var 0x562dbdffc5a0 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562dbe0065d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562dbe0065a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562dbe0064c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562dbe0063e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562dbe006398 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562dbe006380 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562dbe006340 <col:20> '_Bool' lvalue Var 0x562dbdffc8f8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562dbe0063c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562dbe0063b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562dbe006360 <col:38> '_Bool' lvalue Var 0x562dbdffc3c0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562dbe0064a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562dbe006458 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562dbe006440 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562dbe006400 <col:56> '_Bool' lvalue Var 0x562dbdffc9f0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562dbe006488 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562dbe006470 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562dbe006420 <col:74> '_Bool' lvalue Var 0x562dbdffc5a0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562dbe006558 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562dbe006510 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562dbe0064e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562dbe006588 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562dbe006570 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562dbe006538 <col:102> '_Bool' lvalue Var 0x562dbdffc5a0 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x562dbe006640 <line:837:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562dbe006628 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562dbe006608 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562dbe006698 <line:838:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562dbe006680 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562dbe006660 <col:3> 'void ()' Function 0x562dbdfa2350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562dbe006a98 <line:839:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x562dbe0066b8 <col:3> '_Bool' lvalue Var 0x562dbdffbe80 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x562dbe006a80 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x562dbe006a68 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x562dbe006a48 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x562dbe006a28 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x562dbe006990 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x562dbe0068f8 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x562dbe006860 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x562dbe0067c8 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x562dbe006730 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x562dbe006718 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x562dbe0066d8 <col:23> 'int' lvalue Var 0x562dbdffb6b0 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x562dbe0066f8 <col:46> 'int' 1
    |         | | | | `-BinaryOperator 0x562dbe0067a8 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x562dbe006790 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x562dbe006750 <col:51> 'int' lvalue Var 0x562dbdffb7d0 '__unbuffered_p0_EBX' 'int'
    |         | | | |   `-IntegerLiteral 0x562dbe006770 <col:74> 'int' 0
    |         | | | `-BinaryOperator 0x562dbe006840 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x562dbe006828 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x562dbe0067e8 <col:79> 'int' lvalue Var 0x562dbdffb8f0 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x562dbe006808 <col:102> 'int' 1
    |         | | `-BinaryOperator 0x562dbe0068d8 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x562dbe0068c0 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x562dbe006880 <col:107> 'int' lvalue Var 0x562dbdffba10 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x562dbe0068a0 <col:130> 'int' 0
    |         | `-BinaryOperator 0x562dbe006970 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x562dbe006958 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x562dbe006918 <col:135> 'int' lvalue Var 0x562dbdffbb30 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x562dbe006938 <col:158> 'int' 1
    |         `-BinaryOperator 0x562dbe006a08 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x562dbe0069f0 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562dbe0069b0 <col:163> 'int' lvalue Var 0x562dbdffbc50 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x562dbe0069d0 <col:186> 'int' 0
    |-CallExpr 0x562dbe006af0 <line:840:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562dbe006ad8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562dbe006ab8 <col:3> 'void ()' Function 0x562dbdfa2410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562dbe006b68 <line:841:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562dbe006b50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562dbe006b10 <col:3> 'void (int)' Function 0x562dbdfa20d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x562dbe006ba8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562dbe006b90 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562dbe006b30 <col:21> '_Bool' lvalue Var 0x562dbdffbe80 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x562dbe006be0 <line:842:3, col:10>
      `-IntegerLiteral 0x562dbe006bc0 <col:10> 'int' 0
