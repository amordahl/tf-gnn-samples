TranslationUnitDecl 0x55b589b0bf38 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55b589b0c7f8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55b589b0c4d0 '__int128'
|-TypedefDecl 0x55b589b0c868 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55b589b0c4f0 'unsigned __int128'
|-TypedefDecl 0x55b589b0cb70 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55b589b0c940 'struct __NSConstantString_tag'
|   `-Record 0x55b589b0c8c0 '__NSConstantString_tag'
|-TypedefDecl 0x55b589b0cc18 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55b589b0cbd0 'char *'
|   `-BuiltinType 0x55b589b0bfd0 'char'
|-TypedefDecl 0x55b589b4bf30 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55b589b0ceb0 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55b589b0ccf0 'struct __va_list_tag'
|     `-Record 0x55b589b0cc70 '__va_list_tag'
|-TypedefDecl 0x55b589b4bfa0 <array-industry-pattern/array_of_struct_ptr_cond_init_true-unreach-call.i:1:1, col:22> col:22 referenced size_t 'unsigned int'
| `-BuiltinType 0x55b589b0c0d0 'unsigned int'
|-FunctionDecl 0x55b589b4c188 <line:2:14> col:14 implicit used malloc 'void *(unsigned long)' extern
| `-ParmVarDecl 0x55b589b4c228 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x55b589b4c298 prev 0x55b589b4c188 <col:1, col:105> col:14 used malloc 'void *(size_t)' extern
| |-ParmVarDecl 0x55b589b4c038 <col:22, col:29> col:29 __size 'size_t':'unsigned int'
| |-NoThrowAttr 0x55b589b4c340 <col:53>
| `-RestrictAttr 0x55b589b4c398 <col:94> malloc
|-FunctionDecl 0x55b589b4c890 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55b589b4ca60 <line:4:1, col:79> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55b589b4c990 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x55b589b4cca0 <col:34, col:79>
|   `-IfStmt 0x55b589b4cc88 <col:36, col:77>
|     |-UnaryOperator 0x55b589b4cb60 <col:39, col:45> 'int' prefix '!' cannot overflow
|     | `-ImplicitCastExpr 0x55b589b4cb48 <col:40, col:45> 'int' <LValueToRValue>
|     |   `-ParenExpr 0x55b589b4cb28 <col:40, col:45> 'int' lvalue
|     |     `-DeclRefExpr 0x55b589b4cb08 <col:41> 'int' lvalue ParmVar 0x55b589b4c990 'cond' 'int'
|     `-CompoundStmt 0x55b589b4cc70 <col:48, col:77>
|       `-LabelStmt 0x55b589b4cc58 <col:50, col:74> 'ERROR'
|         `-CallExpr 0x55b589b4cbe8 <col:57, col:74> 'void'
|           `-ImplicitCastExpr 0x55b589b4cbd0 <col:57> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|             `-DeclRefExpr 0x55b589b4cb78 <col:57> 'void () __attribute__((noreturn))' Function 0x55b589b4c890 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|-RecordDecl 0x55b589b4ccb8 <line:5:1, line:9:1> line:5:8 struct _S definition
| |-FieldDecl 0x55b589b4cdb8 <line:7:2, col:7> col:7 referenced p 'int *'
| `-FieldDecl 0x55b589b4ce20 <line:8:2, col:6> col:6 referenced n 'int'
|-TypedefDecl 0x55b589b4cec8 <line:10:1, col:19> col:19 referenced S 'struct _S':'struct _S'
| `-ElaboratedType 0x55b589b4ce70 'struct _S' sugar
|   `-RecordType 0x55b589b4cd40 'struct _S'
|     `-Record 0x55b589b4ccb8 '_S'
|-VarDecl 0x55b589b71350 <line:11:1, col:12> col:4 used a 'S *[100000]'
|-FunctionDecl 0x55b589b71418 <line:12:1, col:22> col:12 used user_read 'int ()' extern
`-FunctionDecl 0x55b589b714e0 <line:13:1, line:39:1> line:13:5 main 'int ()'
  `-CompoundStmt 0x55b589b738b8 <line:14:1, line:39:1>
    |-DeclStmt 0x55b589b71600 <line:15:2, col:7>
    | `-VarDecl 0x55b589b71598 <col:2, col:6> col:6 used i 'int'
    |-ForStmt 0x55b589b71f78 <line:16:2, line:29:2>
    | |-BinaryOperator 0x55b589b71658 <line:16:6, col:10> 'int' '='
    | | |-DeclRefExpr 0x55b589b71618 <col:6> 'int' lvalue Var 0x55b589b71598 'i' 'int'
    | | `-IntegerLiteral 0x55b589b71638 <col:10> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x55b589b716d0 <col:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x55b589b716b8 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x55b589b71678 <col:13> 'int' lvalue Var 0x55b589b71598 'i' 'int'
    | | `-IntegerLiteral 0x55b589b71698 <col:17> 'int' 100000
    | |-UnaryOperator 0x55b589b71710 <col:25, col:26> 'int' postfix '++'
    | | `-DeclRefExpr 0x55b589b716f0 <col:25> 'int' lvalue Var 0x55b589b71598 'i' 'int'
    | `-CompoundStmt 0x55b589b71f48 <line:17:2, line:29:2>
    |   |-DeclStmt 0x55b589b71938 <line:18:3, col:33>
    |   | `-VarDecl 0x55b589b71738 <col:3, col:32> col:6 used s1 'S *' cinit
    |   |   `-CStyleCastExpr 0x55b589b718b8 <col:11, col:32> 'S *' <BitCast>
    |   |     `-CallExpr 0x55b589b71868 <col:16, col:32> 'void *'
    |   |       |-ImplicitCastExpr 0x55b589b71850 <col:16> 'void *(*)(size_t)' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x55b589b717a0 <col:16> 'void *(size_t)' Function 0x55b589b4c298 'malloc' 'void *(size_t)'
    |   |       `-ImplicitCastExpr 0x55b589b71890 <col:23, col:31> 'size_t':'unsigned int' <IntegralCast>
    |   |         `-UnaryExprOrTypeTraitExpr 0x55b589b717d0 <col:23, col:31> 'unsigned long' sizeof 'S':'struct _S'
    |   |-BinaryOperator 0x55b589b71a48 <line:19:3, col:23> 'int' '='
    |   | |-MemberExpr 0x55b589b71988 <col:3, col:9> 'int' lvalue ->n 0x55b589b4ce20
    |   | | `-ImplicitCastExpr 0x55b589b71970 <col:3> 'S *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55b589b71950 <col:3> 'S *' lvalue Var 0x55b589b71738 's1' 'S *'
    |   | `-CallExpr 0x55b589b71a28 <col:13, col:23> 'int'
    |   |   `-ImplicitCastExpr 0x55b589b71a10 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |     `-DeclRefExpr 0x55b589b719b8 <col:13> 'int ()' Function 0x55b589b71418 'user_read' 'int ()'
    |   |-IfStmt 0x55b589b71dd0 <line:20:3, line:27:3> has_else
    |   | |-BinaryOperator 0x55b589b71b08 <line:20:6, col:16> 'int' '=='
    |   | | |-ImplicitCastExpr 0x55b589b71af0 <col:6, col:11> 'int' <LValueToRValue>
    |   | | | `-MemberExpr 0x55b589b71aa0 <col:6, col:11> 'int' lvalue ->n 0x55b589b4ce20
    |   | | |   `-ImplicitCastExpr 0x55b589b71a88 <col:6> 'S *' <LValueToRValue>
    |   | | |     `-DeclRefExpr 0x55b589b71a68 <col:6> 'S *' lvalue Var 0x55b589b71738 's1' 'S *'
    |   | | `-IntegerLiteral 0x55b589b71ad0 <col:16> 'int' 1
    |   | |-CompoundStmt 0x55b589b71ca0 <line:21:3, line:23:3>
    |   | | `-BinaryOperator 0x55b589b71c80 <line:22:4, col:39> 'int *' '='
    |   | |   |-MemberExpr 0x55b589b71b60 <col:4, col:10> 'int *' lvalue ->p 0x55b589b4cdb8
    |   | |   | `-ImplicitCastExpr 0x55b589b71b48 <col:4> 'S *' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55b589b71b28 <col:4> 'S *' lvalue Var 0x55b589b71738 's1' 'S *'
    |   | |   `-CStyleCastExpr 0x55b589b71c58 <col:14, col:39> 'int *' <BitCast>
    |   | |     `-CallExpr 0x55b589b71c00 <col:21, col:39> 'void *'
    |   | |       |-ImplicitCastExpr 0x55b589b71be8 <col:21> 'void *(*)(size_t)' <FunctionToPointerDecay>
    |   | |       | `-DeclRefExpr 0x55b589b71b90 <col:21> 'void *(size_t)' Function 0x55b589b4c298 'malloc' 'void *(size_t)'
    |   | |       `-ImplicitCastExpr 0x55b589b71c28 <col:28, col:38> 'size_t':'unsigned int' <IntegralCast>
    |   | |         `-UnaryExprOrTypeTraitExpr 0x55b589b71bc8 <col:28, col:38> 'unsigned long' sizeof 'int'
    |   | `-CompoundStmt 0x55b589b71db8 <line:25:3, line:27:3>
    |   |   `-BinaryOperator 0x55b589b71d98 <line:26:4, col:22> 'int *' '='
    |   |     |-MemberExpr 0x55b589b71cf0 <col:4, col:10> 'int *' lvalue ->p 0x55b589b4cdb8
    |   |     | `-ImplicitCastExpr 0x55b589b71cd8 <col:4> 'S *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x55b589b71cb8 <col:4> 'S *' lvalue Var 0x55b589b71738 's1' 'S *'
    |   |     `-ImplicitCastExpr 0x55b589b71d80 <col:14, col:22> 'int *' <NullToPointer>
    |   |       `-CStyleCastExpr 0x55b589b71d58 <col:14, col:22> 'void *' <NullToPointer>
    |   |         `-IntegerLiteral 0x55b589b71d20 <col:22> 'int' 0
    |   `-BinaryOperator 0x55b589b71f28 <line:28:3, col:10> 'S *' '='
    |     |-ArraySubscriptExpr 0x55b589b71ed0 <col:3, col:6> 'S *' lvalue
    |     | |-ImplicitCastExpr 0x55b589b71ea0 <col:3> 'S **' <ArrayToPointerDecay>
    |     | | `-DeclRefExpr 0x55b589b71df8 <col:3> 'S *[100000]' lvalue Var 0x55b589b71350 'a' 'S *[100000]'
    |     | `-ImplicitCastExpr 0x55b589b71eb8 <col:5> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b589b71e18 <col:5> 'int' lvalue Var 0x55b589b71598 'i' 'int'
    |     `-ImplicitCastExpr 0x55b589b71f10 <col:10> 'S *' <LValueToRValue>
    |       `-DeclRefExpr 0x55b589b71ef0 <col:10> 'S *' lvalue Var 0x55b589b71738 's1' 'S *'
    |-ForStmt 0x55b589b73850 <line:30:2, line:37:2>
    | |-BinaryOperator 0x55b589b71ff0 <line:30:6, col:10> 'int' '='
    | | |-DeclRefExpr 0x55b589b71fb0 <col:6> 'int' lvalue Var 0x55b589b71598 'i' 'int'
    | | `-IntegerLiteral 0x55b589b71fd0 <col:10> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x55b589b72068 <col:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x55b589b72050 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x55b589b72010 <col:13> 'int' lvalue Var 0x55b589b71598 'i' 'int'
    | | `-IntegerLiteral 0x55b589b72030 <col:17> 'int' 100000
    | |-UnaryOperator 0x55b589b720a8 <col:25, col:26> 'int' postfix '++'
    | | `-DeclRefExpr 0x55b589b72088 <col:25> 'int' lvalue Var 0x55b589b71598 'i' 'int'
    | `-CompoundStmt 0x55b589b73830 <line:31:2, line:37:2>
    |   |-DeclStmt 0x55b589b73580 <line:32:3, col:15>
    |   | `-VarDecl 0x55b589b720d0 <col:3, col:14> col:6 used s2 'S *' cinit
    |   |   `-ImplicitCastExpr 0x55b589b721c8 <col:11, col:14> 'S *' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x55b589b721a8 <col:11, col:14> 'S *' lvalue
    |   |       |-ImplicitCastExpr 0x55b589b72178 <col:11> 'S **' <ArrayToPointerDecay>
    |   |       | `-DeclRefExpr 0x55b589b72138 <col:11> 'S *[100000]' lvalue Var 0x55b589b71350 'a' 'S *[100000]'
    |   |       `-ImplicitCastExpr 0x55b589b72190 <col:13> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x55b589b72158 <col:13> 'int' lvalue Var 0x55b589b71598 'i' 'int'
    |   `-IfStmt 0x55b589b73818 <line:33:3, line:36:3>
    |     |-BinaryOperator 0x55b589b73638 <line:33:6, col:16> 'int' '=='
    |     | |-ImplicitCastExpr 0x55b589b73620 <col:6, col:11> 'int' <LValueToRValue>
    |     | | `-MemberExpr 0x55b589b735d0 <col:6, col:11> 'int' lvalue ->n 0x55b589b4ce20
    |     | |   `-ImplicitCastExpr 0x55b589b735b8 <col:6> 'S *' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55b589b73598 <col:6> 'S *' lvalue Var 0x55b589b720d0 's2' 'S *'
    |     | `-IntegerLiteral 0x55b589b73600 <col:16> 'int' 1
    |     `-CompoundStmt 0x55b589b73800 <line:34:3, line:36:3>
    |       `-CallExpr 0x55b589b737d8 <line:35:4, col:42> 'void'
    |         |-ImplicitCastExpr 0x55b589b737c0 <col:4> 'void (*)(int)' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x55b589b73658 <col:4> 'void (int)' Function 0x55b589b4ca60 '__VERIFIER_assert' 'void (int)'
    |         `-BinaryOperator 0x55b589b73770 <col:22, col:41> 'int' '!='
    |           |-ImplicitCastExpr 0x55b589b73740 <col:22, col:28> 'int *' <LValueToRValue>
    |           | `-MemberExpr 0x55b589b736b0 <col:22, col:28> 'int *' lvalue ->p 0x55b589b4cdb8
    |           |   `-ImplicitCastExpr 0x55b589b73698 <col:22> 'S *' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55b589b73678 <col:22> 'S *' lvalue Var 0x55b589b720d0 's2' 'S *'
    |           `-ImplicitCastExpr 0x55b589b73758 <col:33, col:41> 'int *' <BitCast>
    |             `-CStyleCastExpr 0x55b589b73718 <col:33, col:41> 'void *' <NullToPointer>
    |               `-IntegerLiteral 0x55b589b736e0 <col:41> 'int' 0
    `-ReturnStmt 0x55b589b738a8 <line:38:2, col:9>
      `-IntegerLiteral 0x55b589b73888 <col:9> 'int' 0
