TranslationUnitDecl 0x55ae838b6dd8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55ae838b7698 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55ae838b7370 '__int128'
|-TypedefDecl 0x55ae838b7708 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55ae838b7390 'unsigned __int128'
|-TypedefDecl 0x55ae838b7a10 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55ae838b77e0 'struct __NSConstantString_tag'
|   `-Record 0x55ae838b7760 '__NSConstantString_tag'
|-TypedefDecl 0x55ae838b7ab8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55ae838b7a70 'char *'
|   `-BuiltinType 0x55ae838b6e70 'char'
|-TypedefDecl 0x55ae838f6c00 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55ae838b7d50 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55ae838b7b90 'struct __va_list_tag'
|     `-Record 0x55ae838b7b10 '__va_list_tag'
|-FunctionDecl 0x55ae838f6ce0 <array-examples/standard_strcmp_true-unreach-call_ground.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55ae838f6eb0 <line:2:1, col:79> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55ae838f6de0 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x55ae838f70f0 <col:34, col:79>
|   `-IfStmt 0x55ae838f70d8 <col:36, col:77>
|     |-UnaryOperator 0x55ae838f6fb0 <col:39, col:45> 'int' prefix '!' cannot overflow
|     | `-ImplicitCastExpr 0x55ae838f6f98 <col:40, col:45> 'int' <LValueToRValue>
|     |   `-ParenExpr 0x55ae838f6f78 <col:40, col:45> 'int' lvalue
|     |     `-DeclRefExpr 0x55ae838f6f58 <col:41> 'int' lvalue ParmVar 0x55ae838f6de0 'cond' 'int'
|     `-CompoundStmt 0x55ae838f70c0 <col:48, col:77>
|       `-LabelStmt 0x55ae838f70a8 <col:50, col:74> 'ERROR'
|         `-CallExpr 0x55ae838f7038 <col:57, col:74> 'void'
|           `-ImplicitCastExpr 0x55ae838f7020 <col:57> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|             `-DeclRefExpr 0x55ae838f6fc8 <col:57> 'void () __attribute__((noreturn))' Function 0x55ae838f6ce0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|-FunctionDecl 0x55ae838f7408 <line:3:1, line:10:1> line:3:5 used _strcmp 'int (int *, int *)'
| |-ParmVarDecl 0x55ae838f7218 <col:14, col:28> col:18 used src 'int *':'int *'
| |-ParmVarDecl 0x55ae838f72e0 <col:32, col:46> col:36 used dst 'int *':'int *'
| `-CompoundStmt 0x55ae838f78c0 <col:50, line:10:1>
|   |-DeclStmt 0x55ae838f7558 <line:4:3, col:12>
|   | `-VarDecl 0x55ae838f74d0 <col:3, col:11> col:7 used i 'int' cinit
|   |   `-IntegerLiteral 0x55ae838f7538 <col:11> 'int' 0
|   |-WhileStmt 0x55ae838f7878 <line:5:3, line:8:3>
|   | |-BinaryOperator 0x55ae838f75c8 <line:5:11, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x55ae838f75b0 <col:11> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x55ae838f7570 <col:11> 'int' lvalue Var 0x55ae838f74d0 'i' 'int'
|   | | `-IntegerLiteral 0x55ae838f7590 <col:15> 'int' 100000
|   | `-CompoundStmt 0x55ae838f7858 <col:24, line:8:3>
|   |   |-IfStmt 0x55ae838f7788 <line:6:5, col:35>
|   |   | |-BinaryOperator 0x55ae838f7738 <col:9, col:24> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x55ae838f7708 <col:9, col:14> 'int' <LValueToRValue>
|   |   | | | `-ArraySubscriptExpr 0x55ae838f7658 <col:9, col:14> 'int' lvalue
|   |   | | |   |-ImplicitCastExpr 0x55ae838f7628 <col:9> 'int *':'int *' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x55ae838f75e8 <col:9> 'int *':'int *' lvalue ParmVar 0x55ae838f72e0 'dst' 'int *':'int *'
|   |   | | |   `-ImplicitCastExpr 0x55ae838f7640 <col:13> 'int' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x55ae838f7608 <col:13> 'int' lvalue Var 0x55ae838f74d0 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x55ae838f7720 <col:19, col:24> 'int' <LValueToRValue>
|   |   | |   `-ArraySubscriptExpr 0x55ae838f76e8 <col:19, col:24> 'int' lvalue
|   |   | |     |-ImplicitCastExpr 0x55ae838f76b8 <col:19> 'int *':'int *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x55ae838f7678 <col:19> 'int *':'int *' lvalue ParmVar 0x55ae838f7218 'src' 'int *':'int *'
|   |   | |     `-ImplicitCastExpr 0x55ae838f76d0 <col:23> 'int' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55ae838f7698 <col:23> 'int' lvalue Var 0x55ae838f74d0 'i' 'int'
|   |   | `-ReturnStmt 0x55ae838f7778 <col:28, col:35>
|   |   |   `-IntegerLiteral 0x55ae838f7758 <col:35> 'int' 1
|   |   `-BinaryOperator 0x55ae838f7838 <line:7:5, col:13> 'int' '='
|   |     |-DeclRefExpr 0x55ae838f77a0 <col:5> 'int' lvalue Var 0x55ae838f74d0 'i' 'int'
|   |     `-BinaryOperator 0x55ae838f7818 <col:9, col:13> 'int' '+'
|   |       |-ImplicitCastExpr 0x55ae838f7800 <col:9> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ae838f77c0 <col:9> 'int' lvalue Var 0x55ae838f74d0 'i' 'int'
|   |       `-IntegerLiteral 0x55ae838f77e0 <col:13> 'int' 1
|   `-ReturnStmt 0x55ae838f78b0 <line:9:3, col:10>
|     `-IntegerLiteral 0x55ae838f7890 <col:10> 'int' 0
`-FunctionDecl 0x55ae838f7948 <line:11:1, line:22:1> line:11:5 main 'int ()'
  `-CompoundStmt 0x55ae8391c7d8 <col:13, line:22:1>
    |-DeclStmt 0x55ae838f7ab0 <line:12:3, col:16>
    | `-VarDecl 0x55ae838f7a48 <col:3, col:15> col:7 used a 'int [100000]'
    |-DeclStmt 0x55ae838f7b90 <line:13:3, col:16>
    | `-VarDecl 0x55ae838f7b28 <col:3, col:15> col:7 used b 'int [100000]'
    |-DeclStmt 0x55ae8391c2e8 <line:14:3, col:27>
    | `-VarDecl 0x55ae8391c140 <col:3, col:26> col:7 used c 'int' cinit
    |   `-CallExpr 0x55ae8391c288 <col:11, col:26> 'int'
    |     |-ImplicitCastExpr 0x55ae8391c270 <col:11> 'int (*)(int *, int *)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x55ae8391c1a8 <col:11> 'int (int *, int *)' Function 0x55ae838f7408 '_strcmp' 'int (int *, int *)'
    |     |-ImplicitCastExpr 0x55ae8391c2b8 <col:20> 'int *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x55ae8391c1c8 <col:20> 'int [100000]' lvalue Var 0x55ae838f7a48 'a' 'int [100000]'
    |     `-ImplicitCastExpr 0x55ae8391c2d0 <col:24> 'int *' <ArrayToPointerDecay>
    |       `-DeclRefExpr 0x55ae8391c1e8 <col:24> 'int [100000]' lvalue Var 0x55ae838f7b28 'b' 'int [100000]'
    |-IfStmt 0x55ae8391c790 <line:15:3, line:20:3>
    | |-BinaryOperator 0x55ae8391c358 <line:15:8, col:13> 'int' '=='
    | | |-ImplicitCastExpr 0x55ae8391c340 <col:8> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x55ae8391c300 <col:8> 'int' lvalue Var 0x55ae8391c140 'c' 'int'
    | | `-IntegerLiteral 0x55ae8391c320 <col:13> 'int' 0
    | `-CompoundStmt 0x55ae8391c770 <col:17, line:20:3>
    |   |-DeclStmt 0x55ae8391c3f8 <line:16:5, col:10>
    |   | `-VarDecl 0x55ae8391c390 <col:5, col:9> col:9 used x 'int'
    |   `-ForStmt 0x55ae8391c738 <line:17:5, line:19:5>
    |     |-BinaryOperator 0x55ae8391c450 <line:17:11, col:15> 'int' '='
    |     | |-DeclRefExpr 0x55ae8391c410 <col:11> 'int' lvalue Var 0x55ae8391c390 'x' 'int'
    |     | `-IntegerLiteral 0x55ae8391c430 <col:15> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x55ae8391c4c8 <col:19, col:23> 'int' '<'
    |     | |-ImplicitCastExpr 0x55ae8391c4b0 <col:19> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x55ae8391c470 <col:19> 'int' lvalue Var 0x55ae8391c390 'x' 'int'
    |     | `-IntegerLiteral 0x55ae8391c490 <col:23> 'int' 100000
    |     |-UnaryOperator 0x55ae8391c508 <col:32, col:33> 'int' postfix '++'
    |     | `-DeclRefExpr 0x55ae8391c4e8 <col:32> 'int' lvalue Var 0x55ae8391c390 'x' 'int'
    |     `-CompoundStmt 0x55ae8391c720 <col:38, line:19:5>
    |       `-CallExpr 0x55ae8391c6f8 <line:18:7, col:39> 'void'
    |         |-ImplicitCastExpr 0x55ae8391c6e0 <col:7> 'void (*)(int)' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x55ae8391c520 <col:7> 'void (int)' Function 0x55ae838f6eb0 '__VERIFIER_assert' 'void (int)'
    |         `-BinaryOperator 0x55ae8391c690 <col:26, col:37> 'int' '=='
    |           |-ImplicitCastExpr 0x55ae8391c660 <col:26, col:29> 'int' <LValueToRValue>
    |           | `-ArraySubscriptExpr 0x55ae8391c5b0 <col:26, col:29> 'int' lvalue
    |           |   |-ImplicitCastExpr 0x55ae8391c580 <col:26> 'int *' <ArrayToPointerDecay>
    |           |   | `-DeclRefExpr 0x55ae8391c540 <col:26> 'int [100000]' lvalue Var 0x55ae838f7a48 'a' 'int [100000]'
    |           |   `-ImplicitCastExpr 0x55ae8391c598 <col:28> 'int' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55ae8391c560 <col:28> 'int' lvalue Var 0x55ae8391c390 'x' 'int'
    |           `-ImplicitCastExpr 0x55ae8391c678 <col:34, col:37> 'int' <LValueToRValue>
    |             `-ArraySubscriptExpr 0x55ae8391c640 <col:34, col:37> 'int' lvalue
    |               |-ImplicitCastExpr 0x55ae8391c610 <col:34> 'int *' <ArrayToPointerDecay>
    |               | `-DeclRefExpr 0x55ae8391c5d0 <col:34> 'int [100000]' lvalue Var 0x55ae838f7b28 'b' 'int [100000]'
    |               `-ImplicitCastExpr 0x55ae8391c628 <col:36> 'int' <LValueToRValue>
    |                 `-DeclRefExpr 0x55ae8391c5f0 <col:36> 'int' lvalue Var 0x55ae8391c390 'x' 'int'
    `-ReturnStmt 0x55ae8391c7c8 <line:21:3, col:10>
      `-IntegerLiteral 0x55ae8391c7a8 <col:10> 'int' 0
