TranslationUnitDecl 0x555ebf4ddf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x555ebf4de848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x555ebf4de520 '__int128'
|-TypedefDecl 0x555ebf4de8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x555ebf4de540 'unsigned __int128'
|-TypedefDecl 0x555ebf4debc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x555ebf4de990 'struct __NSConstantString_tag'
|   `-Record 0x555ebf4de910 '__NSConstantString_tag'
|-TypedefDecl 0x555ebf4dec68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x555ebf4dec20 'char *'
|   `-BuiltinType 0x555ebf4de020 'char'
|-TypedefDecl 0x555ebf51db60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x555ebf4def00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x555ebf4ded40 'struct __va_list_tag'
|     `-Record 0x555ebf4decc0 '__va_list_tag'
|-FunctionDecl 0x555ebf51dca0 <pthread-wmm/mix018_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x555ebf51dbd0 <col:31> col:34 'int'
|-FunctionDecl 0x555ebf51de68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x555ebf51df90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x555ebf51e0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x555ebf51e048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x555ebf51e308 <col:40, col:99>
|   |-IfStmt 0x555ebf51e2d8 <col:42, col:88>
|   | |-UnaryOperator 0x555ebf51e1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x555ebf51e1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x555ebf51e180 <col:47> 'int' lvalue ParmVar 0x555ebf51e048 'expression' 'int'
|   | `-CompoundStmt 0x555ebf51e2c0 <col:59, col:88>
|   |   `-LabelStmt 0x555ebf51e2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x555ebf51e238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x555ebf51e220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x555ebf51e1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x555ebf51df90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x555ebf51e2f0 <col:89>
|   `-ReturnStmt 0x555ebf51e2f8 <col:91>
|-FunctionDecl 0x555ebf51e350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x555ebf51e410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x555ebf51e790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555ebf51e4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x555ebf51e548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x555ebf51e5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x555ebf51e648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x555ebf51e850 <line:10:22>
|-FunctionDecl 0x555ebf5448a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555ebf51e8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x555ebf51e940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x555ebf51e9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x555ebf51ea40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x555ebf544960 <line:13:22>
|-FunctionDecl 0x555ebf544c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555ebf5449d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x555ebf544a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x555ebf544ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x555ebf544cc8 <line:15:22>
|-TypedefDecl 0x555ebf544d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x555ebf4de0e0 'unsigned char'
|-TypedefDecl 0x555ebf544da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x555ebf4de100 'unsigned short'
|-TypedefDecl 0x555ebf544e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x555ebf4de120 'unsigned int'
|-TypedefDecl 0x555ebf544e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-TypedefDecl 0x555ebf544ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x555ebf4de040 'signed char'
|-TypedefDecl 0x555ebf544f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x555ebf4de0e0 'unsigned char'
|-TypedefDecl 0x555ebf544fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x555ebf4de060 'short'
|-TypedefDecl 0x555ebf545048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x555ebf4de100 'unsigned short'
|-TypedefDecl 0x555ebf5450b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x555ebf4de080 'int'
|-TypedefDecl 0x555ebf545128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x555ebf4de120 'unsigned int'
|-TypedefDecl 0x555ebf545198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf545208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-TypedefDecl 0x555ebf545278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf5452e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-TypedefDecl 0x555ebf545358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-TypedefDecl 0x555ebf5453c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x555ebf4de120 'unsigned int'
|-TypedefDecl 0x555ebf545438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x555ebf4de120 'unsigned int'
|-TypedefDecl 0x555ebf5454a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-TypedefDecl 0x555ebf545518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-TypedefDecl 0x555ebf545588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x555ebf4de120 'unsigned int'
|-TypedefDecl 0x555ebf5455f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-TypedefDecl 0x555ebf545668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf5456d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf545748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x555ebf4de080 'int'
|-RecordDecl 0x555ebf5457a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x555ebf545918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x555ebf5459d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x555ebf545970 'struct __fsid_t' sugar
|   `-RecordType 0x555ebf545820 '__fsid_t'
|     `-Record 0x555ebf5457a0 ''
|-TypedefDecl 0x555ebf545a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf545ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-TypedefDecl 0x555ebf545b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-TypedefDecl 0x555ebf545ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x555ebf4de120 'unsigned int'
|-TypedefDecl 0x555ebf545c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf545c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x555ebf4de120 'unsigned int'
|-TypedefDecl 0x555ebf545cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf545d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x555ebf4de080 'int'
|-TypedefDecl 0x555ebf545dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x555ebf4de080 'int'
|-TypedefDecl 0x555ebf545e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x555ebf4de080 'int'
|-TypedefDecl 0x555ebf545eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x555ebf4de7a0 'void *'
|   `-BuiltinType 0x555ebf4ddfe0 'void'
|-TypedefDecl 0x555ebf545f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf545f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf546008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf546078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-TypedefDecl 0x555ebf5460e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-TypedefDecl 0x555ebf546158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-TypedefDecl 0x555ebf5461c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-TypedefDecl 0x555ebf546238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf5462a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf546318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf546388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-TypedefDecl 0x555ebf546418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x555ebf5463e0 '__off64_t' sugar
|   |-Typedef 0x555ebf5456d8 '__off64_t'
|   `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf546510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x555ebf5464d0 '__quad_t *'
|   `-TypedefType 0x555ebf546470 '__quad_t' sugar
|     |-Typedef 0x555ebf545278 '__quad_t'
|     `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf546580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x555ebf4dec20 'char *'
|   `-BuiltinType 0x555ebf4de020 'char'
|-TypedefDecl 0x555ebf5465f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf546660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x555ebf4de120 'unsigned int'
|-FunctionDecl 0x555ebf5467a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x555ebf5466d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x555ebf546ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x555ebf546ad8 <line:72:3, col:34>
|     `-CallExpr 0x555ebf546a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x555ebf546a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x555ebf546a10 <col:10> '<builtin fn type>' Function 0x555ebf546880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x555ebf546ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x555ebf546a30 <col:29> 'unsigned int' lvalue ParmVar 0x555ebf5466d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x555ebf546880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x555ebf546920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x555ebf546990 <col:10> Implicit
| `-ConstAttr 0x555ebf5469e8 <col:10> Implicit
|-FunctionDecl 0x555ebf546c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x555ebf546b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x555ebf546f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x555ebf546f48 <line:77:3, col:34>
|     `-CallExpr 0x555ebf546f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x555ebf546ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x555ebf546e78 <col:10> '<builtin fn type>' Function 0x555ebf546ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x555ebf546f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x555ebf546e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x555ebf546b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x555ebf546ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x555ebf546d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x555ebf546df8 <col:10> Implicit
| `-ConstAttr 0x555ebf546e50 <col:10> Implicit
|-TypedefDecl 0x555ebf546f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-TypedefDecl 0x555ebf547018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x555ebf546fe0 '__time_t' sugar
|   |-Typedef 0x555ebf545c18 '__time_t'
|   `-BuiltinType 0x555ebf4de0a0 'long'
|-RecordDecl 0x555ebf547070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x555ebf547128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x555ebf5471b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x555ebf547248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x555ebf547210 '__pid_t' sugar
|   |-Typedef 0x555ebf545748 '__pid_t'
|   `-BuiltinType 0x555ebf4de080 'int'
|-RecordDecl 0x555ebf5472a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x555ebf547360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x555ebf5473b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x555ebf547470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x555ebf5474d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-RecordDecl 0x555ebf547530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x555ebf5477c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x555ebf5498b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x555ebf547810 'struct cpu_set_t' sugar
|   `-RecordType 0x555ebf5475b0 'cpu_set_t'
|     `-Record 0x555ebf547530 ''
|-FunctionDecl 0x555ebf549b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x555ebf549958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555ebf549a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x555ebf549c38 <line:107:19>
|-FunctionDecl 0x555ebf549e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x555ebf549ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x555ebf549eb8 <col:69>
|-FunctionDecl 0x555ebf54a030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x555ebf549f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x555ebf54a0d8 <col:64>
|-FunctionDecl 0x555ebf54a398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x555ebf54a140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555ebf54a278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x555ebf54a448 <line:113:22>
|-FunctionDecl 0x555ebf54a6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x555ebf54a4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555ebf54a5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x555ebf54a778 <col:88>
|-FunctionDecl 0x555ebf54aa98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x555ebf54a7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555ebf54a8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x555ebf54a950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x555ebf54ab50 <col:62>
|-FunctionDecl 0x555ebf54acc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x555ebf54abb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x555ebf54ad70 <col:63>
|-FunctionDecl 0x555ebf54ae98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x555ebf54af38 <col:47>
|-FunctionDecl 0x555ebf54b040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x555ebf54afa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x555ebf54b0e8 <col:69>
|-FunctionDecl 0x555ebf54b1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x555ebf54b158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x555ebf54b298 <col:69>
|-FunctionDecl 0x555ebf54b558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555ebf54b300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555ebf54b438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x555ebf54b608 <col:88>
|-TypedefDecl 0x555ebf54b698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x555ebf54b660 '__clock_t' sugar
|   |-Typedef 0x555ebf545a58 '__clock_t'
|   `-BuiltinType 0x555ebf4de0a0 'long'
|-TypedefDecl 0x555ebf54b728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x555ebf54b6f0 '__clockid_t' sugar
|   |-Typedef 0x555ebf545e48 '__clockid_t'
|   `-BuiltinType 0x555ebf4de080 'int'
|-TypedefDecl 0x555ebf54b7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x555ebf54b780 '__timer_t' sugar
|   |-Typedef 0x555ebf545eb8 '__timer_t'
|   `-PointerType 0x555ebf4de7a0 'void *'
|     `-BuiltinType 0x555ebf4ddfe0 'void'
|-RecordDecl 0x555ebf54b810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x555ebf54b8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x555ebf54b950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x555ebf54b9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x555ebf54ba20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x555ebf54ba88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x555ebf54baf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x555ebf54bb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x555ebf54bbc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x555ebf54bc28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x555ebf54bc90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x555ebf54bcf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x555ebf54bd48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x555ebf54be18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x555ebf54be88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x555ebf54bf30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x555ebf54c100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x555ebf54c1a0 <col:45>
|-FunctionDecl 0x555ebf54c380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x555ebf54c270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x555ebf54c428 <col:54>
|-FunctionDecl 0x555ebf54c628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x555ebf54c490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x555ebf54c508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x555ebf54c6d8 <line:157:22>
| `-ConstAttr 0x555ebf54c730 <col:63>
|-FunctionDecl 0x555ebf54d560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555ebf54c828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x555ebf54d608 <col:56>
|-FunctionDecl 0x555ebf54d9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x555ebf54d678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x555ebf54d6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555ebf54d770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x555ebf54d868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x555ebf54da70 <col:54>
|-RecordDecl 0x555ebf54dac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x555ebf54db78 parent 0x555ebf4ddf88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x555ebf54ddd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x555ebf54de78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x555ebf54dee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x555ebf54df48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x555ebf54e038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x555ebf54e158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x555ebf54e100 'struct __locale_struct *'
|   `-ElaboratedType 0x555ebf54e090 'struct __locale_struct' sugar
|     `-RecordType 0x555ebf54db50 'struct __locale_struct'
|       `-Record 0x555ebf54dac8 '__locale_struct'
|-TypedefDecl 0x555ebf54e208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x555ebf54e1d0 '__locale_t' sugar
|   |-Typedef 0x555ebf54e158 '__locale_t'
|   `-PointerType 0x555ebf54e100 'struct __locale_struct *'
|     `-ElaboratedType 0x555ebf54e090 'struct __locale_struct' sugar
|       `-RecordType 0x555ebf54db50 'struct __locale_struct'
|         `-Record 0x555ebf54dac8 '__locale_struct'
|-FunctionDecl 0x555ebf54e610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x555ebf54e278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x555ebf54e2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555ebf54e370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x555ebf54e400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x555ebf54e478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x555ebf54e6d8 <col:40>
|-FunctionDecl 0x555ebf54e8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x555ebf54e7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x555ebf54e970 <col:66>
|-FunctionDecl 0x555ebf54ea80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x555ebf54e9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x555ebf54eb28 <col:69>
|-FunctionDecl 0x555ebf54ed58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x555ebf54eb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555ebf54ec20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x555ebf54ee08 <col:52>
|-FunctionDecl 0x555ebf54efb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x555ebf54ee70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555ebf54ef00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x555ebf54f060 <col:55>
|-FunctionDecl 0x555ebf54f1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x555ebf54f0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x555ebf54f2a0 <col:62>
|-FunctionDecl 0x555ebf54f418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x555ebf54f308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x555ebf54f4c0 <col:60>
|-FunctionDecl 0x555ebf54f718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x555ebf54f578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x555ebf54f5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x555ebf54f7c8 <col:44>
|-FunctionDecl 0x555ebf54f9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x555ebf54f830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555ebf54f8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x555ebf54fa88 <col:49>
|-VarDecl 0x555ebf54fb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x555ebf54fc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x555ebf54fc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x555ebf54fd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x555ebf54fe80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x555ebf54ff20 <col:42>
|-VarDecl 0x555ebf54ff90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x555ebf550010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x555ebf550198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x555ebf550088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x555ebf550240 <col:57>
|-FunctionDecl 0x555ebf550350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555ebf5502c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x555ebf5503f8 <col:56>
|-FunctionDecl 0x555ebf551540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555ebf550478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x555ebf5515e8 <col:59>
|-FunctionDecl 0x555ebf5516f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x555ebf551658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x555ebf551798 <col:48>
| `-ConstAttr 0x555ebf5517f0 <col:89>
|-FunctionDecl 0x555ebf551a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x555ebf5518a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x555ebf551938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x555ebf551cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555ebf551b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555ebf551bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x555ebf551d68 <col:88>
|-FunctionDecl 0x555ebf551f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555ebf551dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555ebf551e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x555ebf551fb0 <col:88>
|-FunctionDecl 0x555ebf5521c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x555ebf552018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555ebf5520a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x555ebf552278 <line:208:22>
|-FunctionDecl 0x555ebf5525e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x555ebf5522e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555ebf552360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x555ebf5523f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x555ebf552480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x555ebf5528e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x555ebf5526e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x555ebf5527c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x555ebf552998 <col:85>
|-FunctionDecl 0x555ebf552d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x555ebf552a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555ebf552b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x555ebf552c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x555ebf552e40 <col:52>
|-FunctionDecl 0x555ebf552fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x555ebf552ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x555ebf553060 <col:61>
|-FunctionDecl 0x555ebf553560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x555ebf5530c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x555ebf553148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x555ebf553278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x555ebf553368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x555ebf553620 <col:62>
|-FunctionDecl 0x555ebf553838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x555ebf553688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x555ebf553718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x555ebf5538e8 <line:221:22>
|-FunctionDecl 0x555ebf5539e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x555ebf553950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x555ebf553a90 <col:65>
|-TypedefDecl 0x555ebf553b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x555ebf4de140 'unsigned long'
|-RecordDecl 0x555ebf553b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x555ebf553ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x555ebf553d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555ebf553db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x555ebf553d60 'union pthread_attr_t' sugar
|   `-RecordType 0x555ebf553be0 'union pthread_attr_t'
|     `-Record 0x555ebf553b58 'pthread_attr_t'
|-RecordDecl 0x555ebf553e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x555ebf553f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x555ebf554000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x555ebf5540b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x555ebf554050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x555ebf553e90 'struct __pthread_internal_list'
|     `-Record 0x555ebf553e10 '__pthread_internal_list'
|-RecordDecl 0x555ebf554120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x555ebf5541c8 parent 0x555ebf4ddf88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x555ebf5542a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555ebf554308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x555ebf554370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x555ebf5543d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x555ebf554440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x555ebf5544a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x555ebf558580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x555ebf558630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x555ebf558720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x555ebf558788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555ebf558910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x555ebf5588b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x555ebf5541a0 'pthread_mutex_t'
|     `-Record 0x555ebf554120 ''
|-RecordDecl 0x555ebf558980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x555ebf558ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555ebf558b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555ebf558be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x555ebf558b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x555ebf558a00 'pthread_mutexattr_t'
|     `-Record 0x555ebf558980 ''
|-RecordDecl 0x555ebf558c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x555ebf558cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x555ebf558dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555ebf558e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x555ebf558e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x555ebf558ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x555ebf558f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x555ebf558fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x555ebf559030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x555ebf559098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x555ebf559150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix018_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix018_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x555ebf559240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x555ebf5592a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x555ebf5593e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x555ebf559380 'union pthread_cond_t' sugar
|   `-RecordType 0x555ebf558cd0 'pthread_cond_t'
|     `-Record 0x555ebf558c50 ''
|-RecordDecl 0x555ebf559450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x555ebf559590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555ebf5595f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555ebf5596b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x555ebf559650 'union pthread_condattr_t' sugar
|   `-RecordType 0x555ebf5594d0 'pthread_condattr_t'
|     `-Record 0x555ebf559450 ''
|-TypedefDecl 0x555ebf559738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x555ebf4de120 'unsigned int'
|-TypedefDecl 0x555ebf5597a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x555ebf4de080 'int'
|-RecordDecl 0x555ebf559800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x555ebf5598a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x555ebf559970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555ebf5599d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x555ebf559a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x555ebf559aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x555ebf559b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x555ebf559b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x555ebf559be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x555ebf559c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x555ebf559cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x555ebf559d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x555ebf559d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x555ebf559e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix018_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix018_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x555ebf559ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x555ebf559f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555ebf55a090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x555ebf55a030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x555ebf559880 'pthread_rwlock_t'
|     `-Record 0x555ebf559800 ''
|-RecordDecl 0x555ebf55a100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x555ebf55a240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x555ebf55a2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555ebf55a360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x555ebf55a300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x555ebf55a180 'pthread_rwlockattr_t'
|     `-Record 0x555ebf55a100 ''
|-TypedefDecl 0x555ebf55a3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x555ebf4de084 'volatile int' volatile
|   `-BuiltinType 0x555ebf4de080 'int'
|-RecordDecl 0x555ebf55a440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x555ebf55c5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x555ebf55c618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555ebf55c6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x555ebf55c670 'union pthread_barrier_t' sugar
|   `-RecordType 0x555ebf55a4c0 'pthread_barrier_t'
|     `-Record 0x555ebf55a440 ''
|-RecordDecl 0x555ebf55c740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x555ebf55c840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555ebf55c8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555ebf55c960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x555ebf55c900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x555ebf55c7c0 'pthread_barrierattr_t'
|     `-Record 0x555ebf55c740 ''
|-TypedefDecl 0x555ebf55ca78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x555ebf55ca10 'long [8]' 8 
|   `-BuiltinType 0x555ebf4de0a0 'long'
|-EnumDecl 0x555ebf55cad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x555ebf55cb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x555ebf55cbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x555ebf55cc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x555ebf55cd08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x555ebf55cd58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x555ebf55cda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x555ebf55cdf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x555ebf55ce80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x555ebf55ce68 <col:26> 'int'
| |   `-DeclRefExpr 0x555ebf55ce48 <col:26> 'int' EnumConstant 0x555ebf55cd08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x555ebf55cf08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x555ebf55cef0 <col:29> 'int'
| |   `-DeclRefExpr 0x555ebf55ced0 <col:29> 'int' EnumConstant 0x555ebf55cd58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x555ebf55cf90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x555ebf55cf78 <col:30> 'int'
| |   `-DeclRefExpr 0x555ebf55cf58 <col:30> 'int' EnumConstant 0x555ebf55cda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x555ebf55d018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x555ebf55d000 <col:27> 'int'
|     `-DeclRefExpr 0x555ebf55cfe0 <col:27> 'int' EnumConstant 0x555ebf55ce80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x555ebf55d068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x555ebf55d138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x555ebf55d1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x555ebf55d1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x555ebf55d188 <col:30> 'int' EnumConstant 0x555ebf55d138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x555ebf55d210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x555ebf55d298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x555ebf55d280 <col:29> 'int'
|     `-DeclRefExpr 0x555ebf55d260 <col:29> 'int' EnumConstant 0x555ebf55d210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x555ebf55d2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x555ebf55d3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x555ebf55d408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x555ebf55d458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x555ebf55d4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x555ebf55d5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x555ebf55d610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x555ebf55d660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x555ebf55d6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x555ebf55d6d0 <col:31> 'int'
|     `-DeclRefExpr 0x555ebf55d6b0 <col:31> 'int' EnumConstant 0x555ebf55d5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x555ebf55d738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x555ebf55d808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x555ebf55d858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x555ebf55d8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x555ebf55d978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x555ebf55d9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x555ebf55da18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x555ebf55dae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x555ebf55db38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x555ebf55db88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x555ebf55ddc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x555ebf55de30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x555ebf55de98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x555ebf55dfb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x555ebf55e008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x555ebf55e0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x555ebf55e128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x555ebf55e178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x555ebf55e248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x555ebf55e298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x555ebf55e8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x555ebf55e390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x555ebf55e4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ebf55e6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x555ebf55e760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x555ebf55e9b8 <col:47>
| |-NonNullAttr 0x555ebf55ea10 <col:77, col:94> 1 3
| `-CallbackAttr 0x555ebf55ea48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x555ebf55eb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x555ebf55eaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x555ebf55edc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x555ebf55ec28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x555ebf55eca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x555ebf55ef98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x555ebf55ee88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x555ebf55f040 <col:60>
|-FunctionDecl 0x555ebf55f190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x555ebf55f230 <col:54>
| `-ConstAttr 0x555ebf55f288 <col:95>
|-FunctionDecl 0x555ebf55f458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x555ebf55f2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555ebf55f338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x555ebf55f508 <line:394:19>
| `-ConstAttr 0x555ebf55f560 <col:60>
|-FunctionDecl 0x555ebf55ff68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x555ebf55fe30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x555ebf560010 <col:71>
| `-NonNullAttr 0x555ebf560068 <col:112, col:126> 1
|-FunctionDecl 0x555ebf560170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x555ebf5600b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x555ebf560218 <line:397:22>
| `-NonNullAttr 0x555ebf560270 <col:63, col:77> 1
|-FunctionDecl 0x555ebf560498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x555ebf5602b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x555ebf560338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x555ebf560548 <line:400:22>
| `-NonNullAttr 0x555ebf5605a0 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf5607a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555ebf5605e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555ebf560668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x555ebf560858 <line:403:22>
| `-NonNullAttr 0x555ebf5608b0 <col:63, col:77> 1
|-FunctionDecl 0x555ebf560b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x555ebf5608f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x555ebf5609a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x555ebf560bb8 <line:406:22>
| `-NonNullAttr 0x555ebf560c10 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf561e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x555ebf560c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555ebf560cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555ebf561ef8 <line:409:22>
| `-NonNullAttr 0x555ebf561f50 <col:63, col:77> 1
|-FunctionDecl 0x555ebf562188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555ebf561f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ebf562028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x555ebf562238 <line:412:22>
| `-NonNullAttr 0x555ebf562290 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf5624c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555ebf5622d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ebf562368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x555ebf562578 <col:37>
| `-NonNullAttr 0x555ebf5625d0 <col:78, col:95> 1 2
|-FunctionDecl 0x555ebf5627b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ebf562618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ebf562698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x555ebf562868 <line:418:22>
| `-NonNullAttr 0x555ebf5628c0 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf562a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555ebf562908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555ebf562988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x555ebf562af8 <line:420:22>
| `-NonNullAttr 0x555ebf562b50 <col:63, col:77> 1
|-FunctionDecl 0x555ebf562cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ebf562b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ebf562c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x555ebf562da8 <line:423:22>
| `-NonNullAttr 0x555ebf563e30 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf563fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555ebf563e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555ebf563ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x555ebf564068 <line:426:22>
| `-NonNullAttr 0x555ebf5640c0 <col:63, col:77> 1
|-FunctionDecl 0x555ebf564268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ebf564108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ebf564188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x555ebf564318 <line:429:22>
| `-NonNullAttr 0x555ebf564370 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf5644f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555ebf5643b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555ebf564438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x555ebf5645a8 <line:431:22>
| `-NonNullAttr 0x555ebf564600 <col:63, col:77> 1
|-FunctionDecl 0x555ebf564828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x555ebf564648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ebf5646c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x555ebf5648d8 <line:434:22>
| |-NonNullAttr 0x555ebf564930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x555ebf564968 <col:100> "" ""
|-FunctionDecl 0x555ebf564b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x555ebf5649b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555ebf564a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x555ebf564c28 <line:437:22>
| |-NonNullAttr 0x555ebf564c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x555ebf564cb8 <col:97> "" ""
|-FunctionDecl 0x555ebf564eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x555ebf564d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ebf564d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x555ebf564f68 <line:440:22>
| `-NonNullAttr 0x555ebf564fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf565140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x555ebf565008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555ebf565080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555ebf5651f0 <line:443:22>
| `-NonNullAttr 0x555ebf565248 <col:63, col:77> 1
|-FunctionDecl 0x555ebf565538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x555ebf565298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ebf565318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x555ebf565390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x555ebf5655f0 <line:447:22>
| `-NonNullAttr 0x555ebf565648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x555ebf5658f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x555ebf5656a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555ebf565720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x555ebf565798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555ebf5659b0 <col:43>
| `-NonNullAttr 0x555ebf565a08 <col:84, col:98> 1
|-FunctionDecl 0x555ebf565cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x555ebf565a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555ebf565ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x555ebf565b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x555ebf565d80 <line:452:22>
| `-NonNullAttr 0x555ebf565dd8 <col:63, col:77> 3
|-FunctionDecl 0x555ebf5660e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555ebf565e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555ebf565ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x555ebf565f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x555ebf5661a0 <line:456:22>
| `-NonNullAttr 0x555ebf5661f8 <col:63, col:80> 2 3
|-FunctionDecl 0x555ebf5663e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x555ebf566248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555ebf5662c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x555ebf566498 <line:458:22>
|-FunctionDecl 0x555ebf566868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x555ebf566560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x555ebf566700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x555ebf566918 <col:52, col:69> 1 2
|-FunctionDecl 0x555ebf566ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x555ebf5669a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x555ebf566a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x555ebf566ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x555ebf566b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x555ebf566c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x555ebf566e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x555ebf566d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x555ebf566fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x555ebf567040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x555ebf5670e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x555ebf5671d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x555ebf567240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x555ebf567410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix018_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x555ebf567508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x555ebf5675c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x555ebf567560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x555ebf5670c0 '__pthread_unwind_buf_t'
| |   `-Record 0x555ebf567040 ''
| `-AlignedAttr 0x555ebf567618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x555ebf567690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x555ebf5677f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x555ebf567858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x555ebf5678c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x555ebf567928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x555ebf567b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x555ebf567a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x555ebf567c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x555ebf567be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x555ebf567e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555ebf567d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x555ebf567f18 <line:487:22>
|-RecordDecl 0x555ebf567f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x555ebf568288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x555ebf5680e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x555ebf568168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x555ebf568338 <col:86>
| `-ReturnsTwiceAttr 0x555ebf568390 <col:12> Implicit
|-FunctionDecl 0x555ebf5686b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555ebf568460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x555ebf568570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x555ebf568768 <line:493:22>
| `-NonNullAttr 0x555ebf5687c0 <col:63, col:77> 1
|-FunctionDecl 0x555ebf568938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555ebf568808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555ebf5689e0 <line:495:22>
| `-NonNullAttr 0x555ebf568a38 <col:63, col:77> 1
|-FunctionDecl 0x555ebf568b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555ebf568a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555ebf568be8 <line:497:22>
| `-NonNullAttr 0x555ebf568c40 <col:52, col:66> 1
|-FunctionDecl 0x555ebf568d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555ebf568c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555ebf568de8 <line:499:22>
| `-NonNullAttr 0x555ebf568e40 <col:52, col:66> 1
|-FunctionDecl 0x555ebf569088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555ebf568e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555ebf568f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555ebf569138 <col:36>
| `-NonNullAttr 0x555ebf569190 <col:66, col:83> 1 2
|-FunctionDecl 0x555ebf569290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555ebf5691d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555ebf569338 <line:504:22>
| `-NonNullAttr 0x555ebf569390 <col:52, col:66> 1
|-FunctionDecl 0x555ebf569628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ebf569440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555ebf5694c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x555ebf5696d8 <line:508:22>
| `-NonNullAttr 0x555ebf569730 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf5699f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x555ebf569778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555ebf5697f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x555ebf569878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x555ebf569ab0 <line:512:22>
| `-NonNullAttr 0x555ebf569b08 <col:63, col:80> 1 3
|-FunctionDecl 0x555ebf569c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555ebf569b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555ebf569cb8 <line:514:22>
| `-NonNullAttr 0x555ebf569d10 <col:63, col:77> 1
|-FunctionDecl 0x555ebf569f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555ebf569dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x555ebf569fe0 <line:516:22>
| `-NonNullAttr 0x555ebf56a038 <col:63, col:77> 1
|-FunctionDecl 0x555ebf56a140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555ebf56a088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x555ebf56a1e8 <line:518:22>
| `-NonNullAttr 0x555ebf56a240 <col:63, col:77> 1
|-FunctionDecl 0x555ebf56a468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ebf56a288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555ebf56a308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x555ebf56a518 <line:522:22>
| `-NonNullAttr 0x555ebf56a570 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf56a778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555ebf56a5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555ebf56a638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x555ebf56a828 <line:525:22>
| `-NonNullAttr 0x555ebf56a880 <col:63, col:77> 1
|-FunctionDecl 0x555ebf56aa28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ebf56a8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555ebf56a948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x555ebf56aad8 <line:528:22>
| `-NonNullAttr 0x555ebf56ab30 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf56acb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555ebf56ab78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555ebf56abf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x555ebf56ad68 <line:530:22>
| `-NonNullAttr 0x555ebf56adc0 <col:63, col:77> 1
|-FunctionDecl 0x555ebf56bf90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ebf56ae08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555ebf56beb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x555ebf56c040 <line:534:22>
| `-NonNullAttr 0x555ebf56c098 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf56c228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555ebf56c0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555ebf56c168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x555ebf56c2d8 <line:537:22>
| `-NonNullAttr 0x555ebf56c330 <col:63, col:77> 1
|-FunctionDecl 0x555ebf56c4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ebf56c378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555ebf56c3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x555ebf56c588 <line:541:22>
| `-NonNullAttr 0x555ebf56c5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf56c768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555ebf56c628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555ebf56c6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x555ebf56c818 <line:544:22>
| `-NonNullAttr 0x555ebf56c870 <col:63, col:77> 1
|-FunctionDecl 0x555ebf56ca58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x555ebf56c8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x555ebf56c938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x555ebf56cb08 <line:547:22>
| `-NonNullAttr 0x555ebf56cb60 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf56cce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555ebf56cba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555ebf56cc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x555ebf56cd98 <line:550:22>
| `-NonNullAttr 0x555ebf56cdf0 <col:63, col:77> 1
|-FunctionDecl 0x555ebf56e168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x555ebf56df10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555ebf56e020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x555ebf56e218 <col:29>
| `-NonNullAttr 0x555ebf56e270 <col:70, col:84> 1
|-FunctionDecl 0x555ebf56e3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555ebf56e2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555ebf56e490 <line:555:22>
| `-NonNullAttr 0x555ebf56e4e8 <col:63, col:77> 1
|-FunctionDecl 0x555ebf56e5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555ebf56e538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555ebf56e698 <line:557:22>
| `-NonNullAttr 0x555ebf56e6f0 <col:52, col:66> 1
|-FunctionDecl 0x555ebf56e7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555ebf56e738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555ebf56e898 <line:559:19>
| `-NonNullAttr 0x555ebf56e8f0 <col:49, col:63> 1
|-FunctionDecl 0x555ebf56eb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555ebf56e938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555ebf56e9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555ebf56ebd8 <col:39>
| `-NonNullAttr 0x555ebf56ec30 <col:69, col:86> 1 2
|-FunctionDecl 0x555ebf56ed30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555ebf56ec78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555ebf56edd8 <line:564:22>
| `-NonNullAttr 0x555ebf56ee30 <col:52, col:66> 1
|-FunctionDecl 0x555ebf56ef98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555ebf56eee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555ebf56f040 <line:566:22>
| `-NonNullAttr 0x555ebf56f098 <col:52, col:66> 1
|-FunctionDecl 0x555ebf56f258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555ebf56f0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555ebf56f178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555ebf56f308 <col:39>
| `-NonNullAttr 0x555ebf56f360 <col:69, col:86> 1 2
|-FunctionDecl 0x555ebf56f460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555ebf56f3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555ebf56f508 <line:571:22>
| `-NonNullAttr 0x555ebf56f560 <col:52, col:66> 1
|-FunctionDecl 0x555ebf56f748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x555ebf56f610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x555ebf56f7f0 <line:573:22>
| `-NonNullAttr 0x555ebf56f848 <col:63, col:77> 1
|-FunctionDecl 0x555ebf56f950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x555ebf56f898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x555ebf56f9f8 <line:575:22>
| `-NonNullAttr 0x555ebf56fa50 <col:63, col:77> 1
|-FunctionDecl 0x555ebf56fc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ebf56fa98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x555ebf56fb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x555ebf56fd28 <line:579:22>
| `-NonNullAttr 0x555ebf56fd80 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf56ffa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x555ebf56fdc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x555ebf56fe48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x555ebf570058 <line:582:22>
| `-NonNullAttr 0x555ebf5700b0 <col:63, col:77> 1
|-FunctionDecl 0x555ebf570258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ebf5700f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x555ebf570178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x555ebf570308 <line:586:22>
| `-NonNullAttr 0x555ebf570360 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf5704e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x555ebf5703a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x555ebf570428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x555ebf570598 <col:36>
| `-NonNullAttr 0x555ebf5705f0 <col:77, col:91> 1
|-FunctionDecl 0x555ebf570928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x555ebf5706d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555ebf5707e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x555ebf5709d8 <line:591:22>
| `-NonNullAttr 0x555ebf570a30 <col:63, col:77> 1
|-FunctionDecl 0x555ebf570ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555ebf570a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555ebf570c50 <line:593:22>
| `-NonNullAttr 0x555ebf570ca8 <col:63, col:77> 1
|-FunctionDecl 0x555ebf570db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555ebf570cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555ebf570e58 <line:595:22>
| `-NonNullAttr 0x555ebf570eb0 <col:52, col:66> 1
|-FunctionDecl 0x555ebf570fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555ebf570f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555ebf571070 <line:597:22>
| `-NonNullAttr 0x555ebf5710c8 <col:52, col:66> 1
|-FunctionDecl 0x555ebf5712f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x555ebf571118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555ebf571190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x555ebf5713a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x555ebf5716d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555ebf571428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555ebf5714a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555ebf571530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x555ebf571790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x555ebf5719a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x555ebf571870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x555ebf571a50 <line:606:22>
| `-NonNullAttr 0x555ebf571aa8 <col:63, col:77> 1
|-FunctionDecl 0x555ebf571bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x555ebf571af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x555ebf571c58 <line:608:22>
| `-NonNullAttr 0x555ebf571cb0 <col:63, col:77> 1
|-FunctionDecl 0x555ebf571f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ebf571cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x555ebf571d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x555ebf571fc0 <line:612:22>
| `-NonNullAttr 0x555ebf572018 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf572228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x555ebf572068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x555ebf5720e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x555ebf5722d8 <col:37>
| `-NonNullAttr 0x555ebf572330 <col:78, col:92> 1
|-FunctionDecl 0x555ebf572548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x555ebf572378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x555ebf572420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x555ebf5725f8 <line:618:22>
| `-NonNullAttr 0x555ebf572650 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf572818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x555ebf572698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x555ebf572710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x555ebf5728c8 <line:621:22>
| `-NonNullAttr 0x555ebf572920 <col:63, col:77> 1
|-FunctionDecl 0x555ebf572bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x555ebf572a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x555ebf572a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x555ebf572c78 <line:623:22>
| `-NonNullAttr 0x555ebf572cd0 <col:63, col:77> 1
|-FunctionDecl 0x555ebf572e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555ebf572d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555ebf572f20 <line:625:22>
| `-NonNullAttr 0x555ebf572f78 <col:63, col:77> 1
|-FunctionDecl 0x555ebf573080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555ebf572fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555ebf573128 <line:627:22>
| `-NonNullAttr 0x555ebf573180 <col:52, col:66> 1
|-FunctionDecl 0x555ebf573280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555ebf5731c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555ebf573328 <line:629:22>
| `-NonNullAttr 0x555ebf573380 <col:52, col:66> 1
|-FunctionDecl 0x555ebf573480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555ebf5733c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555ebf573528 <line:631:22>
| `-NonNullAttr 0x555ebf573580 <col:52, col:66> 1
|-FunctionDecl 0x555ebf573958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x555ebf573660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x555ebf573770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x555ebf5737f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x555ebf573a10 <line:635:22>
| `-NonNullAttr 0x555ebf573a68 <col:63, col:77> 1
|-FunctionDecl 0x555ebf573be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x555ebf573ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x555ebf573c90 <line:637:22>
| `-NonNullAttr 0x555ebf573ce8 <col:63, col:77> 1
|-FunctionDecl 0x555ebf573df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x555ebf573d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x555ebf573e98 <line:639:22>
| `-NonNullAttr 0x555ebf573ef0 <col:52, col:66> 1
|-FunctionDecl 0x555ebf5740e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x555ebf573fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x555ebf574190 <line:641:22>
| `-NonNullAttr 0x555ebf5741e8 <col:63, col:77> 1
|-FunctionDecl 0x555ebf5742f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x555ebf574238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x555ebf574398 <line:643:22>
| `-NonNullAttr 0x555ebf5743f0 <col:63, col:77> 1
|-FunctionDecl 0x555ebf574618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ebf574438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x555ebf5744b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x555ebf5746c8 <line:647:22>
| `-NonNullAttr 0x555ebf574720 <col:63, col:80> 1 2
|-FunctionDecl 0x555ebf574928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x555ebf574768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x555ebf5747e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x555ebf5749d8 <line:650:22>
| `-NonNullAttr 0x555ebf574a30 <col:63, col:77> 1
|-FunctionDecl 0x555ebf574d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x555ebf574b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x555ebf574c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x555ebf574e28 <line:653:22>
| `-NonNullAttr 0x555ebf574e80 <col:63, col:77> 1
|-FunctionDecl 0x555ebf574fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x555ebf574ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x555ebf575090 <col:69>
|-FunctionDecl 0x555ebf575208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x555ebf5750f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x555ebf5752b0 <col:72>
|-FunctionDecl 0x555ebf5754e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x555ebf575318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x555ebf5753c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x555ebf575598 <col:44>
|-FunctionDecl 0x555ebf5757b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x555ebf575600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555ebf575678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x555ebf575868 <line:660:22>
| `-NonNullAttr 0x555ebf5758c0 <col:63, col:77> 2
|-FunctionDecl 0x555ebf575d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x555ebf5759a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x555ebf575ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x555ebf575bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x555ebf575dc0 <col:47>
|-FunctionDecl 0x555ebf576f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x555ebf575e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555ebf5770b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x555ebf577020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555ebf577210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x555ebf577178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555ebf577368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x555ebf5772d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555ebf577430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x555ebf5774f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x555ebf5775b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x555ebf577668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x555ebf5776e8 prev 0x555ebf577668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x555ebf577750 <col:24> 'int' 0
|-VarDecl 0x555ebf577788 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x555ebf577808 prev 0x555ebf577788 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x555ebf577870 <col:27> 'int' 0
|-VarDecl 0x555ebf5778a8 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x555ebf577928 prev 0x555ebf5778a8 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x555ebf577990 <col:27> 'int' 0
|-VarDecl 0x555ebf5779c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x555ebf577a48 prev 0x555ebf5779c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x555ebf577ab0 <col:27> 'int' 0
|-VarDecl 0x555ebf577ae8 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x555ebf577b68 prev 0x555ebf577ae8 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x555ebf577bd0 <col:27> 'int' 0
|-VarDecl 0x555ebf577c08 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x555ebf577c88 prev 0x555ebf577c08 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x555ebf577cf0 <col:9> 'int' 0
|-VarDecl 0x555ebf577d20 <line:684:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x555ebf577da0 <line:685:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x555ebf577e18 <line:686:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x555ebf577e90 <line:687:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x555ebf577f70 <line:688:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x555ebf577fe8 <line:689:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x555ebf578060 <line:690:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x555ebf5780d8 <line:691:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x555ebf578150 <line:692:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x555ebf5781c8 <line:693:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x555ebf578240 <line:694:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x555ebf5782b8 <line:695:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x555ebf578330 <line:696:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x555ebf5783b0 <line:697:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x555ebf578430 <line:698:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x555ebf5784a8 <line:699:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x555ebf578528 <line:700:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x555ebf5785a0 <line:701:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x555ebf578618 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x555ebf578690 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x555ebf578710 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x555ebf578790 prev 0x555ebf578710 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x555ebf5787f8 <col:9> 'int' 0
|-VarDecl 0x555ebf578830 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x555ebf5788b0 prev 0x555ebf578830 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x555ebf578918 <col:9> 'int' 0
|-VarDecl 0x555ebf578950 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x555ebf5789d0 prev 0x555ebf578950 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x555ebf578a38 <col:9> 'int' 0
|-VarDecl 0x555ebf578a68 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x555ebf578ae0 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x555ebf578bf8 prev 0x555ebf576f60 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x555ebf578b60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555ebf57a498 <line:713:1, line:741:1>
|   |-CallExpr 0x555ebf578d08 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf578cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf578ca0 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf578d80 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555ebf578d28 <col:3> 'int' lvalue Var 0x555ebf578528 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x555ebf578d68 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ebf578d48 <col:15> 'int' lvalue Var 0x555ebf578430 'a$w_buff0' 'int'
|   |-BinaryOperator 0x555ebf578de0 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555ebf578da0 <col:3> 'int' lvalue Var 0x555ebf578430 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x555ebf578dc0 <col:15> 'int' 1
|   |-BinaryOperator 0x555ebf578e58 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf578e00 <col:3> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf578e40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ebf578e20 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555ebf578ef0 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf578e78 <col:3> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x555ebf578ec8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555ebf578e98 <col:27> 'int' 1
|   |-CallExpr 0x555ebf579088 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x555ebf579070 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x555ebf578f10 <col:3> 'void (int)' Function 0x555ebf51e0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x555ebf579020 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x555ebf579000 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x555ebf578fe0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x555ebf578f98 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x555ebf578f80 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x555ebf578f30 <col:23> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x555ebf578fc8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x555ebf578fb0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x555ebf578f50 <col:41> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555ebf579108 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf5790b0 <col:3> '_Bool' lvalue Var 0x555ebf5780d8 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf5790f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ebf5790d0 <col:20> '_Bool' lvalue Var 0x555ebf577e18 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x555ebf579180 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf579128 <col:3> '_Bool' lvalue Var 0x555ebf578150 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf579168 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ebf579148 <col:20> '_Bool' lvalue Var 0x555ebf577e90 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x555ebf5791f8 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf5791a0 <col:3> '_Bool' lvalue Var 0x555ebf5781c8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf5791e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ebf5791c0 <col:20> '_Bool' lvalue Var 0x555ebf577f70 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x555ebf579270 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf579218 <col:3> '_Bool' lvalue Var 0x555ebf578240 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf579258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ebf579238 <col:20> '_Bool' lvalue Var 0x555ebf577fe8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x555ebf5792e8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf579290 <col:3> '_Bool' lvalue Var 0x555ebf5782b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf5792d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ebf5792b0 <col:20> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x555ebf579380 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf579308 <col:3> '_Bool' lvalue Var 0x555ebf577e90 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x555ebf579358 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555ebf579328 <col:27> 'int' 1
|   |-CallExpr 0x555ebf5793d8 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf5793c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf5793a0 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ebf579430 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf579418 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf5793f8 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf579490 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555ebf579450 <col:3> 'int' lvalue Var 0x555ebf578790 'x' 'int'
|   | `-IntegerLiteral 0x555ebf579470 <col:7> 'int' 1
|   |-CallExpr 0x555ebf5794e8 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf5794d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf5794b0 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ebf579540 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf579528 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf579508 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf579828 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555ebf579560 <col:3> 'int' lvalue Var 0x555ebf577c88 'a' 'int'
|   | `-ConditionalOperator 0x555ebf5797f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555ebf579620 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555ebf5795d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555ebf5795c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555ebf579580 <col:7> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555ebf579608 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555ebf5795f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555ebf5795a0 <col:25> '_Bool' lvalue Var 0x555ebf577e90 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x555ebf5797e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ebf579640 <col:42> 'int' lvalue Var 0x555ebf578430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x555ebf5797c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555ebf579790 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555ebf579700 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555ebf5796b8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555ebf5796a0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555ebf579660 <col:55> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555ebf5796e8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555ebf5796d0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555ebf579680 <col:73> '_Bool' lvalue Var 0x555ebf578150 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x555ebf579760 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555ebf579720 <col:90> 'int' lvalue Var 0x555ebf578528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555ebf579778 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf579740 <col:102> 'int' lvalue Var 0x555ebf577c88 'a' 'int'
|   |-BinaryOperator 0x555ebf579a30 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf579848 <col:3> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf579a18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf5799e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555ebf579908 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555ebf5798c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555ebf5798a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555ebf579868 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555ebf5798f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555ebf5798d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555ebf579888 <col:38> '_Bool' lvalue Var 0x555ebf577e90 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf5799a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ebf579958 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ebf579928 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555ebf5799d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ebf5799b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf579980 <col:66> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555ebf579d18 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf579a50 <col:3> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf579d00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf579cd0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555ebf579bf0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555ebf579b10 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555ebf579ac8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555ebf579ab0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555ebf579a70 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555ebf579af8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555ebf579ae0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555ebf579a90 <col:38> '_Bool' lvalue Var 0x555ebf577e90 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x555ebf579bd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555ebf579b88 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555ebf579b70 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555ebf579b30 <col:56> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555ebf579bb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555ebf579ba0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555ebf579b50 <col:74> '_Bool' lvalue Var 0x555ebf578150 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf579c88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ebf579c40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ebf579c10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555ebf579cb8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ebf579ca0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf579c68 <col:102> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555ebf579f20 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf579d38 <col:3> '_Bool' lvalue Var 0x555ebf577e90 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf579f08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf579ed8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555ebf579df8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555ebf579db0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555ebf579d98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555ebf579d58 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555ebf579de0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555ebf579dc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555ebf579d78 <col:38> '_Bool' lvalue Var 0x555ebf577e90 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf579e90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ebf579e48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ebf579e18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555ebf579ec0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ebf579ea8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf579e70 <col:66> '_Bool' lvalue Var 0x555ebf577e90 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x555ebf57a218 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf579f40 <col:3> '_Bool' lvalue Var 0x555ebf578150 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf57a200 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf57a1d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555ebf57a0f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555ebf57a010 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555ebf579fc8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555ebf579fb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555ebf579f60 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555ebf579ff8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555ebf579fe0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555ebf579f90 <col:38> '_Bool' lvalue Var 0x555ebf577e90 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x555ebf57a0d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555ebf57a088 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555ebf57a070 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555ebf57a030 <col:56> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555ebf57a0b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555ebf57a0a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555ebf57a050 <col:74> '_Bool' lvalue Var 0x555ebf578150 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf57a188 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ebf57a140 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ebf57a110 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555ebf57a1b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ebf57a1a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf57a168 <col:102> '_Bool' lvalue Var 0x555ebf578150 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x555ebf57a270 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf57a258 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57a238 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ebf57a2c8 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf57a2b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57a290 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf57a380 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555ebf57a2e8 <col:3> 'int' lvalue Var 0x555ebf5776e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555ebf57a360 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555ebf57a348 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ebf57a308 <col:22> 'int' lvalue Var 0x555ebf5776e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555ebf57a328 <col:41> 'int' 1
|   |-CallExpr 0x555ebf57a3d8 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf57a3c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57a3a0 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555ebf57a488 <line:740:3, col:36>
|     `-CallExpr 0x555ebf57a468 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555ebf57a450 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555ebf57a3f8 <col:10> 'void *(void)' Function 0x555ebf51de68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555ebf57a630 prev 0x555ebf5770b8 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x555ebf57a598 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555ebf57b868 <line:743:1, line:761:1>
|   |-CallExpr 0x555ebf57a710 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf57a6f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57a6d8 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf57a770 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555ebf57a730 <col:3> 'int' lvalue Var 0x555ebf578790 'x' 'int'
|   | `-IntegerLiteral 0x555ebf57a750 <col:7> 'int' 2
|   |-CallExpr 0x555ebf57a7c8 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf57a7b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57a790 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ebf57a820 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf57a808 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57a7e8 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf57a898 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555ebf57a840 <col:3> 'int' lvalue Var 0x555ebf577808 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x555ebf57a880 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ebf57a860 <col:25> 'int' lvalue Var 0x555ebf5788b0 'y' 'int'
|   |-CallExpr 0x555ebf57a8f0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf57a8d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57a8b8 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ebf57a948 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf57a930 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57a910 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf57ac30 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555ebf57a968 <col:3> 'int' lvalue Var 0x555ebf577c88 'a' 'int'
|   | `-ConditionalOperator 0x555ebf57ac00 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555ebf57aa28 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555ebf57a9e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555ebf57a9c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555ebf57a988 <col:7> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555ebf57aa10 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555ebf57a9f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555ebf57a9a8 <col:25> '_Bool' lvalue Var 0x555ebf577f70 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x555ebf57abe8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ebf57aa48 <col:42> 'int' lvalue Var 0x555ebf578430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x555ebf57abc8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555ebf57ab98 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555ebf57ab08 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555ebf57aac0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555ebf57aaa8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555ebf57aa68 <col:55> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555ebf57aaf0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555ebf57aad8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555ebf57aa88 <col:73> '_Bool' lvalue Var 0x555ebf5781c8 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x555ebf57ab68 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555ebf57ab28 <col:90> 'int' lvalue Var 0x555ebf578528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555ebf57ab80 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf57ab48 <col:102> 'int' lvalue Var 0x555ebf577c88 'a' 'int'
|   |-BinaryOperator 0x555ebf57ae38 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57ac50 <col:3> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf57ae20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf57adf0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555ebf57ad10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555ebf57acc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555ebf57acb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555ebf57ac70 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555ebf57acf8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555ebf57ace0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555ebf57ac90 <col:38> '_Bool' lvalue Var 0x555ebf577f70 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf57ada8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ebf57ad60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ebf57ad30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555ebf57add8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ebf57adc0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf57ad88 <col:66> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555ebf57b130 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57ae58 <col:3> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf57b118 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf57b0e8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555ebf57b008 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555ebf57af18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555ebf57aed0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555ebf57aeb8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555ebf57ae78 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555ebf57af00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555ebf57aee8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555ebf57ae98 <col:38> '_Bool' lvalue Var 0x555ebf577f70 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x555ebf57afe8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555ebf57afa0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555ebf57af78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555ebf57af38 <col:56> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555ebf57afd0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555ebf57afb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555ebf57af58 <col:74> '_Bool' lvalue Var 0x555ebf5781c8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf57b0a0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ebf57b058 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ebf57b028 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555ebf57b0d0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ebf57b0b8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf57b080 <col:102> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555ebf57b338 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57b150 <col:3> '_Bool' lvalue Var 0x555ebf577f70 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf57b320 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf57b2f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555ebf57b210 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555ebf57b1c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555ebf57b1b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555ebf57b170 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555ebf57b1f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555ebf57b1e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555ebf57b190 <col:38> '_Bool' lvalue Var 0x555ebf577f70 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf57b2a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ebf57b260 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ebf57b230 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555ebf57b2d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ebf57b2c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf57b288 <col:66> '_Bool' lvalue Var 0x555ebf577f70 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x555ebf57b620 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57b358 <col:3> '_Bool' lvalue Var 0x555ebf5781c8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf57b608 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf57b5d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555ebf57b4f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555ebf57b418 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555ebf57b3d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555ebf57b3b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555ebf57b378 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555ebf57b400 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555ebf57b3e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555ebf57b398 <col:38> '_Bool' lvalue Var 0x555ebf577f70 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x555ebf57b4d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555ebf57b490 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555ebf57b478 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555ebf57b438 <col:56> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555ebf57b4c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555ebf57b4a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555ebf57b458 <col:74> '_Bool' lvalue Var 0x555ebf5781c8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf57b590 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ebf57b548 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ebf57b518 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555ebf57b5c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ebf57b5a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf57b570 <col:102> '_Bool' lvalue Var 0x555ebf5781c8 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x555ebf57b678 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf57b660 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57b640 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ebf57b6d0 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf57b6b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57b698 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf57b788 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555ebf57b6f0 <col:3> 'int' lvalue Var 0x555ebf5776e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555ebf57b768 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555ebf57b750 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ebf57b710 <col:22> 'int' lvalue Var 0x555ebf5776e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555ebf57b730 <col:41> 'int' 1
|   |-CallExpr 0x555ebf57b7e0 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf57b7c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57b7a8 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555ebf57b858 <line:760:3, col:36>
|     `-CallExpr 0x555ebf57b838 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555ebf57b820 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555ebf57b800 <col:10> 'void *(void)' Function 0x555ebf51de68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555ebf57b9b0 prev 0x555ebf577210 <line:762:1, line:781:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x555ebf57b918 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555ebf57cc08 <line:763:1, line:781:1>
|   |-CallExpr 0x555ebf57ba90 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf57ba78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57ba58 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf57baf0 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555ebf57bab0 <col:3> 'int' lvalue Var 0x555ebf5788b0 'y' 'int'
|   | `-IntegerLiteral 0x555ebf57bad0 <col:7> 'int' 1
|   |-CallExpr 0x555ebf57bb48 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf57bb30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57bb10 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ebf57bba0 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf57bb88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57bb68 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf57bc18 <line:768:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555ebf57bbc0 <col:3> 'int' lvalue Var 0x555ebf577928 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x555ebf57bc00 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ebf57bbe0 <col:25> 'int' lvalue Var 0x555ebf5789d0 'z' 'int'
|   |-CallExpr 0x555ebf57bc70 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf57bc58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57bc38 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ebf57bcc8 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf57bcb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57bc90 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf57bfe0 <line:771:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555ebf57bce8 <col:3> 'int' lvalue Var 0x555ebf577c88 'a' 'int'
|   | `-ConditionalOperator 0x555ebf57bfb0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555ebf57bda8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555ebf57bd60 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555ebf57bd48 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555ebf57bd08 <col:7> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555ebf57bd90 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555ebf57bd78 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555ebf57bd28 <col:25> '_Bool' lvalue Var 0x555ebf577fe8 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x555ebf57bf68 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ebf57bdc8 <col:42> 'int' lvalue Var 0x555ebf578430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x555ebf57bf48 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555ebf57bf18 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555ebf57be88 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555ebf57be40 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555ebf57be28 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555ebf57bde8 <col:55> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555ebf57be70 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555ebf57be58 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555ebf57be08 <col:73> '_Bool' lvalue Var 0x555ebf578240 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x555ebf57bee8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555ebf57bea8 <col:90> 'int' lvalue Var 0x555ebf578528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555ebf57bf00 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf57bec8 <col:102> 'int' lvalue Var 0x555ebf577c88 'a' 'int'
|   |-BinaryOperator 0x555ebf57c1e8 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57c000 <col:3> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf57c1d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf57c1a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555ebf57c0c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555ebf57c078 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555ebf57c060 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555ebf57c020 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555ebf57c0a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555ebf57c090 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555ebf57c040 <col:38> '_Bool' lvalue Var 0x555ebf577fe8 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf57c158 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ebf57c110 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ebf57c0e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555ebf57c188 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ebf57c170 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf57c138 <col:66> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555ebf57c4d0 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57c208 <col:3> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf57c4b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf57c488 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555ebf57c3a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555ebf57c2c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555ebf57c280 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555ebf57c268 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555ebf57c228 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555ebf57c2b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555ebf57c298 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555ebf57c248 <col:38> '_Bool' lvalue Var 0x555ebf577fe8 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x555ebf57c388 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555ebf57c340 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555ebf57c328 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555ebf57c2e8 <col:56> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555ebf57c370 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555ebf57c358 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555ebf57c308 <col:74> '_Bool' lvalue Var 0x555ebf578240 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf57c440 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ebf57c3f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ebf57c3c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555ebf57c470 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ebf57c458 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf57c420 <col:102> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555ebf57c6d8 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57c4f0 <col:3> '_Bool' lvalue Var 0x555ebf577fe8 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf57c6c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf57c690 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555ebf57c5b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555ebf57c568 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555ebf57c550 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555ebf57c510 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555ebf57c598 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555ebf57c580 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555ebf57c530 <col:38> '_Bool' lvalue Var 0x555ebf577fe8 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf57c648 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ebf57c600 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ebf57c5d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555ebf57c678 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ebf57c660 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf57c628 <col:66> '_Bool' lvalue Var 0x555ebf577fe8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x555ebf57c9c0 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57c6f8 <col:3> '_Bool' lvalue Var 0x555ebf578240 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf57c9a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf57c978 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555ebf57c898 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555ebf57c7b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555ebf57c770 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555ebf57c758 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555ebf57c718 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555ebf57c7a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555ebf57c788 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555ebf57c738 <col:38> '_Bool' lvalue Var 0x555ebf577fe8 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x555ebf57c878 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555ebf57c830 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555ebf57c818 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555ebf57c7d8 <col:56> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555ebf57c860 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555ebf57c848 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555ebf57c7f8 <col:74> '_Bool' lvalue Var 0x555ebf578240 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf57c930 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ebf57c8e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ebf57c8b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555ebf57c960 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ebf57c948 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf57c910 <col:102> '_Bool' lvalue Var 0x555ebf578240 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x555ebf57ca18 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf57ca00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57c9e0 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ebf57ca70 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf57ca58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57ca38 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf57cb28 <line:778:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555ebf57ca90 <col:3> 'int' lvalue Var 0x555ebf5776e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555ebf57cb08 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555ebf57caf0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ebf57cab0 <col:22> 'int' lvalue Var 0x555ebf5776e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555ebf57cad0 <col:41> 'int' 1
|   |-CallExpr 0x555ebf57cb80 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf57cb68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57cb48 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555ebf57cbf8 <line:780:3, col:36>
|     `-CallExpr 0x555ebf57cbd8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555ebf57cbc0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555ebf57cba0 <col:10> 'void *(void)' Function 0x555ebf51de68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555ebf57cd50 prev 0x555ebf577368 <line:782:1, line:817:1> line:782:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x555ebf57ccb8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555ebf580a58 <line:783:1, line:817:1>
|   |-CallExpr 0x555ebf57ce30 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf57ce18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57cdf8 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf57ce90 <line:785:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555ebf57ce50 <col:3> 'int' lvalue Var 0x555ebf5789d0 'z' 'int'
|   | `-IntegerLiteral 0x555ebf57ce70 <col:7> 'int' 1
|   |-CallExpr 0x555ebf57cee8 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf57ced0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57ceb0 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ebf57cf40 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf57cf28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57cf08 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf57cfd8 <line:788:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555ebf57cf60 <col:3> 'int' lvalue Var 0x555ebf577a48 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x555ebf57cfc0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ebf57cf80 <col:25> 'int' lvalue Var 0x555ebf5789d0 'z' 'int'
|   |-CallExpr 0x555ebf57d030 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf57d018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57cff8 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ebf57d088 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf57d070 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57d050 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf57d138 <line:791:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57d0a8 <col:3> '_Bool' lvalue Var 0x555ebf578a68 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf57d120 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x555ebf57d100 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x555ebf57d0e8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x555ebf57d0c8 <col:19> 'void *(void)' Function 0x555ebf51de68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x555ebf57d1e8 <line:792:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57d158 <col:3> '_Bool' lvalue Var 0x555ebf578ae0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf57d1d0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x555ebf57d1b0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x555ebf57d198 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x555ebf57d178 <col:19> 'void *(void)' Function 0x555ebf51de68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x555ebf57d260 <line:793:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57d208 <col:3> '_Bool' lvalue Var 0x555ebf577d20 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf57d248 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ebf57d228 <col:21> '_Bool' lvalue Var 0x555ebf578ae0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x555ebf57d2d8 <line:794:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555ebf57d280 <col:3> 'int' lvalue Var 0x555ebf577da0 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x555ebf57d2c0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ebf57d2a0 <col:15> 'int' lvalue Var 0x555ebf577c88 'a' 'int'
|   |-BinaryOperator 0x555ebf57d710 <line:795:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x555ebf57d2f8 <col:3> 'int' lvalue Var 0x555ebf577c88 'a' 'int'
|   | `-ConditionalOperator 0x555ebf57d6e0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x555ebf57d508 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x555ebf57d428 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x555ebf57d350 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x555ebf57d338 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x555ebf57d318 <col:8> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x555ebf57d408 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x555ebf57d3a0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x555ebf57d388 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x555ebf57d368 <col:27> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x555ebf57d3f0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x555ebf57d3d8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x555ebf57d3b8 <col:46> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x555ebf57d4e8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x555ebf57d480 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x555ebf57d468 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x555ebf57d448 <col:65> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x555ebf57d4d0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x555ebf57d4b8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x555ebf57d498 <col:84> '_Bool' lvalue Var 0x555ebf5782b8 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x555ebf57d6c8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ebf57d528 <col:101> 'int' lvalue Var 0x555ebf577c88 'a' 'int'
|   |   `-ParenExpr 0x555ebf57d6a8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x555ebf57d678 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x555ebf57d5e8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555ebf57d5a0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555ebf57d588 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555ebf57d548 <col:106> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555ebf57d5d0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555ebf57d5b8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555ebf57d568 <col:124> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x555ebf57d648 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555ebf57d608 <col:141> 'int' lvalue Var 0x555ebf578430 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x555ebf57d660 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf57d628 <col:153> 'int' lvalue Var 0x555ebf578528 'a$w_buff1' 'int'
|   |-BinaryOperator 0x555ebf57dc20 <line:796:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x555ebf57d730 <col:3> 'int' lvalue Var 0x555ebf578430 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x555ebf57dbf0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x555ebf57dbc0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555ebf57dba8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555ebf57d750 <col:15> '_Bool' lvalue Var 0x555ebf578ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x555ebf57dbd8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ebf57d770 <col:31> 'int' lvalue Var 0x555ebf578430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x555ebf57db88 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x555ebf57db58 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x555ebf57d980 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x555ebf57d8a0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x555ebf57d7c8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x555ebf57d7b0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x555ebf57d790 <col:45> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x555ebf57d880 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x555ebf57d818 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x555ebf57d800 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x555ebf57d7e0 <col:64> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x555ebf57d868 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x555ebf57d850 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x555ebf57d830 <col:83> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x555ebf57d960 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x555ebf57d8f8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x555ebf57d8e0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x555ebf57d8c0 <col:102> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x555ebf57d948 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x555ebf57d930 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x555ebf57d910 <col:121> '_Bool' lvalue Var 0x555ebf5782b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x555ebf57db40 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555ebf57d9a0 <col:138> 'int' lvalue Var 0x555ebf578430 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x555ebf57db20 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x555ebf57daf0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x555ebf57da60 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x555ebf57da18 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x555ebf57da00 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x555ebf57d9c0 <col:151> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x555ebf57da48 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x555ebf57da30 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x555ebf57d9e0 <col:169> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x555ebf57dac0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x555ebf57da80 <col:186> 'int' lvalue Var 0x555ebf578430 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x555ebf57dad8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x555ebf57daa0 <col:198> 'int' lvalue Var 0x555ebf578430 'a$w_buff0' 'int'
|   |-BinaryOperator 0x555ebf57e150 <line:797:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x555ebf57dc40 <col:3> 'int' lvalue Var 0x555ebf578528 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x555ebf57e120 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x555ebf57e0f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555ebf57e0d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555ebf57dc60 <col:15> '_Bool' lvalue Var 0x555ebf578ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x555ebf57e108 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ebf57dc80 <col:31> 'int' lvalue Var 0x555ebf578528 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x555ebf57e0b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x555ebf57e088 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x555ebf57de90 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x555ebf57ddb0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x555ebf57dcd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x555ebf57dcc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x555ebf57dca0 <col:45> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x555ebf57dd90 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x555ebf57dd28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x555ebf57dd10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x555ebf57dcf0 <col:64> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x555ebf57dd78 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x555ebf57dd60 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x555ebf57dd40 <col:83> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x555ebf57de70 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x555ebf57de08 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x555ebf57ddf0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x555ebf57ddd0 <col:102> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x555ebf57de58 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x555ebf57de40 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x555ebf57de20 <col:121> '_Bool' lvalue Var 0x555ebf5782b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x555ebf57e070 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555ebf57deb0 <col:138> 'int' lvalue Var 0x555ebf578528 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x555ebf57e050 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x555ebf57e020 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x555ebf57df70 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x555ebf57df28 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x555ebf57df10 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x555ebf57ded0 <col:151> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x555ebf57df58 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x555ebf57df40 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x555ebf57def0 <col:169> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x555ebf57dff0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x555ebf57df90 <col:186> 'int' lvalue Var 0x555ebf578528 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x555ebf57e008 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x555ebf57dfd0 <col:198> 'int' lvalue Var 0x555ebf578528 'a$w_buff1' 'int'
|   |-BinaryOperator 0x555ebf57e6f8 <line:798:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57e170 <col:3> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf57e6e0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf57e6b0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x555ebf57e668 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555ebf57e650 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555ebf57e190 <col:20> '_Bool' lvalue Var 0x555ebf578ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf57e698 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555ebf57e680 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555ebf57e1b0 <col:36> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x555ebf57e630 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x555ebf57e600 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x555ebf57e3c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555ebf57e2e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555ebf57e208 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555ebf57e1f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555ebf57e1d0 <col:55> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555ebf57e2c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555ebf57e258 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555ebf57e240 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555ebf57e220 <col:74> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x555ebf57e2a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555ebf57e290 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555ebf57e270 <col:93> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555ebf57e3a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555ebf57e338 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555ebf57e320 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555ebf57e300 <col:112> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x555ebf57e388 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555ebf57e370 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555ebf57e350 <col:131> '_Bool' lvalue Var 0x555ebf5782b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x555ebf57e5e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555ebf57e5d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555ebf57e3e0 <col:148> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x555ebf57e5b0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x555ebf57e580 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x555ebf57e4a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555ebf57e458 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555ebf57e440 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555ebf57e400 <col:166> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555ebf57e488 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555ebf57e470 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555ebf57e420 <col:184> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x555ebf57e538 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555ebf57e4f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555ebf57e4c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555ebf57e568 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x555ebf57e550 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x555ebf57e518 <col:212> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555ebf57ecc0 <line:799:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57e718 <col:3> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf57eca8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf57ec78 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x555ebf57ec30 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555ebf57ec18 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555ebf57e738 <col:20> '_Bool' lvalue Var 0x555ebf578ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf57ec60 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555ebf57ec48 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555ebf57e758 <col:36> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x555ebf57ebf8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x555ebf57ebc8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x555ebf57e968 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555ebf57e888 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555ebf57e7b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555ebf57e798 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555ebf57e778 <col:55> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555ebf57e868 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555ebf57e800 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555ebf57e7e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555ebf57e7c8 <col:74> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x555ebf57e850 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555ebf57e838 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555ebf57e818 <col:93> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555ebf57e948 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555ebf57e8e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555ebf57e8c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555ebf57e8a8 <col:112> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x555ebf57e930 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555ebf57e918 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555ebf57e8f8 <col:131> '_Bool' lvalue Var 0x555ebf5782b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x555ebf57ebb0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555ebf57eb98 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555ebf57e988 <col:148> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x555ebf57eb78 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x555ebf57eb48 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x555ebf57ea48 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555ebf57ea00 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555ebf57e9e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555ebf57e9a8 <col:166> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555ebf57ea30 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555ebf57ea18 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555ebf57e9c8 <col:184> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x555ebf57eb18 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555ebf57ea98 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555ebf57ea68 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555ebf57eb30 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x555ebf57eaf0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x555ebf57eac0 <col:219> 'int' 0
|   |-BinaryOperator 0x555ebf57f280 <line:800:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57ece0 <col:3> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf57f268 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf57f238 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x555ebf57f1f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555ebf57f1d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555ebf57ed00 <col:20> '_Bool' lvalue Var 0x555ebf578ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf57f220 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555ebf57f208 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555ebf57ed20 <col:36> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x555ebf57f1b8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x555ebf57f188 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x555ebf57ef30 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555ebf57ee50 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555ebf57ed78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555ebf57ed60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555ebf57ed40 <col:55> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555ebf57ee30 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555ebf57edc8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555ebf57edb0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555ebf57ed90 <col:74> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x555ebf57ee18 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555ebf57ee00 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555ebf57ede0 <col:93> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555ebf57ef10 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555ebf57eea8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555ebf57ee90 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555ebf57ee70 <col:112> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x555ebf57eef8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555ebf57eee0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555ebf57eec0 <col:131> '_Bool' lvalue Var 0x555ebf5782b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x555ebf57f170 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555ebf57f158 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555ebf57ef50 <col:148> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x555ebf57f138 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x555ebf57f108 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x555ebf57f028 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555ebf57efe0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555ebf57efb0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555ebf57ef70 <col:166> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555ebf57f010 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555ebf57eff8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555ebf57ef90 <col:184> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x555ebf57f0c0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555ebf57f078 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555ebf57f048 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555ebf57f0f0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x555ebf57f0d8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x555ebf57f0a0 <col:212> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x555ebf57f848 <line:801:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57f2a0 <col:3> '_Bool' lvalue Var 0x555ebf5782b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf57f830 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf57f800 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x555ebf57f7b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555ebf57f7a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555ebf57f2c0 <col:20> '_Bool' lvalue Var 0x555ebf578ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf57f7e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555ebf57f7d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555ebf57f2e0 <col:36> '_Bool' lvalue Var 0x555ebf5782b8 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x555ebf57f780 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x555ebf57f750 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x555ebf57f4f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555ebf57f410 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555ebf57f338 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555ebf57f320 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555ebf57f300 <col:55> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555ebf57f3f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555ebf57f388 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555ebf57f370 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555ebf57f350 <col:74> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x555ebf57f3d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555ebf57f3c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555ebf57f3a0 <col:93> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555ebf57f4d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555ebf57f468 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555ebf57f450 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555ebf57f430 <col:112> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x555ebf57f4b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555ebf57f4a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555ebf57f480 <col:131> '_Bool' lvalue Var 0x555ebf5782b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x555ebf57f738 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555ebf57f720 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555ebf57f510 <col:148> '_Bool' lvalue Var 0x555ebf5782b8 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x555ebf57f700 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x555ebf57f6d0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x555ebf57f5d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555ebf57f588 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555ebf57f570 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555ebf57f530 <col:166> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555ebf57f5b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555ebf57f5a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555ebf57f550 <col:184> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x555ebf57f6a0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555ebf57f620 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555ebf57f5f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555ebf57f6b8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x555ebf57f678 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x555ebf57f648 <col:219> 'int' 0
|   |-BinaryOperator 0x555ebf57f8c0 <line:802:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555ebf57f868 <col:3> 'int' lvalue Var 0x555ebf577b68 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x555ebf57f8a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ebf57f888 <col:25> 'int' lvalue Var 0x555ebf577c88 'a' 'int'
|   |-BinaryOperator 0x555ebf57f9f0 <line:803:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x555ebf57f8e0 <col:3> 'int' lvalue Var 0x555ebf577c88 'a' 'int'
|   | `-ConditionalOperator 0x555ebf57f9c0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x555ebf57f978 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555ebf57f960 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555ebf57f900 <col:7> '_Bool' lvalue Var 0x555ebf577d20 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x555ebf57f990 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ebf57f920 <col:25> 'int' lvalue Var 0x555ebf577da0 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x555ebf57f9a8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x555ebf57f940 <col:37> 'int' lvalue Var 0x555ebf577c88 'a' 'int'
|   |-BinaryOperator 0x555ebf57fa88 <line:804:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57fa10 <col:3> '_Bool' lvalue Var 0x555ebf577d20 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x555ebf57fa60 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555ebf57fa30 <col:28> 'int' 0
|   |-CallExpr 0x555ebf57fae0 <line:805:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf57fac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57faa8 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ebf57fb38 <line:806:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf57fb20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf57fb00 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf57fe20 <line:807:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555ebf57fb58 <col:3> 'int' lvalue Var 0x555ebf577c88 'a' 'int'
|   | `-ConditionalOperator 0x555ebf57fdf0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555ebf57fc18 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555ebf57fbd0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555ebf57fbb8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555ebf57fb78 <col:7> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555ebf57fc00 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555ebf57fbe8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555ebf57fb98 <col:25> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x555ebf57fdd8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ebf57fc38 <col:42> 'int' lvalue Var 0x555ebf578430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x555ebf57fdb8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555ebf57fd88 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555ebf57fcf8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555ebf57fcb0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555ebf57fc98 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555ebf57fc58 <col:55> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555ebf57fce0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555ebf57fcc8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555ebf57fc78 <col:73> '_Bool' lvalue Var 0x555ebf5782b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x555ebf57fd58 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555ebf57fd18 <col:90> 'int' lvalue Var 0x555ebf578528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555ebf57fd70 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf57fd38 <col:102> 'int' lvalue Var 0x555ebf577c88 'a' 'int'
|   |-BinaryOperator 0x555ebf580038 <line:808:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf57fe40 <col:3> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf580020 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf57fff0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555ebf57ff00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555ebf57feb8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555ebf57fea0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555ebf57fe60 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555ebf57fee8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555ebf57fed0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555ebf57fe80 <col:38> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf57ff98 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ebf57ff50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ebf57ff20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555ebf57ffc8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ebf57ffb0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf57ff78 <col:66> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555ebf580320 <line:809:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf580058 <col:3> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf580308 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf5802d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555ebf5801f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555ebf580118 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555ebf5800d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555ebf5800b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555ebf580078 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555ebf580100 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555ebf5800e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555ebf580098 <col:38> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x555ebf5801d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555ebf580190 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555ebf580178 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555ebf580138 <col:56> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555ebf5801c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555ebf5801a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555ebf580158 <col:74> '_Bool' lvalue Var 0x555ebf5782b8 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf580290 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ebf580248 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ebf580218 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555ebf5802c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ebf5802a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf580270 <col:102> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555ebf580528 <line:810:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf580340 <col:3> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf580510 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf5804e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555ebf580400 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555ebf5803b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555ebf5803a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555ebf580360 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555ebf5803e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555ebf5803d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555ebf580380 <col:38> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf580498 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ebf580450 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ebf580420 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555ebf5804c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ebf5804b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf580478 <col:66> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x555ebf580810 <line:811:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555ebf580548 <col:3> '_Bool' lvalue Var 0x555ebf5782b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555ebf5807f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ebf5807c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555ebf5806e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555ebf580608 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555ebf5805c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555ebf5805a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555ebf580568 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555ebf5805f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555ebf5805d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555ebf580588 <col:38> '_Bool' lvalue Var 0x555ebf578060 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x555ebf5806c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555ebf580680 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555ebf580668 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555ebf580628 <col:56> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555ebf5806b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555ebf580698 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555ebf580648 <col:74> '_Bool' lvalue Var 0x555ebf5782b8 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x555ebf580780 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ebf580738 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ebf580708 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555ebf5807b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ebf580798 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ebf580760 <col:102> '_Bool' lvalue Var 0x555ebf5782b8 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x555ebf580868 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf580850 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf580830 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ebf5808c0 <line:813:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ebf5808a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf580888 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ebf580978 <line:814:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555ebf5808e0 <col:3> 'int' lvalue Var 0x555ebf5776e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555ebf580958 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555ebf580940 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ebf580900 <col:22> 'int' lvalue Var 0x555ebf5776e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555ebf580920 <col:41> 'int' 1
|   |-CallExpr 0x555ebf5809d0 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ebf5809b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ebf580998 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555ebf580a48 <line:816:3, col:36>
|     `-CallExpr 0x555ebf580a28 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555ebf580a10 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555ebf5809f0 <col:10> 'void *(void)' Function 0x555ebf51de68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555ebf580b90 prev 0x555ebf577430 <line:818:1, line:820:1> line:818:6 fence 'void ()'
| `-CompoundStmt 0x555ebf580c30 <line:819:1, line:820:1>
|-FunctionDecl 0x555ebf580c60 prev 0x555ebf5774f0 <line:821:1, line:823:1> line:821:6 isync 'void ()'
| `-CompoundStmt 0x555ebf580d00 <line:822:1, line:823:1>
|-FunctionDecl 0x555ebf580d30 prev 0x555ebf5775b0 <line:824:1, line:826:1> line:824:6 lwfence 'void ()'
| `-CompoundStmt 0x555ebf580dd0 <line:825:1, line:826:1>
`-FunctionDecl 0x555ebf580e38 <line:827:1, line:853:1> line:827:5 main 'int ()'
  `-CompoundStmt 0x555ebf582e60 <line:828:1, line:853:1>
    |-DeclStmt 0x555ebf580f50 <line:829:3, col:17>
    | `-VarDecl 0x555ebf580ee8 <col:3, col:13> col:13 used t475 'pthread_t':'unsigned long'
    |-CallExpr 0x555ebf581178 <line:830:3, col:53> 'int'
    | |-ImplicitCastExpr 0x555ebf581160 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ebf580f68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555ebf55e8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555ebf580fa8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555ebf580f88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555ebf580ee8 't475' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555ebf5811b8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555ebf581040 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x555ebf581018 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555ebf580fc0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x555ebf5811d0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ebf581060 <col:38> 'void *(void *)' Function 0x555ebf578bf8 'P0' 'void *(void *)'
    | `-ParenExpr 0x555ebf5810e0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x555ebf5810b8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555ebf581080 <col:51> 'int' 0
    |-DeclStmt 0x555ebf581260 <line:831:3, col:17>
    | `-VarDecl 0x555ebf5811f8 <col:3, col:13> col:13 used t476 'pthread_t':'unsigned long'
    |-CallExpr 0x555ebf581408 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x555ebf5813f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ebf581278 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555ebf55e8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555ebf5812b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555ebf581298 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555ebf5811f8 't476' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555ebf581448 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555ebf581330 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x555ebf581308 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555ebf5812d0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x555ebf581460 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ebf581350 <col:38> 'void *(void *)' Function 0x555ebf57a630 'P1' 'void *(void *)'
    | `-ParenExpr 0x555ebf5813d0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x555ebf5813a8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555ebf581370 <col:51> 'int' 0
    |-DeclStmt 0x555ebf5814f0 <line:833:3, col:17>
    | `-VarDecl 0x555ebf581488 <col:3, col:13> col:13 used t477 'pthread_t':'unsigned long'
    |-CallExpr 0x555ebf581698 <line:834:3, col:53> 'int'
    | |-ImplicitCastExpr 0x555ebf581680 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ebf581508 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555ebf55e8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555ebf581548 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555ebf581528 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555ebf581488 't477' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555ebf5816d8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555ebf5815c0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x555ebf581598 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555ebf581560 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x555ebf5816f0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ebf5815e0 <col:38> 'void *(void *)' Function 0x555ebf57b9b0 'P2' 'void *(void *)'
    | `-ParenExpr 0x555ebf581660 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x555ebf581638 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555ebf581600 <col:51> 'int' 0
    |-DeclStmt 0x555ebf581780 <line:835:3, col:17>
    | `-VarDecl 0x555ebf581718 <col:3, col:13> col:13 used t478 'pthread_t':'unsigned long'
    |-CallExpr 0x555ebf581928 <line:836:3, col:53> 'int'
    | |-ImplicitCastExpr 0x555ebf581910 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ebf581798 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555ebf55e8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555ebf5817d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555ebf5817b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555ebf581718 't478' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555ebf581968 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555ebf581850 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x555ebf581828 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555ebf5817f0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x555ebf581980 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ebf581870 <col:38> 'void *(void *)' Function 0x555ebf57cd50 'P3' 'void *(void *)'
    | `-ParenExpr 0x555ebf5818f0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x555ebf5818c8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555ebf581890 <col:51> 'int' 0
    |-CallExpr 0x555ebf5819d0 <line:837:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555ebf5819b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555ebf581998 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555ebf581aa0 <line:838:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x555ebf5819f0 <col:3> '_Bool' lvalue Var 0x555ebf578618 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x555ebf581a88 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x555ebf581a68 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x555ebf581a50 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x555ebf581a10 <col:21> 'int' lvalue Var 0x555ebf5776e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x555ebf581a30 <col:41> 'int' 4
    |-CallExpr 0x555ebf581af8 <line:839:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555ebf581ae0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555ebf581ac0 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555ebf581b70 <line:840:3, col:36> 'void'
    | |-ImplicitCastExpr 0x555ebf581b58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ebf581b18 <col:3> 'void (int)' Function 0x555ebf51dca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x555ebf581bb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x555ebf581b98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x555ebf581b38 <col:21> '_Bool' lvalue Var 0x555ebf578618 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x555ebf581c00 <line:841:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555ebf581be8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555ebf581bc8 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555ebf581ee8 <line:842:3, col:103> 'int' '='
    | |-DeclRefExpr 0x555ebf581c20 <col:3> 'int' lvalue Var 0x555ebf577c88 'a' 'int'
    | `-ConditionalOperator 0x555ebf581eb8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x555ebf581ce0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x555ebf581c98 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x555ebf581c80 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x555ebf581c40 <col:7> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x555ebf581cc8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x555ebf581cb0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x555ebf581c60 <col:25> '_Bool' lvalue Var 0x555ebf577e18 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x555ebf581ea0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x555ebf581d00 <col:42> 'int' lvalue Var 0x555ebf578430 'a$w_buff0' 'int'
    |   `-ParenExpr 0x555ebf581e80 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x555ebf581e50 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x555ebf581dc0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x555ebf581d78 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x555ebf581d60 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x555ebf581d20 <col:55> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x555ebf581da8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x555ebf581d90 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x555ebf581d40 <col:73> '_Bool' lvalue Var 0x555ebf5780d8 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x555ebf581e20 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x555ebf581de0 <col:90> 'int' lvalue Var 0x555ebf578528 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x555ebf581e38 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x555ebf581e00 <col:102> 'int' lvalue Var 0x555ebf577c88 'a' 'int'
    |-BinaryOperator 0x555ebf582118 <line:843:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x555ebf581f08 <col:3> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x555ebf582100 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555ebf5820d0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x555ebf581fc8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x555ebf581f80 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x555ebf581f68 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x555ebf581f28 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x555ebf581fb0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x555ebf581f98 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x555ebf581f48 <col:38> '_Bool' lvalue Var 0x555ebf577e18 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555ebf582088 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555ebf582040 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555ebf582010 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x555ebf5820b8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555ebf5820a0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555ebf582068 <col:66> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x555ebf582400 <line:844:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x555ebf582138 <col:3> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x555ebf5823e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555ebf5823b8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x555ebf5822d8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x555ebf5821f8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x555ebf5821b0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x555ebf582198 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x555ebf582158 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x555ebf5821e0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x555ebf5821c8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x555ebf582178 <col:38> '_Bool' lvalue Var 0x555ebf577e18 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x555ebf5822b8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x555ebf582270 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x555ebf582258 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x555ebf582218 <col:56> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x555ebf5822a0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x555ebf582288 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x555ebf582238 <col:74> '_Bool' lvalue Var 0x555ebf5780d8 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555ebf582370 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555ebf582328 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555ebf5822f8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x555ebf5823a0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555ebf582388 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555ebf582350 <col:102> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x555ebf582608 <line:845:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x555ebf582420 <col:3> '_Bool' lvalue Var 0x555ebf577e18 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x555ebf5825f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555ebf5825c0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x555ebf5824e0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x555ebf582498 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x555ebf582480 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x555ebf582440 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x555ebf5824c8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x555ebf5824b0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x555ebf582460 <col:38> '_Bool' lvalue Var 0x555ebf577e18 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555ebf582578 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555ebf582530 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555ebf582500 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x555ebf5825a8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555ebf582590 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555ebf582558 <col:66> '_Bool' lvalue Var 0x555ebf577e18 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x555ebf5828f0 <line:846:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x555ebf582628 <col:3> '_Bool' lvalue Var 0x555ebf5780d8 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x555ebf5828d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555ebf5828a8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x555ebf5827c8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x555ebf5826e8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x555ebf5826a0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x555ebf582688 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x555ebf582648 <col:20> '_Bool' lvalue Var 0x555ebf5784a8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x555ebf5826d0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x555ebf5826b8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x555ebf582668 <col:38> '_Bool' lvalue Var 0x555ebf577e18 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x555ebf5827a8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x555ebf582760 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x555ebf582748 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x555ebf582708 <col:56> '_Bool' lvalue Var 0x555ebf5785a0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x555ebf582790 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x555ebf582778 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x555ebf582728 <col:74> '_Bool' lvalue Var 0x555ebf5780d8 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555ebf582860 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555ebf582818 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555ebf5827e8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x555ebf582890 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555ebf582878 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555ebf582840 <col:102> '_Bool' lvalue Var 0x555ebf5780d8 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x555ebf582948 <line:847:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555ebf582930 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555ebf582910 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555ebf5829a0 <line:848:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555ebf582988 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555ebf582968 <col:3> 'void ()' Function 0x555ebf51e350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555ebf582d08 <line:849:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x555ebf5829c0 <col:3> '_Bool' lvalue Var 0x555ebf578690 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x555ebf582cf0 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x555ebf582cd8 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x555ebf582cb8 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x555ebf582c98 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x555ebf582c00 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x555ebf582b68 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x555ebf582ad0 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x555ebf582a38 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x555ebf582a20 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x555ebf5829e0 <col:23> 'int' lvalue Var 0x555ebf578790 'x' 'int'
    |         | | | | `-IntegerLiteral 0x555ebf582a00 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x555ebf582ab0 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x555ebf582a98 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x555ebf582a58 <col:33> 'int' lvalue Var 0x555ebf577808 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x555ebf582a78 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x555ebf582b48 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x555ebf582b30 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x555ebf582af0 <col:61> 'int' lvalue Var 0x555ebf577928 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x555ebf582b10 <col:84> 'int' 0
    |         | `-BinaryOperator 0x555ebf582be0 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x555ebf582bc8 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x555ebf582b88 <col:89> 'int' lvalue Var 0x555ebf577a48 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x555ebf582ba8 <col:112> 'int' 1
    |         `-BinaryOperator 0x555ebf582c78 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x555ebf582c60 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x555ebf582c20 <col:117> 'int' lvalue Var 0x555ebf577b68 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x555ebf582c40 <col:140> 'int' 0
    |-CallExpr 0x555ebf582d60 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555ebf582d48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555ebf582d28 <col:3> 'void ()' Function 0x555ebf51e410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555ebf582dd8 <line:851:3, col:36> 'void'
    | |-ImplicitCastExpr 0x555ebf582dc0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ebf582d80 <col:3> 'void (int)' Function 0x555ebf51e0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x555ebf582e18 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x555ebf582e00 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x555ebf582da0 <col:21> '_Bool' lvalue Var 0x555ebf578690 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x555ebf582e50 <line:852:3, col:10>
      `-IntegerLiteral 0x555ebf582e30 <col:10> 'int' 0
