TranslationUnitDecl 0x5597c0764dd8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5597c0765698 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5597c0765370 '__int128'
|-TypedefDecl 0x5597c0765708 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5597c0765390 'unsigned __int128'
|-TypedefDecl 0x5597c0765a10 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5597c07657e0 'struct __NSConstantString_tag'
|   `-Record 0x5597c0765760 '__NSConstantString_tag'
|-TypedefDecl 0x5597c0765ab8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5597c0765a70 'char *'
|   `-BuiltinType 0x5597c0764e70 'char'
|-TypedefDecl 0x5597c07a4c00 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5597c0765d50 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5597c0765b90 'struct __va_list_tag'
|     `-Record 0x5597c0765b10 '__va_list_tag'
|-TypedefDecl 0x5597c07a4c70 <array-industry-pattern/array_ptr_partial_init_true-unreach-call.i:1:1, col:22> col:22 referenced size_t 'unsigned int'
| `-BuiltinType 0x5597c0764f70 'unsigned int'
|-FunctionDecl 0x5597c07a4e58 <line:2:14> col:14 implicit used malloc 'void *(unsigned long)' extern
| `-ParmVarDecl 0x5597c07a4ef8 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x5597c07a4f68 prev 0x5597c07a4e58 <col:1, col:105> col:14 used malloc 'void *(size_t)' extern
| |-ParmVarDecl 0x5597c07a4d08 <col:22, col:29> col:29 __size 'size_t':'unsigned int'
| |-NoThrowAttr 0x5597c07a5010 <col:53>
| `-RestrictAttr 0x5597c07a5068 <col:94> malloc
|-FunctionDecl 0x5597c07a5560 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5597c07a5730 <line:4:1, col:79> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5597c07a5660 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x5597c07a5970 <col:34, col:79>
|   `-IfStmt 0x5597c07a5958 <col:36, col:77>
|     |-UnaryOperator 0x5597c07a5830 <col:39, col:45> 'int' prefix '!' cannot overflow
|     | `-ImplicitCastExpr 0x5597c07a5818 <col:40, col:45> 'int' <LValueToRValue>
|     |   `-ParenExpr 0x5597c07a57f8 <col:40, col:45> 'int' lvalue
|     |     `-DeclRefExpr 0x5597c07a57d8 <col:41> 'int' lvalue ParmVar 0x5597c07a5660 'cond' 'int'
|     `-CompoundStmt 0x5597c07a5940 <col:48, col:77>
|       `-LabelStmt 0x5597c07a5928 <col:50, col:74> 'ERROR'
|         `-CallExpr 0x5597c07a58b8 <col:57, col:74> 'void'
|           `-ImplicitCastExpr 0x5597c07a58a0 <col:57> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|             `-DeclRefExpr 0x5597c07a5848 <col:57> 'void () __attribute__((noreturn))' Function 0x5597c07a5560 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|-VarDecl 0x5597c07a5a68 <line:5:1, col:14> col:6 used a 'int *[100000]'
|-VarDecl 0x5597c07a5ae8 <line:6:1, col:5> col:5 used i 'int'
`-FunctionDecl 0x5597c07c9f80 <line:7:1, line:22:1> line:7:5 main 'int ()'
  `-CompoundStmt 0x5597c07ca970 <line:8:1, line:22:1>
    |-ForStmt 0x5597c07ca260 <line:9:2, line:12:2>
    | |-BinaryOperator 0x5597c07ca060 <line:9:6, col:10> 'int' '='
    | | |-DeclRefExpr 0x5597c07ca020 <col:6> 'int' lvalue Var 0x5597c07a5ae8 'i' 'int'
    | | `-IntegerLiteral 0x5597c07ca040 <col:10> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x5597c07ca0d8 <col:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x5597c07ca0c0 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5597c07ca080 <col:13> 'int' lvalue Var 0x5597c07a5ae8 'i' 'int'
    | | `-IntegerLiteral 0x5597c07ca0a0 <col:17> 'int' 100000
    | |-UnaryOperator 0x5597c07ca118 <col:25, col:26> 'int' postfix '++'
    | | `-DeclRefExpr 0x5597c07ca0f8 <col:25> 'int' lvalue Var 0x5597c07a5ae8 'i' 'int'
    | `-CompoundStmt 0x5597c07ca248 <line:10:2, line:12:2>
    |   `-BinaryOperator 0x5597c07ca228 <line:11:3, col:10> 'int *' '='
    |     |-ArraySubscriptExpr 0x5597c07ca1d0 <col:3, col:6> 'int *' lvalue
    |     | |-ImplicitCastExpr 0x5597c07ca1a0 <col:3> 'int **' <ArrayToPointerDecay>
    |     | | `-DeclRefExpr 0x5597c07ca130 <col:3> 'int *[100000]' lvalue Var 0x5597c07a5a68 'a' 'int *[100000]'
    |     | `-ImplicitCastExpr 0x5597c07ca1b8 <col:5> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5597c07ca150 <col:5> 'int' lvalue Var 0x5597c07a5ae8 'i' 'int'
    |     `-ImplicitCastExpr 0x5597c07ca210 <col:10> 'int *' <NullToPointer>
    |       `-IntegerLiteral 0x5597c07ca1f0 <col:10> 'int' 0
    |-ForStmt 0x5597c07ca5d8 <line:13:2, line:16:2>
    | |-BinaryOperator 0x5597c07ca2d8 <line:13:6, col:10> 'int' '='
    | | |-DeclRefExpr 0x5597c07ca298 <col:6> 'int' lvalue Var 0x5597c07a5ae8 'i' 'int'
    | | `-IntegerLiteral 0x5597c07ca2b8 <col:10> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x5597c07ca390 <col:13, col:26> 'int' '<'
    | | |-ImplicitCastExpr 0x5597c07ca378 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5597c07ca2f8 <col:13> 'int' lvalue Var 0x5597c07a5ae8 'i' 'int'
    | | `-BinaryOperator 0x5597c07ca358 <col:17, col:26> 'int' '/'
    | |   |-IntegerLiteral 0x5597c07ca318 <col:17> 'int' 100000
    | |   `-IntegerLiteral 0x5597c07ca338 <col:26> 'int' 2
    | |-UnaryOperator 0x5597c07ca3d0 <col:29, col:30> 'int' postfix '++'
    | | `-DeclRefExpr 0x5597c07ca3b0 <col:29> 'int' lvalue Var 0x5597c07a5ae8 'i' 'int'
    | `-CompoundStmt 0x5597c07ca5c0 <line:14:2, line:16:2>
    |   `-BinaryOperator 0x5597c07ca5a0 <line:15:3, col:28> 'int *' '='
    |     |-ArraySubscriptExpr 0x5597c07ca458 <col:3, col:6> 'int *' lvalue
    |     | |-ImplicitCastExpr 0x5597c07ca428 <col:3> 'int **' <ArrayToPointerDecay>
    |     | | `-DeclRefExpr 0x5597c07ca3e8 <col:3> 'int *[100000]' lvalue Var 0x5597c07a5a68 'a' 'int *[100000]'
    |     | `-ImplicitCastExpr 0x5597c07ca440 <col:5> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5597c07ca408 <col:5> 'int' lvalue Var 0x5597c07a5ae8 'i' 'int'
    |     `-ImplicitCastExpr 0x5597c07ca588 <col:10, col:28> 'int *' <BitCast>
    |       `-CallExpr 0x5597c07ca548 <col:10, col:28> 'void *'
    |         |-ImplicitCastExpr 0x5597c07ca530 <col:10> 'void *(*)(size_t)' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x5597c07ca478 <col:10> 'void *(size_t)' Function 0x5597c07a4f68 'malloc' 'void *(size_t)'
    |         `-ImplicitCastExpr 0x5597c07ca570 <col:17, col:27> 'size_t':'unsigned int' <IntegralCast>
    |           `-UnaryExprOrTypeTraitExpr 0x5597c07ca4b0 <col:17, col:27> 'unsigned long' sizeof 'int'
    |-ForStmt 0x5597c07ca908 <line:17:2, line:20:2>
    | |-BinaryOperator 0x5597c07ca650 <line:17:6, col:10> 'int' '='
    | | |-DeclRefExpr 0x5597c07ca610 <col:6> 'int' lvalue Var 0x5597c07a5ae8 'i' 'int'
    | | `-IntegerLiteral 0x5597c07ca630 <col:10> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x5597c07ca708 <col:13, col:26> 'int' '<'
    | | |-ImplicitCastExpr 0x5597c07ca6f0 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5597c07ca670 <col:13> 'int' lvalue Var 0x5597c07a5ae8 'i' 'int'
    | | `-BinaryOperator 0x5597c07ca6d0 <col:17, col:26> 'int' '/'
    | |   |-IntegerLiteral 0x5597c07ca690 <col:17> 'int' 100000
    | |   `-IntegerLiteral 0x5597c07ca6b0 <col:26> 'int' 2
    | |-UnaryOperator 0x5597c07ca748 <col:29, col:30> 'int' postfix '++'
    | | `-DeclRefExpr 0x5597c07ca728 <col:29> 'int' lvalue Var 0x5597c07a5ae8 'i' 'int'
    | `-CompoundStmt 0x5597c07ca8f0 <line:18:2, line:20:2>
    |   `-CallExpr 0x5597c07ca8c8 <line:19:3, col:30> 'void'
    |     |-ImplicitCastExpr 0x5597c07ca8b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x5597c07ca760 <col:3> 'void (int)' Function 0x5597c07a5730 '__VERIFIER_assert' 'void (int)'
    |     `-BinaryOperator 0x5597c07ca860 <col:21, col:29> 'int' '!='
    |       |-ImplicitCastExpr 0x5597c07ca830 <col:21, col:24> 'int *' <LValueToRValue>
    |       | `-ArraySubscriptExpr 0x5597c07ca7f0 <col:21, col:24> 'int *' lvalue
    |       |   |-ImplicitCastExpr 0x5597c07ca7c0 <col:21> 'int **' <ArrayToPointerDecay>
    |       |   | `-DeclRefExpr 0x5597c07ca780 <col:21> 'int *[100000]' lvalue Var 0x5597c07a5a68 'a' 'int *[100000]'
    |       |   `-ImplicitCastExpr 0x5597c07ca7d8 <col:23> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5597c07ca7a0 <col:23> 'int' lvalue Var 0x5597c07a5ae8 'i' 'int'
    |       `-ImplicitCastExpr 0x5597c07ca848 <col:29> 'int *' <NullToPointer>
    |         `-IntegerLiteral 0x5597c07ca810 <col:29> 'int' 0
    `-ReturnStmt 0x5597c07ca960 <line:21:1, col:8>
      `-IntegerLiteral 0x5597c07ca940 <col:8> 'int' 0
