TranslationUnitDecl 0x564bb10a6f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x564bb10a7848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x564bb10a7520 '__int128'
|-TypedefDecl 0x564bb10a78b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x564bb10a7540 'unsigned __int128'
|-TypedefDecl 0x564bb10a7bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x564bb10a7990 'struct __NSConstantString_tag'
|   `-Record 0x564bb10a7910 '__NSConstantString_tag'
|-TypedefDecl 0x564bb10a7c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x564bb10a7c20 'char *'
|   `-BuiltinType 0x564bb10a7020 'char'
|-TypedefDecl 0x564bb10e6b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x564bb10a7f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x564bb10a7d40 'struct __va_list_tag'
|     `-Record 0x564bb10a7cc0 '__va_list_tag'
|-FunctionDecl 0x564bb10e6ca0 <pthread-wmm/mix008_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x564bb10e6bd0 <col:31> col:34 'int'
|-FunctionDecl 0x564bb10e6e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x564bb10e6f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x564bb10e70d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x564bb10e7048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x564bb10e7308 <col:40, col:99>
|   |-IfStmt 0x564bb10e72d8 <col:42, col:88>
|   | |-UnaryOperator 0x564bb10e71b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x564bb10e71a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x564bb10e7180 <col:47> 'int' lvalue ParmVar 0x564bb10e7048 'expression' 'int'
|   | `-CompoundStmt 0x564bb10e72c0 <col:59, col:88>
|   |   `-LabelStmt 0x564bb10e72a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x564bb10e7238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x564bb10e7220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x564bb10e71d0 <col:68> 'void () __attribute__((noreturn))' Function 0x564bb10e6f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x564bb10e72f0 <col:89>
|   `-ReturnStmt 0x564bb10e72f8 <col:91>
|-FunctionDecl 0x564bb10e7350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x564bb10e7410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x564bb10e7790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564bb10e74c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x564bb10e7548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x564bb10e75c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564bb10e7648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564bb10e7850 <line:10:22>
|-FunctionDecl 0x564bb110d8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564bb10e78c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x564bb10e7940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x564bb10e79c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564bb10e7a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564bb110d960 <line:13:22>
|-FunctionDecl 0x564bb110dc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564bb110d9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x564bb110da50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x564bb110dad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x564bb110dcc8 <line:15:22>
|-TypedefDecl 0x564bb110dd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x564bb10a70e0 'unsigned char'
|-TypedefDecl 0x564bb110dda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x564bb10a7100 'unsigned short'
|-TypedefDecl 0x564bb110de18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x564bb10a7120 'unsigned int'
|-TypedefDecl 0x564bb110de88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-TypedefDecl 0x564bb110def8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x564bb10a7040 'signed char'
|-TypedefDecl 0x564bb110df68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x564bb10a70e0 'unsigned char'
|-TypedefDecl 0x564bb110dfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x564bb10a7060 'short'
|-TypedefDecl 0x564bb110e048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x564bb10a7100 'unsigned short'
|-TypedefDecl 0x564bb110e0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x564bb10a7080 'int'
|-TypedefDecl 0x564bb110e128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x564bb10a7120 'unsigned int'
|-TypedefDecl 0x564bb110e198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb110e208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-TypedefDecl 0x564bb110e278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb110e2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-TypedefDecl 0x564bb110e358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-TypedefDecl 0x564bb110e3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x564bb10a7120 'unsigned int'
|-TypedefDecl 0x564bb110e438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x564bb10a7120 'unsigned int'
|-TypedefDecl 0x564bb110e4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-TypedefDecl 0x564bb110e518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-TypedefDecl 0x564bb110e588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x564bb10a7120 'unsigned int'
|-TypedefDecl 0x564bb110e5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-TypedefDecl 0x564bb110e668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb110e6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb110e748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x564bb10a7080 'int'
|-RecordDecl 0x564bb110e7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x564bb110e918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x564bb110e9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x564bb110e970 'struct __fsid_t' sugar
|   `-RecordType 0x564bb110e820 '__fsid_t'
|     `-Record 0x564bb110e7a0 ''
|-TypedefDecl 0x564bb110ea58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb110eac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-TypedefDecl 0x564bb110eb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-TypedefDecl 0x564bb110eba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x564bb10a7120 'unsigned int'
|-TypedefDecl 0x564bb110ec18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb110ec88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x564bb10a7120 'unsigned int'
|-TypedefDecl 0x564bb110ecf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb110ed68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x564bb10a7080 'int'
|-TypedefDecl 0x564bb110edd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x564bb10a7080 'int'
|-TypedefDecl 0x564bb110ee48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x564bb10a7080 'int'
|-TypedefDecl 0x564bb110eeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x564bb10a77a0 'void *'
|   `-BuiltinType 0x564bb10a6fe0 'void'
|-TypedefDecl 0x564bb110ef28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb110ef98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb110f008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb110f078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-TypedefDecl 0x564bb110f0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-TypedefDecl 0x564bb110f158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-TypedefDecl 0x564bb110f1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-TypedefDecl 0x564bb110f238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb110f2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb110f318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb110f388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-TypedefDecl 0x564bb110f418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x564bb110f3e0 '__off64_t' sugar
|   |-Typedef 0x564bb110e6d8 '__off64_t'
|   `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb110f510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x564bb110f4d0 '__quad_t *'
|   `-TypedefType 0x564bb110f470 '__quad_t' sugar
|     |-Typedef 0x564bb110e278 '__quad_t'
|     `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb110f580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x564bb10a7c20 'char *'
|   `-BuiltinType 0x564bb10a7020 'char'
|-TypedefDecl 0x564bb110f5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb110f660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x564bb10a7120 'unsigned int'
|-FunctionDecl 0x564bb110f7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x564bb110f6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x564bb110fae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x564bb110fad8 <line:72:3, col:34>
|     `-CallExpr 0x564bb110fa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x564bb110fa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564bb110fa10 <col:10> '<builtin fn type>' Function 0x564bb110f880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x564bb110fac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564bb110fa30 <col:29> 'unsigned int' lvalue ParmVar 0x564bb110f6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x564bb110f880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x564bb110f920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x564bb110f990 <col:10> Implicit
| `-ConstAttr 0x564bb110f9e8 <col:10> Implicit
|-FunctionDecl 0x564bb110fc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x564bb110fb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x564bb110ff58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x564bb110ff48 <line:77:3, col:34>
|     `-CallExpr 0x564bb110ff08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x564bb110fef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564bb110fe78 <col:10> '<builtin fn type>' Function 0x564bb110fce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x564bb110ff30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x564bb110fe98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x564bb110fb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x564bb110fce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x564bb110fd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x564bb110fdf8 <col:10> Implicit
| `-ConstAttr 0x564bb110fe50 <col:10> Implicit
|-TypedefDecl 0x564bb110ff88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-TypedefDecl 0x564bb1110018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x564bb110ffe0 '__time_t' sugar
|   |-Typedef 0x564bb110ec18 '__time_t'
|   `-BuiltinType 0x564bb10a70a0 'long'
|-RecordDecl 0x564bb1110070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x564bb1110128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x564bb11101b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x564bb1110248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x564bb1110210 '__pid_t' sugar
|   |-Typedef 0x564bb110e748 '__pid_t'
|   `-BuiltinType 0x564bb10a7080 'int'
|-RecordDecl 0x564bb11102a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x564bb1110360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x564bb11103b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x564bb1110470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x564bb11104d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-RecordDecl 0x564bb1110530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x564bb11107c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x564bb11128b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x564bb1110810 'struct cpu_set_t' sugar
|   `-RecordType 0x564bb11105b0 'cpu_set_t'
|     `-Record 0x564bb1110530 ''
|-FunctionDecl 0x564bb1112b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x564bb1112958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564bb1112a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x564bb1112c38 <line:107:19>
|-FunctionDecl 0x564bb1112e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x564bb1112ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x564bb1112eb8 <col:69>
|-FunctionDecl 0x564bb1113030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x564bb1112f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x564bb11130d8 <col:64>
|-FunctionDecl 0x564bb1113398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x564bb1113140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564bb1113278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564bb1113448 <line:113:22>
|-FunctionDecl 0x564bb11136c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x564bb11134b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564bb11135a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x564bb1113778 <col:88>
|-FunctionDecl 0x564bb1113a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564bb11137e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564bb11138c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x564bb1113950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564bb1113b50 <col:62>
|-FunctionDecl 0x564bb1113cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x564bb1113bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x564bb1113d70 <col:63>
|-FunctionDecl 0x564bb1113e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x564bb1113f38 <col:47>
|-FunctionDecl 0x564bb1114040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x564bb1113fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564bb11140e8 <col:69>
|-FunctionDecl 0x564bb11141f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x564bb1114158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564bb1114298 <col:69>
|-FunctionDecl 0x564bb1114558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564bb1114300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564bb1114438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x564bb1114608 <col:88>
|-TypedefDecl 0x564bb1114698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x564bb1114660 '__clock_t' sugar
|   |-Typedef 0x564bb110ea58 '__clock_t'
|   `-BuiltinType 0x564bb10a70a0 'long'
|-TypedefDecl 0x564bb1114728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x564bb11146f0 '__clockid_t' sugar
|   |-Typedef 0x564bb110ee48 '__clockid_t'
|   `-BuiltinType 0x564bb10a7080 'int'
|-TypedefDecl 0x564bb11147b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x564bb1114780 '__timer_t' sugar
|   |-Typedef 0x564bb110eeb8 '__timer_t'
|   `-PointerType 0x564bb10a77a0 'void *'
|     `-BuiltinType 0x564bb10a6fe0 'void'
|-RecordDecl 0x564bb1114810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x564bb11148e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x564bb1114950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x564bb11149b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x564bb1114a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x564bb1114a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x564bb1114af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x564bb1114b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x564bb1114bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x564bb1114c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x564bb1114c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x564bb1114cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x564bb1114d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x564bb1114e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x564bb1114e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x564bb1114f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x564bb1115100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x564bb11151a0 <col:45>
|-FunctionDecl 0x564bb1115380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x564bb1115270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x564bb1115428 <col:54>
|-FunctionDecl 0x564bb1115628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x564bb1115490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x564bb1115508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x564bb11156d8 <line:157:22>
| `-ConstAttr 0x564bb1115730 <col:63>
|-FunctionDecl 0x564bb1116560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564bb1115828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564bb1116608 <col:56>
|-FunctionDecl 0x564bb11169b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x564bb1116678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x564bb11166f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564bb1116770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x564bb1116868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x564bb1116a70 <col:54>
|-RecordDecl 0x564bb1116ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x564bb1116b78 parent 0x564bb10a6f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x564bb1116dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x564bb1116e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x564bb1116ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x564bb1116f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x564bb1117038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x564bb1117158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x564bb1117100 'struct __locale_struct *'
|   `-ElaboratedType 0x564bb1117090 'struct __locale_struct' sugar
|     `-RecordType 0x564bb1116b50 'struct __locale_struct'
|       `-Record 0x564bb1116ac8 '__locale_struct'
|-TypedefDecl 0x564bb1117208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x564bb11171d0 '__locale_t' sugar
|   |-Typedef 0x564bb1117158 '__locale_t'
|   `-PointerType 0x564bb1117100 'struct __locale_struct *'
|     `-ElaboratedType 0x564bb1117090 'struct __locale_struct' sugar
|       `-RecordType 0x564bb1116b50 'struct __locale_struct'
|         `-Record 0x564bb1116ac8 '__locale_struct'
|-FunctionDecl 0x564bb1117610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x564bb1117278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x564bb11172f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564bb1117370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x564bb1117400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564bb1117478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x564bb11176d8 <col:40>
|-FunctionDecl 0x564bb11178c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564bb11177a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x564bb1117970 <col:66>
|-FunctionDecl 0x564bb1117a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564bb11179d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x564bb1117b28 <col:69>
|-FunctionDecl 0x564bb1117d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564bb1117b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564bb1117c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564bb1117e08 <col:52>
|-FunctionDecl 0x564bb1117fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564bb1117e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564bb1117f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564bb1118060 <col:55>
|-FunctionDecl 0x564bb11181f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x564bb11180e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x564bb11182a0 <col:62>
|-FunctionDecl 0x564bb1118418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x564bb1118308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x564bb11184c0 <col:60>
|-FunctionDecl 0x564bb1118718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564bb1118578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564bb11185f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x564bb11187c8 <col:44>
|-FunctionDecl 0x564bb11189d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564bb1118830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564bb11188b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x564bb1118a88 <col:49>
|-VarDecl 0x564bb1118b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x564bb1118c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x564bb1118c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x564bb1118d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x564bb1118e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x564bb1118f20 <col:42>
|-VarDecl 0x564bb1118f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x564bb1119010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x564bb1119198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x564bb1119088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x564bb1119240 <col:57>
|-FunctionDecl 0x564bb1119350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564bb11192c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564bb11193f8 <col:56>
|-FunctionDecl 0x564bb111a540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564bb1119478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x564bb111a5e8 <col:59>
|-FunctionDecl 0x564bb111a6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x564bb111a658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x564bb111a798 <col:48>
| `-ConstAttr 0x564bb111a7f0 <col:89>
|-FunctionDecl 0x564bb111aa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564bb111a8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x564bb111a938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x564bb111acb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564bb111ab48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564bb111abd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x564bb111ad68 <col:88>
|-FunctionDecl 0x564bb111af00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564bb111add0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564bb111ae60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x564bb111afb0 <col:88>
|-FunctionDecl 0x564bb111b1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x564bb111b018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564bb111b0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x564bb111b278 <line:208:22>
|-FunctionDecl 0x564bb111b5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564bb111b2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564bb111b360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x564bb111b3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x564bb111b480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x564bb111b8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x564bb111b6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x564bb111b7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x564bb111b998 <col:85>
|-FunctionDecl 0x564bb111bd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x564bb111ba00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564bb111bb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x564bb111bc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x564bb111be40 <col:52>
|-FunctionDecl 0x564bb111bfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x564bb111bea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564bb111c060 <col:61>
|-FunctionDecl 0x564bb111c560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x564bb111c0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564bb111c148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x564bb111c278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x564bb111c368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x564bb111c620 <col:62>
|-FunctionDecl 0x564bb111c838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x564bb111c688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564bb111c718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x564bb111c8e8 <line:221:22>
|-FunctionDecl 0x564bb111c9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x564bb111c950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564bb111ca90 <col:65>
|-TypedefDecl 0x564bb111cb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x564bb10a7140 'unsigned long'
|-RecordDecl 0x564bb111cb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x564bb111cca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564bb111cd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564bb111cdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x564bb111cd60 'union pthread_attr_t' sugar
|   `-RecordType 0x564bb111cbe0 'union pthread_attr_t'
|     `-Record 0x564bb111cb58 'pthread_attr_t'
|-RecordDecl 0x564bb111ce10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x564bb111cf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x564bb111d000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x564bb111d0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x564bb111d050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x564bb111ce90 'struct __pthread_internal_list'
|     `-Record 0x564bb111ce10 '__pthread_internal_list'
|-RecordDecl 0x564bb111d120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x564bb111d1c8 parent 0x564bb10a6f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x564bb111d2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564bb111d308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x564bb111d370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x564bb111d3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x564bb111d440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x564bb111d4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x564bb1121580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x564bb1121630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x564bb1121720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x564bb1121788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564bb1121910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x564bb11218b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x564bb111d1a0 'pthread_mutex_t'
|     `-Record 0x564bb111d120 ''
|-RecordDecl 0x564bb1121980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x564bb1121ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564bb1121b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564bb1121be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x564bb1121b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x564bb1121a00 'pthread_mutexattr_t'
|     `-Record 0x564bb1121980 ''
|-RecordDecl 0x564bb1121c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x564bb1121cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x564bb1121dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564bb1121e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x564bb1121e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x564bb1121ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x564bb1121f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x564bb1121fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x564bb1122030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x564bb1122098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x564bb1122150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix008_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix008_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x564bb1122240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x564bb11222a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x564bb11223e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x564bb1122380 'union pthread_cond_t' sugar
|   `-RecordType 0x564bb1121cd0 'pthread_cond_t'
|     `-Record 0x564bb1121c50 ''
|-RecordDecl 0x564bb1122450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x564bb1122590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564bb11225f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564bb11226b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x564bb1122650 'union pthread_condattr_t' sugar
|   `-RecordType 0x564bb11224d0 'pthread_condattr_t'
|     `-Record 0x564bb1122450 ''
|-TypedefDecl 0x564bb1122738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x564bb10a7120 'unsigned int'
|-TypedefDecl 0x564bb11227a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x564bb10a7080 'int'
|-RecordDecl 0x564bb1122800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x564bb11228a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x564bb1122970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564bb11229d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x564bb1122a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x564bb1122aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x564bb1122b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x564bb1122b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x564bb1122be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x564bb1122c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x564bb1122cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x564bb1122d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x564bb1122d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x564bb1122e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix008_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix008_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x564bb1122ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564bb1122f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564bb1123090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x564bb1123030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x564bb1122880 'pthread_rwlock_t'
|     `-Record 0x564bb1122800 ''
|-RecordDecl 0x564bb1123100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x564bb1123240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x564bb11232a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564bb1123360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x564bb1123300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x564bb1123180 'pthread_rwlockattr_t'
|     `-Record 0x564bb1123100 ''
|-TypedefDecl 0x564bb11233e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x564bb10a7084 'volatile int' volatile
|   `-BuiltinType 0x564bb10a7080 'int'
|-RecordDecl 0x564bb1123440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x564bb11255b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x564bb1125618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564bb11256d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x564bb1125670 'union pthread_barrier_t' sugar
|   `-RecordType 0x564bb11234c0 'pthread_barrier_t'
|     `-Record 0x564bb1123440 ''
|-RecordDecl 0x564bb1125740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x564bb1125840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564bb11258a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564bb1125960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x564bb1125900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x564bb11257c0 'pthread_barrierattr_t'
|     `-Record 0x564bb1125740 ''
|-TypedefDecl 0x564bb1125a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x564bb1125a10 'long [8]' 8 
|   `-BuiltinType 0x564bb10a70a0 'long'
|-EnumDecl 0x564bb1125ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x564bb1125b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x564bb1125be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x564bb1125c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x564bb1125d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x564bb1125d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x564bb1125da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x564bb1125df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x564bb1125e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x564bb1125e68 <col:26> 'int'
| |   `-DeclRefExpr 0x564bb1125e48 <col:26> 'int' EnumConstant 0x564bb1125d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x564bb1125f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x564bb1125ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x564bb1125ed0 <col:29> 'int' EnumConstant 0x564bb1125d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x564bb1125f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x564bb1125f78 <col:30> 'int'
| |   `-DeclRefExpr 0x564bb1125f58 <col:30> 'int' EnumConstant 0x564bb1125da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x564bb1126018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x564bb1126000 <col:27> 'int'
|     `-DeclRefExpr 0x564bb1125fe0 <col:27> 'int' EnumConstant 0x564bb1125e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x564bb1126068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x564bb1126138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x564bb11261c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x564bb11261a8 <col:30> 'int'
| |   `-DeclRefExpr 0x564bb1126188 <col:30> 'int' EnumConstant 0x564bb1126138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x564bb1126210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x564bb1126298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x564bb1126280 <col:29> 'int'
|     `-DeclRefExpr 0x564bb1126260 <col:29> 'int' EnumConstant 0x564bb1126210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x564bb11262e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x564bb11263b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x564bb1126408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x564bb1126458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x564bb11264a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x564bb11265c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x564bb1126610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x564bb1126660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x564bb11266e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x564bb11266d0 <col:31> 'int'
|     `-DeclRefExpr 0x564bb11266b0 <col:31> 'int' EnumConstant 0x564bb11265c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x564bb1126738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x564bb1126808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x564bb1126858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x564bb11268a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x564bb1126978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x564bb11269c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x564bb1126a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x564bb1126ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x564bb1126b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x564bb1126b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x564bb1126dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x564bb1126e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x564bb1126e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x564bb1126fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x564bb1127008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x564bb11270d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x564bb1127128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x564bb1127178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x564bb1127248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x564bb1127298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x564bb11278f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x564bb1127390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x564bb11274a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564bb11276e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x564bb1127760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x564bb11279b8 <col:47>
| |-NonNullAttr 0x564bb1127a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x564bb1127a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x564bb1127b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x564bb1127aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x564bb1127dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x564bb1127c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x564bb1127ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x564bb1127f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x564bb1127e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x564bb1128040 <col:60>
|-FunctionDecl 0x564bb1128190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x564bb1128230 <col:54>
| `-ConstAttr 0x564bb1128288 <col:95>
|-FunctionDecl 0x564bb1128458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x564bb11282c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564bb1128338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x564bb1128508 <line:394:19>
| `-ConstAttr 0x564bb1128560 <col:60>
|-FunctionDecl 0x564bb1128f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564bb1128e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564bb1129010 <col:71>
| `-NonNullAttr 0x564bb1129068 <col:112, col:126> 1
|-FunctionDecl 0x564bb1129170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564bb11290b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564bb1129218 <line:397:22>
| `-NonNullAttr 0x564bb1129270 <col:63, col:77> 1
|-FunctionDecl 0x564bb1129498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x564bb11292b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564bb1129338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x564bb1129548 <line:400:22>
| `-NonNullAttr 0x564bb11295a0 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb11297a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564bb11295e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564bb1129668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x564bb1129858 <line:403:22>
| `-NonNullAttr 0x564bb11298b0 <col:63, col:77> 1
|-FunctionDecl 0x564bb1129b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x564bb11298f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564bb11299a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x564bb1129bb8 <line:406:22>
| `-NonNullAttr 0x564bb1129c10 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb112ae48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564bb1129c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564bb1129cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564bb112aef8 <line:409:22>
| `-NonNullAttr 0x564bb112af50 <col:63, col:77> 1
|-FunctionDecl 0x564bb112b188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564bb112af98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564bb112b028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564bb112b238 <line:412:22>
| `-NonNullAttr 0x564bb112b290 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb112b4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564bb112b2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x564bb112b368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x564bb112b578 <col:37>
| `-NonNullAttr 0x564bb112b5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x564bb112b7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564bb112b618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564bb112b698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x564bb112b868 <line:418:22>
| `-NonNullAttr 0x564bb112b8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb112ba48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564bb112b908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564bb112b988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x564bb112baf8 <line:420:22>
| `-NonNullAttr 0x564bb112bb50 <col:63, col:77> 1
|-FunctionDecl 0x564bb112bcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564bb112bb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564bb112bc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x564bb112bda8 <line:423:22>
| `-NonNullAttr 0x564bb112ce30 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb112cfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564bb112ce78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564bb112cef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x564bb112d068 <line:426:22>
| `-NonNullAttr 0x564bb112d0c0 <col:63, col:77> 1
|-FunctionDecl 0x564bb112d268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564bb112d108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564bb112d188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x564bb112d318 <line:429:22>
| `-NonNullAttr 0x564bb112d370 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb112d4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564bb112d3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564bb112d438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x564bb112d5a8 <line:431:22>
| `-NonNullAttr 0x564bb112d600 <col:63, col:77> 1
|-FunctionDecl 0x564bb112d828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x564bb112d648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564bb112d6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x564bb112d8d8 <line:434:22>
| |-NonNullAttr 0x564bb112d930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x564bb112d968 <col:100> "" ""
|-FunctionDecl 0x564bb112db78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x564bb112d9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564bb112da38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x564bb112dc28 <line:437:22>
| |-NonNullAttr 0x564bb112dc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x564bb112dcb8 <col:97> "" ""
|-FunctionDecl 0x564bb112deb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564bb112dd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564bb112dd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564bb112df68 <line:440:22>
| `-NonNullAttr 0x564bb112dfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb112e140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564bb112e008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564bb112e080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564bb112e1f0 <line:443:22>
| `-NonNullAttr 0x564bb112e248 <col:63, col:77> 1
|-FunctionDecl 0x564bb112e538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564bb112e298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564bb112e318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x564bb112e390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564bb112e5f0 <line:447:22>
| `-NonNullAttr 0x564bb112e648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x564bb112e8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x564bb112e6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564bb112e720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x564bb112e798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564bb112e9b0 <col:43>
| `-NonNullAttr 0x564bb112ea08 <col:84, col:98> 1
|-FunctionDecl 0x564bb112ecc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564bb112ea58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564bb112ead8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x564bb112eb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x564bb112ed80 <line:452:22>
| `-NonNullAttr 0x564bb112edd8 <col:63, col:77> 3
|-FunctionDecl 0x564bb112f0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564bb112ee50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564bb112eed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x564bb112ef60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564bb112f1a0 <line:456:22>
| `-NonNullAttr 0x564bb112f1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x564bb112f3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x564bb112f248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564bb112f2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x564bb112f498 <line:458:22>
|-FunctionDecl 0x564bb112f868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x564bb112f560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x564bb112f700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x564bb112f918 <col:52, col:69> 1 2
|-FunctionDecl 0x564bb112fac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x564bb112f9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x564bb112fa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x564bb112fca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x564bb112fb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x564bb112fc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x564bb112fe60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x564bb112fd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x564bb112ffa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x564bb1130040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x564bb11300e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x564bb11301d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x564bb1130240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x564bb1130410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix008_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x564bb1130508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x564bb11305c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x564bb1130560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x564bb11300c0 '__pthread_unwind_buf_t'
| |   `-Record 0x564bb1130040 ''
| `-AlignedAttr 0x564bb1130618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x564bb1130690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x564bb11307f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x564bb1130858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x564bb11308c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x564bb1130928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x564bb1130b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564bb1130a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564bb1130c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564bb1130be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564bb1130e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564bb1130d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x564bb1130f18 <line:487:22>
|-RecordDecl 0x564bb1130f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x564bb1131288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x564bb11310e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x564bb1131168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x564bb1131338 <col:86>
| `-ReturnsTwiceAttr 0x564bb1131390 <col:12> Implicit
|-FunctionDecl 0x564bb11316b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564bb1131460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x564bb1131570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x564bb1131768 <line:493:22>
| `-NonNullAttr 0x564bb11317c0 <col:63, col:77> 1
|-FunctionDecl 0x564bb1131938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564bb1131808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564bb11319e0 <line:495:22>
| `-NonNullAttr 0x564bb1131a38 <col:63, col:77> 1
|-FunctionDecl 0x564bb1131b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564bb1131a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564bb1131be8 <line:497:22>
| `-NonNullAttr 0x564bb1131c40 <col:52, col:66> 1
|-FunctionDecl 0x564bb1131d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564bb1131c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564bb1131de8 <line:499:22>
| `-NonNullAttr 0x564bb1131e40 <col:52, col:66> 1
|-FunctionDecl 0x564bb1132088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564bb1131e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564bb1131f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564bb1132138 <col:36>
| `-NonNullAttr 0x564bb1132190 <col:66, col:83> 1 2
|-FunctionDecl 0x564bb1132290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564bb11321d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564bb1132338 <line:504:22>
| `-NonNullAttr 0x564bb1132390 <col:52, col:66> 1
|-FunctionDecl 0x564bb1132628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564bb1132440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564bb11324c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564bb11326d8 <line:508:22>
| `-NonNullAttr 0x564bb1132730 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb11329f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x564bb1132778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564bb11327f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x564bb1132878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x564bb1132ab0 <line:512:22>
| `-NonNullAttr 0x564bb1132b08 <col:63, col:80> 1 3
|-FunctionDecl 0x564bb1132c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564bb1132b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564bb1132cb8 <line:514:22>
| `-NonNullAttr 0x564bb1132d10 <col:63, col:77> 1
|-FunctionDecl 0x564bb1132f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564bb1132dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564bb1132fe0 <line:516:22>
| `-NonNullAttr 0x564bb1133038 <col:63, col:77> 1
|-FunctionDecl 0x564bb1133140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564bb1133088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564bb11331e8 <line:518:22>
| `-NonNullAttr 0x564bb1133240 <col:63, col:77> 1
|-FunctionDecl 0x564bb1133468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564bb1133288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564bb1133308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x564bb1133518 <line:522:22>
| `-NonNullAttr 0x564bb1133570 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb1133778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564bb11335b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564bb1133638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x564bb1133828 <line:525:22>
| `-NonNullAttr 0x564bb1133880 <col:63, col:77> 1
|-FunctionDecl 0x564bb1133a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564bb11338c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564bb1133948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x564bb1133ad8 <line:528:22>
| `-NonNullAttr 0x564bb1133b30 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb1133cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564bb1133b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564bb1133bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x564bb1133d68 <line:530:22>
| `-NonNullAttr 0x564bb1133dc0 <col:63, col:77> 1
|-FunctionDecl 0x564bb1134f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564bb1133e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564bb1134eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x564bb1135040 <line:534:22>
| `-NonNullAttr 0x564bb1135098 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb1135228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564bb11350e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564bb1135168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x564bb11352d8 <line:537:22>
| `-NonNullAttr 0x564bb1135330 <col:63, col:77> 1
|-FunctionDecl 0x564bb11354d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564bb1135378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564bb11353f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564bb1135588 <line:541:22>
| `-NonNullAttr 0x564bb11355e0 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb1135768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564bb1135628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564bb11356a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x564bb1135818 <line:544:22>
| `-NonNullAttr 0x564bb1135870 <col:63, col:77> 1
|-FunctionDecl 0x564bb1135a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x564bb11358b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x564bb1135938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x564bb1135b08 <line:547:22>
| `-NonNullAttr 0x564bb1135b60 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb1135ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564bb1135ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564bb1135c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x564bb1135d98 <line:550:22>
| `-NonNullAttr 0x564bb1135df0 <col:63, col:77> 1
|-FunctionDecl 0x564bb1137168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x564bb1136f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564bb1137020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x564bb1137218 <col:29>
| `-NonNullAttr 0x564bb1137270 <col:70, col:84> 1
|-FunctionDecl 0x564bb11373e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564bb11372b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564bb1137490 <line:555:22>
| `-NonNullAttr 0x564bb11374e8 <col:63, col:77> 1
|-FunctionDecl 0x564bb11375f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564bb1137538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564bb1137698 <line:557:22>
| `-NonNullAttr 0x564bb11376f0 <col:52, col:66> 1
|-FunctionDecl 0x564bb11377f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564bb1137738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564bb1137898 <line:559:19>
| `-NonNullAttr 0x564bb11378f0 <col:49, col:63> 1
|-FunctionDecl 0x564bb1137b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564bb1137938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564bb11379c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564bb1137bd8 <col:39>
| `-NonNullAttr 0x564bb1137c30 <col:69, col:86> 1 2
|-FunctionDecl 0x564bb1137d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564bb1137c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564bb1137dd8 <line:564:22>
| `-NonNullAttr 0x564bb1137e30 <col:52, col:66> 1
|-FunctionDecl 0x564bb1137f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564bb1137ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564bb1138040 <line:566:22>
| `-NonNullAttr 0x564bb1138098 <col:52, col:66> 1
|-FunctionDecl 0x564bb1138258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564bb11380e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564bb1138178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564bb1138308 <col:39>
| `-NonNullAttr 0x564bb1138360 <col:69, col:86> 1 2
|-FunctionDecl 0x564bb1138460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564bb11383a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564bb1138508 <line:571:22>
| `-NonNullAttr 0x564bb1138560 <col:52, col:66> 1
|-FunctionDecl 0x564bb1138748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564bb1138610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564bb11387f0 <line:573:22>
| `-NonNullAttr 0x564bb1138848 <col:63, col:77> 1
|-FunctionDecl 0x564bb1138950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564bb1138898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564bb11389f8 <line:575:22>
| `-NonNullAttr 0x564bb1138a50 <col:63, col:77> 1
|-FunctionDecl 0x564bb1138c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564bb1138a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564bb1138b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x564bb1138d28 <line:579:22>
| `-NonNullAttr 0x564bb1138d80 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb1138fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564bb1138dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564bb1138e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x564bb1139058 <line:582:22>
| `-NonNullAttr 0x564bb11390b0 <col:63, col:77> 1
|-FunctionDecl 0x564bb1139258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564bb11390f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564bb1139178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x564bb1139308 <line:586:22>
| `-NonNullAttr 0x564bb1139360 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb11394e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564bb11393a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564bb1139428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x564bb1139598 <col:36>
| `-NonNullAttr 0x564bb11395f0 <col:77, col:91> 1
|-FunctionDecl 0x564bb1139928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x564bb11396d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564bb11397e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x564bb11399d8 <line:591:22>
| `-NonNullAttr 0x564bb1139a30 <col:63, col:77> 1
|-FunctionDecl 0x564bb1139ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564bb1139a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564bb1139c50 <line:593:22>
| `-NonNullAttr 0x564bb1139ca8 <col:63, col:77> 1
|-FunctionDecl 0x564bb1139db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564bb1139cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564bb1139e58 <line:595:22>
| `-NonNullAttr 0x564bb1139eb0 <col:52, col:66> 1
|-FunctionDecl 0x564bb1139fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564bb1139f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564bb113a070 <line:597:22>
| `-NonNullAttr 0x564bb113a0c8 <col:52, col:66> 1
|-FunctionDecl 0x564bb113a2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x564bb113a118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564bb113a190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x564bb113a3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x564bb113a6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564bb113a428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564bb113a4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564bb113a530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x564bb113a790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x564bb113a9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564bb113a870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564bb113aa50 <line:606:22>
| `-NonNullAttr 0x564bb113aaa8 <col:63, col:77> 1
|-FunctionDecl 0x564bb113abb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564bb113aaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564bb113ac58 <line:608:22>
| `-NonNullAttr 0x564bb113acb0 <col:63, col:77> 1
|-FunctionDecl 0x564bb113af10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564bb113acf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564bb113ad78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x564bb113afc0 <line:612:22>
| `-NonNullAttr 0x564bb113b018 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb113b228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x564bb113b068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564bb113b0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x564bb113b2d8 <col:37>
| `-NonNullAttr 0x564bb113b330 <col:78, col:92> 1
|-FunctionDecl 0x564bb113b548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x564bb113b378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564bb113b420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x564bb113b5f8 <line:618:22>
| `-NonNullAttr 0x564bb113b650 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb113b818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x564bb113b698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564bb113b710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x564bb113b8c8 <line:621:22>
| `-NonNullAttr 0x564bb113b920 <col:63, col:77> 1
|-FunctionDecl 0x564bb113bbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x564bb113ba00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x564bb113ba80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x564bb113bc78 <line:623:22>
| `-NonNullAttr 0x564bb113bcd0 <col:63, col:77> 1
|-FunctionDecl 0x564bb113be48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564bb113bd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564bb113bf20 <line:625:22>
| `-NonNullAttr 0x564bb113bf78 <col:63, col:77> 1
|-FunctionDecl 0x564bb113c080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564bb113bfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564bb113c128 <line:627:22>
| `-NonNullAttr 0x564bb113c180 <col:52, col:66> 1
|-FunctionDecl 0x564bb113c280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564bb113c1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564bb113c328 <line:629:22>
| `-NonNullAttr 0x564bb113c380 <col:52, col:66> 1
|-FunctionDecl 0x564bb113c480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564bb113c3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564bb113c528 <line:631:22>
| `-NonNullAttr 0x564bb113c580 <col:52, col:66> 1
|-FunctionDecl 0x564bb113c958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x564bb113c660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x564bb113c770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564bb113c7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x564bb113ca10 <line:635:22>
| `-NonNullAttr 0x564bb113ca68 <col:63, col:77> 1
|-FunctionDecl 0x564bb113cbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564bb113cab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564bb113cc90 <line:637:22>
| `-NonNullAttr 0x564bb113cce8 <col:63, col:77> 1
|-FunctionDecl 0x564bb113cdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564bb113cd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564bb113ce98 <line:639:22>
| `-NonNullAttr 0x564bb113cef0 <col:52, col:66> 1
|-FunctionDecl 0x564bb113d0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564bb113cfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564bb113d190 <line:641:22>
| `-NonNullAttr 0x564bb113d1e8 <col:63, col:77> 1
|-FunctionDecl 0x564bb113d2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564bb113d238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564bb113d398 <line:643:22>
| `-NonNullAttr 0x564bb113d3f0 <col:63, col:77> 1
|-FunctionDecl 0x564bb113d618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564bb113d438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564bb113d4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x564bb113d6c8 <line:647:22>
| `-NonNullAttr 0x564bb113d720 <col:63, col:80> 1 2
|-FunctionDecl 0x564bb113d928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x564bb113d768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x564bb113d7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x564bb113d9d8 <line:650:22>
| `-NonNullAttr 0x564bb113da30 <col:63, col:77> 1
|-FunctionDecl 0x564bb113dd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x564bb113db10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x564bb113dc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x564bb113de28 <line:653:22>
| `-NonNullAttr 0x564bb113de80 <col:63, col:77> 1
|-FunctionDecl 0x564bb113dfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x564bb113dec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564bb113e090 <col:69>
|-FunctionDecl 0x564bb113e208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x564bb113e0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564bb113e2b0 <col:72>
|-FunctionDecl 0x564bb113e4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x564bb113e318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x564bb113e3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x564bb113e598 <col:44>
|-FunctionDecl 0x564bb113e7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x564bb113e600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564bb113e678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x564bb113e868 <line:660:22>
| `-NonNullAttr 0x564bb113e8c0 <col:63, col:77> 2
|-FunctionDecl 0x564bb113ed08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x564bb113e9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x564bb113eab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x564bb113ebc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x564bb113edc0 <col:47>
|-FunctionDecl 0x564bb113ff60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x564bb113ee30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564bb11400b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x564bb1140020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564bb1140210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x564bb1140178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564bb1140368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x564bb11402d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564bb1140430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x564bb11404f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x564bb11405b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x564bb1140668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x564bb11406e8 prev 0x564bb1140668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x564bb1140750 <col:24> 'int' 0
|-VarDecl 0x564bb1140788 <line:674:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x564bb1140808 prev 0x564bb1140788 <line:675:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x564bb1140870 <col:27> 'int' 0
|-VarDecl 0x564bb11408a8 <line:676:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x564bb1140928 prev 0x564bb11408a8 <line:677:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x564bb1140990 <col:27> 'int' 0
|-VarDecl 0x564bb11409c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x564bb1140a48 prev 0x564bb11409c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x564bb1140ab0 <col:27> 'int' 0
|-VarDecl 0x564bb1140ae8 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x564bb1140b68 prev 0x564bb1140ae8 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x564bb1140bd0 <col:27> 'int' 0
|-VarDecl 0x564bb1140c08 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x564bb1140c88 prev 0x564bb1140c08 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x564bb1140cf0 <col:9> 'int' 0
|-VarDecl 0x564bb1140d20 <line:684:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x564bb1140da0 <line:685:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x564bb1140e18 <line:686:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x564bb1140e90 <line:687:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x564bb1140f70 <line:688:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x564bb1140fe8 <line:689:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x564bb1141060 <line:690:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x564bb11410d8 <line:691:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x564bb1141150 <line:692:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x564bb11411c8 <line:693:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x564bb1141240 <line:694:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x564bb11412b8 <line:695:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x564bb1141330 <line:696:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x564bb11413b0 <line:697:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x564bb1141430 <line:698:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x564bb11414a8 <line:699:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x564bb1141528 <line:700:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x564bb11415a0 <line:701:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x564bb1141618 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x564bb1141690 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x564bb1141710 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x564bb1141790 prev 0x564bb1141710 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x564bb11417f8 <col:9> 'int' 0
|-VarDecl 0x564bb1141830 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x564bb11418b0 prev 0x564bb1141830 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x564bb1141918 <col:9> 'int' 0
|-VarDecl 0x564bb1141950 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x564bb11419d0 prev 0x564bb1141950 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x564bb1141a38 <col:9> 'int' 0
|-VarDecl 0x564bb1141a68 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x564bb1141ae0 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x564bb1141bf8 prev 0x564bb113ff60 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x564bb1141b60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564bb1143498 <line:713:1, line:741:1>
|   |-CallExpr 0x564bb1141d08 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb1141cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1141ca0 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb1141d80 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564bb1141d28 <col:3> 'int' lvalue Var 0x564bb1141528 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x564bb1141d68 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564bb1141d48 <col:15> 'int' lvalue Var 0x564bb1141430 'a$w_buff0' 'int'
|   |-BinaryOperator 0x564bb1141de0 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564bb1141da0 <col:3> 'int' lvalue Var 0x564bb1141430 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x564bb1141dc0 <col:15> 'int' 1
|   |-BinaryOperator 0x564bb1141e58 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1141e00 <col:3> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1141e40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564bb1141e20 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564bb1141ef0 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1141e78 <col:3> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x564bb1141ec8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564bb1141e98 <col:27> 'int' 1
|   |-CallExpr 0x564bb1142088 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x564bb1142070 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x564bb1141f10 <col:3> 'void (int)' Function 0x564bb10e70d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x564bb1142020 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x564bb1142000 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x564bb1141fe0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x564bb1141f98 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x564bb1141f80 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x564bb1141f30 <col:23> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x564bb1141fc8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x564bb1141fb0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x564bb1141f50 <col:41> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564bb1142108 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564bb11420b0 <col:3> '_Bool' lvalue Var 0x564bb11410d8 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x564bb11420f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564bb11420d0 <col:20> '_Bool' lvalue Var 0x564bb1140e18 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x564bb1142180 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1142128 <col:3> '_Bool' lvalue Var 0x564bb1141150 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1142168 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564bb1142148 <col:20> '_Bool' lvalue Var 0x564bb1140e90 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564bb11421f8 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564bb11421a0 <col:3> '_Bool' lvalue Var 0x564bb11411c8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564bb11421e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564bb11421c0 <col:20> '_Bool' lvalue Var 0x564bb1140f70 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564bb1142270 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1142218 <col:3> '_Bool' lvalue Var 0x564bb1141240 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1142258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564bb1142238 <col:20> '_Bool' lvalue Var 0x564bb1140fe8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564bb11422e8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1142290 <col:3> '_Bool' lvalue Var 0x564bb11412b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x564bb11422d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564bb11422b0 <col:20> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x564bb1142380 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1142308 <col:3> '_Bool' lvalue Var 0x564bb1140e90 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x564bb1142358 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564bb1142328 <col:27> 'int' 1
|   |-CallExpr 0x564bb11423d8 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb11423c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb11423a0 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564bb1142430 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb1142418 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb11423f8 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb1142490 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564bb1142450 <col:3> 'int' lvalue Var 0x564bb1141790 'x' 'int'
|   | `-IntegerLiteral 0x564bb1142470 <col:7> 'int' 1
|   |-CallExpr 0x564bb11424e8 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb11424d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb11424b0 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564bb1142540 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb1142528 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1142508 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb1142828 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564bb1142560 <col:3> 'int' lvalue Var 0x564bb1140c88 'a' 'int'
|   | `-ConditionalOperator 0x564bb11427f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564bb1142620 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564bb11425d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564bb11425c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564bb1142580 <col:7> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564bb1142608 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564bb11425f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564bb11425a0 <col:25> '_Bool' lvalue Var 0x564bb1140e90 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x564bb11427e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564bb1142640 <col:42> 'int' lvalue Var 0x564bb1141430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564bb11427c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564bb1142790 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564bb1142700 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564bb11426b8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564bb11426a0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564bb1142660 <col:55> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564bb11426e8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564bb11426d0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564bb1142680 <col:73> '_Bool' lvalue Var 0x564bb1141150 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x564bb1142760 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564bb1142720 <col:90> 'int' lvalue Var 0x564bb1141528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564bb1142778 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1142740 <col:102> 'int' lvalue Var 0x564bb1140c88 'a' 'int'
|   |-BinaryOperator 0x564bb1142a30 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1142848 <col:3> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1142a18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb11429e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564bb1142908 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564bb11428c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564bb11428a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564bb1142868 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564bb11428f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564bb11428d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564bb1142888 <col:38> '_Bool' lvalue Var 0x564bb1140e90 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb11429a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564bb1142958 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564bb1142928 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564bb11429d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564bb11429b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1142980 <col:66> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564bb1142d18 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1142a50 <col:3> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1142d00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb1142cd0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564bb1142bf0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564bb1142b10 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564bb1142ac8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564bb1142ab0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564bb1142a70 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564bb1142af8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564bb1142ae0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564bb1142a90 <col:38> '_Bool' lvalue Var 0x564bb1140e90 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564bb1142bd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564bb1142b88 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564bb1142b70 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564bb1142b30 <col:56> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564bb1142bb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564bb1142ba0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564bb1142b50 <col:74> '_Bool' lvalue Var 0x564bb1141150 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb1142c88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564bb1142c40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564bb1142c10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564bb1142cb8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564bb1142ca0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1142c68 <col:102> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564bb1142f20 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1142d38 <col:3> '_Bool' lvalue Var 0x564bb1140e90 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1142f08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb1142ed8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564bb1142df8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564bb1142db0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564bb1142d98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564bb1142d58 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564bb1142de0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564bb1142dc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564bb1142d78 <col:38> '_Bool' lvalue Var 0x564bb1140e90 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb1142e90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564bb1142e48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564bb1142e18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564bb1142ec0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564bb1142ea8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1142e70 <col:66> '_Bool' lvalue Var 0x564bb1140e90 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564bb1143218 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1142f40 <col:3> '_Bool' lvalue Var 0x564bb1141150 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1143200 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb11431d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564bb11430f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564bb1143010 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564bb1142fc8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564bb1142fb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564bb1142f60 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564bb1142ff8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564bb1142fe0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564bb1142f90 <col:38> '_Bool' lvalue Var 0x564bb1140e90 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564bb11430d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564bb1143088 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564bb1143070 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564bb1143030 <col:56> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564bb11430b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564bb11430a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564bb1143050 <col:74> '_Bool' lvalue Var 0x564bb1141150 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb1143188 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564bb1143140 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564bb1143110 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564bb11431b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564bb11431a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1143168 <col:102> '_Bool' lvalue Var 0x564bb1141150 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x564bb1143270 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb1143258 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1143238 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564bb11432c8 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb11432b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1143290 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb1143380 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564bb11432e8 <col:3> 'int' lvalue Var 0x564bb11406e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564bb1143360 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564bb1143348 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564bb1143308 <col:22> 'int' lvalue Var 0x564bb11406e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564bb1143328 <col:41> 'int' 1
|   |-CallExpr 0x564bb11433d8 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb11433c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb11433a0 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564bb1143488 <line:740:3, col:36>
|     `-CallExpr 0x564bb1143468 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564bb1143450 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564bb11433f8 <col:10> 'void *(void)' Function 0x564bb10e6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564bb1143630 prev 0x564bb11400b8 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x564bb1143598 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564bb1144850 <line:743:1, line:761:1>
|   |-CallExpr 0x564bb1143710 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb11436f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb11436d8 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb1143770 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564bb1143730 <col:3> 'int' lvalue Var 0x564bb1141790 'x' 'int'
|   | `-IntegerLiteral 0x564bb1143750 <col:7> 'int' 2
|   |-CallExpr 0x564bb11437c8 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb11437b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1143790 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564bb1143820 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb1143808 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb11437e8 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb1143880 <line:748:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564bb1143840 <col:3> 'int' lvalue Var 0x564bb11418b0 'y' 'int'
|   | `-IntegerLiteral 0x564bb1143860 <col:7> 'int' 1
|   |-CallExpr 0x564bb11438d8 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb11438c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb11438a0 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564bb1143930 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb1143918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb11438f8 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb1143c18 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564bb1143950 <col:3> 'int' lvalue Var 0x564bb1140c88 'a' 'int'
|   | `-ConditionalOperator 0x564bb1143be8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564bb1143a10 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564bb11439c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564bb11439b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564bb1143970 <col:7> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564bb11439f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564bb11439e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564bb1143990 <col:25> '_Bool' lvalue Var 0x564bb1140f70 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564bb1143bd0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564bb1143a30 <col:42> 'int' lvalue Var 0x564bb1141430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564bb1143bb0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564bb1143b80 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564bb1143af0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564bb1143aa8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564bb1143a90 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564bb1143a50 <col:55> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564bb1143ad8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564bb1143ac0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564bb1143a70 <col:73> '_Bool' lvalue Var 0x564bb11411c8 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564bb1143b50 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564bb1143b10 <col:90> 'int' lvalue Var 0x564bb1141528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564bb1143b68 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1143b30 <col:102> 'int' lvalue Var 0x564bb1140c88 'a' 'int'
|   |-BinaryOperator 0x564bb1143e20 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1143c38 <col:3> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1143e08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb1143dd8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564bb1143cf8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564bb1143cb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564bb1143c98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564bb1143c58 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564bb1143ce0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564bb1143cc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564bb1143c78 <col:38> '_Bool' lvalue Var 0x564bb1140f70 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb1143d90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564bb1143d48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564bb1143d18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564bb1143dc0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564bb1143da8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1143d70 <col:66> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564bb1144118 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1143e40 <col:3> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1144100 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb11440d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564bb1143ff0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564bb1143f00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564bb1143eb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564bb1143ea0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564bb1143e60 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564bb1143ee8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564bb1143ed0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564bb1143e80 <col:38> '_Bool' lvalue Var 0x564bb1140f70 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564bb1143fd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564bb1143f78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564bb1143f60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564bb1143f20 <col:56> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564bb1143fb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564bb1143fa0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564bb1143f40 <col:74> '_Bool' lvalue Var 0x564bb11411c8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb1144088 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564bb1144040 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564bb1144010 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564bb11440b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564bb11440a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1144068 <col:102> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564bb1144320 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1144138 <col:3> '_Bool' lvalue Var 0x564bb1140f70 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1144308 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb11442d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564bb11441f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564bb11441b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564bb1144198 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564bb1144158 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564bb11441e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564bb11441c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564bb1144178 <col:38> '_Bool' lvalue Var 0x564bb1140f70 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb1144290 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564bb1144248 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564bb1144218 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564bb11442c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564bb11442a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1144270 <col:66> '_Bool' lvalue Var 0x564bb1140f70 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564bb1144608 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1144340 <col:3> '_Bool' lvalue Var 0x564bb11411c8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564bb11445f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb11445c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564bb11444e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564bb1144400 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564bb11443b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564bb11443a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564bb1144360 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564bb11443e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564bb11443d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564bb1144380 <col:38> '_Bool' lvalue Var 0x564bb1140f70 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564bb11444c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564bb1144478 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564bb1144460 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564bb1144420 <col:56> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564bb11444a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564bb1144490 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564bb1144440 <col:74> '_Bool' lvalue Var 0x564bb11411c8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb1144578 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564bb1144530 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564bb1144500 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564bb11445a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564bb1144590 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1144558 <col:102> '_Bool' lvalue Var 0x564bb11411c8 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x564bb1144660 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb1144648 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1144628 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564bb11446b8 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb11446a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1144680 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb1144770 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564bb11446d8 <col:3> 'int' lvalue Var 0x564bb11406e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564bb1144750 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564bb1144738 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564bb11446f8 <col:22> 'int' lvalue Var 0x564bb11406e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564bb1144718 <col:41> 'int' 1
|   |-CallExpr 0x564bb11447c8 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb11447b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1144790 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564bb1144840 <line:760:3, col:36>
|     `-CallExpr 0x564bb1144820 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564bb1144808 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564bb11447e8 <col:10> 'void *(void)' Function 0x564bb10e6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564bb1144998 prev 0x564bb1140210 <line:762:1, line:784:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x564bb1144900 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564bb1145d00 <line:763:1, line:784:1>
|   |-CallExpr 0x564bb1144a78 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb1144a60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1144a40 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb1144ad8 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564bb1144a98 <col:3> 'int' lvalue Var 0x564bb11418b0 'y' 'int'
|   | `-IntegerLiteral 0x564bb1144ab8 <col:7> 'int' 2
|   |-CallExpr 0x564bb1144b30 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb1144b18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1144af8 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564bb1144b88 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb1144b70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1144b50 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb1144c00 <line:768:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564bb1144ba8 <col:3> 'int' lvalue Var 0x564bb1140808 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x564bb1144be8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564bb1144bc8 <col:25> 'int' lvalue Var 0x564bb11418b0 'y' 'int'
|   |-CallExpr 0x564bb1144c58 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb1144c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1144c20 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564bb1144cb0 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb1144c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1144c78 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb1144d28 <line:771:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564bb1144cd0 <col:3> 'int' lvalue Var 0x564bb1140928 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x564bb1144d10 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564bb1144cf0 <col:25> 'int' lvalue Var 0x564bb11419d0 'z' 'int'
|   |-CallExpr 0x564bb1144d80 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb1144d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1144d48 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564bb1144dd8 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb1144dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1144da0 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb11450d8 <line:774:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564bb1144df8 <col:3> 'int' lvalue Var 0x564bb1140c88 'a' 'int'
|   | `-ConditionalOperator 0x564bb11450a8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564bb1144eb8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564bb1144e70 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564bb1144e58 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564bb1144e18 <col:7> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564bb1144ea0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564bb1144e88 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564bb1144e38 <col:25> '_Bool' lvalue Var 0x564bb1140fe8 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x564bb1145090 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564bb1144ed8 <col:42> 'int' lvalue Var 0x564bb1141430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564bb1145070 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564bb1145040 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564bb1144fb0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564bb1144f50 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564bb1144f38 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564bb1144ef8 <col:55> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564bb1144f80 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564bb1144f68 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564bb1144f18 <col:73> '_Bool' lvalue Var 0x564bb1141240 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564bb1145010 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564bb1144fd0 <col:90> 'int' lvalue Var 0x564bb1141528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564bb1145028 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1144ff0 <col:102> 'int' lvalue Var 0x564bb1140c88 'a' 'int'
|   |-BinaryOperator 0x564bb11452e0 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564bb11450f8 <col:3> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564bb11452c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb1145298 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564bb11451b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564bb1145170 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564bb1145158 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564bb1145118 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564bb11451a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564bb1145188 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564bb1145138 <col:38> '_Bool' lvalue Var 0x564bb1140fe8 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb1145250 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564bb1145208 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564bb11451d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564bb1145280 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564bb1145268 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1145230 <col:66> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564bb11455c8 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1145300 <col:3> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564bb11455b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb1145580 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564bb11454a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564bb11453c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564bb1145378 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564bb1145360 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564bb1145320 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564bb11453a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564bb1145390 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564bb1145340 <col:38> '_Bool' lvalue Var 0x564bb1140fe8 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564bb1145480 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564bb1145438 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564bb1145420 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564bb11453e0 <col:56> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564bb1145468 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564bb1145450 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564bb1145400 <col:74> '_Bool' lvalue Var 0x564bb1141240 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb1145538 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564bb11454f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564bb11454c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564bb1145568 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564bb1145550 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1145518 <col:102> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564bb11457d0 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564bb11455e8 <col:3> '_Bool' lvalue Var 0x564bb1140fe8 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564bb11457b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb1145788 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564bb11456a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564bb1145660 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564bb1145648 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564bb1145608 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564bb1145690 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564bb1145678 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564bb1145628 <col:38> '_Bool' lvalue Var 0x564bb1140fe8 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb1145740 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564bb11456f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564bb11456c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564bb1145770 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564bb1145758 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1145720 <col:66> '_Bool' lvalue Var 0x564bb1140fe8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564bb1145ab8 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564bb11457f0 <col:3> '_Bool' lvalue Var 0x564bb1141240 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1145aa0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb1145a70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564bb1145990 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564bb11458b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564bb1145868 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564bb1145850 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564bb1145810 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564bb1145898 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564bb1145880 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564bb1145830 <col:38> '_Bool' lvalue Var 0x564bb1140fe8 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564bb1145970 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564bb1145928 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564bb1145910 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564bb11458d0 <col:56> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564bb1145958 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564bb1145940 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564bb11458f0 <col:74> '_Bool' lvalue Var 0x564bb1141240 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb1145a28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564bb11459e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564bb11459b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564bb1145a58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564bb1145a40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1145a08 <col:102> '_Bool' lvalue Var 0x564bb1141240 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x564bb1145b10 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb1145af8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1145ad8 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564bb1145b68 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb1145b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1145b30 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb1145c20 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564bb1145b88 <col:3> 'int' lvalue Var 0x564bb11406e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564bb1145c00 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564bb1145be8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564bb1145ba8 <col:22> 'int' lvalue Var 0x564bb11406e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564bb1145bc8 <col:41> 'int' 1
|   |-CallExpr 0x564bb1145c78 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb1145c60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1145c40 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564bb1145cf0 <line:783:3, col:36>
|     `-CallExpr 0x564bb1145cd0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564bb1145cb8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564bb1145c98 <col:10> 'void *(void)' Function 0x564bb10e6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564bb1145e60 prev 0x564bb1140368 <line:785:1, line:820:1> line:785:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x564bb1145dc8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564bb1149b68 <line:786:1, line:820:1>
|   |-CallExpr 0x564bb1145f40 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb1145f28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1145f08 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb1145fc0 <line:788:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564bb1145f60 <col:3> 'int' lvalue Var 0x564bb11419d0 'z' 'int'
|   | `-IntegerLiteral 0x564bb1145f80 <col:7> 'int' 1
|   |-CallExpr 0x564bb1146018 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb1146000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1145fe0 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564bb1146070 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb1146058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1146038 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb11460e8 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564bb1146090 <col:3> 'int' lvalue Var 0x564bb1140a48 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x564bb11460d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564bb11460b0 <col:25> 'int' lvalue Var 0x564bb11419d0 'z' 'int'
|   |-CallExpr 0x564bb1146140 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb1146128 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1146108 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564bb1146198 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb1146180 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1146160 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb1146248 <line:794:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564bb11461b8 <col:3> '_Bool' lvalue Var 0x564bb1141a68 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1146230 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564bb1146210 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564bb11461f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564bb11461d8 <col:19> 'void *(void)' Function 0x564bb10e6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564bb11462f8 <line:795:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1146268 <col:3> '_Bool' lvalue Var 0x564bb1141ae0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x564bb11462e0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564bb11462c0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564bb11462a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564bb1146288 <col:19> 'void *(void)' Function 0x564bb10e6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564bb1146370 <line:796:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1146318 <col:3> '_Bool' lvalue Var 0x564bb1140d20 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1146358 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564bb1146338 <col:21> '_Bool' lvalue Var 0x564bb1141ae0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x564bb11463e8 <line:797:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564bb1146390 <col:3> 'int' lvalue Var 0x564bb1140da0 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x564bb11463d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564bb11463b0 <col:15> 'int' lvalue Var 0x564bb1140c88 'a' 'int'
|   |-BinaryOperator 0x564bb1146820 <line:798:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x564bb1146408 <col:3> 'int' lvalue Var 0x564bb1140c88 'a' 'int'
|   | `-ConditionalOperator 0x564bb11467f0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x564bb1146618 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x564bb1146538 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x564bb1146460 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x564bb1146448 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x564bb1146428 <col:8> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x564bb1146518 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x564bb11464b0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x564bb1146498 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x564bb1146478 <col:27> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x564bb1146500 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x564bb11464e8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x564bb11464c8 <col:46> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x564bb11465f8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x564bb1146590 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x564bb1146578 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x564bb1146558 <col:65> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x564bb11465e0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x564bb11465c8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x564bb11465a8 <col:84> '_Bool' lvalue Var 0x564bb11412b8 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x564bb11467d8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564bb1146638 <col:101> 'int' lvalue Var 0x564bb1140c88 'a' 'int'
|   |   `-ParenExpr 0x564bb11467b8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x564bb1146788 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x564bb11466f8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564bb11466b0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564bb1146698 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564bb1146658 <col:106> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564bb11466e0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564bb11466c8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564bb1146678 <col:124> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x564bb1146758 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564bb1146718 <col:141> 'int' lvalue Var 0x564bb1141430 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x564bb1146770 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1146738 <col:153> 'int' lvalue Var 0x564bb1141528 'a$w_buff1' 'int'
|   |-BinaryOperator 0x564bb1146d30 <line:799:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564bb1146840 <col:3> 'int' lvalue Var 0x564bb1141430 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x564bb1146d00 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564bb1146cd0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564bb1146cb8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564bb1146860 <col:15> '_Bool' lvalue Var 0x564bb1141ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564bb1146ce8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564bb1146880 <col:31> 'int' lvalue Var 0x564bb1141430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564bb1146c98 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564bb1146c68 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564bb1146a90 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564bb11469b0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564bb11468d8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564bb11468c0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564bb11468a0 <col:45> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564bb1146990 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564bb1146928 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564bb1146910 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564bb11468f0 <col:64> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x564bb1146978 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564bb1146960 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564bb1146940 <col:83> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564bb1146a70 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564bb1146a08 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564bb11469f0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564bb11469d0 <col:102> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x564bb1146a58 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564bb1146a40 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564bb1146a20 <col:121> '_Bool' lvalue Var 0x564bb11412b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x564bb1146c50 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564bb1146ab0 <col:138> 'int' lvalue Var 0x564bb1141430 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x564bb1146c30 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564bb1146c00 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564bb1146b70 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564bb1146b28 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564bb1146b10 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564bb1146ad0 <col:151> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564bb1146b58 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564bb1146b40 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564bb1146af0 <col:169> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x564bb1146bd0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564bb1146b90 <col:186> 'int' lvalue Var 0x564bb1141430 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x564bb1146be8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564bb1146bb0 <col:198> 'int' lvalue Var 0x564bb1141430 'a$w_buff0' 'int'
|   |-BinaryOperator 0x564bb1147250 <line:800:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564bb1146d50 <col:3> 'int' lvalue Var 0x564bb1141528 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x564bb1147220 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564bb11471f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564bb11471d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564bb1146d70 <col:15> '_Bool' lvalue Var 0x564bb1141ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564bb1147208 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564bb1146d90 <col:31> 'int' lvalue Var 0x564bb1141528 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x564bb11471b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564bb1147188 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564bb1146fa0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564bb1146ec0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564bb1146de8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564bb1146dd0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564bb1146db0 <col:45> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564bb1146ea0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564bb1146e38 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564bb1146e20 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564bb1146e00 <col:64> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x564bb1146e88 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564bb1146e70 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564bb1146e50 <col:83> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564bb1146f80 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564bb1146f18 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564bb1146f00 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564bb1146ee0 <col:102> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x564bb1146f68 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564bb1146f50 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564bb1146f30 <col:121> '_Bool' lvalue Var 0x564bb11412b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x564bb1147170 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564bb1146fd0 <col:138> 'int' lvalue Var 0x564bb1141528 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x564bb1147150 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564bb1147120 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564bb1147090 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564bb1147048 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564bb1147030 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564bb1146ff0 <col:151> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564bb1147078 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564bb1147060 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564bb1147010 <col:169> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x564bb11470f0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564bb11470b0 <col:186> 'int' lvalue Var 0x564bb1141528 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x564bb1147108 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564bb11470d0 <col:198> 'int' lvalue Var 0x564bb1141528 'a$w_buff1' 'int'
|   |-BinaryOperator 0x564bb11477f8 <line:801:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1147270 <col:3> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564bb11477e0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb11477b0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564bb1147768 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564bb1147750 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564bb1147290 <col:20> '_Bool' lvalue Var 0x564bb1141ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb1147798 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564bb1147780 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564bb11472b0 <col:36> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x564bb1147730 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564bb1147700 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564bb11474c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564bb11473e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564bb1147308 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564bb11472f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564bb11472d0 <col:55> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564bb11473c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564bb1147358 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564bb1147340 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564bb1147320 <col:74> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x564bb11473a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564bb1147390 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564bb1147370 <col:93> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564bb11474a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564bb1147438 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564bb1147420 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564bb1147400 <col:112> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x564bb1147488 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564bb1147470 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564bb1147450 <col:131> '_Bool' lvalue Var 0x564bb11412b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x564bb11476e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564bb11476d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564bb11474e0 <col:148> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x564bb11476b0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564bb1147680 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564bb11475a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564bb1147558 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564bb1147540 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564bb1147500 <col:166> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564bb1147588 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564bb1147570 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564bb1147520 <col:184> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x564bb1147638 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564bb11475f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564bb11475c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564bb1147668 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564bb1147650 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564bb1147618 <col:212> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564bb1147dc0 <line:802:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1147818 <col:3> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1147da8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb1147d78 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564bb1147d30 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564bb1147d18 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564bb1147838 <col:20> '_Bool' lvalue Var 0x564bb1141ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb1147d60 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564bb1147d48 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564bb1147858 <col:36> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x564bb1147cf8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564bb1147cc8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564bb1147a68 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564bb1147988 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564bb11478b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564bb1147898 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564bb1147878 <col:55> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564bb1147968 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564bb1147900 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564bb11478e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564bb11478c8 <col:74> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x564bb1147950 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564bb1147938 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564bb1147918 <col:93> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564bb1147a48 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564bb11479e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564bb11479c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564bb11479a8 <col:112> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x564bb1147a30 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564bb1147a18 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564bb11479f8 <col:131> '_Bool' lvalue Var 0x564bb11412b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x564bb1147cb0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564bb1147c98 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564bb1147a88 <col:148> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x564bb1147c78 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564bb1147c48 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564bb1147b48 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564bb1147b00 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564bb1147ae8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564bb1147aa8 <col:166> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564bb1147b30 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564bb1147b18 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564bb1147ac8 <col:184> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x564bb1147c18 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564bb1147b98 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564bb1147b68 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564bb1147c30 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564bb1147bf0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564bb1147bc0 <col:219> 'int' 0
|   |-BinaryOperator 0x564bb1148388 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1147de0 <col:3> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1148370 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb1148340 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564bb11482f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564bb11482e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564bb1147e00 <col:20> '_Bool' lvalue Var 0x564bb1141ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb1148328 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564bb1148310 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564bb1147e20 <col:36> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x564bb11482c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564bb1148290 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564bb1148050 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564bb1147f50 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564bb1147e78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564bb1147e60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564bb1147e40 <col:55> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564bb1147f30 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564bb1147ec8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564bb1147eb0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564bb1147e90 <col:74> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x564bb1147f18 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564bb1147f00 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564bb1147ee0 <col:93> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564bb1148030 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564bb1147fa8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564bb1147f90 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564bb1147f70 <col:112> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x564bb1148018 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564bb1148000 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564bb1147fe0 <col:131> '_Bool' lvalue Var 0x564bb11412b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x564bb1148278 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564bb1148260 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564bb1148070 <col:148> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x564bb1148240 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564bb1148210 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564bb1148130 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564bb11480e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564bb11480d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564bb1148090 <col:166> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564bb1148118 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564bb1148100 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564bb11480b0 <col:184> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x564bb11481c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564bb1148180 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564bb1148150 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564bb11481f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564bb11481e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564bb11481a8 <col:212> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x564bb1148950 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564bb11483a8 <col:3> '_Bool' lvalue Var 0x564bb11412b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1148938 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb1148908 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564bb11488c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564bb11488a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564bb11483c8 <col:20> '_Bool' lvalue Var 0x564bb1141ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb11488f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564bb11488d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564bb11483e8 <col:36> '_Bool' lvalue Var 0x564bb11412b8 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x564bb1148888 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564bb1148858 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564bb11485f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564bb1148518 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564bb1148440 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564bb1148428 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564bb1148408 <col:55> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564bb11484f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564bb1148490 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564bb1148478 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564bb1148458 <col:74> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x564bb11484e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564bb11484c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564bb11484a8 <col:93> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564bb11485d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564bb1148570 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564bb1148558 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564bb1148538 <col:112> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x564bb11485c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564bb11485a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564bb1148588 <col:131> '_Bool' lvalue Var 0x564bb11412b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x564bb1148840 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564bb1148828 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564bb1148618 <col:148> '_Bool' lvalue Var 0x564bb11412b8 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x564bb1148808 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564bb11487d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564bb11486d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564bb1148690 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564bb1148678 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564bb1148638 <col:166> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564bb11486c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564bb11486a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564bb1148658 <col:184> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x564bb11487a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564bb1148728 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564bb11486f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564bb11487c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564bb1148780 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564bb1148750 <col:219> 'int' 0
|   |-BinaryOperator 0x564bb11489c8 <line:805:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564bb1148970 <col:3> 'int' lvalue Var 0x564bb1140b68 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x564bb11489b0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564bb1148990 <col:25> 'int' lvalue Var 0x564bb1140c88 'a' 'int'
|   |-BinaryOperator 0x564bb1148af8 <line:806:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x564bb11489e8 <col:3> 'int' lvalue Var 0x564bb1140c88 'a' 'int'
|   | `-ConditionalOperator 0x564bb1148ac8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x564bb1148a80 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564bb1148a68 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564bb1148a08 <col:7> '_Bool' lvalue Var 0x564bb1140d20 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x564bb1148a98 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564bb1148a28 <col:25> 'int' lvalue Var 0x564bb1140da0 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x564bb1148ab0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x564bb1148a48 <col:37> 'int' lvalue Var 0x564bb1140c88 'a' 'int'
|   |-BinaryOperator 0x564bb1148b90 <line:807:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1148b18 <col:3> '_Bool' lvalue Var 0x564bb1140d20 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x564bb1148b68 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564bb1148b38 <col:28> 'int' 0
|   |-CallExpr 0x564bb1148be8 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb1148bd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1148bb0 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564bb1148c40 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb1148c28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1148c08 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb1148f28 <line:810:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564bb1148c60 <col:3> 'int' lvalue Var 0x564bb1140c88 'a' 'int'
|   | `-ConditionalOperator 0x564bb1148ef8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564bb1148d20 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564bb1148cd8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564bb1148cc0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564bb1148c80 <col:7> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564bb1148d08 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564bb1148cf0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564bb1148ca0 <col:25> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x564bb1148ee0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564bb1148d40 <col:42> 'int' lvalue Var 0x564bb1141430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564bb1148ec0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564bb1148e90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564bb1148e00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564bb1148db8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564bb1148da0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564bb1148d60 <col:55> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564bb1148de8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564bb1148dd0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564bb1148d80 <col:73> '_Bool' lvalue Var 0x564bb11412b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x564bb1148e60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564bb1148e20 <col:90> 'int' lvalue Var 0x564bb1141528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564bb1148e78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1148e40 <col:102> 'int' lvalue Var 0x564bb1140c88 'a' 'int'
|   |-BinaryOperator 0x564bb1149148 <line:811:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1148f48 <col:3> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1149130 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb1149100 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564bb1149020 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564bb1148fc0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564bb1148fa8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564bb1148f68 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564bb1149008 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564bb1148ff0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564bb1148f88 <col:38> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb11490b8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564bb1149070 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564bb1149040 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564bb11490e8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564bb11490d0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1149098 <col:66> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564bb1149430 <line:812:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1149168 <col:3> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1149418 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb11493e8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564bb1149308 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564bb1149228 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564bb11491e0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564bb11491c8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564bb1149188 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564bb1149210 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564bb11491f8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564bb11491a8 <col:38> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x564bb11492e8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564bb11492a0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564bb1149288 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564bb1149248 <col:56> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564bb11492d0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564bb11492b8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564bb1149268 <col:74> '_Bool' lvalue Var 0x564bb11412b8 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb11493a0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564bb1149358 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564bb1149328 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564bb11493d0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564bb11493b8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1149380 <col:102> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564bb1149638 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1149450 <col:3> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1149620 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb11495f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564bb1149510 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564bb11494c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564bb11494b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564bb1149470 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564bb11494f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564bb11494e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564bb1149490 <col:38> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb11495a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564bb1149560 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564bb1149530 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564bb11495d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564bb11495c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1149588 <col:66> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x564bb1149920 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564bb1149658 <col:3> '_Bool' lvalue Var 0x564bb11412b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x564bb1149908 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564bb11498d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564bb11497f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564bb1149718 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564bb11496d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564bb11496b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564bb1149678 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564bb1149700 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564bb11496e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564bb1149698 <col:38> '_Bool' lvalue Var 0x564bb1141060 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x564bb11497d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564bb1149790 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564bb1149778 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564bb1149738 <col:56> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564bb11497c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564bb11497a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564bb1149758 <col:74> '_Bool' lvalue Var 0x564bb11412b8 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x564bb1149890 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564bb1149848 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564bb1149818 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564bb11498c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564bb11498a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564bb1149870 <col:102> '_Bool' lvalue Var 0x564bb11412b8 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x564bb1149978 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb1149960 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1149940 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564bb11499d0 <line:816:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564bb11499b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1149998 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564bb1149a88 <line:817:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564bb11499f0 <col:3> 'int' lvalue Var 0x564bb11406e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564bb1149a68 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564bb1149a50 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564bb1149a10 <col:22> 'int' lvalue Var 0x564bb11406e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564bb1149a30 <col:41> 'int' 1
|   |-CallExpr 0x564bb1149ae0 <line:818:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564bb1149ac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564bb1149aa8 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564bb1149b58 <line:819:3, col:36>
|     `-CallExpr 0x564bb1149b38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564bb1149b20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564bb1149b00 <col:10> 'void *(void)' Function 0x564bb10e6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564bb1149ca0 prev 0x564bb1140430 <line:821:1, line:823:1> line:821:6 fence 'void ()'
| `-CompoundStmt 0x564bb1149d40 <line:822:1, line:823:1>
|-FunctionDecl 0x564bb1149d70 prev 0x564bb11404f0 <line:824:1, line:826:1> line:824:6 isync 'void ()'
| `-CompoundStmt 0x564bb1149e10 <line:825:1, line:826:1>
|-FunctionDecl 0x564bb1149e40 prev 0x564bb11405b0 <line:827:1, line:829:1> line:827:6 lwfence 'void ()'
| `-CompoundStmt 0x564bb1149ee0 <line:828:1, line:829:1>
`-FunctionDecl 0x564bb1149f48 <line:830:1, line:856:1> line:830:5 main 'int ()'
  `-CompoundStmt 0x564bb114c020 <line:831:1, line:856:1>
    |-DeclStmt 0x564bb114a078 <line:832:3, col:17>
    | `-VarDecl 0x564bb114a010 <col:3, col:13> col:13 used t227 'pthread_t':'unsigned long'
    |-CallExpr 0x564bb114a288 <line:833:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564bb114a270 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564bb114a090 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564bb11278f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564bb114a0d0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564bb114a0b0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564bb114a010 't227' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564bb114a2c8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564bb114a148 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564bb114a120 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564bb114a0e8 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564bb114a2e0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564bb114a168 <col:38> 'void *(void *)' Function 0x564bb1141bf8 'P0' 'void *(void *)'
    | `-ParenExpr 0x564bb114a1e8 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564bb114a1c0 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564bb114a188 <col:51> 'int' 0
    |-DeclStmt 0x564bb114a370 <line:834:3, col:17>
    | `-VarDecl 0x564bb114a308 <col:3, col:13> col:13 used t228 'pthread_t':'unsigned long'
    |-CallExpr 0x564bb114a518 <line:835:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564bb114a500 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564bb114a388 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564bb11278f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564bb114a3c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564bb114a3a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564bb114a308 't228' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564bb114a558 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564bb114a440 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564bb114a418 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564bb114a3e0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564bb114a570 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564bb114a460 <col:38> 'void *(void *)' Function 0x564bb1143630 'P1' 'void *(void *)'
    | `-ParenExpr 0x564bb114a4e0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564bb114a4b8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564bb114a480 <col:51> 'int' 0
    |-DeclStmt 0x564bb114a600 <line:836:3, col:17>
    | `-VarDecl 0x564bb114a598 <col:3, col:13> col:13 used t229 'pthread_t':'unsigned long'
    |-CallExpr 0x564bb114a7a8 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564bb114a790 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564bb114a618 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564bb11278f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564bb114a658 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564bb114a638 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564bb114a598 't229' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564bb114a7e8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564bb114a6d0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564bb114a6a8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564bb114a670 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564bb114a800 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564bb114a6f0 <col:38> 'void *(void *)' Function 0x564bb1144998 'P2' 'void *(void *)'
    | `-ParenExpr 0x564bb114a770 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564bb114a748 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564bb114a710 <col:51> 'int' 0
    |-DeclStmt 0x564bb114a890 <line:838:3, col:17>
    | `-VarDecl 0x564bb114a828 <col:3, col:13> col:13 used t230 'pthread_t':'unsigned long'
    |-CallExpr 0x564bb114aa38 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564bb114aa20 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564bb114a8a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564bb11278f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564bb114a8e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564bb114a8c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564bb114a828 't230' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564bb114aa78 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564bb114a960 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564bb114a938 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564bb114a900 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564bb114aa90 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564bb114a980 <col:38> 'void *(void *)' Function 0x564bb1145e60 'P3' 'void *(void *)'
    | `-ParenExpr 0x564bb114aa00 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564bb114a9d8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564bb114a9a0 <col:51> 'int' 0
    |-CallExpr 0x564bb114aae0 <line:840:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564bb114aac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564bb114aaa8 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564bb114abb0 <line:841:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x564bb114ab00 <col:3> '_Bool' lvalue Var 0x564bb1141618 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x564bb114ab98 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x564bb114ab78 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x564bb114ab60 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x564bb114ab20 <col:21> 'int' lvalue Var 0x564bb11406e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x564bb114ab40 <col:41> 'int' 4
    |-CallExpr 0x564bb114ac08 <line:842:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564bb114abf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564bb114abd0 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564bb114ac80 <line:843:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564bb114ac68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564bb114ac28 <col:3> 'void (int)' Function 0x564bb10e6ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x564bb114acc0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564bb114aca8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564bb114ac48 <col:21> '_Bool' lvalue Var 0x564bb1141618 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x564bb114ad10 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564bb114acf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564bb114acd8 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564bb114b010 <line:845:3, col:103> 'int' '='
    | |-DeclRefExpr 0x564bb114ad30 <col:3> 'int' lvalue Var 0x564bb1140c88 'a' 'int'
    | `-ConditionalOperator 0x564bb114afc8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x564bb114adf0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x564bb114ada8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x564bb114ad90 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x564bb114ad50 <col:7> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x564bb114add8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x564bb114adc0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x564bb114ad70 <col:25> '_Bool' lvalue Var 0x564bb1140e18 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564bb114afb0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564bb114ae10 <col:42> 'int' lvalue Var 0x564bb1141430 'a$w_buff0' 'int'
    |   `-ParenExpr 0x564bb114af90 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x564bb114af60 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x564bb114aed0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564bb114ae88 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564bb114ae70 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564bb114ae30 <col:55> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564bb114aeb8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564bb114aea0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564bb114ae50 <col:73> '_Bool' lvalue Var 0x564bb11410d8 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564bb114af30 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564bb114aef0 <col:90> 'int' lvalue Var 0x564bb1141528 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x564bb114af48 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564bb114af10 <col:102> 'int' lvalue Var 0x564bb1140c88 'a' 'int'
    |-BinaryOperator 0x564bb114b218 <line:846:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564bb114b030 <col:3> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564bb114b200 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564bb114b1d0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564bb114b0f0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564bb114b0a8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564bb114b090 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564bb114b050 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564bb114b0d8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564bb114b0c0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564bb114b070 <col:38> '_Bool' lvalue Var 0x564bb1140e18 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564bb114b188 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564bb114b140 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564bb114b110 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564bb114b1b8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564bb114b1a0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564bb114b168 <col:66> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564bb114b500 <line:847:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564bb114b238 <col:3> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564bb114b4e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564bb114b4b8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564bb114b3d8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564bb114b2f8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564bb114b2b0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564bb114b298 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564bb114b258 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564bb114b2e0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564bb114b2c8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564bb114b278 <col:38> '_Bool' lvalue Var 0x564bb1140e18 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564bb114b3b8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564bb114b370 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564bb114b358 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564bb114b318 <col:56> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564bb114b3a0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564bb114b388 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564bb114b338 <col:74> '_Bool' lvalue Var 0x564bb11410d8 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564bb114b470 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564bb114b428 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564bb114b3f8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564bb114b4a0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564bb114b488 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564bb114b450 <col:102> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x564bb114b708 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564bb114b520 <col:3> '_Bool' lvalue Var 0x564bb1140e18 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564bb114b6f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564bb114b6c0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564bb114b5e0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564bb114b598 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564bb114b580 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564bb114b540 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564bb114b5c8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564bb114b5b0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564bb114b560 <col:38> '_Bool' lvalue Var 0x564bb1140e18 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564bb114b678 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564bb114b630 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564bb114b600 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564bb114b6a8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564bb114b690 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564bb114b658 <col:66> '_Bool' lvalue Var 0x564bb1140e18 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564bb114b9f0 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564bb114b728 <col:3> '_Bool' lvalue Var 0x564bb11410d8 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564bb114b9d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564bb114b9a8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564bb114b8c8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564bb114b7e8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564bb114b7a0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564bb114b788 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564bb114b748 <col:20> '_Bool' lvalue Var 0x564bb11414a8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564bb114b7d0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564bb114b7b8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564bb114b768 <col:38> '_Bool' lvalue Var 0x564bb1140e18 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564bb114b8a8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564bb114b860 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564bb114b848 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564bb114b808 <col:56> '_Bool' lvalue Var 0x564bb11415a0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564bb114b890 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564bb114b878 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564bb114b828 <col:74> '_Bool' lvalue Var 0x564bb11410d8 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564bb114b960 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564bb114b918 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564bb114b8e8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564bb114b990 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564bb114b978 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564bb114b940 <col:102> '_Bool' lvalue Var 0x564bb11410d8 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x564bb114ba48 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564bb114ba30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564bb114ba10 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564bb114baa0 <line:851:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564bb114ba88 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564bb114ba68 <col:3> 'void ()' Function 0x564bb10e7350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564bb114bea0 <line:852:3, col:151> '_Bool' '='
    | |-DeclRefExpr 0x564bb114bac0 <col:3> '_Bool' lvalue Var 0x564bb1141690 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x564bb114be88 <col:21, col:151> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x564bb114be70 <col:21, col:151> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x564bb114be50 <col:22, col:151> 'int'
    |       `-BinaryOperator 0x564bb114be30 <col:23, col:150> 'int' '&&'
    |         |-BinaryOperator 0x564bb114bd98 <col:23, col:122> 'int' '&&'
    |         | |-BinaryOperator 0x564bb114bd00 <col:23, col:94> 'int' '&&'
    |         | | |-BinaryOperator 0x564bb114bc68 <col:23, col:66> 'int' '&&'
    |         | | | |-BinaryOperator 0x564bb114bbd0 <col:23, col:38> 'int' '&&'
    |         | | | | |-BinaryOperator 0x564bb114bb38 <col:23, col:28> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x564bb114bb20 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x564bb114bae0 <col:23> 'int' lvalue Var 0x564bb1141790 'x' 'int'
    |         | | | | | `-IntegerLiteral 0x564bb114bb00 <col:28> 'int' 2
    |         | | | | `-BinaryOperator 0x564bb114bbb0 <col:33, col:38> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x564bb114bb98 <col:33> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x564bb114bb58 <col:33> 'int' lvalue Var 0x564bb11418b0 'y' 'int'
    |         | | | |   `-IntegerLiteral 0x564bb114bb78 <col:38> 'int' 2
    |         | | | `-BinaryOperator 0x564bb114bc48 <col:43, col:66> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x564bb114bc30 <col:43> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x564bb114bbf0 <col:43> 'int' lvalue Var 0x564bb1140808 '__unbuffered_p2_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x564bb114bc10 <col:66> 'int' 2
    |         | | `-BinaryOperator 0x564bb114bce0 <col:71, col:94> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x564bb114bcc8 <col:71> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x564bb114bc88 <col:71> 'int' lvalue Var 0x564bb1140928 '__unbuffered_p2_EBX' 'int'
    |         | |   `-IntegerLiteral 0x564bb114bca8 <col:94> 'int' 0
    |         | `-BinaryOperator 0x564bb114bd78 <col:99, col:122> 'int' '=='
    |         |   |-ImplicitCastExpr 0x564bb114bd60 <col:99> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x564bb114bd20 <col:99> 'int' lvalue Var 0x564bb1140a48 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x564bb114bd40 <col:122> 'int' 1
    |         `-BinaryOperator 0x564bb114be10 <col:127, col:150> 'int' '=='
    |           |-ImplicitCastExpr 0x564bb114bdf8 <col:127> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564bb114bdb8 <col:127> 'int' lvalue Var 0x564bb1140b68 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x564bb114bdd8 <col:150> 'int' 0
    |-CallExpr 0x564bb114bef8 <line:853:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564bb114bee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564bb114bec0 <col:3> 'void ()' Function 0x564bb10e7410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564bb114bf70 <line:854:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564bb114bf58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564bb114bf18 <col:3> 'void (int)' Function 0x564bb10e70d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x564bb114bfb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564bb114bf98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564bb114bf38 <col:21> '_Bool' lvalue Var 0x564bb1141690 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x564bb114bfe8 <line:855:3, col:10>
      `-IntegerLiteral 0x564bb114bfc8 <col:10> 'int' 0
