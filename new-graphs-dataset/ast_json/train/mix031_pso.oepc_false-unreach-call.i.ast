TranslationUnitDecl 0x56366d456f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56366d457848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56366d457520 '__int128'
|-TypedefDecl 0x56366d4578b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56366d457540 'unsigned __int128'
|-TypedefDecl 0x56366d457bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56366d457990 'struct __NSConstantString_tag'
|   `-Record 0x56366d457910 '__NSConstantString_tag'
|-TypedefDecl 0x56366d457c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56366d457c20 'char *'
|   `-BuiltinType 0x56366d457020 'char'
|-TypedefDecl 0x56366d496b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56366d457f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56366d457d40 'struct __va_list_tag'
|     `-Record 0x56366d457cc0 '__va_list_tag'
|-FunctionDecl 0x56366d496ca0 <pthread-wmm/mix031_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56366d496bd0 <col:31> col:34 'int'
|-FunctionDecl 0x56366d496e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56366d496f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56366d4970d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56366d497048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56366d497308 <col:40, col:99>
|   |-IfStmt 0x56366d4972d8 <col:42, col:88>
|   | |-UnaryOperator 0x56366d4971b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56366d4971a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56366d497180 <col:47> 'int' lvalue ParmVar 0x56366d497048 'expression' 'int'
|   | `-CompoundStmt 0x56366d4972c0 <col:59, col:88>
|   |   `-LabelStmt 0x56366d4972a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56366d497238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56366d497220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56366d4971d0 <col:68> 'void () __attribute__((noreturn))' Function 0x56366d496f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56366d4972f0 <col:89>
|   `-ReturnStmt 0x56366d4972f8 <col:91>
|-FunctionDecl 0x56366d497350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56366d497410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56366d497790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56366d4974c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56366d497548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56366d4975c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56366d497648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56366d497850 <line:10:22>
|-FunctionDecl 0x56366d4bd8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56366d4978c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56366d497940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56366d4979c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56366d497a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56366d4bd960 <line:13:22>
|-FunctionDecl 0x56366d4bdc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56366d4bd9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56366d4bda50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56366d4bdad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56366d4bdcc8 <line:15:22>
|-TypedefDecl 0x56366d4bdd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56366d4570e0 'unsigned char'
|-TypedefDecl 0x56366d4bdda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56366d457100 'unsigned short'
|-TypedefDecl 0x56366d4bde18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56366d457120 'unsigned int'
|-TypedefDecl 0x56366d4bde88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-TypedefDecl 0x56366d4bdef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56366d457040 'signed char'
|-TypedefDecl 0x56366d4bdf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56366d4570e0 'unsigned char'
|-TypedefDecl 0x56366d4bdfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56366d457060 'short'
|-TypedefDecl 0x56366d4be048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56366d457100 'unsigned short'
|-TypedefDecl 0x56366d4be0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56366d457080 'int'
|-TypedefDecl 0x56366d4be128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56366d457120 'unsigned int'
|-TypedefDecl 0x56366d4be198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4be208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-TypedefDecl 0x56366d4be278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4be2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-TypedefDecl 0x56366d4be358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-TypedefDecl 0x56366d4be3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56366d457120 'unsigned int'
|-TypedefDecl 0x56366d4be438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56366d457120 'unsigned int'
|-TypedefDecl 0x56366d4be4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-TypedefDecl 0x56366d4be518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-TypedefDecl 0x56366d4be588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56366d457120 'unsigned int'
|-TypedefDecl 0x56366d4be5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-TypedefDecl 0x56366d4be668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4be6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4be748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56366d457080 'int'
|-RecordDecl 0x56366d4be7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56366d4be918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56366d4be9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56366d4be970 'struct __fsid_t' sugar
|   `-RecordType 0x56366d4be820 '__fsid_t'
|     `-Record 0x56366d4be7a0 ''
|-TypedefDecl 0x56366d4bea58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4beac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-TypedefDecl 0x56366d4beb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-TypedefDecl 0x56366d4beba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56366d457120 'unsigned int'
|-TypedefDecl 0x56366d4bec18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4bec88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56366d457120 'unsigned int'
|-TypedefDecl 0x56366d4becf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4bed68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56366d457080 'int'
|-TypedefDecl 0x56366d4bedd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56366d457080 'int'
|-TypedefDecl 0x56366d4bee48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56366d457080 'int'
|-TypedefDecl 0x56366d4beeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56366d4577a0 'void *'
|   `-BuiltinType 0x56366d456fe0 'void'
|-TypedefDecl 0x56366d4bef28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4bef98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4bf008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4bf078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-TypedefDecl 0x56366d4bf0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-TypedefDecl 0x56366d4bf158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-TypedefDecl 0x56366d4bf1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-TypedefDecl 0x56366d4bf238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4bf2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4bf318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4bf388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-TypedefDecl 0x56366d4bf418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56366d4bf3e0 '__off64_t' sugar
|   |-Typedef 0x56366d4be6d8 '__off64_t'
|   `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4bf510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56366d4bf4d0 '__quad_t *'
|   `-TypedefType 0x56366d4bf470 '__quad_t' sugar
|     |-Typedef 0x56366d4be278 '__quad_t'
|     `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4bf580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56366d457c20 'char *'
|   `-BuiltinType 0x56366d457020 'char'
|-TypedefDecl 0x56366d4bf5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4bf660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56366d457120 'unsigned int'
|-FunctionDecl 0x56366d4bf7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56366d4bf6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56366d4bfae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56366d4bfad8 <line:72:3, col:34>
|     `-CallExpr 0x56366d4bfa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56366d4bfa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56366d4bfa10 <col:10> '<builtin fn type>' Function 0x56366d4bf880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56366d4bfac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56366d4bfa30 <col:29> 'unsigned int' lvalue ParmVar 0x56366d4bf6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56366d4bf880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56366d4bf920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56366d4bf990 <col:10> Implicit
| `-ConstAttr 0x56366d4bf9e8 <col:10> Implicit
|-FunctionDecl 0x56366d4bfc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56366d4bfb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56366d4bff58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56366d4bff48 <line:77:3, col:34>
|     `-CallExpr 0x56366d4bff08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56366d4bfef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56366d4bfe78 <col:10> '<builtin fn type>' Function 0x56366d4bfce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56366d4bff30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56366d4bfe98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56366d4bfb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56366d4bfce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56366d4bfd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56366d4bfdf8 <col:10> Implicit
| `-ConstAttr 0x56366d4bfe50 <col:10> Implicit
|-TypedefDecl 0x56366d4bff88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-TypedefDecl 0x56366d4c0018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56366d4bffe0 '__time_t' sugar
|   |-Typedef 0x56366d4bec18 '__time_t'
|   `-BuiltinType 0x56366d4570a0 'long'
|-RecordDecl 0x56366d4c0070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56366d4c0128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56366d4c01b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56366d4c0248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56366d4c0210 '__pid_t' sugar
|   |-Typedef 0x56366d4be748 '__pid_t'
|   `-BuiltinType 0x56366d457080 'int'
|-RecordDecl 0x56366d4c02a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56366d4c0360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56366d4c03b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56366d4c0470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56366d4c04d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-RecordDecl 0x56366d4c0530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56366d4c07c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56366d4c28b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56366d4c0810 'struct cpu_set_t' sugar
|   `-RecordType 0x56366d4c05b0 'cpu_set_t'
|     `-Record 0x56366d4c0530 ''
|-FunctionDecl 0x56366d4c2b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56366d4c2958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56366d4c2a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56366d4c2c38 <line:107:19>
|-FunctionDecl 0x56366d4c2e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56366d4c2ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56366d4c2eb8 <col:69>
|-FunctionDecl 0x56366d4c3030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56366d4c2f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56366d4c30d8 <col:64>
|-FunctionDecl 0x56366d4c3398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56366d4c3140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56366d4c3278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56366d4c3448 <line:113:22>
|-FunctionDecl 0x56366d4c36c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56366d4c34b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56366d4c35a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56366d4c3778 <col:88>
|-FunctionDecl 0x56366d4c3a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56366d4c37e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56366d4c38c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56366d4c3950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56366d4c3b50 <col:62>
|-FunctionDecl 0x56366d4c3cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56366d4c3bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56366d4c3d70 <col:63>
|-FunctionDecl 0x56366d4c3e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56366d4c3f38 <col:47>
|-FunctionDecl 0x56366d4c4040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56366d4c3fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56366d4c40e8 <col:69>
|-FunctionDecl 0x56366d4c41f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56366d4c4158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56366d4c4298 <col:69>
|-FunctionDecl 0x56366d4c4558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56366d4c4300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56366d4c4438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56366d4c4608 <col:88>
|-TypedefDecl 0x56366d4c4698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56366d4c4660 '__clock_t' sugar
|   |-Typedef 0x56366d4bea58 '__clock_t'
|   `-BuiltinType 0x56366d4570a0 'long'
|-TypedefDecl 0x56366d4c4728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56366d4c46f0 '__clockid_t' sugar
|   |-Typedef 0x56366d4bee48 '__clockid_t'
|   `-BuiltinType 0x56366d457080 'int'
|-TypedefDecl 0x56366d4c47b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56366d4c4780 '__timer_t' sugar
|   |-Typedef 0x56366d4beeb8 '__timer_t'
|   `-PointerType 0x56366d4577a0 'void *'
|     `-BuiltinType 0x56366d456fe0 'void'
|-RecordDecl 0x56366d4c4810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56366d4c48e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56366d4c4950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56366d4c49b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56366d4c4a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56366d4c4a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56366d4c4af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56366d4c4b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56366d4c4bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56366d4c4c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56366d4c4c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56366d4c4cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56366d4c4d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56366d4c4e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56366d4c4e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56366d4c4f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56366d4c5100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56366d4c51a0 <col:45>
|-FunctionDecl 0x56366d4c5380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56366d4c5270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56366d4c5428 <col:54>
|-FunctionDecl 0x56366d4c5628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56366d4c5490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56366d4c5508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56366d4c56d8 <line:157:22>
| `-ConstAttr 0x56366d4c5730 <col:63>
|-FunctionDecl 0x56366d4c6560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56366d4c5828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56366d4c6608 <col:56>
|-FunctionDecl 0x56366d4c69b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56366d4c6678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56366d4c66f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56366d4c6770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56366d4c6868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56366d4c6a70 <col:54>
|-RecordDecl 0x56366d4c6ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56366d4c6b78 parent 0x56366d456f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56366d4c6dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56366d4c6e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56366d4c6ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56366d4c6f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56366d4c7038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56366d4c7158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56366d4c7100 'struct __locale_struct *'
|   `-ElaboratedType 0x56366d4c7090 'struct __locale_struct' sugar
|     `-RecordType 0x56366d4c6b50 'struct __locale_struct'
|       `-Record 0x56366d4c6ac8 '__locale_struct'
|-TypedefDecl 0x56366d4c7208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56366d4c71d0 '__locale_t' sugar
|   |-Typedef 0x56366d4c7158 '__locale_t'
|   `-PointerType 0x56366d4c7100 'struct __locale_struct *'
|     `-ElaboratedType 0x56366d4c7090 'struct __locale_struct' sugar
|       `-RecordType 0x56366d4c6b50 'struct __locale_struct'
|         `-Record 0x56366d4c6ac8 '__locale_struct'
|-FunctionDecl 0x56366d4c7610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56366d4c7278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56366d4c72f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56366d4c7370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56366d4c7400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56366d4c7478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56366d4c76d8 <col:40>
|-FunctionDecl 0x56366d4c78c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56366d4c77a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56366d4c7970 <col:66>
|-FunctionDecl 0x56366d4c7a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56366d4c79d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56366d4c7b28 <col:69>
|-FunctionDecl 0x56366d4c7d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56366d4c7b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56366d4c7c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56366d4c7e08 <col:52>
|-FunctionDecl 0x56366d4c7fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56366d4c7e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56366d4c7f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56366d4c8060 <col:55>
|-FunctionDecl 0x56366d4c81f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56366d4c80e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56366d4c82a0 <col:62>
|-FunctionDecl 0x56366d4c8418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56366d4c8308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56366d4c84c0 <col:60>
|-FunctionDecl 0x56366d4c8718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56366d4c8578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56366d4c85f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56366d4c87c8 <col:44>
|-FunctionDecl 0x56366d4c89d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56366d4c8830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56366d4c88b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56366d4c8a88 <col:49>
|-VarDecl 0x56366d4c8b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56366d4c8c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56366d4c8c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56366d4c8d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56366d4c8e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56366d4c8f20 <col:42>
|-VarDecl 0x56366d4c8f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56366d4c9010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56366d4c9198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56366d4c9088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56366d4c9240 <col:57>
|-FunctionDecl 0x56366d4c9350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56366d4c92c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56366d4c93f8 <col:56>
|-FunctionDecl 0x56366d4ca540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56366d4c9478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56366d4ca5e8 <col:59>
|-FunctionDecl 0x56366d4ca6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56366d4ca658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56366d4ca798 <col:48>
| `-ConstAttr 0x56366d4ca7f0 <col:89>
|-FunctionDecl 0x56366d4caa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56366d4ca8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56366d4ca938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56366d4cacb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56366d4cab48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56366d4cabd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56366d4cad68 <col:88>
|-FunctionDecl 0x56366d4caf00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56366d4cadd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56366d4cae60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56366d4cafb0 <col:88>
|-FunctionDecl 0x56366d4cb1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56366d4cb018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56366d4cb0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56366d4cb278 <line:208:22>
|-FunctionDecl 0x56366d4cb5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56366d4cb2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56366d4cb360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56366d4cb3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56366d4cb480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56366d4cb8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56366d4cb6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56366d4cb7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56366d4cb998 <col:85>
|-FunctionDecl 0x56366d4cbd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56366d4cba00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56366d4cbb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56366d4cbc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56366d4cbe40 <col:52>
|-FunctionDecl 0x56366d4cbfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56366d4cbea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56366d4cc060 <col:61>
|-FunctionDecl 0x56366d4cc560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56366d4cc0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56366d4cc148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56366d4cc278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56366d4cc368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56366d4cc620 <col:62>
|-FunctionDecl 0x56366d4cc838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56366d4cc688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56366d4cc718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56366d4cc8e8 <line:221:22>
|-FunctionDecl 0x56366d4cc9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56366d4cc950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56366d4cca90 <col:65>
|-TypedefDecl 0x56366d4ccb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56366d457140 'unsigned long'
|-RecordDecl 0x56366d4ccb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56366d4ccca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56366d4ccd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56366d4ccdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56366d4ccd60 'union pthread_attr_t' sugar
|   `-RecordType 0x56366d4ccbe0 'union pthread_attr_t'
|     `-Record 0x56366d4ccb58 'pthread_attr_t'
|-RecordDecl 0x56366d4cce10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56366d4ccf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56366d4cd000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56366d4cd0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56366d4cd050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56366d4cce90 'struct __pthread_internal_list'
|     `-Record 0x56366d4cce10 '__pthread_internal_list'
|-RecordDecl 0x56366d4cd120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56366d4cd1c8 parent 0x56366d456f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56366d4cd2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56366d4cd308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56366d4cd370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56366d4cd3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56366d4cd440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56366d4cd4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56366d4d1580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56366d4d1630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56366d4d1720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56366d4d1788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56366d4d1910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56366d4d18b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x56366d4cd1a0 'pthread_mutex_t'
|     `-Record 0x56366d4cd120 ''
|-RecordDecl 0x56366d4d1980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56366d4d1ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56366d4d1b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56366d4d1be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56366d4d1b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56366d4d1a00 'pthread_mutexattr_t'
|     `-Record 0x56366d4d1980 ''
|-RecordDecl 0x56366d4d1c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56366d4d1cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56366d4d1dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56366d4d1e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56366d4d1e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56366d4d1ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56366d4d1f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56366d4d1fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56366d4d2030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56366d4d2098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56366d4d2150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix031_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix031_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56366d4d2240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56366d4d22a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56366d4d23e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56366d4d2380 'union pthread_cond_t' sugar
|   `-RecordType 0x56366d4d1cd0 'pthread_cond_t'
|     `-Record 0x56366d4d1c50 ''
|-RecordDecl 0x56366d4d2450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56366d4d2590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56366d4d25f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56366d4d26b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56366d4d2650 'union pthread_condattr_t' sugar
|   `-RecordType 0x56366d4d24d0 'pthread_condattr_t'
|     `-Record 0x56366d4d2450 ''
|-TypedefDecl 0x56366d4d2738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56366d457120 'unsigned int'
|-TypedefDecl 0x56366d4d27a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56366d457080 'int'
|-RecordDecl 0x56366d4d2800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56366d4d28a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56366d4d2970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56366d4d29d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56366d4d2a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56366d4d2aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56366d4d2b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56366d4d2b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56366d4d2be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56366d4d2c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56366d4d2cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56366d4d2d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56366d4d2d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56366d4d2e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix031_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix031_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56366d4d2ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56366d4d2f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56366d4d3090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56366d4d3030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56366d4d2880 'pthread_rwlock_t'
|     `-Record 0x56366d4d2800 ''
|-RecordDecl 0x56366d4d3100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56366d4d3240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56366d4d32a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56366d4d3360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56366d4d3300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56366d4d3180 'pthread_rwlockattr_t'
|     `-Record 0x56366d4d3100 ''
|-TypedefDecl 0x56366d4d33e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56366d457084 'volatile int' volatile
|   `-BuiltinType 0x56366d457080 'int'
|-RecordDecl 0x56366d4d3440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56366d4d55b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56366d4d5618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56366d4d56d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56366d4d5670 'union pthread_barrier_t' sugar
|   `-RecordType 0x56366d4d34c0 'pthread_barrier_t'
|     `-Record 0x56366d4d3440 ''
|-RecordDecl 0x56366d4d5740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56366d4d5840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56366d4d58a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56366d4d5960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56366d4d5900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56366d4d57c0 'pthread_barrierattr_t'
|     `-Record 0x56366d4d5740 ''
|-TypedefDecl 0x56366d4d5a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56366d4d5a10 'long [8]' 8 
|   `-BuiltinType 0x56366d4570a0 'long'
|-EnumDecl 0x56366d4d5ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56366d4d5b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56366d4d5be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56366d4d5c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56366d4d5d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56366d4d5d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56366d4d5da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56366d4d5df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56366d4d5e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56366d4d5e68 <col:26> 'int'
| |   `-DeclRefExpr 0x56366d4d5e48 <col:26> 'int' EnumConstant 0x56366d4d5d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56366d4d5f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56366d4d5ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x56366d4d5ed0 <col:29> 'int' EnumConstant 0x56366d4d5d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56366d4d5f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56366d4d5f78 <col:30> 'int'
| |   `-DeclRefExpr 0x56366d4d5f58 <col:30> 'int' EnumConstant 0x56366d4d5da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56366d4d6018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56366d4d6000 <col:27> 'int'
|     `-DeclRefExpr 0x56366d4d5fe0 <col:27> 'int' EnumConstant 0x56366d4d5e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56366d4d6068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56366d4d6138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56366d4d61c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56366d4d61a8 <col:30> 'int'
| |   `-DeclRefExpr 0x56366d4d6188 <col:30> 'int' EnumConstant 0x56366d4d6138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56366d4d6210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56366d4d6298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56366d4d6280 <col:29> 'int'
|     `-DeclRefExpr 0x56366d4d6260 <col:29> 'int' EnumConstant 0x56366d4d6210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56366d4d62e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56366d4d63b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56366d4d6408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56366d4d6458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56366d4d64a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56366d4d65c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56366d4d6610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56366d4d6660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56366d4d66e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56366d4d66d0 <col:31> 'int'
|     `-DeclRefExpr 0x56366d4d66b0 <col:31> 'int' EnumConstant 0x56366d4d65c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56366d4d6738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56366d4d6808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56366d4d6858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56366d4d68a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56366d4d6978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56366d4d69c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56366d4d6a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56366d4d6ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56366d4d6b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56366d4d6b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56366d4d6dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56366d4d6e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56366d4d6e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56366d4d6fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56366d4d7008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56366d4d70d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56366d4d7128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56366d4d7178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56366d4d7248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56366d4d7298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56366d4d78f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56366d4d7390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56366d4d74a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56366d4d76e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56366d4d7760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56366d4d79b8 <col:47>
| |-NonNullAttr 0x56366d4d7a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x56366d4d7a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56366d4d7b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56366d4d7aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56366d4d7dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56366d4d7c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56366d4d7ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56366d4d7f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56366d4d7e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56366d4d8040 <col:60>
|-FunctionDecl 0x56366d4d8190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56366d4d8230 <col:54>
| `-ConstAttr 0x56366d4d8288 <col:95>
|-FunctionDecl 0x56366d4d8458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56366d4d82c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56366d4d8338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56366d4d8508 <line:394:19>
| `-ConstAttr 0x56366d4d8560 <col:60>
|-FunctionDecl 0x56366d4d8f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56366d4d8e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56366d4d9010 <col:71>
| `-NonNullAttr 0x56366d4d9068 <col:112, col:126> 1
|-FunctionDecl 0x56366d4d9170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56366d4d90b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56366d4d9218 <line:397:22>
| `-NonNullAttr 0x56366d4d9270 <col:63, col:77> 1
|-FunctionDecl 0x56366d4d9498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56366d4d92b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56366d4d9338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56366d4d9548 <line:400:22>
| `-NonNullAttr 0x56366d4d95a0 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4d97a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56366d4d95e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56366d4d9668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56366d4d9858 <line:403:22>
| `-NonNullAttr 0x56366d4d98b0 <col:63, col:77> 1
|-FunctionDecl 0x56366d4d9b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56366d4d98f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56366d4d99a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56366d4d9bb8 <line:406:22>
| `-NonNullAttr 0x56366d4d9c10 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4dae48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56366d4d9c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56366d4d9cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56366d4daef8 <line:409:22>
| `-NonNullAttr 0x56366d4daf50 <col:63, col:77> 1
|-FunctionDecl 0x56366d4db188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56366d4daf98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56366d4db028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56366d4db238 <line:412:22>
| `-NonNullAttr 0x56366d4db290 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4db4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56366d4db2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56366d4db368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56366d4db578 <col:37>
| `-NonNullAttr 0x56366d4db5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x56366d4db7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56366d4db618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56366d4db698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56366d4db868 <line:418:22>
| `-NonNullAttr 0x56366d4db8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4dba48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56366d4db908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56366d4db988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56366d4dbaf8 <line:420:22>
| `-NonNullAttr 0x56366d4dbb50 <col:63, col:77> 1
|-FunctionDecl 0x56366d4dbcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56366d4dbb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56366d4dbc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56366d4dbda8 <line:423:22>
| `-NonNullAttr 0x56366d4dce30 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4dcfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56366d4dce78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56366d4dcef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56366d4dd068 <line:426:22>
| `-NonNullAttr 0x56366d4dd0c0 <col:63, col:77> 1
|-FunctionDecl 0x56366d4dd268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56366d4dd108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56366d4dd188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56366d4dd318 <line:429:22>
| `-NonNullAttr 0x56366d4dd370 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4dd4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56366d4dd3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56366d4dd438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56366d4dd5a8 <line:431:22>
| `-NonNullAttr 0x56366d4dd600 <col:63, col:77> 1
|-FunctionDecl 0x56366d4dd828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56366d4dd648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56366d4dd6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56366d4dd8d8 <line:434:22>
| |-NonNullAttr 0x56366d4dd930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56366d4dd968 <col:100> "" ""
|-FunctionDecl 0x56366d4ddb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56366d4dd9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56366d4dda38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56366d4ddc28 <line:437:22>
| |-NonNullAttr 0x56366d4ddc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x56366d4ddcb8 <col:97> "" ""
|-FunctionDecl 0x56366d4ddeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56366d4ddd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56366d4ddd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56366d4ddf68 <line:440:22>
| `-NonNullAttr 0x56366d4ddfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4de140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56366d4de008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56366d4de080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56366d4de1f0 <line:443:22>
| `-NonNullAttr 0x56366d4de248 <col:63, col:77> 1
|-FunctionDecl 0x56366d4de538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56366d4de298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56366d4de318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56366d4de390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56366d4de5f0 <line:447:22>
| `-NonNullAttr 0x56366d4de648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56366d4de8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56366d4de6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56366d4de720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56366d4de798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56366d4de9b0 <col:43>
| `-NonNullAttr 0x56366d4dea08 <col:84, col:98> 1
|-FunctionDecl 0x56366d4decc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56366d4dea58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56366d4dead8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56366d4deb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56366d4ded80 <line:452:22>
| `-NonNullAttr 0x56366d4dedd8 <col:63, col:77> 3
|-FunctionDecl 0x56366d4df0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56366d4dee50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56366d4deed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56366d4def60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56366d4df1a0 <line:456:22>
| `-NonNullAttr 0x56366d4df1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x56366d4df3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56366d4df248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56366d4df2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56366d4df498 <line:458:22>
|-FunctionDecl 0x56366d4df868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56366d4df560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56366d4df700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56366d4df918 <col:52, col:69> 1 2
|-FunctionDecl 0x56366d4dfac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56366d4df9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56366d4dfa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56366d4dfca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56366d4dfb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56366d4dfc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56366d4dfe60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56366d4dfd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56366d4dffa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56366d4e0040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56366d4e00e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56366d4e01d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56366d4e0240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56366d4e0410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix031_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56366d4e0508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56366d4e05c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56366d4e0560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56366d4e00c0 '__pthread_unwind_buf_t'
| |   `-Record 0x56366d4e0040 ''
| `-AlignedAttr 0x56366d4e0618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56366d4e0690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56366d4e07f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56366d4e0858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56366d4e08c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56366d4e0928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56366d4e0b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56366d4e0a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56366d4e0c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56366d4e0be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56366d4e0e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56366d4e0d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56366d4e0f18 <line:487:22>
|-RecordDecl 0x56366d4e0f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56366d4e1288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56366d4e10e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56366d4e1168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56366d4e1338 <col:86>
| `-ReturnsTwiceAttr 0x56366d4e1390 <col:12> Implicit
|-FunctionDecl 0x56366d4e16b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56366d4e1460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56366d4e1570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56366d4e1768 <line:493:22>
| `-NonNullAttr 0x56366d4e17c0 <col:63, col:77> 1
|-FunctionDecl 0x56366d4e1938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56366d4e1808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56366d4e19e0 <line:495:22>
| `-NonNullAttr 0x56366d4e1a38 <col:63, col:77> 1
|-FunctionDecl 0x56366d4e1b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56366d4e1a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56366d4e1be8 <line:497:22>
| `-NonNullAttr 0x56366d4e1c40 <col:52, col:66> 1
|-FunctionDecl 0x56366d4e1d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56366d4e1c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56366d4e1de8 <line:499:22>
| `-NonNullAttr 0x56366d4e1e40 <col:52, col:66> 1
|-FunctionDecl 0x56366d4e2088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56366d4e1e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56366d4e1f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56366d4e2138 <col:36>
| `-NonNullAttr 0x56366d4e2190 <col:66, col:83> 1 2
|-FunctionDecl 0x56366d4e2290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56366d4e21d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56366d4e2338 <line:504:22>
| `-NonNullAttr 0x56366d4e2390 <col:52, col:66> 1
|-FunctionDecl 0x56366d4e2628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56366d4e2440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56366d4e24c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56366d4e26d8 <line:508:22>
| `-NonNullAttr 0x56366d4e2730 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4e29f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56366d4e2778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56366d4e27f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56366d4e2878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56366d4e2ab0 <line:512:22>
| `-NonNullAttr 0x56366d4e2b08 <col:63, col:80> 1 3
|-FunctionDecl 0x56366d4e2c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56366d4e2b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56366d4e2cb8 <line:514:22>
| `-NonNullAttr 0x56366d4e2d10 <col:63, col:77> 1
|-FunctionDecl 0x56366d4e2f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56366d4e2dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56366d4e2fe0 <line:516:22>
| `-NonNullAttr 0x56366d4e3038 <col:63, col:77> 1
|-FunctionDecl 0x56366d4e3140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56366d4e3088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56366d4e31e8 <line:518:22>
| `-NonNullAttr 0x56366d4e3240 <col:63, col:77> 1
|-FunctionDecl 0x56366d4e3468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56366d4e3288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56366d4e3308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56366d4e3518 <line:522:22>
| `-NonNullAttr 0x56366d4e3570 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4e3778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56366d4e35b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56366d4e3638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56366d4e3828 <line:525:22>
| `-NonNullAttr 0x56366d4e3880 <col:63, col:77> 1
|-FunctionDecl 0x56366d4e3a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56366d4e38c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56366d4e3948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56366d4e3ad8 <line:528:22>
| `-NonNullAttr 0x56366d4e3b30 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4e3cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56366d4e3b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56366d4e3bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56366d4e3d68 <line:530:22>
| `-NonNullAttr 0x56366d4e3dc0 <col:63, col:77> 1
|-FunctionDecl 0x56366d4e4f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56366d4e3e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56366d4e4eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56366d4e5040 <line:534:22>
| `-NonNullAttr 0x56366d4e5098 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4e5228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56366d4e50e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56366d4e5168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56366d4e52d8 <line:537:22>
| `-NonNullAttr 0x56366d4e5330 <col:63, col:77> 1
|-FunctionDecl 0x56366d4e54d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56366d4e5378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56366d4e53f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56366d4e5588 <line:541:22>
| `-NonNullAttr 0x56366d4e55e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4e5768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56366d4e5628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56366d4e56a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56366d4e5818 <line:544:22>
| `-NonNullAttr 0x56366d4e5870 <col:63, col:77> 1
|-FunctionDecl 0x56366d4e5a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56366d4e58b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56366d4e5938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56366d4e5b08 <line:547:22>
| `-NonNullAttr 0x56366d4e5b60 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4e5ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56366d4e5ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56366d4e5c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56366d4e5d98 <line:550:22>
| `-NonNullAttr 0x56366d4e5df0 <col:63, col:77> 1
|-FunctionDecl 0x56366d4e7168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56366d4e6f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56366d4e7020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56366d4e7218 <col:29>
| `-NonNullAttr 0x56366d4e7270 <col:70, col:84> 1
|-FunctionDecl 0x56366d4e73e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56366d4e72b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56366d4e7490 <line:555:22>
| `-NonNullAttr 0x56366d4e74e8 <col:63, col:77> 1
|-FunctionDecl 0x56366d4e75f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56366d4e7538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56366d4e7698 <line:557:22>
| `-NonNullAttr 0x56366d4e76f0 <col:52, col:66> 1
|-FunctionDecl 0x56366d4e77f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56366d4e7738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56366d4e7898 <line:559:19>
| `-NonNullAttr 0x56366d4e78f0 <col:49, col:63> 1
|-FunctionDecl 0x56366d4e7b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56366d4e7938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56366d4e79c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56366d4e7bd8 <col:39>
| `-NonNullAttr 0x56366d4e7c30 <col:69, col:86> 1 2
|-FunctionDecl 0x56366d4e7d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56366d4e7c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56366d4e7dd8 <line:564:22>
| `-NonNullAttr 0x56366d4e7e30 <col:52, col:66> 1
|-FunctionDecl 0x56366d4e7f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56366d4e7ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56366d4e8040 <line:566:22>
| `-NonNullAttr 0x56366d4e8098 <col:52, col:66> 1
|-FunctionDecl 0x56366d4e8258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56366d4e80e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56366d4e8178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56366d4e8308 <col:39>
| `-NonNullAttr 0x56366d4e8360 <col:69, col:86> 1 2
|-FunctionDecl 0x56366d4e8460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56366d4e83a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56366d4e8508 <line:571:22>
| `-NonNullAttr 0x56366d4e8560 <col:52, col:66> 1
|-FunctionDecl 0x56366d4e8748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56366d4e8610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56366d4e87f0 <line:573:22>
| `-NonNullAttr 0x56366d4e8848 <col:63, col:77> 1
|-FunctionDecl 0x56366d4e8950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56366d4e8898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56366d4e89f8 <line:575:22>
| `-NonNullAttr 0x56366d4e8a50 <col:63, col:77> 1
|-FunctionDecl 0x56366d4e8c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56366d4e8a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56366d4e8b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56366d4e8d28 <line:579:22>
| `-NonNullAttr 0x56366d4e8d80 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4e8fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56366d4e8dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56366d4e8e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56366d4e9058 <line:582:22>
| `-NonNullAttr 0x56366d4e90b0 <col:63, col:77> 1
|-FunctionDecl 0x56366d4e9258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56366d4e90f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56366d4e9178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56366d4e9308 <line:586:22>
| `-NonNullAttr 0x56366d4e9360 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4e94e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56366d4e93a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56366d4e9428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56366d4e9598 <col:36>
| `-NonNullAttr 0x56366d4e95f0 <col:77, col:91> 1
|-FunctionDecl 0x56366d4e9928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56366d4e96d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56366d4e97e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56366d4e99d8 <line:591:22>
| `-NonNullAttr 0x56366d4e9a30 <col:63, col:77> 1
|-FunctionDecl 0x56366d4e9ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56366d4e9a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56366d4e9c50 <line:593:22>
| `-NonNullAttr 0x56366d4e9ca8 <col:63, col:77> 1
|-FunctionDecl 0x56366d4e9db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56366d4e9cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56366d4e9e58 <line:595:22>
| `-NonNullAttr 0x56366d4e9eb0 <col:52, col:66> 1
|-FunctionDecl 0x56366d4e9fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56366d4e9f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56366d4ea070 <line:597:22>
| `-NonNullAttr 0x56366d4ea0c8 <col:52, col:66> 1
|-FunctionDecl 0x56366d4ea2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56366d4ea118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56366d4ea190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56366d4ea3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56366d4ea6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56366d4ea428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56366d4ea4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56366d4ea530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56366d4ea790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56366d4ea9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56366d4ea870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56366d4eaa50 <line:606:22>
| `-NonNullAttr 0x56366d4eaaa8 <col:63, col:77> 1
|-FunctionDecl 0x56366d4eabb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56366d4eaaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56366d4eac58 <line:608:22>
| `-NonNullAttr 0x56366d4eacb0 <col:63, col:77> 1
|-FunctionDecl 0x56366d4eaf10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56366d4eacf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56366d4ead78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56366d4eafc0 <line:612:22>
| `-NonNullAttr 0x56366d4eb018 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4eb228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56366d4eb068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56366d4eb0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56366d4eb2d8 <col:37>
| `-NonNullAttr 0x56366d4eb330 <col:78, col:92> 1
|-FunctionDecl 0x56366d4eb548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56366d4eb378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56366d4eb420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56366d4eb5f8 <line:618:22>
| `-NonNullAttr 0x56366d4eb650 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4eb818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56366d4eb698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56366d4eb710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56366d4eb8c8 <line:621:22>
| `-NonNullAttr 0x56366d4eb920 <col:63, col:77> 1
|-FunctionDecl 0x56366d4ebbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56366d4eba00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56366d4eba80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56366d4ebc78 <line:623:22>
| `-NonNullAttr 0x56366d4ebcd0 <col:63, col:77> 1
|-FunctionDecl 0x56366d4ebe48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56366d4ebd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56366d4ebf20 <line:625:22>
| `-NonNullAttr 0x56366d4ebf78 <col:63, col:77> 1
|-FunctionDecl 0x56366d4ec080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56366d4ebfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56366d4ec128 <line:627:22>
| `-NonNullAttr 0x56366d4ec180 <col:52, col:66> 1
|-FunctionDecl 0x56366d4ec280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56366d4ec1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56366d4ec328 <line:629:22>
| `-NonNullAttr 0x56366d4ec380 <col:52, col:66> 1
|-FunctionDecl 0x56366d4ec480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56366d4ec3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56366d4ec528 <line:631:22>
| `-NonNullAttr 0x56366d4ec580 <col:52, col:66> 1
|-FunctionDecl 0x56366d4ec958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56366d4ec660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56366d4ec770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56366d4ec7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56366d4eca10 <line:635:22>
| `-NonNullAttr 0x56366d4eca68 <col:63, col:77> 1
|-FunctionDecl 0x56366d4ecbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56366d4ecab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56366d4ecc90 <line:637:22>
| `-NonNullAttr 0x56366d4ecce8 <col:63, col:77> 1
|-FunctionDecl 0x56366d4ecdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56366d4ecd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56366d4ece98 <line:639:22>
| `-NonNullAttr 0x56366d4ecef0 <col:52, col:66> 1
|-FunctionDecl 0x56366d4ed0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56366d4ecfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56366d4ed190 <line:641:22>
| `-NonNullAttr 0x56366d4ed1e8 <col:63, col:77> 1
|-FunctionDecl 0x56366d4ed2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56366d4ed238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56366d4ed398 <line:643:22>
| `-NonNullAttr 0x56366d4ed3f0 <col:63, col:77> 1
|-FunctionDecl 0x56366d4ed618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56366d4ed438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56366d4ed4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56366d4ed6c8 <line:647:22>
| `-NonNullAttr 0x56366d4ed720 <col:63, col:80> 1 2
|-FunctionDecl 0x56366d4ed928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56366d4ed768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56366d4ed7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56366d4ed9d8 <line:650:22>
| `-NonNullAttr 0x56366d4eda30 <col:63, col:77> 1
|-FunctionDecl 0x56366d4edd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56366d4edb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56366d4edc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56366d4ede28 <line:653:22>
| `-NonNullAttr 0x56366d4ede80 <col:63, col:77> 1
|-FunctionDecl 0x56366d4edfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56366d4edec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56366d4ee090 <col:69>
|-FunctionDecl 0x56366d4ee208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56366d4ee0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56366d4ee2b0 <col:72>
|-FunctionDecl 0x56366d4ee4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56366d4ee318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56366d4ee3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56366d4ee598 <col:44>
|-FunctionDecl 0x56366d4ee7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56366d4ee600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56366d4ee678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56366d4ee868 <line:660:22>
| `-NonNullAttr 0x56366d4ee8c0 <col:63, col:77> 2
|-FunctionDecl 0x56366d4eed08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56366d4ee9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56366d4eeab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56366d4eebc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56366d4eedc0 <col:47>
|-FunctionDecl 0x56366d4eff60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56366d4eee30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56366d4f00b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56366d4f0020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56366d4f0180 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56366d4f0240 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56366d4f0300 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56366d4f03b8 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56366d4f0438 prev 0x56366d4f03b8 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56366d4f04a0 <col:24> 'int' 0
|-VarDecl 0x56366d4f04d8 <line:672:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x56366d4f0558 prev 0x56366d4f04d8 <line:673:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x56366d4f05c0 <col:27> 'int' 0
|-VarDecl 0x56366d4f05f8 <line:674:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x56366d4f0678 prev 0x56366d4f05f8 <line:675:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x56366d4f06e0 <col:27> 'int' 0
|-VarDecl 0x56366d4f0718 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56366d4f0798 prev 0x56366d4f0718 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56366d4f0800 <col:27> 'int' 0
|-VarDecl 0x56366d4f0838 <line:678:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x56366d4f08b8 prev 0x56366d4f0838 <line:679:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x56366d4f0920 <col:27> 'int' 0
|-VarDecl 0x56366d4f0958 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x56366d4f09d8 prev 0x56366d4f0958 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x56366d4f0a40 <col:9> 'int' 0
|-VarDecl 0x56366d4f0a70 <line:682:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x56366d4f0af0 <line:683:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x56366d4f0b68 <line:684:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x56366d4f0be0 <line:685:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x56366d4f0c58 <line:686:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x56366d4f0cd0 <line:687:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x56366d4f0d48 <line:688:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x56366d4f0dc0 <line:689:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x56366d4f0e38 <line:690:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x56366d4f0eb8 <line:691:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x56366d4f0f70 <line:692:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x56366d4f0fe8 <line:693:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x56366d4f1068 <line:694:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x56366d4f10e0 <line:695:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x56366d4f1158 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56366d4f11d0 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56366d4f1250 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x56366d4f12d0 prev 0x56366d4f1250 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56366d4f1338 <col:9> 'int' 0
|-VarDecl 0x56366d4f1370 <line:700:1, col:5> col:5 used y 'int'
|-VarDecl 0x56366d4f13f0 prev 0x56366d4f1370 <line:701:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56366d4f1458 <col:9> 'int' 0
|-VarDecl 0x56366d4f1490 <line:702:1, col:5> col:5 used z 'int'
|-VarDecl 0x56366d4f1510 prev 0x56366d4f1490 <line:703:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56366d4f1578 <col:9> 'int' 0
|-VarDecl 0x56366d4f15a8 <line:704:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56366d4f1620 <line:705:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56366d4f1738 prev 0x56366d4eff60 <line:706:1, line:739:1> line:706:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56366d4f16a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56366d4f3138 <line:707:1, line:739:1>
|   |-CallExpr 0x56366d4f1848 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56366d4f1830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f17e0 <col:3> 'void ()' Function 0x56366d497350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56366d4f18c0 <line:709:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56366d4f1868 <col:3> 'int' lvalue Var 0x56366d4f1068 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56366d4f18a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56366d4f1888 <col:15> 'int' lvalue Var 0x56366d4f0f70 'a$w_buff0' 'int'
|   |-BinaryOperator 0x56366d4f1920 <line:710:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56366d4f18e0 <col:3> 'int' lvalue Var 0x56366d4f0f70 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x56366d4f1900 <col:15> 'int' 1
|   |-BinaryOperator 0x56366d4f1998 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f1940 <col:3> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f1980 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56366d4f1960 <col:20> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56366d4f1a30 <line:712:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f19b8 <col:3> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56366d4f1a08 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56366d4f19d8 <col:27> 'int' 1
|   |-CallExpr 0x56366d4f1bb8 <line:713:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56366d4f1ba0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56366d4f1a50 <col:3> 'void (int)' Function 0x56366d4970d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56366d4f1b50 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56366d4f1b30 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56366d4f1b10 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56366d4f1ac8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56366d4f1ab0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56366d4f1a70 <col:23> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56366d4f1af8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56366d4f1ae0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56366d4f1a90 <col:41> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56366d4f1c38 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f1be0 <col:3> '_Bool' lvalue Var 0x56366d4f0cd0 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f1c20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56366d4f1c00 <col:20> '_Bool' lvalue Var 0x56366d4f0b68 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56366d4f1cb0 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f1c58 <col:3> '_Bool' lvalue Var 0x56366d4f0d48 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f1c98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56366d4f1c78 <col:20> '_Bool' lvalue Var 0x56366d4f0be0 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56366d4f1d28 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f1cd0 <col:3> '_Bool' lvalue Var 0x56366d4f0dc0 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f1d10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56366d4f1cf0 <col:20> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56366d4f1dc0 <line:717:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f1d48 <col:3> '_Bool' lvalue Var 0x56366d4f0be0 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x56366d4f1d98 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56366d4f1d68 <col:27> 'int' 1
|   |-CallExpr 0x56366d4f1e18 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56366d4f1e00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f1de0 <col:3> 'void ()' Function 0x56366d497410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56366d4f1e70 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56366d4f1e58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f1e38 <col:3> 'void ()' Function 0x56366d497350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56366d4f1ed0 <line:720:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56366d4f1e90 <col:3> 'int' lvalue Var 0x56366d4f12d0 'x' 'int'
|   | `-IntegerLiteral 0x56366d4f1eb0 <col:7> 'int' 1
|   |-CallExpr 0x56366d4f1f28 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56366d4f1f10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f1ef0 <col:3> 'void ()' Function 0x56366d497410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56366d4f1f98 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56366d4f1f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f1f48 <col:3> 'void ()' Function 0x56366d497350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56366d4f2010 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56366d4f1fb8 <col:3> 'int' lvalue Var 0x56366d4f0558 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x56366d4f1ff8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56366d4f1fd8 <col:25> 'int' lvalue Var 0x56366d4f12d0 'x' 'int'
|   |-CallExpr 0x56366d4f2068 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56366d4f2050 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f2030 <col:3> 'void ()' Function 0x56366d497410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56366d4f20c0 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56366d4f20a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f2088 <col:3> 'void ()' Function 0x56366d497350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56366d4f2138 <line:726:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56366d4f20e0 <col:3> 'int' lvalue Var 0x56366d4f0678 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x56366d4f2120 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56366d4f2100 <col:25> 'int' lvalue Var 0x56366d4f13f0 'y' 'int'
|   |-CallExpr 0x56366d4f2190 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56366d4f2178 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f2158 <col:3> 'void ()' Function 0x56366d497410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56366d4f21e8 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56366d4f21d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f21b0 <col:3> 'void ()' Function 0x56366d497350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56366d4f24d0 <line:729:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56366d4f2208 <col:3> 'int' lvalue Var 0x56366d4f09d8 'a' 'int'
|   | `-ConditionalOperator 0x56366d4f24a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56366d4f22c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56366d4f2280 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56366d4f2268 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56366d4f2228 <col:7> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56366d4f22b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56366d4f2298 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56366d4f2248 <col:25> '_Bool' lvalue Var 0x56366d4f0be0 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x56366d4f2488 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56366d4f22e8 <col:42> 'int' lvalue Var 0x56366d4f0f70 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56366d4f2468 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56366d4f2438 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56366d4f23a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56366d4f2360 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56366d4f2348 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56366d4f2308 <col:55> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56366d4f2390 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56366d4f2378 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56366d4f2328 <col:73> '_Bool' lvalue Var 0x56366d4f0d48 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56366d4f2408 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56366d4f23c8 <col:90> 'int' lvalue Var 0x56366d4f1068 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56366d4f2420 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56366d4f23e8 <col:102> 'int' lvalue Var 0x56366d4f09d8 'a' 'int'
|   |-BinaryOperator 0x56366d4f26d8 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f24f0 <col:3> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f26c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56366d4f2690 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56366d4f25b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56366d4f2568 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56366d4f2550 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56366d4f2510 <col:20> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56366d4f2598 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56366d4f2580 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56366d4f2530 <col:38> '_Bool' lvalue Var 0x56366d4f0be0 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56366d4f2648 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56366d4f2600 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56366d4f25d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56366d4f2678 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56366d4f2660 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56366d4f2628 <col:66> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56366d4f29c0 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f26f8 <col:3> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f29a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56366d4f2978 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56366d4f2898 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56366d4f27b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56366d4f2770 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56366d4f2758 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56366d4f2718 <col:20> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56366d4f27a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56366d4f2788 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56366d4f2738 <col:38> '_Bool' lvalue Var 0x56366d4f0be0 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56366d4f2878 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56366d4f2830 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56366d4f2818 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56366d4f27d8 <col:56> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56366d4f2860 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56366d4f2848 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56366d4f27f8 <col:74> '_Bool' lvalue Var 0x56366d4f0d48 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56366d4f2930 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56366d4f28e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56366d4f28b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56366d4f2960 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56366d4f2948 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56366d4f2910 <col:102> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56366d4f2bc8 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f29e0 <col:3> '_Bool' lvalue Var 0x56366d4f0be0 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f2bb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56366d4f2b80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56366d4f2aa0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56366d4f2a58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56366d4f2a40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56366d4f2a00 <col:20> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56366d4f2a88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56366d4f2a70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56366d4f2a20 <col:38> '_Bool' lvalue Var 0x56366d4f0be0 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56366d4f2b38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56366d4f2af0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56366d4f2ac0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56366d4f2b68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56366d4f2b50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56366d4f2b18 <col:66> '_Bool' lvalue Var 0x56366d4f0be0 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56366d4f2eb0 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f2be8 <col:3> '_Bool' lvalue Var 0x56366d4f0d48 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f2e98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56366d4f2e68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56366d4f2d88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56366d4f2ca8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56366d4f2c60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56366d4f2c48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56366d4f2c08 <col:20> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56366d4f2c90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56366d4f2c78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56366d4f2c28 <col:38> '_Bool' lvalue Var 0x56366d4f0be0 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56366d4f2d68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56366d4f2d20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56366d4f2d08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56366d4f2cc8 <col:56> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56366d4f2d50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56366d4f2d38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56366d4f2ce8 <col:74> '_Bool' lvalue Var 0x56366d4f0d48 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56366d4f2e20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56366d4f2dd8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56366d4f2da8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56366d4f2e50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56366d4f2e38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56366d4f2e00 <col:102> '_Bool' lvalue Var 0x56366d4f0d48 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x56366d4f2f08 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56366d4f2ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f2ed0 <col:3> 'void ()' Function 0x56366d497410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56366d4f2f60 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56366d4f2f48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f2f28 <col:3> 'void ()' Function 0x56366d497350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56366d4f3028 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56366d4f2f90 <col:3> 'int' lvalue Var 0x56366d4f0438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56366d4f3008 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56366d4f2ff0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56366d4f2fb0 <col:22> 'int' lvalue Var 0x56366d4f0438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56366d4f2fd0 <col:41> 'int' 1
|   |-CallExpr 0x56366d4f3080 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56366d4f3068 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f3048 <col:3> 'void ()' Function 0x56366d497410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56366d4f3128 <line:738:3, col:36>
|     `-CallExpr 0x56366d4f3108 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56366d4f30f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56366d4f30a0 <col:10> 'void *(void)' Function 0x56366d496e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56366d4f32f0 prev 0x56366d4f00b8 <line:740:1, line:778:1> line:740:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56366d4f3258 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56366d4f7108 <line:741:1, line:778:1>
|   |-CallExpr 0x56366d4f33d0 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56366d4f33b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f3398 <col:3> 'void ()' Function 0x56366d497350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56366d4f3430 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56366d4f33f0 <col:3> 'int' lvalue Var 0x56366d4f13f0 'y' 'int'
|   | `-IntegerLiteral 0x56366d4f3410 <col:7> 'int' 1
|   |-CallExpr 0x56366d4f3488 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56366d4f3470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f3450 <col:3> 'void ()' Function 0x56366d497410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56366d4f34e0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56366d4f34c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f34a8 <col:3> 'void ()' Function 0x56366d497350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56366d4f3540 <line:746:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56366d4f3500 <col:3> 'int' lvalue Var 0x56366d4f1510 'z' 'int'
|   | `-IntegerLiteral 0x56366d4f3520 <col:7> 'int' 1
|   |-CallExpr 0x56366d4f3598 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56366d4f3580 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f3560 <col:3> 'void ()' Function 0x56366d497410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56366d4f35f0 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56366d4f35d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f35b8 <col:3> 'void ()' Function 0x56366d497350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56366d4f3668 <line:749:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56366d4f3610 <col:3> 'int' lvalue Var 0x56366d4f0798 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x56366d4f3650 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56366d4f3630 <col:25> 'int' lvalue Var 0x56366d4f1510 'z' 'int'
|   |-CallExpr 0x56366d4f36c0 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56366d4f36a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f3688 <col:3> 'void ()' Function 0x56366d497410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56366d4f3718 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56366d4f3700 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f36e0 <col:3> 'void ()' Function 0x56366d497350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56366d4f37c8 <line:752:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f3738 <col:3> '_Bool' lvalue Var 0x56366d4f15a8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f37b0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56366d4f3790 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56366d4f3778 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56366d4f3758 <col:19> 'void *(void)' Function 0x56366d496e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56366d4f3878 <line:753:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f37e8 <col:3> '_Bool' lvalue Var 0x56366d4f1620 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f3860 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56366d4f3840 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56366d4f3828 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56366d4f3808 <col:19> 'void *(void)' Function 0x56366d496e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56366d4f38f0 <line:754:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f3898 <col:3> '_Bool' lvalue Var 0x56366d4f0a70 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f38d8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56366d4f38b8 <col:21> '_Bool' lvalue Var 0x56366d4f1620 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56366d4f3968 <line:755:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56366d4f3910 <col:3> 'int' lvalue Var 0x56366d4f0af0 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56366d4f3950 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56366d4f3930 <col:15> 'int' lvalue Var 0x56366d4f09d8 'a' 'int'
|   |-BinaryOperator 0x56366d4f3da0 <line:756:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56366d4f3988 <col:3> 'int' lvalue Var 0x56366d4f09d8 'a' 'int'
|   | `-ConditionalOperator 0x56366d4f3d70 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56366d4f3b98 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56366d4f3ab8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56366d4f39e0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56366d4f39c8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56366d4f39a8 <col:8> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56366d4f3a98 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56366d4f3a30 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56366d4f3a18 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56366d4f39f8 <col:27> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x56366d4f3a80 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56366d4f3a68 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56366d4f3a48 <col:46> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56366d4f3b78 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56366d4f3b10 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56366d4f3af8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56366d4f3ad8 <col:65> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x56366d4f3b60 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56366d4f3b48 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56366d4f3b28 <col:84> '_Bool' lvalue Var 0x56366d4f0dc0 'a$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56366d4f3d58 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56366d4f3bb8 <col:101> 'int' lvalue Var 0x56366d4f09d8 'a' 'int'
|   |   `-ParenExpr 0x56366d4f3d38 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56366d4f3d08 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56366d4f3c78 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56366d4f3c30 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56366d4f3c18 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56366d4f3bd8 <col:106> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56366d4f3c60 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56366d4f3c48 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56366d4f3bf8 <col:124> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56366d4f3cd8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56366d4f3c98 <col:141> 'int' lvalue Var 0x56366d4f0f70 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56366d4f3cf0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56366d4f3cb8 <col:153> 'int' lvalue Var 0x56366d4f1068 'a$w_buff1' 'int'
|   |-BinaryOperator 0x56366d4f42c8 <line:757:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56366d4f3dc0 <col:3> 'int' lvalue Var 0x56366d4f0f70 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x56366d4f4298 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56366d4f4268 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56366d4f4250 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56366d4f3de0 <col:15> '_Bool' lvalue Var 0x56366d4f1620 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56366d4f4280 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56366d4f3e00 <col:31> 'int' lvalue Var 0x56366d4f0f70 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56366d4f4230 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56366d4f4200 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56366d4f4028 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56366d4f3f30 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56366d4f3e58 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56366d4f3e40 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56366d4f3e20 <col:45> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56366d4f3f10 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56366d4f3ea8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56366d4f3e90 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56366d4f3e70 <col:64> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x56366d4f3ef8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56366d4f3ee0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56366d4f3ec0 <col:83> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56366d4f4008 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56366d4f3fa0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56366d4f3f70 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56366d4f3f50 <col:102> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x56366d4f3ff0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56366d4f3fd8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56366d4f3fb8 <col:121> '_Bool' lvalue Var 0x56366d4f0dc0 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56366d4f41e8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56366d4f4048 <col:138> 'int' lvalue Var 0x56366d4f0f70 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x56366d4f41c8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56366d4f4198 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56366d4f4108 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56366d4f40c0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56366d4f40a8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56366d4f4068 <col:151> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56366d4f40f0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56366d4f40d8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56366d4f4088 <col:169> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x56366d4f4168 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56366d4f4128 <col:186> 'int' lvalue Var 0x56366d4f0f70 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56366d4f4180 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56366d4f4148 <col:198> 'int' lvalue Var 0x56366d4f0f70 'a$w_buff0' 'int'
|   |-BinaryOperator 0x56366d4f47d8 <line:758:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56366d4f42e8 <col:3> 'int' lvalue Var 0x56366d4f1068 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x56366d4f47a8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56366d4f4778 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56366d4f4760 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56366d4f4308 <col:15> '_Bool' lvalue Var 0x56366d4f1620 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56366d4f4790 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56366d4f4328 <col:31> 'int' lvalue Var 0x56366d4f1068 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x56366d4f4740 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56366d4f4710 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56366d4f4538 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56366d4f4458 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56366d4f4380 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56366d4f4368 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56366d4f4348 <col:45> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56366d4f4438 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56366d4f43d0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56366d4f43b8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56366d4f4398 <col:64> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x56366d4f4420 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56366d4f4408 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56366d4f43e8 <col:83> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56366d4f4518 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56366d4f44b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56366d4f4498 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56366d4f4478 <col:102> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x56366d4f4500 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56366d4f44e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56366d4f44c8 <col:121> '_Bool' lvalue Var 0x56366d4f0dc0 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56366d4f46f8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56366d4f4558 <col:138> 'int' lvalue Var 0x56366d4f1068 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x56366d4f46d8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56366d4f46a8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56366d4f4618 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56366d4f45d0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56366d4f45b8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56366d4f4578 <col:151> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56366d4f4600 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56366d4f45e8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56366d4f4598 <col:169> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x56366d4f4678 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56366d4f4638 <col:186> 'int' lvalue Var 0x56366d4f1068 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56366d4f4690 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56366d4f4658 <col:198> 'int' lvalue Var 0x56366d4f1068 'a$w_buff1' 'int'
|   |-BinaryOperator 0x56366d4f4d80 <line:759:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f47f8 <col:3> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f4d68 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56366d4f4d38 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56366d4f4cf0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56366d4f4cd8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56366d4f4818 <col:20> '_Bool' lvalue Var 0x56366d4f1620 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56366d4f4d20 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56366d4f4d08 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56366d4f4838 <col:36> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56366d4f4cb8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56366d4f4c88 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56366d4f4a48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56366d4f4968 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56366d4f4890 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56366d4f4878 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56366d4f4858 <col:55> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56366d4f4948 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56366d4f48e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56366d4f48c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56366d4f48a8 <col:74> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56366d4f4930 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56366d4f4918 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56366d4f48f8 <col:93> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56366d4f4a28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56366d4f49c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56366d4f49a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56366d4f4988 <col:112> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56366d4f4a10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56366d4f49f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56366d4f49d8 <col:131> '_Bool' lvalue Var 0x56366d4f0dc0 'a$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56366d4f4c70 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56366d4f4c58 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56366d4f4a68 <col:148> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56366d4f4c38 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56366d4f4c08 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56366d4f4b28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56366d4f4ae0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56366d4f4ac8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56366d4f4a88 <col:166> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56366d4f4b10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56366d4f4af8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56366d4f4aa8 <col:184> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56366d4f4bc0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56366d4f4b78 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56366d4f4b48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56366d4f4bf0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56366d4f4bd8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56366d4f4ba0 <col:212> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56366d4f5358 <line:760:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f4da0 <col:3> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f5340 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56366d4f5310 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56366d4f52c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56366d4f52b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56366d4f4dc0 <col:20> '_Bool' lvalue Var 0x56366d4f1620 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56366d4f52f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56366d4f52e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56366d4f4de0 <col:36> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56366d4f5290 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56366d4f5260 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56366d4f5000 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56366d4f4f10 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56366d4f4e38 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56366d4f4e20 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56366d4f4e00 <col:55> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56366d4f4ef0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56366d4f4e88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56366d4f4e70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56366d4f4e50 <col:74> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56366d4f4ed8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56366d4f4ec0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56366d4f4ea0 <col:93> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56366d4f4fe0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56366d4f4f68 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56366d4f4f50 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56366d4f4f30 <col:112> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56366d4f4fc8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56366d4f4fb0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56366d4f4f80 <col:131> '_Bool' lvalue Var 0x56366d4f0dc0 'a$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56366d4f5248 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56366d4f5230 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56366d4f5020 <col:148> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56366d4f5210 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56366d4f51e0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56366d4f50e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56366d4f5098 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56366d4f5080 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56366d4f5040 <col:166> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56366d4f50c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56366d4f50b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56366d4f5060 <col:184> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56366d4f51b0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56366d4f5130 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56366d4f5100 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56366d4f51c8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56366d4f5188 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56366d4f5158 <col:219> 'int' 0
|   |-BinaryOperator 0x56366d4f5900 <line:761:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f5378 <col:3> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f58e8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56366d4f58b8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56366d4f5870 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56366d4f5858 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56366d4f5398 <col:20> '_Bool' lvalue Var 0x56366d4f1620 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56366d4f58a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56366d4f5888 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56366d4f53b8 <col:36> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x56366d4f5838 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56366d4f5808 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56366d4f55c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56366d4f54e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56366d4f5410 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56366d4f53f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56366d4f53d8 <col:55> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56366d4f54c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56366d4f5460 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56366d4f5448 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56366d4f5428 <col:74> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56366d4f54b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56366d4f5498 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56366d4f5478 <col:93> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56366d4f55a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56366d4f5540 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56366d4f5528 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56366d4f5508 <col:112> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56366d4f5590 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56366d4f5578 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56366d4f5558 <col:131> '_Bool' lvalue Var 0x56366d4f0dc0 'a$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56366d4f57f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56366d4f57d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56366d4f55e8 <col:148> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x56366d4f57b8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56366d4f5788 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56366d4f56a8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56366d4f5660 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56366d4f5648 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56366d4f5608 <col:166> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56366d4f5690 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56366d4f5678 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56366d4f5628 <col:184> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56366d4f5740 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56366d4f56f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56366d4f56c8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56366d4f5770 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56366d4f5758 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56366d4f5720 <col:212> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56366d4f5ec8 <line:762:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f5920 <col:3> '_Bool' lvalue Var 0x56366d4f0dc0 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f5eb0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56366d4f5e80 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56366d4f5e38 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56366d4f5e20 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56366d4f5940 <col:20> '_Bool' lvalue Var 0x56366d4f1620 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56366d4f5e68 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56366d4f5e50 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56366d4f5960 <col:36> '_Bool' lvalue Var 0x56366d4f0dc0 'a$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x56366d4f5e00 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56366d4f5dd0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56366d4f5b70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56366d4f5a90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56366d4f59b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56366d4f59a0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56366d4f5980 <col:55> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56366d4f5a70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56366d4f5a08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56366d4f59f0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56366d4f59d0 <col:74> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56366d4f5a58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56366d4f5a40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56366d4f5a20 <col:93> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56366d4f5b50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56366d4f5ae8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56366d4f5ad0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56366d4f5ab0 <col:112> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56366d4f5b38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56366d4f5b20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56366d4f5b00 <col:131> '_Bool' lvalue Var 0x56366d4f0dc0 'a$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56366d4f5db8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56366d4f5da0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56366d4f5b90 <col:148> '_Bool' lvalue Var 0x56366d4f0dc0 'a$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x56366d4f5d80 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56366d4f5d50 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56366d4f5c50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56366d4f5c08 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56366d4f5bf0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56366d4f5bb0 <col:166> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56366d4f5c38 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56366d4f5c20 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56366d4f5bd0 <col:184> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56366d4f5d20 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56366d4f5ca0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56366d4f5c70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56366d4f5d38 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56366d4f5cf8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56366d4f5cc8 <col:219> 'int' 0
|   |-BinaryOperator 0x56366d4f5f40 <line:763:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56366d4f5ee8 <col:3> 'int' lvalue Var 0x56366d4f08b8 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x56366d4f5f28 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56366d4f5f08 <col:25> 'int' lvalue Var 0x56366d4f09d8 'a' 'int'
|   |-BinaryOperator 0x56366d4f6090 <line:764:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56366d4f5f60 <col:3> 'int' lvalue Var 0x56366d4f09d8 'a' 'int'
|   | `-ConditionalOperator 0x56366d4f6060 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56366d4f6018 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56366d4f6000 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56366d4f5f80 <col:7> '_Bool' lvalue Var 0x56366d4f0a70 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56366d4f6030 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56366d4f5fc0 <col:25> 'int' lvalue Var 0x56366d4f0af0 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56366d4f6048 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56366d4f5fe0 <col:37> 'int' lvalue Var 0x56366d4f09d8 'a' 'int'
|   |-BinaryOperator 0x56366d4f6128 <line:765:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f60b0 <col:3> '_Bool' lvalue Var 0x56366d4f0a70 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56366d4f6100 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56366d4f60d0 <col:28> 'int' 0
|   |-CallExpr 0x56366d4f6180 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56366d4f6168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f6148 <col:3> 'void ()' Function 0x56366d497410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56366d4f61d8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56366d4f61c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f61a0 <col:3> 'void ()' Function 0x56366d497350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56366d4f64c0 <line:768:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56366d4f61f8 <col:3> 'int' lvalue Var 0x56366d4f09d8 'a' 'int'
|   | `-ConditionalOperator 0x56366d4f6490 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56366d4f62b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56366d4f6270 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56366d4f6258 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56366d4f6218 <col:7> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56366d4f62a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56366d4f6288 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56366d4f6238 <col:25> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56366d4f6478 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56366d4f62d8 <col:42> 'int' lvalue Var 0x56366d4f0f70 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56366d4f6458 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56366d4f6428 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56366d4f6398 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56366d4f6350 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56366d4f6338 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56366d4f62f8 <col:55> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56366d4f6380 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56366d4f6368 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56366d4f6318 <col:73> '_Bool' lvalue Var 0x56366d4f0dc0 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56366d4f63f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56366d4f63b8 <col:90> 'int' lvalue Var 0x56366d4f1068 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56366d4f6410 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56366d4f63d8 <col:102> 'int' lvalue Var 0x56366d4f09d8 'a' 'int'
|   |-BinaryOperator 0x56366d4f66c8 <line:769:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f64e0 <col:3> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f66b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56366d4f6680 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56366d4f65a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56366d4f6558 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56366d4f6540 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56366d4f6500 <col:20> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56366d4f6588 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56366d4f6570 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56366d4f6520 <col:38> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56366d4f6638 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56366d4f65f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56366d4f65c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56366d4f6668 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56366d4f6650 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56366d4f6618 <col:66> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56366d4f69b0 <line:770:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f66e8 <col:3> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f6998 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56366d4f6968 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56366d4f6888 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56366d4f67a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56366d4f6760 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56366d4f6748 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56366d4f6708 <col:20> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56366d4f6790 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56366d4f6778 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56366d4f6728 <col:38> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56366d4f6868 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56366d4f6820 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56366d4f6808 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56366d4f67c8 <col:56> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56366d4f6850 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56366d4f6838 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56366d4f67e8 <col:74> '_Bool' lvalue Var 0x56366d4f0dc0 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56366d4f6920 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56366d4f68d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56366d4f68a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56366d4f6950 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56366d4f6938 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56366d4f6900 <col:102> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56366d4f6bb8 <line:771:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f69d0 <col:3> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f6ba0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56366d4f6b70 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56366d4f6a90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56366d4f6a48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56366d4f6a30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56366d4f69f0 <col:20> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56366d4f6a78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56366d4f6a60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56366d4f6a10 <col:38> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56366d4f6b28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56366d4f6ae0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56366d4f6ab0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56366d4f6b58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56366d4f6b40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56366d4f6b08 <col:66> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56366d4f6ea0 <line:772:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56366d4f6bd8 <col:3> '_Bool' lvalue Var 0x56366d4f0dc0 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56366d4f6e88 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56366d4f6e58 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56366d4f6d78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56366d4f6c98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56366d4f6c50 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56366d4f6c38 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56366d4f6bf8 <col:20> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56366d4f6c80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56366d4f6c68 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56366d4f6c18 <col:38> '_Bool' lvalue Var 0x56366d4f0c58 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56366d4f6d58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56366d4f6d10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56366d4f6cf8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56366d4f6cb8 <col:56> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56366d4f6d40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56366d4f6d28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56366d4f6cd8 <col:74> '_Bool' lvalue Var 0x56366d4f0dc0 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56366d4f6e10 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56366d4f6dc8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56366d4f6d98 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56366d4f6e40 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56366d4f6e28 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56366d4f6df0 <col:102> '_Bool' lvalue Var 0x56366d4f0dc0 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x56366d4f6ef8 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56366d4f6ee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f6ec0 <col:3> 'void ()' Function 0x56366d497410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56366d4f6f50 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56366d4f6f38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f6f18 <col:3> 'void ()' Function 0x56366d497350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56366d4f7028 <line:775:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56366d4f6f70 <col:3> 'int' lvalue Var 0x56366d4f0438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56366d4f7008 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56366d4f6ff0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56366d4f6f90 <col:22> 'int' lvalue Var 0x56366d4f0438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56366d4f6fd0 <col:41> 'int' 1
|   |-CallExpr 0x56366d4f7080 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56366d4f7068 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56366d4f7048 <col:3> 'void ()' Function 0x56366d497410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56366d4f70f8 <line:777:3, col:36>
|     `-CallExpr 0x56366d4f70d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56366d4f70c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56366d4f70a0 <col:10> 'void *(void)' Function 0x56366d496e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56366d4f7258 prev 0x56366d4f0180 <line:779:1, line:781:1> line:779:6 fence 'void ()'
| `-CompoundStmt 0x56366d4f72f8 <line:780:1, line:781:1>
|-FunctionDecl 0x56366d4f7328 prev 0x56366d4f0240 <line:782:1, line:784:1> line:782:6 isync 'void ()'
| `-CompoundStmt 0x56366d4f73c8 <line:783:1, line:784:1>
|-FunctionDecl 0x56366d4f73f8 prev 0x56366d4f0300 <line:785:1, line:787:1> line:785:6 lwfence 'void ()'
| `-CompoundStmt 0x56366d4f7498 <line:786:1, line:787:1>
`-FunctionDecl 0x56366d4f7508 <line:788:1, line:810:1> line:788:5 main 'int ()'
  `-CompoundStmt 0x56366d4f8ff0 <line:789:1, line:810:1>
    |-DeclStmt 0x56366d4f7620 <line:790:3, col:17>
    | `-VarDecl 0x56366d4f75b8 <col:3, col:13> col:13 used t839 'pthread_t':'unsigned long'
    |-CallExpr 0x56366d4f7828 <line:791:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56366d4f7810 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56366d4f7638 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56366d4d78f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56366d4f7678 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56366d4f7658 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56366d4f75b8 't839' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56366d4f7868 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56366d4f76f0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56366d4f76c8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56366d4f7690 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56366d4f7880 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56366d4f7710 <col:38> 'void *(void *)' Function 0x56366d4f1738 'P0' 'void *(void *)'
    | `-ParenExpr 0x56366d4f7790 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56366d4f7768 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56366d4f7730 <col:51> 'int' 0
    |-DeclStmt 0x56366d4f7910 <line:792:3, col:17>
    | `-VarDecl 0x56366d4f78a8 <col:3, col:13> col:13 used t840 'pthread_t':'unsigned long'
    |-CallExpr 0x56366d4f7ab8 <line:793:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56366d4f7aa0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56366d4f7928 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56366d4d78f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56366d4f7968 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56366d4f7948 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56366d4f78a8 't840' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56366d4f7af8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56366d4f79e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56366d4f79b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56366d4f7980 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56366d4f7b10 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56366d4f7a00 <col:38> 'void *(void *)' Function 0x56366d4f32f0 'P1' 'void *(void *)'
    | `-ParenExpr 0x56366d4f7a80 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56366d4f7a58 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56366d4f7a20 <col:51> 'int' 0
    |-CallExpr 0x56366d4f7b60 <line:794:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56366d4f7b48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56366d4f7b28 <col:3> 'void ()' Function 0x56366d497350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56366d4f7c30 <line:795:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56366d4f7b80 <col:3> '_Bool' lvalue Var 0x56366d4f1158 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56366d4f7c18 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56366d4f7bf8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56366d4f7be0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56366d4f7ba0 <col:21> 'int' lvalue Var 0x56366d4f0438 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56366d4f7bc0 <col:41> 'int' 2
    |-CallExpr 0x56366d4f7c88 <line:796:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56366d4f7c70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56366d4f7c50 <col:3> 'void ()' Function 0x56366d497410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56366d4f7d00 <line:797:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56366d4f7ce8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56366d4f7ca8 <col:3> 'void (int)' Function 0x56366d496ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56366d4f7d40 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56366d4f7d28 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56366d4f7cc8 <col:21> '_Bool' lvalue Var 0x56366d4f1158 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56366d4f7d90 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56366d4f7d78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56366d4f7d58 <col:3> 'void ()' Function 0x56366d497350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56366d4f8090 <line:799:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56366d4f7db0 <col:3> 'int' lvalue Var 0x56366d4f09d8 'a' 'int'
    | `-ConditionalOperator 0x56366d4f8060 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56366d4f7e70 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56366d4f7e28 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56366d4f7e10 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56366d4f7dd0 <col:7> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56366d4f7e58 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56366d4f7e40 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56366d4f7df0 <col:25> '_Bool' lvalue Var 0x56366d4f0b68 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56366d4f8048 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56366d4f7e90 <col:42> 'int' lvalue Var 0x56366d4f0f70 'a$w_buff0' 'int'
    |   `-ParenExpr 0x56366d4f8028 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56366d4f7ff8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56366d4f7f50 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56366d4f7f08 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56366d4f7ef0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56366d4f7eb0 <col:55> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56366d4f7f38 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56366d4f7f20 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56366d4f7ed0 <col:73> '_Bool' lvalue Var 0x56366d4f0cd0 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56366d4f7fb0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56366d4f7f70 <col:90> 'int' lvalue Var 0x56366d4f1068 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56366d4f7fe0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56366d4f7f90 <col:102> 'int' lvalue Var 0x56366d4f09d8 'a' 'int'
    |-BinaryOperator 0x56366d4f8298 <line:800:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56366d4f80b0 <col:3> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56366d4f8280 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56366d4f8250 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56366d4f8170 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56366d4f8128 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56366d4f8110 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56366d4f80d0 <col:20> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56366d4f8158 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56366d4f8140 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56366d4f80f0 <col:38> '_Bool' lvalue Var 0x56366d4f0b68 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56366d4f8208 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56366d4f81c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56366d4f8190 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56366d4f8238 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56366d4f8220 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56366d4f81e8 <col:66> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56366d4f8580 <line:801:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56366d4f82b8 <col:3> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56366d4f8568 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56366d4f8538 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56366d4f8458 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56366d4f8378 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56366d4f8330 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56366d4f8318 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56366d4f82d8 <col:20> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56366d4f8360 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56366d4f8348 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56366d4f82f8 <col:38> '_Bool' lvalue Var 0x56366d4f0b68 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56366d4f8438 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56366d4f83f0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56366d4f83d8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56366d4f8398 <col:56> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56366d4f8420 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56366d4f8408 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56366d4f83b8 <col:74> '_Bool' lvalue Var 0x56366d4f0cd0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56366d4f84f0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56366d4f84a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56366d4f8478 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56366d4f8520 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56366d4f8508 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56366d4f84d0 <col:102> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56366d4f8788 <line:802:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56366d4f85a0 <col:3> '_Bool' lvalue Var 0x56366d4f0b68 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56366d4f8770 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56366d4f8740 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56366d4f8660 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56366d4f8618 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56366d4f8600 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56366d4f85c0 <col:20> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56366d4f8648 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56366d4f8630 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56366d4f85e0 <col:38> '_Bool' lvalue Var 0x56366d4f0b68 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56366d4f86f8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56366d4f86b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56366d4f8680 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56366d4f8728 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56366d4f8710 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56366d4f86d8 <col:66> '_Bool' lvalue Var 0x56366d4f0b68 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56366d4f8a70 <line:803:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56366d4f87a8 <col:3> '_Bool' lvalue Var 0x56366d4f0cd0 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56366d4f8a58 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56366d4f8a28 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56366d4f8948 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56366d4f8868 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56366d4f8820 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56366d4f8808 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56366d4f87c8 <col:20> '_Bool' lvalue Var 0x56366d4f0fe8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56366d4f8850 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56366d4f8838 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56366d4f87e8 <col:38> '_Bool' lvalue Var 0x56366d4f0b68 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56366d4f8928 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56366d4f88e0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56366d4f88c8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56366d4f8888 <col:56> '_Bool' lvalue Var 0x56366d4f10e0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56366d4f8910 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56366d4f88f8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56366d4f88a8 <col:74> '_Bool' lvalue Var 0x56366d4f0cd0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56366d4f89e0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56366d4f8998 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56366d4f8968 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56366d4f8a10 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56366d4f89f8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56366d4f89c0 <col:102> '_Bool' lvalue Var 0x56366d4f0cd0 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56366d4f8ac8 <line:804:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56366d4f8ab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56366d4f8a90 <col:3> 'void ()' Function 0x56366d497410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56366d4f8b20 <line:805:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56366d4f8b08 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56366d4f8ae8 <col:3> 'void ()' Function 0x56366d497350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56366d4f8df0 <line:806:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x56366d4f8b40 <col:3> '_Bool' lvalue Var 0x56366d4f11d0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56366d4f8dd8 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56366d4f8dc0 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56366d4f8da0 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x56366d4f8d80 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x56366d4f8ce8 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x56366d4f8c50 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x56366d4f8bb8 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x56366d4f8ba0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x56366d4f8b60 <col:23> 'int' lvalue Var 0x56366d4f0558 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x56366d4f8b80 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x56366d4f8c30 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x56366d4f8c18 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x56366d4f8bd8 <col:51> 'int' lvalue Var 0x56366d4f0678 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x56366d4f8bf8 <col:74> 'int' 0
    |         | `-BinaryOperator 0x56366d4f8cc8 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56366d4f8cb0 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56366d4f8c70 <col:79> 'int' lvalue Var 0x56366d4f0798 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x56366d4f8c90 <col:102> 'int' 1
    |         `-BinaryOperator 0x56366d4f8d60 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x56366d4f8d48 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56366d4f8d08 <col:107> 'int' lvalue Var 0x56366d4f08b8 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x56366d4f8d28 <col:130> 'int' 0
    |-CallExpr 0x56366d4f8e48 <line:807:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56366d4f8e30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56366d4f8e10 <col:3> 'void ()' Function 0x56366d497410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56366d4f8ec0 <line:808:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56366d4f8ea8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56366d4f8e68 <col:3> 'void (int)' Function 0x56366d4970d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56366d4f8f00 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56366d4f8ee8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56366d4f8e88 <col:21> '_Bool' lvalue Var 0x56366d4f11d0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56366d4f8f38 <line:809:3, col:10>
      `-IntegerLiteral 0x56366d4f8f18 <col:10> 'int' 0
