TranslationUnitDecl 0x55bc8f61af88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55bc8f61b848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55bc8f61b520 '__int128'
|-TypedefDecl 0x55bc8f61b8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55bc8f61b540 'unsigned __int128'
|-TypedefDecl 0x55bc8f61bbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55bc8f61b990 'struct __NSConstantString_tag'
|   `-Record 0x55bc8f61b910 '__NSConstantString_tag'
|-TypedefDecl 0x55bc8f61bc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55bc8f61bc20 'char *'
|   `-BuiltinType 0x55bc8f61b020 'char'
|-TypedefDecl 0x55bc8f65ab60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55bc8f61bf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55bc8f61bd40 'struct __va_list_tag'
|     `-Record 0x55bc8f61bcc0 '__va_list_tag'
|-FunctionDecl 0x55bc8f65aca0 <pthread-wmm/mix019_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55bc8f65abd0 <col:31> col:34 'int'
|-FunctionDecl 0x55bc8f65ae68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55bc8f65af90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55bc8f65b0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55bc8f65b048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55bc8f65b308 <col:40, col:99>
|   |-IfStmt 0x55bc8f65b2d8 <col:42, col:88>
|   | |-UnaryOperator 0x55bc8f65b1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55bc8f65b1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55bc8f65b180 <col:47> 'int' lvalue ParmVar 0x55bc8f65b048 'expression' 'int'
|   | `-CompoundStmt 0x55bc8f65b2c0 <col:59, col:88>
|   |   `-LabelStmt 0x55bc8f65b2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55bc8f65b238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55bc8f65b220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55bc8f65b1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55bc8f65af90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55bc8f65b2f0 <col:89>
|   `-ReturnStmt 0x55bc8f65b2f8 <col:91>
|-FunctionDecl 0x55bc8f65b350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55bc8f65b410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55bc8f65b790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55bc8f65b4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55bc8f65b548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55bc8f65b5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55bc8f65b648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55bc8f65b850 <line:10:22>
|-FunctionDecl 0x55bc8f6818a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55bc8f65b8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55bc8f65b940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55bc8f65b9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55bc8f65ba40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55bc8f681960 <line:13:22>
|-FunctionDecl 0x55bc8f681c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55bc8f6819d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55bc8f681a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55bc8f681ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55bc8f681cc8 <line:15:22>
|-TypedefDecl 0x55bc8f681d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55bc8f61b0e0 'unsigned char'
|-TypedefDecl 0x55bc8f681da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55bc8f61b100 'unsigned short'
|-TypedefDecl 0x55bc8f681e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55bc8f61b120 'unsigned int'
|-TypedefDecl 0x55bc8f681e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-TypedefDecl 0x55bc8f681ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55bc8f61b040 'signed char'
|-TypedefDecl 0x55bc8f681f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55bc8f61b0e0 'unsigned char'
|-TypedefDecl 0x55bc8f681fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55bc8f61b060 'short'
|-TypedefDecl 0x55bc8f682048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55bc8f61b100 'unsigned short'
|-TypedefDecl 0x55bc8f6820b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55bc8f61b080 'int'
|-TypedefDecl 0x55bc8f682128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55bc8f61b120 'unsigned int'
|-TypedefDecl 0x55bc8f682198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f682208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-TypedefDecl 0x55bc8f682278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f6822e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-TypedefDecl 0x55bc8f682358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-TypedefDecl 0x55bc8f6823c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55bc8f61b120 'unsigned int'
|-TypedefDecl 0x55bc8f682438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55bc8f61b120 'unsigned int'
|-TypedefDecl 0x55bc8f6824a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-TypedefDecl 0x55bc8f682518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-TypedefDecl 0x55bc8f682588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55bc8f61b120 'unsigned int'
|-TypedefDecl 0x55bc8f6825f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-TypedefDecl 0x55bc8f682668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f6826d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f682748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55bc8f61b080 'int'
|-RecordDecl 0x55bc8f6827a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55bc8f682918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55bc8f6829d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55bc8f682970 'struct __fsid_t' sugar
|   `-RecordType 0x55bc8f682820 '__fsid_t'
|     `-Record 0x55bc8f6827a0 ''
|-TypedefDecl 0x55bc8f682a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f682ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-TypedefDecl 0x55bc8f682b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-TypedefDecl 0x55bc8f682ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55bc8f61b120 'unsigned int'
|-TypedefDecl 0x55bc8f682c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f682c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55bc8f61b120 'unsigned int'
|-TypedefDecl 0x55bc8f682cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f682d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55bc8f61b080 'int'
|-TypedefDecl 0x55bc8f682dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55bc8f61b080 'int'
|-TypedefDecl 0x55bc8f682e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55bc8f61b080 'int'
|-TypedefDecl 0x55bc8f682eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55bc8f61b7a0 'void *'
|   `-BuiltinType 0x55bc8f61afe0 'void'
|-TypedefDecl 0x55bc8f682f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f682f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f683008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f683078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-TypedefDecl 0x55bc8f6830e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-TypedefDecl 0x55bc8f683158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-TypedefDecl 0x55bc8f6831c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-TypedefDecl 0x55bc8f683238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f6832a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f683318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f683388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-TypedefDecl 0x55bc8f683418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55bc8f6833e0 '__off64_t' sugar
|   |-Typedef 0x55bc8f6826d8 '__off64_t'
|   `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f683510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55bc8f6834d0 '__quad_t *'
|   `-TypedefType 0x55bc8f683470 '__quad_t' sugar
|     |-Typedef 0x55bc8f682278 '__quad_t'
|     `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f683580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55bc8f61bc20 'char *'
|   `-BuiltinType 0x55bc8f61b020 'char'
|-TypedefDecl 0x55bc8f6835f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f683660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55bc8f61b120 'unsigned int'
|-FunctionDecl 0x55bc8f6837a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55bc8f6836d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55bc8f683ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55bc8f683ad8 <line:72:3, col:34>
|     `-CallExpr 0x55bc8f683a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55bc8f683a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55bc8f683a10 <col:10> '<builtin fn type>' Function 0x55bc8f683880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55bc8f683ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55bc8f683a30 <col:29> 'unsigned int' lvalue ParmVar 0x55bc8f6836d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55bc8f683880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55bc8f683920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55bc8f683990 <col:10> Implicit
| `-ConstAttr 0x55bc8f6839e8 <col:10> Implicit
|-FunctionDecl 0x55bc8f683c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55bc8f683b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55bc8f683f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55bc8f683f48 <line:77:3, col:34>
|     `-CallExpr 0x55bc8f683f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55bc8f683ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55bc8f683e78 <col:10> '<builtin fn type>' Function 0x55bc8f683ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55bc8f683f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55bc8f683e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55bc8f683b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55bc8f683ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55bc8f683d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55bc8f683df8 <col:10> Implicit
| `-ConstAttr 0x55bc8f683e50 <col:10> Implicit
|-TypedefDecl 0x55bc8f683f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-TypedefDecl 0x55bc8f684018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55bc8f683fe0 '__time_t' sugar
|   |-Typedef 0x55bc8f682c18 '__time_t'
|   `-BuiltinType 0x55bc8f61b0a0 'long'
|-RecordDecl 0x55bc8f684070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55bc8f684128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55bc8f6841b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55bc8f684248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55bc8f684210 '__pid_t' sugar
|   |-Typedef 0x55bc8f682748 '__pid_t'
|   `-BuiltinType 0x55bc8f61b080 'int'
|-RecordDecl 0x55bc8f6842a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55bc8f684360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55bc8f6843b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55bc8f684470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55bc8f6844d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-RecordDecl 0x55bc8f684530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55bc8f6847c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55bc8f6868b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55bc8f684810 'struct cpu_set_t' sugar
|   `-RecordType 0x55bc8f6845b0 'cpu_set_t'
|     `-Record 0x55bc8f684530 ''
|-FunctionDecl 0x55bc8f686b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55bc8f686958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55bc8f686a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55bc8f686c38 <line:107:19>
|-FunctionDecl 0x55bc8f686e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55bc8f686ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55bc8f686eb8 <col:69>
|-FunctionDecl 0x55bc8f687030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55bc8f686f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55bc8f6870d8 <col:64>
|-FunctionDecl 0x55bc8f687398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55bc8f687140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55bc8f687278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55bc8f687448 <line:113:22>
|-FunctionDecl 0x55bc8f6876c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55bc8f6874b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55bc8f6875a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55bc8f687778 <col:88>
|-FunctionDecl 0x55bc8f687a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55bc8f6877e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55bc8f6878c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55bc8f687950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55bc8f687b50 <col:62>
|-FunctionDecl 0x55bc8f687cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55bc8f687bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55bc8f687d70 <col:63>
|-FunctionDecl 0x55bc8f687e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55bc8f687f38 <col:47>
|-FunctionDecl 0x55bc8f688040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55bc8f687fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55bc8f6880e8 <col:69>
|-FunctionDecl 0x55bc8f6881f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55bc8f688158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55bc8f688298 <col:69>
|-FunctionDecl 0x55bc8f688558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55bc8f688300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55bc8f688438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55bc8f688608 <col:88>
|-TypedefDecl 0x55bc8f688698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55bc8f688660 '__clock_t' sugar
|   |-Typedef 0x55bc8f682a58 '__clock_t'
|   `-BuiltinType 0x55bc8f61b0a0 'long'
|-TypedefDecl 0x55bc8f688728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55bc8f6886f0 '__clockid_t' sugar
|   |-Typedef 0x55bc8f682e48 '__clockid_t'
|   `-BuiltinType 0x55bc8f61b080 'int'
|-TypedefDecl 0x55bc8f6887b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55bc8f688780 '__timer_t' sugar
|   |-Typedef 0x55bc8f682eb8 '__timer_t'
|   `-PointerType 0x55bc8f61b7a0 'void *'
|     `-BuiltinType 0x55bc8f61afe0 'void'
|-RecordDecl 0x55bc8f688810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55bc8f6888e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55bc8f688950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55bc8f6889b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55bc8f688a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55bc8f688a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55bc8f688af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55bc8f688b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55bc8f688bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55bc8f688c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55bc8f688c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55bc8f688cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55bc8f688d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55bc8f688e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55bc8f688e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55bc8f688f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55bc8f689100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55bc8f6891a0 <col:45>
|-FunctionDecl 0x55bc8f689380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55bc8f689270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55bc8f689428 <col:54>
|-FunctionDecl 0x55bc8f689628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55bc8f689490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55bc8f689508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55bc8f6896d8 <line:157:22>
| `-ConstAttr 0x55bc8f689730 <col:63>
|-FunctionDecl 0x55bc8f68a560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55bc8f689828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55bc8f68a608 <col:56>
|-FunctionDecl 0x55bc8f68a9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55bc8f68a678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55bc8f68a6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55bc8f68a770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55bc8f68a868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55bc8f68aa70 <col:54>
|-RecordDecl 0x55bc8f68aac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55bc8f68ab78 parent 0x55bc8f61af88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55bc8f68add8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55bc8f68ae78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55bc8f68aee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55bc8f68af48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55bc8f68b038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55bc8f68b158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55bc8f68b100 'struct __locale_struct *'
|   `-ElaboratedType 0x55bc8f68b090 'struct __locale_struct' sugar
|     `-RecordType 0x55bc8f68ab50 'struct __locale_struct'
|       `-Record 0x55bc8f68aac8 '__locale_struct'
|-TypedefDecl 0x55bc8f68b208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55bc8f68b1d0 '__locale_t' sugar
|   |-Typedef 0x55bc8f68b158 '__locale_t'
|   `-PointerType 0x55bc8f68b100 'struct __locale_struct *'
|     `-ElaboratedType 0x55bc8f68b090 'struct __locale_struct' sugar
|       `-RecordType 0x55bc8f68ab50 'struct __locale_struct'
|         `-Record 0x55bc8f68aac8 '__locale_struct'
|-FunctionDecl 0x55bc8f68b610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55bc8f68b278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55bc8f68b2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55bc8f68b370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55bc8f68b400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55bc8f68b478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55bc8f68b6d8 <col:40>
|-FunctionDecl 0x55bc8f68b8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55bc8f68b7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55bc8f68b970 <col:66>
|-FunctionDecl 0x55bc8f68ba80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55bc8f68b9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55bc8f68bb28 <col:69>
|-FunctionDecl 0x55bc8f68bd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55bc8f68bb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55bc8f68bc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55bc8f68be08 <col:52>
|-FunctionDecl 0x55bc8f68bfb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55bc8f68be70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55bc8f68bf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55bc8f68c060 <col:55>
|-FunctionDecl 0x55bc8f68c1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55bc8f68c0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55bc8f68c2a0 <col:62>
|-FunctionDecl 0x55bc8f68c418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55bc8f68c308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55bc8f68c4c0 <col:60>
|-FunctionDecl 0x55bc8f68c718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55bc8f68c578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55bc8f68c5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55bc8f68c7c8 <col:44>
|-FunctionDecl 0x55bc8f68c9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55bc8f68c830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55bc8f68c8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55bc8f68ca88 <col:49>
|-VarDecl 0x55bc8f68cb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55bc8f68cc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55bc8f68cc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55bc8f68cd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55bc8f68ce80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55bc8f68cf20 <col:42>
|-VarDecl 0x55bc8f68cf90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55bc8f68d010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55bc8f68d198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55bc8f68d088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55bc8f68d240 <col:57>
|-FunctionDecl 0x55bc8f68d350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55bc8f68d2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55bc8f68d3f8 <col:56>
|-FunctionDecl 0x55bc8f68e540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55bc8f68d478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55bc8f68e5e8 <col:59>
|-FunctionDecl 0x55bc8f68e6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55bc8f68e658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55bc8f68e798 <col:48>
| `-ConstAttr 0x55bc8f68e7f0 <col:89>
|-FunctionDecl 0x55bc8f68ea58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55bc8f68e8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55bc8f68e938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55bc8f68ecb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55bc8f68eb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55bc8f68ebd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55bc8f68ed68 <col:88>
|-FunctionDecl 0x55bc8f68ef00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55bc8f68edd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55bc8f68ee60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55bc8f68efb0 <col:88>
|-FunctionDecl 0x55bc8f68f1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55bc8f68f018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55bc8f68f0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55bc8f68f278 <line:208:22>
|-FunctionDecl 0x55bc8f68f5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55bc8f68f2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55bc8f68f360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55bc8f68f3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55bc8f68f480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55bc8f68f8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55bc8f68f6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55bc8f68f7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55bc8f68f998 <col:85>
|-FunctionDecl 0x55bc8f68fd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55bc8f68fa00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55bc8f68fb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55bc8f68fc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55bc8f68fe40 <col:52>
|-FunctionDecl 0x55bc8f68ffb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55bc8f68fea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55bc8f690060 <col:61>
|-FunctionDecl 0x55bc8f690560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55bc8f6900c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55bc8f690148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55bc8f690278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55bc8f690368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55bc8f690620 <col:62>
|-FunctionDecl 0x55bc8f690838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55bc8f690688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55bc8f690718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55bc8f6908e8 <line:221:22>
|-FunctionDecl 0x55bc8f6909e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55bc8f690950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55bc8f690a90 <col:65>
|-TypedefDecl 0x55bc8f690b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55bc8f61b140 'unsigned long'
|-RecordDecl 0x55bc8f690b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55bc8f690ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55bc8f690d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55bc8f690db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55bc8f690d60 'union pthread_attr_t' sugar
|   `-RecordType 0x55bc8f690be0 'union pthread_attr_t'
|     `-Record 0x55bc8f690b58 'pthread_attr_t'
|-RecordDecl 0x55bc8f690e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55bc8f690f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55bc8f691000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55bc8f6910b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55bc8f691050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55bc8f690e90 'struct __pthread_internal_list'
|     `-Record 0x55bc8f690e10 '__pthread_internal_list'
|-RecordDecl 0x55bc8f691120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55bc8f6911c8 parent 0x55bc8f61af88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55bc8f6912a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55bc8f691308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55bc8f691370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55bc8f6913d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55bc8f691440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55bc8f6914a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55bc8f695580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55bc8f695630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55bc8f695720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55bc8f695788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55bc8f695910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55bc8f6958b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55bc8f6911a0 'pthread_mutex_t'
|     `-Record 0x55bc8f691120 ''
|-RecordDecl 0x55bc8f695980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55bc8f695ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55bc8f695b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55bc8f695be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55bc8f695b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55bc8f695a00 'pthread_mutexattr_t'
|     `-Record 0x55bc8f695980 ''
|-RecordDecl 0x55bc8f695c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55bc8f695cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55bc8f695dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55bc8f695e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55bc8f695e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55bc8f695ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55bc8f695f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55bc8f695fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55bc8f696030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55bc8f696098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55bc8f696150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix019_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix019_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55bc8f696240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55bc8f6962a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55bc8f6963e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55bc8f696380 'union pthread_cond_t' sugar
|   `-RecordType 0x55bc8f695cd0 'pthread_cond_t'
|     `-Record 0x55bc8f695c50 ''
|-RecordDecl 0x55bc8f696450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55bc8f696590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55bc8f6965f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55bc8f6966b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55bc8f696650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55bc8f6964d0 'pthread_condattr_t'
|     `-Record 0x55bc8f696450 ''
|-TypedefDecl 0x55bc8f696738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55bc8f61b120 'unsigned int'
|-TypedefDecl 0x55bc8f6967a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55bc8f61b080 'int'
|-RecordDecl 0x55bc8f696800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55bc8f6968a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55bc8f696970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55bc8f6969d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55bc8f696a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55bc8f696aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55bc8f696b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55bc8f696b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55bc8f696be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55bc8f696c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55bc8f696cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55bc8f696d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55bc8f696d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55bc8f696e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix019_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix019_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55bc8f696ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55bc8f696f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55bc8f697090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55bc8f697030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55bc8f696880 'pthread_rwlock_t'
|     `-Record 0x55bc8f696800 ''
|-RecordDecl 0x55bc8f697100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55bc8f697240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55bc8f6972a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55bc8f697360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55bc8f697300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55bc8f697180 'pthread_rwlockattr_t'
|     `-Record 0x55bc8f697100 ''
|-TypedefDecl 0x55bc8f6973e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55bc8f61b084 'volatile int' volatile
|   `-BuiltinType 0x55bc8f61b080 'int'
|-RecordDecl 0x55bc8f697440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55bc8f6995b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55bc8f699618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55bc8f6996d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55bc8f699670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55bc8f6974c0 'pthread_barrier_t'
|     `-Record 0x55bc8f697440 ''
|-RecordDecl 0x55bc8f699740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55bc8f699840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55bc8f6998a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55bc8f699960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55bc8f699900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55bc8f6997c0 'pthread_barrierattr_t'
|     `-Record 0x55bc8f699740 ''
|-TypedefDecl 0x55bc8f699a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55bc8f699a10 'long [8]' 8 
|   `-BuiltinType 0x55bc8f61b0a0 'long'
|-EnumDecl 0x55bc8f699ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55bc8f699b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55bc8f699be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55bc8f699c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55bc8f699d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55bc8f699d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55bc8f699da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55bc8f699df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55bc8f699e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55bc8f699e68 <col:26> 'int'
| |   `-DeclRefExpr 0x55bc8f699e48 <col:26> 'int' EnumConstant 0x55bc8f699d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55bc8f699f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55bc8f699ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55bc8f699ed0 <col:29> 'int' EnumConstant 0x55bc8f699d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55bc8f699f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55bc8f699f78 <col:30> 'int'
| |   `-DeclRefExpr 0x55bc8f699f58 <col:30> 'int' EnumConstant 0x55bc8f699da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55bc8f69a018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55bc8f69a000 <col:27> 'int'
|     `-DeclRefExpr 0x55bc8f699fe0 <col:27> 'int' EnumConstant 0x55bc8f699e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55bc8f69a068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55bc8f69a138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55bc8f69a1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55bc8f69a1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55bc8f69a188 <col:30> 'int' EnumConstant 0x55bc8f69a138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55bc8f69a210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55bc8f69a298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55bc8f69a280 <col:29> 'int'
|     `-DeclRefExpr 0x55bc8f69a260 <col:29> 'int' EnumConstant 0x55bc8f69a210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55bc8f69a2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55bc8f69a3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55bc8f69a408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55bc8f69a458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55bc8f69a4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55bc8f69a5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55bc8f69a610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55bc8f69a660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55bc8f69a6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55bc8f69a6d0 <col:31> 'int'
|     `-DeclRefExpr 0x55bc8f69a6b0 <col:31> 'int' EnumConstant 0x55bc8f69a5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55bc8f69a738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55bc8f69a808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55bc8f69a858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55bc8f69a8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55bc8f69a978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55bc8f69a9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55bc8f69aa18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55bc8f69aae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55bc8f69ab38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55bc8f69ab88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55bc8f69adc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55bc8f69ae30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55bc8f69ae98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55bc8f69afb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55bc8f69b008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55bc8f69b0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55bc8f69b128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55bc8f69b178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55bc8f69b248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55bc8f69b298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55bc8f69b8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55bc8f69b390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55bc8f69b4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bc8f69b6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55bc8f69b760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55bc8f69b9b8 <col:47>
| |-NonNullAttr 0x55bc8f69ba10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55bc8f69ba48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55bc8f69bb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55bc8f69baa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55bc8f69bdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55bc8f69bc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55bc8f69bca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55bc8f69bf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55bc8f69be88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55bc8f69c040 <col:60>
|-FunctionDecl 0x55bc8f69c190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55bc8f69c230 <col:54>
| `-ConstAttr 0x55bc8f69c288 <col:95>
|-FunctionDecl 0x55bc8f69c458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55bc8f69c2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55bc8f69c338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55bc8f69c508 <line:394:19>
| `-ConstAttr 0x55bc8f69c560 <col:60>
|-FunctionDecl 0x55bc8f69cf68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55bc8f69ce30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55bc8f69d010 <col:71>
| `-NonNullAttr 0x55bc8f69d068 <col:112, col:126> 1
|-FunctionDecl 0x55bc8f69d170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55bc8f69d0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55bc8f69d218 <line:397:22>
| `-NonNullAttr 0x55bc8f69d270 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f69d498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55bc8f69d2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55bc8f69d338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55bc8f69d548 <line:400:22>
| `-NonNullAttr 0x55bc8f69d5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f69d7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55bc8f69d5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bc8f69d668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55bc8f69d858 <line:403:22>
| `-NonNullAttr 0x55bc8f69d8b0 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f69db08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55bc8f69d8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55bc8f69d9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55bc8f69dbb8 <line:406:22>
| `-NonNullAttr 0x55bc8f69dc10 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f69ee48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55bc8f69dc58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bc8f69dcd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55bc8f69eef8 <line:409:22>
| `-NonNullAttr 0x55bc8f69ef50 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f69f188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55bc8f69ef98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bc8f69f028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55bc8f69f238 <line:412:22>
| `-NonNullAttr 0x55bc8f69f290 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f69f4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55bc8f69f2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bc8f69f368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55bc8f69f578 <col:37>
| `-NonNullAttr 0x55bc8f69f5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55bc8f69f7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bc8f69f618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bc8f69f698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55bc8f69f868 <line:418:22>
| `-NonNullAttr 0x55bc8f69f8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f69fa48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55bc8f69f908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bc8f69f988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55bc8f69faf8 <line:420:22>
| `-NonNullAttr 0x55bc8f69fb50 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f69fcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bc8f69fb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bc8f69fc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55bc8f69fda8 <line:423:22>
| `-NonNullAttr 0x55bc8f6a0e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f6a0fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55bc8f6a0e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bc8f6a0ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55bc8f6a1068 <line:426:22>
| `-NonNullAttr 0x55bc8f6a10c0 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6a1268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bc8f6a1108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bc8f6a1188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55bc8f6a1318 <line:429:22>
| `-NonNullAttr 0x55bc8f6a1370 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f6a14f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55bc8f6a13b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bc8f6a1438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55bc8f6a15a8 <line:431:22>
| `-NonNullAttr 0x55bc8f6a1600 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6a1828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55bc8f6a1648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bc8f6a16c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55bc8f6a18d8 <line:434:22>
| |-NonNullAttr 0x55bc8f6a1930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55bc8f6a1968 <col:100> "" ""
|-FunctionDecl 0x55bc8f6a1b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55bc8f6a19b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bc8f6a1a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55bc8f6a1c28 <line:437:22>
| |-NonNullAttr 0x55bc8f6a1c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55bc8f6a1cb8 <col:97> "" ""
|-FunctionDecl 0x55bc8f6a1eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55bc8f6a1d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bc8f6a1d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55bc8f6a1f68 <line:440:22>
| `-NonNullAttr 0x55bc8f6a1fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f6a2140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55bc8f6a2008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bc8f6a2080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55bc8f6a21f0 <line:443:22>
| `-NonNullAttr 0x55bc8f6a2248 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6a2538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55bc8f6a2298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bc8f6a2318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55bc8f6a2390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55bc8f6a25f0 <line:447:22>
| `-NonNullAttr 0x55bc8f6a2648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55bc8f6a28f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55bc8f6a26a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bc8f6a2720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55bc8f6a2798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55bc8f6a29b0 <col:43>
| `-NonNullAttr 0x55bc8f6a2a08 <col:84, col:98> 1
|-FunctionDecl 0x55bc8f6a2cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55bc8f6a2a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55bc8f6a2ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55bc8f6a2b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55bc8f6a2d80 <line:452:22>
| `-NonNullAttr 0x55bc8f6a2dd8 <col:63, col:77> 3
|-FunctionDecl 0x55bc8f6a30e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55bc8f6a2e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55bc8f6a2ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55bc8f6a2f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55bc8f6a31a0 <line:456:22>
| `-NonNullAttr 0x55bc8f6a31f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55bc8f6a33e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55bc8f6a3248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55bc8f6a32c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55bc8f6a3498 <line:458:22>
|-FunctionDecl 0x55bc8f6a3868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55bc8f6a3560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55bc8f6a3700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55bc8f6a3918 <col:52, col:69> 1 2
|-FunctionDecl 0x55bc8f6a3ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55bc8f6a39a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55bc8f6a3a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55bc8f6a3ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55bc8f6a3b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55bc8f6a3c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55bc8f6a3e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55bc8f6a3d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55bc8f6a3fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55bc8f6a4040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55bc8f6a40e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55bc8f6a41d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55bc8f6a4240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55bc8f6a4410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix019_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55bc8f6a4508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55bc8f6a45c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55bc8f6a4560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55bc8f6a40c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55bc8f6a4040 ''
| `-AlignedAttr 0x55bc8f6a4618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55bc8f6a4690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55bc8f6a47f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55bc8f6a4858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55bc8f6a48c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55bc8f6a4928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55bc8f6a4b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55bc8f6a4a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55bc8f6a4c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55bc8f6a4be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55bc8f6a4e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55bc8f6a4d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55bc8f6a4f18 <line:487:22>
|-RecordDecl 0x55bc8f6a4f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55bc8f6a5288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55bc8f6a50e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55bc8f6a5168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55bc8f6a5338 <col:86>
| `-ReturnsTwiceAttr 0x55bc8f6a5390 <col:12> Implicit
|-FunctionDecl 0x55bc8f6a56b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55bc8f6a5460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55bc8f6a5570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55bc8f6a5768 <line:493:22>
| `-NonNullAttr 0x55bc8f6a57c0 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6a5938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55bc8f6a5808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55bc8f6a59e0 <line:495:22>
| `-NonNullAttr 0x55bc8f6a5a38 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6a5b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55bc8f6a5a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55bc8f6a5be8 <line:497:22>
| `-NonNullAttr 0x55bc8f6a5c40 <col:52, col:66> 1
|-FunctionDecl 0x55bc8f6a5d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55bc8f6a5c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55bc8f6a5de8 <line:499:22>
| `-NonNullAttr 0x55bc8f6a5e40 <col:52, col:66> 1
|-FunctionDecl 0x55bc8f6a6088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55bc8f6a5e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55bc8f6a5f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55bc8f6a6138 <col:36>
| `-NonNullAttr 0x55bc8f6a6190 <col:66, col:83> 1 2
|-FunctionDecl 0x55bc8f6a6290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55bc8f6a61d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55bc8f6a6338 <line:504:22>
| `-NonNullAttr 0x55bc8f6a6390 <col:52, col:66> 1
|-FunctionDecl 0x55bc8f6a6628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bc8f6a6440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55bc8f6a64c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55bc8f6a66d8 <line:508:22>
| `-NonNullAttr 0x55bc8f6a6730 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f6a69f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55bc8f6a6778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55bc8f6a67f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55bc8f6a6878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55bc8f6a6ab0 <line:512:22>
| `-NonNullAttr 0x55bc8f6a6b08 <col:63, col:80> 1 3
|-FunctionDecl 0x55bc8f6a6c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55bc8f6a6b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55bc8f6a6cb8 <line:514:22>
| `-NonNullAttr 0x55bc8f6a6d10 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6a6f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55bc8f6a6dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55bc8f6a6fe0 <line:516:22>
| `-NonNullAttr 0x55bc8f6a7038 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6a7140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55bc8f6a7088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55bc8f6a71e8 <line:518:22>
| `-NonNullAttr 0x55bc8f6a7240 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6a7468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bc8f6a7288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55bc8f6a7308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55bc8f6a7518 <line:522:22>
| `-NonNullAttr 0x55bc8f6a7570 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f6a7778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55bc8f6a75b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bc8f6a7638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55bc8f6a7828 <line:525:22>
| `-NonNullAttr 0x55bc8f6a7880 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6a7a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bc8f6a78c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55bc8f6a7948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55bc8f6a7ad8 <line:528:22>
| `-NonNullAttr 0x55bc8f6a7b30 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f6a7cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55bc8f6a7b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bc8f6a7bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55bc8f6a7d68 <line:530:22>
| `-NonNullAttr 0x55bc8f6a7dc0 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6a8f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bc8f6a7e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55bc8f6a8eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55bc8f6a9040 <line:534:22>
| `-NonNullAttr 0x55bc8f6a9098 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f6a9228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55bc8f6a90e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bc8f6a9168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55bc8f6a92d8 <line:537:22>
| `-NonNullAttr 0x55bc8f6a9330 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6a94d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bc8f6a9378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55bc8f6a93f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55bc8f6a9588 <line:541:22>
| `-NonNullAttr 0x55bc8f6a95e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f6a9768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55bc8f6a9628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bc8f6a96a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55bc8f6a9818 <line:544:22>
| `-NonNullAttr 0x55bc8f6a9870 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6a9a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55bc8f6a98b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bc8f6a9938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55bc8f6a9b08 <line:547:22>
| `-NonNullAttr 0x55bc8f6a9b60 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f6a9ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55bc8f6a9ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bc8f6a9c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55bc8f6a9d98 <line:550:22>
| `-NonNullAttr 0x55bc8f6a9df0 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6ab168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55bc8f6aaf10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55bc8f6ab020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55bc8f6ab218 <col:29>
| `-NonNullAttr 0x55bc8f6ab270 <col:70, col:84> 1
|-FunctionDecl 0x55bc8f6ab3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bc8f6ab2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bc8f6ab490 <line:555:22>
| `-NonNullAttr 0x55bc8f6ab4e8 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6ab5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bc8f6ab538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bc8f6ab698 <line:557:22>
| `-NonNullAttr 0x55bc8f6ab6f0 <col:52, col:66> 1
|-FunctionDecl 0x55bc8f6ab7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bc8f6ab738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bc8f6ab898 <line:559:19>
| `-NonNullAttr 0x55bc8f6ab8f0 <col:49, col:63> 1
|-FunctionDecl 0x55bc8f6abb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55bc8f6ab938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55bc8f6ab9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55bc8f6abbd8 <col:39>
| `-NonNullAttr 0x55bc8f6abc30 <col:69, col:86> 1 2
|-FunctionDecl 0x55bc8f6abd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bc8f6abc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bc8f6abdd8 <line:564:22>
| `-NonNullAttr 0x55bc8f6abe30 <col:52, col:66> 1
|-FunctionDecl 0x55bc8f6abf98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bc8f6abee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bc8f6ac040 <line:566:22>
| `-NonNullAttr 0x55bc8f6ac098 <col:52, col:66> 1
|-FunctionDecl 0x55bc8f6ac258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55bc8f6ac0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55bc8f6ac178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55bc8f6ac308 <col:39>
| `-NonNullAttr 0x55bc8f6ac360 <col:69, col:86> 1 2
|-FunctionDecl 0x55bc8f6ac460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bc8f6ac3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bc8f6ac508 <line:571:22>
| `-NonNullAttr 0x55bc8f6ac560 <col:52, col:66> 1
|-FunctionDecl 0x55bc8f6ac748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55bc8f6ac610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55bc8f6ac7f0 <line:573:22>
| `-NonNullAttr 0x55bc8f6ac848 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6ac950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55bc8f6ac898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55bc8f6ac9f8 <line:575:22>
| `-NonNullAttr 0x55bc8f6aca50 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6acc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bc8f6aca98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55bc8f6acb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55bc8f6acd28 <line:579:22>
| `-NonNullAttr 0x55bc8f6acd80 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f6acfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55bc8f6acdc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55bc8f6ace48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55bc8f6ad058 <line:582:22>
| `-NonNullAttr 0x55bc8f6ad0b0 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6ad258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bc8f6ad0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55bc8f6ad178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55bc8f6ad308 <line:586:22>
| `-NonNullAttr 0x55bc8f6ad360 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f6ad4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55bc8f6ad3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55bc8f6ad428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55bc8f6ad598 <col:36>
| `-NonNullAttr 0x55bc8f6ad5f0 <col:77, col:91> 1
|-FunctionDecl 0x55bc8f6ad928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55bc8f6ad6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55bc8f6ad7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55bc8f6ad9d8 <line:591:22>
| `-NonNullAttr 0x55bc8f6ada30 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6adba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55bc8f6ada78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55bc8f6adc50 <line:593:22>
| `-NonNullAttr 0x55bc8f6adca8 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6addb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55bc8f6adcf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55bc8f6ade58 <line:595:22>
| `-NonNullAttr 0x55bc8f6adeb0 <col:52, col:66> 1
|-FunctionDecl 0x55bc8f6adfc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55bc8f6adf10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55bc8f6ae070 <line:597:22>
| `-NonNullAttr 0x55bc8f6ae0c8 <col:52, col:66> 1
|-FunctionDecl 0x55bc8f6ae2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55bc8f6ae118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55bc8f6ae190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55bc8f6ae3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55bc8f6ae6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55bc8f6ae428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55bc8f6ae4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55bc8f6ae530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55bc8f6ae790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55bc8f6ae9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55bc8f6ae870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55bc8f6aea50 <line:606:22>
| `-NonNullAttr 0x55bc8f6aeaa8 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6aebb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55bc8f6aeaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55bc8f6aec58 <line:608:22>
| `-NonNullAttr 0x55bc8f6aecb0 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6aef10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bc8f6aecf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55bc8f6aed78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55bc8f6aefc0 <line:612:22>
| `-NonNullAttr 0x55bc8f6af018 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f6af228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55bc8f6af068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55bc8f6af0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55bc8f6af2d8 <col:37>
| `-NonNullAttr 0x55bc8f6af330 <col:78, col:92> 1
|-FunctionDecl 0x55bc8f6af548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55bc8f6af378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55bc8f6af420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55bc8f6af5f8 <line:618:22>
| `-NonNullAttr 0x55bc8f6af650 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f6af818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55bc8f6af698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55bc8f6af710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55bc8f6af8c8 <line:621:22>
| `-NonNullAttr 0x55bc8f6af920 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6afbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55bc8f6afa00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55bc8f6afa80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55bc8f6afc78 <line:623:22>
| `-NonNullAttr 0x55bc8f6afcd0 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6afe48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55bc8f6afd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55bc8f6aff20 <line:625:22>
| `-NonNullAttr 0x55bc8f6aff78 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6b0080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55bc8f6affc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55bc8f6b0128 <line:627:22>
| `-NonNullAttr 0x55bc8f6b0180 <col:52, col:66> 1
|-FunctionDecl 0x55bc8f6b0280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55bc8f6b01c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55bc8f6b0328 <line:629:22>
| `-NonNullAttr 0x55bc8f6b0380 <col:52, col:66> 1
|-FunctionDecl 0x55bc8f6b0480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55bc8f6b03c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55bc8f6b0528 <line:631:22>
| `-NonNullAttr 0x55bc8f6b0580 <col:52, col:66> 1
|-FunctionDecl 0x55bc8f6b0958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55bc8f6b0660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55bc8f6b0770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55bc8f6b07f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55bc8f6b0a10 <line:635:22>
| `-NonNullAttr 0x55bc8f6b0a68 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6b0be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55bc8f6b0ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55bc8f6b0c90 <line:637:22>
| `-NonNullAttr 0x55bc8f6b0ce8 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6b0df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55bc8f6b0d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55bc8f6b0e98 <line:639:22>
| `-NonNullAttr 0x55bc8f6b0ef0 <col:52, col:66> 1
|-FunctionDecl 0x55bc8f6b10e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55bc8f6b0fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55bc8f6b1190 <line:641:22>
| `-NonNullAttr 0x55bc8f6b11e8 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6b12f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55bc8f6b1238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55bc8f6b1398 <line:643:22>
| `-NonNullAttr 0x55bc8f6b13f0 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6b1618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bc8f6b1438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55bc8f6b14b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55bc8f6b16c8 <line:647:22>
| `-NonNullAttr 0x55bc8f6b1720 <col:63, col:80> 1 2
|-FunctionDecl 0x55bc8f6b1928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55bc8f6b1768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55bc8f6b17e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55bc8f6b19d8 <line:650:22>
| `-NonNullAttr 0x55bc8f6b1a30 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6b1d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55bc8f6b1b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55bc8f6b1c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55bc8f6b1e28 <line:653:22>
| `-NonNullAttr 0x55bc8f6b1e80 <col:63, col:77> 1
|-FunctionDecl 0x55bc8f6b1fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55bc8f6b1ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55bc8f6b2090 <col:69>
|-FunctionDecl 0x55bc8f6b2208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55bc8f6b20f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55bc8f6b22b0 <col:72>
|-FunctionDecl 0x55bc8f6b24e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55bc8f6b2318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55bc8f6b23c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55bc8f6b2598 <col:44>
|-FunctionDecl 0x55bc8f6b27b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55bc8f6b2600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55bc8f6b2678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55bc8f6b2868 <line:660:22>
| `-NonNullAttr 0x55bc8f6b28c0 <col:63, col:77> 2
|-FunctionDecl 0x55bc8f6b2d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55bc8f6b29a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55bc8f6b2ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55bc8f6b2bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55bc8f6b2dc0 <col:47>
|-FunctionDecl 0x55bc8f6b3f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55bc8f6b2e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55bc8f6b40b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55bc8f6b4020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55bc8f6b4210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55bc8f6b4178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55bc8f6b42d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55bc8f6b4398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55bc8f6b4458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55bc8f6b4510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55bc8f6b4590 prev 0x55bc8f6b4510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55bc8f6b45f8 <col:24> 'int' 0
|-VarDecl 0x55bc8f6b4630 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55bc8f6b46b0 prev 0x55bc8f6b4630 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55bc8f6b4718 <col:27> 'int' 0
|-VarDecl 0x55bc8f6b4750 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55bc8f6b47d0 prev 0x55bc8f6b4750 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55bc8f6b4838 <col:27> 'int' 0
|-VarDecl 0x55bc8f6b4870 <line:677:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55bc8f6b48f0 prev 0x55bc8f6b4870 <line:678:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55bc8f6b4958 <col:27> 'int' 0
|-VarDecl 0x55bc8f6b4988 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55bc8f6b4a00 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55bc8f6b4a80 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x55bc8f6b4b00 prev 0x55bc8f6b4a80 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55bc8f6b4b68 <col:9> 'int' 0
|-VarDecl 0x55bc8f6b4ba0 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x55bc8f6b4c20 prev 0x55bc8f6b4ba0 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55bc8f6b4c88 <col:9> 'int' 0
|-VarDecl 0x55bc8f6b4cb8 <line:685:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55bc8f6b4d38 <line:686:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55bc8f6b4db0 <line:687:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55bc8f6b4e28 <line:688:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55bc8f6b4ea0 <line:689:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55bc8f6b4f70 <line:690:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x55bc8f6b4fe8 <line:691:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55bc8f6b5060 <line:692:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55bc8f6b50d8 <line:693:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55bc8f6b5150 <line:694:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x55bc8f6b51c8 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55bc8f6b5248 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55bc8f6b52c8 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55bc8f6b5340 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55bc8f6b53c0 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55bc8f6b5438 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55bc8f6b54b8 <line:701:1, col:5> col:5 used z 'int'
|-VarDecl 0x55bc8f6b5538 prev 0x55bc8f6b54b8 <line:702:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55bc8f6b55a0 <col:9> 'int' 0
|-VarDecl 0x55bc8f6b55d0 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55bc8f6b5648 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55bc8f6b5760 prev 0x55bc8f6b3f60 <line:705:1, line:719:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55bc8f6b56c8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55bc8f6b5d18 <line:706:1, line:719:1>
|   |-CallExpr 0x55bc8f6b5878 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b5860 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b5808 <col:3> 'void ()' Function 0x55bc8f65b350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bc8f6b58d8 <line:708:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6b5898 <col:3> 'int' lvalue Var 0x55bc8f6b5538 'z' 'int'
|   | `-IntegerLiteral 0x55bc8f6b58b8 <col:7> 'int' 1
|   |-CallExpr 0x55bc8f6b5930 <line:709:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b5918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b58f8 <col:3> 'void ()' Function 0x55bc8f65b410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bc8f6b5988 <line:710:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b5970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b5950 <col:3> 'void ()' Function 0x55bc8f65b350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bc8f6b59e8 <line:711:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6b59a8 <col:3> 'int' lvalue Var 0x55bc8f6b4b00 'x' 'int'
|   | `-IntegerLiteral 0x55bc8f6b59c8 <col:7> 'int' 1
|   |-CallExpr 0x55bc8f6b5a40 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b5a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b5a08 <col:3> 'void ()' Function 0x55bc8f65b410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bc8f6b5a98 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b5a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b5a60 <col:3> 'void ()' Function 0x55bc8f65b350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55bc8f6b5af0 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b5ad8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b5ab8 <col:3> 'void ()' Function 0x55bc8f65b410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bc8f6b5b48 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b5b30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b5b10 <col:3> 'void ()' Function 0x55bc8f65b350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bc8f6b5c00 <line:716:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6b5b68 <col:3> 'int' lvalue Var 0x55bc8f6b4590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55bc8f6b5be0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55bc8f6b5bc8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bc8f6b5b88 <col:22> 'int' lvalue Var 0x55bc8f6b4590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55bc8f6b5ba8 <col:41> 'int' 1
|   |-CallExpr 0x55bc8f6b5c58 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b5c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b5c20 <col:3> 'void ()' Function 0x55bc8f65b410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55bc8f6b5d08 <line:718:3, col:36>
|     `-CallExpr 0x55bc8f6b5ce8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55bc8f6b5cd0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55bc8f6b5c78 <col:10> 'void *(void)' Function 0x55bc8f65ae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55bc8f6b5e38 prev 0x55bc8f6b40b8 <line:720:1, line:747:1> line:720:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55bc8f6b5da0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55bc8f6b8d40 <line:721:1, line:747:1>
|   |-CallExpr 0x55bc8f6b5f18 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b5f00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b5ee0 <col:3> 'void ()' Function 0x55bc8f65b350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bc8f6b5fa0 <line:723:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6b5f38 <col:3> 'int' lvalue Var 0x55bc8f6b4b00 'x' 'int'
|   | `-IntegerLiteral 0x55bc8f6b5f80 <col:7> 'int' 2
|   |-CallExpr 0x55bc8f6b5ff8 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b5fe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b5fc0 <col:3> 'void ()' Function 0x55bc8f65b410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bc8f6b6050 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b6038 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b6018 <col:3> 'void ()' Function 0x55bc8f65b350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bc8f6b6100 <line:726:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b6070 <col:3> '_Bool' lvalue Var 0x55bc8f6b55d0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6b60e8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55bc8f6b60c8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55bc8f6b60b0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55bc8f6b6090 <col:19> 'void *(void)' Function 0x55bc8f65ae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55bc8f6b61b0 <line:727:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b6120 <col:3> '_Bool' lvalue Var 0x55bc8f6b5648 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6b6198 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55bc8f6b6178 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55bc8f6b6160 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55bc8f6b6140 <col:19> 'void *(void)' Function 0x55bc8f65ae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55bc8f6b6228 <line:728:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b61d0 <col:3> '_Bool' lvalue Var 0x55bc8f6b4cb8 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6b6210 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bc8f6b61f0 <col:21> '_Bool' lvalue Var 0x55bc8f6b5648 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55bc8f6b62a0 <line:729:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6b6248 <col:3> 'int' lvalue Var 0x55bc8f6b4d38 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55bc8f6b6288 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bc8f6b6268 <col:15> 'int' lvalue Var 0x55bc8f6b4c20 'y' 'int'
|   |-BinaryOperator 0x55bc8f6b66d8 <line:730:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6b62c0 <col:3> 'int' lvalue Var 0x55bc8f6b4c20 'y' 'int'
|   | `-ConditionalOperator 0x55bc8f6b66a8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55bc8f6b64d0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55bc8f6b63f0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55bc8f6b6318 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55bc8f6b6300 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55bc8f6b62e0 <col:8> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55bc8f6b63d0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55bc8f6b6368 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55bc8f6b6350 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55bc8f6b6330 <col:27> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55bc8f6b63b8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55bc8f6b63a0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55bc8f6b6380 <col:46> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55bc8f6b64b0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55bc8f6b6448 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55bc8f6b6430 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55bc8f6b6410 <col:65> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55bc8f6b6498 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55bc8f6b6480 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55bc8f6b6460 <col:84> '_Bool' lvalue Var 0x55bc8f6b50d8 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55bc8f6b6690 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bc8f6b64f0 <col:101> 'int' lvalue Var 0x55bc8f6b4c20 'y' 'int'
|   |   `-ParenExpr 0x55bc8f6b6670 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55bc8f6b6640 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55bc8f6b65b0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55bc8f6b6568 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55bc8f6b6550 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55bc8f6b6510 <col:106> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55bc8f6b6598 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55bc8f6b6580 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55bc8f6b6530 <col:124> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55bc8f6b6610 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bc8f6b65d0 <col:141> 'int' lvalue Var 0x55bc8f6b52c8 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55bc8f6b6628 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bc8f6b65f0 <col:153> 'int' lvalue Var 0x55bc8f6b53c0 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55bc8f6b6be8 <line:731:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6b66f8 <col:3> 'int' lvalue Var 0x55bc8f6b52c8 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55bc8f6b6bb8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55bc8f6b6b88 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bc8f6b6b70 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bc8f6b6718 <col:15> '_Bool' lvalue Var 0x55bc8f6b5648 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55bc8f6b6ba0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bc8f6b6738 <col:31> 'int' lvalue Var 0x55bc8f6b52c8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55bc8f6b6b50 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55bc8f6b6b20 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55bc8f6b6948 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55bc8f6b6868 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55bc8f6b6790 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55bc8f6b6778 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55bc8f6b6758 <col:45> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55bc8f6b6848 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55bc8f6b67e0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55bc8f6b67c8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55bc8f6b67a8 <col:64> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55bc8f6b6830 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55bc8f6b6818 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55bc8f6b67f8 <col:83> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55bc8f6b6928 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55bc8f6b68c0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55bc8f6b68a8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55bc8f6b6888 <col:102> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55bc8f6b6910 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55bc8f6b68f8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55bc8f6b68d8 <col:121> '_Bool' lvalue Var 0x55bc8f6b50d8 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55bc8f6b6b08 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bc8f6b6968 <col:138> 'int' lvalue Var 0x55bc8f6b52c8 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55bc8f6b6ae8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55bc8f6b6ab8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55bc8f6b6a28 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55bc8f6b69e0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55bc8f6b69c8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55bc8f6b6988 <col:151> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55bc8f6b6a10 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55bc8f6b69f8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55bc8f6b69a8 <col:169> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55bc8f6b6a88 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55bc8f6b6a48 <col:186> 'int' lvalue Var 0x55bc8f6b52c8 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55bc8f6b6aa0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55bc8f6b6a68 <col:198> 'int' lvalue Var 0x55bc8f6b52c8 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55bc8f6b7110 <line:732:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6b6c08 <col:3> 'int' lvalue Var 0x55bc8f6b53c0 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55bc8f6b70e0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55bc8f6b70b0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bc8f6b7098 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bc8f6b6c28 <col:15> '_Bool' lvalue Var 0x55bc8f6b5648 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55bc8f6b70c8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bc8f6b6c48 <col:31> 'int' lvalue Var 0x55bc8f6b53c0 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55bc8f6b7078 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55bc8f6b7048 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55bc8f6b6e58 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55bc8f6b6d78 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55bc8f6b6ca0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55bc8f6b6c88 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55bc8f6b6c68 <col:45> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55bc8f6b6d58 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55bc8f6b6cf0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55bc8f6b6cd8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55bc8f6b6cb8 <col:64> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55bc8f6b6d40 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55bc8f6b6d28 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55bc8f6b6d08 <col:83> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55bc8f6b6e38 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55bc8f6b6dd0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55bc8f6b6db8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55bc8f6b6d98 <col:102> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55bc8f6b6e20 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55bc8f6b6e08 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55bc8f6b6de8 <col:121> '_Bool' lvalue Var 0x55bc8f6b50d8 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55bc8f6b7030 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bc8f6b6e78 <col:138> 'int' lvalue Var 0x55bc8f6b53c0 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55bc8f6b7010 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55bc8f6b6fe0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55bc8f6b6f38 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55bc8f6b6ef0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55bc8f6b6ed8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55bc8f6b6e98 <col:151> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55bc8f6b6f20 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55bc8f6b6f08 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55bc8f6b6eb8 <col:169> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55bc8f6b6fb0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55bc8f6b6f58 <col:186> 'int' lvalue Var 0x55bc8f6b53c0 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55bc8f6b6fc8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55bc8f6b6f90 <col:198> 'int' lvalue Var 0x55bc8f6b53c0 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55bc8f6b76b8 <line:733:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b7130 <col:3> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6b76a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bc8f6b7670 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55bc8f6b7628 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bc8f6b7610 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bc8f6b7150 <col:20> '_Bool' lvalue Var 0x55bc8f6b5648 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bc8f6b7658 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bc8f6b7640 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bc8f6b7170 <col:36> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55bc8f6b75f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55bc8f6b75c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55bc8f6b7380 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bc8f6b72a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bc8f6b71c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bc8f6b71b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bc8f6b7190 <col:55> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bc8f6b7280 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bc8f6b7218 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bc8f6b7200 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bc8f6b71e0 <col:74> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55bc8f6b7268 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bc8f6b7250 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bc8f6b7230 <col:93> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bc8f6b7360 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bc8f6b72f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bc8f6b72e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bc8f6b72c0 <col:112> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55bc8f6b7348 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bc8f6b7330 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bc8f6b7310 <col:131> '_Bool' lvalue Var 0x55bc8f6b50d8 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55bc8f6b75a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bc8f6b7590 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bc8f6b73a0 <col:148> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55bc8f6b7570 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55bc8f6b7540 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55bc8f6b7460 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bc8f6b7418 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bc8f6b7400 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bc8f6b73c0 <col:166> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bc8f6b7448 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bc8f6b7430 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bc8f6b73e0 <col:184> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55bc8f6b74f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bc8f6b74b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bc8f6b7480 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bc8f6b7528 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55bc8f6b7510 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55bc8f6b74d8 <col:212> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55bc8f6b7c80 <line:734:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b76d8 <col:3> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6b7c68 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bc8f6b7c38 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55bc8f6b7bf0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bc8f6b7bd8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bc8f6b76f8 <col:20> '_Bool' lvalue Var 0x55bc8f6b5648 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bc8f6b7c20 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bc8f6b7c08 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bc8f6b7718 <col:36> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55bc8f6b7bb8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55bc8f6b7b88 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55bc8f6b7928 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bc8f6b7848 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bc8f6b7770 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bc8f6b7758 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bc8f6b7738 <col:55> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bc8f6b7828 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bc8f6b77c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bc8f6b77a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bc8f6b7788 <col:74> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55bc8f6b7810 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bc8f6b77f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bc8f6b77d8 <col:93> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bc8f6b7908 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bc8f6b78a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bc8f6b7888 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bc8f6b7868 <col:112> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55bc8f6b78f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bc8f6b78d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bc8f6b78b8 <col:131> '_Bool' lvalue Var 0x55bc8f6b50d8 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55bc8f6b7b70 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bc8f6b7b58 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bc8f6b7948 <col:148> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55bc8f6b7b38 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55bc8f6b7b08 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55bc8f6b7a08 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bc8f6b79c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bc8f6b79a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bc8f6b7968 <col:166> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bc8f6b79f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bc8f6b79d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bc8f6b7988 <col:184> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55bc8f6b7ad8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bc8f6b7a58 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bc8f6b7a28 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bc8f6b7af0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55bc8f6b7ab0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55bc8f6b7a80 <col:219> 'int' 0
|   |-BinaryOperator 0x55bc8f6b8240 <line:735:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b7ca0 <col:3> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6b8228 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bc8f6b81f8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55bc8f6b81b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bc8f6b8198 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bc8f6b7cc0 <col:20> '_Bool' lvalue Var 0x55bc8f6b5648 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bc8f6b81e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bc8f6b81c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bc8f6b7ce0 <col:36> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55bc8f6b8178 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55bc8f6b8148 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55bc8f6b7ef0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bc8f6b7e10 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bc8f6b7d38 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bc8f6b7d20 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bc8f6b7d00 <col:55> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bc8f6b7df0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bc8f6b7d88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bc8f6b7d70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bc8f6b7d50 <col:74> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55bc8f6b7dd8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bc8f6b7dc0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bc8f6b7da0 <col:93> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bc8f6b7ed0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bc8f6b7e68 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bc8f6b7e50 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bc8f6b7e30 <col:112> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55bc8f6b7eb8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bc8f6b7ea0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bc8f6b7e80 <col:131> '_Bool' lvalue Var 0x55bc8f6b50d8 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55bc8f6b8130 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bc8f6b8118 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bc8f6b7f10 <col:148> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55bc8f6b80f8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55bc8f6b80c8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55bc8f6b7fe8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bc8f6b7fa0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bc8f6b7f70 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bc8f6b7f30 <col:166> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bc8f6b7fd0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bc8f6b7fb8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bc8f6b7f50 <col:184> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55bc8f6b8080 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bc8f6b8038 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bc8f6b8008 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bc8f6b80b0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55bc8f6b8098 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55bc8f6b8060 <col:212> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55bc8f6b8808 <line:736:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b8260 <col:3> '_Bool' lvalue Var 0x55bc8f6b50d8 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6b87f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bc8f6b87c0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55bc8f6b8778 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bc8f6b8760 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bc8f6b8280 <col:20> '_Bool' lvalue Var 0x55bc8f6b5648 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bc8f6b87a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bc8f6b8790 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bc8f6b82a0 <col:36> '_Bool' lvalue Var 0x55bc8f6b50d8 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55bc8f6b8740 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55bc8f6b8710 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55bc8f6b84b0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bc8f6b83d0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bc8f6b82f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bc8f6b82e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bc8f6b82c0 <col:55> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bc8f6b83b0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bc8f6b8348 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bc8f6b8330 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bc8f6b8310 <col:74> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55bc8f6b8398 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bc8f6b8380 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bc8f6b8360 <col:93> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bc8f6b8490 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bc8f6b8428 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bc8f6b8410 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bc8f6b83f0 <col:112> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55bc8f6b8478 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bc8f6b8460 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bc8f6b8440 <col:131> '_Bool' lvalue Var 0x55bc8f6b50d8 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55bc8f6b86f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bc8f6b86e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bc8f6b84d0 <col:148> '_Bool' lvalue Var 0x55bc8f6b50d8 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55bc8f6b86c0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55bc8f6b8690 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55bc8f6b8590 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bc8f6b8548 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bc8f6b8530 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bc8f6b84f0 <col:166> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bc8f6b8578 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bc8f6b8560 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bc8f6b8510 <col:184> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55bc8f6b8660 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bc8f6b85e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bc8f6b85b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bc8f6b8678 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55bc8f6b8638 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55bc8f6b8608 <col:219> 'int' 0
|   |-BinaryOperator 0x55bc8f6b8880 <line:737:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6b8828 <col:3> 'int' lvalue Var 0x55bc8f6b46b0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55bc8f6b8868 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bc8f6b8848 <col:25> 'int' lvalue Var 0x55bc8f6b4c20 'y' 'int'
|   |-BinaryOperator 0x55bc8f6b89b0 <line:738:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6b88a0 <col:3> 'int' lvalue Var 0x55bc8f6b4c20 'y' 'int'
|   | `-ConditionalOperator 0x55bc8f6b8980 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55bc8f6b8938 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bc8f6b8920 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bc8f6b88c0 <col:7> '_Bool' lvalue Var 0x55bc8f6b4cb8 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55bc8f6b8950 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bc8f6b88e0 <col:25> 'int' lvalue Var 0x55bc8f6b4d38 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55bc8f6b8968 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55bc8f6b8900 <col:37> 'int' lvalue Var 0x55bc8f6b4c20 'y' 'int'
|   |-BinaryOperator 0x55bc8f6b8a48 <line:739:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b89d0 <col:3> '_Bool' lvalue Var 0x55bc8f6b4cb8 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55bc8f6b8a20 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55bc8f6b89f0 <col:28> 'int' 0
|   |-CallExpr 0x55bc8f6b8aa0 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b8a88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b8a68 <col:3> 'void ()' Function 0x55bc8f65b410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bc8f6b8af8 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b8ae0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b8ac0 <col:3> 'void ()' Function 0x55bc8f65b350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55bc8f6b8b50 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b8b38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b8b18 <col:3> 'void ()' Function 0x55bc8f65b410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bc8f6b8ba8 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b8b90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b8b70 <col:3> 'void ()' Function 0x55bc8f65b350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bc8f6b8c60 <line:744:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6b8bc8 <col:3> 'int' lvalue Var 0x55bc8f6b4590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55bc8f6b8c40 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55bc8f6b8c28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bc8f6b8be8 <col:22> 'int' lvalue Var 0x55bc8f6b4590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55bc8f6b8c08 <col:41> 'int' 1
|   |-CallExpr 0x55bc8f6b8cb8 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b8ca0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b8c80 <col:3> 'void ()' Function 0x55bc8f65b410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55bc8f6b8d30 <line:746:3, col:36>
|     `-CallExpr 0x55bc8f6b8d10 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55bc8f6b8cf8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55bc8f6b8cd8 <col:10> 'void *(void)' Function 0x55bc8f65ae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55bc8f6b8ec8 prev 0x55bc8f6b4210 <line:748:1, line:792:1> line:748:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55bc8f6b8e30 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55bc8f6bd1a0 <line:749:1, line:792:1>
|   |-CallExpr 0x55bc8f6b8fc8 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b8fb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b8f70 <col:3> 'void ()' Function 0x55bc8f65b350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bc8f6b9040 <line:751:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6b8fe8 <col:3> 'int' lvalue Var 0x55bc8f6b53c0 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55bc8f6b9028 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bc8f6b9008 <col:15> 'int' lvalue Var 0x55bc8f6b52c8 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55bc8f6b90a0 <line:752:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6b9060 <col:3> 'int' lvalue Var 0x55bc8f6b52c8 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55bc8f6b9080 <col:15> 'int' 1
|   |-BinaryOperator 0x55bc8f6b9118 <line:753:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b90c0 <col:3> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6b9100 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bc8f6b90e0 <col:20> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55bc8f6b91b0 <line:754:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b9138 <col:3> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55bc8f6b9188 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55bc8f6b9158 <col:27> 'int' 1
|   |-CallExpr 0x55bc8f6b9338 <line:755:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55bc8f6b9320 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55bc8f6b91d0 <col:3> 'void (int)' Function 0x55bc8f65b0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55bc8f6b92d0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55bc8f6b92b0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55bc8f6b9290 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55bc8f6b9248 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55bc8f6b9230 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55bc8f6b91f0 <col:23> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55bc8f6b9278 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55bc8f6b9260 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55bc8f6b9210 <col:41> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55bc8f6b93b8 <line:756:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b9360 <col:3> '_Bool' lvalue Var 0x55bc8f6b4fe8 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6b93a0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bc8f6b9380 <col:20> '_Bool' lvalue Var 0x55bc8f6b4db0 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55bc8f6b9430 <line:757:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b93d8 <col:3> '_Bool' lvalue Var 0x55bc8f6b5060 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6b9418 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bc8f6b93f8 <col:20> '_Bool' lvalue Var 0x55bc8f6b4e28 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55bc8f6b94a8 <line:758:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b9450 <col:3> '_Bool' lvalue Var 0x55bc8f6b50d8 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6b9490 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bc8f6b9470 <col:20> '_Bool' lvalue Var 0x55bc8f6b4ea0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55bc8f6b9520 <line:759:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b94c8 <col:3> '_Bool' lvalue Var 0x55bc8f6b5150 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6b9508 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bc8f6b94e8 <col:20> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55bc8f6b95b8 <line:760:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b9540 <col:3> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x55bc8f6b9590 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55bc8f6b9560 <col:27> 'int' 1
|   |-CallExpr 0x55bc8f6b9610 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b95f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b95d8 <col:3> 'void ()' Function 0x55bc8f65b410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bc8f6b9668 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6b9650 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6b9630 <col:3> 'void ()' Function 0x55bc8f65b350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bc8f6b9718 <line:763:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b9688 <col:3> '_Bool' lvalue Var 0x55bc8f6b55d0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6b9700 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55bc8f6b96e0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55bc8f6b96c8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55bc8f6b96a8 <col:19> 'void *(void)' Function 0x55bc8f65ae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55bc8f6b97c8 <line:764:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b9738 <col:3> '_Bool' lvalue Var 0x55bc8f6b5648 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6b97b0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55bc8f6b9790 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55bc8f6b9778 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55bc8f6b9758 <col:19> 'void *(void)' Function 0x55bc8f65ae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55bc8f6b9840 <line:765:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6b97e8 <col:3> '_Bool' lvalue Var 0x55bc8f6b4cb8 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6b9828 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bc8f6b9808 <col:21> '_Bool' lvalue Var 0x55bc8f6b5648 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55bc8f6b98b8 <line:766:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6b9860 <col:3> 'int' lvalue Var 0x55bc8f6b4d38 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55bc8f6b98a0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bc8f6b9880 <col:15> 'int' lvalue Var 0x55bc8f6b4c20 'y' 'int'
|   |-BinaryOperator 0x55bc8f6b9cf0 <line:767:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6b98d8 <col:3> 'int' lvalue Var 0x55bc8f6b4c20 'y' 'int'
|   | `-ConditionalOperator 0x55bc8f6b9cc0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55bc8f6b9ae8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55bc8f6b9a08 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55bc8f6b9930 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55bc8f6b9918 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55bc8f6b98f8 <col:8> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55bc8f6b99e8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55bc8f6b9980 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55bc8f6b9968 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55bc8f6b9948 <col:27> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55bc8f6b99d0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55bc8f6b99b8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55bc8f6b9998 <col:46> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55bc8f6b9ac8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55bc8f6b9a60 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55bc8f6b9a48 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55bc8f6b9a28 <col:65> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55bc8f6b9ab0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55bc8f6b9a98 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55bc8f6b9a78 <col:84> '_Bool' lvalue Var 0x55bc8f6b5150 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55bc8f6b9ca8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bc8f6b9b08 <col:101> 'int' lvalue Var 0x55bc8f6b4c20 'y' 'int'
|   |   `-ParenExpr 0x55bc8f6b9c88 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55bc8f6b9c58 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55bc8f6b9bc8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55bc8f6b9b80 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55bc8f6b9b68 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55bc8f6b9b28 <col:106> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55bc8f6b9bb0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55bc8f6b9b98 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55bc8f6b9b48 <col:124> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55bc8f6b9c28 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bc8f6b9be8 <col:141> 'int' lvalue Var 0x55bc8f6b52c8 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55bc8f6b9c40 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bc8f6b9c08 <col:153> 'int' lvalue Var 0x55bc8f6b53c0 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55bc8f6ba220 <line:768:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6b9d10 <col:3> 'int' lvalue Var 0x55bc8f6b52c8 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55bc8f6ba1f0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55bc8f6ba1c0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bc8f6ba1a8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bc8f6b9d30 <col:15> '_Bool' lvalue Var 0x55bc8f6b5648 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55bc8f6ba1d8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bc8f6b9d50 <col:31> 'int' lvalue Var 0x55bc8f6b52c8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55bc8f6ba188 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55bc8f6ba158 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55bc8f6b9f60 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55bc8f6b9e80 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55bc8f6b9da8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55bc8f6b9d90 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55bc8f6b9d70 <col:45> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55bc8f6b9e60 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55bc8f6b9df8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55bc8f6b9de0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55bc8f6b9dc0 <col:64> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55bc8f6b9e48 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55bc8f6b9e30 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55bc8f6b9e10 <col:83> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55bc8f6b9f40 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55bc8f6b9ed8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55bc8f6b9ec0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55bc8f6b9ea0 <col:102> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55bc8f6b9f28 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55bc8f6b9f10 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55bc8f6b9ef0 <col:121> '_Bool' lvalue Var 0x55bc8f6b5150 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55bc8f6ba140 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bc8f6b9f80 <col:138> 'int' lvalue Var 0x55bc8f6b52c8 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55bc8f6ba120 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55bc8f6ba0f0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55bc8f6ba060 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55bc8f6ba018 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55bc8f6ba000 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55bc8f6b9fc0 <col:151> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55bc8f6ba048 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55bc8f6ba030 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55bc8f6b9fe0 <col:169> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55bc8f6ba0c0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55bc8f6ba080 <col:186> 'int' lvalue Var 0x55bc8f6b52c8 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55bc8f6ba0d8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55bc8f6ba0a0 <col:198> 'int' lvalue Var 0x55bc8f6b52c8 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55bc8f6ba730 <line:769:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6ba240 <col:3> 'int' lvalue Var 0x55bc8f6b53c0 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55bc8f6ba700 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55bc8f6ba6d0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bc8f6ba6b8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bc8f6ba260 <col:15> '_Bool' lvalue Var 0x55bc8f6b5648 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55bc8f6ba6e8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bc8f6ba280 <col:31> 'int' lvalue Var 0x55bc8f6b53c0 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55bc8f6ba698 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55bc8f6ba668 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55bc8f6ba490 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55bc8f6ba3b0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55bc8f6ba2d8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55bc8f6ba2c0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55bc8f6ba2a0 <col:45> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55bc8f6ba390 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55bc8f6ba328 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55bc8f6ba310 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55bc8f6ba2f0 <col:64> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55bc8f6ba378 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55bc8f6ba360 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55bc8f6ba340 <col:83> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55bc8f6ba470 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55bc8f6ba408 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55bc8f6ba3f0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55bc8f6ba3d0 <col:102> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55bc8f6ba458 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55bc8f6ba440 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55bc8f6ba420 <col:121> '_Bool' lvalue Var 0x55bc8f6b5150 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55bc8f6ba650 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bc8f6ba4b0 <col:138> 'int' lvalue Var 0x55bc8f6b53c0 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55bc8f6ba630 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55bc8f6ba600 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55bc8f6ba570 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55bc8f6ba528 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55bc8f6ba510 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55bc8f6ba4d0 <col:151> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55bc8f6ba558 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55bc8f6ba540 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55bc8f6ba4f0 <col:169> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55bc8f6ba5d0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55bc8f6ba590 <col:186> 'int' lvalue Var 0x55bc8f6b53c0 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55bc8f6ba5e8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55bc8f6ba5b0 <col:198> 'int' lvalue Var 0x55bc8f6b53c0 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55bc8f6bacd8 <line:770:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6ba750 <col:3> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6bacc0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bc8f6bac90 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55bc8f6bac48 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bc8f6bac30 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bc8f6ba770 <col:20> '_Bool' lvalue Var 0x55bc8f6b5648 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bc8f6bac78 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bc8f6bac60 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bc8f6ba790 <col:36> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55bc8f6bac10 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55bc8f6babe0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55bc8f6ba9a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bc8f6ba8c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bc8f6ba7e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bc8f6ba7d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bc8f6ba7b0 <col:55> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bc8f6ba8a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bc8f6ba838 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bc8f6ba820 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bc8f6ba800 <col:74> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55bc8f6ba888 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bc8f6ba870 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bc8f6ba850 <col:93> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bc8f6ba980 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bc8f6ba918 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bc8f6ba900 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bc8f6ba8e0 <col:112> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55bc8f6ba968 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bc8f6ba950 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bc8f6ba930 <col:131> '_Bool' lvalue Var 0x55bc8f6b5150 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55bc8f6babc8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bc8f6babb0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bc8f6ba9c0 <col:148> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55bc8f6bab90 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55bc8f6bab60 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55bc8f6baa80 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bc8f6baa38 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bc8f6baa20 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bc8f6ba9e0 <col:166> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bc8f6baa68 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bc8f6baa50 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bc8f6baa00 <col:184> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55bc8f6bab18 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bc8f6baad0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bc8f6baaa0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bc8f6bab48 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55bc8f6bab30 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55bc8f6baaf8 <col:212> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55bc8f6bb2c8 <line:771:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6bacf8 <col:3> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6bb2b0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bc8f6bb280 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55bc8f6bb238 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bc8f6bb220 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bc8f6bad18 <col:20> '_Bool' lvalue Var 0x55bc8f6b5648 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bc8f6bb268 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bc8f6bb250 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bc8f6bad38 <col:36> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55bc8f6bb200 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55bc8f6bb1d0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55bc8f6baf48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bc8f6bae68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bc8f6bad90 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bc8f6bad78 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bc8f6bad58 <col:55> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bc8f6bae48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bc8f6bade0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bc8f6badc8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bc8f6bada8 <col:74> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55bc8f6bae30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bc8f6bae18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bc8f6badf8 <col:93> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bc8f6baf28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bc8f6baec0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bc8f6baea8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bc8f6bae88 <col:112> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55bc8f6baf10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bc8f6baef8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bc8f6baed8 <col:131> '_Bool' lvalue Var 0x55bc8f6b5150 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55bc8f6bb1b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bc8f6bb1a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bc8f6baf68 <col:148> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55bc8f6bb180 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55bc8f6bb150 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55bc8f6bb050 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bc8f6bb008 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bc8f6baff0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bc8f6baf88 <col:166> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bc8f6bb038 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bc8f6bb020 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bc8f6bafd0 <col:184> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55bc8f6bb120 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bc8f6bb0a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bc8f6bb070 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bc8f6bb138 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55bc8f6bb0f8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55bc8f6bb0c8 <col:219> 'int' 0
|   |-BinaryOperator 0x55bc8f6bb870 <line:772:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6bb2e8 <col:3> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6bb858 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bc8f6bb828 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55bc8f6bb7e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bc8f6bb7c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bc8f6bb308 <col:20> '_Bool' lvalue Var 0x55bc8f6b5648 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bc8f6bb810 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bc8f6bb7f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bc8f6bb328 <col:36> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55bc8f6bb7a8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55bc8f6bb778 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55bc8f6bb538 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bc8f6bb458 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bc8f6bb380 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bc8f6bb368 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bc8f6bb348 <col:55> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bc8f6bb438 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bc8f6bb3d0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bc8f6bb3b8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bc8f6bb398 <col:74> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55bc8f6bb420 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bc8f6bb408 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bc8f6bb3e8 <col:93> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bc8f6bb518 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bc8f6bb4b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bc8f6bb498 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bc8f6bb478 <col:112> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55bc8f6bb500 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bc8f6bb4e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bc8f6bb4c8 <col:131> '_Bool' lvalue Var 0x55bc8f6b5150 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55bc8f6bb760 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bc8f6bb748 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bc8f6bb558 <col:148> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55bc8f6bb728 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55bc8f6bb6f8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55bc8f6bb618 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bc8f6bb5d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bc8f6bb5b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bc8f6bb578 <col:166> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bc8f6bb600 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bc8f6bb5e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bc8f6bb598 <col:184> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55bc8f6bb6b0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bc8f6bb668 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bc8f6bb638 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bc8f6bb6e0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55bc8f6bb6c8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55bc8f6bb690 <col:212> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55bc8f6bbe38 <line:773:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6bb890 <col:3> '_Bool' lvalue Var 0x55bc8f6b5150 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6bbe20 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bc8f6bbdf0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55bc8f6bbda8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bc8f6bbd90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bc8f6bb8b0 <col:20> '_Bool' lvalue Var 0x55bc8f6b5648 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bc8f6bbdd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bc8f6bbdc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bc8f6bb8d0 <col:36> '_Bool' lvalue Var 0x55bc8f6b5150 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55bc8f6bbd70 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55bc8f6bbd40 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55bc8f6bbae0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bc8f6bba00 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bc8f6bb928 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bc8f6bb910 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bc8f6bb8f0 <col:55> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bc8f6bb9e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bc8f6bb978 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bc8f6bb960 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bc8f6bb940 <col:74> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55bc8f6bb9c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bc8f6bb9b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bc8f6bb990 <col:93> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bc8f6bbac0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bc8f6bba58 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bc8f6bba40 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bc8f6bba20 <col:112> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55bc8f6bbaa8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bc8f6bba90 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bc8f6bba70 <col:131> '_Bool' lvalue Var 0x55bc8f6b5150 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55bc8f6bbd28 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bc8f6bbd10 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bc8f6bbb00 <col:148> '_Bool' lvalue Var 0x55bc8f6b5150 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55bc8f6bbcf0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55bc8f6bbcc0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55bc8f6bbbc0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bc8f6bbb78 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bc8f6bbb60 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bc8f6bbb20 <col:166> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bc8f6bbba8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bc8f6bbb90 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bc8f6bbb40 <col:184> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55bc8f6bbc90 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bc8f6bbc10 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bc8f6bbbe0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bc8f6bbca8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55bc8f6bbc68 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55bc8f6bbc38 <col:219> 'int' 0
|   |-BinaryOperator 0x55bc8f6bbeb0 <line:774:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6bbe58 <col:3> 'int' lvalue Var 0x55bc8f6b47d0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55bc8f6bbe98 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bc8f6bbe78 <col:25> 'int' lvalue Var 0x55bc8f6b4c20 'y' 'int'
|   |-BinaryOperator 0x55bc8f6bc010 <line:775:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6bbed0 <col:3> 'int' lvalue Var 0x55bc8f6b4c20 'y' 'int'
|   | `-ConditionalOperator 0x55bc8f6bbfe0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55bc8f6bbf68 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bc8f6bbf50 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bc8f6bbef0 <col:7> '_Bool' lvalue Var 0x55bc8f6b4cb8 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55bc8f6bbf80 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bc8f6bbf10 <col:25> 'int' lvalue Var 0x55bc8f6b4d38 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55bc8f6bbf98 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55bc8f6bbf30 <col:37> 'int' lvalue Var 0x55bc8f6b4c20 'y' 'int'
|   |-BinaryOperator 0x55bc8f6bc0a8 <line:776:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6bc030 <col:3> '_Bool' lvalue Var 0x55bc8f6b4cb8 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55bc8f6bc080 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55bc8f6bc050 <col:28> 'int' 0
|   |-CallExpr 0x55bc8f6bc100 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6bc0e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6bc0c8 <col:3> 'void ()' Function 0x55bc8f65b410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bc8f6bc158 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6bc140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6bc120 <col:3> 'void ()' Function 0x55bc8f65b350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bc8f6bc1d0 <line:779:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6bc178 <col:3> 'int' lvalue Var 0x55bc8f6b48f0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55bc8f6bc1b8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bc8f6bc198 <col:25> 'int' lvalue Var 0x55bc8f6b5538 'z' 'int'
|   |-CallExpr 0x55bc8f6bc228 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6bc210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6bc1f0 <col:3> 'void ()' Function 0x55bc8f65b410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bc8f6bc280 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6bc268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6bc248 <col:3> 'void ()' Function 0x55bc8f65b350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bc8f6bc568 <line:782:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6bc2a0 <col:3> 'int' lvalue Var 0x55bc8f6b4c20 'y' 'int'
|   | `-ConditionalOperator 0x55bc8f6bc538 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55bc8f6bc360 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55bc8f6bc318 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55bc8f6bc300 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55bc8f6bc2c0 <col:7> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55bc8f6bc348 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55bc8f6bc330 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55bc8f6bc2e0 <col:25> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55bc8f6bc520 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bc8f6bc380 <col:42> 'int' lvalue Var 0x55bc8f6b52c8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55bc8f6bc500 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55bc8f6bc4d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55bc8f6bc440 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55bc8f6bc3f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55bc8f6bc3e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55bc8f6bc3a0 <col:55> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55bc8f6bc428 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55bc8f6bc410 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55bc8f6bc3c0 <col:73> '_Bool' lvalue Var 0x55bc8f6b5150 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55bc8f6bc4a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bc8f6bc460 <col:90> 'int' lvalue Var 0x55bc8f6b53c0 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55bc8f6bc4b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bc8f6bc480 <col:102> 'int' lvalue Var 0x55bc8f6b4c20 'y' 'int'
|   |-BinaryOperator 0x55bc8f6bc770 <line:783:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6bc588 <col:3> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6bc758 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bc8f6bc728 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55bc8f6bc648 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55bc8f6bc600 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55bc8f6bc5e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55bc8f6bc5a8 <col:20> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55bc8f6bc630 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55bc8f6bc618 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55bc8f6bc5c8 <col:38> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55bc8f6bc6e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bc8f6bc698 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bc8f6bc668 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55bc8f6bc710 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bc8f6bc6f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bc8f6bc6c0 <col:66> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55bc8f6bca58 <line:784:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6bc790 <col:3> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6bca40 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bc8f6bca10 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55bc8f6bc930 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55bc8f6bc850 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55bc8f6bc808 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55bc8f6bc7f0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55bc8f6bc7b0 <col:20> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55bc8f6bc838 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55bc8f6bc820 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55bc8f6bc7d0 <col:38> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55bc8f6bc910 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55bc8f6bc8c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55bc8f6bc8b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55bc8f6bc870 <col:56> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55bc8f6bc8f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55bc8f6bc8e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55bc8f6bc890 <col:74> '_Bool' lvalue Var 0x55bc8f6b5150 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55bc8f6bc9c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bc8f6bc980 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bc8f6bc950 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55bc8f6bc9f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bc8f6bc9e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bc8f6bc9a8 <col:102> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55bc8f6bcc60 <line:785:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6bca78 <col:3> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6bcc48 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bc8f6bcc18 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55bc8f6bcb38 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55bc8f6bcaf0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55bc8f6bcad8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55bc8f6bca98 <col:20> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55bc8f6bcb20 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55bc8f6bcb08 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55bc8f6bcab8 <col:38> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55bc8f6bcbd0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bc8f6bcb88 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bc8f6bcb58 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55bc8f6bcc00 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bc8f6bcbe8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bc8f6bcbb0 <col:66> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55bc8f6bcf48 <line:786:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55bc8f6bcc80 <col:3> '_Bool' lvalue Var 0x55bc8f6b5150 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55bc8f6bcf30 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bc8f6bcf00 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55bc8f6bce20 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55bc8f6bcd40 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55bc8f6bccf8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55bc8f6bcce0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55bc8f6bcca0 <col:20> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55bc8f6bcd28 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55bc8f6bcd10 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55bc8f6bccc0 <col:38> '_Bool' lvalue Var 0x55bc8f6b4f70 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55bc8f6bce00 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55bc8f6bcdb8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55bc8f6bcda0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55bc8f6bcd60 <col:56> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55bc8f6bcde8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55bc8f6bcdd0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55bc8f6bcd80 <col:74> '_Bool' lvalue Var 0x55bc8f6b5150 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55bc8f6bceb8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bc8f6bce70 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bc8f6bce40 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55bc8f6bcee8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bc8f6bced0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bc8f6bce98 <col:102> '_Bool' lvalue Var 0x55bc8f6b5150 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55bc8f6bcfa0 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6bcf88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6bcf68 <col:3> 'void ()' Function 0x55bc8f65b410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bc8f6bd008 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6bcff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6bcfc0 <col:3> 'void ()' Function 0x55bc8f65b350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bc8f6bd0c0 <line:789:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55bc8f6bd028 <col:3> 'int' lvalue Var 0x55bc8f6b4590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55bc8f6bd0a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55bc8f6bd088 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bc8f6bd048 <col:22> 'int' lvalue Var 0x55bc8f6b4590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55bc8f6bd068 <col:41> 'int' 1
|   |-CallExpr 0x55bc8f6bd118 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bc8f6bd100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bc8f6bd0e0 <col:3> 'void ()' Function 0x55bc8f65b410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55bc8f6bd190 <line:791:3, col:36>
|     `-CallExpr 0x55bc8f6bd170 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55bc8f6bd158 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55bc8f6bd138 <col:10> 'void *(void)' Function 0x55bc8f65ae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55bc8f6bd320 prev 0x55bc8f6b42d8 <line:793:1, line:795:1> line:793:6 fence 'void ()'
| `-CompoundStmt 0x55bc8f6bd3c0 <line:794:1, line:795:1>
|-FunctionDecl 0x55bc8f6bd3f0 prev 0x55bc8f6b4398 <line:796:1, line:798:1> line:796:6 isync 'void ()'
| `-CompoundStmt 0x55bc8f6bd490 <line:797:1, line:798:1>
|-FunctionDecl 0x55bc8f6bd4c0 prev 0x55bc8f6b4458 <line:799:1, line:801:1> line:799:6 lwfence 'void ()'
| `-CompoundStmt 0x55bc8f6bd560 <line:800:1, line:801:1>
`-FunctionDecl 0x55bc8f6bd5c8 <line:802:1, line:826:1> line:802:5 main 'int ()'
  `-CompoundStmt 0x55bc8f6bf2c8 <line:803:1, line:826:1>
    |-DeclStmt 0x55bc8f6bd6e0 <line:804:3, col:17>
    | `-VarDecl 0x55bc8f6bd678 <col:3, col:13> col:13 used t514 'pthread_t':'unsigned long'
    |-CallExpr 0x55bc8f6bd8e8 <line:805:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55bc8f6bd8d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bc8f6bd6f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55bc8f69b8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55bc8f6bd738 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55bc8f6bd718 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55bc8f6bd678 't514' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55bc8f6bd928 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55bc8f6bd7b0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55bc8f6bd788 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55bc8f6bd750 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55bc8f6bd940 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bc8f6bd7d0 <col:38> 'void *(void *)' Function 0x55bc8f6b5760 'P0' 'void *(void *)'
    | `-ParenExpr 0x55bc8f6bd850 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55bc8f6bd828 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55bc8f6bd7f0 <col:51> 'int' 0
    |-DeclStmt 0x55bc8f6bd9d0 <line:806:3, col:17>
    | `-VarDecl 0x55bc8f6bd968 <col:3, col:13> col:13 used t515 'pthread_t':'unsigned long'
    |-CallExpr 0x55bc8f6bdb78 <line:807:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55bc8f6bdb60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bc8f6bd9e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55bc8f69b8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55bc8f6bda28 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55bc8f6bda08 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55bc8f6bd968 't515' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55bc8f6bdbb8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55bc8f6bdaa0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55bc8f6bda78 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55bc8f6bda40 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55bc8f6bdbd0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bc8f6bdac0 <col:38> 'void *(void *)' Function 0x55bc8f6b5e38 'P1' 'void *(void *)'
    | `-ParenExpr 0x55bc8f6bdb40 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55bc8f6bdb18 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55bc8f6bdae0 <col:51> 'int' 0
    |-DeclStmt 0x55bc8f6bdc60 <line:808:3, col:17>
    | `-VarDecl 0x55bc8f6bdbf8 <col:3, col:13> col:13 used t516 'pthread_t':'unsigned long'
    |-CallExpr 0x55bc8f6bde08 <line:809:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55bc8f6bddf0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bc8f6bdc78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55bc8f69b8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55bc8f6bdcb8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55bc8f6bdc98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55bc8f6bdbf8 't516' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55bc8f6bde48 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55bc8f6bdd30 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55bc8f6bdd08 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55bc8f6bdcd0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55bc8f6bde60 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bc8f6bdd50 <col:38> 'void *(void *)' Function 0x55bc8f6b8ec8 'P2' 'void *(void *)'
    | `-ParenExpr 0x55bc8f6bddd0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55bc8f6bdda8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55bc8f6bdd70 <col:51> 'int' 0
    |-CallExpr 0x55bc8f6bdeb0 <line:810:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55bc8f6bde98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bc8f6bde78 <col:3> 'void ()' Function 0x55bc8f65b350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55bc8f6bdf80 <line:811:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55bc8f6bded0 <col:3> '_Bool' lvalue Var 0x55bc8f6b4988 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55bc8f6bdf68 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55bc8f6bdf48 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55bc8f6bdf30 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55bc8f6bdef0 <col:21> 'int' lvalue Var 0x55bc8f6b4590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55bc8f6bdf10 <col:41> 'int' 3
    |-CallExpr 0x55bc8f6be000 <line:812:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55bc8f6bdfc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bc8f6bdfa0 <col:3> 'void ()' Function 0x55bc8f65b410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55bc8f6be078 <line:813:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55bc8f6be060 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bc8f6be020 <col:3> 'void (int)' Function 0x55bc8f65aca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55bc8f6be0b8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55bc8f6be0a0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55bc8f6be040 <col:21> '_Bool' lvalue Var 0x55bc8f6b4988 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55bc8f6be108 <line:814:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55bc8f6be0f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bc8f6be0d0 <col:3> 'void ()' Function 0x55bc8f65b350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55bc8f6be3f0 <line:815:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55bc8f6be128 <col:3> 'int' lvalue Var 0x55bc8f6b4c20 'y' 'int'
    | `-ConditionalOperator 0x55bc8f6be3c0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55bc8f6be1e8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55bc8f6be1a0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55bc8f6be188 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55bc8f6be148 <col:7> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55bc8f6be1d0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55bc8f6be1b8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55bc8f6be168 <col:25> '_Bool' lvalue Var 0x55bc8f6b4db0 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55bc8f6be3a8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55bc8f6be208 <col:42> 'int' lvalue Var 0x55bc8f6b52c8 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55bc8f6be388 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55bc8f6be358 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55bc8f6be2c8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55bc8f6be280 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55bc8f6be268 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55bc8f6be228 <col:55> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55bc8f6be2b0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55bc8f6be298 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55bc8f6be248 <col:73> '_Bool' lvalue Var 0x55bc8f6b4fe8 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55bc8f6be328 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55bc8f6be2e8 <col:90> 'int' lvalue Var 0x55bc8f6b53c0 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55bc8f6be340 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55bc8f6be308 <col:102> 'int' lvalue Var 0x55bc8f6b4c20 'y' 'int'
    |-BinaryOperator 0x55bc8f6be5f8 <line:816:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55bc8f6be410 <col:3> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55bc8f6be5e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55bc8f6be5b0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55bc8f6be4d0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55bc8f6be488 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55bc8f6be470 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55bc8f6be430 <col:20> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55bc8f6be4b8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55bc8f6be4a0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55bc8f6be450 <col:38> '_Bool' lvalue Var 0x55bc8f6b4db0 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55bc8f6be568 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55bc8f6be520 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55bc8f6be4f0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55bc8f6be598 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55bc8f6be580 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55bc8f6be548 <col:66> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55bc8f6be8e0 <line:817:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55bc8f6be618 <col:3> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55bc8f6be8c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55bc8f6be898 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55bc8f6be7b8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55bc8f6be6d8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55bc8f6be690 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55bc8f6be678 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55bc8f6be638 <col:20> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55bc8f6be6c0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55bc8f6be6a8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55bc8f6be658 <col:38> '_Bool' lvalue Var 0x55bc8f6b4db0 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55bc8f6be798 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55bc8f6be750 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55bc8f6be738 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55bc8f6be6f8 <col:56> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55bc8f6be780 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55bc8f6be768 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55bc8f6be718 <col:74> '_Bool' lvalue Var 0x55bc8f6b4fe8 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55bc8f6be850 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55bc8f6be808 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55bc8f6be7d8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55bc8f6be880 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55bc8f6be868 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55bc8f6be830 <col:102> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55bc8f6beae8 <line:818:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55bc8f6be900 <col:3> '_Bool' lvalue Var 0x55bc8f6b4db0 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55bc8f6bead0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55bc8f6beaa0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55bc8f6be9c0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55bc8f6be978 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55bc8f6be960 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55bc8f6be920 <col:20> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55bc8f6be9a8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55bc8f6be990 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55bc8f6be940 <col:38> '_Bool' lvalue Var 0x55bc8f6b4db0 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55bc8f6bea58 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55bc8f6bea10 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55bc8f6be9e0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55bc8f6bea88 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55bc8f6bea70 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55bc8f6bea38 <col:66> '_Bool' lvalue Var 0x55bc8f6b4db0 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55bc8f6bedd0 <line:819:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55bc8f6beb08 <col:3> '_Bool' lvalue Var 0x55bc8f6b4fe8 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55bc8f6bedb8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55bc8f6bed88 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55bc8f6beca8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55bc8f6bebc8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55bc8f6beb80 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55bc8f6beb68 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55bc8f6beb28 <col:20> '_Bool' lvalue Var 0x55bc8f6b5340 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55bc8f6bebb0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55bc8f6beb98 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55bc8f6beb48 <col:38> '_Bool' lvalue Var 0x55bc8f6b4db0 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55bc8f6bec88 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55bc8f6bec40 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55bc8f6bec28 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55bc8f6bebe8 <col:56> '_Bool' lvalue Var 0x55bc8f6b5438 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55bc8f6bec70 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55bc8f6bec58 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55bc8f6bec08 <col:74> '_Bool' lvalue Var 0x55bc8f6b4fe8 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55bc8f6bed40 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55bc8f6becf8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55bc8f6becc8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55bc8f6bed70 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55bc8f6bed58 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55bc8f6bed20 <col:102> '_Bool' lvalue Var 0x55bc8f6b4fe8 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55bc8f6bee28 <line:820:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55bc8f6bee10 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bc8f6bedf0 <col:3> 'void ()' Function 0x55bc8f65b410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55bc8f6bee80 <line:821:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55bc8f6bee68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bc8f6bee48 <col:3> 'void ()' Function 0x55bc8f65b350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55bc8f6bf170 <line:822:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x55bc8f6beea0 <col:3> '_Bool' lvalue Var 0x55bc8f6b4a00 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55bc8f6bf158 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55bc8f6bf140 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55bc8f6bf120 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x55bc8f6bf100 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x55bc8f6bf068 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x55bc8f6befb0 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x55bc8f6bef18 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55bc8f6bef00 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55bc8f6beec0 <col:23> 'int' lvalue Var 0x55bc8f6b4b00 'x' 'int'
    |         | | | `-IntegerLiteral 0x55bc8f6beee0 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55bc8f6bef90 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55bc8f6bef78 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55bc8f6bef38 <col:33> 'int' lvalue Var 0x55bc8f6b46b0 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55bc8f6bef58 <col:56> 'int' 0
    |         | `-BinaryOperator 0x55bc8f6bf048 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55bc8f6bf030 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55bc8f6befd0 <col:61> 'int' lvalue Var 0x55bc8f6b47d0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55bc8f6bf010 <col:84> 'int' 1
    |         `-BinaryOperator 0x55bc8f6bf0e0 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x55bc8f6bf0c8 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55bc8f6bf088 <col:89> 'int' lvalue Var 0x55bc8f6b48f0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55bc8f6bf0a8 <col:112> 'int' 0
    |-CallExpr 0x55bc8f6bf1c8 <line:823:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55bc8f6bf1b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bc8f6bf190 <col:3> 'void ()' Function 0x55bc8f65b410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55bc8f6bf240 <line:824:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55bc8f6bf228 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bc8f6bf1e8 <col:3> 'void (int)' Function 0x55bc8f65b0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55bc8f6bf280 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55bc8f6bf268 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55bc8f6bf208 <col:21> '_Bool' lvalue Var 0x55bc8f6b4a00 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55bc8f6bf2b8 <line:825:3, col:10>
      `-IntegerLiteral 0x55bc8f6bf298 <col:10> 'int' 0
