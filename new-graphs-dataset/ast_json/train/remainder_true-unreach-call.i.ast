TranslationUnitDecl 0x5565d5941f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5565d5942848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5565d5942520 '__int128'
|-TypedefDecl 0x5565d59428b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5565d5942540 'unsigned __int128'
|-TypedefDecl 0x5565d5942bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5565d5942990 'struct __NSConstantString_tag'
|   `-Record 0x5565d5942910 '__NSConstantString_tag'
|-TypedefDecl 0x5565d5942c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5565d5942c20 'char *'
|   `-BuiltinType 0x5565d5942020 'char'
|-TypedefDecl 0x5565d5981b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5565d5942f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5565d5942d40 'struct __va_list_tag'
|     `-Record 0x5565d5942cc0 '__va_list_tag'
|-TypedefDecl 0x5565d5981bd0 <floats-esbmc-regression/remainder_true-unreach-call.i:22:1, col:15> col:15 float_t 'float'
| `-BuiltinType 0x5565d5942180 'float'
|-TypedefDecl 0x5565d5981c40 <line:23:1, col:16> col:16 double_t 'double'
| `-BuiltinType 0x5565d59421a0 'double'
|-FunctionDecl 0x5565d5981d88 <line:24:15> col:15 implicit acos 'double (double)' extern
| |-ParmVarDecl 0x5565d5981e28 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d5981e98 <col:15> Implicit
|-FunctionDecl 0x5565d5981ef0 prev 0x5565d5981d88 <col:1, col:62> col:15 acos 'double (double)' extern
| |-ParmVarDecl 0x5565d5981cb0 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5565d5981f98 <col:49>
|-FunctionDecl 0x5565d59820a0 <col:65, col:128> col:79 __acos 'double (double)' extern
| |-ParmVarDecl 0x5565d5982008 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5565d5982148 <col:115>
|-FunctionDecl 0x5565d5982298 <line:26:15> col:15 implicit asin 'double (double)' extern
| |-ParmVarDecl 0x5565d5982338 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59823a8 <col:15> Implicit
|-FunctionDecl 0x5565d5982400 prev 0x5565d5982298 <col:1, col:62> col:15 asin 'double (double)' extern
| |-ParmVarDecl 0x5565d5982200 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5565d59824a8 <col:49>
|-FunctionDecl 0x5565d59825b0 <col:65, col:128> col:79 __asin 'double (double)' extern
| |-ParmVarDecl 0x5565d5982518 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5565d5982658 <col:115>
|-FunctionDecl 0x5565d5982760 <line:28:15> col:15 implicit atan 'double (double)' extern
| |-ParmVarDecl 0x5565d5982800 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d5982870 <col:15> Implicit
|-FunctionDecl 0x5565d59828c8 prev 0x5565d5982760 <col:1, col:62> col:15 atan 'double (double)' extern
| |-ParmVarDecl 0x5565d59826c8 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5565d5982970 <col:49>
|-FunctionDecl 0x5565d5982a78 <col:65, col:128> col:79 __atan 'double (double)' extern
| |-ParmVarDecl 0x5565d59829e0 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5565d5982b20 <col:115>
|-FunctionDecl 0x5565d59a59c8 <line:30:15> col:15 implicit atan2 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59a5a68 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59a5ad0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59a5b48 <col:15> Implicit
|-FunctionDecl 0x5565d59a5ba0 prev 0x5565d59a59c8 <col:1, col:75> col:15 atan2 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59a5868 <col:22, col:29> col:29 __y 'double'
| |-ParmVarDecl 0x5565d59a58e8 <col:34, col:41> col:41 __x 'double'
| `-NoThrowAttr 0x5565d59a5c50 <col:62>
|-FunctionDecl 0x5565d59a5de0 <col:78, col:154> col:92 __atan2 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59a5cc0 <col:101, col:108> col:108 __y 'double'
| |-ParmVarDecl 0x5565d59a5d40 <col:113, col:120> col:120 __x 'double'
| `-NoThrowAttr 0x5565d59a5e90 <col:141>
|-FunctionDecl 0x5565d59a5f98 <line:33:16> col:16 implicit cos 'double (double)' extern
| |-ParmVarDecl 0x5565d59a6038 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59a60a8 <col:16> Implicit
|-FunctionDecl 0x5565d59a6100 prev 0x5565d59a5f98 <col:2, col:62> col:16 cos 'double (double)' extern
| |-ParmVarDecl 0x5565d59a5f00 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5565d59a61a8 <col:49>
|-FunctionDecl 0x5565d59a62b0 <col:65, col:127> col:79 __cos 'double (double)' extern
| |-ParmVarDecl 0x5565d59a6218 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x5565d59a6358 <col:114>
|-FunctionDecl 0x5565d59a6460 <line:35:16> col:16 implicit sin 'double (double)' extern
| |-ParmVarDecl 0x5565d59a6500 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59a6570 <col:16> Implicit
|-FunctionDecl 0x5565d59a65c8 prev 0x5565d59a6460 <col:2, col:62> col:16 sin 'double (double)' extern
| |-ParmVarDecl 0x5565d59a63c8 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5565d59a6670 <col:49>
|-FunctionDecl 0x5565d59a6778 <col:65, col:127> col:79 __sin 'double (double)' extern
| |-ParmVarDecl 0x5565d59a66e0 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x5565d59a8860 <col:114>
|-FunctionDecl 0x5565d59a8968 <line:37:15> col:15 implicit tan 'double (double)' extern
| |-ParmVarDecl 0x5565d59a8a08 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59a8a78 <col:15> Implicit
|-FunctionDecl 0x5565d59a8ad0 prev 0x5565d59a8968 <col:1, col:61> col:15 tan 'double (double)' extern
| |-ParmVarDecl 0x5565d59a88d0 <col:20, col:27> col:27 __x 'double'
| `-NoThrowAttr 0x5565d59a8b78 <col:48>
|-FunctionDecl 0x5565d59a8c80 <col:64, col:126> col:78 __tan 'double (double)' extern
| |-ParmVarDecl 0x5565d59a8be8 <col:85, col:92> col:92 __x 'double'
| `-NoThrowAttr 0x5565d59a8d28 <col:113>
|-FunctionDecl 0x5565d59a8e30 <line:42:15> col:15 implicit cosh 'double (double)' extern
| |-ParmVarDecl 0x5565d59a8ed0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59a8f40 <col:15> Implicit
|-FunctionDecl 0x5565d59a8f98 prev 0x5565d59a8e30 <col:1, col:62> col:15 cosh 'double (double)' extern
| |-ParmVarDecl 0x5565d59a8d98 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5565d59a9040 <col:49>
|-FunctionDecl 0x5565d59a9148 <col:65, col:128> col:79 __cosh 'double (double)' extern
| |-ParmVarDecl 0x5565d59a90b0 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5565d59a91f0 <col:115>
|-FunctionDecl 0x5565d59a92f8 <line:44:15> col:15 implicit sinh 'double (double)' extern
| |-ParmVarDecl 0x5565d59a9398 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59a9408 <col:15> Implicit
|-FunctionDecl 0x5565d59a9460 prev 0x5565d59a92f8 <col:1, col:62> col:15 sinh 'double (double)' extern
| |-ParmVarDecl 0x5565d59a9260 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5565d59a9508 <col:49>
|-FunctionDecl 0x5565d59a9610 <col:65, col:128> col:79 __sinh 'double (double)' extern
| |-ParmVarDecl 0x5565d59a9578 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5565d59a96b8 <col:115>
|-FunctionDecl 0x5565d59a97c0 <line:46:15> col:15 implicit tanh 'double (double)' extern
| |-ParmVarDecl 0x5565d59a9870 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59a98e0 <col:15> Implicit
|-FunctionDecl 0x5565d59a9938 prev 0x5565d59a97c0 <col:1, col:62> col:15 tanh 'double (double)' extern
| |-ParmVarDecl 0x5565d59a9728 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5565d59a99e0 <col:49>
|-FunctionDecl 0x5565d59a9ae8 <col:65, col:128> col:79 __tanh 'double (double)' extern
| |-ParmVarDecl 0x5565d59a9a50 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5565d59a9b90 <col:115>
|-FunctionDecl 0x5565d59a9c98 <line:47:15> col:15 implicit acosh 'double (double)' extern
| |-ParmVarDecl 0x5565d59a9d38 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59a9da8 <col:15> Implicit
|-FunctionDecl 0x5565d59a9e00 prev 0x5565d59a9c98 <col:1, col:63> col:15 acosh 'double (double)' extern
| |-ParmVarDecl 0x5565d59a9c00 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x5565d59a9ea8 <col:50>
|-FunctionDecl 0x5565d59a9fb0 <col:66, col:130> col:80 __acosh 'double (double)' extern
| |-ParmVarDecl 0x5565d59a9f18 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x5565d59aa058 <col:117>
|-FunctionDecl 0x5565d59aa160 <line:49:15> col:15 implicit asinh 'double (double)' extern
| |-ParmVarDecl 0x5565d59aa200 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59aa270 <col:15> Implicit
|-FunctionDecl 0x5565d59aa2c8 prev 0x5565d59aa160 <col:1, col:63> col:15 asinh 'double (double)' extern
| |-ParmVarDecl 0x5565d59aa0c8 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x5565d59aa370 <col:50>
|-FunctionDecl 0x5565d59aa478 <col:66, col:130> col:80 __asinh 'double (double)' extern
| |-ParmVarDecl 0x5565d59aa3e0 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x5565d59aa520 <col:117>
|-FunctionDecl 0x5565d59aa628 <line:51:15> col:15 implicit atanh 'double (double)' extern
| |-ParmVarDecl 0x5565d59aa6c8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59aa738 <col:15> Implicit
|-FunctionDecl 0x5565d59aa790 prev 0x5565d59aa628 <col:1, col:63> col:15 atanh 'double (double)' extern
| |-ParmVarDecl 0x5565d59aa590 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x5565d59aa838 <col:50>
|-FunctionDecl 0x5565d59aa960 <col:66, col:130> col:80 __atanh 'double (double)' extern
| |-ParmVarDecl 0x5565d59aa8c8 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x5565d59aaa08 <col:117>
|-FunctionDecl 0x5565d59aab10 <line:59:16> col:16 implicit exp 'double (double)' extern
| |-ParmVarDecl 0x5565d59aabb0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59aac20 <col:16> Implicit
|-FunctionDecl 0x5565d59aac78 prev 0x5565d59aab10 <col:2, col:62> col:16 exp 'double (double)' extern
| |-ParmVarDecl 0x5565d59aaa78 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5565d59aad20 <col:49>
|-FunctionDecl 0x5565d59aae28 <col:65, col:127> col:79 __exp 'double (double)' extern
| |-ParmVarDecl 0x5565d59aad90 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x5565d59aaed0 <col:114>
|-FunctionDecl 0x5565d59ab0d8 <line:62:15> col:15 implicit frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x5565d59ab178 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59ab1e0 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5565d59ab258 <col:15> Implicit
|-FunctionDecl 0x5565d59ab2b0 prev 0x5565d59ab0d8 <col:1, col:80> col:15 frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x5565d59aaf40 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x5565d59aaff8 <col:34, col:39> col:39 __exponent 'int *'
| `-NoThrowAttr 0x5565d59ab360 <col:67>
|-FunctionDecl 0x5565d59ab4f0 <col:83, col:164> col:97 __frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x5565d59ab3d0 <col:106, col:113> col:113 __x 'double'
| |-ParmVarDecl 0x5565d59ab450 <col:118, col:123> col:123 __exponent 'int *'
| `-NoThrowAttr 0x5565d59ab5a0 <col:151>
|-FunctionDecl 0x5565d59ab778 <line:65:15> col:15 implicit ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x5565d59ab818 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59ab890 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5565d59ab908 <col:15> Implicit
|-FunctionDecl 0x5565d59ab960 prev 0x5565d59ab778 <col:1, col:79> col:15 ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x5565d59ab610 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x5565d59ab690 <col:34, col:38> col:38 __exponent 'int'
| `-NoThrowAttr 0x5565d59aba10 <col:66>
|-FunctionDecl 0x5565d59abba0 <col:82, col:162> col:96 __ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x5565d59aba80 <col:105, col:112> col:112 __x 'double'
| |-ParmVarDecl 0x5565d59abb00 <col:117, col:121> col:121 __exponent 'int'
| `-NoThrowAttr 0x5565d59abc50 <col:149>
|-FunctionDecl 0x5565d59abd58 <line:68:16> col:16 implicit log 'double (double)' extern
| |-ParmVarDecl 0x5565d59abdf8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59abe68 <col:16> Implicit
|-FunctionDecl 0x5565d59abec0 prev 0x5565d59abd58 <col:2, col:62> col:16 log 'double (double)' extern
| |-ParmVarDecl 0x5565d59abcc0 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5565d59abf68 <col:49>
|-FunctionDecl 0x5565d59ac070 <col:65, col:127> col:79 __log 'double (double)' extern
| |-ParmVarDecl 0x5565d59abfd8 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x5565d59ac118 <col:114>
|-FunctionDecl 0x5565d59ac220 <line:71:15> col:15 implicit log10 'double (double)' extern
| |-ParmVarDecl 0x5565d59ac2c0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59ac330 <col:15> Implicit
|-FunctionDecl 0x5565d59ac388 prev 0x5565d59ac220 <col:1, col:63> col:15 log10 'double (double)' extern
| |-ParmVarDecl 0x5565d59ac188 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x5565d59ac430 <col:50>
|-FunctionDecl 0x5565d59ac538 <col:66, col:130> col:80 __log10 'double (double)' extern
| |-ParmVarDecl 0x5565d59ac4a0 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x5565d59ac5e0 <col:117>
|-FunctionDecl 0x5565d59ac7e8 <line:74:15> col:15 implicit modf 'double (double, double *)' extern
| |-ParmVarDecl 0x5565d59ad0b0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59ad118 <<invalid sloc>> <invalid sloc> 'double *'
| `-NoThrowAttr 0x5565d59ad190 <col:15> Implicit
|-FunctionDecl 0x5565d59ad1e8 prev 0x5565d59ac7e8 <col:1, col:78> col:15 modf 'double (double, double *)' extern
| |-ParmVarDecl 0x5565d59ac650 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5565d59ac708 <col:33, col:41> col:41 __iptr 'double *'
| `-NoThrowAttr 0x5565d59ad298 <col:65>
|-FunctionDecl 0x5565d59ad448 <col:81, col:194> col:95 __modf 'double (double, double *)' extern
| |-ParmVarDecl 0x5565d59ad308 <col:103, col:110> col:110 __x 'double'
| |-ParmVarDecl 0x5565d59ad388 <col:115, col:123> col:123 __iptr 'double *'
| |-NoThrowAttr 0x5565d59ad4f8 <col:147>
| `-NonNullAttr 0x5565d59ad550 <col:178, col:192> 2
|-FunctionDecl 0x5565d59ad638 <line:75:15> col:15 implicit expm1 'double (double)' extern
| |-ParmVarDecl 0x5565d59ad6d8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59ad748 <col:15> Implicit
|-FunctionDecl 0x5565d59ad7a0 prev 0x5565d59ad638 <col:1, col:63> col:15 expm1 'double (double)' extern
| |-ParmVarDecl 0x5565d59ad5a0 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x5565d59ad848 <col:50>
|-FunctionDecl 0x5565d59ad950 <col:66, col:130> col:80 __expm1 'double (double)' extern
| |-ParmVarDecl 0x5565d59ad8b8 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x5565d59ad9f8 <col:117>
|-FunctionDecl 0x5565d59adb00 <line:78:15> col:15 implicit log1p 'double (double)' extern
| |-ParmVarDecl 0x5565d59adba0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59adc10 <col:15> Implicit
|-FunctionDecl 0x5565d59adc68 prev 0x5565d59adb00 <col:1, col:63> col:15 log1p 'double (double)' extern
| |-ParmVarDecl 0x5565d59ada68 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x5565d59add10 <col:50>
|-FunctionDecl 0x5565d59ade18 <col:66, col:130> col:80 __log1p 'double (double)' extern
| |-ParmVarDecl 0x5565d59add80 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x5565d59adec0 <col:117>
|-FunctionDecl 0x5565d59adfc8 <line:81:15> col:15 implicit logb 'double (double)' extern
| |-ParmVarDecl 0x5565d59ae0c0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59ae130 <col:15> Implicit
|-FunctionDecl 0x5565d59ae188 prev 0x5565d59adfc8 <col:1, col:62> col:15 logb 'double (double)' extern
| |-ParmVarDecl 0x5565d59adf30 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5565d59ae230 <col:49>
|-FunctionDecl 0x5565d59ae338 <col:65, col:128> col:79 __logb 'double (double)' extern
| |-ParmVarDecl 0x5565d59ae2a0 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5565d59ae3e0 <col:115>
|-FunctionDecl 0x5565d59ae4e8 <line:88:15> col:15 implicit exp2 'double (double)' extern
| |-ParmVarDecl 0x5565d59ae588 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59ae5f8 <col:15> Implicit
|-FunctionDecl 0x5565d59ae650 prev 0x5565d59ae4e8 <col:1, col:62> col:15 exp2 'double (double)' extern
| |-ParmVarDecl 0x5565d59ae450 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5565d59ae6f8 <col:49>
|-FunctionDecl 0x5565d59ae800 <col:65, col:128> col:79 __exp2 'double (double)' extern
| |-ParmVarDecl 0x5565d59ae768 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5565d59ae8a8 <col:115>
|-FunctionDecl 0x5565d59ae9b0 <line:91:15> col:15 implicit log2 'double (double)' extern
| |-ParmVarDecl 0x5565d59aea50 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59aeac0 <col:15> Implicit
|-FunctionDecl 0x5565d59aeb18 prev 0x5565d59ae9b0 <col:1, col:62> col:15 log2 'double (double)' extern
| |-ParmVarDecl 0x5565d59ae918 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5565d59aebc0 <col:49>
|-FunctionDecl 0x5565d59aecc8 <col:65, col:128> col:79 __log2 'double (double)' extern
| |-ParmVarDecl 0x5565d59aec30 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5565d59aed70 <col:115>
|-FunctionDecl 0x5565d59aef00 <line:92:16> col:16 implicit pow 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59aefa0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59af008 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59af080 <col:16> Implicit
|-FunctionDecl 0x5565d59af100 prev 0x5565d59aef00 <col:2, col:74> col:16 pow 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59aede0 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5565d59aee60 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x5565d59af1b0 <col:61>
|-FunctionDecl 0x5565d59af340 <col:77, col:151> col:91 __pow 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59af220 <col:98, col:105> col:105 __x 'double'
| |-ParmVarDecl 0x5565d59af2a0 <col:110, col:117> col:117 __y 'double'
| `-NoThrowAttr 0x5565d59af3f0 <col:138>
|-FunctionDecl 0x5565d59af4f8 <line:95:15> col:15 implicit sqrt 'double (double)' extern
| |-ParmVarDecl 0x5565d59af598 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59af608 <col:15> Implicit
|-FunctionDecl 0x5565d59af660 prev 0x5565d59af4f8 <col:1, col:62> col:15 sqrt 'double (double)' extern
| |-ParmVarDecl 0x5565d59af460 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5565d59af708 <col:49>
|-FunctionDecl 0x5565d59af810 <col:65, col:128> col:79 __sqrt 'double (double)' extern
| |-ParmVarDecl 0x5565d59af778 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5565d59af8b8 <col:115>
|-FunctionDecl 0x5565d59afa48 <line:101:15> col:15 implicit hypot 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59afae8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59afb50 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59afbc8 <col:15> Implicit
|-FunctionDecl 0x5565d59afc20 prev 0x5565d59afa48 <col:1, col:75> col:15 hypot 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59af928 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x5565d59af9a8 <col:34, col:41> col:41 __y 'double'
| `-NoThrowAttr 0x5565d59afcd0 <col:62>
|-FunctionDecl 0x5565d59afe60 <col:78, col:154> col:92 __hypot 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59afd40 <col:101, col:108> col:108 __x 'double'
| |-ParmVarDecl 0x5565d59afdc0 <col:113, col:120> col:120 __y 'double'
| `-NoThrowAttr 0x5565d59aff10 <col:141>
|-FunctionDecl 0x5565d59b0018 <line:108:15> col:15 implicit cbrt 'double (double)' extern
| |-ParmVarDecl 0x5565d59b00e0 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5565d59b0150 <col:15> Implicit
| `-ConstAttr 0x5565d59b01a8 <col:15> Implicit
|-FunctionDecl 0x5565d59b01d0 prev 0x5565d59b0018 <col:1, col:62> col:15 cbrt 'double (double)' extern
| |-ParmVarDecl 0x5565d59aff80 <col:21, col:28> col:28 __x 'double'
| |-ConstAttr 0x5565d59b02d0 <col:15> Inherited Implicit
| `-NoThrowAttr 0x5565d59b0278 <col:49>
|-FunctionDecl 0x5565d59b03a8 <col:65, col:128> col:79 __cbrt 'double (double)' extern
| |-ParmVarDecl 0x5565d59b0310 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5565d59b0450 <col:115>
|-FunctionDecl 0x5565d59b0558 <line:109:15> col:15 implicit ceil 'double (double)' extern
| |-ParmVarDecl 0x5565d59b05f8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5565d59b0668 <col:15> Implicit
| `-ConstAttr 0x5565d59b06c0 <col:15> Implicit
|-FunctionDecl 0x5565d59b06e8 prev 0x5565d59b0558 <col:1, col:90> col:15 ceil 'double (double)' extern
| |-ParmVarDecl 0x5565d59b04c0 <col:21, col:28> col:28 __x 'double'
| |-NoThrowAttr 0x5565d59b0790 <col:49>
| `-ConstAttr 0x5565d59b07e8 <col:80>
|-FunctionDecl 0x5565d59b08c0 <col:93, col:184> col:107 __ceil 'double (double)' extern
| |-ParmVarDecl 0x5565d59b0828 <col:115, col:122> col:122 __x 'double'
| |-NoThrowAttr 0x5565d59b0968 <col:143>
| `-ConstAttr 0x5565d59b09c0 <col:174>
|-FunctionDecl 0x5565d59b0a98 <line:112:15> col:15 implicit fabs 'double (double)' extern
| |-ParmVarDecl 0x5565d59b0b38 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5565d59b0ba8 <col:15> Implicit
| `-ConstAttr 0x5565d59b0c00 <col:15> Implicit
|-FunctionDecl 0x5565d59b0c28 prev 0x5565d59b0a98 <col:1, col:90> col:15 fabs 'double (double)' extern
| |-ParmVarDecl 0x5565d59b0a00 <col:21, col:28> col:28 __x 'double'
| |-NoThrowAttr 0x5565d59b0cd0 <col:49>
| `-ConstAttr 0x5565d59b0d28 <col:80>
|-FunctionDecl 0x5565d59b0e00 <col:93, col:184> col:107 __fabs 'double (double)' extern
| |-ParmVarDecl 0x5565d59b0d68 <col:115, col:122> col:122 __x 'double'
| |-NoThrowAttr 0x5565d59b0ea8 <col:143>
| `-ConstAttr 0x5565d59b0f00 <col:174>
|-FunctionDecl 0x5565d59b0fd8 <line:115:15> col:15 implicit floor 'double (double)' extern
| |-ParmVarDecl 0x5565d59b1078 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5565d59b10f8 <col:15> Implicit
| `-ConstAttr 0x5565d59b1150 <col:15> Implicit
|-FunctionDecl 0x5565d59b1178 prev 0x5565d59b0fd8 <col:1, col:91> col:15 floor 'double (double)' extern
| |-ParmVarDecl 0x5565d59b0f40 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x5565d59b1220 <col:50>
| `-ConstAttr 0x5565d59b1278 <col:81>
|-FunctionDecl 0x5565d59b1350 <col:94, col:186> col:108 __floor 'double (double)' extern
| |-ParmVarDecl 0x5565d59b12b8 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x5565d59b13f8 <col:145>
| `-ConstAttr 0x5565d59b1450 <col:176>
|-FunctionDecl 0x5565d59b15b0 <line:118:15> col:15 implicit fmod 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b1650 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59b16b8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59b1730 <col:15> Implicit
|-FunctionDecl 0x5565d59b1788 prev 0x5565d59b15b0 <col:1, col:74> col:15 fmod 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b1490 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5565d59b1510 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x5565d59b1838 <col:61>
|-FunctionDecl 0x5565d59b19c8 <col:77, col:152> col:91 __fmod 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b18a8 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x5565d59b1928 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x5565d59b1a78 <col:139>
|-FunctionDecl 0x5565d59b1bb8 <line:123:1, col:94> col:12 __isinf 'int (double)' extern
| |-ParmVarDecl 0x5565d59b1ae8 <col:21, col:28> col:28 __value 'double'
| |-NoThrowAttr 0x5565d59b1c60 <col:53>
| `-ConstAttr 0x5565d59b1cb8 <col:84>
|-FunctionDecl 0x5565d59b1d90 <line:126:12> col:12 implicit __finite 'int (double)' extern
| |-ParmVarDecl 0x5565d59b1e30 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5565d59b1ea0 <col:12> Implicit
| `-ConstAttr 0x5565d59b1ef8 <col:12> Implicit
|-FunctionDecl 0x5565d59b1f20 prev 0x5565d59b1d90 <col:1, col:95> col:12 __finite 'int (double)' extern
| |-ParmVarDecl 0x5565d59b1cf8 <col:22, col:29> col:29 __value 'double'
| |-NoThrowAttr 0x5565d59b1fc8 <col:54>
| `-ConstAttr 0x5565d59b2020 <col:85>
|-FunctionDecl 0x5565d59b3140 <line:132:1, col:92> col:12 isinf 'int (double)' extern
| |-ParmVarDecl 0x5565d59b2060 <col:19, col:26> col:26 __value 'double'
| |-NoThrowAttr 0x5565d59b31e8 <col:51>
| `-ConstAttr 0x5565d59b3240 <col:82>
|-FunctionDecl 0x5565d59b3318 <line:135:12> col:12 implicit finite 'int (double)' extern
| |-ParmVarDecl 0x5565d59b33b8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5565d59b3428 <col:12> Implicit
| `-ConstAttr 0x5565d59b3480 <col:12> Implicit
|-FunctionDecl 0x5565d59b34a8 prev 0x5565d59b3318 <col:1, col:93> col:12 finite 'int (double)' extern
| |-ParmVarDecl 0x5565d59b3280 <col:20, col:27> col:27 __value 'double'
| |-NoThrowAttr 0x5565d59b3550 <col:52>
| `-ConstAttr 0x5565d59b35a8 <col:83>
|-FunctionDecl 0x5565d59b3708 <line:138:1, col:74> col:15 drem 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b35e8 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5565d59b3668 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x5565d59b37b8 <col:61>
|-FunctionDecl 0x5565d59b3948 <col:77, col:152> col:91 __drem 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b3828 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x5565d59b38a8 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x5565d59b39f8 <col:139>
|-FunctionDecl 0x5565d59b3b00 <line:142:1, col:69> col:15 significand 'double (double)' extern
| |-ParmVarDecl 0x5565d59b3a68 <col:28, col:35> col:35 __x 'double'
| `-NoThrowAttr 0x5565d59b3ba8 <col:56>
|-FunctionDecl 0x5565d59b3cb0 <col:72, col:142> col:86 __significand 'double (double)' extern
| |-ParmVarDecl 0x5565d59b3c18 <col:101, col:108> col:108 __x 'double'
| `-NoThrowAttr 0x5565d59b3d58 <col:129>
|-FunctionDecl 0x5565d59b3ee8 <line:148:15> col:15 implicit copysign 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b3f88 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59b3ff0 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5565d59b4068 <col:15> Implicit
| `-ConstAttr 0x5565d59b40c0 <col:15> Implicit
|-FunctionDecl 0x5565d59b4120 prev 0x5565d59b3ee8 <col:1, col:106> col:15 copysign 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b3dc8 <col:25, col:32> col:32 __x 'double'
| |-ParmVarDecl 0x5565d59b3e48 <col:37, col:44> col:44 __y 'double'
| |-NoThrowAttr 0x5565d59b41d0 <col:65>
| `-ConstAttr 0x5565d59b4228 <col:96>
|-FunctionDecl 0x5565d59b4388 <col:109, col:216> col:123 __copysign 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b4268 <col:135, col:142> col:142 __x 'double'
| |-ParmVarDecl 0x5565d59b42e8 <col:147, col:154> col:154 __y 'double'
| |-NoThrowAttr 0x5565d59b4438 <col:175>
| `-ConstAttr 0x5565d59b4490 <col:206>
|-FunctionDecl 0x5565d59b45a8 <line:155:15> col:15 implicit nan 'double (const char *)' extern
| |-ParmVarDecl 0x5565d59b4648 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x5565d59b46b8 <col:15> Implicit
| `-PureAttr 0x5565d59b4710 <col:15> Implicit
|-FunctionDecl 0x5565d59b4738 prev 0x5565d59b45a8 <col:1, col:97> col:15 nan 'double (const char *)' extern
| |-ParmVarDecl 0x5565d59b44d0 <col:20, col:32> col:32 __tagb 'const char *'
| |-PureAttr 0x5565d59b4860 <col:15> Inherited Implicit
| |-NoThrowAttr 0x5565d59b47e0 <col:56>
| `-ConstAttr 0x5565d59b4838 <col:87>
|-FunctionDecl 0x5565d59b4938 <col:100, col:198> col:114 __nan 'double (const char *)' extern
| |-ParmVarDecl 0x5565d59b48a0 <col:121, col:133> col:133 __tagb 'const char *'
| |-NoThrowAttr 0x5565d59b49e0 <col:157>
| `-ConstAttr 0x5565d59b4a38 <col:188>
|-FunctionDecl 0x5565d59b4b10 <line:161:1, col:94> col:12 used __isnan 'int (double)' extern
| |-ParmVarDecl 0x5565d59b4a78 <col:21, col:28> col:28 __value 'double'
| |-NoThrowAttr 0x5565d59b4bb8 <col:53>
| `-ConstAttr 0x5565d59b4c10 <col:84>
|-FunctionDecl 0x5565d59b4ce8 <line:165:1, col:92> col:12 isnan 'int (double)' extern
| |-ParmVarDecl 0x5565d59b4c50 <col:19, col:26> col:26 __value 'double'
| |-NoThrowAttr 0x5565d59b4d90 <col:51>
| `-ConstAttr 0x5565d59b4de8 <col:82>
|-FunctionDecl 0x5565d59b4ec0 <line:168:1, col:56> col:15 j0 'double (double)' extern
| |-ParmVarDecl 0x5565d59b4e28 <col:19> col:25 'double'
| `-NoThrowAttr 0x5565d59b4f68 <col:43>
|-FunctionDecl 0x5565d59b5070 <col:59, col:116> col:73 __j0 'double (double)' extern
| |-ParmVarDecl 0x5565d59b4fd8 <col:79> col:85 'double'
| `-NoThrowAttr 0x5565d59b5130 <col:103>
|-FunctionDecl 0x5565d59b5238 <line:169:1, col:56> col:15 j1 'double (double)' extern
| |-ParmVarDecl 0x5565d59b51a0 <col:19> col:25 'double'
| `-NoThrowAttr 0x5565d59b52e0 <col:43>
|-FunctionDecl 0x5565d59b53e8 <col:59, col:116> col:73 __j1 'double (double)' extern
| |-ParmVarDecl 0x5565d59b5350 <col:79> col:85 'double'
| `-NoThrowAttr 0x5565d59b5490 <col:103>
|-FunctionDecl 0x5565d59b5668 <line:170:1, col:61> col:15 jn 'double (int, double)' extern
| |-ParmVarDecl 0x5565d59b5500 <col:19> col:22 'int'
| |-ParmVarDecl 0x5565d59b5580 <col:24> col:30 'double'
| `-NoThrowAttr 0x5565d59b5718 <col:48>
|-FunctionDecl 0x5565d59b58a8 <col:64, col:126> col:78 __jn 'double (int, double)' extern
| |-ParmVarDecl 0x5565d59b5788 <col:84> col:87 'int'
| |-ParmVarDecl 0x5565d59b5808 <col:89> col:95 'double'
| `-NoThrowAttr 0x5565d59b5958 <col:113>
|-FunctionDecl 0x5565d59b5a60 <line:171:1, col:56> col:15 y0 'double (double)' extern
| |-ParmVarDecl 0x5565d59b59c8 <col:19> col:25 'double'
| `-NoThrowAttr 0x5565d59b5b08 <col:43>
|-FunctionDecl 0x5565d59b5c10 <col:59, col:116> col:73 __y0 'double (double)' extern
| |-ParmVarDecl 0x5565d59b5b78 <col:79> col:85 'double'
| `-NoThrowAttr 0x5565d59b5cb8 <col:103>
|-FunctionDecl 0x5565d59b5dc0 <line:172:1, col:56> col:15 y1 'double (double)' extern
| |-ParmVarDecl 0x5565d59b5d28 <col:19> col:25 'double'
| `-NoThrowAttr 0x5565d59b5e68 <col:43>
|-FunctionDecl 0x5565d59b5f70 <col:59, col:116> col:73 __y1 'double (double)' extern
| |-ParmVarDecl 0x5565d59b5ed8 <col:79> col:85 'double'
| `-NoThrowAttr 0x5565d59b6018 <col:103>
|-FunctionDecl 0x5565d59b61e0 <line:173:1, col:61> col:15 yn 'double (int, double)' extern
| |-ParmVarDecl 0x5565d59b6088 <col:19> col:22 'int'
| |-ParmVarDecl 0x5565d59b6140 <col:24> col:30 'double'
| `-NoThrowAttr 0x5565d59b6290 <col:48>
|-FunctionDecl 0x5565d59b6420 <col:64, col:126> col:78 __yn 'double (int, double)' extern
| |-ParmVarDecl 0x5565d59b6300 <col:84> col:87 'int'
| |-ParmVarDecl 0x5565d59b6380 <col:89> col:95 'double'
| `-NoThrowAttr 0x5565d59b64d0 <col:113>
|-FunctionDecl 0x5565d59b65d8 <line:180:15> col:15 implicit erf 'double (double)' extern
| |-ParmVarDecl 0x5565d59b6678 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59b66e8 <col:15> Implicit
|-FunctionDecl 0x5565d59b6740 prev 0x5565d59b65d8 <col:1, col:57> col:15 erf 'double (double)' extern
| |-ParmVarDecl 0x5565d59b6540 <col:20> col:26 'double'
| `-NoThrowAttr 0x5565d59b67e8 <col:44>
|-FunctionDecl 0x5565d59b68f0 <col:60, col:118> col:74 __erf 'double (double)' extern
| |-ParmVarDecl 0x5565d59b6858 <col:81> col:87 'double'
| `-NoThrowAttr 0x5565d59b6998 <col:105>
|-FunctionDecl 0x5565d59b6aa0 <line:181:15> col:15 implicit erfc 'double (double)' extern
| |-ParmVarDecl 0x5565d59b6b40 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59b6bb0 <col:15> Implicit
|-FunctionDecl 0x5565d59b6c08 prev 0x5565d59b6aa0 <col:1, col:58> col:15 erfc 'double (double)' extern
| |-ParmVarDecl 0x5565d59b6a08 <col:21> col:27 'double'
| `-NoThrowAttr 0x5565d59b6cb0 <col:45>
|-FunctionDecl 0x5565d59b6db8 <col:61, col:120> col:75 __erfc 'double (double)' extern
| |-ParmVarDecl 0x5565d59b6d20 <col:83> col:89 'double'
| `-NoThrowAttr 0x5565d59b6e60 <col:107>
|-FunctionDecl 0x5565d59b6f68 <line:182:15> col:15 implicit lgamma 'double (double)' extern
| |-ParmVarDecl 0x5565d59b7008 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59b7078 <col:15> Implicit
|-FunctionDecl 0x5565d59b7150 prev 0x5565d59b6f68 <col:1, col:60> col:15 lgamma 'double (double)' extern
| |-ParmVarDecl 0x5565d59b6ed0 <col:23> col:29 'double'
| `-NoThrowAttr 0x5565d59b71f8 <col:47>
|-FunctionDecl 0x5565d59b7300 <col:63, col:124> col:77 __lgamma 'double (double)' extern
| |-ParmVarDecl 0x5565d59b7268 <col:87> col:93 'double'
| `-NoThrowAttr 0x5565d59b73a8 <col:111>
|-FunctionDecl 0x5565d59b74b0 <line:189:15> col:15 implicit tgamma 'double (double)' extern
| |-ParmVarDecl 0x5565d59b7550 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59b75c0 <col:15> Implicit
|-FunctionDecl 0x5565d59b7618 prev 0x5565d59b74b0 <col:1, col:60> col:15 tgamma 'double (double)' extern
| |-ParmVarDecl 0x5565d59b7418 <col:23> col:29 'double'
| `-NoThrowAttr 0x5565d59b76c0 <col:47>
|-FunctionDecl 0x5565d59b77c8 <col:63, col:124> col:77 __tgamma 'double (double)' extern
| |-ParmVarDecl 0x5565d59b7730 <col:87> col:93 'double'
| `-NoThrowAttr 0x5565d59b7870 <col:111>
|-FunctionDecl 0x5565d59b7978 <line:195:1, col:59> col:15 gamma 'double (double)' extern
| |-ParmVarDecl 0x5565d59b78e0 <col:22> col:28 'double'
| `-NoThrowAttr 0x5565d59b7a20 <col:46>
|-FunctionDecl 0x5565d59b7b28 <col:62, col:122> col:76 __gamma 'double (double)' extern
| |-ParmVarDecl 0x5565d59b7a90 <col:85> col:91 'double'
| `-NoThrowAttr 0x5565d59b7bd0 <col:109>
|-FunctionDecl 0x5565d59b7d60 <line:202:1, col:79> col:15 lgamma_r 'double (double, int *)' extern
| |-ParmVarDecl 0x5565d59b7c40 <col:25> col:31 'double'
| |-ParmVarDecl 0x5565d59b7cc0 <col:33, col:38> col:38 __signgamp 'int *'
| `-NoThrowAttr 0x5565d59b7e10 <col:66>
|-FunctionDecl 0x5565d59b7fa0 <col:82, col:162> col:96 __lgamma_r 'double (double, int *)' extern
| |-ParmVarDecl 0x5565d59b7e80 <col:108> col:114 'double'
| |-ParmVarDecl 0x5565d59b7f00 <col:116, col:121> col:121 __signgamp 'int *'
| `-NoThrowAttr 0x5565d59b8050 <col:149>
|-FunctionDecl 0x5565d59b8190 <line:210:15> col:15 implicit rint 'double (double)' extern
| |-ParmVarDecl 0x5565d59b8230 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5565d59b82a0 <col:15> Implicit
| `-ConstAttr 0x5565d59b82f8 <col:15> Implicit
|-FunctionDecl 0x5565d59b8320 prev 0x5565d59b8190 <col:1, col:62> col:15 rint 'double (double)' extern
| |-ParmVarDecl 0x5565d59b80c0 <col:21, col:28> col:28 __x 'double'
| |-ConstAttr 0x5565d59b8420 <col:15> Inherited Implicit
| `-NoThrowAttr 0x5565d59b83c8 <col:49>
|-FunctionDecl 0x5565d59b84f8 <col:65, col:128> col:79 __rint 'double (double)' extern
| |-ParmVarDecl 0x5565d59b8460 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5565d59b85a0 <col:115>
|-FunctionDecl 0x5565d59b8730 <line:213:15> col:15 implicit nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b87d0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59b8838 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59b88b0 <col:15> Implicit
|-FunctionDecl 0x5565d59b8908 prev 0x5565d59b8730 <col:1, col:107> col:15 nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b8610 <col:26, col:33> col:33 __x 'double'
| |-ParmVarDecl 0x5565d59b8690 <col:38, col:45> col:45 __y 'double'
| |-NoThrowAttr 0x5565d59b89b8 <col:66>
| `-ConstAttr 0x5565d59b8a10 <col:97>
|-FunctionDecl 0x5565d59b8b70 <col:110, col:218> col:124 __nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b8a50 <col:137, col:144> col:144 __x 'double'
| |-ParmVarDecl 0x5565d59b8ad0 <col:149, col:156> col:156 __y 'double'
| |-NoThrowAttr 0x5565d59b8c20 <col:177>
| `-ConstAttr 0x5565d59b8c78 <col:208>
|-FunctionDecl 0x5565d59b8e18 <line:215:15> col:15 implicit nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x5565d59b8eb8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59b8f20 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59b8f98 <col:15> Implicit
|-FunctionDecl 0x5565d59b8ff0 prev 0x5565d59b8e18 <col:1, col:113> col:15 nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x5565d59b8cb8 <col:27, col:34> col:34 __x 'double'
| |-ParmVarDecl 0x5565d59b8d38 <col:39, col:51> col:51 __y 'long double'
| |-NoThrowAttr 0x5565d59b90a0 <col:72>
| `-ConstAttr 0x5565d59b90f8 <col:103>
|-FunctionDecl 0x5565d59b9290 <col:116, col:230> col:130 __nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x5565d59b9170 <col:144, col:151> col:151 __x 'double'
| |-ParmVarDecl 0x5565d59b91f0 <col:156, col:168> col:168 __y 'long double'
| |-NoThrowAttr 0x5565d59b9340 <col:189>
| `-ConstAttr 0x5565d59b9398 <col:220>
|-FunctionDecl 0x5565d59b94f8 <line:219:15> col:15 implicit used remainder 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b9598 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59b9600 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59b9678 <col:15> Implicit
|-FunctionDecl 0x5565d59b96d0 prev 0x5565d59b94f8 <col:1, col:79> col:15 used remainder 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b93d8 <col:26, col:33> col:33 __x 'double'
| |-ParmVarDecl 0x5565d59b9458 <col:38, col:45> col:45 __y 'double'
| `-NoThrowAttr 0x5565d59b9780 <col:66>
|-FunctionDecl 0x5565d59b9910 <col:82, col:162> col:96 __remainder 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b97f0 <col:109, col:116> col:116 __x 'double'
| |-ParmVarDecl 0x5565d59b9870 <col:121, col:128> col:128 __y 'double'
| `-NoThrowAttr 0x5565d59b99c0 <col:149>
|-FunctionDecl 0x5565d59b9b50 <line:223:15> col:15 implicit scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x5565d59b9bf0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59b9c58 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5565d59b9cd0 <col:15> Implicit
|-FunctionDecl 0x5565d59b9d28 prev 0x5565d59b9b50 <col:1, col:73> col:15 scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x5565d59b9a30 <col:23, col:30> col:30 __x 'double'
| |-ParmVarDecl 0x5565d59b9ab0 <col:35, col:39> col:39 __n 'int'
| `-NoThrowAttr 0x5565d59b9dd8 <col:60>
|-FunctionDecl 0x5565d59b9f68 <col:76, col:150> col:90 __scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x5565d59b9e48 <col:100, col:107> col:107 __x 'double'
| |-ParmVarDecl 0x5565d59b9ec8 <col:112, col:116> col:116 __n 'int'
| `-NoThrowAttr 0x5565d59ba018 <col:137>
|-FunctionDecl 0x5565d59ba180 <line:227:12> col:12 implicit ilogb 'int (double)' extern
| |-ParmVarDecl 0x5565d59ba220 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59ba290 <col:12> Implicit
|-FunctionDecl 0x5565d59ba2e8 prev 0x5565d59ba180 <col:1, col:60> col:12 ilogb 'int (double)' extern
| |-ParmVarDecl 0x5565d59ba088 <col:19, col:26> col:26 __x 'double'
| `-NoThrowAttr 0x5565d59ba390 <col:47>
|-FunctionDecl 0x5565d59ba498 <col:63, col:124> col:74 __ilogb 'int (double)' extern
| |-ParmVarDecl 0x5565d59ba400 <col:83, col:90> col:90 __x 'double'
| `-NoThrowAttr 0x5565d59ba540 <col:111>
|-FunctionDecl 0x5565d59ba718 <line:232:15> col:15 implicit scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x5565d59ba7b8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59ba820 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x5565d59ba898 <col:15> Implicit
|-FunctionDecl 0x5565d59ba8f0 prev 0x5565d59ba718 <col:1, col:79> col:15 scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x5565d59ba5b0 <col:24, col:31> col:31 __x 'double'
| |-ParmVarDecl 0x5565d59ba630 <col:36, col:45> col:45 __n 'long'
| `-NoThrowAttr 0x5565d59ba9a0 <col:66>
|-FunctionDecl 0x5565d59bab30 <col:82, col:162> col:96 __scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x5565d59baa10 <col:107, col:114> col:114 __x 'double'
| |-ParmVarDecl 0x5565d59baa90 <col:119, col:128> col:128 __n 'long'
| `-NoThrowAttr 0x5565d59babe0 <col:149>
|-FunctionDecl 0x5565d59bace8 <line:236:15> col:15 implicit nearbyint 'double (double)' extern
| |-ParmVarDecl 0x5565d59bad88 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5565d59badf8 <col:15> Implicit
| `-ConstAttr 0x5565d59bae50 <col:15> Implicit
|-FunctionDecl 0x5565d59bae78 prev 0x5565d59bace8 <col:1, col:67> col:15 nearbyint 'double (double)' extern
| |-ParmVarDecl 0x5565d59bac50 <col:26, col:33> col:33 __x 'double'
| |-ConstAttr 0x5565d59baf78 <col:15> Inherited Implicit
| `-NoThrowAttr 0x5565d59baf20 <col:54>
|-FunctionDecl 0x5565d59bb050 <col:70, col:138> col:84 __nearbyint 'double (double)' extern
| |-ParmVarDecl 0x5565d59bafb8 <col:97, col:104> col:104 __x 'double'
| `-NoThrowAttr 0x5565d59bb0f8 <col:125>
|-FunctionDecl 0x5565d59bb228 <line:240:15> col:15 implicit round 'double (double)' extern
| |-ParmVarDecl 0x5565d59bb2c8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5565d59bb338 <col:15> Implicit
| `-ConstAttr 0x5565d59bb390 <col:15> Implicit
|-FunctionDecl 0x5565d59bb3b8 prev 0x5565d59bb228 <col:1, col:91> col:15 round 'double (double)' extern
| |-ParmVarDecl 0x5565d59bb190 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x5565d59bb460 <col:50>
| `-ConstAttr 0x5565d59bb4b8 <col:81>
|-FunctionDecl 0x5565d59bb590 <col:94, col:186> col:108 __round 'double (double)' extern
| |-ParmVarDecl 0x5565d59bb4f8 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x5565d59bb638 <col:145>
| `-ConstAttr 0x5565d59bb690 <col:176>
|-FunctionDecl 0x5565d59bb768 <line:244:15> col:15 implicit trunc 'double (double)' extern
| |-ParmVarDecl 0x5565d59bb808 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5565d59bb878 <col:15> Implicit
| `-ConstAttr 0x5565d59bb8d0 <col:15> Implicit
|-FunctionDecl 0x5565d59bb8f8 prev 0x5565d59bb768 <col:1, col:91> col:15 trunc 'double (double)' extern
| |-ParmVarDecl 0x5565d59bb6d0 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x5565d59bb9a0 <col:50>
| `-ConstAttr 0x5565d59bb9f8 <col:81>
|-FunctionDecl 0x5565d59bbad0 <col:94, col:186> col:108 __trunc 'double (double)' extern
| |-ParmVarDecl 0x5565d59bba38 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x5565d59bbb78 <col:145>
| `-ConstAttr 0x5565d59bbbd0 <col:176>
|-FunctionDecl 0x5565d59bbe08 <line:249:15> col:15 implicit remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x5565d59bbea8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59bbf10 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59bbf78 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5565d59bbff8 <col:15> Implicit
|-FunctionDecl 0x5565d59bc050 prev 0x5565d59bbe08 <col:1, col:88> col:15 remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x5565d59bbc10 <col:23, col:30> col:30 __x 'double'
| |-ParmVarDecl 0x5565d59bbc90 <col:35, col:42> col:42 __y 'double'
| |-ParmVarDecl 0x5565d59bbd10 <col:47, col:52> col:52 __quo 'int *'
| `-NoThrowAttr 0x5565d59bc108 <col:75>
|-FunctionDecl 0x5565d59bc348 <col:91, col:180> col:105 __remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x5565d59bc1a0 <col:115, col:122> col:122 __x 'double'
| |-ParmVarDecl 0x5565d59bc220 <col:127, col:134> col:134 __y 'double'
| |-ParmVarDecl 0x5565d59bc2a0 <col:139, col:144> col:144 __quo 'int *'
| `-NoThrowAttr 0x5565d59bc400 <col:167>
|-FunctionDecl 0x5565d59bc548 <line:256:17> col:17 implicit lrint 'long (double)' extern
| |-ParmVarDecl 0x5565d59bc5e8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59bc658 <col:17> Implicit
|-FunctionDecl 0x5565d59bc6b0 prev 0x5565d59bc548 <col:1, col:65> col:17 lrint 'long (double)' extern
| |-ParmVarDecl 0x5565d59bc470 <col:24, col:31> col:31 __x 'double'
| `-NoThrowAttr 0x5565d59bc758 <col:52>
|-FunctionDecl 0x5565d59bc860 <col:68, col:134> col:84 __lrint 'long (double)' extern
| |-ParmVarDecl 0x5565d59bc7c8 <col:93, col:100> col:100 __x 'double'
| `-NoThrowAttr 0x5565d59bc908 <col:121>
|-FunctionDecl 0x5565d59bca48 <line:258:22> col:22 implicit llrint 'long long (double)' extern
| |-ParmVarDecl 0x5565d59bcae8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59bcb58 <col:22> Implicit
|-FunctionDecl 0x5565d59bcbb0 prev 0x5565d59bca48 <col:1, col:71> col:22 llrint 'long long (double)' extern
| |-ParmVarDecl 0x5565d59bc978 <col:30, col:37> col:37 __x 'double'
| `-NoThrowAttr 0x5565d59bcc58 <col:58>
|-FunctionDecl 0x5565d59bcd60 <col:74, col:146> col:95 __llrint 'long long (double)' extern
| |-ParmVarDecl 0x5565d59bccc8 <col:105, col:112> col:112 __x 'double'
| `-NoThrowAttr 0x5565d59bce08 <col:133>
|-FunctionDecl 0x5565d59bcf10 <line:262:17> col:17 implicit lround 'long (double)' extern
| |-ParmVarDecl 0x5565d59bcfb0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59bd020 <col:17> Implicit
|-FunctionDecl 0x5565d59bd078 prev 0x5565d59bcf10 <col:1, col:66> col:17 lround 'long (double)' extern
| |-ParmVarDecl 0x5565d59bce78 <col:25, col:32> col:32 __x 'double'
| `-NoThrowAttr 0x5565d59bd120 <col:53>
|-FunctionDecl 0x5565d59bd248 <col:69, col:136> col:85 __lround 'long (double)' extern
| |-ParmVarDecl 0x5565d59bd1b0 <col:95, col:102> col:102 __x 'double'
| `-NoThrowAttr 0x5565d59bd2f0 <col:123>
|-FunctionDecl 0x5565d59bd3f8 <line:264:22> col:22 implicit llround 'long long (double)' extern
| |-ParmVarDecl 0x5565d59bd498 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59bd508 <col:22> Implicit
|-FunctionDecl 0x5565d59bd560 prev 0x5565d59bd3f8 <col:1, col:72> col:22 llround 'long long (double)' extern
| |-ParmVarDecl 0x5565d59bd360 <col:31, col:38> col:38 __x 'double'
| `-NoThrowAttr 0x5565d59bd608 <col:59>
|-FunctionDecl 0x5565d59bd710 <col:75, col:148> col:96 __llround 'long long (double)' extern
| |-ParmVarDecl 0x5565d59bd678 <col:107, col:114> col:114 __x 'double'
| `-NoThrowAttr 0x5565d59bd7b8 <col:135>
|-FunctionDecl 0x5565d59bd948 <line:268:15> col:15 implicit fdim 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59bd9e8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59bda50 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5565d59bdac8 <col:15> Implicit
|-FunctionDecl 0x5565d59bdb20 prev 0x5565d59bd948 <col:1, col:74> col:15 fdim 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59bd828 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5565d59bd8a8 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x5565d59bdbd0 <col:61>
|-FunctionDecl 0x5565d59bdd60 <col:77, col:152> col:91 __fdim 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59bdc40 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x5565d59bdcc0 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x5565d59bde10 <col:139>
|-FunctionDecl 0x5565d59bdfa0 <line:271:15> col:15 implicit fmax 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59be040 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59be0a8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5565d59be120 <col:15> Implicit
| `-ConstAttr 0x5565d59be178 <col:15> Implicit
|-FunctionDecl 0x5565d59b2100 prev 0x5565d59bdfa0 <col:1, col:102> col:15 fmax 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59bde80 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5565d59bdf00 <col:33, col:40> col:40 __y 'double'
| |-NoThrowAttr 0x5565d59b21b0 <col:61>
| `-ConstAttr 0x5565d59b2208 <col:92>
|-FunctionDecl 0x5565d59b2368 <col:105, col:208> col:119 __fmax 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b2248 <col:127, col:134> col:134 __x 'double'
| |-ParmVarDecl 0x5565d59b22c8 <col:139, col:146> col:146 __y 'double'
| |-NoThrowAttr 0x5565d59b2418 <col:167>
| `-ConstAttr 0x5565d59b2470 <col:198>
|-FunctionDecl 0x5565d59b25d0 <line:274:15> col:15 implicit fmin 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b2670 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59b26d8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5565d59b2750 <col:15> Implicit
| `-ConstAttr 0x5565d59b27a8 <col:15> Implicit
|-FunctionDecl 0x5565d59b27d0 prev 0x5565d59b25d0 <col:1, col:102> col:15 fmin 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b24b0 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5565d59b2530 <col:33, col:40> col:40 __y 'double'
| |-NoThrowAttr 0x5565d59b2880 <col:61>
| `-ConstAttr 0x5565d59b28d8 <col:92>
|-FunctionDecl 0x5565d59b2a38 <col:105, col:208> col:119 __fmin 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59b2918 <col:127, col:134> col:134 __x 'double'
| |-ParmVarDecl 0x5565d59b2998 <col:139, col:146> col:146 __y 'double'
| |-NoThrowAttr 0x5565d59b2ae8 <col:167>
| `-ConstAttr 0x5565d59b2b40 <col:198>
|-FunctionDecl 0x5565d59b2c18 <line:278:1, line:279:32> line:278:12 __fpclassify 'int (double)' extern
| |-ParmVarDecl 0x5565d59b2b80 <col:26, col:33> col:33 __value 'double'
| |-NoThrowAttr 0x5565d59b2cc0 <col:58>
| `-ConstAttr 0x5565d59b2d18 <line:279:22>
|-FunctionDecl 0x5565d59b2df0 <line:282:1, line:283:32> line:282:12 used __signbit 'int (double)' extern
| |-ParmVarDecl 0x5565d59b2d58 <col:23, col:30> col:30 __value 'double'
| |-NoThrowAttr 0x5565d59b2e98 <col:55>
| `-ConstAttr 0x5565d59b2ef0 <line:283:22>
|-FunctionDecl 0x5565d59c1220 <line:287:15> col:15 implicit fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x5565d59c12c0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59c1328 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5565d59c1390 <<invalid sloc>> <invalid sloc> 'double'
| |-ConstAttr 0x5565d59c1410 <col:15> Implicit
| `-NoThrowAttr 0x5565d59c1468 <col:15> Implicit
|-FunctionDecl 0x5565d59c1490 prev 0x5565d59c1220 <col:1, col:85> col:15 fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x5565d59b2f30 <col:20, col:27> col:27 __x 'double'
| |-ParmVarDecl 0x5565d59b2fb0 <col:32, col:39> col:39 __y 'double'
| |-ParmVarDecl 0x5565d59b3030 <col:44, col:51> col:51 __z 'double'
| |-ConstAttr 0x5565d59c15a0 <col:15> Inherited Implicit
| `-NoThrowAttr 0x5565d59c1548 <col:72>
|-FunctionDecl 0x5565d59c1788 <col:88, col:174> col:102 __fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x5565d59c15e0 <col:109, col:116> col:116 __x 'double'
| |-ParmVarDecl 0x5565d59c1660 <col:121, col:128> col:128 __y 'double'
| |-ParmVarDecl 0x5565d59c16e0 <col:133, col:140> col:140 __z 'double'
| `-NoThrowAttr 0x5565d59c1840 <col:161>
|-FunctionDecl 0x5565d59c19d0 <line:288:1, col:75> col:15 scalb 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59c18b0 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x5565d59c1930 <col:34, col:41> col:41 __n 'double'
| `-NoThrowAttr 0x5565d59c1a80 <col:62>
|-FunctionDecl 0x5565d59c1c10 <col:78, col:154> col:92 __scalb 'double (double, double)' extern
| |-ParmVarDecl 0x5565d59c1af0 <col:101, col:108> col:108 __x 'double'
| |-ParmVarDecl 0x5565d59c1b70 <col:113, col:120> col:120 __n 'double'
| `-NoThrowAttr 0x5565d59c1cc0 <col:141>
|-FunctionDecl 0x5565d59c1e08 <line:289:14> col:14 implicit acosf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c1ea8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c1f18 <col:14> Implicit
|-FunctionDecl 0x5565d59c1f70 prev 0x5565d59c1e08 <col:1, col:61> col:14 acosf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c1d30 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5565d59c2018 <col:48>
|-FunctionDecl 0x5565d59c2120 <col:64, col:126> col:77 __acosf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c2088 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5565d59c21f0 <col:113>
|-FunctionDecl 0x5565d59c22f8 <line:291:14> col:14 implicit asinf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c2398 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c2408 <col:14> Implicit
|-FunctionDecl 0x5565d59c2460 prev 0x5565d59c22f8 <col:1, col:61> col:14 asinf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c2260 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5565d59c2508 <col:48>
|-FunctionDecl 0x5565d59c2610 <col:64, col:126> col:77 __asinf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c2578 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5565d59c26b8 <col:113>
|-FunctionDecl 0x5565d59c27c0 <line:293:14> col:14 implicit atanf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c2860 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c28d0 <col:14> Implicit
|-FunctionDecl 0x5565d59c2928 prev 0x5565d59c27c0 <col:1, col:61> col:14 atanf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c2728 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5565d59c29d0 <col:48>
|-FunctionDecl 0x5565d59c2ad8 <col:64, col:126> col:77 __atanf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c2a40 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5565d59c2b80 <col:113>
|-FunctionDecl 0x5565d59c2d58 <line:295:14> col:14 implicit atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59c2df8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59c2e60 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c2ed8 <col:14> Implicit
|-FunctionDecl 0x5565d59c2f30 prev 0x5565d59c2d58 <col:1, col:73> col:14 atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59c2bf0 <col:22, col:28> col:28 __y 'float'
| |-ParmVarDecl 0x5565d59c2c70 <col:33, col:39> col:39 __x 'float'
| `-NoThrowAttr 0x5565d59c2fe0 <col:60>
|-FunctionDecl 0x5565d59c3200 <col:76, col:150> col:89 __atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59c3050 <col:99, col:105> col:105 __y 'float'
| |-ParmVarDecl 0x5565d59c30d0 <col:110, col:116> col:116 __x 'float'
| `-NoThrowAttr 0x5565d59c32b0 <col:137>
|-FunctionDecl 0x5565d59c33b8 <line:298:15> col:15 implicit cosf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c3458 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c34c8 <col:15> Implicit
|-FunctionDecl 0x5565d59c3520 prev 0x5565d59c33b8 <col:2, col:61> col:15 cosf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c3320 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5565d59c35c8 <col:48>
|-FunctionDecl 0x5565d59c36d0 <col:64, col:125> col:77 __cosf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c3638 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x5565d59c3778 <col:112>
|-FunctionDecl 0x5565d59c3880 <line:300:15> col:15 implicit sinf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c3920 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c3990 <col:15> Implicit
|-FunctionDecl 0x5565d59c39e8 prev 0x5565d59c3880 <col:2, col:61> col:15 sinf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c37e8 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5565d59c3a90 <col:48>
|-FunctionDecl 0x5565d59c3b98 <col:64, col:125> col:77 __sinf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c3b00 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x5565d59c3c40 <col:112>
|-FunctionDecl 0x5565d59c3d48 <line:302:14> col:14 implicit tanf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c3de8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c3e58 <col:14> Implicit
|-FunctionDecl 0x5565d59c3eb0 prev 0x5565d59c3d48 <col:1, col:60> col:14 tanf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c3cb0 <col:20, col:26> col:26 __x 'float'
| `-NoThrowAttr 0x5565d59c3f58 <col:47>
|-FunctionDecl 0x5565d59c4060 <col:63, col:124> col:76 __tanf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c3fc8 <col:84, col:90> col:90 __x 'float'
| `-NoThrowAttr 0x5565d59c4108 <col:111>
|-FunctionDecl 0x5565d59c4240 <line:307:14> col:14 implicit coshf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c42e0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c4350 <col:14> Implicit
|-FunctionDecl 0x5565d59c43a8 prev 0x5565d59c4240 <col:1, col:61> col:14 coshf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c4178 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5565d59c4450 <col:48>
|-FunctionDecl 0x5565d59c4558 <col:64, col:126> col:77 __coshf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c44c0 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5565d59c4600 <col:113>
|-FunctionDecl 0x5565d59c4708 <line:309:14> col:14 implicit sinhf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c47a8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c4818 <col:14> Implicit
|-FunctionDecl 0x5565d59c4870 prev 0x5565d59c4708 <col:1, col:61> col:14 sinhf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c4670 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5565d59c4918 <col:48>
|-FunctionDecl 0x5565d59c4a20 <col:64, col:126> col:77 __sinhf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c4988 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5565d59c4ac8 <col:113>
|-FunctionDecl 0x5565d59c4bd0 <line:311:14> col:14 implicit tanhf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c4c70 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c4ce0 <col:14> Implicit
|-FunctionDecl 0x5565d59c4d38 prev 0x5565d59c4bd0 <col:1, col:61> col:14 tanhf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c4b38 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5565d59c4de0 <col:48>
|-FunctionDecl 0x5565d59c4ee8 <col:64, col:126> col:77 __tanhf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c4e50 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5565d59c4f90 <col:113>
|-FunctionDecl 0x5565d59c5098 <line:312:14> col:14 implicit acoshf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c5138 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c51a8 <col:14> Implicit
|-FunctionDecl 0x5565d59c5220 prev 0x5565d59c5098 <col:1, col:62> col:14 acoshf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c5000 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5565d59c52c8 <col:49>
|-FunctionDecl 0x5565d59c53d0 <col:65, col:128> col:78 __acoshf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c5338 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5565d59c5478 <col:115>
|-FunctionDecl 0x5565d59c5580 <line:314:14> col:14 implicit asinhf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c5620 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c5690 <col:14> Implicit
|-FunctionDecl 0x5565d59c56e8 prev 0x5565d59c5580 <col:1, col:62> col:14 asinhf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c54e8 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5565d59c5790 <col:49>
|-FunctionDecl 0x5565d59c5898 <col:65, col:128> col:78 __asinhf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c5800 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5565d59c5940 <col:115>
|-FunctionDecl 0x5565d59c5a48 <line:316:14> col:14 implicit atanhf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c5ae8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c5b58 <col:14> Implicit
|-FunctionDecl 0x5565d59c5bb0 prev 0x5565d59c5a48 <col:1, col:62> col:14 atanhf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c59b0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5565d59c5c58 <col:49>
|-FunctionDecl 0x5565d59c5d60 <col:65, col:128> col:78 __atanhf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c5cc8 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5565d59c5e08 <col:115>
|-FunctionDecl 0x5565d59c5f10 <line:324:15> col:15 implicit expf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c5fb0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c6020 <col:15> Implicit
|-FunctionDecl 0x5565d59c6078 prev 0x5565d59c5f10 <col:2, col:61> col:15 expf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c5e78 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5565d59c6120 <col:48>
|-FunctionDecl 0x5565d59c6260 <col:64, col:125> col:77 __expf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c6190 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x5565d59c6308 <col:112>
|-FunctionDecl 0x5565d59c64d8 <line:327:14> col:14 implicit frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x5565d59c6578 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59c65e0 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5565d59c6658 <col:14> Implicit
|-FunctionDecl 0x5565d59c66b0 prev 0x5565d59c64d8 <col:1, col:79> col:14 frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x5565d59c6378 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x5565d59c63f8 <col:33, col:38> col:38 __exponent 'int *'
| `-NoThrowAttr 0x5565d59c6760 <col:66>
|-FunctionDecl 0x5565d59c68f0 <col:82, col:162> col:95 __frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x5565d59c67d0 <col:105, col:111> col:111 __x 'float'
| |-ParmVarDecl 0x5565d59c6850 <col:116, col:121> col:121 __exponent 'int *'
| `-NoThrowAttr 0x5565d59c69a0 <col:149>
|-FunctionDecl 0x5565d59c6b78 <line:330:14> col:14 implicit ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x5565d59c6c18 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59c6c80 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5565d59c6cf8 <col:14> Implicit
|-FunctionDecl 0x5565d59c6d50 prev 0x5565d59c6b78 <col:1, col:78> col:14 ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x5565d59c6a10 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x5565d59c6a90 <col:33, col:37> col:37 __exponent 'int'
| `-NoThrowAttr 0x5565d59c6e00 <col:65>
|-FunctionDecl 0x5565d59c6f90 <col:81, col:160> col:94 __ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x5565d59c6e70 <col:104, col:110> col:110 __x 'float'
| |-ParmVarDecl 0x5565d59c6ef0 <col:115, col:119> col:119 __exponent 'int'
| `-NoThrowAttr 0x5565d59c7040 <col:147>
|-FunctionDecl 0x5565d59c7148 <line:333:15> col:15 implicit logf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c7240 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c72b0 <col:15> Implicit
|-FunctionDecl 0x5565d59c7308 prev 0x5565d59c7148 <col:2, col:61> col:15 logf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c70b0 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5565d59c73b0 <col:48>
|-FunctionDecl 0x5565d59c74b8 <col:64, col:125> col:77 __logf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c7420 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x5565d59c7560 <col:112>
|-FunctionDecl 0x5565d59c7668 <line:336:14> col:14 implicit log10f 'float (float)' extern
| |-ParmVarDecl 0x5565d59c7708 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c7778 <col:14> Implicit
|-FunctionDecl 0x5565d59c77d0 prev 0x5565d59c7668 <col:1, col:62> col:14 log10f 'float (float)' extern
| |-ParmVarDecl 0x5565d59c75d0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5565d59c7878 <col:49>
|-FunctionDecl 0x5565d59c7980 <col:65, col:128> col:78 __log10f 'float (float)' extern
| |-ParmVarDecl 0x5565d59c78e8 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5565d59c7a28 <col:115>
|-FunctionDecl 0x5565d59c7c28 <line:339:14> col:14 implicit modff 'float (float, float *)' extern
| |-ParmVarDecl 0x5565d59c7cc8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59c7d30 <<invalid sloc>> <invalid sloc> 'float *'
| `-NoThrowAttr 0x5565d59c7da8 <col:14> Implicit
|-FunctionDecl 0x5565d59c7e00 prev 0x5565d59c7c28 <col:1, col:76> col:14 modff 'float (float, float *)' extern
| |-ParmVarDecl 0x5565d59c7a98 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5565d59c7b48 <col:32, col:39> col:39 __iptr 'float *'
| `-NoThrowAttr 0x5565d59c7eb0 <col:63>
|-FunctionDecl 0x5565d59c8060 <col:79, col:190> col:92 __modff 'float (float, float *)' extern
| |-ParmVarDecl 0x5565d59c7f20 <col:101, col:107> col:107 __x 'float'
| |-ParmVarDecl 0x5565d59c7fa0 <col:112, col:119> col:119 __iptr 'float *'
| |-NoThrowAttr 0x5565d59c8110 <col:143>
| `-NonNullAttr 0x5565d59c8168 <col:174, col:188> 2
|-FunctionDecl 0x5565d59c8280 <line:340:14> col:14 implicit expm1f 'float (float)' extern
| |-ParmVarDecl 0x5565d59c8320 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c8390 <col:14> Implicit
|-FunctionDecl 0x5565d59c83e8 prev 0x5565d59c8280 <col:1, col:62> col:14 expm1f 'float (float)' extern
| |-ParmVarDecl 0x5565d59c81c0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5565d59c8490 <col:49>
|-FunctionDecl 0x5565d59c8598 <col:65, col:128> col:78 __expm1f 'float (float)' extern
| |-ParmVarDecl 0x5565d59c8500 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5565d59c8640 <col:115>
|-FunctionDecl 0x5565d59c8748 <line:343:14> col:14 implicit log1pf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c87e8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c8858 <col:14> Implicit
|-FunctionDecl 0x5565d59c88b0 prev 0x5565d59c8748 <col:1, col:62> col:14 log1pf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c86b0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5565d59c8958 <col:49>
|-FunctionDecl 0x5565d59c8a60 <col:65, col:128> col:78 __log1pf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c89c8 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5565d59c8b08 <col:115>
|-FunctionDecl 0x5565d59c8c10 <line:346:14> col:14 implicit logbf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c8cb0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c8d20 <col:14> Implicit
|-FunctionDecl 0x5565d59c8d78 prev 0x5565d59c8c10 <col:1, col:61> col:14 logbf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c8b78 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5565d59c8e20 <col:48>
|-FunctionDecl 0x5565d59c8f28 <col:64, col:126> col:77 __logbf 'float (float)' extern
| |-ParmVarDecl 0x5565d59c8e90 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5565d59c8fd0 <col:113>
|-FunctionDecl 0x5565d59c90d8 <line:353:14> col:14 implicit exp2f 'float (float)' extern
| |-ParmVarDecl 0x5565d59c9178 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59c91e8 <col:14> Implicit
|-FunctionDecl 0x5565d59ca270 prev 0x5565d59c90d8 <col:1, col:61> col:14 exp2f 'float (float)' extern
| |-ParmVarDecl 0x5565d59c9040 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5565d59ca318 <col:48>
|-FunctionDecl 0x5565d59ca420 <col:64, col:126> col:77 __exp2f 'float (float)' extern
| |-ParmVarDecl 0x5565d59ca388 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5565d59ca4c8 <col:113>
|-FunctionDecl 0x5565d59ca5d0 <line:356:14> col:14 implicit log2f 'float (float)' extern
| |-ParmVarDecl 0x5565d59ca670 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59ca6e0 <col:14> Implicit
|-FunctionDecl 0x5565d59ca738 prev 0x5565d59ca5d0 <col:1, col:61> col:14 log2f 'float (float)' extern
| |-ParmVarDecl 0x5565d59ca538 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5565d59ca7e0 <col:48>
|-FunctionDecl 0x5565d59ca8e8 <col:64, col:126> col:77 __log2f 'float (float)' extern
| |-ParmVarDecl 0x5565d59ca850 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5565d59ca990 <col:113>
|-FunctionDecl 0x5565d59cab20 <line:357:15> col:15 implicit powf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59cabc0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59cac28 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59caca0 <col:15> Implicit
|-FunctionDecl 0x5565d59cacf8 prev 0x5565d59cab20 <col:2, col:72> col:15 powf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59caa00 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5565d59caa80 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x5565d59cada8 <col:59>
|-FunctionDecl 0x5565d59caf38 <col:75, col:147> col:88 __powf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59cae18 <col:96, col:102> col:102 __x 'float'
| |-ParmVarDecl 0x5565d59cae98 <col:107, col:113> col:113 __y 'float'
| `-NoThrowAttr 0x5565d59cafe8 <col:134>
|-FunctionDecl 0x5565d59cb0f0 <line:360:14> col:14 implicit sqrtf 'float (float)' extern
| |-ParmVarDecl 0x5565d59cb190 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59cb200 <col:14> Implicit
|-FunctionDecl 0x5565d59cb280 prev 0x5565d59cb0f0 <col:1, col:61> col:14 sqrtf 'float (float)' extern
| |-ParmVarDecl 0x5565d59cb058 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5565d59cb328 <col:48>
|-FunctionDecl 0x5565d59cb430 <col:64, col:126> col:77 __sqrtf 'float (float)' extern
| |-ParmVarDecl 0x5565d59cb398 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5565d59cb4d8 <col:113>
|-FunctionDecl 0x5565d59cb668 <line:366:14> col:14 implicit hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59cb708 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59cb770 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59cb7e8 <col:14> Implicit
|-FunctionDecl 0x5565d59cb840 prev 0x5565d59cb668 <col:1, col:73> col:14 hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59cb548 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x5565d59cb5c8 <col:33, col:39> col:39 __y 'float'
| `-NoThrowAttr 0x5565d59cb8f0 <col:60>
|-FunctionDecl 0x5565d59cba80 <col:76, col:150> col:89 __hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59cb960 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x5565d59cb9e0 <col:110, col:116> col:116 __y 'float'
| `-NoThrowAttr 0x5565d59cbb30 <col:137>
|-FunctionDecl 0x5565d59cbc38 <line:373:14> col:14 implicit cbrtf 'float (float)' extern
| |-ParmVarDecl 0x5565d59cbcd8 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5565d59cbd48 <col:14> Implicit
| `-ConstAttr 0x5565d59cbda0 <col:14> Implicit
|-FunctionDecl 0x5565d59cbdc8 prev 0x5565d59cbc38 <col:1, col:61> col:14 cbrtf 'float (float)' extern
| |-ParmVarDecl 0x5565d59cbba0 <col:21, col:27> col:27 __x 'float'
| |-ConstAttr 0x5565d59cbec8 <col:14> Inherited Implicit
| `-NoThrowAttr 0x5565d59cbe70 <col:48>
|-FunctionDecl 0x5565d59cbfa0 <col:64, col:126> col:77 __cbrtf 'float (float)' extern
| |-ParmVarDecl 0x5565d59cbf08 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5565d59cc048 <col:113>
|-FunctionDecl 0x5565d59cc150 <line:374:14> col:14 implicit ceilf 'float (float)' extern
| |-ParmVarDecl 0x5565d59cc1f0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5565d59cc290 <col:14> Implicit
| `-ConstAttr 0x5565d59cc2e8 <col:14> Implicit
|-FunctionDecl 0x5565d59cc310 prev 0x5565d59cc150 <col:1, col:89> col:14 ceilf 'float (float)' extern
| |-ParmVarDecl 0x5565d59cc0b8 <col:21, col:27> col:27 __x 'float'
| |-NoThrowAttr 0x5565d59cc3b8 <col:48>
| `-ConstAttr 0x5565d59cc410 <col:79>
|-FunctionDecl 0x5565d59cc4e8 <col:92, col:182> col:105 __ceilf 'float (float)' extern
| |-ParmVarDecl 0x5565d59cc450 <col:114, col:120> col:120 __x 'float'
| |-NoThrowAttr 0x5565d59cc590 <col:141>
| `-ConstAttr 0x5565d59cc5e8 <col:172>
|-FunctionDecl 0x5565d59cc6c0 <line:377:14> col:14 implicit fabsf 'float (float)' extern
| |-ParmVarDecl 0x5565d59cc760 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5565d59cc7d0 <col:14> Implicit
| `-ConstAttr 0x5565d59cc828 <col:14> Implicit
|-FunctionDecl 0x5565d59cc850 prev 0x5565d59cc6c0 <col:1, col:89> col:14 fabsf 'float (float)' extern
| |-ParmVarDecl 0x5565d59cc628 <col:21, col:27> col:27 __x 'float'
| |-NoThrowAttr 0x5565d59cc8f8 <col:48>
| `-ConstAttr 0x5565d59cc950 <col:79>
|-FunctionDecl 0x5565d59cca28 <col:92, col:182> col:105 __fabsf 'float (float)' extern
| |-ParmVarDecl 0x5565d59cc990 <col:114, col:120> col:120 __x 'float'
| |-NoThrowAttr 0x5565d59ccad0 <col:141>
| `-ConstAttr 0x5565d59ccb28 <col:172>
|-FunctionDecl 0x5565d59ccc00 <line:380:14> col:14 implicit floorf 'float (float)' extern
| |-ParmVarDecl 0x5565d59ccca0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5565d59ccd10 <col:14> Implicit
| `-ConstAttr 0x5565d59ccd68 <col:14> Implicit
|-FunctionDecl 0x5565d59ccd90 prev 0x5565d59ccc00 <col:1, col:90> col:14 floorf 'float (float)' extern
| |-ParmVarDecl 0x5565d59ccb68 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x5565d59cce38 <col:49>
| `-ConstAttr 0x5565d59cce90 <col:80>
|-FunctionDecl 0x5565d59ccf68 <col:93, col:184> col:106 __floorf 'float (float)' extern
| |-ParmVarDecl 0x5565d59cced0 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x5565d59cd010 <col:143>
| `-ConstAttr 0x5565d59cd068 <col:174>
|-FunctionDecl 0x5565d59cd1c8 <line:383:14> col:14 implicit fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59cd2a0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59cd308 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59cd380 <col:14> Implicit
|-FunctionDecl 0x5565d59cd3d8 prev 0x5565d59cd1c8 <col:1, col:72> col:14 fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59cd0a8 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5565d59cd128 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x5565d59cd488 <col:59>
|-FunctionDecl 0x5565d59cd618 <col:75, col:148> col:88 __fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59cd4f8 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x5565d59cd578 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x5565d59cd6c8 <col:135>
|-FunctionDecl 0x5565d59cd808 <line:388:1, col:94> col:12 __isinff 'int (float)' extern
| |-ParmVarDecl 0x5565d59cd738 <col:22, col:28> col:28 __value 'float'
| |-NoThrowAttr 0x5565d59cd8b0 <col:53>
| `-ConstAttr 0x5565d59cd908 <col:84>
|-FunctionDecl 0x5565d59cd9e0 <line:391:12> col:12 implicit __finitef 'int (float)' extern
| |-ParmVarDecl 0x5565d59cda80 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5565d59cdaf0 <col:12> Implicit
| `-ConstAttr 0x5565d59cdb48 <col:12> Implicit
|-FunctionDecl 0x5565d59cdb70 prev 0x5565d59cd9e0 <col:1, col:95> col:12 __finitef 'int (float)' extern
| |-ParmVarDecl 0x5565d59cd948 <col:23, col:29> col:29 __value 'float'
| |-NoThrowAttr 0x5565d59cdc18 <col:54>
| `-ConstAttr 0x5565d59cdc70 <col:85>
|-FunctionDecl 0x5565d59cdd48 <line:397:1, col:92> col:12 isinff 'int (float)' extern
| |-ParmVarDecl 0x5565d59cdcb0 <col:20, col:26> col:26 __value 'float'
| |-NoThrowAttr 0x5565d59cddf0 <col:51>
| `-ConstAttr 0x5565d59cde48 <col:82>
|-FunctionDecl 0x5565d59cdf20 <line:400:12> col:12 implicit finitef 'int (float)' extern
| |-ParmVarDecl 0x5565d59cdfc0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5565d59ce030 <col:12> Implicit
| `-ConstAttr 0x5565d59ce088 <col:12> Implicit
|-FunctionDecl 0x5565d59ce0b0 prev 0x5565d59cdf20 <col:1, col:93> col:12 finitef 'int (float)' extern
| |-ParmVarDecl 0x5565d59cde88 <col:21, col:27> col:27 __value 'float'
| |-NoThrowAttr 0x5565d59ce158 <col:52>
| `-ConstAttr 0x5565d59ce1b0 <col:83>
|-FunctionDecl 0x5565d59ce350 <line:403:1, col:72> col:14 dremf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59ce1f0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5565d59ce2b0 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x5565d59ce400 <col:59>
|-FunctionDecl 0x5565d59ce590 <col:75, col:148> col:88 __dremf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59ce470 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x5565d59ce4f0 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x5565d59ce640 <col:135>
|-FunctionDecl 0x5565d59ce748 <line:407:1, col:68> col:14 significandf 'float (float)' extern
| |-ParmVarDecl 0x5565d59ce6b0 <col:28, col:34> col:34 __x 'float'
| `-NoThrowAttr 0x5565d59ce7f0 <col:55>
|-FunctionDecl 0x5565d59ce8f8 <col:71, col:140> col:84 __significandf 'float (float)' extern
| |-ParmVarDecl 0x5565d59ce860 <col:100, col:106> col:106 __x 'float'
| `-NoThrowAttr 0x5565d59ce9a0 <col:127>
|-FunctionDecl 0x5565d59ceb30 <line:413:14> col:14 implicit copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59cebd0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59cec38 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5565d59cecb0 <col:14> Implicit
| `-ConstAttr 0x5565d59ced08 <col:14> Implicit
|-FunctionDecl 0x5565d59ced30 prev 0x5565d59ceb30 <col:1, col:104> col:14 copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59cea10 <col:25, col:31> col:31 __x 'float'
| |-ParmVarDecl 0x5565d59cea90 <col:36, col:42> col:42 __y 'float'
| |-NoThrowAttr 0x5565d59cede0 <col:63>
| `-ConstAttr 0x5565d59cee38 <col:94>
|-FunctionDecl 0x5565d59cef98 <col:107, col:212> col:120 __copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59cee78 <col:133, col:139> col:139 __x 'float'
| |-ParmVarDecl 0x5565d59ceef8 <col:144, col:150> col:150 __y 'float'
| |-NoThrowAttr 0x5565d59cf048 <col:171>
| `-ConstAttr 0x5565d59cf0a0 <col:202>
|-FunctionDecl 0x5565d59cf1b8 <line:420:14> col:14 implicit nanf 'float (const char *)' extern
| |-ParmVarDecl 0x5565d59cf2c0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x5565d59cf330 <col:14> Implicit
| `-PureAttr 0x5565d59cf388 <col:14> Implicit
|-FunctionDecl 0x5565d59cf3b0 prev 0x5565d59cf1b8 <col:1, col:97> col:14 nanf 'float (const char *)' extern
| |-ParmVarDecl 0x5565d59cf0e0 <col:20, col:32> col:32 __tagb 'const char *'
| |-PureAttr 0x5565d59cf4d8 <col:14> Inherited Implicit
| |-NoThrowAttr 0x5565d59cf458 <col:56>
| `-ConstAttr 0x5565d59cf4b0 <col:87>
|-FunctionDecl 0x5565d59cf5b0 <col:100, col:198> col:113 __nanf 'float (const char *)' extern
| |-ParmVarDecl 0x5565d59cf518 <col:121, col:133> col:133 __tagb 'const char *'
| |-NoThrowAttr 0x5565d59cf658 <col:157>
| `-ConstAttr 0x5565d59cf6b0 <col:188>
|-FunctionDecl 0x5565d59cf788 <line:426:1, col:94> col:12 used __isnanf 'int (float)' extern
| |-ParmVarDecl 0x5565d59cf6f0 <col:22, col:28> col:28 __value 'float'
| |-NoThrowAttr 0x5565d59cf830 <col:53>
| `-ConstAttr 0x5565d59cf888 <col:84>
|-FunctionDecl 0x5565d59cf960 <line:430:1, col:92> col:12 isnanf 'int (float)' extern
| |-ParmVarDecl 0x5565d59cf8c8 <col:20, col:26> col:26 __value 'float'
| |-NoThrowAttr 0x5565d59cfa08 <col:51>
| `-ConstAttr 0x5565d59cfa60 <col:82>
|-FunctionDecl 0x5565d59cfb38 <line:433:1, col:55> col:14 j0f 'float (float)' extern
| |-ParmVarDecl 0x5565d59cfaa0 <col:19> col:24 'float'
| `-NoThrowAttr 0x5565d59cfbe0 <col:42>
|-FunctionDecl 0x5565d59cfce8 <col:58, col:114> col:71 __j0f 'float (float)' extern
| |-ParmVarDecl 0x5565d59cfc50 <col:78> col:83 'float'
| `-NoThrowAttr 0x5565d59cfd90 <col:101>
|-FunctionDecl 0x5565d59cfe98 <line:434:1, col:55> col:14 j1f 'float (float)' extern
| |-ParmVarDecl 0x5565d59cfe00 <col:19> col:24 'float'
| `-NoThrowAttr 0x5565d59cff40 <col:42>
|-FunctionDecl 0x5565d59d0048 <col:58, col:114> col:71 __j1f 'float (float)' extern
| |-ParmVarDecl 0x5565d59cffb0 <col:78> col:83 'float'
| `-NoThrowAttr 0x5565d59d00f0 <col:101>
|-FunctionDecl 0x5565d59d0308 <line:435:1, col:60> col:14 jnf 'float (int, float)' extern
| |-ParmVarDecl 0x5565d59d0160 <col:19> col:22 'int'
| |-ParmVarDecl 0x5565d59d01e0 <col:24> col:29 'float'
| `-NoThrowAttr 0x5565d59d03b8 <col:47>
|-FunctionDecl 0x5565d59d0548 <col:63, col:124> col:76 __jnf 'float (int, float)' extern
| |-ParmVarDecl 0x5565d59d0428 <col:83> col:86 'int'
| |-ParmVarDecl 0x5565d59d04a8 <col:88> col:93 'float'
| `-NoThrowAttr 0x5565d59d05f8 <col:111>
|-FunctionDecl 0x5565d59d0700 <line:436:1, col:55> col:14 y0f 'float (float)' extern
| |-ParmVarDecl 0x5565d59d0668 <col:19> col:24 'float'
| `-NoThrowAttr 0x5565d59d07a8 <col:42>
|-FunctionDecl 0x5565d59d08b0 <col:58, col:114> col:71 __y0f 'float (float)' extern
| |-ParmVarDecl 0x5565d59d0818 <col:78> col:83 'float'
| `-NoThrowAttr 0x5565d59d0958 <col:101>
|-FunctionDecl 0x5565d59d0a60 <line:437:1, col:55> col:14 y1f 'float (float)' extern
| |-ParmVarDecl 0x5565d59d09c8 <col:19> col:24 'float'
| `-NoThrowAttr 0x5565d59d0b08 <col:42>
|-FunctionDecl 0x5565d59d0c10 <col:58, col:114> col:71 __y1f 'float (float)' extern
| |-ParmVarDecl 0x5565d59d0b78 <col:78> col:83 'float'
| `-NoThrowAttr 0x5565d59d0cb8 <col:101>
|-FunctionDecl 0x5565d59d0e48 <line:438:1, col:60> col:14 ynf 'float (int, float)' extern
| |-ParmVarDecl 0x5565d59d0d28 <col:19> col:22 'int'
| |-ParmVarDecl 0x5565d59d0da8 <col:24> col:29 'float'
| `-NoThrowAttr 0x5565d59d0ef8 <col:47>
|-FunctionDecl 0x5565d59d1088 <col:63, col:124> col:76 __ynf 'float (int, float)' extern
| |-ParmVarDecl 0x5565d59d0f68 <col:83> col:86 'int'
| |-ParmVarDecl 0x5565d59d0fe8 <col:88> col:93 'float'
| `-NoThrowAttr 0x5565d59d1138 <col:111>
|-FunctionDecl 0x5565d59d12e0 <line:445:14> col:14 implicit erff 'float (float)' extern
| |-ParmVarDecl 0x5565d59d1380 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59d13f0 <col:14> Implicit
|-FunctionDecl 0x5565d59d1448 prev 0x5565d59d12e0 <col:1, col:56> col:14 erff 'float (float)' extern
| |-ParmVarDecl 0x5565d59d11a8 <col:20> col:25 'float'
| `-NoThrowAttr 0x5565d59d14f0 <col:43>
|-FunctionDecl 0x5565d59d15f8 <col:59, col:116> col:72 __erff 'float (float)' extern
| |-ParmVarDecl 0x5565d59d1560 <col:80> col:85 'float'
| `-NoThrowAttr 0x5565d59d16a0 <col:103>
|-FunctionDecl 0x5565d59d17a8 <line:446:14> col:14 implicit erfcf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d1848 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59d18b8 <col:14> Implicit
|-FunctionDecl 0x5565d59d1910 prev 0x5565d59d17a8 <col:1, col:57> col:14 erfcf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d1710 <col:21> col:26 'float'
| `-NoThrowAttr 0x5565d59d19b8 <col:44>
|-FunctionDecl 0x5565d59d1ac0 <col:60, col:118> col:73 __erfcf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d1a28 <col:82> col:87 'float'
| `-NoThrowAttr 0x5565d59d1b68 <col:105>
|-FunctionDecl 0x5565d59d1c70 <line:447:14> col:14 implicit lgammaf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d1d10 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59d1d80 <col:14> Implicit
|-FunctionDecl 0x5565d59d1dd8 prev 0x5565d59d1c70 <col:1, col:59> col:14 lgammaf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d1bd8 <col:23> col:28 'float'
| `-NoThrowAttr 0x5565d59d1e80 <col:46>
|-FunctionDecl 0x5565d59d1f88 <col:62, col:122> col:75 __lgammaf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d1ef0 <col:86> col:91 'float'
| `-NoThrowAttr 0x5565d59d2030 <col:109>
|-FunctionDecl 0x5565d59d2138 <line:454:14> col:14 implicit tgammaf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d21d8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59d2248 <col:14> Implicit
|-FunctionDecl 0x5565d59d22f0 prev 0x5565d59d2138 <col:1, col:59> col:14 tgammaf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d20a0 <col:23> col:28 'float'
| `-NoThrowAttr 0x5565d59d2398 <col:46>
|-FunctionDecl 0x5565d59d24a0 <col:62, col:122> col:75 __tgammaf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d2408 <col:86> col:91 'float'
| `-NoThrowAttr 0x5565d59d2548 <col:109>
|-FunctionDecl 0x5565d59d2650 <line:460:1, col:58> col:14 gammaf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d25b8 <col:22> col:27 'float'
| `-NoThrowAttr 0x5565d59d26f8 <col:45>
|-FunctionDecl 0x5565d59d2800 <col:61, col:120> col:74 __gammaf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d2768 <col:84> col:89 'float'
| `-NoThrowAttr 0x5565d59d28a8 <col:107>
|-FunctionDecl 0x5565d59d2a38 <line:467:1, col:78> col:14 lgammaf_r 'float (float, int *)' extern
| |-ParmVarDecl 0x5565d59d2918 <col:25> col:30 'float'
| |-ParmVarDecl 0x5565d59d2998 <col:32, col:37> col:37 __signgamp 'int *'
| `-NoThrowAttr 0x5565d59d2ae8 <col:65>
|-FunctionDecl 0x5565d59d2c78 <col:81, col:160> col:94 __lgammaf_r 'float (float, int *)' extern
| |-ParmVarDecl 0x5565d59d2b58 <col:107> col:112 'float'
| |-ParmVarDecl 0x5565d59d2bd8 <col:114, col:119> col:119 __signgamp 'int *'
| `-NoThrowAttr 0x5565d59d2d28 <col:147>
|-FunctionDecl 0x5565d59d2e30 <line:475:14> col:14 implicit rintf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d2ed0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5565d59d2f40 <col:14> Implicit
| `-ConstAttr 0x5565d59d2f98 <col:14> Implicit
|-FunctionDecl 0x5565d59d2fc0 prev 0x5565d59d2e30 <col:1, col:61> col:14 rintf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d2d98 <col:21, col:27> col:27 __x 'float'
| |-ConstAttr 0x5565d59d30c0 <col:14> Inherited Implicit
| `-NoThrowAttr 0x5565d59d3068 <col:48>
|-FunctionDecl 0x5565d59d3198 <col:64, col:126> col:77 __rintf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d3100 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5565d59d3240 <col:113>
|-FunctionDecl 0x5565d59d3420 <line:478:14> col:14 implicit nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59d34c0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59d3528 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59d35a0 <col:14> Implicit
|-FunctionDecl 0x5565d59d35f8 prev 0x5565d59d3420 <col:1, col:105> col:14 nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59d3300 <col:26, col:32> col:32 __x 'float'
| |-ParmVarDecl 0x5565d59d3380 <col:37, col:43> col:43 __y 'float'
| |-NoThrowAttr 0x5565d59d36a8 <col:64>
| `-ConstAttr 0x5565d59d3700 <col:95>
|-FunctionDecl 0x5565d59d3860 <col:108, col:214> col:121 __nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59d3740 <col:135, col:141> col:141 __x 'float'
| |-ParmVarDecl 0x5565d59d37c0 <col:146, col:152> col:152 __y 'float'
| |-NoThrowAttr 0x5565d59d3910 <col:173>
| `-ConstAttr 0x5565d59d3968 <col:204>
|-FunctionDecl 0x5565d59d3b08 <line:480:14> col:14 implicit nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x5565d59d3ba8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59d3c10 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59d3c88 <col:14> Implicit
|-FunctionDecl 0x5565d59d3ce0 prev 0x5565d59d3b08 <col:1, col:112> col:14 nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x5565d59d39a8 <col:27, col:33> col:33 __x 'float'
| |-ParmVarDecl 0x5565d59d3a28 <col:38, col:50> col:50 __y 'long double'
| |-NoThrowAttr 0x5565d59d3d90 <col:71>
| `-ConstAttr 0x5565d59d3de8 <col:102>
|-FunctionDecl 0x5565d59d3f48 <col:115, col:228> col:128 __nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x5565d59d3e28 <col:143, col:149> col:149 __x 'float'
| |-ParmVarDecl 0x5565d59d3ea8 <col:154, col:166> col:166 __y 'long double'
| |-NoThrowAttr 0x5565d59d3ff8 <col:187>
| `-ConstAttr 0x5565d59d4050 <col:218>
|-FunctionDecl 0x5565d59d41b0 <line:484:14> col:14 implicit remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59d4250 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59d4310 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59d4388 <col:14> Implicit
|-FunctionDecl 0x5565d59d43e0 prev 0x5565d59d41b0 <col:1, col:77> col:14 remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59d4090 <col:26, col:32> col:32 __x 'float'
| |-ParmVarDecl 0x5565d59d4110 <col:37, col:43> col:43 __y 'float'
| `-NoThrowAttr 0x5565d59d4490 <col:64>
|-FunctionDecl 0x5565d59d4620 <col:80, col:158> col:93 __remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59d4500 <col:107, col:113> col:113 __x 'float'
| |-ParmVarDecl 0x5565d59d4580 <col:118, col:124> col:124 __y 'float'
| `-NoThrowAttr 0x5565d59d46d0 <col:145>
|-FunctionDecl 0x5565d59d4860 <line:488:14> col:14 implicit scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x5565d59d4900 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59d4968 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5565d59d49e0 <col:14> Implicit
|-FunctionDecl 0x5565d59d4a38 prev 0x5565d59d4860 <col:1, col:72> col:14 scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x5565d59d4740 <col:23, col:29> col:29 __x 'float'
| |-ParmVarDecl 0x5565d59d47c0 <col:34, col:38> col:38 __n 'int'
| `-NoThrowAttr 0x5565d59d4ae8 <col:59>
|-FunctionDecl 0x5565d59d4c78 <col:75, col:148> col:88 __scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x5565d59d4b58 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x5565d59d4bd8 <col:110, col:114> col:114 __n 'int'
| `-NoThrowAttr 0x5565d59d4d28 <col:135>
|-FunctionDecl 0x5565d59d4e30 <line:492:12> col:12 implicit ilogbf 'int (float)' extern
| |-ParmVarDecl 0x5565d59d4ed0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59d4f40 <col:12> Implicit
|-FunctionDecl 0x5565d59d4f98 prev 0x5565d59d4e30 <col:1, col:60> col:12 ilogbf 'int (float)' extern
| |-ParmVarDecl 0x5565d59d4d98 <col:20, col:26> col:26 __x 'float'
| `-NoThrowAttr 0x5565d59d5040 <col:47>
|-FunctionDecl 0x5565d59d5148 <col:63, col:124> col:74 __ilogbf 'int (float)' extern
| |-ParmVarDecl 0x5565d59d50b0 <col:84, col:90> col:90 __x 'float'
| `-NoThrowAttr 0x5565d59d51f0 <col:111>
|-FunctionDecl 0x5565d59d5408 <line:497:14> col:14 implicit scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x5565d59d54a8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59d5510 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x5565d59d5588 <col:14> Implicit
|-FunctionDecl 0x5565d59d55e0 prev 0x5565d59d5408 <col:1, col:78> col:14 scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x5565d59d5260 <col:24, col:30> col:30 __x 'float'
| |-ParmVarDecl 0x5565d59d5320 <col:35, col:44> col:44 __n 'long'
| `-NoThrowAttr 0x5565d59d5690 <col:65>
|-FunctionDecl 0x5565d59d5820 <col:81, col:160> col:94 __scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x5565d59d5700 <col:106, col:112> col:112 __x 'float'
| |-ParmVarDecl 0x5565d59d5780 <col:117, col:126> col:126 __n 'long'
| `-NoThrowAttr 0x5565d59d58d0 <col:147>
|-FunctionDecl 0x5565d59d59d8 <line:501:14> col:14 implicit nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d5a78 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5565d59d5ae8 <col:14> Implicit
| `-ConstAttr 0x5565d59d5b40 <col:14> Implicit
|-FunctionDecl 0x5565d59d5b68 prev 0x5565d59d59d8 <col:1, col:66> col:14 nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d5940 <col:26, col:32> col:32 __x 'float'
| |-ConstAttr 0x5565d59d5c68 <col:14> Inherited Implicit
| `-NoThrowAttr 0x5565d59d5c10 <col:53>
|-FunctionDecl 0x5565d59d5d40 <col:69, col:136> col:82 __nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d5ca8 <col:96, col:102> col:102 __x 'float'
| `-NoThrowAttr 0x5565d59d5de8 <col:123>
|-FunctionDecl 0x5565d59d5ef0 <line:505:14> col:14 implicit roundf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d5f90 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5565d59d6000 <col:14> Implicit
| `-ConstAttr 0x5565d59d6058 <col:14> Implicit
|-FunctionDecl 0x5565d59d6080 prev 0x5565d59d5ef0 <col:1, col:90> col:14 roundf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d5e58 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x5565d59d6128 <col:49>
| `-ConstAttr 0x5565d59d6180 <col:80>
|-FunctionDecl 0x5565d59d6258 <col:93, col:184> col:106 __roundf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d61c0 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x5565d59d6330 <col:143>
| `-ConstAttr 0x5565d59d6388 <col:174>
|-FunctionDecl 0x5565d59d6460 <line:509:14> col:14 implicit truncf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d6500 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5565d59d6570 <col:14> Implicit
| `-ConstAttr 0x5565d59d65c8 <col:14> Implicit
|-FunctionDecl 0x5565d59d65f0 prev 0x5565d59d6460 <col:1, col:90> col:14 truncf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d63c8 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x5565d59d6698 <col:49>
| `-ConstAttr 0x5565d59d66f0 <col:80>
|-FunctionDecl 0x5565d59d67c8 <col:93, col:184> col:106 __truncf 'float (float)' extern
| |-ParmVarDecl 0x5565d59d6730 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x5565d59d6870 <col:143>
| `-ConstAttr 0x5565d59d68c8 <col:174>
|-FunctionDecl 0x5565d59d6af8 <line:514:14> col:14 implicit remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x5565d59d6b98 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59d6c00 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59d6c68 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5565d59d6ce8 <col:14> Implicit
|-FunctionDecl 0x5565d59d6d40 prev 0x5565d59d6af8 <col:1, col:86> col:14 remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x5565d59d6908 <col:23, col:29> col:29 __x 'float'
| |-ParmVarDecl 0x5565d59d6988 <col:34, col:40> col:40 __y 'float'
| |-ParmVarDecl 0x5565d59d6a08 <col:45, col:50> col:50 __quo 'int *'
| `-NoThrowAttr 0x5565d59d6df8 <col:73>
|-FunctionDecl 0x5565d59d7010 <col:89, col:176> col:102 __remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x5565d59d6e68 <col:113, col:119> col:119 __x 'float'
| |-ParmVarDecl 0x5565d59d6ee8 <col:124, col:130> col:130 __y 'float'
| |-ParmVarDecl 0x5565d59d6f68 <col:135, col:140> col:140 __quo 'int *'
| `-NoThrowAttr 0x5565d59d70c8 <col:163>
|-FunctionDecl 0x5565d59d7208 <line:521:17> col:17 implicit lrintf 'long (float)' extern
| |-ParmVarDecl 0x5565d59d72a8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59d8350 <col:17> Implicit
|-FunctionDecl 0x5565d59d83a8 prev 0x5565d59d7208 <col:1, col:65> col:17 lrintf 'long (float)' extern
| |-ParmVarDecl 0x5565d59d7138 <col:25, col:31> col:31 __x 'float'
| `-NoThrowAttr 0x5565d59d8450 <col:52>
|-FunctionDecl 0x5565d59d8558 <col:68, col:134> col:84 __lrintf 'long (float)' extern
| |-ParmVarDecl 0x5565d59d84c0 <col:94, col:100> col:100 __x 'float'
| `-NoThrowAttr 0x5565d59d8600 <col:121>
|-FunctionDecl 0x5565d59d8748 <line:523:22> col:22 implicit llrintf 'long long (float)' extern
| |-ParmVarDecl 0x5565d59d87e8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59d8858 <col:22> Implicit
|-FunctionDecl 0x5565d59d88b0 prev 0x5565d59d8748 <col:1, col:71> col:22 llrintf 'long long (float)' extern
| |-ParmVarDecl 0x5565d59d8670 <col:31, col:37> col:37 __x 'float'
| `-NoThrowAttr 0x5565d59d8958 <col:58>
|-FunctionDecl 0x5565d59d8a60 <col:74, col:146> col:95 __llrintf 'long long (float)' extern
| |-ParmVarDecl 0x5565d59d89c8 <col:106, col:112> col:112 __x 'float'
| `-NoThrowAttr 0x5565d59d8b08 <col:133>
|-FunctionDecl 0x5565d59d8c10 <line:527:17> col:17 implicit lroundf 'long (float)' extern
| |-ParmVarDecl 0x5565d59d8cb0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59d8d20 <col:17> Implicit
|-FunctionDecl 0x5565d59d8d78 prev 0x5565d59d8c10 <col:1, col:66> col:17 lroundf 'long (float)' extern
| |-ParmVarDecl 0x5565d59d8b78 <col:26, col:32> col:32 __x 'float'
| `-NoThrowAttr 0x5565d59d8e20 <col:53>
|-FunctionDecl 0x5565d59d8f28 <col:69, col:136> col:85 __lroundf 'long (float)' extern
| |-ParmVarDecl 0x5565d59d8e90 <col:96, col:102> col:102 __x 'float'
| `-NoThrowAttr 0x5565d59d8fd0 <col:123>
|-FunctionDecl 0x5565d59d90d8 <line:529:22> col:22 implicit llroundf 'long long (float)' extern
| |-ParmVarDecl 0x5565d59d9178 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59d91e8 <col:22> Implicit
|-FunctionDecl 0x5565d59d9240 prev 0x5565d59d90d8 <col:1, col:72> col:22 llroundf 'long long (float)' extern
| |-ParmVarDecl 0x5565d59d9040 <col:32, col:38> col:38 __x 'float'
| `-NoThrowAttr 0x5565d59d92e8 <col:59>
|-FunctionDecl 0x5565d59bf280 <col:75, col:148> col:96 __llroundf 'long long (float)' extern
| |-ParmVarDecl 0x5565d59bf1e8 <col:108, col:114> col:114 __x 'float'
| `-NoThrowAttr 0x5565d59bf328 <col:135>
|-FunctionDecl 0x5565d59bf4b8 <line:533:14> col:14 implicit fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59bf558 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59bf5c0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5565d59bf638 <col:14> Implicit
|-FunctionDecl 0x5565d59bf690 prev 0x5565d59bf4b8 <col:1, col:72> col:14 fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59bf398 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5565d59bf418 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x5565d59bf740 <col:59>
|-FunctionDecl 0x5565d59bf8d0 <col:75, col:148> col:88 __fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59bf7b0 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x5565d59bf830 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x5565d59bf980 <col:135>
|-FunctionDecl 0x5565d59bfb10 <line:536:14> col:14 implicit fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59bfbb0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59bfc18 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5565d59bfc90 <col:14> Implicit
| `-ConstAttr 0x5565d59bfce8 <col:14> Implicit
|-FunctionDecl 0x5565d59bfd10 prev 0x5565d59bfb10 <col:1, col:100> col:14 fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59bf9f0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5565d59bfa70 <col:32, col:38> col:38 __y 'float'
| |-NoThrowAttr 0x5565d59bfdc0 <col:59>
| `-ConstAttr 0x5565d59bfe18 <col:90>
|-FunctionDecl 0x5565d59bff78 <col:103, col:204> col:116 __fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59bfe58 <col:125, col:131> col:131 __x 'float'
| |-ParmVarDecl 0x5565d59bfed8 <col:136, col:142> col:142 __y 'float'
| |-NoThrowAttr 0x5565d59c0028 <col:163>
| `-ConstAttr 0x5565d59c0080 <col:194>
|-FunctionDecl 0x5565d59dd3a8 <line:539:14> col:14 implicit fminf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59dd448 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59dd4b0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5565d59dd528 <col:14> Implicit
| `-ConstAttr 0x5565d59dd580 <col:14> Implicit
|-FunctionDecl 0x5565d59dd5a8 prev 0x5565d59dd3a8 <col:1, col:100> col:14 fminf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59c00c0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5565d59c0140 <col:32, col:38> col:38 __y 'float'
| |-NoThrowAttr 0x5565d59dd658 <col:59>
| `-ConstAttr 0x5565d59dd6b0 <col:90>
|-FunctionDecl 0x5565d59dd810 <col:103, col:204> col:116 __fminf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59dd6f0 <col:125, col:131> col:131 __x 'float'
| |-ParmVarDecl 0x5565d59dd770 <col:136, col:142> col:142 __y 'float'
| |-NoThrowAttr 0x5565d59dd8c0 <col:163>
| `-ConstAttr 0x5565d59dd918 <col:194>
|-FunctionDecl 0x5565d59dd9f0 <line:543:1, line:544:32> line:543:12 __fpclassifyf 'int (float)' extern
| |-ParmVarDecl 0x5565d59dd958 <col:27, col:33> col:33 __value 'float'
| |-NoThrowAttr 0x5565d59dda98 <col:58>
| `-ConstAttr 0x5565d59ddaf0 <line:544:22>
|-FunctionDecl 0x5565d59ddbc8 <line:547:1, line:548:32> line:547:12 used __signbitf 'int (float)' extern
| |-ParmVarDecl 0x5565d59ddb30 <col:24, col:30> col:30 __value 'float'
| |-NoThrowAttr 0x5565d59ddc70 <col:55>
| `-ConstAttr 0x5565d59ddcc8 <line:548:22>
|-FunctionDecl 0x5565d59ddef8 <line:552:14> col:14 implicit fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x5565d59ddf98 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59de000 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5565d59de068 <<invalid sloc>> <invalid sloc> 'float'
| |-ConstAttr 0x5565d59de0e8 <col:14> Implicit
| `-NoThrowAttr 0x5565d59de140 <col:14> Implicit
|-FunctionDecl 0x5565d59de168 prev 0x5565d59ddef8 <col:1, col:82> col:14 fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x5565d59ddd08 <col:20, col:26> col:26 __x 'float'
| |-ParmVarDecl 0x5565d59ddd88 <col:31, col:37> col:37 __y 'float'
| |-ParmVarDecl 0x5565d59dde08 <col:42, col:48> col:48 __z 'float'
| |-ConstAttr 0x5565d59de278 <col:14> Inherited Implicit
| `-NoThrowAttr 0x5565d59de220 <col:69>
|-FunctionDecl 0x5565d59de4a8 <col:85, col:168> col:98 __fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x5565d59de2b8 <col:106, col:112> col:112 __x 'float'
| |-ParmVarDecl 0x5565d59de380 <col:117, col:123> col:123 __y 'float'
| |-ParmVarDecl 0x5565d59de400 <col:128, col:134> col:134 __z 'float'
| `-NoThrowAttr 0x5565d59de560 <col:155>
|-FunctionDecl 0x5565d59de6f0 <line:553:1, col:73> col:14 scalbf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59de5d0 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x5565d59de650 <col:33, col:39> col:39 __n 'float'
| `-NoThrowAttr 0x5565d59de7a0 <col:60>
|-FunctionDecl 0x5565d59de930 <col:76, col:150> col:89 __scalbf 'float (float, float)' extern
| |-ParmVarDecl 0x5565d59de810 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x5565d59de890 <col:110, col:116> col:116 __n 'float'
| `-NoThrowAttr 0x5565d59de9e0 <col:137>
|-FunctionDecl 0x5565d59deb28 <line:554:20> col:20 implicit acosl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59debc8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59dec38 <col:20> Implicit
|-FunctionDecl 0x5565d59dec90 prev 0x5565d59deb28 <col:1, col:73> col:20 acosl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59dea50 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5565d59ded38 <col:60>
|-FunctionDecl 0x5565d59dee40 <col:76, col:150> col:95 __acosl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59deda8 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5565d59deee8 <col:137>
|-FunctionDecl 0x5565d59deff0 <line:556:20> col:20 implicit asinl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59df090 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59df100 <col:20> Implicit
|-FunctionDecl 0x5565d59df158 prev 0x5565d59deff0 <col:1, col:73> col:20 asinl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59def58 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5565d59df200 <col:60>
|-FunctionDecl 0x5565d59df390 <col:76, col:150> col:95 __asinl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59df270 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5565d59df438 <col:137>
|-FunctionDecl 0x5565d59df540 <line:558:20> col:20 implicit atanl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59df5e0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59df650 <col:20> Implicit
|-FunctionDecl 0x5565d59df6a8 prev 0x5565d59df540 <col:1, col:73> col:20 atanl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59df4a8 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5565d59df750 <col:60>
|-FunctionDecl 0x5565d59df858 <col:76, col:150> col:95 __atanl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59df7c0 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5565d59df900 <col:137>
|-FunctionDecl 0x5565d59dfad8 <line:560:20> col:20 implicit atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59dfb78 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59dfbe0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59dfc58 <col:20> Implicit
|-FunctionDecl 0x5565d59dfcb0 prev 0x5565d59dfad8 <col:1, col:91> col:20 atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59df970 <col:28, col:40> col:40 __y 'long double'
| |-ParmVarDecl 0x5565d59df9f0 <col:45, col:57> col:57 __x 'long double'
| `-NoThrowAttr 0x5565d59dfd60 <col:78>
|-FunctionDecl 0x5565d59dfef0 <col:94, col:186> col:113 __atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59dfdd0 <col:123, col:135> col:135 __y 'long double'
| |-ParmVarDecl 0x5565d59dfe50 <col:140, col:152> col:152 __x 'long double'
| `-NoThrowAttr 0x5565d59dffa0 <col:173>
|-FunctionDecl 0x5565d59e00a8 <line:563:21> col:21 implicit cosl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e0148 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e01b8 <col:21> Implicit
|-FunctionDecl 0x5565d59e0210 prev 0x5565d59e00a8 <col:2, col:73> col:21 cosl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e0010 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5565d59e02b8 <col:60>
|-FunctionDecl 0x5565d59e03d0 <col:76, col:149> col:95 __cosl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e0328 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x5565d59e0478 <col:136>
|-FunctionDecl 0x5565d59e0580 <line:565:21> col:21 implicit sinl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e0620 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e0690 <col:21> Implicit
|-FunctionDecl 0x5565d59e06e8 prev 0x5565d59e0580 <col:2, col:73> col:21 sinl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e04e8 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5565d59e0790 <col:60>
|-FunctionDecl 0x5565d59e0898 <col:76, col:149> col:95 __sinl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e0800 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x5565d59e0940 <col:136>
|-FunctionDecl 0x5565d59e0a48 <line:567:20> col:20 implicit tanl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e0ae8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e0b58 <col:20> Implicit
|-FunctionDecl 0x5565d59e0bb0 prev 0x5565d59e0a48 <col:1, col:72> col:20 tanl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e09b0 <col:26, col:38> col:38 __x 'long double'
| `-NoThrowAttr 0x5565d59e0c58 <col:59>
|-FunctionDecl 0x5565d59e0d60 <col:75, col:148> col:94 __tanl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e0cc8 <col:102, col:114> col:114 __x 'long double'
| `-NoThrowAttr 0x5565d59e0e08 <col:135>
|-FunctionDecl 0x5565d59e0f10 <line:572:20> col:20 implicit coshl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e0fb0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e1020 <col:20> Implicit
|-FunctionDecl 0x5565d59e1078 prev 0x5565d59e0f10 <col:1, col:73> col:20 coshl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e0e78 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5565d59e1120 <col:60>
|-FunctionDecl 0x5565d59e1228 <col:76, col:150> col:95 __coshl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e1190 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5565d59e12d0 <col:137>
|-FunctionDecl 0x5565d59e1448 <line:574:20> col:20 implicit sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e14e8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e1558 <col:20> Implicit
|-FunctionDecl 0x5565d59e15b0 prev 0x5565d59e1448 <col:1, col:73> col:20 sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e13b0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5565d59e1658 <col:60>
|-FunctionDecl 0x5565d59e1760 <col:76, col:150> col:95 __sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e16c8 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5565d59e1808 <col:137>
|-FunctionDecl 0x5565d59e1910 <line:576:20> col:20 implicit tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e19b0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e1a20 <col:20> Implicit
|-FunctionDecl 0x5565d59e1a78 prev 0x5565d59e1910 <col:1, col:73> col:20 tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e1878 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5565d59e1b20 <col:60>
|-FunctionDecl 0x5565d59e1c28 <col:76, col:150> col:95 __tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e1b90 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5565d59e1cd0 <col:137>
|-FunctionDecl 0x5565d59e1dd8 <line:577:20> col:20 implicit acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e1e78 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e1ee8 <col:20> Implicit
|-FunctionDecl 0x5565d59e1f40 prev 0x5565d59e1dd8 <col:1, col:74> col:20 acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e1d40 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5565d59e1fe8 <col:61>
|-FunctionDecl 0x5565d59e20f0 <col:77, col:152> col:96 __acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e2058 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5565d59e2198 <col:139>
|-FunctionDecl 0x5565d59e22a0 <line:579:20> col:20 implicit asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e2340 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e23c0 <col:20> Implicit
|-FunctionDecl 0x5565d59e2418 prev 0x5565d59e22a0 <col:1, col:74> col:20 asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e2208 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5565d59e24c0 <col:61>
|-FunctionDecl 0x5565d59e25c8 <col:77, col:152> col:96 __asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e2530 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5565d59e2670 <col:139>
|-FunctionDecl 0x5565d59e2778 <line:581:20> col:20 implicit atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e2818 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e2888 <col:20> Implicit
|-FunctionDecl 0x5565d59e28e0 prev 0x5565d59e2778 <col:1, col:74> col:20 atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e26e0 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5565d59e2988 <col:61>
|-FunctionDecl 0x5565d59e2a90 <col:77, col:152> col:96 __atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e29f8 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5565d59e2b38 <col:139>
|-FunctionDecl 0x5565d59e2c40 <line:589:21> col:21 implicit expl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e2ce0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e2d50 <col:21> Implicit
|-FunctionDecl 0x5565d59e2da8 prev 0x5565d59e2c40 <col:2, col:73> col:21 expl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e2ba8 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5565d59e2e50 <col:60>
|-FunctionDecl 0x5565d59e2f58 <col:76, col:149> col:95 __expl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e2ec0 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x5565d59e3000 <col:136>
|-FunctionDecl 0x5565d59e31d8 <line:592:20> col:20 implicit frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x5565d59e3278 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59e32e0 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5565d59e3358 <col:20> Implicit
|-FunctionDecl 0x5565d59e33d0 prev 0x5565d59e31d8 <col:1, col:91> col:20 frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x5565d59e3070 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x5565d59e30f0 <col:45, col:50> col:50 __exponent 'int *'
| `-NoThrowAttr 0x5565d59e3480 <col:78>
|-FunctionDecl 0x5565d59e3610 <col:94, col:186> col:113 __frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x5565d59e34f0 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x5565d59e3570 <col:140, col:145> col:145 __exponent 'int *'
| `-NoThrowAttr 0x5565d59e36c0 <col:173>
|-FunctionDecl 0x5565d59e3898 <line:595:20> col:20 implicit ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5565d59e3938 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59e39a0 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5565d59e3a18 <col:20> Implicit
|-FunctionDecl 0x5565d59e3a70 prev 0x5565d59e3898 <col:1, col:90> col:20 ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5565d59e3730 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x5565d59e37b0 <col:45, col:49> col:49 __exponent 'int'
| `-NoThrowAttr 0x5565d59e3b20 <col:77>
|-FunctionDecl 0x5565d59e3cb0 <col:93, col:184> col:112 __ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5565d59e3b90 <col:122, col:134> col:134 __x 'long double'
| |-ParmVarDecl 0x5565d59e3c10 <col:139, col:143> col:143 __exponent 'int'
| `-NoThrowAttr 0x5565d59e3d60 <col:171>
|-FunctionDecl 0x5565d59e3e68 <line:598:21> col:21 implicit logl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e3f08 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e3f78 <col:21> Implicit
|-FunctionDecl 0x5565d59e3fd0 prev 0x5565d59e3e68 <col:2, col:73> col:21 logl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e3dd0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5565d59e4078 <col:60>
|-FunctionDecl 0x5565d59e4180 <col:76, col:149> col:95 __logl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e40e8 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x5565d59e4228 <col:136>
|-FunctionDecl 0x5565d59e4330 <line:601:20> col:20 implicit log10l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e43e0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e4450 <col:20> Implicit
|-FunctionDecl 0x5565d59e44a8 prev 0x5565d59e4330 <col:1, col:74> col:20 log10l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e4298 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5565d59e4550 <col:61>
|-FunctionDecl 0x5565d59e4658 <col:77, col:152> col:96 __log10l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e45c0 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5565d59e4700 <col:139>
|-FunctionDecl 0x5565d59e4908 <line:604:20> col:20 implicit modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x5565d59e49a8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59e4a10 <<invalid sloc>> <invalid sloc> 'long double *'
| `-NoThrowAttr 0x5565d59e4a88 <col:20> Implicit
|-FunctionDecl 0x5565d59e4ae0 prev 0x5565d59e4908 <col:1, col:94> col:20 modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x5565d59e4770 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5565d59e4828 <col:44, col:57> col:57 __iptr 'long double *'
| `-NoThrowAttr 0x5565d59e4b90 <col:81>
|-FunctionDecl 0x5565d59e4d40 <col:97, col:226> col:116 __modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x5565d59e4c00 <col:125, col:137> col:137 __x 'long double'
| |-ParmVarDecl 0x5565d59e4c80 <col:142, col:155> col:155 __iptr 'long double *'
| |-NoThrowAttr 0x5565d59e4df0 <col:179>
| `-NonNullAttr 0x5565d59e4e48 <col:210, col:224> 2
|-FunctionDecl 0x5565d59e4f38 <line:605:20> col:20 implicit expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e4fd8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e5048 <col:20> Implicit
|-FunctionDecl 0x5565d59e50a0 prev 0x5565d59e4f38 <col:1, col:74> col:20 expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e4ea0 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5565d59e5148 <col:61>
|-FunctionDecl 0x5565d59e5250 <col:77, col:152> col:96 __expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e51b8 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5565d59e52f8 <col:139>
|-FunctionDecl 0x5565d59e5420 <line:608:20> col:20 implicit log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e54c0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e5530 <col:20> Implicit
|-FunctionDecl 0x5565d59e5588 prev 0x5565d59e5420 <col:1, col:74> col:20 log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e5368 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5565d59e5630 <col:61>
|-FunctionDecl 0x5565d59e5738 <col:77, col:152> col:96 __log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e56a0 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5565d59e57e0 <col:139>
|-FunctionDecl 0x5565d59e58e8 <line:611:20> col:20 implicit logbl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e5988 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e59f8 <col:20> Implicit
|-FunctionDecl 0x5565d59e5a50 prev 0x5565d59e58e8 <col:1, col:73> col:20 logbl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e5850 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5565d59e5af8 <col:60>
|-FunctionDecl 0x5565d59e5c00 <col:76, col:150> col:95 __logbl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e5b68 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5565d59e5ca8 <col:137>
|-FunctionDecl 0x5565d59e5db0 <line:618:20> col:20 implicit exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e5e50 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e5ec0 <col:20> Implicit
|-FunctionDecl 0x5565d59e5f18 prev 0x5565d59e5db0 <col:1, col:73> col:20 exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e5d18 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5565d59e5fc0 <col:60>
|-FunctionDecl 0x5565d59e60c8 <col:76, col:150> col:95 __exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e6030 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5565d59e6170 <col:137>
|-FunctionDecl 0x5565d59e6278 <line:621:20> col:20 implicit log2l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e6318 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e6388 <col:20> Implicit
|-FunctionDecl 0x5565d59e6400 prev 0x5565d59e6278 <col:1, col:73> col:20 log2l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e61e0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5565d59e64a8 <col:60>
|-FunctionDecl 0x5565d59e65b0 <col:76, col:150> col:95 __log2l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e6518 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5565d59e6658 <col:137>
|-FunctionDecl 0x5565d59e67e8 <line:622:21> col:21 implicit powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59e6888 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59e68f0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e6968 <col:21> Implicit
|-FunctionDecl 0x5565d59e69c0 prev 0x5565d59e67e8 <col:2, col:90> col:21 powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59e66c8 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5565d59e6748 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x5565d59e6a70 <col:77>
|-FunctionDecl 0x5565d59e6c00 <col:93, col:183> col:112 __powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59e6ae0 <col:120, col:132> col:132 __x 'long double'
| |-ParmVarDecl 0x5565d59e6b60 <col:137, col:149> col:149 __y 'long double'
| `-NoThrowAttr 0x5565d59e6cb0 <col:170>
|-FunctionDecl 0x5565d59e6db8 <line:625:20> col:20 implicit sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e6e58 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e6ec8 <col:20> Implicit
|-FunctionDecl 0x5565d59e6f20 prev 0x5565d59e6db8 <col:1, col:73> col:20 sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e6d20 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5565d59e6fc8 <col:60>
|-FunctionDecl 0x5565d59e70d0 <col:76, col:150> col:95 __sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e7038 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5565d59e7178 <col:137>
|-FunctionDecl 0x5565d59e7308 <line:631:20> col:20 implicit hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59e7410 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59e7478 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e74f0 <col:20> Implicit
|-FunctionDecl 0x5565d59e7548 prev 0x5565d59e7308 <col:1, col:91> col:20 hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59e71e8 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x5565d59e7268 <col:45, col:57> col:57 __y 'long double'
| `-NoThrowAttr 0x5565d59e75f8 <col:78>
|-FunctionDecl 0x5565d59e7788 <col:94, col:186> col:113 __hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59e7668 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x5565d59e76e8 <col:140, col:152> col:152 __y 'long double'
| `-NoThrowAttr 0x5565d59e7838 <col:173>
|-FunctionDecl 0x5565d59e7940 <line:638:20> col:20 implicit cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e79e0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5565d59e7a50 <col:20> Implicit
| `-ConstAttr 0x5565d59e7aa8 <col:20> Implicit
|-FunctionDecl 0x5565d59e7ad0 prev 0x5565d59e7940 <col:1, col:73> col:20 cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e78a8 <col:27, col:39> col:39 __x 'long double'
| |-ConstAttr 0x5565d59e7bd0 <col:20> Inherited Implicit
| `-NoThrowAttr 0x5565d59e7b78 <col:60>
|-FunctionDecl 0x5565d59e7ca8 <col:76, col:150> col:95 __cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e7c10 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5565d59e7d50 <col:137>
|-FunctionDecl 0x5565d59e7e58 <line:639:20> col:20 implicit ceill 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e7ef8 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5565d59e7f68 <col:20> Implicit
| `-ConstAttr 0x5565d59e7fc0 <col:20> Implicit
|-FunctionDecl 0x5565d59e7fe8 prev 0x5565d59e7e58 <col:1, col:101> col:20 ceill 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e7dc0 <col:27, col:39> col:39 __x 'long double'
| |-NoThrowAttr 0x5565d59e8090 <col:60>
| `-ConstAttr 0x5565d59e80e8 <col:91>
|-FunctionDecl 0x5565d59e81c0 <col:104, col:206> col:123 __ceill 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e8128 <col:132, col:144> col:144 __x 'long double'
| |-NoThrowAttr 0x5565d59e8268 <col:165>
| `-ConstAttr 0x5565d59e82c0 <col:196>
|-FunctionDecl 0x5565d59e8420 <line:642:20> col:20 implicit fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e84c0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5565d59e8530 <col:20> Implicit
| `-ConstAttr 0x5565d59e8588 <col:20> Implicit
|-FunctionDecl 0x5565d59e85b0 prev 0x5565d59e8420 <col:1, col:101> col:20 fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e8300 <col:27, col:39> col:39 __x 'long double'
| |-NoThrowAttr 0x5565d59e8658 <col:60>
| `-ConstAttr 0x5565d59e86b0 <col:91>
|-FunctionDecl 0x5565d59e8788 <col:104, col:206> col:123 __fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e86f0 <col:132, col:144> col:144 __x 'long double'
| |-NoThrowAttr 0x5565d59e8830 <col:165>
| `-ConstAttr 0x5565d59e8888 <col:196>
|-FunctionDecl 0x5565d59e8960 <line:645:20> col:20 implicit floorl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e8a00 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5565d59e8a70 <col:20> Implicit
| `-ConstAttr 0x5565d59e8ac8 <col:20> Implicit
|-FunctionDecl 0x5565d59e8af0 prev 0x5565d59e8960 <col:1, col:102> col:20 floorl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e88c8 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x5565d59e8b98 <col:61>
| `-ConstAttr 0x5565d59e8bf0 <col:92>
|-FunctionDecl 0x5565d59e8cc8 <col:105, col:208> col:124 __floorl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59e8c30 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x5565d59e8d70 <col:167>
| `-ConstAttr 0x5565d59e8dc8 <col:198>
|-FunctionDecl 0x5565d59e8f28 <line:648:20> col:20 implicit fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59e8fc8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59e9030 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59e90a8 <col:20> Implicit
|-FunctionDecl 0x5565d59e9100 prev 0x5565d59e8f28 <col:1, col:90> col:20 fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59e8e08 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5565d59e8e88 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x5565d59e91b0 <col:77>
|-FunctionDecl 0x5565d59e9340 <col:93, col:184> col:112 __fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59e9220 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x5565d59e92a0 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x5565d59e93f0 <col:171>
|-FunctionDecl 0x5565d59e9548 <line:653:1, col:100> col:12 __isinfl 'int (long double)' extern
| |-ParmVarDecl 0x5565d59e9478 <col:22, col:34> col:34 __value 'long double'
| |-NoThrowAttr 0x5565d59e95f0 <col:59>
| `-ConstAttr 0x5565d59e9648 <col:90>
|-FunctionDecl 0x5565d59e9720 <line:656:12> col:12 implicit __finitel 'int (long double)' extern
| |-ParmVarDecl 0x5565d59e97c0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5565d59e9830 <col:12> Implicit
| `-ConstAttr 0x5565d59e9888 <col:12> Implicit
|-FunctionDecl 0x5565d59e98b0 prev 0x5565d59e9720 <col:1, col:101> col:12 __finitel 'int (long double)' extern
| |-ParmVarDecl 0x5565d59e9688 <col:23, col:35> col:35 __value 'long double'
| |-NoThrowAttr 0x5565d59e9958 <col:60>
| `-ConstAttr 0x5565d59e99b0 <col:91>
|-FunctionDecl 0x5565d59e9a88 <line:662:1, col:98> col:12 isinfl 'int (long double)' extern
| |-ParmVarDecl 0x5565d59e99f0 <col:20, col:32> col:32 __value 'long double'
| |-NoThrowAttr 0x5565d59e9b30 <col:57>
| `-ConstAttr 0x5565d59e9b88 <col:88>
|-FunctionDecl 0x5565d59e9c60 <line:665:12> col:12 implicit finitel 'int (long double)' extern
| |-ParmVarDecl 0x5565d59e9d00 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5565d59e9d70 <col:12> Implicit
| `-ConstAttr 0x5565d59e9dc8 <col:12> Implicit
|-FunctionDecl 0x5565d59e9df0 prev 0x5565d59e9c60 <col:1, col:99> col:12 finitel 'int (long double)' extern
| |-ParmVarDecl 0x5565d59e9bc8 <col:21, col:33> col:33 __value 'long double'
| |-NoThrowAttr 0x5565d59e9e98 <col:58>
| `-ConstAttr 0x5565d59e9ef0 <col:89>
|-FunctionDecl 0x5565d59ea050 <line:668:1, col:90> col:20 dreml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59e9f30 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5565d59e9fb0 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x5565d59ea100 <col:77>
|-FunctionDecl 0x5565d59ea290 <col:93, col:184> col:112 __dreml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59ea170 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x5565d59ea1f0 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x5565d59ea340 <col:171>
|-FunctionDecl 0x5565d59ea470 <line:672:1, col:80> col:20 significandl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59ea3b0 <col:34, col:46> col:46 __x 'long double'
| `-NoThrowAttr 0x5565d59ea518 <col:67>
|-FunctionDecl 0x5565d59ea620 <col:83, col:164> col:102 __significandl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59ea588 <col:118, col:130> col:130 __x 'long double'
| `-NoThrowAttr 0x5565d59ea6c8 <col:151>
|-FunctionDecl 0x5565d59ea858 <line:678:20> col:20 implicit copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59ea8f8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59ea960 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5565d59ea9d8 <col:20> Implicit
| `-ConstAttr 0x5565d59eaa30 <col:20> Implicit
|-FunctionDecl 0x5565d59eaa58 prev 0x5565d59ea858 <col:1, col:122> col:20 copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59ea738 <col:31, col:43> col:43 __x 'long double'
| |-ParmVarDecl 0x5565d59ea7b8 <col:48, col:60> col:60 __y 'long double'
| |-NoThrowAttr 0x5565d59eab08 <col:81>
| `-ConstAttr 0x5565d59eab60 <col:112>
|-FunctionDecl 0x5565d59eacc0 <col:125, col:248> col:144 __copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59eaba0 <col:157, col:169> col:169 __x 'long double'
| |-ParmVarDecl 0x5565d59eac20 <col:174, col:186> col:186 __y 'long double'
| |-NoThrowAttr 0x5565d59ead70 <col:207>
| `-ConstAttr 0x5565d59eadc8 <col:238>
|-FunctionDecl 0x5565d59eaed8 <line:685:20> col:20 implicit nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x5565d59eaf78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x5565d59eafe8 <col:20> Implicit
| `-PureAttr 0x5565d59eb040 <col:20> Implicit
|-FunctionDecl 0x5565d59eb068 prev 0x5565d59eaed8 <col:1, col:103> col:20 nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x5565d59eae08 <col:26, col:38> col:38 __tagb 'const char *'
| |-PureAttr 0x5565d59eb190 <col:20> Inherited Implicit
| |-NoThrowAttr 0x5565d59eb110 <col:62>
| `-ConstAttr 0x5565d59eb168 <col:93>
|-FunctionDecl 0x5565d59eb268 <col:106, col:210> col:125 __nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x5565d59eb1d0 <col:133, col:145> col:145 __tagb 'const char *'
| |-NoThrowAttr 0x5565d59eb310 <col:169>
| `-ConstAttr 0x5565d59eb368 <col:200>
|-FunctionDecl 0x5565d59eb450 <line:691:1, col:100> col:12 used __isnanl 'int (long double)' extern
| |-ParmVarDecl 0x5565d59eb3a8 <col:22, col:34> col:34 __value 'long double'
| |-NoThrowAttr 0x5565d59eb4f8 <col:59>
| `-ConstAttr 0x5565d59eb550 <col:90>
|-FunctionDecl 0x5565d59eb628 <line:695:1, col:98> col:12 isnanl 'int (long double)' extern
| |-ParmVarDecl 0x5565d59eb590 <col:20, col:32> col:32 __value 'long double'
| |-NoThrowAttr 0x5565d59eb6d0 <col:57>
| `-ConstAttr 0x5565d59eb728 <col:88>
|-FunctionDecl 0x5565d59eb800 <line:698:1, col:67> col:20 j0l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59eb768 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x5565d59eb8a8 <col:54>
|-FunctionDecl 0x5565d59eb9b0 <col:70, col:138> col:89 __j0l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59eb918 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x5565d59eba58 <col:125>
|-FunctionDecl 0x5565d59ebb60 <line:699:1, col:67> col:20 j1l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59ebac8 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x5565d59ebc08 <col:54>
|-FunctionDecl 0x5565d59ebd10 <col:70, col:138> col:89 __j1l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59ebc78 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x5565d59ebdb8 <col:125>
|-FunctionDecl 0x5565d59ebf88 <line:700:1, col:72> col:20 jnl 'long double (int, long double)' extern
| |-ParmVarDecl 0x5565d59ebe28 <col:25> col:28 'int'
| |-ParmVarDecl 0x5565d59ebea8 <col:30, col:35> col:41 'long double'
| `-NoThrowAttr 0x5565d59ec038 <col:59>
|-FunctionDecl 0x5565d59ec1c8 <col:75, col:148> col:94 __jnl 'long double (int, long double)' extern
| |-ParmVarDecl 0x5565d59ec0a8 <col:101> col:104 'int'
| |-ParmVarDecl 0x5565d59ec128 <col:106, col:111> col:117 'long double'
| `-NoThrowAttr 0x5565d59ec278 <col:135>
|-FunctionDecl 0x5565d59ec380 <line:701:1, col:67> col:20 y0l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59ec2e8 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x5565d59ec428 <col:54>
|-FunctionDecl 0x5565d59ec540 <col:70, col:138> col:89 __y0l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59ec4a8 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x5565d59ec5e8 <col:125>
|-FunctionDecl 0x5565d59ec6f0 <line:702:1, col:67> col:20 y1l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59ec658 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x5565d59ec798 <col:54>
|-FunctionDecl 0x5565d59ec8a0 <col:70, col:138> col:89 __y1l 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59ec808 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x5565d59ec948 <col:125>
|-FunctionDecl 0x5565d59ecad8 <line:703:1, col:72> col:20 ynl 'long double (int, long double)' extern
| |-ParmVarDecl 0x5565d59ec9b8 <col:25> col:28 'int'
| |-ParmVarDecl 0x5565d59eca38 <col:30, col:35> col:41 'long double'
| `-NoThrowAttr 0x5565d59ecb88 <col:59>
|-FunctionDecl 0x5565d59ecd18 <col:75, col:148> col:94 __ynl 'long double (int, long double)' extern
| |-ParmVarDecl 0x5565d59ecbf8 <col:101> col:104 'int'
| |-ParmVarDecl 0x5565d59ecc78 <col:106, col:111> col:117 'long double'
| `-NoThrowAttr 0x5565d59ecdc8 <col:135>
|-FunctionDecl 0x5565d59eced0 <line:710:20> col:20 implicit erfl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59ecf70 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59ecfe0 <col:20> Implicit
|-FunctionDecl 0x5565d59ed038 prev 0x5565d59eced0 <col:1, col:68> col:20 erfl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59ece38 <col:26, col:31> col:37 'long double'
| `-NoThrowAttr 0x5565d59ed0e0 <col:55>
|-FunctionDecl 0x5565d59ed1e8 <col:71, col:140> col:90 __erfl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59ed150 <col:98, col:103> col:109 'long double'
| `-NoThrowAttr 0x5565d59ed290 <col:127>
|-FunctionDecl 0x5565d59ed398 <line:711:20> col:20 implicit erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59c9260 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59c92d0 <col:20> Implicit
|-FunctionDecl 0x5565d59c9328 prev 0x5565d59ed398 <col:1, col:69> col:20 erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59ed300 <col:27, col:32> col:38 'long double'
| `-NoThrowAttr 0x5565d59c93d0 <col:56>
|-FunctionDecl 0x5565d59c94d8 <col:72, col:142> col:91 __erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59c9440 <col:100, col:105> col:111 'long double'
| `-NoThrowAttr 0x5565d59c9580 <col:129>
|-FunctionDecl 0x5565d59c9688 <line:712:20> col:20 implicit lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59c9728 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59c9798 <col:20> Implicit
|-FunctionDecl 0x5565d59c97f0 prev 0x5565d59c9688 <col:1, col:71> col:20 lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59c95f0 <col:29, col:34> col:40 'long double'
| `-NoThrowAttr 0x5565d59c9898 <col:58>
|-FunctionDecl 0x5565d59c99a0 <col:74, col:146> col:93 __lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59c9908 <col:104, col:109> col:115 'long double'
| `-NoThrowAttr 0x5565d59c9a48 <col:133>
|-FunctionDecl 0x5565d59c9b50 <line:719:20> col:20 implicit tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59c9bf0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59c9c60 <col:20> Implicit
|-FunctionDecl 0x5565d59c9cb8 prev 0x5565d59c9b50 <col:1, col:71> col:20 tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59c9ab8 <col:29, col:34> col:40 'long double'
| `-NoThrowAttr 0x5565d59c9d60 <col:58>
|-FunctionDecl 0x5565d59c9e68 <col:74, col:146> col:93 __tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59c9dd0 <col:104, col:109> col:115 'long double'
| `-NoThrowAttr 0x5565d59c9f10 <col:133>
|-FunctionDecl 0x5565d59ca018 <line:725:1, col:70> col:20 gammal 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59c9f80 <col:28, col:33> col:39 'long double'
| `-NoThrowAttr 0x5565d59ca0c0 <col:57>
|-FunctionDecl 0x5565d59ef480 <col:73, col:144> col:92 __gammal 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59ca130 <col:102, col:107> col:113 'long double'
| `-NoThrowAttr 0x5565d59ef528 <col:131>
|-FunctionDecl 0x5565d59ef6b8 <line:732:1, col:90> col:20 lgammal_r 'long double (long double, int *)' extern
| |-ParmVarDecl 0x5565d59ef598 <col:31, col:36> col:42 'long double'
| |-ParmVarDecl 0x5565d59ef618 <col:44, col:49> col:49 __signgamp 'int *'
| `-NoThrowAttr 0x5565d59ef768 <col:77>
|-FunctionDecl 0x5565d59ef8f8 <col:93, col:184> col:112 __lgammal_r 'long double (long double, int *)' extern
| |-ParmVarDecl 0x5565d59ef7d8 <col:125, col:130> col:136 'long double'
| |-ParmVarDecl 0x5565d59ef858 <col:138, col:143> col:143 __signgamp 'int *'
| `-NoThrowAttr 0x5565d59ef9a8 <col:171>
|-FunctionDecl 0x5565d59efab0 <line:740:20> col:20 implicit rintl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59efb50 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5565d59efbc0 <col:20> Implicit
| `-ConstAttr 0x5565d59efc18 <col:20> Implicit
|-FunctionDecl 0x5565d59efc40 prev 0x5565d59efab0 <col:1, col:73> col:20 rintl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59efa18 <col:27, col:39> col:39 __x 'long double'
| |-ConstAttr 0x5565d59efd40 <col:20> Inherited Implicit
| `-NoThrowAttr 0x5565d59efce8 <col:60>
|-FunctionDecl 0x5565d59efe18 <col:76, col:150> col:95 __rintl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59efd80 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5565d59efec0 <col:137>
|-FunctionDecl 0x5565d59f0050 <line:743:20> col:20 implicit nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f00f0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59f0158 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59f01d0 <col:20> Implicit
|-FunctionDecl 0x5565d59f0228 prev 0x5565d59f0050 <col:1, col:123> col:20 nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59eff30 <col:32, col:44> col:44 __x 'long double'
| |-ParmVarDecl 0x5565d59effb0 <col:49, col:61> col:61 __y 'long double'
| |-NoThrowAttr 0x5565d59f02d8 <col:82>
| `-ConstAttr 0x5565d59f0330 <col:113>
|-FunctionDecl 0x5565d59f04c8 <col:126, col:250> col:145 __nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f0370 <col:159, col:171> col:171 __x 'long double'
| |-ParmVarDecl 0x5565d59f03f0 <col:176, col:188> col:188 __y 'long double'
| |-NoThrowAttr 0x5565d59f0578 <col:209>
| `-ConstAttr 0x5565d59f05d0 <col:240>
|-FunctionDecl 0x5565d59f0730 <line:745:20> col:20 implicit nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f07d0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59f0838 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59f08b0 <col:20> Implicit
|-FunctionDecl 0x5565d59f0908 prev 0x5565d59f0730 <col:1, col:124> col:20 nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f0610 <col:33, col:45> col:45 __x 'long double'
| |-ParmVarDecl 0x5565d59f0690 <col:50, col:62> col:62 __y 'long double'
| |-NoThrowAttr 0x5565d59f09b8 <col:83>
| `-ConstAttr 0x5565d59f0a10 <col:114>
|-FunctionDecl 0x5565d59f0b70 <col:127, col:252> col:146 __nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f0a50 <col:161, col:173> col:173 __x 'long double'
| |-ParmVarDecl 0x5565d59f0ad0 <col:178, col:190> col:190 __y 'long double'
| |-NoThrowAttr 0x5565d59f0c20 <col:211>
| `-ConstAttr 0x5565d59f0c78 <col:242>
|-FunctionDecl 0x5565d59f0dd8 <line:749:20> col:20 implicit remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f0e78 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59f0ee0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59f0f58 <col:20> Implicit
|-FunctionDecl 0x5565d59f0fb0 prev 0x5565d59f0dd8 <col:1, col:95> col:20 remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f0cb8 <col:32, col:44> col:44 __x 'long double'
| |-ParmVarDecl 0x5565d59f0d38 <col:49, col:61> col:61 __y 'long double'
| `-NoThrowAttr 0x5565d59f1060 <col:82>
|-FunctionDecl 0x5565d59f11f0 <col:98, col:194> col:117 __remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f10d0 <col:131, col:143> col:143 __x 'long double'
| |-ParmVarDecl 0x5565d59f1150 <col:148, col:160> col:160 __y 'long double'
| `-NoThrowAttr 0x5565d59f12a0 <col:181>
|-FunctionDecl 0x5565d59f24b0 <line:753:20> col:20 implicit scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5565d59f2550 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59f25b8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5565d59f2630 <col:20> Implicit
|-FunctionDecl 0x5565d59f2688 prev 0x5565d59f24b0 <col:1, col:84> col:20 scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5565d59f1310 <col:29, col:41> col:41 __x 'long double'
| |-ParmVarDecl 0x5565d59f1390 <col:46, col:50> col:50 __n 'int'
| `-NoThrowAttr 0x5565d59f2738 <col:71>
|-FunctionDecl 0x5565d59f28c8 <col:87, col:172> col:106 __scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5565d59f27a8 <col:117, col:129> col:129 __x 'long double'
| |-ParmVarDecl 0x5565d59f2828 <col:134, col:138> col:138 __n 'int'
| `-NoThrowAttr 0x5565d59f2978 <col:159>
|-FunctionDecl 0x5565d59f2a80 <line:757:12> col:12 implicit ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x5565d59f2b20 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59f2b90 <col:12> Implicit
|-FunctionDecl 0x5565d59f2be8 prev 0x5565d59f2a80 <col:1, col:66> col:12 ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x5565d59f29e8 <col:20, col:32> col:32 __x 'long double'
| `-NoThrowAttr 0x5565d59f2c90 <col:53>
|-FunctionDecl 0x5565d59f2d98 <col:69, col:136> col:80 __ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x5565d59f2d00 <col:90, col:102> col:102 __x 'long double'
| `-NoThrowAttr 0x5565d59f2e40 <col:123>
|-FunctionDecl 0x5565d59f3018 <line:762:20> col:20 implicit scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x5565d59f30b8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59f3120 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x5565d59f3198 <col:20> Implicit
|-FunctionDecl 0x5565d59f31f0 prev 0x5565d59f3018 <col:1, col:90> col:20 scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x5565d59f2eb0 <col:30, col:42> col:42 __x 'long double'
| |-ParmVarDecl 0x5565d59f2f30 <col:47, col:56> col:56 __n 'long'
| `-NoThrowAttr 0x5565d59f32a0 <col:77>
|-FunctionDecl 0x5565d59f34c0 <col:93, col:184> col:112 __scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x5565d59f3310 <col:124, col:136> col:136 __x 'long double'
| |-ParmVarDecl 0x5565d59f3390 <col:141, col:150> col:150 __n 'long'
| `-NoThrowAttr 0x5565d59f3570 <col:171>
|-FunctionDecl 0x5565d59f3678 <line:766:20> col:20 implicit nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59f3718 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5565d59f3788 <col:20> Implicit
| `-ConstAttr 0x5565d59f37e0 <col:20> Implicit
|-FunctionDecl 0x5565d59f3808 prev 0x5565d59f3678 <col:1, col:78> col:20 nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59f35e0 <col:32, col:44> col:44 __x 'long double'
| |-ConstAttr 0x5565d59f3908 <col:20> Inherited Implicit
| `-NoThrowAttr 0x5565d59f38b0 <col:65>
|-FunctionDecl 0x5565d59f39e0 <col:81, col:160> col:100 __nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59f3948 <col:114, col:126> col:126 __x 'long double'
| `-NoThrowAttr 0x5565d59f3a88 <col:147>
|-FunctionDecl 0x5565d59f3b90 <line:770:20> col:20 implicit roundl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59f3c30 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5565d59f3ca0 <col:20> Implicit
| `-ConstAttr 0x5565d59f3cf8 <col:20> Implicit
|-FunctionDecl 0x5565d59f3d20 prev 0x5565d59f3b90 <col:1, col:102> col:20 roundl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59f3af8 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x5565d59f3dc8 <col:61>
| `-ConstAttr 0x5565d59f3e20 <col:92>
|-FunctionDecl 0x5565d59f3ef8 <col:105, col:208> col:124 __roundl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59f3e60 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x5565d59f3fa0 <col:167>
| `-ConstAttr 0x5565d59f3ff8 <col:198>
|-FunctionDecl 0x5565d59f40d0 <line:774:20> col:20 implicit truncl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59f4170 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5565d59f41e0 <col:20> Implicit
| `-ConstAttr 0x5565d59f4238 <col:20> Implicit
|-FunctionDecl 0x5565d59f4260 prev 0x5565d59f40d0 <col:1, col:102> col:20 truncl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59f4038 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x5565d59f4308 <col:61>
| `-ConstAttr 0x5565d59f4360 <col:92>
|-FunctionDecl 0x5565d59f44d0 <col:105, col:208> col:124 __truncl 'long double (long double)' extern
| |-ParmVarDecl 0x5565d59f43a0 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x5565d59f4578 <col:167>
| `-ConstAttr 0x5565d59f45d0 <col:198>
|-FunctionDecl 0x5565d59f4808 <line:779:20> col:20 implicit remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x5565d59f48a8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59f4910 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59f4978 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5565d59f49f8 <col:20> Implicit
|-FunctionDecl 0x5565d59f4a50 prev 0x5565d59f4808 <col:1, col:104> col:20 remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x5565d59f4610 <col:29, col:41> col:41 __x 'long double'
| |-ParmVarDecl 0x5565d59f4690 <col:46, col:58> col:58 __y 'long double'
| |-ParmVarDecl 0x5565d59f4710 <col:63, col:68> col:68 __quo 'int *'
| `-NoThrowAttr 0x5565d59f4b08 <col:91>
|-FunctionDecl 0x5565d59f4d20 <col:107, col:212> col:126 __remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x5565d59f4b78 <col:137, col:149> col:149 __x 'long double'
| |-ParmVarDecl 0x5565d59f4bf8 <col:154, col:166> col:166 __y 'long double'
| |-ParmVarDecl 0x5565d59f4c78 <col:171, col:176> col:176 __quo 'int *'
| `-NoThrowAttr 0x5565d59f4dd8 <col:199>
|-FunctionDecl 0x5565d59f4f18 <line:786:17> col:17 implicit lrintl 'long (long double)' extern
| |-ParmVarDecl 0x5565d59f4fb8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59f5028 <col:17> Implicit
|-FunctionDecl 0x5565d59f5080 prev 0x5565d59f4f18 <col:1, col:71> col:17 lrintl 'long (long double)' extern
| |-ParmVarDecl 0x5565d59f4e48 <col:25, col:37> col:37 __x 'long double'
| `-NoThrowAttr 0x5565d59f5128 <col:58>
|-FunctionDecl 0x5565d59f5230 <col:74, col:146> col:90 __lrintl 'long (long double)' extern
| |-ParmVarDecl 0x5565d59f5198 <col:100, col:112> col:112 __x 'long double'
| `-NoThrowAttr 0x5565d59f52d8 <col:133>
|-FunctionDecl 0x5565d59f5418 <line:788:22> col:22 implicit llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x5565d59f54e0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59f5550 <col:22> Implicit
|-FunctionDecl 0x5565d59f55a8 prev 0x5565d59f5418 <col:1, col:77> col:22 llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x5565d59f5348 <col:31, col:43> col:43 __x 'long double'
| `-NoThrowAttr 0x5565d59f5650 <col:64>
|-FunctionDecl 0x5565d59f5758 <col:80, col:158> col:101 __llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x5565d59f56c0 <col:112, col:124> col:124 __x 'long double'
| `-NoThrowAttr 0x5565d59f5800 <col:145>
|-FunctionDecl 0x5565d59f5908 <line:792:17> col:17 implicit lroundl 'long (long double)' extern
| |-ParmVarDecl 0x5565d59f59a8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59f5a18 <col:17> Implicit
|-FunctionDecl 0x5565d59f5a70 prev 0x5565d59f5908 <col:1, col:72> col:17 lroundl 'long (long double)' extern
| |-ParmVarDecl 0x5565d59f5870 <col:26, col:38> col:38 __x 'long double'
| `-NoThrowAttr 0x5565d59f5b18 <col:59>
|-FunctionDecl 0x5565d59f5c20 <col:75, col:148> col:91 __lroundl 'long (long double)' extern
| |-ParmVarDecl 0x5565d59f5b88 <col:102, col:114> col:114 __x 'long double'
| `-NoThrowAttr 0x5565d59f5cc8 <col:135>
|-FunctionDecl 0x5565d59f5dd0 <line:794:22> col:22 implicit llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x5565d59f5e70 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59f5ee0 <col:22> Implicit
|-FunctionDecl 0x5565d59f5f38 prev 0x5565d59f5dd0 <col:1, col:78> col:22 llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x5565d59f5d38 <col:32, col:44> col:44 __x 'long double'
| `-NoThrowAttr 0x5565d59f5fe0 <col:65>
|-FunctionDecl 0x5565d59f60e8 <col:81, col:160> col:102 __llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x5565d59f6050 <col:114, col:126> col:126 __x 'long double'
| `-NoThrowAttr 0x5565d59f6190 <col:147>
|-FunctionDecl 0x5565d59f6320 <line:798:20> col:20 implicit fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f63c0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59f6428 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5565d59f64a0 <col:20> Implicit
|-FunctionDecl 0x5565d59f6520 prev 0x5565d59f6320 <col:1, col:90> col:20 fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f6200 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5565d59f6280 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x5565d59f65d0 <col:77>
|-FunctionDecl 0x5565d59f6760 <col:93, col:184> col:112 __fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f6640 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x5565d59f66c0 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x5565d59f6810 <col:171>
|-FunctionDecl 0x5565d59f69a0 <line:801:20> col:20 implicit fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f6a40 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59f6aa8 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5565d59f6b20 <col:20> Implicit
| `-ConstAttr 0x5565d59f6b78 <col:20> Implicit
|-FunctionDecl 0x5565d59f6ba0 prev 0x5565d59f69a0 <col:1, col:118> col:20 fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f6880 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5565d59f6900 <col:44, col:56> col:56 __y 'long double'
| |-NoThrowAttr 0x5565d59f6c50 <col:77>
| `-ConstAttr 0x5565d59f6ca8 <col:108>
|-FunctionDecl 0x5565d59f6e08 <col:121, col:240> col:140 __fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f6ce8 <col:149, col:161> col:161 __x 'long double'
| |-ParmVarDecl 0x5565d59f6d68 <col:166, col:178> col:178 __y 'long double'
| |-NoThrowAttr 0x5565d59f6eb8 <col:199>
| `-ConstAttr 0x5565d59f6f10 <col:230>
|-FunctionDecl 0x5565d59f7070 <line:804:20> col:20 implicit fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f7110 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59f7178 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5565d59f71f0 <col:20> Implicit
| `-ConstAttr 0x5565d59f7248 <col:20> Implicit
|-FunctionDecl 0x5565d59f7270 prev 0x5565d59f7070 <col:1, col:118> col:20 fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f6f50 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5565d59f6fd0 <col:44, col:56> col:56 __y 'long double'
| |-NoThrowAttr 0x5565d59f7320 <col:77>
| `-ConstAttr 0x5565d59f7378 <col:108>
|-FunctionDecl 0x5565d59f7500 <col:121, col:240> col:140 __fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f73b8 <col:149, col:161> col:161 __x 'long double'
| |-ParmVarDecl 0x5565d59f7438 <col:166, col:178> col:178 __y 'long double'
| |-NoThrowAttr 0x5565d59f75b0 <col:199>
| `-ConstAttr 0x5565d59f7608 <col:230>
|-FunctionDecl 0x5565d59f76e0 <line:808:1, line:809:32> line:808:12 __fpclassifyl 'int (long double)' extern
| |-ParmVarDecl 0x5565d59f7648 <col:27, col:39> col:39 __value 'long double'
| |-NoThrowAttr 0x5565d59f7788 <col:64>
| `-ConstAttr 0x5565d59f77e0 <line:809:22>
|-FunctionDecl 0x5565d59f78b8 <line:812:1, line:813:32> line:812:12 used __signbitl 'int (long double)' extern
| |-ParmVarDecl 0x5565d59f7820 <col:24, col:36> col:36 __value 'long double'
| |-NoThrowAttr 0x5565d59f7960 <col:61>
| `-ConstAttr 0x5565d59f79b8 <line:813:22>
|-FunctionDecl 0x5565d59f7be8 <line:817:20> col:20 implicit fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x5565d59f7c88 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59f7cf0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5565d59f7d58 <<invalid sloc>> <invalid sloc> 'long double'
| |-ConstAttr 0x5565d59f7dd8 <col:20> Implicit
| `-NoThrowAttr 0x5565d59f7e30 <col:20> Implicit
|-FunctionDecl 0x5565d59f7e58 prev 0x5565d59f7be8 <col:1, col:106> col:20 fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x5565d59f79f8 <col:26, col:38> col:38 __x 'long double'
| |-ParmVarDecl 0x5565d59f7a78 <col:43, col:55> col:55 __y 'long double'
| |-ParmVarDecl 0x5565d59f7af8 <col:60, col:72> col:72 __z 'long double'
| |-ConstAttr 0x5565d59f7f68 <col:20> Inherited Implicit
| `-NoThrowAttr 0x5565d59f7f10 <col:93>
|-FunctionDecl 0x5565d59f8150 <col:109, col:216> col:128 __fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x5565d59f7fa8 <col:136, col:148> col:148 __x 'long double'
| |-ParmVarDecl 0x5565d59f8028 <col:153, col:165> col:165 __y 'long double'
| |-ParmVarDecl 0x5565d59f80a8 <col:170, col:182> col:182 __z 'long double'
| `-NoThrowAttr 0x5565d59f8208 <col:203>
|-FunctionDecl 0x5565d59f8398 <line:818:1, col:91> col:20 scalbl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f8278 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x5565d59f82f8 <col:45, col:57> col:57 __n 'long double'
| `-NoThrowAttr 0x5565d59f8448 <col:78>
|-FunctionDecl 0x5565d59f8630 <col:94, col:186> col:113 __scalbl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5565d59f8510 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x5565d59f8590 <col:140, col:152> col:152 __n 'long double'
| `-NoThrowAttr 0x5565d59f86e0 <col:173>
|-VarDecl 0x5565d59f8750 <line:819:1, col:12> col:12 signgam 'int' extern
|-EnumDecl 0x5565d59f87b8 <line:820:1, line:837:3> line:820:1
| |-EnumConstantDecl 0x5565d59f88c0 <line:822:5, line:824:7> line:822:5 FP_NAN 'int'
| | `-ConstantExpr 0x5565d59f88a8 <line:824:7> 'int'
| |   `-IntegerLiteral 0x5565d59f8888 <col:7> 'int' 0
| |-EnumConstantDecl 0x5565d59f8948 <line:825:5, line:827:7> line:825:5 FP_INFINITE 'int'
| | `-ConstantExpr 0x5565d59f8930 <line:827:7> 'int'
| |   `-IntegerLiteral 0x5565d59f8910 <col:7> 'int' 1
| |-EnumConstantDecl 0x5565d59f89d0 <line:828:5, line:830:7> line:828:5 FP_ZERO 'int'
| | `-ConstantExpr 0x5565d59f89b8 <line:830:7> 'int'
| |   `-IntegerLiteral 0x5565d59f8998 <col:7> 'int' 2
| |-EnumConstantDecl 0x5565d59f8a58 <line:831:5, line:833:7> line:831:5 FP_SUBNORMAL 'int'
| | `-ConstantExpr 0x5565d59f8a40 <line:833:7> 'int'
| |   `-IntegerLiteral 0x5565d59f8a20 <col:7> 'int' 3
| `-EnumConstantDecl 0x5565d59f8ae0 <line:834:5, line:836:7> line:834:5 FP_NORMAL 'int'
|   `-ConstantExpr 0x5565d59f8ac8 <line:836:7> 'int'
|     `-IntegerLiteral 0x5565d59f8aa8 <col:7> 'int' 4
|-EnumDecl 0x5565d59f8b30 <line:838:9, line:845:1> line:838:9
| |-EnumConstantDecl 0x5565d59f8c48 <line:840:3, col:13> col:3 _IEEE_ 'int'
| | `-ConstantExpr 0x5565d59f8c30 <col:12, col:13> 'int'
| |   `-UnaryOperator 0x5565d59f8c18 <col:12, col:13> 'int' prefix '-'
| |     `-IntegerLiteral 0x5565d59f8bf8 <col:13> 'int' 1
| |-EnumConstantDecl 0x5565d59f8c98 <line:841:3> col:3 _SVID_ 'int'
| |-EnumConstantDecl 0x5565d59f8ce8 <line:842:3> col:3 _XOPEN_ 'int'
| |-EnumConstantDecl 0x5565d59f8d38 <line:843:3> col:3 _POSIX_ 'int'
| `-EnumConstantDecl 0x5565d59f8d88 <line:844:3> col:3 _ISOC_ 'int'
|-TypedefDecl 0x5565d59f8e40 <line:838:1, line:845:3> col:3 referenced _LIB_VERSION_TYPE 'enum _LIB_VERSION_TYPE':'_LIB_VERSION_TYPE'
| `-ElaboratedType 0x5565d59f8de0 'enum _LIB_VERSION_TYPE' sugar
|   `-EnumType 0x5565d59f8bd0 '_LIB_VERSION_TYPE'
|     `-Enum 0x5565d59f8b30 ''
|-VarDecl 0x5565d59f8ee8 <line:850:1, col:26> col:26 _LIB_VERSION '_LIB_VERSION_TYPE':'_LIB_VERSION_TYPE' extern
|-RecordDecl 0x5565d59f8f50 <line:851:1, line:859:3> line:851:8 struct exception definition
| |-FieldDecl 0x5565d59f9010 <line:854:5, col:9> col:9 type 'int'
| |-FieldDecl 0x5565d59f9078 <line:855:5, col:11> col:11 name 'char *'
| |-FieldDecl 0x5565d59f90e0 <line:856:5, col:12> col:12 arg1 'double'
| |-FieldDecl 0x5565d59f9148 <line:857:5, col:12> col:12 arg2 'double'
| `-FieldDecl 0x5565d59f91b0 <line:858:5, col:12> col:12 retval 'double'
|-FunctionDecl 0x5565d59f93d8 <line:864:1, col:44> col:12 matherr 'int (struct exception *)' extern
| `-ParmVarDecl 0x5565d59f92c8 <col:21, col:39> col:39 __exc 'struct exception *'
|-FunctionDecl 0x5565d59f9520 <line:866:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5565d59f96a0 <line:867:1, col:88> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5565d59f95d8 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x5565d59f98f0 <col:34, col:88>
|   |-IfStmt 0x5565d59f98c8 <col:36, col:78>
|   | |-UnaryOperator 0x5565d59f97a0 <col:40, col:46> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5565d59f9788 <col:41, col:46> 'int' <LValueToRValue>
|   | |   `-ParenExpr 0x5565d59f9768 <col:41, col:46> 'int' lvalue
|   | |     `-DeclRefExpr 0x5565d59f9748 <col:42> 'int' lvalue ParmVar 0x5565d59f95d8 'cond' 'int'
|   | `-CompoundStmt 0x5565d59f98b0 <col:49, col:78>
|   |   `-LabelStmt 0x5565d59f9898 <col:51, col:75> 'ERROR'
|   |     `-CallExpr 0x5565d59f9828 <col:58, col:75> 'void'
|   |       `-ImplicitCastExpr 0x5565d59f9810 <col:58> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5565d59f97b8 <col:58> 'void () __attribute__((noreturn))' Function 0x5565d59f9520 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   `-ReturnStmt 0x5565d59f98e0 <col:80>
|-FunctionDecl 0x5565d59f99e8 <line:869:1, line:885:1> line:869:5 main 'int (void)'
| `-CompoundStmt 0x5565d59fc9a8 <line:870:1, line:885:1>
|   |-CallExpr 0x5565d59f9c88 <line:872:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5565d59f9c70 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5565d59f9ac0 <col:3> 'void (int)' Function 0x5565d59f96a0 '__VERIFIER_assert' 'void (int)'
|   | `-BinaryOperator 0x5565d59f9c20 <col:21, col:44> 'int' '=='
|   |   |-CallExpr 0x5565d59f9b88 <col:21, col:38> 'double'
|   |   | |-ImplicitCastExpr 0x5565d59f9b70 <col:21> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x5565d59f9ae0 <col:21> 'double (double, double)' Function 0x5565d59b96d0 'remainder' 'double (double, double)'
|   |   | |-ImplicitCastExpr 0x5565d59f9bb8 <col:31> 'double' <FloatingCast>
|   |   | | `-FloatingLiteral 0x5565d59f9b00 <col:31> 'float' 5.100000e+00
|   |   | `-ImplicitCastExpr 0x5565d59f9bd0 <col:37> 'double' <IntegralToFloating>
|   |   |   `-IntegerLiteral 0x5565d59f9b20 <col:37> 'int' 3
|   |   `-UnaryOperator 0x5565d59f9c08 <col:43, col:44> 'double' prefix '-'
|   |     `-FloatingLiteral 0x5565d59f9be8 <col:44> 'double' 9.000001e-01
|   |-CallExpr 0x5565d59f9e30 <line:873:3, col:57> 'void'
|   | |-ImplicitCastExpr 0x5565d59f9e18 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5565d59f9cb0 <col:3> 'void (int)' Function 0x5565d59f96a0 '__VERIFIER_assert' 'void (int)'
|   | `-BinaryOperator 0x5565d59f9df8 <col:21, col:45> 'int' '=='
|   |   |-CallExpr 0x5565d59f9d60 <col:21, col:39> 'double'
|   |   | |-ImplicitCastExpr 0x5565d59f9d48 <col:21> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x5565d59f9cd0 <col:21> 'double (double, double)' Function 0x5565d59b96d0 'remainder' 'double (double, double)'
|   |   | |-ImplicitCastExpr 0x5565d59f9d90 <col:31> 'double' <FloatingCast>
|   |   | | `-FloatingLiteral 0x5565d59f9cf0 <col:31> 'float' 5.100000e+00
|   |   | `-ImplicitCastExpr 0x5565d59f9da8 <col:37, col:38> 'double' <IntegralToFloating>
|   |   |   `-UnaryOperator 0x5565d59f9d30 <col:37, col:38> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x5565d59f9d10 <col:38> 'int' 3
|   |   `-UnaryOperator 0x5565d59f9de0 <col:44, col:45> 'double' prefix '-'
|   |     `-FloatingLiteral 0x5565d59f9dc0 <col:45> 'double' 9.000001e-01
|   |-CallExpr 0x5565d59f9fd8 <line:874:3, col:57> 'void'
|   | |-ImplicitCastExpr 0x5565d59f9fc0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5565d59f9e58 <col:3> 'void (int)' Function 0x5565d59f96a0 '__VERIFIER_assert' 'void (int)'
|   | `-BinaryOperator 0x5565d59f9fa0 <col:21, col:45> 'int' '=='
|   |   |-CallExpr 0x5565d59f9f20 <col:21, col:40> 'double'
|   |   | |-ImplicitCastExpr 0x5565d59f9f08 <col:21> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x5565d59f9e78 <col:21> 'double (double, double)' Function 0x5565d59b96d0 'remainder' 'double (double, double)'
|   |   | |-ImplicitCastExpr 0x5565d59f9f50 <col:31, col:32> 'double' <FloatingCast>
|   |   | | `-UnaryOperator 0x5565d59f9eb8 <col:31, col:32> 'float' prefix '-'
|   |   | |   `-FloatingLiteral 0x5565d59f9e98 <col:32> 'float' 5.100000e+00
|   |   | `-ImplicitCastExpr 0x5565d59f9f68 <col:38, col:39> 'double' <IntegralToFloating>
|   |   |   `-UnaryOperator 0x5565d59f9ef0 <col:38, col:39> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x5565d59f9ed0 <col:39> 'int' 3
|   |   `-FloatingLiteral 0x5565d59f9f80 <col:45> 'double' 9.000001e-01
|   |-CallExpr 0x5565d59fa168 <line:875:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5565d59fa150 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5565d59fa000 <col:3> 'void (int)' Function 0x5565d59f96a0 '__VERIFIER_assert' 'void (int)'
|   | `-BinaryOperator 0x5565d59fa130 <col:21, col:44> 'int' '=='
|   |   |-CallExpr 0x5565d59fa0b0 <col:21, col:39> 'double'
|   |   | |-ImplicitCastExpr 0x5565d59fa098 <col:21> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x5565d59fa020 <col:21> 'double (double, double)' Function 0x5565d59b96d0 'remainder' 'double (double, double)'
|   |   | |-ImplicitCastExpr 0x5565d59fa0e0 <col:31, col:32> 'double' <FloatingCast>
|   |   | | `-UnaryOperator 0x5565d59fa060 <col:31, col:32> 'float' prefix '-'
|   |   | |   `-FloatingLiteral 0x5565d59fa040 <col:32> 'float' 5.100000e+00
|   |   | `-ImplicitCastExpr 0x5565d59fa0f8 <col:38> 'double' <IntegralToFloating>
|   |   |   `-IntegerLiteral 0x5565d59fa078 <col:38> 'int' 3
|   |   `-FloatingLiteral 0x5565d59fa110 <col:44> 'double' 9.000001e-01
|   |-DeclStmt 0x5565d59fa2d0 <line:877:3, col:33>
|   | `-VarDecl 0x5565d59fa1a8 <col:3, col:32> col:10 used rem 'double' cinit
|   |   `-CallExpr 0x5565d59fa288 <col:16, col:32> 'double'
|   |     |-ImplicitCastExpr 0x5565d59fa270 <col:16> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5565d59fa210 <col:16> 'double (double, double)' Function 0x5565d59b96d0 'remainder' 'double (double, double)'
|   |     |-FloatingLiteral 0x5565d59fa230 <col:26> 'double' 0.000000e+00
|   |     `-ImplicitCastExpr 0x5565d59fa2b8 <col:31> 'double' <IntegralToFloating>
|   |       `-IntegerLiteral 0x5565d59fa250 <col:31> 'int' 1
|   |-CallExpr 0x5565d59fb8d0 <line:878:3, col:162> 'void'
|   | |-ImplicitCastExpr 0x5565d59fb8b8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5565d59fa2e8 <col:3> 'void (int)' Function 0x5565d59f96a0 '__VERIFIER_assert' 'void (int)'
|   | `-BinaryOperator 0x5565d59fb898 <col:21, col:161> 'int' '&&'
|   |   |-ParenExpr 0x5565d59fa380 <col:21, col:32> 'int'
|   |   | `-BinaryOperator 0x5565d59fa360 <col:22, col:29> 'int' '=='
|   |   |   |-ImplicitCastExpr 0x5565d59fa348 <col:22> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x5565d59fa308 <col:22> 'double' lvalue Var 0x5565d59fa1a8 'rem' 'double'
|   |   |   `-FloatingLiteral 0x5565d59fa328 <col:29> 'double' 0.000000e+00
|   |   `-ParenExpr 0x5565d59fb878 <col:37, col:161> 'int'
|   |     `-UnaryOperator 0x5565d59fb860 <col:38, col:160> 'int' prefix '!' cannot overflow
|   |       `-ParenExpr 0x5565d59fb840 <col:39, col:160> 'int'
|   |         `-ConditionalOperator 0x5565d59fb810 <col:40, col:159> 'int'
|   |           |-BinaryOperator 0x5565d59fa438 <col:40, col:69> 'int' '=='
|   |           | |-UnaryExprOrTypeTraitExpr 0x5565d59fa3e0 <col:40, col:51> 'unsigned long' sizeof
|   |           | | `-ParenExpr 0x5565d59fa3c0 <col:47, col:51> 'double' lvalue
|   |           | |   `-DeclRefExpr 0x5565d59fa3a0 <col:48> 'double' lvalue Var 0x5565d59fa1a8 'rem' 'double' non_odr_use_unevaluated
|   |           | `-UnaryExprOrTypeTraitExpr 0x5565d59fa418 <col:56, col:69> 'unsigned long' sizeof 'float'
|   |           |-CallExpr 0x5565d59fa4e8 <col:73, col:88> 'int'
|   |           | |-ImplicitCastExpr 0x5565d59fa4d0 <col:73> 'int (*)(float)' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x5565d59fa458 <col:73> 'int (float)' Function 0x5565d59ddbc8 '__signbitf' 'int (float)'
|   |           | `-ImplicitCastExpr 0x5565d59fb558 <col:85> 'float' <FloatingCast>
|   |           |   `-ImplicitCastExpr 0x5565d59fb540 <col:85> 'double' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5565d59fa478 <col:85> 'double' lvalue Var 0x5565d59fa1a8 'rem' 'double'
|   |           `-ConditionalOperator 0x5565d59fb7e0 <col:92, col:159> 'int'
|   |             |-BinaryOperator 0x5565d59fb608 <col:92, col:122> 'int' '=='
|   |             | |-UnaryExprOrTypeTraitExpr 0x5565d59fb5b0 <col:92, col:103> 'unsigned long' sizeof
|   |             | | `-ParenExpr 0x5565d59fb590 <col:99, col:103> 'double' lvalue
|   |             | |   `-DeclRefExpr 0x5565d59fb570 <col:100> 'double' lvalue Var 0x5565d59fa1a8 'rem' 'double' non_odr_use_unevaluated
|   |             | `-UnaryExprOrTypeTraitExpr 0x5565d59fb5e8 <col:108, col:122> 'unsigned long' sizeof 'double'
|   |             |-CallExpr 0x5565d59fb6b8 <col:126, col:140> 'int'
|   |             | |-ImplicitCastExpr 0x5565d59fb6a0 <col:126> 'int (*)(double)' <FunctionToPointerDecay>
|   |             | | `-DeclRefExpr 0x5565d59fb628 <col:126> 'int (double)' Function 0x5565d59b2df0 '__signbit' 'int (double)'
|   |             | `-ImplicitCastExpr 0x5565d59fb6e0 <col:137> 'double' <LValueToRValue>
|   |             |   `-DeclRefExpr 0x5565d59fb648 <col:137> 'double' lvalue Var 0x5565d59fa1a8 'rem' 'double'
|   |             `-CallExpr 0x5565d59fb788 <col:144, col:159> 'int'
|   |               |-ImplicitCastExpr 0x5565d59fb770 <col:144> 'int (*)(long double)' <FunctionToPointerDecay>
|   |               | `-DeclRefExpr 0x5565d59fb6f8 <col:144> 'int (long double)' Function 0x5565d59f78b8 '__signbitl' 'int (long double)'
|   |               `-ImplicitCastExpr 0x5565d59fb7c8 <col:156> 'long double' <FloatingCast>
|   |                 `-ImplicitCastExpr 0x5565d59fb7b0 <col:156> 'double' <LValueToRValue>
|   |                   `-DeclRefExpr 0x5565d59fb718 <col:156> 'double' lvalue Var 0x5565d59fa1a8 'rem' 'double'
|   |-BinaryOperator 0x5565d59fb9f0 <line:880:3, col:25> 'double' '='
|   | |-DeclRefExpr 0x5565d59fb8f8 <col:3> 'double' lvalue Var 0x5565d59fa1a8 'rem' 'double'
|   | `-CallExpr 0x5565d59fb9a8 <col:9, col:25> 'double'
|   |   |-ImplicitCastExpr 0x5565d59fb990 <col:9> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5565d59fb918 <col:9> 'double (double, double)' Function 0x5565d59b96d0 'remainder' 'double (double, double)'
|   |   |-UnaryOperator 0x5565d59fb958 <col:19, col:20> 'double' prefix '-'
|   |   | `-FloatingLiteral 0x5565d59fb938 <col:20> 'double' 0.000000e+00
|   |   `-ImplicitCastExpr 0x5565d59fb9d8 <col:24> 'double' <IntegralToFloating>
|   |     `-IntegerLiteral 0x5565d59fb970 <col:24> 'int' 1
|   |-CallExpr 0x5565d59fbf08 <line:881:3, col:161> 'void'
|   | |-ImplicitCastExpr 0x5565d59fbef0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5565d59fba10 <col:3> 'void (int)' Function 0x5565d59f96a0 '__VERIFIER_assert' 'void (int)'
|   | `-BinaryOperator 0x5565d59fbed0 <col:21, col:160> 'int' '&&'
|   |   |-ParenExpr 0x5565d59fbaa8 <col:21, col:32> 'int'
|   |   | `-BinaryOperator 0x5565d59fba88 <col:22, col:29> 'int' '=='
|   |   |   |-ImplicitCastExpr 0x5565d59fba70 <col:22> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x5565d59fba30 <col:22> 'double' lvalue Var 0x5565d59fa1a8 'rem' 'double'
|   |   |   `-FloatingLiteral 0x5565d59fba50 <col:29> 'double' 0.000000e+00
|   |   `-ParenExpr 0x5565d59fbeb0 <col:37, col:160> 'int'
|   |     `-ParenExpr 0x5565d59fbe90 <col:38, col:159> 'int'
|   |       `-ConditionalOperator 0x5565d59fbe60 <col:39, col:158> 'int'
|   |         |-BinaryOperator 0x5565d59fbb60 <col:39, col:68> 'int' '=='
|   |         | |-UnaryExprOrTypeTraitExpr 0x5565d59fbb08 <col:39, col:50> 'unsigned long' sizeof
|   |         | | `-ParenExpr 0x5565d59fbae8 <col:46, col:50> 'double' lvalue
|   |         | |   `-DeclRefExpr 0x5565d59fbac8 <col:47> 'double' lvalue Var 0x5565d59fa1a8 'rem' 'double' non_odr_use_unevaluated
|   |         | `-UnaryExprOrTypeTraitExpr 0x5565d59fbb40 <col:55, col:68> 'unsigned long' sizeof 'float'
|   |         |-CallExpr 0x5565d59fbbd8 <col:72, col:87> 'int'
|   |         | |-ImplicitCastExpr 0x5565d59fbbc0 <col:72> 'int (*)(float)' <FunctionToPointerDecay>
|   |         | | `-DeclRefExpr 0x5565d59fbb80 <col:72> 'int (float)' Function 0x5565d59ddbc8 '__signbitf' 'int (float)'
|   |         | `-ImplicitCastExpr 0x5565d59fbc18 <col:84> 'float' <FloatingCast>
|   |         |   `-ImplicitCastExpr 0x5565d59fbc00 <col:84> 'double' <LValueToRValue>
|   |         |     `-DeclRefExpr 0x5565d59fbba0 <col:84> 'double' lvalue Var 0x5565d59fa1a8 'rem' 'double'
|   |         `-ConditionalOperator 0x5565d59fbe30 <col:91, col:158> 'int'
|   |           |-BinaryOperator 0x5565d59fbcc8 <col:91, col:121> 'int' '=='
|   |           | |-UnaryExprOrTypeTraitExpr 0x5565d59fbc70 <col:91, col:102> 'unsigned long' sizeof
|   |           | | `-ParenExpr 0x5565d59fbc50 <col:98, col:102> 'double' lvalue
|   |           | |   `-DeclRefExpr 0x5565d59fbc30 <col:99> 'double' lvalue Var 0x5565d59fa1a8 'rem' 'double' non_odr_use_unevaluated
|   |           | `-UnaryExprOrTypeTraitExpr 0x5565d59fbca8 <col:107, col:121> 'unsigned long' sizeof 'double'
|   |           |-CallExpr 0x5565d59fbd40 <col:125, col:139> 'int'
|   |           | |-ImplicitCastExpr 0x5565d59fbd28 <col:125> 'int (*)(double)' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x5565d59fbce8 <col:125> 'int (double)' Function 0x5565d59b2df0 '__signbit' 'int (double)'
|   |           | `-ImplicitCastExpr 0x5565d59fbd68 <col:136> 'double' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x5565d59fbd08 <col:136> 'double' lvalue Var 0x5565d59fa1a8 'rem' 'double'
|   |           `-CallExpr 0x5565d59fbdd8 <col:143, col:158> 'int'
|   |             |-ImplicitCastExpr 0x5565d59fbdc0 <col:143> 'int (*)(long double)' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x5565d59fbd80 <col:143> 'int (long double)' Function 0x5565d59f78b8 '__signbitl' 'int (long double)'
|   |             `-ImplicitCastExpr 0x5565d59fbe18 <col:155> 'long double' <FloatingCast>
|   |               `-ImplicitCastExpr 0x5565d59fbe00 <col:155> 'double' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5565d59fbda0 <col:155> 'double' lvalue Var 0x5565d59fa1a8 'rem' 'double'
|   |-CallExpr 0x5565d59fc640 <line:883:3, col:207> 'void'
|   | |-ImplicitCastExpr 0x5565d59fc628 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5565d59fbf30 <col:3> 'void (int)' Function 0x5565d59f96a0 '__VERIFIER_assert' 'void (int)'
|   | `-ParenExpr 0x5565d59fc608 <col:21, col:206> 'int'
|   |   `-ConditionalOperator 0x5565d59fc5d8 <col:22, col:205> 'int'
|   |     |-BinaryOperator 0x5565d59fc088 <col:22, col:65> 'int' '=='
|   |     | |-UnaryExprOrTypeTraitExpr 0x5565d59fc030 <col:22, col:47> 'unsigned long' sizeof
|   |     | | `-ParenExpr 0x5565d59fc010 <col:29, col:47> 'double'
|   |     | |   `-CallExpr 0x5565d59fbfc8 <col:30, col:46> 'double'
|   |     | |     |-ImplicitCastExpr 0x5565d59fbfb0 <col:30> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |     | |     | `-DeclRefExpr 0x5565d59fbf50 <col:30> 'double (double, double)' Function 0x5565d59b96d0 'remainder' 'double (double, double)' non_odr_use_unevaluated
|   |     | |     |-FloatingLiteral 0x5565d59fbf70 <col:40> 'double' 5.100000e+00
|   |     | |     `-ImplicitCastExpr 0x5565d59fbff8 <col:45> 'double' <IntegralToFloating>
|   |     | |       `-IntegerLiteral 0x5565d59fbf90 <col:45> 'int' 0
|   |     | `-UnaryExprOrTypeTraitExpr 0x5565d59fc068 <col:52, col:65> 'unsigned long' sizeof 'float'
|   |     |-CallExpr 0x5565d59fc1a0 <col:69, col:96> 'int'
|   |     | |-ImplicitCastExpr 0x5565d59fc188 <col:69> 'int (*)(float)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x5565d59fc0a8 <col:69> 'int (float)' Function 0x5565d59cf788 '__isnanf' 'int (float)'
|   |     | `-ImplicitCastExpr 0x5565d59fc1c8 <col:79, col:95> 'float' <FloatingCast>
|   |     |   `-CallExpr 0x5565d59fc140 <col:79, col:95> 'double'
|   |     |     |-ImplicitCastExpr 0x5565d59fc128 <col:79> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |     |     | `-DeclRefExpr 0x5565d59fc0c8 <col:79> 'double (double, double)' Function 0x5565d59b96d0 'remainder' 'double (double, double)'
|   |     |     |-FloatingLiteral 0x5565d59fc0e8 <col:89> 'double' 5.100000e+00
|   |     |     `-ImplicitCastExpr 0x5565d59fc170 <col:94> 'double' <IntegralToFloating>
|   |     |       `-IntegerLiteral 0x5565d59fc108 <col:94> 'int' 0
|   |     `-ConditionalOperator 0x5565d59fc5a8 <col:100, col:205> 'int'
|   |       |-BinaryOperator 0x5565d59fc318 <col:100, col:144> 'int' '=='
|   |       | |-UnaryExprOrTypeTraitExpr 0x5565d59fc2c0 <col:100, col:125> 'unsigned long' sizeof
|   |       | | `-ParenExpr 0x5565d59fc2a0 <col:107, col:125> 'double'
|   |       | |   `-CallExpr 0x5565d59fc258 <col:108, col:124> 'double'
|   |       | |     |-ImplicitCastExpr 0x5565d59fc240 <col:108> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |       | |     | `-DeclRefExpr 0x5565d59fc1e0 <col:108> 'double (double, double)' Function 0x5565d59b96d0 'remainder' 'double (double, double)' non_odr_use_unevaluated
|   |       | |     |-FloatingLiteral 0x5565d59fc200 <col:118> 'double' 5.100000e+00
|   |       | |     `-ImplicitCastExpr 0x5565d59fc288 <col:123> 'double' <IntegralToFloating>
|   |       | |       `-IntegerLiteral 0x5565d59fc220 <col:123> 'int' 0
|   |       | `-UnaryExprOrTypeTraitExpr 0x5565d59fc2f8 <col:130, col:144> 'unsigned long' sizeof 'double'
|   |       |-CallExpr 0x5565d59fc430 <col:148, col:174> 'int'
|   |       | |-ImplicitCastExpr 0x5565d59fc418 <col:148> 'int (*)(double)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x5565d59fc338 <col:148> 'int (double)' Function 0x5565d59b4b10 '__isnan' 'int (double)'
|   |       | `-CallExpr 0x5565d59fc3d0 <col:157, col:173> 'double'
|   |       |   |-ImplicitCastExpr 0x5565d59fc3b8 <col:157> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x5565d59fc358 <col:157> 'double (double, double)' Function 0x5565d59b96d0 'remainder' 'double (double, double)'
|   |       |   |-FloatingLiteral 0x5565d59fc378 <col:167> 'double' 5.100000e+00
|   |       |   `-ImplicitCastExpr 0x5565d59fc400 <col:172> 'double' <IntegralToFloating>
|   |       |     `-IntegerLiteral 0x5565d59fc398 <col:172> 'int' 0
|   |       `-CallExpr 0x5565d59fc568 <col:178, col:205> 'int'
|   |         |-ImplicitCastExpr 0x5565d59fc550 <col:178> 'int (*)(long double)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x5565d59fc458 <col:178> 'int (long double)' Function 0x5565d59eb450 '__isnanl' 'int (long double)'
|   |         `-ImplicitCastExpr 0x5565d59fc590 <col:188, col:204> 'long double' <FloatingCast>
|   |           `-CallExpr 0x5565d59fc4f0 <col:188, col:204> 'double'
|   |             |-ImplicitCastExpr 0x5565d59fc4d8 <col:188> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x5565d59fc478 <col:188> 'double (double, double)' Function 0x5565d59b96d0 'remainder' 'double (double, double)'
|   |             |-FloatingLiteral 0x5565d59fc498 <col:198> 'double' 5.100000e+00
|   |             `-ImplicitCastExpr 0x5565d59fc520 <col:203> 'double' <IntegralToFloating>
|   |               `-IntegerLiteral 0x5565d59fc4b8 <col:203> 'int' 0
|   `-CallExpr 0x5565d59fc980 <line:884:3, col:62> 'void'
|     |-ImplicitCastExpr 0x5565d59fc968 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5565d59fc668 <col:3> 'void (int)' Function 0x5565d59f96a0 '__VERIFIER_assert' 'void (int)'
|     `-BinaryOperator 0x5565d59fc948 <col:21, col:59> 'int' '=='
|       |-CallExpr 0x5565d59fc8e0 <col:21, col:54> 'double'
|       | |-ImplicitCastExpr 0x5565d59fc8c8 <col:21> 'double (*)(double, double)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x5565d59fc688 <col:21> 'double (double, double)' Function 0x5565d59b96d0 'remainder' 'double (double, double)'
|       | |-FloatingLiteral 0x5565d59fc6a8 <col:31> 'double' 5.100000e+00
|       | `-ImplicitCastExpr 0x5565d59fc910 <col:36, col:53> 'double' <FloatingCast>
|       |   `-ParenExpr 0x5565d59fc8a8 <col:36, col:53> 'float'
|       |     `-CallExpr 0x5565d59fc888 <col:37, col:52> 'float'
|       |       `-ImplicitCastExpr 0x5565d59fc870 <col:37> 'float (*)(void)' <BuiltinFnToFnPtr>
|       |         `-DeclRefExpr 0x5565d59fc820 <col:37> '<builtin fn type>' Function 0x5565d59fc700 '__builtin_inff' 'float (void)'
|       `-FloatingLiteral 0x5565d59fc928 <col:59> 'double' 5.100000e+00
`-FunctionDecl 0x5565d59fc700 <col:37> col:37 implicit used __builtin_inff 'float (void)' extern
  |-NoThrowAttr 0x5565d59fc7a0 <col:37> Implicit
  `-ConstAttr 0x5565d59fc7f8 <col:37> Implicit
