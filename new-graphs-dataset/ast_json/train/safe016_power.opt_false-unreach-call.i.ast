TranslationUnitDecl 0x55b03996df88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55b03996e848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55b03996e520 '__int128'
|-TypedefDecl 0x55b03996e8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55b03996e540 'unsigned __int128'
|-TypedefDecl 0x55b03996ebc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55b03996e990 'struct __NSConstantString_tag'
|   `-Record 0x55b03996e910 '__NSConstantString_tag'
|-TypedefDecl 0x55b03996ec68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55b03996ec20 'char *'
|   `-BuiltinType 0x55b03996e020 'char'
|-TypedefDecl 0x55b0399adb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55b03996ef00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55b03996ed40 'struct __va_list_tag'
|     `-Record 0x55b03996ecc0 '__va_list_tag'
|-FunctionDecl 0x55b0399adca0 <pthread-wmm/safe016_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55b0399adbd0 <col:31> col:34 'int'
|-FunctionDecl 0x55b0399ade68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55b0399adf90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55b0399ae0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55b0399ae048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55b0399ae308 <col:40, col:99>
|   |-IfStmt 0x55b0399ae2d8 <col:42, col:88>
|   | |-UnaryOperator 0x55b0399ae1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55b0399ae1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55b0399ae180 <col:47> 'int' lvalue ParmVar 0x55b0399ae048 'expression' 'int'
|   | `-CompoundStmt 0x55b0399ae2c0 <col:59, col:88>
|   |   `-LabelStmt 0x55b0399ae2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55b0399ae238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55b0399ae220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55b0399ae1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55b0399adf90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55b0399ae2f0 <col:89>
|   `-ReturnStmt 0x55b0399ae2f8 <col:91>
|-FunctionDecl 0x55b0399ae350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55b0399ae410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55b0399ae790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b0399ae4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55b0399ae548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55b0399ae5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55b0399ae648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55b0399ae850 <line:10:22>
|-FunctionDecl 0x55b0399d48a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b0399ae8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55b0399ae940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55b0399ae9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55b0399aea40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55b0399d4960 <line:13:22>
|-FunctionDecl 0x55b0399d4c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b0399d49d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55b0399d4a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55b0399d4ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55b0399d4cc8 <line:15:22>
|-TypedefDecl 0x55b0399d4d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55b03996e0e0 'unsigned char'
|-TypedefDecl 0x55b0399d4da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55b03996e100 'unsigned short'
|-TypedefDecl 0x55b0399d4e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55b03996e120 'unsigned int'
|-TypedefDecl 0x55b0399d4e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-TypedefDecl 0x55b0399d4ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55b03996e040 'signed char'
|-TypedefDecl 0x55b0399d4f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55b03996e0e0 'unsigned char'
|-TypedefDecl 0x55b0399d4fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55b03996e060 'short'
|-TypedefDecl 0x55b0399d5048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55b03996e100 'unsigned short'
|-TypedefDecl 0x55b0399d50b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55b03996e080 'int'
|-TypedefDecl 0x55b0399d5128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55b03996e120 'unsigned int'
|-TypedefDecl 0x55b0399d5198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399d5208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-TypedefDecl 0x55b0399d5278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399d52e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-TypedefDecl 0x55b0399d5358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-TypedefDecl 0x55b0399d53c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55b03996e120 'unsigned int'
|-TypedefDecl 0x55b0399d5438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55b03996e120 'unsigned int'
|-TypedefDecl 0x55b0399d54a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-TypedefDecl 0x55b0399d5518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-TypedefDecl 0x55b0399d5588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55b03996e120 'unsigned int'
|-TypedefDecl 0x55b0399d55f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-TypedefDecl 0x55b0399d5668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399d56d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399d5748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55b03996e080 'int'
|-RecordDecl 0x55b0399d57a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55b0399d5918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55b0399d59d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55b0399d5970 'struct __fsid_t' sugar
|   `-RecordType 0x55b0399d5820 '__fsid_t'
|     `-Record 0x55b0399d57a0 ''
|-TypedefDecl 0x55b0399d5a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399d5ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-TypedefDecl 0x55b0399d5b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-TypedefDecl 0x55b0399d5ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55b03996e120 'unsigned int'
|-TypedefDecl 0x55b0399d5c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399d5c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55b03996e120 'unsigned int'
|-TypedefDecl 0x55b0399d5cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399d5d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55b03996e080 'int'
|-TypedefDecl 0x55b0399d5dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55b03996e080 'int'
|-TypedefDecl 0x55b0399d5e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55b03996e080 'int'
|-TypedefDecl 0x55b0399d5eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55b03996e7a0 'void *'
|   `-BuiltinType 0x55b03996dfe0 'void'
|-TypedefDecl 0x55b0399d5f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399d5f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399d6008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399d6078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-TypedefDecl 0x55b0399d60e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-TypedefDecl 0x55b0399d6158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-TypedefDecl 0x55b0399d61c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-TypedefDecl 0x55b0399d6238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399d62a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399d6318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399d6388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-TypedefDecl 0x55b0399d6418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55b0399d63e0 '__off64_t' sugar
|   |-Typedef 0x55b0399d56d8 '__off64_t'
|   `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399d6510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55b0399d64d0 '__quad_t *'
|   `-TypedefType 0x55b0399d6470 '__quad_t' sugar
|     |-Typedef 0x55b0399d5278 '__quad_t'
|     `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399d6580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55b03996ec20 'char *'
|   `-BuiltinType 0x55b03996e020 'char'
|-TypedefDecl 0x55b0399d65f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399d6660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55b03996e120 'unsigned int'
|-FunctionDecl 0x55b0399d67a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55b0399d66d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55b0399d6ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55b0399d6ad8 <line:72:3, col:34>
|     `-CallExpr 0x55b0399d6a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55b0399d6a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55b0399d6a10 <col:10> '<builtin fn type>' Function 0x55b0399d6880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55b0399d6ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55b0399d6a30 <col:29> 'unsigned int' lvalue ParmVar 0x55b0399d66d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55b0399d6880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55b0399d6920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55b0399d6990 <col:10> Implicit
| `-ConstAttr 0x55b0399d69e8 <col:10> Implicit
|-FunctionDecl 0x55b0399d6c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55b0399d6b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55b0399d6f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55b0399d6f48 <line:77:3, col:34>
|     `-CallExpr 0x55b0399d6f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55b0399d6ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55b0399d6e78 <col:10> '<builtin fn type>' Function 0x55b0399d6ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55b0399d6f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55b0399d6e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55b0399d6b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55b0399d6ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55b0399d6d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55b0399d6df8 <col:10> Implicit
| `-ConstAttr 0x55b0399d6e50 <col:10> Implicit
|-TypedefDecl 0x55b0399d6f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-TypedefDecl 0x55b0399d7018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55b0399d6fe0 '__time_t' sugar
|   |-Typedef 0x55b0399d5c18 '__time_t'
|   `-BuiltinType 0x55b03996e0a0 'long'
|-RecordDecl 0x55b0399d7070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55b0399d7128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55b0399d71b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55b0399d7248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55b0399d7210 '__pid_t' sugar
|   |-Typedef 0x55b0399d5748 '__pid_t'
|   `-BuiltinType 0x55b03996e080 'int'
|-RecordDecl 0x55b0399d72a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55b0399d7360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55b0399d73b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55b0399d7470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55b0399d74d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-RecordDecl 0x55b0399d7530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55b0399d77c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55b0399d98b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55b0399d7810 'struct cpu_set_t' sugar
|   `-RecordType 0x55b0399d75b0 'cpu_set_t'
|     `-Record 0x55b0399d7530 ''
|-FunctionDecl 0x55b0399d9b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55b0399d9958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b0399d9a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55b0399d9c38 <line:107:19>
|-FunctionDecl 0x55b0399d9e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55b0399d9ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55b0399d9eb8 <col:69>
|-FunctionDecl 0x55b0399da030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55b0399d9f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55b0399da0d8 <col:64>
|-FunctionDecl 0x55b0399da398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b0399da140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b0399da278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55b0399da448 <line:113:22>
|-FunctionDecl 0x55b0399da6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55b0399da4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b0399da5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55b0399da778 <col:88>
|-FunctionDecl 0x55b0399daa98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b0399da7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b0399da8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55b0399da950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55b0399dab50 <col:62>
|-FunctionDecl 0x55b0399dacc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55b0399dabb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55b0399dad70 <col:63>
|-FunctionDecl 0x55b0399dae98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55b0399daf38 <col:47>
|-FunctionDecl 0x55b0399db040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55b0399dafa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55b0399db0e8 <col:69>
|-FunctionDecl 0x55b0399db1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55b0399db158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55b0399db298 <col:69>
|-FunctionDecl 0x55b0399db558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b0399db300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b0399db438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55b0399db608 <col:88>
|-TypedefDecl 0x55b0399db698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55b0399db660 '__clock_t' sugar
|   |-Typedef 0x55b0399d5a58 '__clock_t'
|   `-BuiltinType 0x55b03996e0a0 'long'
|-TypedefDecl 0x55b0399db728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55b0399db6f0 '__clockid_t' sugar
|   |-Typedef 0x55b0399d5e48 '__clockid_t'
|   `-BuiltinType 0x55b03996e080 'int'
|-TypedefDecl 0x55b0399db7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55b0399db780 '__timer_t' sugar
|   |-Typedef 0x55b0399d5eb8 '__timer_t'
|   `-PointerType 0x55b03996e7a0 'void *'
|     `-BuiltinType 0x55b03996dfe0 'void'
|-RecordDecl 0x55b0399db810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55b0399db8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55b0399db950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55b0399db9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55b0399dba20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55b0399dba88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55b0399dbaf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55b0399dbb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55b0399dbbc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55b0399dbc28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55b0399dbc90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55b0399dbcf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55b0399dbd48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55b0399dbe18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55b0399dbe88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55b0399dbf30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55b0399dc100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55b0399dc1a0 <col:45>
|-FunctionDecl 0x55b0399dc380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55b0399dc270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55b0399dc428 <col:54>
|-FunctionDecl 0x55b0399dc628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55b0399dc490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55b0399dc508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55b0399dc6d8 <line:157:22>
| `-ConstAttr 0x55b0399dc730 <col:63>
|-FunctionDecl 0x55b0399dd560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b0399dc828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55b0399dd608 <col:56>
|-FunctionDecl 0x55b0399dd9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55b0399dd678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55b0399dd6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b0399dd770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55b0399dd868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55b0399dda70 <col:54>
|-RecordDecl 0x55b0399ddac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55b0399ddb78 parent 0x55b03996df88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55b0399dddd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55b0399dde78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55b0399ddee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55b0399ddf48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55b0399de038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55b0399de158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55b0399de100 'struct __locale_struct *'
|   `-ElaboratedType 0x55b0399de090 'struct __locale_struct' sugar
|     `-RecordType 0x55b0399ddb50 'struct __locale_struct'
|       `-Record 0x55b0399ddac8 '__locale_struct'
|-TypedefDecl 0x55b0399de208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55b0399de1d0 '__locale_t' sugar
|   |-Typedef 0x55b0399de158 '__locale_t'
|   `-PointerType 0x55b0399de100 'struct __locale_struct *'
|     `-ElaboratedType 0x55b0399de090 'struct __locale_struct' sugar
|       `-RecordType 0x55b0399ddb50 'struct __locale_struct'
|         `-Record 0x55b0399ddac8 '__locale_struct'
|-FunctionDecl 0x55b0399de610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55b0399de278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55b0399de2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b0399de370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55b0399de400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55b0399de478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55b0399de6d8 <col:40>
|-FunctionDecl 0x55b0399de8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55b0399de7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55b0399de970 <col:66>
|-FunctionDecl 0x55b0399dea80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55b0399de9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55b0399deb28 <col:69>
|-FunctionDecl 0x55b0399ded58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55b0399deb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b0399dec20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55b0399dee08 <col:52>
|-FunctionDecl 0x55b0399defb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55b0399dee70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b0399def00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55b0399df060 <col:55>
|-FunctionDecl 0x55b0399df1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55b0399df0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55b0399df2a0 <col:62>
|-FunctionDecl 0x55b0399df418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55b0399df308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55b0399df4c0 <col:60>
|-FunctionDecl 0x55b0399df718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55b0399df578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55b0399df5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55b0399df7c8 <col:44>
|-FunctionDecl 0x55b0399df9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55b0399df830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b0399df8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55b0399dfa88 <col:49>
|-VarDecl 0x55b0399dfb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55b0399dfc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55b0399dfc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55b0399dfd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55b0399dfe80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55b0399dff20 <col:42>
|-VarDecl 0x55b0399dff90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55b0399e0010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55b0399e0198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55b0399e0088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55b0399e0240 <col:57>
|-FunctionDecl 0x55b0399e0350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b0399e02c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55b0399e03f8 <col:56>
|-FunctionDecl 0x55b0399e1540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b0399e0478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55b0399e15e8 <col:59>
|-FunctionDecl 0x55b0399e16f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55b0399e1658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55b0399e1798 <col:48>
| `-ConstAttr 0x55b0399e17f0 <col:89>
|-FunctionDecl 0x55b0399e1a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55b0399e18a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55b0399e1938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55b0399e1cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b0399e1b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b0399e1bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55b0399e1d68 <col:88>
|-FunctionDecl 0x55b0399e1f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b0399e1dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b0399e1e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55b0399e1fb0 <col:88>
|-FunctionDecl 0x55b0399e21c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55b0399e2018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b0399e20a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55b0399e2278 <line:208:22>
|-FunctionDecl 0x55b0399e25e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55b0399e22e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b0399e2360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55b0399e23f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55b0399e2480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55b0399e28e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55b0399e26e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55b0399e27c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55b0399e2998 <col:85>
|-FunctionDecl 0x55b0399e2d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55b0399e2a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b0399e2b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55b0399e2c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55b0399e2e40 <col:52>
|-FunctionDecl 0x55b0399e2fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55b0399e2ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55b0399e3060 <col:61>
|-FunctionDecl 0x55b0399e3560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55b0399e30c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55b0399e3148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55b0399e3278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55b0399e3368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55b0399e3620 <col:62>
|-FunctionDecl 0x55b0399e3838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55b0399e3688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55b0399e3718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55b0399e38e8 <line:221:22>
|-FunctionDecl 0x55b0399e39e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55b0399e3950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55b0399e3a90 <col:65>
|-TypedefDecl 0x55b0399e3b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55b03996e140 'unsigned long'
|-RecordDecl 0x55b0399e3b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55b0399e3ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55b0399e3d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b0399e3db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55b0399e3d60 'union pthread_attr_t' sugar
|   `-RecordType 0x55b0399e3be0 'union pthread_attr_t'
|     `-Record 0x55b0399e3b58 'pthread_attr_t'
|-RecordDecl 0x55b0399e3e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55b0399e3f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55b0399e4000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55b0399e40b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55b0399e4050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55b0399e3e90 'struct __pthread_internal_list'
|     `-Record 0x55b0399e3e10 '__pthread_internal_list'
|-RecordDecl 0x55b0399e4120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55b0399e41c8 parent 0x55b03996df88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55b0399e42a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b0399e4308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55b0399e4370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55b0399e43d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55b0399e4440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55b0399e44a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55b0399e8580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55b0399e8630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55b0399e8720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55b0399e8788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b0399e8910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55b0399e88b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55b0399e41a0 'pthread_mutex_t'
|     `-Record 0x55b0399e4120 ''
|-RecordDecl 0x55b0399e8980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55b0399e8ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b0399e8b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b0399e8be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55b0399e8b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55b0399e8a00 'pthread_mutexattr_t'
|     `-Record 0x55b0399e8980 ''
|-RecordDecl 0x55b0399e8c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55b0399e8cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55b0399e8dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b0399e8e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55b0399e8e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55b0399e8ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55b0399e8f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55b0399e8fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55b0399e9030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55b0399e9098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55b0399e9150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe016_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe016_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55b0399e9240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55b0399e92a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55b0399e93e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55b0399e9380 'union pthread_cond_t' sugar
|   `-RecordType 0x55b0399e8cd0 'pthread_cond_t'
|     `-Record 0x55b0399e8c50 ''
|-RecordDecl 0x55b0399e9450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55b0399e9590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b0399e95f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b0399e96b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55b0399e9650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55b0399e94d0 'pthread_condattr_t'
|     `-Record 0x55b0399e9450 ''
|-TypedefDecl 0x55b0399e9738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55b03996e120 'unsigned int'
|-TypedefDecl 0x55b0399e97a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55b03996e080 'int'
|-RecordDecl 0x55b0399e9800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55b0399e98a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55b0399e9970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b0399e99d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55b0399e9a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55b0399e9aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55b0399e9b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55b0399e9b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55b0399e9be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55b0399e9c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55b0399e9cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55b0399e9d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55b0399e9d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55b0399e9e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe016_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe016_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55b0399e9ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55b0399e9f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b0399ea090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55b0399ea030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55b0399e9880 'pthread_rwlock_t'
|     `-Record 0x55b0399e9800 ''
|-RecordDecl 0x55b0399ea100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55b0399ea240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55b0399ea2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b0399ea360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55b0399ea300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55b0399ea180 'pthread_rwlockattr_t'
|     `-Record 0x55b0399ea100 ''
|-TypedefDecl 0x55b0399ea3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55b03996e084 'volatile int' volatile
|   `-BuiltinType 0x55b03996e080 'int'
|-RecordDecl 0x55b0399ea440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55b0399ec5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55b0399ec618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b0399ec6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55b0399ec670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55b0399ea4c0 'pthread_barrier_t'
|     `-Record 0x55b0399ea440 ''
|-RecordDecl 0x55b0399ec740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55b0399ec840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b0399ec8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b0399ec960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55b0399ec900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55b0399ec7c0 'pthread_barrierattr_t'
|     `-Record 0x55b0399ec740 ''
|-TypedefDecl 0x55b0399eca78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55b0399eca10 'long [8]' 8 
|   `-BuiltinType 0x55b03996e0a0 'long'
|-EnumDecl 0x55b0399ecad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55b0399ecb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55b0399ecbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55b0399ecc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55b0399ecd08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55b0399ecd58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55b0399ecda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55b0399ecdf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55b0399ece80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55b0399ece68 <col:26> 'int'
| |   `-DeclRefExpr 0x55b0399ece48 <col:26> 'int' EnumConstant 0x55b0399ecd08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55b0399ecf08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55b0399ecef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55b0399eced0 <col:29> 'int' EnumConstant 0x55b0399ecd58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55b0399ecf90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55b0399ecf78 <col:30> 'int'
| |   `-DeclRefExpr 0x55b0399ecf58 <col:30> 'int' EnumConstant 0x55b0399ecda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55b0399ed018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55b0399ed000 <col:27> 'int'
|     `-DeclRefExpr 0x55b0399ecfe0 <col:27> 'int' EnumConstant 0x55b0399ece80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55b0399ed068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55b0399ed138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55b0399ed1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55b0399ed1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55b0399ed188 <col:30> 'int' EnumConstant 0x55b0399ed138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55b0399ed210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55b0399ed298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55b0399ed280 <col:29> 'int'
|     `-DeclRefExpr 0x55b0399ed260 <col:29> 'int' EnumConstant 0x55b0399ed210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55b0399ed2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55b0399ed3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55b0399ed408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55b0399ed458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55b0399ed4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55b0399ed5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55b0399ed610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55b0399ed660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55b0399ed6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55b0399ed6d0 <col:31> 'int'
|     `-DeclRefExpr 0x55b0399ed6b0 <col:31> 'int' EnumConstant 0x55b0399ed5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55b0399ed738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55b0399ed808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55b0399ed858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55b0399ed8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55b0399ed978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55b0399ed9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55b0399eda18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55b0399edae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55b0399edb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55b0399edb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55b0399eddc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55b0399ede30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55b0399ede98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55b0399edfb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55b0399ee008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55b0399ee0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55b0399ee128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55b0399ee178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55b0399ee248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55b0399ee298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55b0399ee8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55b0399ee390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55b0399ee4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b0399ee6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55b0399ee760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55b0399ee9b8 <col:47>
| |-NonNullAttr 0x55b0399eea10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55b0399eea48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55b0399eeb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55b0399eeaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55b0399eedc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55b0399eec28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55b0399eeca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55b0399eef98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55b0399eee88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55b0399ef040 <col:60>
|-FunctionDecl 0x55b0399ef190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55b0399ef230 <col:54>
| `-ConstAttr 0x55b0399ef288 <col:95>
|-FunctionDecl 0x55b0399ef458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55b0399ef2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b0399ef338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55b0399ef508 <line:394:19>
| `-ConstAttr 0x55b0399ef560 <col:60>
|-FunctionDecl 0x55b0399eff68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55b0399efe30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55b0399f0010 <col:71>
| `-NonNullAttr 0x55b0399f0068 <col:112, col:126> 1
|-FunctionDecl 0x55b0399f0170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55b0399f00b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55b0399f0218 <line:397:22>
| `-NonNullAttr 0x55b0399f0270 <col:63, col:77> 1
|-FunctionDecl 0x55b0399f0498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55b0399f02b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55b0399f0338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55b0399f0548 <line:400:22>
| `-NonNullAttr 0x55b0399f05a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b0399f07a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b0399f05e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b0399f0668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55b0399f0858 <line:403:22>
| `-NonNullAttr 0x55b0399f08b0 <col:63, col:77> 1
|-FunctionDecl 0x55b0399f0b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55b0399f08f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55b0399f09a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55b0399f0bb8 <line:406:22>
| `-NonNullAttr 0x55b0399f0c10 <col:63, col:80> 1 2
|-FunctionDecl 0x55b0399f1e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55b0399f0c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b0399f0cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b0399f1ef8 <line:409:22>
| `-NonNullAttr 0x55b0399f1f50 <col:63, col:77> 1
|-FunctionDecl 0x55b0399f2188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b0399f1f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b0399f2028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55b0399f2238 <line:412:22>
| `-NonNullAttr 0x55b0399f2290 <col:63, col:80> 1 2
|-FunctionDecl 0x55b0399f24c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b0399f22d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b0399f2368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55b0399f2578 <col:37>
| `-NonNullAttr 0x55b0399f25d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55b0399f27b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b0399f2618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b0399f2698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55b0399f2868 <line:418:22>
| `-NonNullAttr 0x55b0399f28c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b0399f2a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b0399f2908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b0399f2988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55b0399f2af8 <line:420:22>
| `-NonNullAttr 0x55b0399f2b50 <col:63, col:77> 1
|-FunctionDecl 0x55b0399f2cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b0399f2b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b0399f2c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55b0399f2da8 <line:423:22>
| `-NonNullAttr 0x55b0399f3e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55b0399f3fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b0399f3e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b0399f3ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55b0399f4068 <line:426:22>
| `-NonNullAttr 0x55b0399f40c0 <col:63, col:77> 1
|-FunctionDecl 0x55b0399f4268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b0399f4108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b0399f4188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55b0399f4318 <line:429:22>
| `-NonNullAttr 0x55b0399f4370 <col:63, col:80> 1 2
|-FunctionDecl 0x55b0399f44f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b0399f43b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b0399f4438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55b0399f45a8 <line:431:22>
| `-NonNullAttr 0x55b0399f4600 <col:63, col:77> 1
|-FunctionDecl 0x55b0399f4828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55b0399f4648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b0399f46c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55b0399f48d8 <line:434:22>
| |-NonNullAttr 0x55b0399f4930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55b0399f4968 <col:100> "" ""
|-FunctionDecl 0x55b0399f4b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55b0399f49b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b0399f4a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55b0399f4c28 <line:437:22>
| |-NonNullAttr 0x55b0399f4c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55b0399f4cb8 <col:97> "" ""
|-FunctionDecl 0x55b0399f4eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55b0399f4d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b0399f4d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55b0399f4f68 <line:440:22>
| `-NonNullAttr 0x55b0399f4fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b0399f5140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55b0399f5008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b0399f5080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b0399f51f0 <line:443:22>
| `-NonNullAttr 0x55b0399f5248 <col:63, col:77> 1
|-FunctionDecl 0x55b0399f5538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55b0399f5298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b0399f5318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55b0399f5390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55b0399f55f0 <line:447:22>
| `-NonNullAttr 0x55b0399f5648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55b0399f58f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55b0399f56a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b0399f5720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55b0399f5798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b0399f59b0 <col:43>
| `-NonNullAttr 0x55b0399f5a08 <col:84, col:98> 1
|-FunctionDecl 0x55b0399f5cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b0399f5a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b0399f5ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55b0399f5b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55b0399f5d80 <line:452:22>
| `-NonNullAttr 0x55b0399f5dd8 <col:63, col:77> 3
|-FunctionDecl 0x55b0399f60e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b0399f5e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b0399f5ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55b0399f5f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55b0399f61a0 <line:456:22>
| `-NonNullAttr 0x55b0399f61f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55b0399f63e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55b0399f6248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b0399f62c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55b0399f6498 <line:458:22>
|-FunctionDecl 0x55b0399f6868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55b0399f6560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55b0399f6700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55b0399f6918 <col:52, col:69> 1 2
|-FunctionDecl 0x55b0399f6ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55b0399f69a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55b0399f6a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55b0399f6ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55b0399f6b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55b0399f6c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55b0399f6e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55b0399f6d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55b0399f6fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55b0399f7040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55b0399f70e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55b0399f71d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55b0399f7240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55b0399f7410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe016_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55b0399f7508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55b0399f75c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55b0399f7560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55b0399f70c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55b0399f7040 ''
| `-AlignedAttr 0x55b0399f7618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55b0399f7690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55b0399f77f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55b0399f7858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55b0399f78c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55b0399f7928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55b0399f7b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55b0399f7a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55b0399f7c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55b0399f7be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55b0399f7e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b0399f7d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55b0399f7f18 <line:487:22>
|-RecordDecl 0x55b0399f7f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55b0399f8288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55b0399f80e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55b0399f8168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55b0399f8338 <col:86>
| `-ReturnsTwiceAttr 0x55b0399f8390 <col:12> Implicit
|-FunctionDecl 0x55b0399f86b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b0399f8460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55b0399f8570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b0399f8768 <line:493:22>
| `-NonNullAttr 0x55b0399f87c0 <col:63, col:77> 1
|-FunctionDecl 0x55b0399f8938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b0399f8808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b0399f89e0 <line:495:22>
| `-NonNullAttr 0x55b0399f8a38 <col:63, col:77> 1
|-FunctionDecl 0x55b0399f8b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b0399f8a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b0399f8be8 <line:497:22>
| `-NonNullAttr 0x55b0399f8c40 <col:52, col:66> 1
|-FunctionDecl 0x55b0399f8d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b0399f8c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b0399f8de8 <line:499:22>
| `-NonNullAttr 0x55b0399f8e40 <col:52, col:66> 1
|-FunctionDecl 0x55b0399f9088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b0399f8e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b0399f8f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b0399f9138 <col:36>
| `-NonNullAttr 0x55b0399f9190 <col:66, col:83> 1 2
|-FunctionDecl 0x55b0399f9290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b0399f91d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b0399f9338 <line:504:22>
| `-NonNullAttr 0x55b0399f9390 <col:52, col:66> 1
|-FunctionDecl 0x55b0399f9628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b0399f9440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b0399f94c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55b0399f96d8 <line:508:22>
| `-NonNullAttr 0x55b0399f9730 <col:63, col:80> 1 2
|-FunctionDecl 0x55b0399f99f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55b0399f9778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b0399f97f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55b0399f9878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55b0399f9ab0 <line:512:22>
| `-NonNullAttr 0x55b0399f9b08 <col:63, col:80> 1 3
|-FunctionDecl 0x55b0399f9c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b0399f9b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b0399f9cb8 <line:514:22>
| `-NonNullAttr 0x55b0399f9d10 <col:63, col:77> 1
|-FunctionDecl 0x55b0399f9f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b0399f9dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b0399f9fe0 <line:516:22>
| `-NonNullAttr 0x55b0399fa038 <col:63, col:77> 1
|-FunctionDecl 0x55b0399fa140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b0399fa088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b0399fa1e8 <line:518:22>
| `-NonNullAttr 0x55b0399fa240 <col:63, col:77> 1
|-FunctionDecl 0x55b0399fa468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b0399fa288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b0399fa308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b0399fa518 <line:522:22>
| `-NonNullAttr 0x55b0399fa570 <col:63, col:80> 1 2
|-FunctionDecl 0x55b0399fa778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b0399fa5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b0399fa638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55b0399fa828 <line:525:22>
| `-NonNullAttr 0x55b0399fa880 <col:63, col:77> 1
|-FunctionDecl 0x55b0399faa28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b0399fa8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b0399fa948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55b0399faad8 <line:528:22>
| `-NonNullAttr 0x55b0399fab30 <col:63, col:80> 1 2
|-FunctionDecl 0x55b0399facb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b0399fab78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b0399fabf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55b0399fad68 <line:530:22>
| `-NonNullAttr 0x55b0399fadc0 <col:63, col:77> 1
|-FunctionDecl 0x55b0399fbf90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b0399fae08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b0399fbeb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55b0399fc040 <line:534:22>
| `-NonNullAttr 0x55b0399fc098 <col:63, col:80> 1 2
|-FunctionDecl 0x55b0399fc228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b0399fc0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b0399fc168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55b0399fc2d8 <line:537:22>
| `-NonNullAttr 0x55b0399fc330 <col:63, col:77> 1
|-FunctionDecl 0x55b0399fc4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b0399fc378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b0399fc3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55b0399fc588 <line:541:22>
| `-NonNullAttr 0x55b0399fc5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b0399fc768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b0399fc628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b0399fc6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55b0399fc818 <line:544:22>
| `-NonNullAttr 0x55b0399fc870 <col:63, col:77> 1
|-FunctionDecl 0x55b0399fca58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55b0399fc8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b0399fc938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55b0399fcb08 <line:547:22>
| `-NonNullAttr 0x55b0399fcb60 <col:63, col:80> 1 2
|-FunctionDecl 0x55b0399fcce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b0399fcba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b0399fcc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55b0399fcd98 <line:550:22>
| `-NonNullAttr 0x55b0399fcdf0 <col:63, col:77> 1
|-FunctionDecl 0x55b0399fe168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55b0399fdf10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b0399fe020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55b0399fe218 <col:29>
| `-NonNullAttr 0x55b0399fe270 <col:70, col:84> 1
|-FunctionDecl 0x55b0399fe3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b0399fe2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b0399fe490 <line:555:22>
| `-NonNullAttr 0x55b0399fe4e8 <col:63, col:77> 1
|-FunctionDecl 0x55b0399fe5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b0399fe538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b0399fe698 <line:557:22>
| `-NonNullAttr 0x55b0399fe6f0 <col:52, col:66> 1
|-FunctionDecl 0x55b0399fe7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b0399fe738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b0399fe898 <line:559:19>
| `-NonNullAttr 0x55b0399fe8f0 <col:49, col:63> 1
|-FunctionDecl 0x55b0399feb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b0399fe938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b0399fe9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b0399febd8 <col:39>
| `-NonNullAttr 0x55b0399fec30 <col:69, col:86> 1 2
|-FunctionDecl 0x55b0399fed30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b0399fec78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b0399fedd8 <line:564:22>
| `-NonNullAttr 0x55b0399fee30 <col:52, col:66> 1
|-FunctionDecl 0x55b0399fef98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b0399feee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b0399ff040 <line:566:22>
| `-NonNullAttr 0x55b0399ff098 <col:52, col:66> 1
|-FunctionDecl 0x55b0399ff258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b0399ff0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b0399ff178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b0399ff308 <col:39>
| `-NonNullAttr 0x55b0399ff360 <col:69, col:86> 1 2
|-FunctionDecl 0x55b0399ff460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b0399ff3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b0399ff508 <line:571:22>
| `-NonNullAttr 0x55b0399ff560 <col:52, col:66> 1
|-FunctionDecl 0x55b0399ff748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55b0399ff610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55b0399ff7f0 <line:573:22>
| `-NonNullAttr 0x55b0399ff848 <col:63, col:77> 1
|-FunctionDecl 0x55b0399ff950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55b0399ff898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55b0399ff9f8 <line:575:22>
| `-NonNullAttr 0x55b0399ffa50 <col:63, col:77> 1
|-FunctionDecl 0x55b0399ffc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b0399ffa98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55b0399ffb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b0399ffd28 <line:579:22>
| `-NonNullAttr 0x55b0399ffd80 <col:63, col:80> 1 2
|-FunctionDecl 0x55b0399fffa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55b0399ffdc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55b0399ffe48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55b039a00058 <line:582:22>
| `-NonNullAttr 0x55b039a000b0 <col:63, col:77> 1
|-FunctionDecl 0x55b039a00258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b039a000f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55b039a00178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55b039a00308 <line:586:22>
| `-NonNullAttr 0x55b039a00360 <col:63, col:80> 1 2
|-FunctionDecl 0x55b039a004e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55b039a003a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55b039a00428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55b039a00598 <col:36>
| `-NonNullAttr 0x55b039a005f0 <col:77, col:91> 1
|-FunctionDecl 0x55b039a00928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55b039a006d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b039a007e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55b039a009d8 <line:591:22>
| `-NonNullAttr 0x55b039a00a30 <col:63, col:77> 1
|-FunctionDecl 0x55b039a00ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b039a00a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b039a00c50 <line:593:22>
| `-NonNullAttr 0x55b039a00ca8 <col:63, col:77> 1
|-FunctionDecl 0x55b039a00db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b039a00cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b039a00e58 <line:595:22>
| `-NonNullAttr 0x55b039a00eb0 <col:52, col:66> 1
|-FunctionDecl 0x55b039a00fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b039a00f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b039a01070 <line:597:22>
| `-NonNullAttr 0x55b039a010c8 <col:52, col:66> 1
|-FunctionDecl 0x55b039a012f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55b039a01118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b039a01190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55b039a013a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55b039a016d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b039a01428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b039a014a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b039a01530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55b039a01790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55b039a019a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55b039a01870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55b039a01a50 <line:606:22>
| `-NonNullAttr 0x55b039a01aa8 <col:63, col:77> 1
|-FunctionDecl 0x55b039a01bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55b039a01af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55b039a01c58 <line:608:22>
| `-NonNullAttr 0x55b039a01cb0 <col:63, col:77> 1
|-FunctionDecl 0x55b039a01f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b039a01cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55b039a01d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b039a01fc0 <line:612:22>
| `-NonNullAttr 0x55b039a02018 <col:63, col:80> 1 2
|-FunctionDecl 0x55b039a02228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55b039a02068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55b039a020e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55b039a022d8 <col:37>
| `-NonNullAttr 0x55b039a02330 <col:78, col:92> 1
|-FunctionDecl 0x55b039a02548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55b039a02378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55b039a02420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55b039a025f8 <line:618:22>
| `-NonNullAttr 0x55b039a02650 <col:63, col:80> 1 2
|-FunctionDecl 0x55b039a02818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55b039a02698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55b039a02710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55b039a028c8 <line:621:22>
| `-NonNullAttr 0x55b039a02920 <col:63, col:77> 1
|-FunctionDecl 0x55b039a02bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55b039a02a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55b039a02a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55b039a02c78 <line:623:22>
| `-NonNullAttr 0x55b039a02cd0 <col:63, col:77> 1
|-FunctionDecl 0x55b039a02e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b039a02d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b039a02f20 <line:625:22>
| `-NonNullAttr 0x55b039a02f78 <col:63, col:77> 1
|-FunctionDecl 0x55b039a03080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b039a02fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b039a03128 <line:627:22>
| `-NonNullAttr 0x55b039a03180 <col:52, col:66> 1
|-FunctionDecl 0x55b039a03280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b039a031c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b039a03328 <line:629:22>
| `-NonNullAttr 0x55b039a03380 <col:52, col:66> 1
|-FunctionDecl 0x55b039a03480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b039a033c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b039a03528 <line:631:22>
| `-NonNullAttr 0x55b039a03580 <col:52, col:66> 1
|-FunctionDecl 0x55b039a03958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55b039a03660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55b039a03770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55b039a037f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55b039a03a10 <line:635:22>
| `-NonNullAttr 0x55b039a03a68 <col:63, col:77> 1
|-FunctionDecl 0x55b039a03be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55b039a03ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55b039a03c90 <line:637:22>
| `-NonNullAttr 0x55b039a03ce8 <col:63, col:77> 1
|-FunctionDecl 0x55b039a03df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55b039a03d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55b039a03e98 <line:639:22>
| `-NonNullAttr 0x55b039a03ef0 <col:52, col:66> 1
|-FunctionDecl 0x55b039a040e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55b039a03fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55b039a04190 <line:641:22>
| `-NonNullAttr 0x55b039a041e8 <col:63, col:77> 1
|-FunctionDecl 0x55b039a042f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55b039a04238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55b039a04398 <line:643:22>
| `-NonNullAttr 0x55b039a043f0 <col:63, col:77> 1
|-FunctionDecl 0x55b039a04618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b039a04438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55b039a044b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b039a046c8 <line:647:22>
| `-NonNullAttr 0x55b039a04720 <col:63, col:80> 1 2
|-FunctionDecl 0x55b039a04928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55b039a04768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55b039a047e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55b039a049d8 <line:650:22>
| `-NonNullAttr 0x55b039a04a30 <col:63, col:77> 1
|-FunctionDecl 0x55b039a04d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55b039a04b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55b039a04c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55b039a04e28 <line:653:22>
| `-NonNullAttr 0x55b039a04e80 <col:63, col:77> 1
|-FunctionDecl 0x55b039a04fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55b039a04ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55b039a05090 <col:69>
|-FunctionDecl 0x55b039a05208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55b039a050f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55b039a052b0 <col:72>
|-FunctionDecl 0x55b039a054e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55b039a05318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55b039a053c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55b039a05598 <col:44>
|-FunctionDecl 0x55b039a057b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55b039a05600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b039a05678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55b039a05868 <line:660:22>
| `-NonNullAttr 0x55b039a058c0 <col:63, col:77> 2
|-FunctionDecl 0x55b039a05d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55b039a059a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55b039a05ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55b039a05bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55b039a05dc0 <col:47>
|-FunctionDecl 0x55b039a06f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55b039a05e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b039a070b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55b039a07020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b039a07210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55b039a07178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b039a07368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55b039a072d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b039a07430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55b039a074f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55b039a075b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55b039a07668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55b039a076e8 prev 0x55b039a07668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55b039a07750 <col:24> 'int' 0
|-VarDecl 0x55b039a07788 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55b039a07808 prev 0x55b039a07788 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55b039a07870 <col:27> 'int' 0
|-VarDecl 0x55b039a078a8 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55b039a07928 prev 0x55b039a078a8 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55b039a07990 <col:27> 'int' 0
|-VarDecl 0x55b039a079c0 <line:678:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x55b039a07a40 <line:679:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x55b039a07ab8 <line:680:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55b039a07b30 <line:681:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55b039a07ba8 <line:682:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55b039a07c20 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55b039a07c98 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd4 '_Bool'
|-VarDecl 0x55b039a07d10 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55b039a07d88 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55b039a07e00 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55b039a07e78 <line:688:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55b039a07ef0 <line:689:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd4 '_Bool'
|-VarDecl 0x55b039a07f80 <line:690:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x55b039a08000 <line:691:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x55b039a08080 <line:692:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x55b039a080f8 <line:693:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55b039a08178 <line:694:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x55b039a081f0 <line:695:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55b039a08268 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55b039a082e0 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55b039a08360 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x55b039a083e0 prev 0x55b039a08360 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55b039a08448 <col:9> 'int' 0
|-VarDecl 0x55b039a08478 <line:700:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55b039a084f8 <line:701:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55b039a08570 <line:702:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55b039a085e8 <line:703:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55b039a08660 <line:704:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55b039a086d8 <line:705:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55b039a08750 <line:706:1, col:7> col:7 used x$r_buff0_thd4 '_Bool'
|-VarDecl 0x55b039a087c8 <line:707:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55b039a08840 <line:708:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55b039a088b8 <line:709:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55b039a08930 <line:710:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55b039a089a8 <line:711:1, col:7> col:7 used x$r_buff1_thd4 '_Bool'
|-VarDecl 0x55b039a08a20 <line:712:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55b039a08aa0 <line:713:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55b039a08b20 <line:714:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55b039a08b98 <line:715:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55b039a08c18 <line:716:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55b039a08c90 <line:717:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55b039a08d10 <line:718:1, col:5> col:5 used y 'int'
|-VarDecl 0x55b039a08d90 prev 0x55b039a08d10 <line:719:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55b039a08df8 <col:9> 'int' 0
|-VarDecl 0x55b039a08e28 <line:720:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55b039a08ea0 <line:721:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55b039a08f80 <line:722:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55b039a09098 prev 0x55b039a06f60 <line:723:1, line:742:1> line:723:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55b039a09000 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b039a0a338 <line:724:1, line:742:1>
|   |-CallExpr 0x55b039a091a8 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b039a09190 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a09140 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b039a09220 <line:726:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b039a091c8 <col:3> 'int' lvalue Var 0x55b039a07808 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55b039a09208 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b039a091e8 <col:25> 'int' lvalue Var 0x55b039a08d90 'y' 'int'
|   |-CallExpr 0x55b039a09278 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b039a09260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a09240 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b039a092d0 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b039a092b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a09298 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b039a09330 <line:729:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55b039a092f0 <col:3> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   | `-IntegerLiteral 0x55b039a09310 <col:7> 'int' 1
|   |-CallExpr 0x55b039a09388 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b039a09370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a09350 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b039a093e0 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b039a093c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a093a8 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b039a096c8 <line:732:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55b039a09400 <col:3> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   | `-ConditionalOperator 0x55b039a09698 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55b039a094c0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55b039a09478 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55b039a09460 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55b039a09420 <col:7> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55b039a094a8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55b039a09490 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55b039a09440 <col:25> '_Bool' lvalue Var 0x55b039a085e8 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55b039a09680 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b039a094e0 <col:42> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55b039a09660 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55b039a09630 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55b039a095a0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b039a09558 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b039a09540 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b039a09500 <col:55> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b039a09588 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b039a09570 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b039a09520 <col:73> '_Bool' lvalue Var 0x55b039a08840 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55b039a09600 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b039a095c0 <col:90> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55b039a09618 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a095e0 <col:102> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   |-BinaryOperator 0x55b039a098d0 <line:733:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a096e8 <col:3> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a098b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a09888 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b039a097a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b039a09760 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b039a09748 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b039a09708 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b039a09790 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b039a09778 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b039a09728 <col:38> '_Bool' lvalue Var 0x55b039a085e8 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a09840 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b039a097f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b039a097c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b039a09870 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b039a09858 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a09820 <col:66> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b039a09bb8 <line:734:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a098f0 <col:3> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a09ba0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a09b70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b039a09a90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b039a099b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b039a09968 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b039a09950 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b039a09910 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b039a09998 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b039a09980 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b039a09930 <col:38> '_Bool' lvalue Var 0x55b039a085e8 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55b039a09a70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b039a09a28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b039a09a10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b039a099d0 <col:56> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b039a09a58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b039a09a40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b039a099f0 <col:74> '_Bool' lvalue Var 0x55b039a08840 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a09b28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b039a09ae0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b039a09ab0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b039a09b58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b039a09b40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a09b08 <col:102> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55b039a09dc0 <line:735:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a09bd8 <col:3> '_Bool' lvalue Var 0x55b039a085e8 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a09da8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a09d78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b039a09c98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b039a09c50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b039a09c38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b039a09bf8 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b039a09c80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b039a09c68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b039a09c18 <col:38> '_Bool' lvalue Var 0x55b039a085e8 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a09d30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b039a09ce8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b039a09cb8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b039a09d60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b039a09d48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a09d10 <col:66> '_Bool' lvalue Var 0x55b039a085e8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55b039a0a0b8 <line:736:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a09de0 <col:3> '_Bool' lvalue Var 0x55b039a08840 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a0a0a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a0a070 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b039a09f90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b039a09ea0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b039a09e58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b039a09e40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b039a09e00 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b039a09e88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b039a09e70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b039a09e20 <col:38> '_Bool' lvalue Var 0x55b039a085e8 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55b039a09f60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b039a09f18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b039a09f00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b039a09ec0 <col:56> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b039a09f48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b039a09f30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b039a09ee0 <col:74> '_Bool' lvalue Var 0x55b039a08840 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a0a028 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b039a09fe0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b039a09fb0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b039a0a058 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b039a0a040 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a0a008 <col:102> '_Bool' lvalue Var 0x55b039a08840 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55b039a0a110 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b039a0a0f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a0a0d8 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b039a0a168 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b039a0a150 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a0a130 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b039a0a220 <line:739:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b039a0a188 <col:3> 'int' lvalue Var 0x55b039a076e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b039a0a200 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b039a0a1e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b039a0a1a8 <col:22> 'int' lvalue Var 0x55b039a076e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b039a0a1c8 <col:41> 'int' 1
|   |-CallExpr 0x55b039a0a278 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b039a0a260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a0a240 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b039a0a328 <line:741:3, col:36>
|     `-CallExpr 0x55b039a0a308 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b039a0a2f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b039a0a298 <col:10> 'void *(void)' Function 0x55b0399ade68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b039a0a480 prev 0x55b039a070b8 <line:743:1, line:759:1> line:743:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55b039a0a3e8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b039a0b5a8 <line:744:1, line:759:1>
|   |-CallExpr 0x55b039a0a560 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b039a0a548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a0a528 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b039a0a5c0 <line:746:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55b039a0a580 <col:3> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   | `-IntegerLiteral 0x55b039a0a5a0 <col:7> 'int' 2
|   |-CallExpr 0x55b039a0a618 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b039a0a600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a0a5e0 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b039a0a670 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b039a0a658 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a0a638 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b039a0a958 <line:749:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55b039a0a690 <col:3> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   | `-ConditionalOperator 0x55b039a0a928 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55b039a0a750 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55b039a0a708 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55b039a0a6f0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55b039a0a6b0 <col:7> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55b039a0a738 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55b039a0a720 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55b039a0a6d0 <col:25> '_Bool' lvalue Var 0x55b039a08660 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b039a0a910 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b039a0a770 <col:42> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55b039a0a8f0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55b039a0a8c0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55b039a0a830 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b039a0a7e8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b039a0a7d0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b039a0a790 <col:55> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b039a0a818 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b039a0a800 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b039a0a7b0 <col:73> '_Bool' lvalue Var 0x55b039a088b8 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b039a0a890 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b039a0a850 <col:90> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55b039a0a8a8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a0a870 <col:102> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   |-BinaryOperator 0x55b039a0ab60 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a0a978 <col:3> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a0ab48 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a0ab18 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b039a0aa38 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b039a0a9f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b039a0a9d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b039a0a998 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b039a0aa20 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b039a0aa08 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b039a0a9b8 <col:38> '_Bool' lvalue Var 0x55b039a08660 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a0aad0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b039a0aa88 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b039a0aa58 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b039a0ab00 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b039a0aae8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a0aab0 <col:66> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b039a0ae48 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a0ab80 <col:3> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a0ae30 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a0ae00 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b039a0ad20 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b039a0ac40 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b039a0abf8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b039a0abe0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b039a0aba0 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b039a0ac28 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b039a0ac10 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b039a0abc0 <col:38> '_Bool' lvalue Var 0x55b039a08660 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55b039a0ad00 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b039a0acb8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b039a0aca0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b039a0ac60 <col:56> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b039a0ace8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b039a0acd0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b039a0ac80 <col:74> '_Bool' lvalue Var 0x55b039a088b8 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a0adb8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b039a0ad70 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b039a0ad40 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b039a0ade8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b039a0add0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a0ad98 <col:102> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55b039a0b078 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a0ae68 <col:3> '_Bool' lvalue Var 0x55b039a08660 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a0b060 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a0b030 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b039a0af28 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b039a0aee0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b039a0aec8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b039a0ae88 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b039a0af10 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b039a0aef8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b039a0aea8 <col:38> '_Bool' lvalue Var 0x55b039a08660 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a0afe8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b039a0afa0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b039a0af48 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b039a0b018 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b039a0b000 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a0afc8 <col:66> '_Bool' lvalue Var 0x55b039a08660 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55b039a0b360 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a0b098 <col:3> '_Bool' lvalue Var 0x55b039a088b8 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a0b348 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a0b318 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b039a0b238 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b039a0b158 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b039a0b110 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b039a0b0f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b039a0b0b8 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b039a0b140 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b039a0b128 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b039a0b0d8 <col:38> '_Bool' lvalue Var 0x55b039a08660 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55b039a0b218 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b039a0b1d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b039a0b1b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b039a0b178 <col:56> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b039a0b200 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b039a0b1e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b039a0b198 <col:74> '_Bool' lvalue Var 0x55b039a088b8 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a0b2d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b039a0b288 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b039a0b258 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b039a0b300 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b039a0b2e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a0b2b0 <col:102> '_Bool' lvalue Var 0x55b039a088b8 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55b039a0b3b8 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b039a0b3a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a0b380 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b039a0b410 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b039a0b3f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a0b3d8 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b039a0b4c8 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b039a0b430 <col:3> 'int' lvalue Var 0x55b039a076e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b039a0b4a8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b039a0b490 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b039a0b450 <col:22> 'int' lvalue Var 0x55b039a076e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b039a0b470 <col:41> 'int' 1
|   |-CallExpr 0x55b039a0b520 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b039a0b508 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a0b4e8 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b039a0b598 <line:758:3, col:36>
|     `-CallExpr 0x55b039a0b578 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b039a0b560 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b039a0b540 <col:10> 'void *(void)' Function 0x55b0399ade68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b039a0b6d8 prev 0x55b039a07210 <line:760:1, line:795:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55b039a0b640 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b039a10cc8 <line:761:1, line:795:1>
|   |-CallExpr 0x55b039a0b7b8 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b039a0b7a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a0b780 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b039a0b868 <line:763:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a0b7d8 <col:3> '_Bool' lvalue Var 0x55b039a08e28 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a0b850 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55b039a0b830 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55b039a0b818 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55b039a0b7f8 <col:19> 'void *(void)' Function 0x55b0399ade68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55b039a0b918 <line:764:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a0b888 <col:3> '_Bool' lvalue Var 0x55b039a08f80 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a0b900 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55b039a0b8e0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55b039a0b8c8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55b039a0b8a8 <col:19> 'void *(void)' Function 0x55b0399ade68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55b039a0b990 <line:765:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a0b938 <col:3> '_Bool' lvalue Var 0x55b039a08478 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a0b978 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b039a0b958 <col:21> '_Bool' lvalue Var 0x55b039a08f80 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55b039a0ba08 <line:766:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b039a0b9b0 <col:3> 'int' lvalue Var 0x55b039a084f8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55b039a0b9f0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b039a0b9d0 <col:15> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   |-BinaryOperator 0x55b039a0bab8 <line:767:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a0ba28 <col:3> '_Bool' lvalue Var 0x55b039a08ea0 'weak$$choice1' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a0baa0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55b039a0ba80 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55b039a0ba68 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55b039a0ba48 <col:19> 'void *(void)' Function 0x55b0399ade68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55b039a0c510 <line:768:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x55b039a0bad8 <col:3> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   | `-ConditionalOperator 0x55b039a0c4e0 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x55b039a0bb30 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x55b039a0bb18 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b039a0baf8 <col:8> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x55b039a0c4c8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b039a0bb48 <col:25> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   |   `-ParenExpr 0x55b039a0c4a8 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x55b039a0c478 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x55b039a0bc08 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b039a0bbc0 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b039a0bba8 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b039a0bb68 <col:30> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b039a0bbf0 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b039a0bbd8 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b039a0bb88 <col:48> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55b039a0c460 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b039a0bc28 <col:65> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55b039a0c440 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x55b039a0c410 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x55b039a0bdc8 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x55b039a0bd58 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x55b039a0bce8 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x55b039a0bcd0 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x55b039a0bcb8 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x55b039a0bc48 <col:78> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x55b039a0bca0 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x55b039a0bc88 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x55b039a0bc68 <col:97> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |           | | `-ImplicitCastExpr 0x55b039a0bd40 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x55b039a0bd28 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x55b039a0bd08 <col:115> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x55b039a0bdb0 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x55b039a0bd98 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b039a0bd78 <col:134> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |           |-ParenExpr 0x55b039a0bfe0 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x55b039a0bfb0 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x55b039a0bf50 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x55b039a0bf38 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x55b039a0bde8 <col:152> '_Bool' lvalue Var 0x55b039a08e28 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x55b039a0bf68 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x55b039a0be08 <col:168> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   |           |   `-ParenExpr 0x55b039a0bf18 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x55b039a0bee8 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x55b039a0bea0 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x55b039a0be88 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x55b039a0be28 <col:173> '_Bool' lvalue Var 0x55b039a08ea0 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x55b039a0beb8 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x55b039a0be48 <col:189> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x55b039a0bed0 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x55b039a0be68 <col:201> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x55b039a0c3f0 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x55b039a0c3c0 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x55b039a0c180 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x55b039a0c110 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x55b039a0c0a0 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55b039a0c058 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55b039a0c040 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55b039a0c000 <col:216> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x55b039a0c088 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x55b039a0c070 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55b039a0c020 <col:234> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55b039a0c0f8 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55b039a0c0e0 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55b039a0c0c0 <col:252> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55b039a0c168 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55b039a0c150 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55b039a0c130 <col:271> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |               |-ParenExpr 0x55b039a0c290 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x55b039a0c260 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x55b039a0c218 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x55b039a0c200 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x55b039a0c1a0 <col:289> '_Bool' lvalue Var 0x55b039a08e28 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x55b039a0c230 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x55b039a0c1c0 <col:305> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x55b039a0c248 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55b039a0c1e0 <col:317> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x55b039a0c3a0 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x55b039a0c370 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x55b039a0c328 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x55b039a0c310 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x55b039a0c2b0 <col:331> '_Bool' lvalue Var 0x55b039a08e28 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x55b039a0c340 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55b039a0c2d0 <col:347> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55b039a0c358 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55b039a0c2f0 <col:359> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   |-BinaryOperator 0x55b039a0ccb0 <line:769:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55b039a0c530 <col:3> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55b039a0cc80 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55b039a0cc50 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b039a0cc38 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b039a0c550 <col:15> '_Bool' lvalue Var 0x55b039a08f80 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b039a0cc68 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b039a0c570 <col:31> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55b039a0cc18 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55b039a0cbe8 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55b039a0c5c8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55b039a0c5b0 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55b039a0c590 <col:45> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55b039a0cbd0 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b039a0c5e0 <col:62> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55b039a0cbb0 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55b039a0cb80 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55b039a0c6a0 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b039a0c658 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b039a0c640 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b039a0c600 <col:75> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b039a0c688 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b039a0c670 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b039a0c620 <col:93> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55b039a0cb68 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b039a0c6c0 <col:110> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
|   |           `-ParenExpr 0x55b039a0cb48 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55b039a0cb18 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55b039a0c860 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55b039a0c7f0 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55b039a0c780 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55b039a0c768 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55b039a0c750 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55b039a0c6e0 <col:123> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55b039a0c738 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55b039a0c720 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55b039a0c700 <col:142> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55b039a0c7d8 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55b039a0c7c0 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55b039a0c7a0 <col:160> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55b039a0c848 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55b039a0c830 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55b039a0c810 <col:179> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |               |-ImplicitCastExpr 0x55b039a0cb00 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55b039a0c880 <col:196> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x55b039a0cae0 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55b039a0cab0 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55b039a0ca20 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55b039a0c9b0 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55b039a0c940 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55b039a0c8f8 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55b039a0c8e0 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55b039a0c8a0 <col:209> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55b039a0c928 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55b039a0c910 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55b039a0c8c0 <col:227> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55b039a0c998 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55b039a0c980 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55b039a0c960 <col:245> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55b039a0ca08 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55b039a0c9f0 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55b039a0c9d0 <col:264> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |                   |-ImplicitCastExpr 0x55b039a0ca80 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55b039a0ca40 <col:281> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55b039a0ca98 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55b039a0ca60 <col:293> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55b039a0d460 <line:770:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55b039a0ccd0 <col:3> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55b039a0d430 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55b039a0d400 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b039a0d3e8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b039a0ccf0 <col:15> '_Bool' lvalue Var 0x55b039a08f80 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b039a0d418 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b039a0cd10 <col:31> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55b039a0d3c8 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55b039a0d398 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55b039a0cd68 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55b039a0cd50 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55b039a0cd30 <col:45> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55b039a0d380 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b039a0cd80 <col:62> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55b039a0d360 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55b039a0d330 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55b039a0ce40 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b039a0cdf8 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b039a0cde0 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b039a0cda0 <col:75> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b039a0ce28 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b039a0ce10 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b039a0cdc0 <col:93> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55b039a0d318 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b039a0ce60 <col:110> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x55b039a0d2f8 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55b039a0d2c8 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55b039a0d010 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55b039a0cf90 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55b039a0cf20 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55b039a0cf08 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55b039a0cef0 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55b039a0ce80 <col:123> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55b039a0ced8 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55b039a0cec0 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55b039a0cea0 <col:142> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55b039a0cf78 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55b039a0cf60 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55b039a0cf40 <col:160> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55b039a0cff8 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55b039a0cfe0 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55b039a0cfc0 <col:179> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |               |-ImplicitCastExpr 0x55b039a0d2b0 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55b039a0d030 <col:196> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
|   |               `-ParenExpr 0x55b039a0d290 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55b039a0d260 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55b039a0d1d0 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55b039a0d160 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55b039a0d0f0 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55b039a0d0a8 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55b039a0d090 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55b039a0d050 <col:209> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55b039a0d0d8 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55b039a0d0c0 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55b039a0d070 <col:227> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55b039a0d148 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55b039a0d130 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55b039a0d110 <col:245> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55b039a0d1b8 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55b039a0d1a0 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55b039a0d180 <col:264> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |                   |-ImplicitCastExpr 0x55b039a0d230 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55b039a0d1f0 <col:281> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x55b039a0d248 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55b039a0d210 <col:293> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55b039a0dd38 <line:771:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a0d480 <col:3> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a0dd20 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a0dcf0 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x55b039a0dca8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b039a0dc90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b039a0d4a0 <col:20> '_Bool' lvalue Var 0x55b039a08f80 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a0dcd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b039a0dcc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b039a0d4c0 <col:36> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55b039a0dc70 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x55b039a0dc40 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x55b039a0d518 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55b039a0d500 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b039a0d4e0 <col:55> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55b039a0dc28 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b039a0dc10 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b039a0d530 <col:72> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55b039a0dbf0 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x55b039a0dbc0 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x55b039a0d5f0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b039a0d5a8 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b039a0d590 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b039a0d550 <col:90> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b039a0d5d8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b039a0d5c0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b039a0d570 <col:108> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55b039a0dba8 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b039a0d640 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b039a0d610 <col:132> 'int' 0
|   |             `-ParenExpr 0x55b039a0db88 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x55b039a0db58 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x55b039a0d7e8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55b039a0d778 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55b039a0d708 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55b039a0d6f0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55b039a0d6d8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55b039a0d668 <col:137> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55b039a0d6c0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55b039a0d6a8 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55b039a0d688 <col:156> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55b039a0d760 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55b039a0d748 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55b039a0d728 <col:174> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55b039a0d7d0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55b039a0d7b8 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55b039a0d798 <col:193> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |                 |-BinaryOperator 0x55b039a0d8a8 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x55b039a0d890 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x55b039a0d878 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x55b039a0d808 <col:210> '_Bool' lvalue Var 0x55b039a08e28 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x55b039a0d860 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55b039a0d848 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55b039a0d828 <col:228> '_Bool' lvalue Var 0x55b039a08ea0 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x55b039a0db38 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x55b039a0db08 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x55b039a0da48 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x55b039a0d9d8 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55b039a0d968 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55b039a0d920 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55b039a0d908 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55b039a0d8c8 <col:245> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55b039a0d950 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55b039a0d938 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55b039a0d8e8 <col:263> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55b039a0d9c0 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55b039a0d9a8 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55b039a0d988 <col:281> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55b039a0da30 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55b039a0da18 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55b039a0d9f8 <col:300> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x55b039a0dac0 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x55b039a0daa8 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x55b039a0da68 <col:317> '_Bool' lvalue Var 0x55b039a08e28 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x55b039a0daf0 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x55b039a0dad8 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x55b039a0da88 <col:333> '_Bool' lvalue Var 0x55b039a08e28 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x55b039a0e600 <line:772:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a0dd58 <col:3> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a0e5e8 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a0e5b8 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x55b039a0e570 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b039a0e558 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b039a0dd78 <col:20> '_Bool' lvalue Var 0x55b039a08f80 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a0e5a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b039a0e588 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b039a0dd98 <col:36> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55b039a0e538 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x55b039a0e508 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x55b039a0ddf0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55b039a0ddd8 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b039a0ddb8 <col:55> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55b039a0e4f0 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b039a0e4d8 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b039a0de08 <col:72> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55b039a0e4b8 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x55b039a0e488 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x55b039a0dec8 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b039a0de80 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b039a0de68 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b039a0de28 <col:90> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b039a0deb0 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b039a0de98 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b039a0de48 <col:108> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55b039a0e470 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b039a0df18 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b039a0dee8 <col:132> 'int' 0
|   |             `-ParenExpr 0x55b039a0e450 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x55b039a0e420 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x55b039a0e0e0 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55b039a0e070 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55b039a0e000 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55b039a0dfe8 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55b039a0dfd0 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55b039a0df40 <col:137> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55b039a0df98 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55b039a0df80 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55b039a0df60 <col:156> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55b039a0e058 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55b039a0e040 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55b039a0e020 <col:174> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55b039a0e0c8 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55b039a0e0b0 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55b039a0e090 <col:193> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |                 |-ImplicitCastExpr 0x55b039a0e408 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55b039a0e3f0 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55b039a0e100 <col:210> '_Bool' lvalue Var 0x55b039a08e28 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x55b039a0e3d0 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x55b039a0e3a0 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x55b039a0e2a0 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x55b039a0e230 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55b039a0e1c0 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55b039a0e178 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55b039a0e160 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55b039a0e120 <col:227> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55b039a0e1a8 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55b039a0e190 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55b039a0e140 <col:245> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55b039a0e218 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55b039a0e200 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55b039a0e1e0 <col:263> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55b039a0e288 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55b039a0e270 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55b039a0e250 <col:282> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x55b039a0e370 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55b039a0e2f0 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55b039a0e2c0 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x55b039a0e388 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55b039a0e348 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55b039a0e318 <col:317> 'int' 0
|   |-BinaryOperator 0x55b039a0eea8 <line:773:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a0e620 <col:3> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a0ee90 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a0ee60 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x55b039a0ee18 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b039a0ee00 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b039a0e640 <col:20> '_Bool' lvalue Var 0x55b039a08f80 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a0ee48 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b039a0ee30 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b039a0e660 <col:36> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55b039a0ede0 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x55b039a0edb0 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x55b039a0e6b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55b039a0e6a0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b039a0e680 <col:55> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55b039a0ed98 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b039a0ed80 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b039a0e6d0 <col:72> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55b039a0ed60 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x55b039a0ed30 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x55b039a0e790 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b039a0e748 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b039a0e730 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b039a0e6f0 <col:90> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b039a0e778 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b039a0e760 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b039a0e710 <col:108> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55b039a0ed18 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b039a0e7e0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b039a0e7b0 <col:132> 'int' 0
|   |             `-ParenExpr 0x55b039a0ecf8 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x55b039a0ecc8 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x55b039a0e988 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55b039a0e918 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55b039a0e8a8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55b039a0e890 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55b039a0e878 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55b039a0e808 <col:137> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55b039a0e860 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55b039a0e848 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55b039a0e828 <col:156> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55b039a0e900 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55b039a0e8e8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55b039a0e8c8 <col:174> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55b039a0e970 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55b039a0e958 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55b039a0e938 <col:193> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |                 |-ImplicitCastExpr 0x55b039a0ecb0 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55b039a0ec98 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55b039a0e9a8 <col:210> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |                 `-ParenExpr 0x55b039a0ec78 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x55b039a0ec48 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x55b039a0eb48 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x55b039a0ead8 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55b039a0ea68 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55b039a0ea20 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55b039a0ea08 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55b039a0e9c8 <col:228> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55b039a0ea50 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55b039a0ea38 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55b039a0e9e8 <col:246> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55b039a0eac0 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55b039a0eaa8 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55b039a0ea88 <col:264> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55b039a0eb30 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55b039a0eb18 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55b039a0eaf8 <col:283> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x55b039a0ec18 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55b039a0eb98 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55b039a0eb68 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x55b039a0ec30 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55b039a0ebf0 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55b039a0ebc0 <col:318> 'int' 0
|   |-BinaryOperator 0x55b039a0f888 <line:774:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a0eec8 <col:3> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a0f870 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a0f840 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x55b039a0f7f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b039a0f7e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b039a0eee8 <col:20> '_Bool' lvalue Var 0x55b039a08f80 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a0f828 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b039a0f810 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b039a0ef08 <col:36> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55b039a0f7c0 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x55b039a0f790 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x55b039a0ef60 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55b039a0ef48 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b039a0ef28 <col:55> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55b039a0f778 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b039a0f760 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b039a0ef78 <col:72> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55b039a0f740 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x55b039a0f710 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x55b039a0f060 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b039a0f018 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b039a0f000 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b039a0ef98 <col:90> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b039a0f048 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b039a0f030 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b039a0efe0 <col:108> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55b039a0f6f8 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b039a0f0b0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b039a0f080 <col:132> 'int' 0
|   |             `-ParenExpr 0x55b039a0f6d8 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x55b039a0f6a8 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x55b039a0f258 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55b039a0f1e8 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55b039a0f178 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55b039a0f160 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55b039a0f148 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55b039a0f0d8 <col:137> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55b039a0f130 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55b039a0f118 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55b039a0f0f8 <col:156> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55b039a0f1d0 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55b039a0f1b8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55b039a0f198 <col:174> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55b039a0f240 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55b039a0f228 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55b039a0f208 <col:193> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |                 |-ParenExpr 0x55b039a0f3b8 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x55b039a0f388 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x55b039a0f328 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55b039a0f310 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55b039a0f278 <col:211> '_Bool' lvalue Var 0x55b039a08e28 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x55b039a0f358 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55b039a0f340 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55b039a0f298 <col:227> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x55b039a0f370 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x55b039a0f2e8 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x55b039a0f2b8 <col:251> 'int' 0
|   |                 `-ParenExpr 0x55b039a0f688 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x55b039a0f658 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x55b039a0f558 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x55b039a0f4e8 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55b039a0f478 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55b039a0f430 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55b039a0f418 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55b039a0f3d8 <col:257> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55b039a0f460 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55b039a0f448 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55b039a0f3f8 <col:275> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55b039a0f4d0 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55b039a0f4b8 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55b039a0f498 <col:293> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55b039a0f540 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55b039a0f528 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55b039a0f508 <col:312> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x55b039a0f628 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55b039a0f5a8 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55b039a0f578 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x55b039a0f640 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55b039a0f600 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55b039a0f5d0 <col:347> 'int' 0
|   |-BinaryOperator 0x55b039a0f920 <line:775:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a0f8a8 <col:3> '_Bool' lvalue Var 0x55b039a07f80 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55b039a0f8f8 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b039a0f8c8 <col:45> 'int' 1
|   |-BinaryOperator 0x55b039a0f998 <line:776:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55b039a0f940 <col:3> 'int *' lvalue Var 0x55b039a08000 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55b039a0f980 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55b039a0f960 <col:43> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   |-BinaryOperator 0x55b039a0fa10 <line:777:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b039a0f9b8 <col:3> 'int' lvalue Var 0x55b039a07928 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55b039a0f9f8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b039a0f9d8 <col:25> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   |-BinaryOperator 0x55b039a0fb40 <line:778:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55b039a0fa30 <col:3> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   | `-ConditionalOperator 0x55b039a0fb10 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55b039a0fac8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b039a0fab0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b039a0fa50 <col:7> '_Bool' lvalue Var 0x55b039a08478 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55b039a0fae0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b039a0fa70 <col:25> 'int' lvalue Var 0x55b039a084f8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55b039a0faf8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55b039a0fa90 <col:37> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   |-BinaryOperator 0x55b039a0fbd8 <line:779:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a0fb60 <col:3> '_Bool' lvalue Var 0x55b039a08478 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55b039a0fbb0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b039a0fb80 <col:28> 'int' 0
|   |-CallExpr 0x55b039a0fc30 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b039a0fc18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a0fbf8 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b039a0fc88 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b039a0fc70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a0fc50 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b039a0fce8 <line:782:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55b039a0fca8 <col:3> 'int' lvalue Var 0x55b039a08d90 'y' 'int'
|   | `-IntegerLiteral 0x55b039a0fcc8 <col:7> 'int' 1
|   |-CallExpr 0x55b039a0fd40 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b039a0fd28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a0fd08 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b039a0fd98 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b039a0fd80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a0fd60 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b039a100a0 <line:785:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55b039a0fdb8 <col:3> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   | `-ConditionalOperator 0x55b039a10070 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55b039a0fe78 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55b039a0fe30 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55b039a0fe18 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55b039a0fdd8 <col:7> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55b039a0fe60 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55b039a0fe48 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55b039a0fdf8 <col:25> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55b039a10058 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b039a0fe98 <col:42> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55b039a10038 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55b039a10008 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55b039a0ff58 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b039a0ff10 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b039a0fef8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b039a0feb8 <col:55> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b039a0ff40 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b039a0ff28 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b039a0fed8 <col:73> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55b039a0ffb8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b039a0ff78 <col:90> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55b039a0fff0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a0ff98 <col:102> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   |-BinaryOperator 0x55b039a102a8 <line:786:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a100c0 <col:3> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a10290 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a10260 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b039a10180 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b039a10138 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b039a10120 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b039a100e0 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b039a10168 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b039a10150 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b039a10100 <col:38> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a10218 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b039a101d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b039a101a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b039a10248 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b039a10230 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a101f8 <col:66> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b039a10590 <line:787:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a102c8 <col:3> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a10578 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a10548 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b039a10468 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b039a10388 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b039a10340 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b039a10328 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b039a102e8 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b039a10370 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b039a10358 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b039a10308 <col:38> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55b039a10448 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b039a10400 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b039a103e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b039a103a8 <col:56> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b039a10430 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b039a10418 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b039a103c8 <col:74> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a10500 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b039a104b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b039a10488 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b039a10530 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b039a10518 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a104e0 <col:102> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55b039a10798 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a105b0 <col:3> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a10780 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a10750 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b039a10670 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b039a10628 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b039a10610 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b039a105d0 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b039a10658 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b039a10640 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b039a105f0 <col:38> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a10708 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b039a106c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b039a10690 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b039a10738 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b039a10720 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a106e8 <col:66> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55b039a10a80 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a107b8 <col:3> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a10a68 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a10a38 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b039a10958 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b039a10878 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b039a10830 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b039a10818 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b039a107d8 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b039a10860 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b039a10848 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b039a107f8 <col:38> '_Bool' lvalue Var 0x55b039a086d8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55b039a10938 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b039a108f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b039a108d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b039a10898 <col:56> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b039a10920 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b039a10908 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b039a108b8 <col:74> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a109f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b039a109a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b039a10978 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b039a10a20 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b039a10a08 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a109d0 <col:102> '_Bool' lvalue Var 0x55b039a08930 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55b039a10ad8 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b039a10ac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a10aa0 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b039a10b30 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b039a10b18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a10af8 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b039a10be8 <line:792:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b039a10b50 <col:3> 'int' lvalue Var 0x55b039a076e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b039a10bc8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b039a10bb0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b039a10b70 <col:22> 'int' lvalue Var 0x55b039a076e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b039a10b90 <col:41> 'int' 1
|   |-CallExpr 0x55b039a10c40 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b039a10c28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a10c08 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b039a10cb8 <line:794:3, col:36>
|     `-CallExpr 0x55b039a10c98 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b039a10c80 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b039a10c60 <col:10> 'void *(void)' Function 0x55b0399ade68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b039a10e90 prev 0x55b039a07368 <line:796:1, line:812:1> line:796:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55b039a10df8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b039a12010 <line:797:1, line:812:1>
|   |-CallExpr 0x55b039a10f70 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b039a10f58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a10f38 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b039a10fd0 <line:799:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55b039a10f90 <col:3> 'int' lvalue Var 0x55b039a08d90 'y' 'int'
|   | `-IntegerLiteral 0x55b039a10fb0 <col:7> 'int' 2
|   |-CallExpr 0x55b039a11038 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b039a11020 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a11000 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b039a11090 <line:801:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b039a11078 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a11058 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b039a11378 <line:802:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55b039a110b0 <col:3> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   | `-ConditionalOperator 0x55b039a11348 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55b039a11170 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55b039a11128 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55b039a11110 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55b039a110d0 <col:7> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55b039a11158 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55b039a11140 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55b039a110f0 <col:25> '_Bool' lvalue Var 0x55b039a08750 'x$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55b039a11330 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b039a11190 <col:42> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55b039a11310 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55b039a112e0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55b039a11250 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b039a11208 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b039a111f0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b039a111b0 <col:55> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b039a11238 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b039a11220 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b039a111d0 <col:73> '_Bool' lvalue Var 0x55b039a089a8 'x$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55b039a112b0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b039a11270 <col:90> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55b039a112c8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a11290 <col:102> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
|   |-BinaryOperator 0x55b039a11580 <line:803:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a11398 <col:3> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a11568 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a11538 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b039a11458 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b039a11410 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b039a113f8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b039a113b8 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b039a11440 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b039a11428 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b039a113d8 <col:38> '_Bool' lvalue Var 0x55b039a08750 'x$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a114f0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b039a114a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b039a11478 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b039a11520 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b039a11508 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a114d0 <col:66> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b039a11868 <line:804:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a115a0 <col:3> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a11850 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a11820 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b039a11740 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b039a11660 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b039a11618 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b039a11600 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b039a115c0 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b039a11648 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b039a11630 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b039a115e0 <col:38> '_Bool' lvalue Var 0x55b039a08750 'x$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55b039a11720 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b039a116d8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b039a116c0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b039a11680 <col:56> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b039a11708 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b039a116f0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b039a116a0 <col:74> '_Bool' lvalue Var 0x55b039a089a8 'x$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a117d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b039a11790 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b039a11760 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b039a11808 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b039a117f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a117b8 <col:102> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55b039a11a70 <line:805:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a11888 <col:3> '_Bool' lvalue Var 0x55b039a08750 'x$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a11a58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a11a28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b039a11948 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b039a11900 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b039a118e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b039a118a8 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b039a11930 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b039a11918 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b039a118c8 <col:38> '_Bool' lvalue Var 0x55b039a08750 'x$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a119e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b039a11998 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b039a11968 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b039a11a10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b039a119f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a119c0 <col:66> '_Bool' lvalue Var 0x55b039a08750 'x$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55b039a11d58 <line:806:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b039a11a90 <col:3> '_Bool' lvalue Var 0x55b039a089a8 'x$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55b039a11d40 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b039a11d10 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b039a11c30 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b039a11b50 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b039a11b08 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b039a11af0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b039a11ab0 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b039a11b38 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b039a11b20 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b039a11ad0 <col:38> '_Bool' lvalue Var 0x55b039a08750 'x$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55b039a11c10 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b039a11bc8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b039a11bb0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b039a11b70 <col:56> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b039a11bf8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b039a11be0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b039a11b90 <col:74> '_Bool' lvalue Var 0x55b039a089a8 'x$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55b039a11cc8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b039a11c80 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b039a11c50 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b039a11cf8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b039a11ce0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b039a11ca8 <col:102> '_Bool' lvalue Var 0x55b039a089a8 'x$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55b039a11db0 <line:807:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b039a11d98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a11d78 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b039a11e08 <line:808:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b039a11df0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a11dd0 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b039a11ec0 <line:809:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b039a11e28 <col:3> 'int' lvalue Var 0x55b039a076e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b039a11ea0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b039a11e88 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b039a11e48 <col:22> 'int' lvalue Var 0x55b039a076e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b039a11e68 <col:41> 'int' 1
|   |-CallExpr 0x55b039a11f18 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b039a11f00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b039a11ee0 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b039a11f90 <line:811:3, col:36>
|     `-CallExpr 0x55b039a11f70 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b039a11f58 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b039a11f38 <col:10> 'void *(void)' Function 0x55b0399ade68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b039a120b0 prev 0x55b039a07430 <line:813:1, line:815:1> line:813:6 fence 'void ()'
| `-CompoundStmt 0x55b039a12150 <line:814:1, line:815:1>
|-FunctionDecl 0x55b039a12180 prev 0x55b039a074f0 <line:816:1, line:818:1> line:816:6 isync 'void ()'
| `-CompoundStmt 0x55b039a12220 <line:817:1, line:818:1>
|-FunctionDecl 0x55b039a12250 prev 0x55b039a075b0 <line:819:1, line:821:1> line:819:6 lwfence 'void ()'
| `-CompoundStmt 0x55b039a122f0 <line:820:1, line:821:1>
`-FunctionDecl 0x55b039a12358 <line:822:1, line:863:1> line:822:5 main 'int ()'
  `-CompoundStmt 0x55b039a17060 <line:823:1, line:863:1>
    |-DeclStmt 0x55b039a12470 <line:824:3, col:18>
    | `-VarDecl 0x55b039a12408 <col:3, col:13> col:13 used t2151 'pthread_t':'unsigned long'
    |-CallExpr 0x55b039a12678 <line:825:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55b039a12660 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b039a12488 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b0399ee8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b039a124c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b039a124a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b039a12408 't2151' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b039a126b8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b039a12540 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55b039a12518 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b039a124e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55b039a126d0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b039a12560 <col:39> 'void *(void *)' Function 0x55b039a09098 'P0' 'void *(void *)'
    | `-ParenExpr 0x55b039a125e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55b039a125b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b039a12580 <col:52> 'int' 0
    |-DeclStmt 0x55b039a12760 <line:826:3, col:18>
    | `-VarDecl 0x55b039a126f8 <col:3, col:13> col:13 used t2152 'pthread_t':'unsigned long'
    |-CallExpr 0x55b039a12908 <line:827:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55b039a128f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b039a12778 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b0399ee8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b039a127b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b039a12798 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b039a126f8 't2152' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b039a12948 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b039a12830 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55b039a12808 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b039a127d0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55b039a12960 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b039a12850 <col:39> 'void *(void *)' Function 0x55b039a0a480 'P1' 'void *(void *)'
    | `-ParenExpr 0x55b039a128d0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55b039a128a8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b039a12870 <col:52> 'int' 0
    |-DeclStmt 0x55b039a129f0 <line:828:3, col:18>
    | `-VarDecl 0x55b039a12988 <col:3, col:13> col:13 used t2153 'pthread_t':'unsigned long'
    |-CallExpr 0x55b039a12b98 <line:829:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55b039a12b80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b039a12a08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b0399ee8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b039a12a48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b039a12a28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b039a12988 't2153' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b039a12bd8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b039a12ac0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55b039a12a98 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b039a12a60 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55b039a12bf0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b039a12ae0 <col:39> 'void *(void *)' Function 0x55b039a0b6d8 'P2' 'void *(void *)'
    | `-ParenExpr 0x55b039a12b60 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55b039a12b38 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b039a12b00 <col:52> 'int' 0
    |-DeclStmt 0x55b039a12c80 <line:830:3, col:18>
    | `-VarDecl 0x55b039a12c18 <col:3, col:13> col:13 used t2154 'pthread_t':'unsigned long'
    |-CallExpr 0x55b039a12e28 <line:831:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55b039a12e10 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b039a12c98 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b0399ee8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b039a12cd8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b039a12cb8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b039a12c18 't2154' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b039a12e68 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b039a12d50 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55b039a12d28 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b039a12cf0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55b039a12e80 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b039a12d70 <col:39> 'void *(void *)' Function 0x55b039a10e90 'P3' 'void *(void *)'
    | `-ParenExpr 0x55b039a12df0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55b039a12dc8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b039a12d90 <col:52> 'int' 0
    |-CallExpr 0x55b039a12ed0 <line:832:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b039a12eb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b039a12e98 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b039a12fa0 <line:833:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55b039a12ef0 <col:3> '_Bool' lvalue Var 0x55b039a08268 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55b039a12f88 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55b039a12f68 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55b039a12f50 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55b039a12f10 <col:21> 'int' lvalue Var 0x55b039a076e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55b039a12f30 <col:41> 'int' 4
    |-CallExpr 0x55b039a13020 <line:834:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b039a12fe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b039a12fc0 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b039a130c8 <line:835:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55b039a130b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b039a13040 <col:3> 'void (int)' Function 0x55b0399adca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55b039a13108 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55b039a130f0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55b039a13060 <col:21> '_Bool' lvalue Var 0x55b039a08268 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55b039a13158 <line:836:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b039a13140 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b039a13120 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b039a13440 <line:837:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55b039a13178 <col:3> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
    | `-ConditionalOperator 0x55b039a13410 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55b039a13238 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55b039a131f0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55b039a131d8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55b039a13198 <col:7> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55b039a13220 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55b039a13208 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55b039a131b8 <col:25> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55b039a133f8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55b039a13258 <col:42> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55b039a133d8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55b039a133a8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55b039a13318 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55b039a132d0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55b039a132b8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55b039a13278 <col:55> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55b039a13300 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55b039a132e8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55b039a13298 <col:73> '_Bool' lvalue Var 0x55b039a087c8 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55b039a13378 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55b039a13338 <col:90> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55b039a13390 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55b039a13358 <col:102> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
    |-BinaryOperator 0x55b039a13648 <line:838:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55b039a13460 <col:3> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55b039a13630 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b039a13600 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55b039a13520 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55b039a134d8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55b039a134c0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55b039a13480 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55b039a13508 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55b039a134f0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55b039a134a0 <col:38> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b039a135b8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b039a13570 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b039a13540 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55b039a135e8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b039a135d0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b039a13598 <col:66> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55b039a13930 <line:839:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55b039a13668 <col:3> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55b039a13918 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b039a138e8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55b039a13808 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55b039a13728 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55b039a136e0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55b039a136c8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55b039a13688 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55b039a13710 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55b039a136f8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55b039a136a8 <col:38> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55b039a137e8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55b039a137a0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55b039a13788 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55b039a13748 <col:56> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55b039a137d0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55b039a137b8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55b039a13768 <col:74> '_Bool' lvalue Var 0x55b039a087c8 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b039a138a0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b039a13858 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b039a13828 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55b039a138d0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b039a138b8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b039a13880 <col:102> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55b039a13b38 <line:840:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55b039a13950 <col:3> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55b039a13b20 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b039a13af0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55b039a13a10 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55b039a139c8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55b039a139b0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55b039a13970 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55b039a139f8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55b039a139e0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55b039a13990 <col:38> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b039a13aa8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b039a13a60 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b039a13a30 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55b039a13ad8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b039a13ac0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b039a13a88 <col:66> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55b039a13e20 <line:841:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55b039a13b58 <col:3> '_Bool' lvalue Var 0x55b039a087c8 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55b039a13e08 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b039a13dd8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55b039a13cf8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55b039a13c18 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55b039a13bd0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55b039a13bb8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55b039a13b78 <col:20> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55b039a13c00 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55b039a13be8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55b039a13b98 <col:38> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55b039a13cd8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55b039a13c90 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55b039a13c78 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55b039a13c38 <col:56> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55b039a13cc0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55b039a13ca8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55b039a13c58 <col:74> '_Bool' lvalue Var 0x55b039a087c8 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b039a13d90 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b039a13d48 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b039a13d18 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55b039a13dc0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b039a13da8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b039a13d70 <col:102> '_Bool' lvalue Var 0x55b039a087c8 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55b039a13e78 <line:842:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b039a13e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b039a13e40 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b039a13ed0 <line:843:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b039a13eb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b039a13e98 <col:3> 'void ()' Function 0x55b0399ae350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b039a13f80 <line:844:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55b039a13ef0 <col:3> '_Bool' lvalue Var 0x55b039a08e28 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x55b039a13f68 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55b039a13f48 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55b039a13f30 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55b039a13f10 <col:19> 'void *(void)' Function 0x55b0399ade68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55b039a14048 <line:845:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55b039a13fa0 <col:3> '_Bool' lvalue Var 0x55b039a08f80 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x55b039a14030 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55b039a13ff8 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55b039a13fe0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55b039a13fc0 <col:19> 'void *(void)' Function 0x55b0399ade68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55b039a140c0 <line:846:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55b039a14068 <col:3> '_Bool' lvalue Var 0x55b039a08478 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55b039a140a8 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55b039a14088 <col:21> '_Bool' lvalue Var 0x55b039a08f80 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55b039a14138 <line:847:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55b039a140e0 <col:3> 'int' lvalue Var 0x55b039a084f8 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55b039a14120 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55b039a14100 <col:15> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
    |-BinaryOperator 0x55b039a14570 <line:848:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55b039a14158 <col:3> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
    | `-ConditionalOperator 0x55b039a14540 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55b039a14368 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55b039a14288 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55b039a141b0 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55b039a14198 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55b039a14178 <col:8> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55b039a14268 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55b039a14200 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55b039a141e8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55b039a141c8 <col:27> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55b039a14250 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55b039a14238 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55b039a14218 <col:46> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55b039a14348 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55b039a142e0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55b039a142c8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55b039a142a8 <col:65> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55b039a14330 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55b039a14318 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55b039a142f8 <col:84> '_Bool' lvalue Var 0x55b039a087c8 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55b039a14528 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55b039a14388 <col:101> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
    |   `-ParenExpr 0x55b039a14508 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55b039a144d8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55b039a14448 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55b039a14400 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55b039a143e8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55b039a143a8 <col:106> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55b039a14430 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55b039a14418 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55b039a143c8 <col:124> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55b039a144a8 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55b039a14468 <col:141> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55b039a144c0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55b039a14488 <col:153> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
    |-BinaryOperator 0x55b039a14a80 <line:849:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55b039a14590 <col:3> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x55b039a14a50 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55b039a14a20 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55b039a14a08 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55b039a145b0 <col:15> '_Bool' lvalue Var 0x55b039a08f80 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55b039a14a38 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55b039a145d0 <col:31> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55b039a149e8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55b039a149b8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55b039a147e0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55b039a14700 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55b039a14628 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55b039a14610 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55b039a145f0 <col:45> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55b039a146e0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55b039a14678 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55b039a14660 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55b039a14640 <col:64> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55b039a146c8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55b039a146b0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55b039a14690 <col:83> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55b039a147c0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55b039a14758 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55b039a14740 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55b039a14720 <col:102> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55b039a147a8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55b039a14790 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55b039a14770 <col:121> '_Bool' lvalue Var 0x55b039a087c8 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55b039a149a0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55b039a14800 <col:138> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
    |       `-ParenExpr 0x55b039a14980 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55b039a14950 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55b039a148c0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55b039a14878 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55b039a14860 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55b039a14820 <col:151> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55b039a148a8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55b039a14890 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55b039a14840 <col:169> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55b039a14920 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55b039a148e0 <col:186> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55b039a14938 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55b039a14900 <col:198> 'int' lvalue Var 0x55b039a08b20 'x$w_buff0' 'int'
    |-BinaryOperator 0x55b039a14f90 <line:850:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55b039a14aa0 <col:3> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x55b039a14f60 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55b039a14f30 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55b039a14f18 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55b039a14ac0 <col:15> '_Bool' lvalue Var 0x55b039a08f80 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55b039a14f48 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55b039a14ae0 <col:31> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
    |   `-ParenExpr 0x55b039a14ef8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55b039a14ec8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55b039a14cf0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55b039a14c10 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55b039a14b38 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55b039a14b20 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55b039a14b00 <col:45> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55b039a14bf0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55b039a14b88 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55b039a14b70 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55b039a14b50 <col:64> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55b039a14bd8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55b039a14bc0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55b039a14ba0 <col:83> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55b039a14cd0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55b039a14c68 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55b039a14c50 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55b039a14c30 <col:102> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55b039a14cb8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55b039a14ca0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55b039a14c80 <col:121> '_Bool' lvalue Var 0x55b039a087c8 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55b039a14eb0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55b039a14d10 <col:138> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
    |       `-ParenExpr 0x55b039a14e90 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55b039a14e60 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55b039a14dd0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55b039a14d88 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55b039a14d70 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55b039a14d30 <col:151> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55b039a14db8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55b039a14da0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55b039a14d50 <col:169> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55b039a14e30 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55b039a14df0 <col:186> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55b039a14e48 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55b039a14e10 <col:198> 'int' lvalue Var 0x55b039a08c18 'x$w_buff1' 'int'
    |-BinaryOperator 0x55b039a15548 <line:851:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55b039a14fb0 <col:3> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55b039a15530 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b039a15500 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55b039a154b8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55b039a154a0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b039a14fd0 <col:20> '_Bool' lvalue Var 0x55b039a08f80 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55b039a154e8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55b039a154d0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b039a14ff0 <col:36> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55b039a15480 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55b039a15450 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55b039a15210 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55b039a15130 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55b039a15058 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55b039a15040 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55b039a15010 <col:55> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55b039a15110 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55b039a150a8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55b039a15090 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55b039a15070 <col:74> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55b039a150f8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55b039a150e0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55b039a150c0 <col:93> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55b039a151f0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55b039a15188 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55b039a15170 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55b039a15150 <col:112> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55b039a151d8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55b039a151c0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55b039a151a0 <col:131> '_Bool' lvalue Var 0x55b039a087c8 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55b039a15438 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55b039a15420 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55b039a15230 <col:148> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55b039a15400 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55b039a153d0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55b039a152f0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55b039a152a8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55b039a15290 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55b039a15250 <col:166> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55b039a152d8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55b039a152c0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55b039a15270 <col:184> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55b039a15388 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55b039a15340 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55b039a15310 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55b039a153b8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55b039a153a0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55b039a15368 <col:212> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55b039a15b10 <line:852:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55b039a15568 <col:3> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55b039a15af8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b039a15ac8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55b039a15a80 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55b039a15a68 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b039a15588 <col:20> '_Bool' lvalue Var 0x55b039a08f80 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55b039a15ab0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55b039a15a98 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b039a155a8 <col:36> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55b039a15a48 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55b039a15a18 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55b039a157b8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55b039a156d8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55b039a15600 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55b039a155e8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55b039a155c8 <col:55> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55b039a156b8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55b039a15650 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55b039a15638 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55b039a15618 <col:74> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55b039a156a0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55b039a15688 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55b039a15668 <col:93> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55b039a15798 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55b039a15730 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55b039a15718 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55b039a156f8 <col:112> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55b039a15780 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55b039a15768 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55b039a15748 <col:131> '_Bool' lvalue Var 0x55b039a087c8 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55b039a15a00 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55b039a159e8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55b039a157d8 <col:148> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55b039a159c8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55b039a15998 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55b039a15898 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55b039a15850 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55b039a15838 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55b039a157f8 <col:166> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55b039a15880 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55b039a15868 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55b039a15818 <col:184> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55b039a15968 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55b039a158e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55b039a158b8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55b039a15980 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55b039a15940 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55b039a15910 <col:219> 'int' 0
    |-BinaryOperator 0x55b039a160c8 <line:853:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55b039a15b30 <col:3> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55b039a160b0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b039a16080 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55b039a16028 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55b039a16010 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b039a15b50 <col:20> '_Bool' lvalue Var 0x55b039a08f80 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55b039a16068 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55b039a16050 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b039a15b70 <col:36> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55b039a15ff0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55b039a15fc0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55b039a15d80 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55b039a15ca0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55b039a15bc8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55b039a15bb0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55b039a15b90 <col:55> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55b039a15c80 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55b039a15c18 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55b039a15c00 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55b039a15be0 <col:74> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55b039a15c68 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55b039a15c50 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55b039a15c30 <col:93> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55b039a15d60 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55b039a15cf8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55b039a15ce0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55b039a15cc0 <col:112> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55b039a15d48 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55b039a15d30 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55b039a15d10 <col:131> '_Bool' lvalue Var 0x55b039a087c8 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55b039a15fa8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55b039a15f90 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55b039a15da0 <col:148> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55b039a15f70 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55b039a15f40 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55b039a15e60 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55b039a15e18 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55b039a15e00 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55b039a15dc0 <col:166> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55b039a15e48 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55b039a15e30 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55b039a15de0 <col:184> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55b039a15ef8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55b039a15eb0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55b039a15e80 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55b039a15f28 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55b039a15f10 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55b039a15ed8 <col:212> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55b039a16690 <line:854:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55b039a160e8 <col:3> '_Bool' lvalue Var 0x55b039a087c8 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55b039a16678 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b039a16648 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55b039a16600 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55b039a165e8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b039a16108 <col:20> '_Bool' lvalue Var 0x55b039a08f80 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55b039a16630 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55b039a16618 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b039a16128 <col:36> '_Bool' lvalue Var 0x55b039a087c8 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55b039a165c8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55b039a16598 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55b039a16338 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55b039a16258 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55b039a16180 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55b039a16168 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55b039a16148 <col:55> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55b039a16238 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55b039a161d0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55b039a161b8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55b039a16198 <col:74> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55b039a16220 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55b039a16208 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55b039a161e8 <col:93> '_Bool' lvalue Var 0x55b039a08c90 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55b039a16318 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55b039a162b0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55b039a16298 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55b039a16278 <col:112> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55b039a16300 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55b039a162e8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55b039a162c8 <col:131> '_Bool' lvalue Var 0x55b039a087c8 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55b039a16580 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55b039a16568 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55b039a16358 <col:148> '_Bool' lvalue Var 0x55b039a087c8 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55b039a16548 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55b039a16518 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55b039a16418 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55b039a163d0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55b039a163b8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55b039a16378 <col:166> '_Bool' lvalue Var 0x55b039a08b98 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55b039a16400 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55b039a163e8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55b039a16398 <col:184> '_Bool' lvalue Var 0x55b039a08570 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55b039a164e8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55b039a16468 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55b039a16438 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55b039a16500 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55b039a164c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55b039a16490 <col:219> 'int' 0
    |-BinaryOperator 0x55b039a16740 <line:855:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55b039a166b0 <col:3> '_Bool' lvalue Var 0x55b039a08ea0 'weak$$choice1' '_Bool'
    | `-ImplicitCastExpr 0x55b039a16728 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55b039a16708 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55b039a166f0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55b039a166d0 <col:19> 'void *(void)' Function 0x55b0399ade68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55b039a16978 <line:856:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55b039a16760 <col:3> 'int' lvalue Var 0x55b039a07928 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x55b039a16948 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55b039a16918 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55b039a16900 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55b039a16780 <col:25> '_Bool' lvalue Var 0x55b039a07f80 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55b039a168c0 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55b039a16890 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55b039a16848 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55b039a16830 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55b039a167a0 <col:61> '_Bool' lvalue Var 0x55b039a08ea0 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55b039a16860 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55b039a167f8 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55b039a167e0 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55b039a167c0 <col:78> 'int *' lvalue Var 0x55b039a08000 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55b039a16878 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55b039a16810 <col:117> 'int' lvalue Var 0x55b039a07928 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x55b039a16930 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55b039a168e0 <col:140> 'int' lvalue Var 0x55b039a07928 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x55b039a16c48 <line:857:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x55b039a16998 <col:3> '_Bool' lvalue Var 0x55b039a082e0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55b039a16c30 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55b039a16c18 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55b039a16bf8 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x55b039a16bd8 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x55b039a16b40 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x55b039a16aa8 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x55b039a16a10 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55b039a169f8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55b039a169b8 <col:23> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
    |         | | | `-IntegerLiteral 0x55b039a169d8 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55b039a16a88 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55b039a16a70 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55b039a16a30 <col:33> 'int' lvalue Var 0x55b039a08d90 'y' 'int'
    |         | |   `-IntegerLiteral 0x55b039a16a50 <col:38> 'int' 2
    |         | `-BinaryOperator 0x55b039a16b20 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55b039a16b08 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55b039a16ac8 <col:43> 'int' lvalue Var 0x55b039a07808 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x55b039a16ae8 <col:66> 'int' 2
    |         `-BinaryOperator 0x55b039a16bb8 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x55b039a16ba0 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55b039a16b60 <col:71> 'int' lvalue Var 0x55b039a07928 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x55b039a16b80 <col:94> 'int' 2
    |-BinaryOperator 0x55b039a16d78 <line:858:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55b039a16c68 <col:3> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
    | `-ConditionalOperator 0x55b039a16d48 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55b039a16d00 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55b039a16ce8 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55b039a16c88 <col:7> '_Bool' lvalue Var 0x55b039a08478 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55b039a16d18 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55b039a16ca8 <col:25> 'int' lvalue Var 0x55b039a084f8 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55b039a16d30 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55b039a16cc8 <col:37> 'int' lvalue Var 0x55b039a083e0 'x' 'int'
    |-BinaryOperator 0x55b039a16e10 <line:859:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55b039a16d98 <col:3> '_Bool' lvalue Var 0x55b039a08478 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55b039a16de8 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55b039a16db8 <col:28> 'int' 0
    |-CallExpr 0x55b039a16e68 <line:860:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b039a16e50 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b039a16e30 <col:3> 'void ()' Function 0x55b0399ae410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b039a16ee0 <line:861:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55b039a16ec8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b039a16e88 <col:3> 'void (int)' Function 0x55b0399ae0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55b039a16f20 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55b039a16f08 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55b039a16ea8 <col:21> '_Bool' lvalue Var 0x55b039a082e0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55b039a16f58 <line:862:3, col:10>
      `-IntegerLiteral 0x55b039a16f38 <col:10> 'int' 0
