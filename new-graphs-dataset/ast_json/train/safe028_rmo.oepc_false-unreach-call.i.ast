TranslationUnitDecl 0x5575b6677f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5575b6678848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5575b6678520 '__int128'
|-TypedefDecl 0x5575b66788b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5575b6678540 'unsigned __int128'
|-TypedefDecl 0x5575b6678bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5575b6678990 'struct __NSConstantString_tag'
|   `-Record 0x5575b6678910 '__NSConstantString_tag'
|-TypedefDecl 0x5575b6678c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5575b6678c20 'char *'
|   `-BuiltinType 0x5575b6678020 'char'
|-TypedefDecl 0x5575b66b7b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5575b6678f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5575b6678d40 'struct __va_list_tag'
|     `-Record 0x5575b6678cc0 '__va_list_tag'
|-FunctionDecl 0x5575b66b7c80 <pthread-wmm/safe028_rmo.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x5575b66b7e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5575b66b7d80 <col:31> col:34 'int'
|-FunctionDecl 0x5575b66b7fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5575b66b80f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5575b66b8238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5575b66b81a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5575b66b8468 <col:40, col:99>
|   |-IfStmt 0x5575b66b8438 <col:42, col:88>
|   | |-UnaryOperator 0x5575b66b8318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5575b66b8300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5575b66b82e0 <col:47> 'int' lvalue ParmVar 0x5575b66b81a8 'expression' 'int'
|   | `-CompoundStmt 0x5575b66b8420 <col:59, col:88>
|   |   `-LabelStmt 0x5575b66b8408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5575b66b8398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5575b66b8380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5575b66b8330 <col:68> 'void () __attribute__((noreturn))' Function 0x5575b66b80f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5575b66b8450 <col:89>
|   `-ReturnStmt 0x5575b66b8458 <col:91>
|-FunctionDecl 0x5575b66b84b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5575b66b8570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5575b66b88f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5575b66b8628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5575b66b86a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5575b66b8728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5575b66b87a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5575b66b89b0 <line:11:22>
|-FunctionDecl 0x5575b66ddf10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5575b66b8a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5575b66b8aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5575b66ddd40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5575b66dddc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5575b66ddfd0 <line:14:22>
|-FunctionDecl 0x5575b66de280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5575b66de040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5575b66de0c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5575b66de140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5575b66de338 <line:16:22>
|-TypedefDecl 0x5575b66de3a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5575b66780e0 'unsigned char'
|-TypedefDecl 0x5575b66de418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5575b6678100 'unsigned short'
|-TypedefDecl 0x5575b66de488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5575b6678120 'unsigned int'
|-TypedefDecl 0x5575b66de4f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-TypedefDecl 0x5575b66de568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5575b6678040 'signed char'
|-TypedefDecl 0x5575b66de5d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5575b66780e0 'unsigned char'
|-TypedefDecl 0x5575b66de648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5575b6678060 'short'
|-TypedefDecl 0x5575b66de6b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5575b6678100 'unsigned short'
|-TypedefDecl 0x5575b66de728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5575b6678080 'int'
|-TypedefDecl 0x5575b66de798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5575b6678120 'unsigned int'
|-TypedefDecl 0x5575b66de808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66de878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-TypedefDecl 0x5575b66de8e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66de958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-TypedefDecl 0x5575b66de9c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-TypedefDecl 0x5575b66dea38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5575b6678120 'unsigned int'
|-TypedefDecl 0x5575b66deaa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5575b6678120 'unsigned int'
|-TypedefDecl 0x5575b66deb18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-TypedefDecl 0x5575b66deb88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-TypedefDecl 0x5575b66debf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5575b6678120 'unsigned int'
|-TypedefDecl 0x5575b66dec68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-TypedefDecl 0x5575b66decd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66ded68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66dedd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5575b6678080 'int'
|-RecordDecl 0x5575b66dee30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x5575b66def78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5575b66df030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5575b66defd0 'struct __fsid_t' sugar
|   `-RecordType 0x5575b66deeb0 '__fsid_t'
|     `-Record 0x5575b66dee30 ''
|-TypedefDecl 0x5575b66df0b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66df128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-TypedefDecl 0x5575b66df198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-TypedefDecl 0x5575b66df208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5575b6678120 'unsigned int'
|-TypedefDecl 0x5575b66df278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66df2e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5575b6678120 'unsigned int'
|-TypedefDecl 0x5575b66df358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66df3c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5575b6678080 'int'
|-TypedefDecl 0x5575b66df438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5575b6678080 'int'
|-TypedefDecl 0x5575b66df4a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5575b6678080 'int'
|-TypedefDecl 0x5575b66df518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5575b66787a0 'void *'
|   `-BuiltinType 0x5575b6677fe0 'void'
|-TypedefDecl 0x5575b66df588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66df5f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66df668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66df6d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-TypedefDecl 0x5575b66df748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-TypedefDecl 0x5575b66df7b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-TypedefDecl 0x5575b66df828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-TypedefDecl 0x5575b66df898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66df908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66df978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66df9e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-TypedefDecl 0x5575b66dfa78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5575b66dfa40 '__off64_t' sugar
|   |-Typedef 0x5575b66ded68 '__off64_t'
|   `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66dfb70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5575b66dfb30 '__quad_t *'
|   `-TypedefType 0x5575b66dfad0 '__quad_t' sugar
|     |-Typedef 0x5575b66de8e8 '__quad_t'
|     `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66dfbe0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5575b6678c20 'char *'
|   `-BuiltinType 0x5575b6678020 'char'
|-TypedefDecl 0x5575b66dfc50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66dfcc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5575b6678120 'unsigned int'
|-FunctionDecl 0x5575b66dfe38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5575b66dfd60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5575b66e0148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x5575b66e0138 <line:73:3, col:34>
|     `-CallExpr 0x5575b66e00f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5575b66e00e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5575b66e0070 <col:10> '<builtin fn type>' Function 0x5575b66dfee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5575b66e0120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5575b66e0090 <col:29> 'unsigned int' lvalue ParmVar 0x5575b66dfd60 '__bsx' 'unsigned int'
|-FunctionDecl 0x5575b66dfee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5575b66dff80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5575b66dfff0 <col:10> Implicit
| `-ConstAttr 0x5575b66e0048 <col:10> Implicit
|-FunctionDecl 0x5575b66e02a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5575b66e0198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5575b66e05b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5575b66e05a8 <line:78:3, col:34>
|     `-CallExpr 0x5575b66e0568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5575b66e0550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5575b66e04d8 <col:10> '<builtin fn type>' Function 0x5575b66e0348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5575b66e0590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5575b66e04f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5575b66e0198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5575b66e0348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5575b66e03e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5575b66e0458 <col:10> Implicit
| `-ConstAttr 0x5575b66e04b0 <col:10> Implicit
|-TypedefDecl 0x5575b66e05e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-TypedefDecl 0x5575b66e0678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5575b66e0640 '__time_t' sugar
|   |-Typedef 0x5575b66df278 '__time_t'
|   `-BuiltinType 0x5575b66780a0 'long'
|-RecordDecl 0x5575b66e06d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x5575b66e0788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5575b66e0818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5575b66e08a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5575b66e0870 '__pid_t' sugar
|   |-Typedef 0x5575b66dedd8 '__pid_t'
|   `-BuiltinType 0x5575b6678080 'int'
|-RecordDecl 0x5575b66e0900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5575b66e09c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5575b66e0a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x5575b66e0ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5575b66e0b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-RecordDecl 0x5575b66e0b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x5575b66e2e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5575b66e2f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5575b66e2ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x5575b66e0c10 'cpu_set_t'
|     `-Record 0x5575b66e0b90 ''
|-FunctionDecl 0x5575b66e31f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5575b66e2fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5575b66e30d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5575b66e32a8 <line:108:19>
|-FunctionDecl 0x5575b66e3480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5575b66e3310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5575b66e3528 <col:69>
|-FunctionDecl 0x5575b66e36a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5575b66e3590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5575b66e3748 <col:64>
|-FunctionDecl 0x5575b66e3a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5575b66e37b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5575b66e38e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5575b66e3ab8 <line:114:22>
|-FunctionDecl 0x5575b66e3e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5575b66e3b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5575b66e3c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5575b66e3f10 <col:88>
|-FunctionDecl 0x5575b66e41c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5575b66e3f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5575b66e3ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5575b66e4088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5575b66e4280 <col:62>
|-FunctionDecl 0x5575b66e43f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5575b66e42e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5575b66e44a0 <col:63>
|-FunctionDecl 0x5575b66e45c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5575b66e4668 <col:47>
|-FunctionDecl 0x5575b66e4770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5575b66e46d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5575b66e4818 <col:69>
|-FunctionDecl 0x5575b66e4920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5575b66e4888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5575b66e49c8 <col:69>
|-FunctionDecl 0x5575b66e4c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5575b66e4a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5575b66e4b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5575b66e4d38 <col:88>
|-TypedefDecl 0x5575b66e4dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5575b66e4d90 '__clock_t' sugar
|   |-Typedef 0x5575b66df0b8 '__clock_t'
|   `-BuiltinType 0x5575b66780a0 'long'
|-TypedefDecl 0x5575b66e57e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5575b66e4e20 '__clockid_t' sugar
|   |-Typedef 0x5575b66df4a8 '__clockid_t'
|   `-BuiltinType 0x5575b6678080 'int'
|-TypedefDecl 0x5575b66e5878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5575b66e5840 '__timer_t' sugar
|   |-Typedef 0x5575b66df518 '__timer_t'
|   `-PointerType 0x5575b66787a0 'void *'
|     `-BuiltinType 0x5575b6677fe0 'void'
|-RecordDecl 0x5575b66e58d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x5575b66e5990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5575b66e59f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5575b66e5a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5575b66e5ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5575b66e5b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5575b66e5b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5575b66e5c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5575b66e5c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5575b66e5cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5575b66e5d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5575b66e5da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5575b66e5df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x5575b66e5eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5575b66e5f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5575b66e5fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5575b66e61a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5575b66e6240 <col:45>
|-FunctionDecl 0x5575b66e6420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5575b66e6310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5575b66e64c8 <col:54>
|-FunctionDecl 0x5575b66e66c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5575b66e6530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5575b66e65a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5575b66e6778 <line:158:22>
| `-ConstAttr 0x5575b66e7410 <col:63>
|-FunctionDecl 0x5575b66e7610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5575b66e7508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5575b66e76b8 <col:56>
|-FunctionDecl 0x5575b66e7a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5575b66e7728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5575b66e77a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5575b66e7820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5575b66e7918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5575b66e7b20 <col:54>
|-RecordDecl 0x5575b66e7b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x5575b66e7c28 parent 0x5575b6677f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5575b66e7e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5575b66e7f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5575b66e7f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5575b66e7ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5575b66e80e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5575b66e8208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5575b66e81b0 'struct __locale_struct *'
|   `-ElaboratedType 0x5575b66e8140 'struct __locale_struct' sugar
|     `-RecordType 0x5575b66e7c00 'struct __locale_struct'
|       `-Record 0x5575b66e7b78 '__locale_struct'
|-TypedefDecl 0x5575b66e82b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5575b66e8280 '__locale_t' sugar
|   |-Typedef 0x5575b66e8208 '__locale_t'
|   `-PointerType 0x5575b66e81b0 'struct __locale_struct *'
|     `-ElaboratedType 0x5575b66e8140 'struct __locale_struct' sugar
|       `-RecordType 0x5575b66e7c00 'struct __locale_struct'
|         `-Record 0x5575b66e7b78 '__locale_struct'
|-FunctionDecl 0x5575b66e86b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5575b66e8328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5575b66e83a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5575b66e8438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5575b66e84c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5575b66e8540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5575b66e8778 <col:40>
|-FunctionDecl 0x5575b66e8968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5575b66e8840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5575b66e8a10 <col:66>
|-FunctionDecl 0x5575b66e8b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5575b66e8a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5575b66e8bc8 <col:69>
|-FunctionDecl 0x5575b66e8df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5575b66e8c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5575b66e8cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5575b66e8ea8 <col:52>
|-FunctionDecl 0x5575b66e9050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5575b66e8f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5575b66e8fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5575b66e9100 <col:55>
|-FunctionDecl 0x5575b66e9298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5575b66e9180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5575b66e9340 <col:62>
|-FunctionDecl 0x5575b66e9578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5575b66e93a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5575b66e9620 <col:60>
|-FunctionDecl 0x5575b66e9848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5575b66e96a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5575b66e9720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5575b66e98f8 <col:44>
|-FunctionDecl 0x5575b66e9b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5575b66e9960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5575b66e99e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5575b66e9bb8 <col:49>
|-VarDecl 0x5575b66e9cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5575b66e9d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5575b66e9db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5575b66e9e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5575b66e9fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5575b66ea050 <col:42>
|-VarDecl 0x5575b66ea0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5575b66ea140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5575b66ea2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5575b66ea1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5575b66ea370 <col:57>
|-FunctionDecl 0x5575b66eb4f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5575b66ea3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5575b66eb598 <col:56>
|-FunctionDecl 0x5575b66eb6a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5575b66eb618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5575b66eb750 <col:59>
|-FunctionDecl 0x5575b66eb858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5575b66eb7c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5575b66eb900 <col:48>
| `-ConstAttr 0x5575b66eb958 <col:89>
|-FunctionDecl 0x5575b66ebbb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5575b66eba08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5575b66eba98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5575b66ebe18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5575b66ebca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5575b66ebd38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5575b66ebec8 <col:88>
|-FunctionDecl 0x5575b66ec060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5575b66ebf30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5575b66ebfc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5575b66ec110 <col:88>
|-FunctionDecl 0x5575b66ec328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5575b66ec178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5575b66ec208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5575b66ec3d8 <line:209:22>
|-FunctionDecl 0x5575b66ec778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5575b66ec440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5575b66ec500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5575b66ec590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5575b66ec620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5575b66eca78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5575b66ec878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5575b66ec950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5575b66ecb28 <col:85>
|-FunctionDecl 0x5575b66ecf18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5575b66ecb90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5575b66eccc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5575b66ecdd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5575b66ecfd0 <col:52>
|-FunctionDecl 0x5575b66ed148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5575b66ed038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5575b66ed1f0 <col:61>
|-FunctionDecl 0x5575b66ed668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5575b66ed258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5575b66ed2d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5575b66ed408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5575b66ed510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5575b66ed728 <col:62>
|-FunctionDecl 0x5575b66ed948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5575b66ed790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5575b66ed820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5575b66ed9f8 <line:222:22>
|-FunctionDecl 0x5575b66edaf8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5575b66eda60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5575b66edba0 <col:65>
|-TypedefDecl 0x5575b66edc10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5575b6678140 'unsigned long'
|-RecordDecl 0x5575b66edc68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x5575b66eddb0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5575b66ede18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5575b66edec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5575b66ede70 'union pthread_attr_t' sugar
|   `-RecordType 0x5575b66edcf0 'union pthread_attr_t'
|     `-Record 0x5575b66edc68 'pthread_attr_t'
|-RecordDecl 0x5575b66edf20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5575b66ee098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5575b66ee110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5575b66ee1c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5575b66ee160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5575b66edfa0 'struct __pthread_internal_list'
|     `-Record 0x5575b66edf20 '__pthread_internal_list'
|-RecordDecl 0x5575b66ee230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x5575b66ee2d8 parent 0x5575b6677f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5575b66ee3b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5575b66ee418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5575b66ee480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5575b66f2530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5575b66f2598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5575b66f2600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5575b66f2688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5575b66f2740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5575b66f2830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5575b66f2898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5575b66f2a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5575b66f29c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5575b66ee2b0 'pthread_mutex_t'
|     `-Record 0x5575b66ee230 ''
|-RecordDecl 0x5575b66f2a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x5575b66f2bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5575b66f2c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5575b66f2cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5575b66f2c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5575b66f2b10 'pthread_mutexattr_t'
|     `-Record 0x5575b66f2a90 ''
|-RecordDecl 0x5575b66f2d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x5575b66f2e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x5575b66f2ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5575b66f2f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5575b66f2fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5575b66f3008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5575b66f3070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5575b66f30d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5575b66f3140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5575b66f31a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5575b66f3260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe028_rmo.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe028_rmo.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x5575b66f3350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5575b66f33b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5575b66f3540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5575b66f3490 'union pthread_cond_t' sugar
|   `-RecordType 0x5575b66f2de0 'pthread_cond_t'
|     `-Record 0x5575b66f2d60 ''
|-RecordDecl 0x5575b66f35b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5575b66f36b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5575b66f3718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5575b66f37d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5575b66f3770 'union pthread_condattr_t' sugar
|   `-RecordType 0x5575b66f3630 'pthread_condattr_t'
|     `-Record 0x5575b66f35b0 ''
|-TypedefDecl 0x5575b66f3858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5575b6678120 'unsigned int'
|-TypedefDecl 0x5575b66f38c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5575b6678080 'int'
|-RecordDecl 0x5575b66f3920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5575b66f39c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x5575b66f3a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5575b66f3af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5575b66f3b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5575b66f3bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5575b66f3c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5575b66f3c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5575b66f3d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5575b66f3d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5575b66f3dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5575b66f3e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5575b66f3ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5575b66f3f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe028_rmo.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe028_rmo.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x5575b66f3ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5575b66f4060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5575b66f41b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5575b66f4150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5575b66f39a0 'pthread_rwlock_t'
|     `-Record 0x5575b66f3920 ''
|-RecordDecl 0x5575b66f4220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x5575b66f4360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5575b66f43c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5575b66f4480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5575b66f4420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5575b66f42a0 'pthread_rwlockattr_t'
|     `-Record 0x5575b66f4220 ''
|-TypedefDecl 0x5575b66f6560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5575b6678084 'volatile int' volatile
|   `-BuiltinType 0x5575b6678080 'int'
|-RecordDecl 0x5575b66f65b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x5575b66f6700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5575b66f6768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5575b66f6820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5575b66f67c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x5575b66f6640 'pthread_barrier_t'
|     `-Record 0x5575b66f65b8 ''
|-RecordDecl 0x5575b66f6890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x5575b66f6990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5575b66f69f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5575b66f6ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5575b66f6a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5575b66f6910 'pthread_barrierattr_t'
|     `-Record 0x5575b66f6890 ''
|-TypedefDecl 0x5575b66f6bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5575b66f6b60 'long [8]' 8 
|   `-BuiltinType 0x5575b66780a0 'long'
|-EnumDecl 0x5575b66f6c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x5575b66f6ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5575b66f6d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5575b66f6d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x5575b66f6e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5575b66f6ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5575b66f6ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5575b66f6f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5575b66f6fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5575b66f6fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x5575b66f6f98 <col:26> 'int' EnumConstant 0x5575b66f6e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5575b66f7058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5575b66f7040 <col:29> 'int'
| |   `-DeclRefExpr 0x5575b66f7020 <col:29> 'int' EnumConstant 0x5575b66f6ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5575b66f70e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5575b66f70c8 <col:30> 'int'
| |   `-DeclRefExpr 0x5575b66f70a8 <col:30> 'int' EnumConstant 0x5575b66f6ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5575b66f7168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5575b66f7150 <col:27> 'int'
|     `-DeclRefExpr 0x5575b66f7130 <col:27> 'int' EnumConstant 0x5575b66f6fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5575b66f71b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x5575b66f7288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5575b66f7310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5575b66f72f8 <col:30> 'int'
| |   `-DeclRefExpr 0x5575b66f72d8 <col:30> 'int' EnumConstant 0x5575b66f7288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5575b66f7360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5575b66f73e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5575b66f73d0 <col:29> 'int'
|     `-DeclRefExpr 0x5575b66f73b0 <col:29> 'int' EnumConstant 0x5575b66f7360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5575b66f7438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x5575b66f7508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5575b66f7570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5575b66f75c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5575b66f7610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5575b66f76d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5575b66f7728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5575b66f7778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5575b66f7800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5575b66f77e8 <col:31> 'int'
|     `-DeclRefExpr 0x5575b66f77c8 <col:31> 'int' EnumConstant 0x5575b66f76d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5575b66f7850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x5575b66f7918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5575b66f7968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5575b66f79b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x5575b66f7a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5575b66f7ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5575b66f7b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x5575b66f7bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5575b66f7c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5575b66f7c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5575b66f7ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5575b66f7f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5575b66f7fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5575b66f80c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5575b66f8118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x5575b66f81e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5575b66f8238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5575b66f8288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x5575b66f8358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5575b66f83a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5575b66f89d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5575b66f84a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5575b66f85c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575b66f87c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5575b66f8840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5575b66f8a98 <col:47>
| |-NonNullAttr 0x5575b66f8af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5575b66f8b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x5575b66f8c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5575b66f8b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5575b66f8ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5575b66f8d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5575b66f8d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5575b66f9078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5575b66f8f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5575b66f9120 <col:60>
|-FunctionDecl 0x5575b66f9270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5575b66f9310 <col:54>
| `-ConstAttr 0x5575b66f9368 <col:95>
|-FunctionDecl 0x5575b66f9da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5575b66f93a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5575b66f9418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5575b66f9e50 <line:395:19>
| `-ConstAttr 0x5575b66f9ea8 <col:60>
|-FunctionDecl 0x5575b66fa078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5575b66f9f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5575b66fa120 <col:71>
| `-NonNullAttr 0x5575b66fa178 <col:112, col:126> 1
|-FunctionDecl 0x5575b66fa280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5575b66fa1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5575b66fa328 <line:398:22>
| `-NonNullAttr 0x5575b66fa380 <col:63, col:77> 1
|-FunctionDecl 0x5575b66fa5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5575b66fa3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5575b66fa448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5575b66fa658 <line:401:22>
| `-NonNullAttr 0x5575b66fa6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b66fa8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5575b66fa6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575b66fa778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5575b66fa968 <line:404:22>
| `-NonNullAttr 0x5575b66fa9c0 <col:63, col:77> 1
|-FunctionDecl 0x5575b66fac18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5575b66faa08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5575b66faab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5575b66facc8 <line:407:22>
| `-NonNullAttr 0x5575b66fad20 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b66fbf78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5575b66fbdc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575b66fbe38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5575b66fc028 <line:410:22>
| `-NonNullAttr 0x5575b66fc080 <col:63, col:77> 1
|-FunctionDecl 0x5575b66fc2b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5575b66fc0c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575b66fc158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5575b66fc368 <line:413:22>
| `-NonNullAttr 0x5575b66fc3c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b66fc5f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5575b66fc408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575b66fc498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5575b66fc6a8 <col:37>
| `-NonNullAttr 0x5575b66fc700 <col:78, col:95> 1 2
|-FunctionDecl 0x5575b66fc8e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575b66fc748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575b66fc7c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5575b66fc998 <line:419:22>
| `-NonNullAttr 0x5575b66fc9f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b66fcb78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5575b66fca38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575b66fcab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5575b66fcc28 <line:421:22>
| `-NonNullAttr 0x5575b66fcc80 <col:63, col:77> 1
|-FunctionDecl 0x5575b66fde58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575b66fccc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575b66fcd48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5575b66fdf08 <line:424:22>
| `-NonNullAttr 0x5575b66fdf60 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b66fe0e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5575b66fdfa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575b66fe028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5575b66fe198 <line:427:22>
| `-NonNullAttr 0x5575b66fe1f0 <col:63, col:77> 1
|-FunctionDecl 0x5575b66fe398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575b66fe238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575b66fe2b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5575b66fe448 <line:430:22>
| `-NonNullAttr 0x5575b66fe4a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b66fe628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5575b66fe4e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575b66fe568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5575b66fe6d8 <line:432:22>
| `-NonNullAttr 0x5575b66fe730 <col:63, col:77> 1
|-FunctionDecl 0x5575b66fe958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5575b66fe778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575b66fe7f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5575b66fea08 <line:435:22>
| |-NonNullAttr 0x5575b66fea60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5575b66fea98 <col:100> "" ""
|-FunctionDecl 0x5575b66feca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5575b66feae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575b66feb68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5575b66fed58 <line:438:22>
| |-NonNullAttr 0x5575b66fedb0 <col:63, col:77> 1
| `-DeprecatedAttr 0x5575b66fedf8 <col:97> "" ""
|-FunctionDecl 0x5575b66fefe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5575b66fee48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575b66feec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5575b66ff098 <line:441:22>
| `-NonNullAttr 0x5575b66ff0f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b66ff270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5575b66ff138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575b66ff1b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5575b66ff320 <line:444:22>
| `-NonNullAttr 0x5575b66ff378 <col:63, col:77> 1
|-FunctionDecl 0x5575b66ff668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5575b66ff3c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575b66ff448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5575b66ff4c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5575b66ff720 <line:448:22>
| `-NonNullAttr 0x5575b66ff778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5575b66ffa28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5575b66ff7d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575b66ff850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5575b66ff8c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5575b66ffae0 <col:43>
| `-NonNullAttr 0x5575b66ffb38 <col:84, col:98> 1
|-FunctionDecl 0x5575b66ffe40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5575b66ffb88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5575b66ffc08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5575b66ffc98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5575b66ffef8 <line:453:22>
| `-NonNullAttr 0x5575b66fff50 <col:63, col:77> 3
|-FunctionDecl 0x5575b6700228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5575b66fff98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5575b6700018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5575b67000a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5575b67002e0 <line:457:22>
| `-NonNullAttr 0x5575b6700338 <col:63, col:80> 2 3
|-FunctionDecl 0x5575b6700528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5575b6700388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5575b6700408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5575b67005d8 <line:459:22>
|-FunctionDecl 0x5575b67009a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5575b67006a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5575b6700840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5575b6700a58 <col:52, col:69> 1 2
|-FunctionDecl 0x5575b6700c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5575b6700ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5575b6700b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5575b6700e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5575b6700cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5575b6700d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5575b6700f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5575b6700ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5575b67010a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5575b6701148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x5575b67011f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x5575b67012e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5575b6701350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5575b6701520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe028_rmo.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x5575b6701618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5575b67016d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5575b6701670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5575b67011d0 '__pthread_unwind_buf_t'
| |   `-Record 0x5575b6701148 ''
| `-AlignedAttr 0x5575b6701728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5575b67017a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5575b6701900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5575b6701968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5575b67019d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5575b6701a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5575b6701c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5575b6701b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5575b6701e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5575b6701cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5575b6701fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5575b6701ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5575b6702088 <line:488:22>
|-RecordDecl 0x5575b67020e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5575b67023f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5575b6702258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5575b67022d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5575b67024a8 <col:86>
| `-ReturnsTwiceAttr 0x5575b6702500 <col:12> Implicit
|-FunctionDecl 0x5575b6702828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5575b67025d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5575b67026e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5575b67028d8 <line:494:22>
| `-NonNullAttr 0x5575b6702930 <col:63, col:77> 1
|-FunctionDecl 0x5575b6702aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5575b6702978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5575b6702b50 <line:496:22>
| `-NonNullAttr 0x5575b6702ba8 <col:63, col:77> 1
|-FunctionDecl 0x5575b6702cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5575b6702bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5575b6702d58 <line:498:22>
| `-NonNullAttr 0x5575b6702db0 <col:52, col:66> 1
|-FunctionDecl 0x5575b6702ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5575b6702e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5575b6702f90 <line:500:22>
| `-NonNullAttr 0x5575b6702fe8 <col:52, col:66> 1
|-FunctionDecl 0x5575b6703228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5575b6703038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5575b67030c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5575b67032d8 <col:36>
| `-NonNullAttr 0x5575b6703330 <col:66, col:83> 1 2
|-FunctionDecl 0x5575b6703430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5575b6703378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5575b67034d8 <line:505:22>
| `-NonNullAttr 0x5575b6703530 <col:52, col:66> 1
|-FunctionDecl 0x5575b67037c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575b67035e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5575b6703660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5575b6703878 <line:509:22>
| `-NonNullAttr 0x5575b67038d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b6703b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5575b6703918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5575b6703998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5575b6703a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5575b6703c50 <line:513:22>
| `-NonNullAttr 0x5575b6703ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x5575b6703e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5575b6703cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5575b6703ee8 <line:515:22>
| `-NonNullAttr 0x5575b6703f40 <col:63, col:77> 1
|-FunctionDecl 0x5575b6704128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5575b6703ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5575b67041d0 <line:517:22>
| `-NonNullAttr 0x5575b6704228 <col:63, col:77> 1
|-FunctionDecl 0x5575b6704330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5575b6704278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5575b67043d8 <line:519:22>
| `-NonNullAttr 0x5575b6704430 <col:63, col:77> 1
|-FunctionDecl 0x5575b6704658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575b6704478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5575b67044f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5575b6704708 <line:523:22>
| `-NonNullAttr 0x5575b6704760 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b6704968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5575b67047a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5575b6704828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5575b6704a18 <line:526:22>
| `-NonNullAttr 0x5575b6704a70 <col:63, col:77> 1
|-FunctionDecl 0x5575b6704c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575b6704ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5575b6704b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5575b6704cc8 <line:529:22>
| `-NonNullAttr 0x5575b6704d20 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b6705f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5575b6704d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5575b6705e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5575b6705fd0 <line:531:22>
| `-NonNullAttr 0x5575b6706028 <col:63, col:77> 1
|-FunctionDecl 0x5575b67061d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575b6706078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5575b67060f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5575b6706288 <line:535:22>
| `-NonNullAttr 0x5575b67062e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b6706468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5575b6706328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5575b67063a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5575b6706518 <line:538:22>
| `-NonNullAttr 0x5575b6706570 <col:63, col:77> 1
|-FunctionDecl 0x5575b6706718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575b67065b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5575b6706638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5575b67067c8 <line:542:22>
| `-NonNullAttr 0x5575b6706820 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b67069a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5575b6706868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5575b67068e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5575b6706a58 <line:545:22>
| `-NonNullAttr 0x5575b6706ab0 <col:63, col:77> 1
|-FunctionDecl 0x5575b6706c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5575b6706af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5575b6706b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5575b6706d48 <line:548:22>
| `-NonNullAttr 0x5575b6706da0 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b6707f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5575b6706de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5575b6707e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5575b6708008 <line:551:22>
| `-NonNullAttr 0x5575b6708060 <col:63, col:77> 1
|-FunctionDecl 0x5575b6708398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5575b6708140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5575b6708250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5575b6708448 <col:29>
| `-NonNullAttr 0x5575b67084a0 <col:70, col:84> 1
|-FunctionDecl 0x5575b6708618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5575b67084e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5575b67086c0 <line:556:22>
| `-NonNullAttr 0x5575b6708718 <col:63, col:77> 1
|-FunctionDecl 0x5575b6708820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5575b6708768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5575b67088c8 <line:558:22>
| `-NonNullAttr 0x5575b6708920 <col:52, col:66> 1
|-FunctionDecl 0x5575b6708a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5575b6708968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5575b6708ac8 <line:560:19>
| `-NonNullAttr 0x5575b6708b20 <col:49, col:63> 1
|-FunctionDecl 0x5575b6708d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5575b6708b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5575b6708bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5575b6708e08 <col:39>
| `-NonNullAttr 0x5575b6708e90 <col:69, col:86> 1 2
|-FunctionDecl 0x5575b6708f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5575b6708ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5575b6709038 <line:565:22>
| `-NonNullAttr 0x5575b6709090 <col:52, col:66> 1
|-FunctionDecl 0x5575b6709190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5575b67090d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5575b6709238 <line:567:22>
| `-NonNullAttr 0x5575b6709290 <col:52, col:66> 1
|-FunctionDecl 0x5575b6709448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5575b67092d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5575b6709368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5575b67094f8 <col:39>
| `-NonNullAttr 0x5575b6709550 <col:69, col:86> 1 2
|-FunctionDecl 0x5575b6709650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5575b6709598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5575b67096f8 <line:572:22>
| `-NonNullAttr 0x5575b6709750 <col:52, col:66> 1
|-FunctionDecl 0x5575b6709938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5575b6709800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5575b67099e0 <line:574:22>
| `-NonNullAttr 0x5575b6709a38 <col:63, col:77> 1
|-FunctionDecl 0x5575b6709b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5575b6709a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5575b6709be8 <line:576:22>
| `-NonNullAttr 0x5575b6709c40 <col:63, col:77> 1
|-FunctionDecl 0x5575b6709ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575b6709c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5575b6709d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5575b6709f50 <line:580:22>
| `-NonNullAttr 0x5575b6709fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b670a1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5575b6709ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5575b670a078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5575b670a268 <line:583:22>
| `-NonNullAttr 0x5575b670a2c0 <col:63, col:77> 1
|-FunctionDecl 0x5575b670a468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575b670a308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5575b670a388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5575b670a518 <line:587:22>
| `-NonNullAttr 0x5575b670a570 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b670a6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5575b670a5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5575b670a638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5575b670a7a8 <col:36>
| `-NonNullAttr 0x5575b670a800 <col:77, col:91> 1
|-FunctionDecl 0x5575b670ab38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5575b670a8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5575b670a9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5575b670abe8 <line:592:22>
| `-NonNullAttr 0x5575b670ac40 <col:63, col:77> 1
|-FunctionDecl 0x5575b670adb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5575b670ac88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5575b670ae60 <line:594:22>
| `-NonNullAttr 0x5575b670aee0 <col:63, col:77> 1
|-FunctionDecl 0x5575b670afe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5575b670af28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5575b670b088 <line:596:22>
| `-NonNullAttr 0x5575b670b0e0 <col:52, col:66> 1
|-FunctionDecl 0x5575b670b1e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5575b670b128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5575b670b288 <line:598:22>
| `-NonNullAttr 0x5575b670b2e0 <col:52, col:66> 1
|-FunctionDecl 0x5575b670b508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5575b670b328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5575b670b3a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5575b670b5b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5575b670b8e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5575b670b638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5575b670b6b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5575b670b740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5575b670b9a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x5575b670bbb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5575b670ba80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5575b670bc60 <line:607:22>
| `-NonNullAttr 0x5575b670bcb8 <col:63, col:77> 1
|-FunctionDecl 0x5575b670bdc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5575b670bd08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5575b670be68 <line:609:22>
| `-NonNullAttr 0x5575b670bef0 <col:63, col:77> 1
|-FunctionDecl 0x5575b670c118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575b670bf38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5575b670bfb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5575b670c1c8 <line:613:22>
| `-NonNullAttr 0x5575b670c220 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b670c428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5575b670c268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5575b670c2e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5575b670c4d8 <col:37>
| `-NonNullAttr 0x5575b670c530 <col:78, col:92> 1
|-FunctionDecl 0x5575b670c748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5575b670c578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5575b670c620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5575b670c7f8 <line:619:22>
| `-NonNullAttr 0x5575b670c850 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b670ca18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5575b670c898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5575b670c910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5575b670cac8 <line:622:22>
| `-NonNullAttr 0x5575b670cb20 <col:63, col:77> 1
|-FunctionDecl 0x5575b670cdc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5575b670cc00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5575b670cc80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5575b670ce78 <line:624:22>
| `-NonNullAttr 0x5575b670cf00 <col:63, col:77> 1
|-FunctionDecl 0x5575b670d078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5575b670cf48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5575b670d120 <line:626:22>
| `-NonNullAttr 0x5575b670d178 <col:63, col:77> 1
|-FunctionDecl 0x5575b670d280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5575b670d1c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5575b670d328 <line:628:22>
| `-NonNullAttr 0x5575b670d380 <col:52, col:66> 1
|-FunctionDecl 0x5575b670d480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5575b670d3c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5575b670d528 <line:630:22>
| `-NonNullAttr 0x5575b670d580 <col:52, col:66> 1
|-FunctionDecl 0x5575b670d680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5575b670d5c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5575b670d728 <line:632:22>
| `-NonNullAttr 0x5575b670d780 <col:52, col:66> 1
|-FunctionDecl 0x5575b670db58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5575b670d860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5575b670d970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5575b670d9f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5575b670dc10 <line:636:22>
| `-NonNullAttr 0x5575b670dc68 <col:63, col:77> 1
|-FunctionDecl 0x5575b670dde8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5575b670dcb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5575b670de90 <line:638:22>
| `-NonNullAttr 0x5575b670df10 <col:63, col:77> 1
|-FunctionDecl 0x5575b670e010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5575b670df58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5575b670e0b8 <line:640:22>
| `-NonNullAttr 0x5575b670e110 <col:52, col:66> 1
|-FunctionDecl 0x5575b670e2f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5575b670e1c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5575b670e3a0 <line:642:22>
| `-NonNullAttr 0x5575b670e3f8 <col:63, col:77> 1
|-FunctionDecl 0x5575b670e500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5575b670e448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5575b670e5a8 <line:644:22>
| `-NonNullAttr 0x5575b670e600 <col:63, col:77> 1
|-FunctionDecl 0x5575b670e828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575b670e648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5575b670e6c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5575b670e8d8 <line:648:22>
| `-NonNullAttr 0x5575b670e930 <col:63, col:80> 1 2
|-FunctionDecl 0x5575b670eb38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5575b670e978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5575b670e9f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5575b670ebe8 <line:651:22>
| `-NonNullAttr 0x5575b670ec40 <col:63, col:77> 1
|-FunctionDecl 0x5575b670efa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5575b670ed20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5575b670ee40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5575b670f058 <line:654:22>
| `-NonNullAttr 0x5575b670f0b0 <col:63, col:77> 1
|-FunctionDecl 0x5575b670f208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5575b670f0f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5575b670f2b0 <col:69>
|-FunctionDecl 0x5575b670f428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5575b670f318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5575b670f4d0 <col:72>
|-FunctionDecl 0x5575b670f708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5575b670f538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5575b670f5e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5575b670f7b8 <col:44>
|-FunctionDecl 0x5575b670f9d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5575b670f820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5575b670f898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5575b670fa88 <line:661:22>
| `-NonNullAttr 0x5575b670fae0 <col:63, col:77> 2
|-FunctionDecl 0x5575b6710f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5575b670fbc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5575b670fcd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5575b670fde0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5575b6711008 <col:47>
|-FunctionDecl 0x5575b6711110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5575b6711078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5575b6711268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5575b67111d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5575b67113c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5575b6711328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5575b6711488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5575b6711548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5575b6711608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5575b67116c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5575b6711740 prev 0x5575b67116c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5575b67117a8 <col:24> 'int' 0
|-VarDecl 0x5575b67117e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5575b6711860 prev 0x5575b67117e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5575b67118c8 <col:27> 'int' 0
|-VarDecl 0x5575b6711900 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5575b6711980 prev 0x5575b6711900 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5575b67119e8 <col:27> 'int' 0
|-VarDecl 0x5575b6711a18 <line:678:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x5575b6711a98 <line:679:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x5575b6711b10 <line:680:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x5575b6711b88 <line:681:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x5575b6711c00 <line:682:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x5575b6711c78 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x5575b6711cf0 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x5575b6711d68 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x5575b6711de0 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x5575b6711e58 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x5575b6711f20 <line:688:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x5575b6711fa0 <line:689:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x5575b6712020 <line:690:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x5575b6712098 <line:691:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x5575b6712118 <line:692:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x5575b6712190 <line:693:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x5575b6712210 <line:694:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x5575b6712290 prev 0x5575b6712210 <line:695:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x5575b67122f8 <col:27> 'int' 0
|-VarDecl 0x5575b6712328 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5575b67123a0 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5575b6712420 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x5575b67124a0 prev 0x5575b6712420 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5575b6712508 <col:9> 'int' 0
|-VarDecl 0x5575b6712538 <line:700:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x5575b67125b8 <line:701:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x5575b6712630 <line:702:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x5575b67126a8 <line:703:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x5575b6712720 <line:704:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x5575b6712798 <line:705:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x5575b6712810 <line:706:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x5575b6712888 <line:707:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x5575b6712900 <line:708:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x5575b6712978 <line:709:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x5575b67129f0 <line:710:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x5575b6712a70 <line:711:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x5575b6712af0 <line:712:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x5575b6712b68 <line:713:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x5575b6712be8 <line:714:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x5575b6712c60 <line:715:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x5575b6712ce0 <line:716:1, col:5> col:5 used y 'int'
|-VarDecl 0x5575b6712d60 prev 0x5575b6712ce0 <line:717:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5575b6712dc8 <col:9> 'int' 0
|-VarDecl 0x5575b6712df8 <line:718:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5575b6712e70 <line:719:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x5575b6712f30 <line:720:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5575b6713048 prev 0x5575b6711110 <line:721:1, line:750:1> line:721:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5575b6712fb0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5575b6716098 <line:722:1, line:750:1>
|   |-CallExpr 0x5575b6713158 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575b6713140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b67130f0 <col:3> 'void ()' Function 0x5575b66b84b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575b67131b8 <line:724:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5575b6713178 <col:3> 'int' lvalue Var 0x5575b6712d60 'y' 'int'
|   | `-IntegerLiteral 0x5575b6713198 <col:7> 'int' 1
|   |-CallExpr 0x5575b6713210 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575b67131f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b67131d8 <col:3> 'void ()' Function 0x5575b66b8570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575b6713268 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575b6713250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b6713230 <col:3> 'void ()' Function 0x5575b66b84b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5575b67132c0 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575b67132a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b6713288 <col:3> 'void ()' Function 0x5575b66b8570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575b6713318 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575b6713300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b67132e0 <col:3> 'void ()' Function 0x5575b66b84b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575b67133e8 <line:729:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6713338 <col:3> '_Bool' lvalue Var 0x5575b6712df8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5575b67133c8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5575b67133b0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5575b6713358 <col:19> '_Bool (void)' Function 0x5575b66b7c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5575b6713480 <line:730:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6713408 <col:3> '_Bool' lvalue Var 0x5575b6712f30 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5575b6713460 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5575b6713448 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5575b6713428 <col:19> '_Bool (void)' Function 0x5575b66b7c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5575b67134f8 <line:731:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5575b67134a0 <col:3> '_Bool' lvalue Var 0x5575b6712538 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5575b67134e0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575b67134c0 <col:21> '_Bool' lvalue Var 0x5575b6712f30 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5575b6713570 <line:732:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5575b6713518 <col:3> 'int' lvalue Var 0x5575b67125b8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5575b6713558 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575b6713538 <col:15> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   |-BinaryOperator 0x5575b67139a8 <line:733:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5575b6713590 <col:3> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   | `-ConditionalOperator 0x5575b6713978 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5575b67137a0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5575b67136c0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5575b67135e8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5575b67135d0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5575b67135b0 <col:8> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5575b67136a0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5575b6713638 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5575b6713620 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5575b6713600 <col:27> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x5575b6713688 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5575b6713670 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5575b6713650 <col:46> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5575b6713780 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5575b6713718 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5575b6713700 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5575b67136e0 <col:65> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x5575b6713768 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5575b6713750 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5575b6713730 <col:84> '_Bool' lvalue Var 0x5575b6712888 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5575b6713960 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575b67137c0 <col:101> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   |   `-ParenExpr 0x5575b6713940 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5575b6713910 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5575b6713880 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5575b6713838 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5575b6713820 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5575b67137e0 <col:106> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5575b6713868 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5575b6713850 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5575b6713800 <col:124> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5575b67138e0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575b67138a0 <col:141> 'int' lvalue Var 0x5575b6712af0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5575b67138f8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575b67138c0 <col:153> 'int' lvalue Var 0x5575b6712be8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5575b6713eb8 <line:734:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5575b67139c8 <col:3> 'int' lvalue Var 0x5575b6712af0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5575b6713e88 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5575b6713e58 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5575b6713e40 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5575b67139e8 <col:15> '_Bool' lvalue Var 0x5575b6712f30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5575b6713e70 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575b6713a08 <col:31> 'int' lvalue Var 0x5575b6712af0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5575b6713e20 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5575b6713df0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5575b6713c18 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5575b6713b38 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5575b6713a60 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5575b6713a48 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5575b6713a28 <col:45> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5575b6713b18 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5575b6713ab0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5575b6713a98 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5575b6713a78 <col:64> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5575b6713b00 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5575b6713ae8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5575b6713ac8 <col:83> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5575b6713bf8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5575b6713b90 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5575b6713b78 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5575b6713b58 <col:102> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5575b6713be0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5575b6713bc8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5575b6713ba8 <col:121> '_Bool' lvalue Var 0x5575b6712888 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5575b6713dd8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575b6713c38 <col:138> 'int' lvalue Var 0x5575b6712af0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5575b6713db8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5575b6713d88 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5575b6713cf8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5575b6713cb0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5575b6713c98 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5575b6713c58 <col:151> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5575b6713ce0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5575b6713cc8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5575b6713c78 <col:169> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5575b6713d58 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5575b6713d18 <col:186> 'int' lvalue Var 0x5575b6712af0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5575b6713d70 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5575b6713d38 <col:198> 'int' lvalue Var 0x5575b6712af0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5575b67143f0 <line:735:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5575b6713ed8 <col:3> 'int' lvalue Var 0x5575b6712be8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5575b67143c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5575b6714390 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5575b6714378 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5575b6713ef8 <col:15> '_Bool' lvalue Var 0x5575b6712f30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5575b67143a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575b6713f40 <col:31> 'int' lvalue Var 0x5575b6712be8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5575b6714358 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5575b6714328 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5575b6714150 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5575b6714070 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5575b6713f98 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5575b6713f80 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5575b6713f60 <col:45> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5575b6714050 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5575b6713fe8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5575b6713fd0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5575b6713fb0 <col:64> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5575b6714038 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5575b6714020 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5575b6714000 <col:83> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5575b6714130 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5575b67140c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5575b67140b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5575b6714090 <col:102> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5575b6714118 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5575b6714100 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5575b67140e0 <col:121> '_Bool' lvalue Var 0x5575b6712888 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5575b6714310 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575b6714170 <col:138> 'int' lvalue Var 0x5575b6712be8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5575b67142f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5575b67142c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5575b6714230 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5575b67141e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5575b67141d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5575b6714190 <col:151> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5575b6714218 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5575b6714200 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5575b67141b0 <col:169> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5575b6714290 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5575b6714250 <col:186> 'int' lvalue Var 0x5575b6712be8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5575b67142a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5575b6714270 <col:198> 'int' lvalue Var 0x5575b6712be8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5575b6714998 <line:736:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6714410 <col:3> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575b6714980 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575b6714950 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5575b6714908 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575b67148f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575b6714430 <col:20> '_Bool' lvalue Var 0x5575b6712f30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575b6714938 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575b6714920 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575b6714450 <col:36> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5575b67148d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5575b67148a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5575b6714660 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575b6714580 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575b67144a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575b6714490 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575b6714470 <col:55> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575b6714560 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575b67144f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575b67144e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575b67144c0 <col:74> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5575b6714548 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575b6714530 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575b6714510 <col:93> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575b6714640 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575b67145d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575b67145c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575b67145a0 <col:112> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5575b6714628 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575b6714610 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575b67145f0 <col:131> '_Bool' lvalue Var 0x5575b6712888 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5575b6714888 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575b6714870 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575b6714680 <col:148> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5575b6714850 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5575b6714820 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5575b6714740 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575b67146f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575b67146e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575b67146a0 <col:166> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575b6714728 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575b6714710 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575b67146c0 <col:184> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5575b67147d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575b6714790 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575b6714760 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575b6714808 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5575b67147f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5575b67147b8 <col:212> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5575b6714f98 <line:737:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5575b67149b8 <col:3> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575b6714f80 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575b6714f50 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5575b6714ed0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575b6714eb8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575b67149d8 <col:20> '_Bool' lvalue Var 0x5575b6712f30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575b6714f00 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575b6714ee8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575b67149f8 <col:36> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5575b6714e98 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5575b6714e68 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5575b6714c08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575b6714b28 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575b6714a50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575b6714a38 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575b6714a18 <col:55> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575b6714b08 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575b6714aa0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575b6714a88 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575b6714a68 <col:74> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5575b6714af0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575b6714ad8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575b6714ab8 <col:93> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575b6714be8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575b6714b80 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575b6714b68 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575b6714b48 <col:112> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5575b6714bd0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575b6714bb8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575b6714b98 <col:131> '_Bool' lvalue Var 0x5575b6712888 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5575b6714e50 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575b6714e38 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575b6714c28 <col:148> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5575b6714e18 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5575b6714de8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5575b6714ce8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575b6714ca0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575b6714c88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575b6714c48 <col:166> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575b6714cd0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575b6714cb8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575b6714c68 <col:184> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5575b6714db8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575b6714d38 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575b6714d08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575b6714dd0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5575b6714d90 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5575b6714d60 <col:219> 'int' 0
|   |-BinaryOperator 0x5575b6715540 <line:738:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6714fb8 <col:3> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5575b6715528 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575b67154f8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5575b67154b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575b6715498 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575b6714fd8 <col:20> '_Bool' lvalue Var 0x5575b6712f30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575b67154e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575b67154c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575b6714ff8 <col:36> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x5575b6715478 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5575b6715448 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5575b6715208 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575b6715128 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575b6715050 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575b6715038 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575b6715018 <col:55> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575b6715108 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575b67150a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575b6715088 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575b6715068 <col:74> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5575b67150f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575b67150d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575b67150b8 <col:93> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575b67151e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575b6715180 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575b6715168 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575b6715148 <col:112> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5575b67151d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575b67151b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575b6715198 <col:131> '_Bool' lvalue Var 0x5575b6712888 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5575b6715430 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575b6715418 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575b6715228 <col:148> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x5575b67153f8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5575b67153c8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5575b67152e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575b67152a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575b6715288 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575b6715248 <col:166> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575b67152d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575b67152b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575b6715268 <col:184> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5575b6715380 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575b6715338 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575b6715308 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575b67153b0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5575b6715398 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5575b6715360 <col:212> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5575b6715b08 <line:739:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6715560 <col:3> '_Bool' lvalue Var 0x5575b6712888 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5575b6715af0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575b6715ac0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5575b6715a78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575b6715a60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575b6715580 <col:20> '_Bool' lvalue Var 0x5575b6712f30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575b6715aa8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575b6715a90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575b67155a0 <col:36> '_Bool' lvalue Var 0x5575b6712888 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x5575b6715a40 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5575b6715a10 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5575b67157b0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575b67156d0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575b67155f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575b67155e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575b67155c0 <col:55> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575b67156b0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575b6715648 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575b6715630 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575b6715610 <col:74> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5575b6715698 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575b6715680 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575b6715660 <col:93> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575b6715790 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575b6715728 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575b6715710 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575b67156f0 <col:112> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5575b6715778 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575b6715760 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575b6715740 <col:131> '_Bool' lvalue Var 0x5575b6712888 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5575b67159f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575b67159e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575b67157d0 <col:148> '_Bool' lvalue Var 0x5575b6712888 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x5575b67159c0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5575b6715990 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5575b6715890 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575b6715848 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575b6715830 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575b67157f0 <col:166> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575b6715878 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575b6715860 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575b6715810 <col:184> '_Bool' lvalue Var 0x5575b67126a8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5575b6715960 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575b67158e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575b67158b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575b6715978 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5575b6715938 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5575b6715908 <col:219> 'int' 0
|   |-BinaryOperator 0x5575b6715b80 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5575b6715b28 <col:3> 'int' lvalue Var 0x5575b6711860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5575b6715b68 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575b6715b48 <col:25> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   |-BinaryOperator 0x5575b6715cb0 <line:741:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5575b6715ba0 <col:3> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   | `-ConditionalOperator 0x5575b6715c80 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5575b6715c38 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5575b6715c20 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5575b6715bc0 <col:7> '_Bool' lvalue Var 0x5575b6712538 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5575b6715c50 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575b6715be0 <col:25> 'int' lvalue Var 0x5575b67125b8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5575b6715c68 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5575b6715c00 <col:37> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   |-BinaryOperator 0x5575b6715d48 <line:742:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6715cd0 <col:3> '_Bool' lvalue Var 0x5575b6712538 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5575b6715d20 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5575b6715cf0 <col:28> 'int' 0
|   |-CallExpr 0x5575b6715da0 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575b6715d88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b6715d68 <col:3> 'void ()' Function 0x5575b66b8570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575b6715df8 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575b6715de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b6715dc0 <col:3> 'void ()' Function 0x5575b66b84b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5575b6715e50 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575b6715e38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b6715e18 <col:3> 'void ()' Function 0x5575b66b8570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575b6715ea8 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575b6715e90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b6715e70 <col:3> 'void ()' Function 0x5575b66b84b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575b6715f80 <line:747:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5575b6715ec8 <col:3> 'int' lvalue Var 0x5575b6711740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5575b6715f60 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5575b6715f28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575b6715ee8 <col:22> 'int' lvalue Var 0x5575b6711740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5575b6715f08 <col:41> 'int' 1
|   |-CallExpr 0x5575b6715fd8 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575b6715fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b6715fa0 <col:3> 'void ()' Function 0x5575b66b8570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5575b6716088 <line:749:3, col:36>
|     `-CallExpr 0x5575b6716068 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5575b6716050 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5575b6715ff8 <col:10> 'void *(void)' Function 0x5575b66b7fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5575b6716230 prev 0x5575b6711268 <line:751:1, line:767:1> line:751:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5575b6716198 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5575b6717348 <line:752:1, line:767:1>
|   |-CallExpr 0x5575b6716310 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575b67162f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b67162d8 <col:3> 'void ()' Function 0x5575b66b84b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575b6716370 <line:754:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5575b6716330 <col:3> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   | `-IntegerLiteral 0x5575b6716350 <col:7> 'int' 1
|   |-CallExpr 0x5575b67163c8 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575b67163b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b6716390 <col:3> 'void ()' Function 0x5575b66b8570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575b6716420 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575b6716408 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b67163e8 <col:3> 'void ()' Function 0x5575b66b84b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575b6716708 <line:757:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5575b6716440 <col:3> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   | `-ConditionalOperator 0x5575b67166d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5575b6716500 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5575b67164b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5575b67164a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5575b6716460 <col:7> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5575b67164e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5575b67164d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5575b6716480 <col:25> '_Bool' lvalue Var 0x5575b6712720 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5575b67166c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575b6716520 <col:42> 'int' lvalue Var 0x5575b6712af0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5575b67166a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5575b6716670 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5575b67165e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5575b6716598 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5575b6716580 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5575b6716540 <col:55> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5575b67165c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5575b67165b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5575b6716560 <col:73> '_Bool' lvalue Var 0x5575b6712900 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5575b6716640 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575b6716600 <col:90> 'int' lvalue Var 0x5575b6712be8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5575b6716658 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575b6716620 <col:102> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   |-BinaryOperator 0x5575b6716910 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6716728 <col:3> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575b67168f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575b67168c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5575b67167e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5575b67167a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5575b6716788 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5575b6716748 <col:20> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5575b67167d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5575b67167b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5575b6716768 <col:38> '_Bool' lvalue Var 0x5575b6712720 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575b6716880 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575b6716838 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575b6716808 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5575b67168b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575b6716898 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575b6716860 <col:66> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5575b6716bf8 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6716930 <col:3> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575b6716be0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575b6716bb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5575b6716ad0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5575b67169f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5575b67169a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5575b6716990 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5575b6716950 <col:20> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5575b67169d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5575b67169c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5575b6716970 <col:38> '_Bool' lvalue Var 0x5575b6712720 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5575b6716ab0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5575b6716a68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5575b6716a50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5575b6716a10 <col:56> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5575b6716a98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5575b6716a80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5575b6716a30 <col:74> '_Bool' lvalue Var 0x5575b6712900 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575b6716b68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575b6716b20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575b6716af0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5575b6716b98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575b6716b80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575b6716b48 <col:102> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5575b6716e00 <line:760:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6716c18 <col:3> '_Bool' lvalue Var 0x5575b6712720 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5575b6716de8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575b6716db8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5575b6716cd8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5575b6716c90 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5575b6716c78 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5575b6716c38 <col:20> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5575b6716cc0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5575b6716ca8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5575b6716c58 <col:38> '_Bool' lvalue Var 0x5575b6712720 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575b6716d70 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575b6716d28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575b6716cf8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5575b6716da0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575b6716d88 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575b6716d50 <col:66> '_Bool' lvalue Var 0x5575b6712720 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5575b6717100 <line:761:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6716e20 <col:3> '_Bool' lvalue Var 0x5575b6712900 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5575b67170e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575b67170b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5575b6716fd8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5575b6716ee0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5575b6716e98 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5575b6716e80 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5575b6716e40 <col:20> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5575b6716ec8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5575b6716eb0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5575b6716e60 <col:38> '_Bool' lvalue Var 0x5575b6712720 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5575b6716fb8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5575b6716f70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5575b6716f40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5575b6716f00 <col:56> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5575b6716fa0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5575b6716f88 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5575b6716f20 <col:74> '_Bool' lvalue Var 0x5575b6712900 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575b6717070 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575b6717028 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575b6716ff8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5575b67170a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575b6717088 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575b6717050 <col:102> '_Bool' lvalue Var 0x5575b6712900 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5575b6717158 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575b6717140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b6717120 <col:3> 'void ()' Function 0x5575b66b8570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575b67171b0 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575b6717198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b6717178 <col:3> 'void ()' Function 0x5575b66b84b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575b6717268 <line:764:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5575b67171d0 <col:3> 'int' lvalue Var 0x5575b6711740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5575b6717248 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5575b6717230 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575b67171f0 <col:22> 'int' lvalue Var 0x5575b6711740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5575b6717210 <col:41> 'int' 1
|   |-CallExpr 0x5575b67172c0 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575b67172a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b6717288 <col:3> 'void ()' Function 0x5575b66b8570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5575b6717338 <line:766:3, col:36>
|     `-CallExpr 0x5575b6717318 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5575b6717300 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5575b67172e0 <col:10> 'void *(void)' Function 0x5575b66b7fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5575b6717478 prev 0x5575b67113c0 <line:768:1, line:802:1> line:768:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5575b67173e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5575b671b160 <line:769:1, line:802:1>
|   |-CallExpr 0x5575b6717558 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575b6717540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b6717520 <col:3> 'void ()' Function 0x5575b66b84b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575b67175f0 <line:771:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6717578 <col:3> '_Bool' lvalue Var 0x5575b6712df8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5575b67175d0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5575b67175b8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5575b6717598 <col:19> '_Bool (void)' Function 0x5575b66b7c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5575b6717688 <line:772:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6717610 <col:3> '_Bool' lvalue Var 0x5575b6712f30 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5575b6717668 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5575b6717650 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5575b6717630 <col:19> '_Bool (void)' Function 0x5575b66b7c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5575b6717700 <line:773:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5575b67176a8 <col:3> '_Bool' lvalue Var 0x5575b6712538 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5575b67176e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575b67176c8 <col:21> '_Bool' lvalue Var 0x5575b6712f30 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5575b6717778 <line:774:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5575b6717720 <col:3> 'int' lvalue Var 0x5575b67125b8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5575b6717760 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575b6717740 <col:15> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   |-BinaryOperator 0x5575b6717bb0 <line:775:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5575b6717798 <col:3> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   | `-ConditionalOperator 0x5575b6717b80 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5575b67179a8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5575b67178c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5575b67177f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5575b67177d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5575b67177b8 <col:8> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5575b67178a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5575b6717840 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5575b6717828 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5575b6717808 <col:27> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5575b6717890 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5575b6717878 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5575b6717858 <col:46> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5575b6717988 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5575b6717920 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5575b6717908 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5575b67178e8 <col:65> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5575b6717970 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5575b6717958 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5575b6717938 <col:84> '_Bool' lvalue Var 0x5575b6712978 'x$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5575b6717b68 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575b67179c8 <col:101> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   |   `-ParenExpr 0x5575b6717b48 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5575b6717b18 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5575b6717a88 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5575b6717a40 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5575b6717a28 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5575b67179e8 <col:106> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5575b6717a70 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5575b6717a58 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5575b6717a08 <col:124> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5575b6717ae8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575b6717aa8 <col:141> 'int' lvalue Var 0x5575b6712af0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5575b6717b00 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575b6717ac8 <col:153> 'int' lvalue Var 0x5575b6712be8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5575b67180e0 <line:776:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5575b6717bd0 <col:3> 'int' lvalue Var 0x5575b6712af0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5575b67180b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5575b6718080 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5575b6718068 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5575b6717bf0 <col:15> '_Bool' lvalue Var 0x5575b6712f30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5575b6718098 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575b6717c10 <col:31> 'int' lvalue Var 0x5575b6712af0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5575b6718048 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5575b6718018 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5575b6717e20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5575b6717d40 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5575b6717c68 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5575b6717c50 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5575b6717c30 <col:45> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5575b6717d20 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5575b6717cb8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5575b6717ca0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5575b6717c80 <col:64> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5575b6717d08 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5575b6717cf0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5575b6717cd0 <col:83> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5575b6717e00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5575b6717d98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5575b6717d80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5575b6717d60 <col:102> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5575b6717de8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5575b6717dd0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5575b6717db0 <col:121> '_Bool' lvalue Var 0x5575b6712978 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5575b6718000 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575b6717e40 <col:138> 'int' lvalue Var 0x5575b6712af0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5575b6717fe0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5575b6717fb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5575b6717f00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5575b6717eb8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5575b6717ea0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5575b6717e60 <col:151> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5575b6717ee8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5575b6717ed0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5575b6717e80 <col:169> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5575b6717f80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5575b6717f20 <col:186> 'int' lvalue Var 0x5575b6712af0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5575b6717f98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5575b6717f40 <col:198> 'int' lvalue Var 0x5575b6712af0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5575b67185f0 <line:777:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5575b6718100 <col:3> 'int' lvalue Var 0x5575b6712be8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5575b67185c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5575b6718590 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5575b6718578 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5575b6718120 <col:15> '_Bool' lvalue Var 0x5575b6712f30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5575b67185a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575b6718140 <col:31> 'int' lvalue Var 0x5575b6712be8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5575b6718558 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5575b6718528 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5575b6718350 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5575b6718270 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5575b6718198 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5575b6718180 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5575b6718160 <col:45> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5575b6718250 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5575b67181e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5575b67181d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5575b67181b0 <col:64> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5575b6718238 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5575b6718220 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5575b6718200 <col:83> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5575b6718330 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5575b67182c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5575b67182b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5575b6718290 <col:102> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5575b6718318 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5575b6718300 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5575b67182e0 <col:121> '_Bool' lvalue Var 0x5575b6712978 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5575b6718510 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575b6718370 <col:138> 'int' lvalue Var 0x5575b6712be8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5575b67184f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5575b67184c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5575b6718430 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5575b67183e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5575b67183d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5575b6718390 <col:151> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5575b6718418 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5575b6718400 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5575b67183b0 <col:169> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5575b6718490 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5575b6718450 <col:186> 'int' lvalue Var 0x5575b6712be8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5575b67184a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5575b6718470 <col:198> 'int' lvalue Var 0x5575b6712be8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5575b6718b98 <line:778:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6718610 <col:3> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575b6718b80 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575b6718b50 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5575b6718b08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575b6718af0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575b6718630 <col:20> '_Bool' lvalue Var 0x5575b6712f30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575b6718b38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575b6718b20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575b6718650 <col:36> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5575b6718ad0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5575b6718aa0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5575b6718860 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575b6718780 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575b67186a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575b6718690 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575b6718670 <col:55> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575b6718760 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575b67186f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575b67186e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575b67186c0 <col:74> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5575b6718748 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575b6718730 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575b6718710 <col:93> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575b6718840 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575b67187d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575b67187c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575b67187a0 <col:112> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5575b6718828 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575b6718810 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575b67187f0 <col:131> '_Bool' lvalue Var 0x5575b6712978 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5575b6718a88 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575b6718a70 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575b6718880 <col:148> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5575b6718a50 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5575b6718a20 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5575b6718940 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575b67188f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575b67188e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575b67188a0 <col:166> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575b6718928 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575b6718910 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575b67188c0 <col:184> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5575b67189d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575b6718990 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575b6718960 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575b6718a08 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5575b67189f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5575b67189b8 <col:212> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5575b6719170 <line:779:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6718bb8 <col:3> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575b6719158 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575b6719128 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5575b67190e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575b67190c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575b6718bd8 <col:20> '_Bool' lvalue Var 0x5575b6712f30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575b6719110 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575b67190f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575b6718bf8 <col:36> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5575b67190a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5575b6719078 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5575b6718e08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575b6718d28 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575b6718c50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575b6718c38 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575b6718c18 <col:55> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575b6718d08 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575b6718ca0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575b6718c88 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575b6718c68 <col:74> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5575b6718cf0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575b6718cd8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575b6718cb8 <col:93> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575b6718de8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575b6718d80 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575b6718d68 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575b6718d48 <col:112> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5575b6718dd0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575b6718db8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575b6718d98 <col:131> '_Bool' lvalue Var 0x5575b6712978 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5575b6719060 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575b6719048 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575b6718e28 <col:148> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5575b6719028 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5575b6718ff8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5575b6718ee8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575b6718ea0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575b6718e88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575b6718e48 <col:166> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575b6718ed0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575b6718eb8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575b6718e68 <col:184> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5575b6718fc8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575b6718f38 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575b6718f08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575b6718fe0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5575b6718fa0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5575b6718f60 <col:219> 'int' 0
|   |-BinaryOperator 0x5575b6719718 <line:780:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6719190 <col:3> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5575b6719700 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575b67196d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5575b6719688 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575b6719670 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575b67191b0 <col:20> '_Bool' lvalue Var 0x5575b6712f30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575b67196b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575b67196a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575b67191d0 <col:36> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5575b6719650 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5575b6719620 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5575b67193e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575b6719300 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575b6719228 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575b6719210 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575b67191f0 <col:55> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575b67192e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575b6719278 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575b6719260 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575b6719240 <col:74> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5575b67192c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575b67192b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575b6719290 <col:93> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575b67193c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575b6719358 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575b6719340 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575b6719320 <col:112> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5575b67193a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575b6719390 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575b6719370 <col:131> '_Bool' lvalue Var 0x5575b6712978 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5575b6719608 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575b67195f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575b6719400 <col:148> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5575b67195d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5575b67195a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5575b67194c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575b6719478 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575b6719460 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575b6719420 <col:166> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575b67194a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575b6719490 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575b6719440 <col:184> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5575b6719558 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575b6719510 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575b67194e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575b6719588 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5575b6719570 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5575b6719538 <col:212> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5575b6719ce0 <line:781:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6719738 <col:3> '_Bool' lvalue Var 0x5575b6712978 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5575b6719cc8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575b6719c98 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5575b6719c50 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575b6719c38 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575b6719758 <col:20> '_Bool' lvalue Var 0x5575b6712f30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575b6719c80 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575b6719c68 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575b6719778 <col:36> '_Bool' lvalue Var 0x5575b6712978 'x$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5575b6719c18 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5575b6719be8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5575b6719988 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575b67198a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575b67197d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575b67197b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575b6719798 <col:55> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575b6719888 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575b6719820 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575b6719808 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575b67197e8 <col:74> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5575b6719870 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575b6719858 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575b6719838 <col:93> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575b6719968 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575b6719900 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575b67198e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575b67198c8 <col:112> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5575b6719950 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575b6719938 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575b6719918 <col:131> '_Bool' lvalue Var 0x5575b6712978 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5575b6719bd0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575b6719bb8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575b67199a8 <col:148> '_Bool' lvalue Var 0x5575b6712978 'x$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5575b6719b98 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5575b6719b68 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5575b6719a68 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575b6719a20 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575b6719a08 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575b67199c8 <col:166> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575b6719a50 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575b6719a38 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575b67199e8 <col:184> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5575b6719b38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575b6719ab8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575b6719a88 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575b6719b50 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5575b6719b10 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5575b6719ae0 <col:219> 'int' 0
|   |-BinaryOperator 0x5575b6719d78 <line:782:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6719d00 <col:3> '_Bool' lvalue Var 0x5575b6711f20 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5575b6719d50 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5575b6719d20 <col:45> 'int' 1
|   |-BinaryOperator 0x5575b6719df0 <line:783:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x5575b6719d98 <col:3> 'int *' lvalue Var 0x5575b6711fa0 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x5575b6719dd8 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x5575b6719db8 <col:43> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   |-BinaryOperator 0x5575b6719e68 <line:784:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5575b6719e10 <col:3> 'int' lvalue Var 0x5575b6711980 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5575b6719e50 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575b6719e30 <col:25> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   |-BinaryOperator 0x5575b6719fd0 <line:785:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5575b6719e88 <col:3> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   | `-ConditionalOperator 0x5575b6719fa0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5575b6719f20 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5575b6719f08 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5575b6719ea8 <col:7> '_Bool' lvalue Var 0x5575b6712538 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5575b6719f38 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575b6719ec8 <col:25> 'int' lvalue Var 0x5575b67125b8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5575b6719f50 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5575b6719ee8 <col:37> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   |-BinaryOperator 0x5575b671a068 <line:786:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5575b6719ff0 <col:3> '_Bool' lvalue Var 0x5575b6712538 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5575b671a040 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5575b671a010 <col:28> 'int' 0
|   |-CallExpr 0x5575b671a0c0 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575b671a0a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b671a088 <col:3> 'void ()' Function 0x5575b66b8570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575b671a118 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575b671a100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b671a0e0 <col:3> 'void ()' Function 0x5575b66b84b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575b671a190 <line:789:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5575b671a138 <col:3> 'int' lvalue Var 0x5575b6712290 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x5575b671a178 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575b671a158 <col:25> 'int' lvalue Var 0x5575b6712d60 'y' 'int'
|   |-CallExpr 0x5575b671a1e8 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575b671a1d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b671a1b0 <col:3> 'void ()' Function 0x5575b66b8570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575b671a240 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575b671a228 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b671a208 <col:3> 'void ()' Function 0x5575b66b84b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575b671a528 <line:792:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5575b671a260 <col:3> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   | `-ConditionalOperator 0x5575b671a4f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5575b671a320 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5575b671a2d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5575b671a2c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5575b671a280 <col:7> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5575b671a308 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5575b671a2f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5575b671a2a0 <col:25> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5575b671a4e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575b671a340 <col:42> 'int' lvalue Var 0x5575b6712af0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5575b671a4c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5575b671a490 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5575b671a400 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5575b671a3b8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5575b671a3a0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5575b671a360 <col:55> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5575b671a3e8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5575b671a3d0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5575b671a380 <col:73> '_Bool' lvalue Var 0x5575b6712978 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5575b671a460 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575b671a420 <col:90> 'int' lvalue Var 0x5575b6712be8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5575b671a478 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575b671a440 <col:102> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
|   |-BinaryOperator 0x5575b671a730 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5575b671a548 <col:3> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575b671a718 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575b671a6e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5575b671a608 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5575b671a5c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5575b671a5a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5575b671a568 <col:20> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5575b671a5f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5575b671a5d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5575b671a588 <col:38> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5575b671a6a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575b671a658 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575b671a628 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5575b671a6d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575b671a6b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575b671a680 <col:66> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5575b671aa18 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5575b671a750 <col:3> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575b671aa00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575b671a9d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5575b671a8f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5575b671a810 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5575b671a7c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5575b671a7b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5575b671a770 <col:20> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5575b671a7f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5575b671a7e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5575b671a790 <col:38> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5575b671a8d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5575b671a888 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5575b671a870 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5575b671a830 <col:56> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5575b671a8b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5575b671a8a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5575b671a850 <col:74> '_Bool' lvalue Var 0x5575b6712978 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5575b671a988 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575b671a940 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575b671a910 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5575b671a9b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575b671a9a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575b671a968 <col:102> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5575b671ac20 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5575b671aa38 <col:3> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5575b671ac08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575b671abd8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5575b671aaf8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5575b671aab0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5575b671aa98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5575b671aa58 <col:20> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5575b671aae0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5575b671aac8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5575b671aa78 <col:38> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5575b671ab90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575b671ab48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575b671ab18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5575b671abc0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575b671aba8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575b671ab70 <col:66> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5575b671af08 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5575b671ac40 <col:3> '_Bool' lvalue Var 0x5575b6712978 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5575b671aef0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575b671aec0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5575b671ade0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5575b671ad00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5575b671acb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5575b671aca0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5575b671ac60 <col:20> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5575b671ace8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5575b671acd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5575b671ac80 <col:38> '_Bool' lvalue Var 0x5575b6712798 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5575b671adc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5575b671ad78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5575b671ad60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5575b671ad20 <col:56> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5575b671ada8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5575b671ad90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5575b671ad40 <col:74> '_Bool' lvalue Var 0x5575b6712978 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5575b671ae78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575b671ae30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575b671ae00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5575b671aea8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575b671ae90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575b671ae58 <col:102> '_Bool' lvalue Var 0x5575b6712978 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5575b671af60 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575b671af48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b671af28 <col:3> 'void ()' Function 0x5575b66b8570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575b671afc8 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575b671afb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b671af80 <col:3> 'void ()' Function 0x5575b66b84b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575b671b080 <line:799:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5575b671afe8 <col:3> 'int' lvalue Var 0x5575b6711740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5575b671b060 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5575b671b048 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575b671b008 <col:22> 'int' lvalue Var 0x5575b6711740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5575b671b028 <col:41> 'int' 1
|   |-CallExpr 0x5575b671b0d8 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575b671b0c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575b671b0a0 <col:3> 'void ()' Function 0x5575b66b8570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5575b671b150 <line:801:3, col:36>
|     `-CallExpr 0x5575b671b130 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5575b671b118 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5575b671b0f8 <col:10> 'void *(void)' Function 0x5575b66b7fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5575b671b290 prev 0x5575b6711488 <line:803:1, line:805:1> line:803:6 fence 'void ()'
| `-CompoundStmt 0x5575b671b330 <line:804:1, line:805:1>
|-FunctionDecl 0x5575b671b360 prev 0x5575b6711548 <line:806:1, line:808:1> line:806:6 isync 'void ()'
| `-CompoundStmt 0x5575b671b400 <line:807:1, line:808:1>
|-FunctionDecl 0x5575b671b430 prev 0x5575b6711608 <line:809:1, line:811:1> line:809:6 lwfence 'void ()'
| `-CompoundStmt 0x5575b671b4d0 <line:810:1, line:811:1>
`-FunctionDecl 0x5575b671b538 <line:812:1, line:838:1> line:812:5 main 'int ()'
  `-CompoundStmt 0x5575b671d490 <line:813:1, line:838:1>
    |-DeclStmt 0x5575b671b650 <line:814:3, col:18>
    | `-VarDecl 0x5575b671b5e8 <col:3, col:13> col:13 used t2463 'pthread_t':'unsigned long'
    |-CallExpr 0x5575b671b858 <line:815:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5575b671b840 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575b671b668 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5575b66f89d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5575b671b6a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5575b671b688 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5575b671b5e8 't2463' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5575b671b898 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5575b671b720 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5575b671b6f8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5575b671b6c0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5575b671b8b0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575b671b740 <col:39> 'void *(void *)' Function 0x5575b6713048 'P0' 'void *(void *)'
    | `-ParenExpr 0x5575b671b7c0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5575b671b798 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5575b671b760 <col:52> 'int' 0
    |-DeclStmt 0x5575b671b940 <line:816:3, col:18>
    | `-VarDecl 0x5575b671b8d8 <col:3, col:13> col:13 used t2464 'pthread_t':'unsigned long'
    |-CallExpr 0x5575b671bae8 <line:817:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5575b671bad0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575b671b958 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5575b66f89d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5575b671b998 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5575b671b978 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5575b671b8d8 't2464' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5575b671bb28 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5575b671ba10 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5575b671b9e8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5575b671b9b0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5575b671bb40 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575b671ba30 <col:39> 'void *(void *)' Function 0x5575b6716230 'P1' 'void *(void *)'
    | `-ParenExpr 0x5575b671bab0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5575b671ba88 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5575b671ba50 <col:52> 'int' 0
    |-DeclStmt 0x5575b671bbd0 <line:818:3, col:18>
    | `-VarDecl 0x5575b671bb68 <col:3, col:13> col:13 used t2465 'pthread_t':'unsigned long'
    |-CallExpr 0x5575b671bd78 <line:819:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5575b671bd60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575b671bbe8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5575b66f89d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5575b671bc28 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5575b671bc08 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5575b671bb68 't2465' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5575b671bdb8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5575b671bca0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5575b671bc78 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5575b671bc40 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5575b671bdd0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575b671bcc0 <col:39> 'void *(void *)' Function 0x5575b6717478 'P2' 'void *(void *)'
    | `-ParenExpr 0x5575b671bd40 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5575b671bd18 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5575b671bce0 <col:52> 'int' 0
    |-CallExpr 0x5575b671be20 <line:820:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5575b671be08 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575b671bde8 <col:3> 'void ()' Function 0x5575b66b84b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5575b671bef0 <line:821:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5575b671be40 <col:3> '_Bool' lvalue Var 0x5575b6712328 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5575b671bed8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5575b671beb8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5575b671bea0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5575b671be60 <col:21> 'int' lvalue Var 0x5575b6711740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5575b671be80 <col:41> 'int' 3
    |-CallExpr 0x5575b671bf48 <line:822:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5575b671bf30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575b671bf10 <col:3> 'void ()' Function 0x5575b66b8570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5575b671c008 <line:823:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5575b671bff0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575b671bf68 <col:3> 'void (int)' Function 0x5575b66b7e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5575b671c048 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5575b671c030 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5575b671bf88 <col:21> '_Bool' lvalue Var 0x5575b6712328 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5575b671c098 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5575b671c080 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575b671c060 <col:3> 'void ()' Function 0x5575b66b84b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5575b671c380 <line:825:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5575b671c0b8 <col:3> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
    | `-ConditionalOperator 0x5575b671c350 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5575b671c178 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5575b671c130 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5575b671c118 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5575b671c0d8 <col:7> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5575b671c160 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5575b671c148 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5575b671c0f8 <col:25> '_Bool' lvalue Var 0x5575b6712630 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5575b671c338 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5575b671c198 <col:42> 'int' lvalue Var 0x5575b6712af0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5575b671c318 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5575b671c2e8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5575b671c258 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5575b671c210 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5575b671c1f8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5575b671c1b8 <col:55> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5575b671c240 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5575b671c228 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5575b671c1d8 <col:73> '_Bool' lvalue Var 0x5575b6712810 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5575b671c2b8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5575b671c278 <col:90> 'int' lvalue Var 0x5575b6712be8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5575b671c2d0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5575b671c298 <col:102> 'int' lvalue Var 0x5575b67124a0 'x' 'int'
    |-BinaryOperator 0x5575b671c588 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5575b671c3a0 <col:3> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5575b671c570 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5575b671c540 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5575b671c460 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5575b671c418 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5575b671c400 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5575b671c3c0 <col:20> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5575b671c448 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5575b671c430 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5575b671c3e0 <col:38> '_Bool' lvalue Var 0x5575b6712630 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5575b671c4f8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5575b671c4b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5575b671c480 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5575b671c528 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5575b671c510 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5575b671c4d8 <col:66> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5575b671c870 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5575b671c5a8 <col:3> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5575b671c858 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5575b671c828 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5575b671c748 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5575b671c668 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5575b671c620 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5575b671c608 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5575b671c5c8 <col:20> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5575b671c650 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5575b671c638 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5575b671c5e8 <col:38> '_Bool' lvalue Var 0x5575b6712630 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5575b671c728 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5575b671c6e0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5575b671c6c8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5575b671c688 <col:56> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5575b671c710 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5575b671c6f8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5575b671c6a8 <col:74> '_Bool' lvalue Var 0x5575b6712810 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5575b671c7e0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5575b671c798 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5575b671c768 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5575b671c810 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5575b671c7f8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5575b671c7c0 <col:102> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5575b671ca78 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5575b671c890 <col:3> '_Bool' lvalue Var 0x5575b6712630 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5575b671ca60 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5575b671ca30 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5575b671c950 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5575b671c908 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5575b671c8f0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5575b671c8b0 <col:20> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5575b671c938 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5575b671c920 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5575b671c8d0 <col:38> '_Bool' lvalue Var 0x5575b6712630 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5575b671c9e8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5575b671c9a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5575b671c970 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5575b671ca18 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5575b671ca00 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5575b671c9c8 <col:66> '_Bool' lvalue Var 0x5575b6712630 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5575b671cd60 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5575b671ca98 <col:3> '_Bool' lvalue Var 0x5575b6712810 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5575b671cd48 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5575b671cd18 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5575b671cc38 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5575b671cb58 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5575b671cb10 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5575b671caf8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5575b671cab8 <col:20> '_Bool' lvalue Var 0x5575b6712b68 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5575b671cb40 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5575b671cb28 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5575b671cad8 <col:38> '_Bool' lvalue Var 0x5575b6712630 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5575b671cc18 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5575b671cbd0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5575b671cbb8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5575b671cb78 <col:56> '_Bool' lvalue Var 0x5575b6712c60 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5575b671cc00 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5575b671cbe8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5575b671cb98 <col:74> '_Bool' lvalue Var 0x5575b6712810 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5575b671ccd0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5575b671cc88 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5575b671cc58 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5575b671cd00 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5575b671cce8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5575b671ccb0 <col:102> '_Bool' lvalue Var 0x5575b6712810 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5575b671cdb8 <line:830:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5575b671cda0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575b671cd80 <col:3> 'void ()' Function 0x5575b66b8570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5575b671ce10 <line:831:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5575b671cdf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575b671cdd8 <col:3> 'void ()' Function 0x5575b66b84b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5575b671cea8 <line:832:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x5575b671ce30 <col:3> '_Bool' lvalue Var 0x5575b6712e70 'weak$$choice1' '_Bool'
    | `-CallExpr 0x5575b671ce88 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x5575b671ce70 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x5575b671ce50 <col:19> '_Bool (void)' Function 0x5575b66b7c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x5575b671d100 <line:833:3, col:140> 'int' '='
    | |-DeclRefExpr 0x5575b671cec8 <col:3> 'int' lvalue Var 0x5575b6711980 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x5575b671d0d0 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x5575b671d0a0 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5575b671d088 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5575b671cee8 <col:25> '_Bool' lvalue Var 0x5575b6711f20 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x5575b671d048 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x5575b671d018 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x5575b671cfd0 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x5575b671cf98 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5575b671cf08 <col:61> '_Bool' lvalue Var 0x5575b6712e70 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x5575b671cfe8 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x5575b671cf60 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x5575b671cf48 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x5575b671cf28 <col:78> 'int *' lvalue Var 0x5575b6711fa0 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x5575b671d000 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5575b671cf78 <col:117> 'int' lvalue Var 0x5575b6711980 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x5575b671d0b8 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5575b671d068 <col:140> 'int' lvalue Var 0x5575b6711980 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x5575b671d338 <line:834:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x5575b671d120 <col:3> '_Bool' lvalue Var 0x5575b67123a0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5575b671d320 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5575b671d308 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5575b671d2e8 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x5575b671d2c8 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x5575b671d230 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x5575b671d198 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x5575b671d180 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x5575b671d140 <col:23> 'int' lvalue Var 0x5575b6711860 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x5575b671d160 <col:46> 'int' 0
    |         | `-BinaryOperator 0x5575b671d210 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5575b671d1f8 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5575b671d1b8 <col:51> 'int' lvalue Var 0x5575b6711980 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x5575b671d1d8 <col:74> 'int' 1
    |         `-BinaryOperator 0x5575b671d2a8 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x5575b671d290 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5575b671d250 <col:79> 'int' lvalue Var 0x5575b6712290 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x5575b671d270 <col:102> 'int' 0
    |-CallExpr 0x5575b671d390 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5575b671d378 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575b671d358 <col:3> 'void ()' Function 0x5575b66b8570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5575b671d408 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5575b671d3f0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575b671d3b0 <col:3> 'void (int)' Function 0x5575b66b8238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5575b671d448 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5575b671d430 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5575b671d3d0 <col:21> '_Bool' lvalue Var 0x5575b67123a0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5575b671d480 <line:837:3, col:10>
      `-IntegerLiteral 0x5575b671d460 <col:10> 'int' 0
