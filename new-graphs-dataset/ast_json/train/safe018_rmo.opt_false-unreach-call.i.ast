TranslationUnitDecl 0x5585acc31f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5585acc32848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5585acc32520 '__int128'
|-TypedefDecl 0x5585acc328b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5585acc32540 'unsigned __int128'
|-TypedefDecl 0x5585acc32bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5585acc32990 'struct __NSConstantString_tag'
|   `-Record 0x5585acc32910 '__NSConstantString_tag'
|-TypedefDecl 0x5585acc32c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5585acc32c20 'char *'
|   `-BuiltinType 0x5585acc32020 'char'
|-TypedefDecl 0x5585acc71b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5585acc32f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5585acc32d40 'struct __va_list_tag'
|     `-Record 0x5585acc32cc0 '__va_list_tag'
|-FunctionDecl 0x5585acc71c80 <pthread-wmm/safe018_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x5585acc71e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5585acc71d80 <col:31> col:34 'int'
|-FunctionDecl 0x5585acc71fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5585acc720f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5585acc72238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5585acc721a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5585acc72468 <col:40, col:99>
|   |-IfStmt 0x5585acc72438 <col:42, col:88>
|   | |-UnaryOperator 0x5585acc72318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5585acc72300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5585acc722e0 <col:47> 'int' lvalue ParmVar 0x5585acc721a8 'expression' 'int'
|   | `-CompoundStmt 0x5585acc72420 <col:59, col:88>
|   |   `-LabelStmt 0x5585acc72408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5585acc72398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5585acc72380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5585acc72330 <col:68> 'void () __attribute__((noreturn))' Function 0x5585acc720f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5585acc72450 <col:89>
|   `-ReturnStmt 0x5585acc72458 <col:91>
|-FunctionDecl 0x5585acc724b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5585acc72570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5585acc728f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5585acc72628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5585acc726a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5585acc72728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5585acc727a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5585acc729b0 <line:11:22>
|-FunctionDecl 0x5585acc97f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5585acc72a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5585acc72aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5585acc97d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5585acc97dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5585acc97fd0 <line:14:22>
|-FunctionDecl 0x5585acc98280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5585acc98040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5585acc980c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5585acc98140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5585acc98338 <line:16:22>
|-TypedefDecl 0x5585acc983a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5585acc320e0 'unsigned char'
|-TypedefDecl 0x5585acc98418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5585acc32100 'unsigned short'
|-TypedefDecl 0x5585acc98488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5585acc32120 'unsigned int'
|-TypedefDecl 0x5585acc984f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-TypedefDecl 0x5585acc98568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5585acc32040 'signed char'
|-TypedefDecl 0x5585acc985d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5585acc320e0 'unsigned char'
|-TypedefDecl 0x5585acc98648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5585acc32060 'short'
|-TypedefDecl 0x5585acc986b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5585acc32100 'unsigned short'
|-TypedefDecl 0x5585acc98728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5585acc32080 'int'
|-TypedefDecl 0x5585acc98798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5585acc32120 'unsigned int'
|-TypedefDecl 0x5585acc98808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc98878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-TypedefDecl 0x5585acc988e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc98958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-TypedefDecl 0x5585acc989c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-TypedefDecl 0x5585acc98a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5585acc32120 'unsigned int'
|-TypedefDecl 0x5585acc98aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5585acc32120 'unsigned int'
|-TypedefDecl 0x5585acc98b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-TypedefDecl 0x5585acc98b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-TypedefDecl 0x5585acc98bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5585acc32120 'unsigned int'
|-TypedefDecl 0x5585acc98c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-TypedefDecl 0x5585acc98cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc98d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc98dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5585acc32080 'int'
|-RecordDecl 0x5585acc98e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x5585acc98f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5585acc99030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5585acc98fd0 'struct __fsid_t' sugar
|   `-RecordType 0x5585acc98eb0 '__fsid_t'
|     `-Record 0x5585acc98e30 ''
|-TypedefDecl 0x5585acc990b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc99128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-TypedefDecl 0x5585acc99198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-TypedefDecl 0x5585acc99208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5585acc32120 'unsigned int'
|-TypedefDecl 0x5585acc99278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc992e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5585acc32120 'unsigned int'
|-TypedefDecl 0x5585acc99358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc993c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5585acc32080 'int'
|-TypedefDecl 0x5585acc99438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5585acc32080 'int'
|-TypedefDecl 0x5585acc994a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5585acc32080 'int'
|-TypedefDecl 0x5585acc99518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5585acc327a0 'void *'
|   `-BuiltinType 0x5585acc31fe0 'void'
|-TypedefDecl 0x5585acc99588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc995f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc99668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc996d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-TypedefDecl 0x5585acc99748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-TypedefDecl 0x5585acc997b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-TypedefDecl 0x5585acc99828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-TypedefDecl 0x5585acc99898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc99908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc99978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc999e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-TypedefDecl 0x5585acc99a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5585acc99a40 '__off64_t' sugar
|   |-Typedef 0x5585acc98d68 '__off64_t'
|   `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc99b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5585acc99b30 '__quad_t *'
|   `-TypedefType 0x5585acc99ad0 '__quad_t' sugar
|     |-Typedef 0x5585acc988e8 '__quad_t'
|     `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc99be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5585acc32c20 'char *'
|   `-BuiltinType 0x5585acc32020 'char'
|-TypedefDecl 0x5585acc99c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc99cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5585acc32120 'unsigned int'
|-FunctionDecl 0x5585acc99e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5585acc99d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5585acc9a148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x5585acc9a138 <line:73:3, col:34>
|     `-CallExpr 0x5585acc9a0f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5585acc9a0e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5585acc9a070 <col:10> '<builtin fn type>' Function 0x5585acc99ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5585acc9a120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5585acc9a090 <col:29> 'unsigned int' lvalue ParmVar 0x5585acc99d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x5585acc99ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5585acc99f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5585acc99ff0 <col:10> Implicit
| `-ConstAttr 0x5585acc9a048 <col:10> Implicit
|-FunctionDecl 0x5585acc9a2a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5585acc9a198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5585acc9a5b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5585acc9a5a8 <line:78:3, col:34>
|     `-CallExpr 0x5585acc9a568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5585acc9a550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5585acc9a4d8 <col:10> '<builtin fn type>' Function 0x5585acc9a348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5585acc9a590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5585acc9a4f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5585acc9a198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5585acc9a348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5585acc9a3e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5585acc9a458 <col:10> Implicit
| `-ConstAttr 0x5585acc9a4b0 <col:10> Implicit
|-TypedefDecl 0x5585acc9a5e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-TypedefDecl 0x5585acc9a678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5585acc9a640 '__time_t' sugar
|   |-Typedef 0x5585acc99278 '__time_t'
|   `-BuiltinType 0x5585acc320a0 'long'
|-RecordDecl 0x5585acc9a6d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x5585acc9a788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5585acc9a818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5585acc9a8a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5585acc9a870 '__pid_t' sugar
|   |-Typedef 0x5585acc98dd8 '__pid_t'
|   `-BuiltinType 0x5585acc32080 'int'
|-RecordDecl 0x5585acc9a900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5585acc9a9c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5585acc9aa10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x5585acc9aad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5585acc9ab38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-RecordDecl 0x5585acc9ab90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x5585acc9ce70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5585acc9cf20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5585acc9cec0 'struct cpu_set_t' sugar
|   `-RecordType 0x5585acc9ac10 'cpu_set_t'
|     `-Record 0x5585acc9ab90 ''
|-FunctionDecl 0x5585acc9d1f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5585acc9cfc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5585acc9d0d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5585acc9d2a8 <line:108:19>
|-FunctionDecl 0x5585acc9d480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5585acc9d310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5585acc9d528 <col:69>
|-FunctionDecl 0x5585acc9d6a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5585acc9d590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5585acc9d748 <col:64>
|-FunctionDecl 0x5585acc9da08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5585acc9d7b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5585acc9d8e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5585acc9dab8 <line:114:22>
|-FunctionDecl 0x5585acc9de60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5585acc9db20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5585acc9dc18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5585acc9df10 <col:88>
|-FunctionDecl 0x5585acc9e1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5585acc9df78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5585acc9dff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5585acc9e088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5585acc9e280 <col:62>
|-FunctionDecl 0x5585acc9e3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5585acc9e2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5585acc9e4a0 <col:63>
|-FunctionDecl 0x5585acc9e5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5585acc9e668 <col:47>
|-FunctionDecl 0x5585acc9e770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5585acc9e6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5585acc9e818 <col:69>
|-FunctionDecl 0x5585acc9e920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5585acc9e888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5585acc9e9c8 <col:69>
|-FunctionDecl 0x5585acc9ec88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5585acc9ea30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5585acc9eb68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5585acc9ed38 <col:88>
|-TypedefDecl 0x5585acc9edc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5585acc9ed90 '__clock_t' sugar
|   |-Typedef 0x5585acc990b8 '__clock_t'
|   `-BuiltinType 0x5585acc320a0 'long'
|-TypedefDecl 0x5585acc9f7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5585acc9ee20 '__clockid_t' sugar
|   |-Typedef 0x5585acc994a8 '__clockid_t'
|   `-BuiltinType 0x5585acc32080 'int'
|-TypedefDecl 0x5585acc9f878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5585acc9f840 '__timer_t' sugar
|   |-Typedef 0x5585acc99518 '__timer_t'
|   `-PointerType 0x5585acc327a0 'void *'
|     `-BuiltinType 0x5585acc31fe0 'void'
|-RecordDecl 0x5585acc9f8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x5585acc9f990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5585acc9f9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5585acc9fa60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5585acc9fac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5585acc9fb30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5585acc9fb98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5585acc9fc00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5585acc9fc68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5585acc9fcd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5585acc9fd38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5585acc9fda0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5585acc9fdf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x5585acc9feb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5585acc9ff28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5585acc9ffd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5585acca01a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5585acca0240 <col:45>
|-FunctionDecl 0x5585acca0420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5585acca0310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5585acca04c8 <col:54>
|-FunctionDecl 0x5585acca06c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5585acca0530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5585acca05a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5585acca0778 <line:158:22>
| `-ConstAttr 0x5585acca1410 <col:63>
|-FunctionDecl 0x5585acca1610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5585acca1508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5585acca16b8 <col:56>
|-FunctionDecl 0x5585acca1a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5585acca1728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5585acca17a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5585acca1820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5585acca1918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5585acca1b20 <col:54>
|-RecordDecl 0x5585acca1b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x5585acca1c28 parent 0x5585acc31f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5585acca1e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5585acca1f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5585acca1f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5585acca1ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5585acca20e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5585acca2208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5585acca21b0 'struct __locale_struct *'
|   `-ElaboratedType 0x5585acca2140 'struct __locale_struct' sugar
|     `-RecordType 0x5585acca1c00 'struct __locale_struct'
|       `-Record 0x5585acca1b78 '__locale_struct'
|-TypedefDecl 0x5585acca22b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5585acca2280 '__locale_t' sugar
|   |-Typedef 0x5585acca2208 '__locale_t'
|   `-PointerType 0x5585acca21b0 'struct __locale_struct *'
|     `-ElaboratedType 0x5585acca2140 'struct __locale_struct' sugar
|       `-RecordType 0x5585acca1c00 'struct __locale_struct'
|         `-Record 0x5585acca1b78 '__locale_struct'
|-FunctionDecl 0x5585acca26b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5585acca2328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5585acca23a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5585acca2438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5585acca24c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5585acca2540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5585acca2778 <col:40>
|-FunctionDecl 0x5585acca2968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5585acca2840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5585acca2a10 <col:66>
|-FunctionDecl 0x5585acca2b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5585acca2a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5585acca2bc8 <col:69>
|-FunctionDecl 0x5585acca2df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5585acca2c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5585acca2cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5585acca2ea8 <col:52>
|-FunctionDecl 0x5585acca3050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5585acca2f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5585acca2fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5585acca3100 <col:55>
|-FunctionDecl 0x5585acca3298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5585acca3180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5585acca3340 <col:62>
|-FunctionDecl 0x5585acca3578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5585acca33a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5585acca3620 <col:60>
|-FunctionDecl 0x5585acca3848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5585acca36a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5585acca3720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5585acca38f8 <col:44>
|-FunctionDecl 0x5585acca3b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5585acca3960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5585acca39e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5585acca3bb8 <col:49>
|-VarDecl 0x5585acca3cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5585acca3d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5585acca3db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5585acca3e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5585acca3fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5585acca4050 <col:42>
|-VarDecl 0x5585acca40c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5585acca4140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5585acca42c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5585acca41b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5585acca4370 <col:57>
|-FunctionDecl 0x5585acca54f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5585acca43f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5585acca5598 <col:56>
|-FunctionDecl 0x5585acca56a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5585acca5618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5585acca5750 <col:59>
|-FunctionDecl 0x5585acca5858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5585acca57c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5585acca5900 <col:48>
| `-ConstAttr 0x5585acca5958 <col:89>
|-FunctionDecl 0x5585acca5bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5585acca5a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5585acca5a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5585acca5e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5585acca5ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5585acca5d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5585acca5ec8 <col:88>
|-FunctionDecl 0x5585acca6060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5585acca5f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5585acca5fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5585acca6110 <col:88>
|-FunctionDecl 0x5585acca6328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5585acca6178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5585acca6208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5585acca63d8 <line:209:22>
|-FunctionDecl 0x5585acca6778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5585acca6440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5585acca6500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5585acca6590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5585acca6620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5585acca6a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5585acca6878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5585acca6950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5585acca6b28 <col:85>
|-FunctionDecl 0x5585acca6f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5585acca6b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5585acca6cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5585acca6dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5585acca6fd0 <col:52>
|-FunctionDecl 0x5585acca7148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5585acca7038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5585acca71f0 <col:61>
|-FunctionDecl 0x5585acca7668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5585acca7258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5585acca72d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5585acca7408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5585acca7510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5585acca7728 <col:62>
|-FunctionDecl 0x5585acca7948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5585acca7790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5585acca7820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5585acca79f8 <line:222:22>
|-FunctionDecl 0x5585acca7af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5585acca7a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5585acca7ba0 <col:65>
|-TypedefDecl 0x5585acca7c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5585acc32140 'unsigned long'
|-RecordDecl 0x5585acca7c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x5585acca7db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5585acca7e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5585acca7ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5585acca7e70 'union pthread_attr_t' sugar
|   `-RecordType 0x5585acca7cf0 'union pthread_attr_t'
|     `-Record 0x5585acca7c68 'pthread_attr_t'
|-RecordDecl 0x5585acca7f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5585acca8098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5585acca8110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5585acca81c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5585acca8160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5585acca7fa0 'struct __pthread_internal_list'
|     `-Record 0x5585acca7f20 '__pthread_internal_list'
|-RecordDecl 0x5585acca8230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x5585acca82d8 parent 0x5585acc31f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5585acca83b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5585acca8418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5585acca8480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5585accac530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5585accac598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5585accac600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5585accac688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5585accac740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5585accac830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5585accac898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5585accaca20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5585accac9c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5585acca82b0 'pthread_mutex_t'
|     `-Record 0x5585acca8230 ''
|-RecordDecl 0x5585accaca90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x5585accacbd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5585accacc38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5585accaccf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5585accacc90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5585accacb10 'pthread_mutexattr_t'
|     `-Record 0x5585accaca90 ''
|-RecordDecl 0x5585accacd60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x5585accace08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x5585accaced0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5585accacf38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5585accacfa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5585accad008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5585accad070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5585accad0d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5585accad140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5585accad1a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5585accad260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe018_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe018_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x5585accad350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5585accad3b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5585accad540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5585accad490 'union pthread_cond_t' sugar
|   `-RecordType 0x5585accacde0 'pthread_cond_t'
|     `-Record 0x5585accacd60 ''
|-RecordDecl 0x5585accad5b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5585accad6b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5585accad718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5585accad7d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5585accad770 'union pthread_condattr_t' sugar
|   `-RecordType 0x5585accad630 'pthread_condattr_t'
|     `-Record 0x5585accad5b0 ''
|-TypedefDecl 0x5585accad858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5585acc32120 'unsigned int'
|-TypedefDecl 0x5585accad8c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5585acc32080 'int'
|-RecordDecl 0x5585accad920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5585accad9c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x5585accada90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5585accadaf8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5585accadb60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5585accadbc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5585accadc30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5585accadc98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5585accadd00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5585accadd68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5585accaddd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5585accade38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5585accadea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5585accadf50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe018_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe018_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x5585accadff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5585accae060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5585accae1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5585accae150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5585accad9a0 'pthread_rwlock_t'
|     `-Record 0x5585accad920 ''
|-RecordDecl 0x5585accae220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x5585accae360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5585accae3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5585accae480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5585accae420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5585accae2a0 'pthread_rwlockattr_t'
|     `-Record 0x5585accae220 ''
|-TypedefDecl 0x5585accb0560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5585acc32084 'volatile int' volatile
|   `-BuiltinType 0x5585acc32080 'int'
|-RecordDecl 0x5585accb05b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x5585accb0700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5585accb0768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5585accb0820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5585accb07c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x5585accb0640 'pthread_barrier_t'
|     `-Record 0x5585accb05b8 ''
|-RecordDecl 0x5585accb0890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x5585accb0990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5585accb09f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5585accb0ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5585accb0a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5585accb0910 'pthread_barrierattr_t'
|     `-Record 0x5585accb0890 ''
|-TypedefDecl 0x5585accb0bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5585accb0b60 'long [8]' 8 
|   `-BuiltinType 0x5585acc320a0 'long'
|-EnumDecl 0x5585accb0c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x5585accb0ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5585accb0d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5585accb0d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x5585accb0e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5585accb0ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5585accb0ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5585accb0f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5585accb0fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5585accb0fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x5585accb0f98 <col:26> 'int' EnumConstant 0x5585accb0e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5585accb1058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5585accb1040 <col:29> 'int'
| |   `-DeclRefExpr 0x5585accb1020 <col:29> 'int' EnumConstant 0x5585accb0ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5585accb10e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5585accb10c8 <col:30> 'int'
| |   `-DeclRefExpr 0x5585accb10a8 <col:30> 'int' EnumConstant 0x5585accb0ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5585accb1168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5585accb1150 <col:27> 'int'
|     `-DeclRefExpr 0x5585accb1130 <col:27> 'int' EnumConstant 0x5585accb0fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5585accb11b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x5585accb1288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5585accb1310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5585accb12f8 <col:30> 'int'
| |   `-DeclRefExpr 0x5585accb12d8 <col:30> 'int' EnumConstant 0x5585accb1288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5585accb1360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5585accb13e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5585accb13d0 <col:29> 'int'
|     `-DeclRefExpr 0x5585accb13b0 <col:29> 'int' EnumConstant 0x5585accb1360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5585accb1438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x5585accb1508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5585accb1570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5585accb15c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5585accb1610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5585accb16d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5585accb1728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5585accb1778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5585accb1800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5585accb17e8 <col:31> 'int'
|     `-DeclRefExpr 0x5585accb17c8 <col:31> 'int' EnumConstant 0x5585accb16d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5585accb1850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x5585accb1918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5585accb1968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5585accb19b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x5585accb1a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5585accb1ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5585accb1b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x5585accb1bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5585accb1c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5585accb1c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5585accb1ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5585accb1f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5585accb1fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5585accb20c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5585accb2118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x5585accb21e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5585accb2238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5585accb2288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x5585accb2358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5585accb23a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5585accb29d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5585accb24a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5585accb25c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585accb27c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5585accb2840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5585accb2a98 <col:47>
| |-NonNullAttr 0x5585accb2af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5585accb2b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x5585accb2c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5585accb2b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5585accb2ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5585accb2d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5585accb2d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5585accb3078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5585accb2f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5585accb3120 <col:60>
|-FunctionDecl 0x5585accb3270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5585accb3310 <col:54>
| `-ConstAttr 0x5585accb3368 <col:95>
|-FunctionDecl 0x5585accb3da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5585accb33a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5585accb3418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5585accb3e50 <line:395:19>
| `-ConstAttr 0x5585accb3ea8 <col:60>
|-FunctionDecl 0x5585accb4078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5585accb3f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5585accb4120 <col:71>
| `-NonNullAttr 0x5585accb4178 <col:112, col:126> 1
|-FunctionDecl 0x5585accb4280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5585accb41c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5585accb4328 <line:398:22>
| `-NonNullAttr 0x5585accb4380 <col:63, col:77> 1
|-FunctionDecl 0x5585accb45a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5585accb43c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5585accb4448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5585accb4658 <line:401:22>
| `-NonNullAttr 0x5585accb46b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accb48b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5585accb46f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5585accb4778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5585accb4968 <line:404:22>
| `-NonNullAttr 0x5585accb49c0 <col:63, col:77> 1
|-FunctionDecl 0x5585accb4c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5585accb4a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5585accb4ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5585accb4cc8 <line:407:22>
| `-NonNullAttr 0x5585accb4d20 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accb5f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5585accb5dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5585accb5e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5585accb6028 <line:410:22>
| `-NonNullAttr 0x5585accb6080 <col:63, col:77> 1
|-FunctionDecl 0x5585accb62b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5585accb60c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585accb6158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5585accb6368 <line:413:22>
| `-NonNullAttr 0x5585accb63c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accb65f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5585accb6408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585accb6498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5585accb66a8 <col:37>
| `-NonNullAttr 0x5585accb6700 <col:78, col:95> 1 2
|-FunctionDecl 0x5585accb68e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585accb6748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585accb67c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5585accb6998 <line:419:22>
| `-NonNullAttr 0x5585accb69f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accb6b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5585accb6a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5585accb6ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5585accb6c28 <line:421:22>
| `-NonNullAttr 0x5585accb6c80 <col:63, col:77> 1
|-FunctionDecl 0x5585accb7e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585accb6cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585accb6d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5585accb7f08 <line:424:22>
| `-NonNullAttr 0x5585accb7f60 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accb80e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5585accb7fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5585accb8028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5585accb8198 <line:427:22>
| `-NonNullAttr 0x5585accb81f0 <col:63, col:77> 1
|-FunctionDecl 0x5585accb8398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585accb8238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585accb82b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5585accb8448 <line:430:22>
| `-NonNullAttr 0x5585accb84a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accb8628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5585accb84e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5585accb8568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5585accb86d8 <line:432:22>
| `-NonNullAttr 0x5585accb8730 <col:63, col:77> 1
|-FunctionDecl 0x5585accb8958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5585accb8778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585accb87f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5585accb8a08 <line:435:22>
| |-NonNullAttr 0x5585accb8a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5585accb8a98 <col:100> "" ""
|-FunctionDecl 0x5585accb8ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5585accb8ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5585accb8b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5585accb8d58 <line:438:22>
| |-NonNullAttr 0x5585accb8db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x5585accb8df8 <col:97> "" ""
|-FunctionDecl 0x5585accb8fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5585accb8e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585accb8ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5585accb9098 <line:441:22>
| `-NonNullAttr 0x5585accb90f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accb9270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5585accb9138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5585accb91b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5585accb9320 <line:444:22>
| `-NonNullAttr 0x5585accb9378 <col:63, col:77> 1
|-FunctionDecl 0x5585accb9668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5585accb93c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585accb9448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5585accb94c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5585accb9720 <line:448:22>
| `-NonNullAttr 0x5585accb9778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5585accb9a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5585accb97d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5585accb9850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5585accb98c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5585accb9ae0 <col:43>
| `-NonNullAttr 0x5585accb9b38 <col:84, col:98> 1
|-FunctionDecl 0x5585accb9e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5585accb9b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5585accb9c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5585accb9c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5585accb9ef8 <line:453:22>
| `-NonNullAttr 0x5585accb9f50 <col:63, col:77> 3
|-FunctionDecl 0x5585accba228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5585accb9f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5585accba018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5585accba0a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5585accba2e0 <line:457:22>
| `-NonNullAttr 0x5585accba338 <col:63, col:80> 2 3
|-FunctionDecl 0x5585accba528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5585accba388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5585accba408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5585accba5d8 <line:459:22>
|-FunctionDecl 0x5585accba9a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5585accba6a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5585accba840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5585accbaa58 <col:52, col:69> 1 2
|-FunctionDecl 0x5585accbac00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5585accbaae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5585accbab60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5585accbae10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5585accbacc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5585accbad48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5585accbaf68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5585accbaed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5585accbb0a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5585accbb148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x5585accbb1f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x5585accbb2e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5585accbb350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5585accbb520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe018_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x5585accbb618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5585accbb6d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5585accbb670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5585accbb1d0 '__pthread_unwind_buf_t'
| |   `-Record 0x5585accbb148 ''
| `-AlignedAttr 0x5585accbb728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5585accbb7a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5585accbb900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5585accbb968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5585accbb9d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5585accbba38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5585accbbc40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5585accbbb30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5585accbbe20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5585accbbcf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5585accbbfe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5585accbbed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5585accbc088 <line:488:22>
|-RecordDecl 0x5585accbc0e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5585accbc3f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5585accbc258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5585accbc2d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5585accbc4a8 <col:86>
| `-ReturnsTwiceAttr 0x5585accbc500 <col:12> Implicit
|-FunctionDecl 0x5585accbc828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5585accbc5d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5585accbc6e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5585accbc8d8 <line:494:22>
| `-NonNullAttr 0x5585accbc930 <col:63, col:77> 1
|-FunctionDecl 0x5585accbcaa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5585accbc978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5585accbcb50 <line:496:22>
| `-NonNullAttr 0x5585accbcba8 <col:63, col:77> 1
|-FunctionDecl 0x5585accbccb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5585accbcbf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5585accbcd58 <line:498:22>
| `-NonNullAttr 0x5585accbcdb0 <col:52, col:66> 1
|-FunctionDecl 0x5585accbcee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5585accbce30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5585accbcf90 <line:500:22>
| `-NonNullAttr 0x5585accbcfe8 <col:52, col:66> 1
|-FunctionDecl 0x5585accbd228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5585accbd038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5585accbd0c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5585accbd2d8 <col:36>
| `-NonNullAttr 0x5585accbd330 <col:66, col:83> 1 2
|-FunctionDecl 0x5585accbd430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5585accbd378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5585accbd4d8 <line:505:22>
| `-NonNullAttr 0x5585accbd530 <col:52, col:66> 1
|-FunctionDecl 0x5585accbd7c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585accbd5e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5585accbd660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5585accbd878 <line:509:22>
| `-NonNullAttr 0x5585accbd8d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accbdb98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5585accbd918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5585accbd998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5585accbda18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5585accbdc50 <line:513:22>
| `-NonNullAttr 0x5585accbdca8 <col:63, col:80> 1 3
|-FunctionDecl 0x5585accbde40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5585accbdcf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5585accbdee8 <line:515:22>
| `-NonNullAttr 0x5585accbdf40 <col:63, col:77> 1
|-FunctionDecl 0x5585accbe128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5585accbdff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5585accbe1d0 <line:517:22>
| `-NonNullAttr 0x5585accbe228 <col:63, col:77> 1
|-FunctionDecl 0x5585accbe330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5585accbe278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5585accbe3d8 <line:519:22>
| `-NonNullAttr 0x5585accbe430 <col:63, col:77> 1
|-FunctionDecl 0x5585accbe658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585accbe478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5585accbe4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5585accbe708 <line:523:22>
| `-NonNullAttr 0x5585accbe760 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accbe968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5585accbe7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5585accbe828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5585accbea18 <line:526:22>
| `-NonNullAttr 0x5585accbea70 <col:63, col:77> 1
|-FunctionDecl 0x5585accbec18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585accbeab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5585accbeb38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5585accbecc8 <line:529:22>
| `-NonNullAttr 0x5585accbed20 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accbff20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5585accbed68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5585accbfe60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5585accbffd0 <line:531:22>
| `-NonNullAttr 0x5585accc0028 <col:63, col:77> 1
|-FunctionDecl 0x5585accc01d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585accc0078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5585accc00f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5585accc0288 <line:535:22>
| `-NonNullAttr 0x5585accc02e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accc0468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5585accc0328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5585accc03a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5585accc0518 <line:538:22>
| `-NonNullAttr 0x5585accc0570 <col:63, col:77> 1
|-FunctionDecl 0x5585accc0718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585accc05b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5585accc0638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5585accc07c8 <line:542:22>
| `-NonNullAttr 0x5585accc0820 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accc09a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5585accc0868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5585accc08e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5585accc0a58 <line:545:22>
| `-NonNullAttr 0x5585accc0ab0 <col:63, col:77> 1
|-FunctionDecl 0x5585accc0c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5585accc0af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5585accc0b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5585accc0d48 <line:548:22>
| `-NonNullAttr 0x5585accc0da0 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accc1f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5585accc0de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5585accc1e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5585accc2008 <line:551:22>
| `-NonNullAttr 0x5585accc2060 <col:63, col:77> 1
|-FunctionDecl 0x5585accc2398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5585accc2140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5585accc2250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5585accc2448 <col:29>
| `-NonNullAttr 0x5585accc24a0 <col:70, col:84> 1
|-FunctionDecl 0x5585accc2618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5585accc24e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5585accc26c0 <line:556:22>
| `-NonNullAttr 0x5585accc2718 <col:63, col:77> 1
|-FunctionDecl 0x5585accc2820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5585accc2768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5585accc28c8 <line:558:22>
| `-NonNullAttr 0x5585accc2920 <col:52, col:66> 1
|-FunctionDecl 0x5585accc2a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5585accc2968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5585accc2ac8 <line:560:19>
| `-NonNullAttr 0x5585accc2b20 <col:49, col:63> 1
|-FunctionDecl 0x5585accc2d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5585accc2b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5585accc2bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5585accc2e08 <col:39>
| `-NonNullAttr 0x5585accc2e90 <col:69, col:86> 1 2
|-FunctionDecl 0x5585accc2f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5585accc2ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5585accc3038 <line:565:22>
| `-NonNullAttr 0x5585accc3090 <col:52, col:66> 1
|-FunctionDecl 0x5585accc3190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5585accc30d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5585accc3238 <line:567:22>
| `-NonNullAttr 0x5585accc3290 <col:52, col:66> 1
|-FunctionDecl 0x5585accc3448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5585accc32d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5585accc3368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5585accc34f8 <col:39>
| `-NonNullAttr 0x5585accc3550 <col:69, col:86> 1 2
|-FunctionDecl 0x5585accc3650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5585accc3598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5585accc36f8 <line:572:22>
| `-NonNullAttr 0x5585accc3750 <col:52, col:66> 1
|-FunctionDecl 0x5585accc3938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5585accc3800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5585accc39e0 <line:574:22>
| `-NonNullAttr 0x5585accc3a38 <col:63, col:77> 1
|-FunctionDecl 0x5585accc3b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5585accc3a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5585accc3be8 <line:576:22>
| `-NonNullAttr 0x5585accc3c40 <col:63, col:77> 1
|-FunctionDecl 0x5585accc3ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585accc3c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5585accc3d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5585accc3f50 <line:580:22>
| `-NonNullAttr 0x5585accc3fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accc41b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5585accc3ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5585accc4078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5585accc4268 <line:583:22>
| `-NonNullAttr 0x5585accc42c0 <col:63, col:77> 1
|-FunctionDecl 0x5585accc4468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585accc4308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5585accc4388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5585accc4518 <line:587:22>
| `-NonNullAttr 0x5585accc4570 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accc46f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5585accc45b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5585accc4638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5585accc47a8 <col:36>
| `-NonNullAttr 0x5585accc4800 <col:77, col:91> 1
|-FunctionDecl 0x5585accc4b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5585accc48e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5585accc49f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5585accc4be8 <line:592:22>
| `-NonNullAttr 0x5585accc4c40 <col:63, col:77> 1
|-FunctionDecl 0x5585accc4db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5585accc4c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5585accc4e60 <line:594:22>
| `-NonNullAttr 0x5585accc4ee0 <col:63, col:77> 1
|-FunctionDecl 0x5585accc4fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5585accc4f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5585accc5088 <line:596:22>
| `-NonNullAttr 0x5585accc50e0 <col:52, col:66> 1
|-FunctionDecl 0x5585accc51e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5585accc5128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5585accc5288 <line:598:22>
| `-NonNullAttr 0x5585accc52e0 <col:52, col:66> 1
|-FunctionDecl 0x5585accc5508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5585accc5328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5585accc53a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5585accc55b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5585accc58e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5585accc5638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5585accc56b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5585accc5740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5585accc59a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x5585accc5bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5585accc5a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5585accc5c60 <line:607:22>
| `-NonNullAttr 0x5585accc5cb8 <col:63, col:77> 1
|-FunctionDecl 0x5585accc5dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5585accc5d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5585accc5e68 <line:609:22>
| `-NonNullAttr 0x5585accc5ef0 <col:63, col:77> 1
|-FunctionDecl 0x5585accc6118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585accc5f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5585accc5fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5585accc61c8 <line:613:22>
| `-NonNullAttr 0x5585accc6220 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accc6428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5585accc6268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5585accc62e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5585accc64d8 <col:37>
| `-NonNullAttr 0x5585accc6530 <col:78, col:92> 1
|-FunctionDecl 0x5585accc6748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5585accc6578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5585accc6620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5585accc67f8 <line:619:22>
| `-NonNullAttr 0x5585accc6850 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accc6a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5585accc6898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5585accc6910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5585accc6ac8 <line:622:22>
| `-NonNullAttr 0x5585accc6b20 <col:63, col:77> 1
|-FunctionDecl 0x5585accc6dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5585accc6c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5585accc6c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5585accc6e78 <line:624:22>
| `-NonNullAttr 0x5585accc6f00 <col:63, col:77> 1
|-FunctionDecl 0x5585accc7078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5585accc6f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5585accc7120 <line:626:22>
| `-NonNullAttr 0x5585accc7178 <col:63, col:77> 1
|-FunctionDecl 0x5585accc7280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5585accc71c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5585accc7328 <line:628:22>
| `-NonNullAttr 0x5585accc7380 <col:52, col:66> 1
|-FunctionDecl 0x5585accc7480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5585accc73c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5585accc7528 <line:630:22>
| `-NonNullAttr 0x5585accc7580 <col:52, col:66> 1
|-FunctionDecl 0x5585accc7680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5585accc75c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5585accc7728 <line:632:22>
| `-NonNullAttr 0x5585accc7780 <col:52, col:66> 1
|-FunctionDecl 0x5585accc7b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5585accc7860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5585accc7970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5585accc79f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5585accc7c10 <line:636:22>
| `-NonNullAttr 0x5585accc7c68 <col:63, col:77> 1
|-FunctionDecl 0x5585accc7de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5585accc7cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5585accc7e90 <line:638:22>
| `-NonNullAttr 0x5585accc7f10 <col:63, col:77> 1
|-FunctionDecl 0x5585accc8010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5585accc7f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5585accc80b8 <line:640:22>
| `-NonNullAttr 0x5585accc8110 <col:52, col:66> 1
|-FunctionDecl 0x5585accc82f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5585accc81c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5585accc83a0 <line:642:22>
| `-NonNullAttr 0x5585accc83f8 <col:63, col:77> 1
|-FunctionDecl 0x5585accc8500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5585accc8448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5585accc85a8 <line:644:22>
| `-NonNullAttr 0x5585accc8600 <col:63, col:77> 1
|-FunctionDecl 0x5585accc8828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585accc8648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5585accc86c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5585accc88d8 <line:648:22>
| `-NonNullAttr 0x5585accc8930 <col:63, col:80> 1 2
|-FunctionDecl 0x5585accc8b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5585accc8978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5585accc89f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5585accc8be8 <line:651:22>
| `-NonNullAttr 0x5585accc8c40 <col:63, col:77> 1
|-FunctionDecl 0x5585accc8fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5585accc8d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5585accc8e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5585accc9058 <line:654:22>
| `-NonNullAttr 0x5585accc90b0 <col:63, col:77> 1
|-FunctionDecl 0x5585accc9208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5585accc90f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5585accc92b0 <col:69>
|-FunctionDecl 0x5585accc9428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5585accc9318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5585accc94d0 <col:72>
|-FunctionDecl 0x5585accc9708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5585accc9538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5585accc95e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5585accc97b8 <col:44>
|-FunctionDecl 0x5585accc99d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5585accc9820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5585accc9898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5585accc9a88 <line:661:22>
| `-NonNullAttr 0x5585accc9ae0 <col:63, col:77> 2
|-FunctionDecl 0x5585acccaf50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5585accc9bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5585accc9cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5585accc9de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5585acccb008 <col:47>
|-FunctionDecl 0x5585acccb110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5585acccb078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5585acccb268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5585acccb1d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5585acccb3c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5585acccb328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5585acccb488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5585acccb548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5585acccb608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5585acccb6c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5585acccb740 prev 0x5585acccb6c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5585acccb7a8 <col:24> 'int' 0
|-VarDecl 0x5585acccb7e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5585acccb860 prev 0x5585acccb7e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5585acccb8c8 <col:27> 'int' 0
|-VarDecl 0x5585acccb900 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x5585acccb980 prev 0x5585acccb900 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x5585acccb9e8 <col:27> 'int' 0
|-VarDecl 0x5585acccba20 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5585acccbaa0 prev 0x5585acccba20 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5585acccbb08 <col:27> 'int' 0
|-VarDecl 0x5585acccbb38 <line:680:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x5585acccbbb8 <line:681:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x5585acccbc30 <line:682:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x5585acccbca8 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x5585acccbd20 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x5585acccbd98 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x5585acccbe10 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x5585acccbe88 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x5585acccbf20 <line:688:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x5585acccbf98 <line:689:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x5585acccc010 <line:690:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x5585acccc090 <line:691:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x5585acccc110 <line:692:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x5585acccc188 <line:693:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x5585acccc208 <line:694:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x5585acccc280 <line:695:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x5585acccc2f8 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5585acccc370 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5585acccc3f0 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x5585acccc470 prev 0x5585acccc3f0 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5585acccc4d8 <col:9> 'int' 0
|-VarDecl 0x5585acccc508 <line:700:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x5585acccc588 <line:701:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x5585acccc600 <line:702:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x5585acccc678 <line:703:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x5585acccc6f0 <line:704:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x5585acccc768 <line:705:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x5585acccc7e0 <line:706:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x5585acccc858 <line:707:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x5585acccc8d0 <line:708:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x5585acccc948 <line:709:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x5585acccc9c0 <line:710:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x5585acccca40 <line:711:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x5585accccac0 <line:712:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x5585accccb38 <line:713:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x5585accccbb8 <line:714:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x5585accccc30 <line:715:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x5585acccccb0 <line:716:1, col:5> col:5 used y 'int'
|-VarDecl 0x5585accccd30 prev 0x5585acccccb0 <line:717:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5585accccd98 <col:9> 'int' 0
|-VarDecl 0x5585accccdc8 <line:718:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5585acccce40 <line:719:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x5585acccceb8 <line:720:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5585accccfe0 prev 0x5585acccb110 <line:721:1, line:748:1> line:721:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5585accccf48 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5585acccff60 <line:722:1, line:748:1>
|   |-CallExpr 0x5585acccd0f8 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585acccd0e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585acccd088 <col:3> 'void ()' Function 0x5585acc724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585acccd170 <line:724:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5585acccd118 <col:3> 'int' lvalue Var 0x5585acccb860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5585acccd158 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585acccd138 <col:25> 'int' lvalue Var 0x5585accccd30 'y' 'int'
|   |-CallExpr 0x5585acccd1c8 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585acccd1b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585acccd190 <col:3> 'void ()' Function 0x5585acc72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585acccd220 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585acccd208 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585acccd1e8 <col:3> 'void ()' Function 0x5585acc724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585acccd2e8 <line:727:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5585acccd240 <col:3> '_Bool' lvalue Var 0x5585accccdc8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5585acccd2c8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5585acccd2b0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5585acccd260 <col:19> '_Bool (void)' Function 0x5585acc71c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5585acccd380 <line:728:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5585acccd308 <col:3> '_Bool' lvalue Var 0x5585acccceb8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5585acccd360 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5585acccd348 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5585acccd328 <col:19> '_Bool (void)' Function 0x5585acc71c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5585acccd3f8 <line:729:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5585acccd3a0 <col:3> '_Bool' lvalue Var 0x5585acccc508 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5585acccd3e0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585acccd3c0 <col:21> '_Bool' lvalue Var 0x5585acccceb8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5585acccd470 <line:730:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5585acccd418 <col:3> 'int' lvalue Var 0x5585acccc588 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5585acccd458 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585acccd438 <col:15> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   |-BinaryOperator 0x5585acccd8a8 <line:731:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5585acccd490 <col:3> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   | `-ConditionalOperator 0x5585acccd878 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5585acccd6a0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5585acccd5c0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5585acccd4e8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5585acccd4d0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5585acccd4b0 <col:8> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5585acccd5a0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5585acccd538 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5585acccd520 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5585acccd500 <col:27> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x5585acccd588 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5585acccd570 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5585acccd550 <col:46> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5585acccd680 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5585acccd618 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5585acccd600 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5585acccd5e0 <col:65> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x5585acccd668 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5585acccd650 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5585acccd630 <col:84> '_Bool' lvalue Var 0x5585acccc858 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5585acccd860 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585acccd6c0 <col:101> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   |   `-ParenExpr 0x5585acccd840 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5585acccd810 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5585acccd780 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5585acccd738 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5585acccd720 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5585acccd6e0 <col:106> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5585acccd768 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5585acccd750 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5585acccd700 <col:124> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5585acccd7e0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5585acccd7a0 <col:141> 'int' lvalue Var 0x5585accccac0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5585acccd7f8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585acccd7c0 <col:153> 'int' lvalue Var 0x5585accccbb8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5585acccddb8 <line:732:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5585acccd8c8 <col:3> 'int' lvalue Var 0x5585accccac0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5585acccdd88 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5585acccdd58 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5585acccdd40 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5585acccd8e8 <col:15> '_Bool' lvalue Var 0x5585acccceb8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5585acccdd70 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585acccd908 <col:31> 'int' lvalue Var 0x5585accccac0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5585acccdd20 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5585acccdcf0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5585acccdb18 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5585acccda38 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5585acccd960 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5585acccd948 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5585acccd928 <col:45> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5585acccda18 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5585acccd9b0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5585acccd998 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5585acccd978 <col:64> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5585acccda00 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5585acccd9e8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5585acccd9c8 <col:83> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5585acccdaf8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5585acccda90 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5585acccda78 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5585acccda58 <col:102> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5585acccdae0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5585acccdac8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5585acccdaa8 <col:121> '_Bool' lvalue Var 0x5585acccc858 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5585acccdcd8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5585acccdb38 <col:138> 'int' lvalue Var 0x5585accccac0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5585acccdcb8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5585acccdc88 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5585acccdbf8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5585acccdbb0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5585acccdb98 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5585acccdb58 <col:151> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5585acccdbe0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5585acccdbc8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5585acccdb78 <col:169> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5585acccdc58 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5585acccdc18 <col:186> 'int' lvalue Var 0x5585accccac0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5585acccdc70 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5585acccdc38 <col:198> 'int' lvalue Var 0x5585accccac0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5585accce2e0 <line:733:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5585acccddd8 <col:3> 'int' lvalue Var 0x5585accccbb8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5585accce2b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5585accce280 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5585accce268 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5585acccddf8 <col:15> '_Bool' lvalue Var 0x5585acccceb8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5585accce298 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585acccde18 <col:31> 'int' lvalue Var 0x5585accccbb8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5585accce248 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5585accce218 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5585accce040 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5585acccdf60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5585acccde70 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5585acccde58 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5585acccde38 <col:45> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5585acccdf40 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5585acccdec0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5585acccdea8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5585acccde88 <col:64> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5585acccdf10 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5585acccdef8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5585acccded8 <col:83> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5585accce020 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5585acccdfb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5585acccdfa0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5585acccdf80 <col:102> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5585accce008 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5585acccdff0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5585acccdfd0 <col:121> '_Bool' lvalue Var 0x5585acccc858 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5585accce200 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5585accce060 <col:138> 'int' lvalue Var 0x5585accccbb8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5585accce1e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5585accce1b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5585accce120 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5585accce0d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5585accce0c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5585accce080 <col:151> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5585accce108 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5585accce0f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5585accce0a0 <col:169> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5585accce180 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5585accce140 <col:186> 'int' lvalue Var 0x5585accccbb8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5585accce198 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5585accce160 <col:198> 'int' lvalue Var 0x5585accccbb8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5585accce888 <line:734:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5585accce300 <col:3> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585accce870 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585accce840 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5585accce7f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585accce7e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585accce320 <col:20> '_Bool' lvalue Var 0x5585acccceb8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585accce828 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585accce810 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585accce340 <col:36> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5585accce7c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5585accce790 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5585accce550 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5585accce470 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5585accce398 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5585accce380 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5585accce360 <col:55> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5585accce450 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5585accce3e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5585accce3d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5585accce3b0 <col:74> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5585accce438 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5585accce420 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5585accce400 <col:93> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5585accce530 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5585accce4c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5585accce4b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5585accce490 <col:112> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5585accce518 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5585accce500 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5585accce4e0 <col:131> '_Bool' lvalue Var 0x5585acccc858 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5585accce778 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5585accce760 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5585accce570 <col:148> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5585accce740 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5585accce710 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5585accce630 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5585accce5e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5585accce5d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5585accce590 <col:166> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5585accce618 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5585accce600 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5585accce5b0 <col:184> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5585accce6c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5585accce680 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5585accce650 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5585accce6f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5585accce6e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5585accce6a8 <col:212> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5585acccee50 <line:735:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5585accce8a8 <col:3> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585acccee38 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585acccee08 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5585acccedc0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585accceda8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585accce8c8 <col:20> '_Bool' lvalue Var 0x5585acccceb8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585acccedf0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585acccedd8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585accce8e8 <col:36> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5585accced88 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5585accced58 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5585accceaf8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5585acccea18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5585accce940 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5585accce928 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5585accce908 <col:55> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5585accce9f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5585accce990 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5585accce978 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5585accce958 <col:74> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5585accce9e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5585accce9c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5585accce9a8 <col:93> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5585acccead8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5585acccea70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5585acccea58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5585acccea38 <col:112> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5585accceac0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5585accceaa8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5585acccea88 <col:131> '_Bool' lvalue Var 0x5585acccc858 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5585accced40 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5585accced28 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5585accceb18 <col:148> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5585accced08 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5585acccecd8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5585acccebd8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5585accceb90 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5585accceb78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5585accceb38 <col:166> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5585acccebc0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5585accceba8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5585accceb58 <col:184> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5585accceca8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5585acccec28 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5585acccebf8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5585acccecc0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5585acccec80 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5585acccec50 <col:219> 'int' 0
|   |-BinaryOperator 0x5585acccf408 <line:736:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5585acccee70 <col:3> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5585acccf3f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585acccf3c0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5585acccf378 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585acccf360 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585acccee90 <col:20> '_Bool' lvalue Var 0x5585acccceb8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585acccf3a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585acccf390 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585accceeb0 <col:36> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x5585acccf340 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5585acccf310 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5585acccf0d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5585accceff0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5585acccef08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5585accceef0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5585accceed0 <col:55> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5585acccefd0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5585acccef68 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5585acccef50 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5585acccef20 <col:74> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5585acccefb8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5585acccefa0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5585acccef80 <col:93> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5585acccf0b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5585acccf048 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5585acccf030 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5585acccf010 <col:112> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5585acccf098 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5585acccf080 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5585acccf060 <col:131> '_Bool' lvalue Var 0x5585acccc858 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5585acccf2f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5585acccf2e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5585acccf0f0 <col:148> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x5585acccf2c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5585acccf290 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5585acccf1b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5585acccf168 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5585acccf150 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5585acccf110 <col:166> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5585acccf198 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5585acccf180 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5585acccf130 <col:184> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5585acccf248 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5585acccf200 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5585acccf1d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5585acccf278 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5585acccf260 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5585acccf228 <col:212> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5585acccf9d0 <line:737:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5585acccf428 <col:3> '_Bool' lvalue Var 0x5585acccc858 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5585acccf9b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585acccf988 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5585acccf940 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585acccf928 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585acccf448 <col:20> '_Bool' lvalue Var 0x5585acccceb8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585acccf970 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585acccf958 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585acccf468 <col:36> '_Bool' lvalue Var 0x5585acccc858 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x5585acccf908 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5585acccf8d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5585acccf678 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5585acccf598 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5585acccf4c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5585acccf4a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5585acccf488 <col:55> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5585acccf578 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5585acccf510 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5585acccf4f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5585acccf4d8 <col:74> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5585acccf560 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5585acccf548 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5585acccf528 <col:93> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5585acccf658 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5585acccf5f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5585acccf5d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5585acccf5b8 <col:112> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5585acccf640 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5585acccf628 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5585acccf608 <col:131> '_Bool' lvalue Var 0x5585acccc858 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5585acccf8c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5585acccf8a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5585acccf698 <col:148> '_Bool' lvalue Var 0x5585acccc858 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x5585acccf888 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5585acccf858 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5585acccf758 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5585acccf710 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5585acccf6f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5585acccf6b8 <col:166> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5585acccf740 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5585acccf728 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5585acccf6d8 <col:184> '_Bool' lvalue Var 0x5585acccc678 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5585acccf828 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5585acccf7a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5585acccf778 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5585acccf840 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5585acccf800 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5585acccf7d0 <col:219> 'int' 0
|   |-BinaryOperator 0x5585acccfa48 <line:738:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5585acccf9f0 <col:3> 'int' lvalue Var 0x5585acccb980 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x5585acccfa30 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585acccfa10 <col:25> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   |-BinaryOperator 0x5585acccfb78 <line:739:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5585acccfa68 <col:3> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   | `-ConditionalOperator 0x5585acccfb48 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5585acccfb00 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5585acccfae8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5585acccfa88 <col:7> '_Bool' lvalue Var 0x5585acccc508 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5585acccfb18 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585acccfaa8 <col:25> 'int' lvalue Var 0x5585acccc588 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5585acccfb30 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5585acccfac8 <col:37> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   |-BinaryOperator 0x5585acccfc10 <line:740:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5585acccfb98 <col:3> '_Bool' lvalue Var 0x5585acccc508 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5585acccfbe8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5585acccfbb8 <col:28> 'int' 0
|   |-CallExpr 0x5585acccfc68 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585acccfc50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585acccfc30 <col:3> 'void ()' Function 0x5585acc72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585acccfcc0 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585acccfca8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585acccfc88 <col:3> 'void ()' Function 0x5585acc724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5585acccfd18 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585acccfd00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585acccfce0 <col:3> 'void ()' Function 0x5585acc72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585acccfd70 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585acccfd58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585acccfd38 <col:3> 'void ()' Function 0x5585acc724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585acccfe28 <line:745:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5585acccfd90 <col:3> 'int' lvalue Var 0x5585acccb740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5585acccfe08 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5585acccfdf0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585acccfdb0 <col:22> 'int' lvalue Var 0x5585acccb740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5585acccfdd0 <col:41> 'int' 1
|   |-CallExpr 0x5585acccfe80 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585acccfe68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585acccfe48 <col:3> 'void ()' Function 0x5585acc72570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5585acccff28 <line:747:3, col:36>
|     `-CallExpr 0x5585acccff08 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5585acccfef0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5585acccfea0 <col:10> 'void *(void)' Function 0x5585acc71fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5585accd00e8 prev 0x5585acccb268 <line:749:1, line:765:1> line:749:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5585accd0050 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5585accd1200 <line:750:1, line:765:1>
|   |-CallExpr 0x5585accd01c8 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585accd01b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585accd0190 <col:3> 'void ()' Function 0x5585acc724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585accd0228 <line:752:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5585accd01e8 <col:3> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   | `-IntegerLiteral 0x5585accd0208 <col:7> 'int' 1
|   |-CallExpr 0x5585accd0280 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585accd0268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585accd0248 <col:3> 'void ()' Function 0x5585acc72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585accd02d8 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585accd02c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585accd02a0 <col:3> 'void ()' Function 0x5585acc724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585accd05c0 <line:755:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5585accd02f8 <col:3> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   | `-ConditionalOperator 0x5585accd0590 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5585accd03b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5585accd0370 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5585accd0358 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5585accd0318 <col:7> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5585accd03a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5585accd0388 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5585accd0338 <col:25> '_Bool' lvalue Var 0x5585acccc6f0 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5585accd0578 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585accd03d8 <col:42> 'int' lvalue Var 0x5585accccac0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5585accd0558 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5585accd0528 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5585accd0498 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5585accd0450 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5585accd0438 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5585accd03f8 <col:55> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5585accd0480 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5585accd0468 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5585accd0418 <col:73> '_Bool' lvalue Var 0x5585acccc8d0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5585accd04f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5585accd04b8 <col:90> 'int' lvalue Var 0x5585accccbb8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5585accd0510 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585accd04d8 <col:102> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   |-BinaryOperator 0x5585accd07c8 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd05e0 <col:3> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585accd07b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585accd0780 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5585accd06a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5585accd0658 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5585accd0640 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5585accd0600 <col:20> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5585accd0688 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5585accd0670 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5585accd0620 <col:38> '_Bool' lvalue Var 0x5585acccc6f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585accd0738 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585accd06f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585accd06c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5585accd0768 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585accd0750 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585accd0718 <col:66> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5585accd0ab0 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd07e8 <col:3> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585accd0a98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585accd0a68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5585accd0988 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5585accd08a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5585accd0860 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5585accd0848 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5585accd0808 <col:20> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5585accd0890 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5585accd0878 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5585accd0828 <col:38> '_Bool' lvalue Var 0x5585acccc6f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5585accd0968 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5585accd0920 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5585accd0908 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5585accd08c8 <col:56> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5585accd0950 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5585accd0938 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5585accd08e8 <col:74> '_Bool' lvalue Var 0x5585acccc8d0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585accd0a20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585accd09d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585accd09a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5585accd0a50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585accd0a38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585accd0a00 <col:102> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5585accd0cb8 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd0ad0 <col:3> '_Bool' lvalue Var 0x5585acccc6f0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5585accd0ca0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585accd0c70 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5585accd0b90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5585accd0b48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5585accd0b30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5585accd0af0 <col:20> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5585accd0b78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5585accd0b60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5585accd0b10 <col:38> '_Bool' lvalue Var 0x5585acccc6f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585accd0c28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585accd0be0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585accd0bb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5585accd0c58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585accd0c40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585accd0c08 <col:66> '_Bool' lvalue Var 0x5585acccc6f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5585accd0fb8 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd0cd8 <col:3> '_Bool' lvalue Var 0x5585acccc8d0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5585accd0fa0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585accd0f70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5585accd0e78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5585accd0d98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5585accd0d50 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5585accd0d38 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5585accd0cf8 <col:20> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5585accd0d80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5585accd0d68 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5585accd0d18 <col:38> '_Bool' lvalue Var 0x5585acccc6f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5585accd0e58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5585accd0e10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5585accd0df8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5585accd0db8 <col:56> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5585accd0e40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5585accd0e28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5585accd0dd8 <col:74> '_Bool' lvalue Var 0x5585acccc8d0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585accd0f10 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585accd0ec8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585accd0e98 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5585accd0f40 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585accd0f28 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585accd0ef0 <col:102> '_Bool' lvalue Var 0x5585acccc8d0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5585accd1010 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585accd0ff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585accd0fd8 <col:3> 'void ()' Function 0x5585acc72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585accd1068 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585accd1050 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585accd1030 <col:3> 'void ()' Function 0x5585acc724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585accd1120 <line:762:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5585accd1088 <col:3> 'int' lvalue Var 0x5585acccb740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5585accd1100 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5585accd10e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585accd10a8 <col:22> 'int' lvalue Var 0x5585acccb740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5585accd10c8 <col:41> 'int' 1
|   |-CallExpr 0x5585accd1178 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585accd1160 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585accd1140 <col:3> 'void ()' Function 0x5585acc72570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5585accd11f0 <line:764:3, col:36>
|     `-CallExpr 0x5585accd11d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5585accd11b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5585accd1198 <col:10> 'void *(void)' Function 0x5585acc71fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5585accd1330 prev 0x5585acccb3c0 <line:766:1, line:800:1> line:766:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5585accd1298 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5585accd5018 <line:767:1, line:800:1>
|   |-CallExpr 0x5585accd1410 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585accd13f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585accd13d8 <col:3> 'void ()' Function 0x5585acc724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585accd14a8 <line:769:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd1430 <col:3> '_Bool' lvalue Var 0x5585accccdc8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5585accd1488 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5585accd1470 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5585accd1450 <col:19> '_Bool (void)' Function 0x5585acc71c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5585accd1540 <line:770:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd14c8 <col:3> '_Bool' lvalue Var 0x5585acccceb8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5585accd1520 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5585accd1508 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5585accd14e8 <col:19> '_Bool (void)' Function 0x5585acc71c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5585accd15b8 <line:771:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd1560 <col:3> '_Bool' lvalue Var 0x5585acccc508 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5585accd15a0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585accd1580 <col:21> '_Bool' lvalue Var 0x5585acccceb8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5585accd1630 <line:772:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5585accd15d8 <col:3> 'int' lvalue Var 0x5585acccc588 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5585accd1618 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585accd15f8 <col:15> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   |-BinaryOperator 0x5585accd1a68 <line:773:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5585accd1650 <col:3> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   | `-ConditionalOperator 0x5585accd1a38 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5585accd1860 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5585accd1780 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5585accd16a8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5585accd1690 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5585accd1670 <col:8> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5585accd1760 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5585accd16f8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5585accd16e0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5585accd16c0 <col:27> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5585accd1748 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5585accd1730 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5585accd1710 <col:46> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5585accd1840 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5585accd17d8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5585accd17c0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5585accd17a0 <col:65> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5585accd1828 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5585accd1810 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5585accd17f0 <col:84> '_Bool' lvalue Var 0x5585acccc948 'x$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5585accd1a20 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585accd1880 <col:101> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   |   `-ParenExpr 0x5585accd1a00 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5585accd19d0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5585accd1940 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5585accd18f8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5585accd18e0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5585accd18a0 <col:106> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5585accd1928 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5585accd1910 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5585accd18c0 <col:124> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5585accd19a0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5585accd1960 <col:141> 'int' lvalue Var 0x5585accccac0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5585accd19b8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585accd1980 <col:153> 'int' lvalue Var 0x5585accccbb8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5585accd1fb0 <line:774:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5585accd1a88 <col:3> 'int' lvalue Var 0x5585accccac0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5585accd1f80 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5585accd1f18 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5585accd1f00 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5585accd1aa8 <col:15> '_Bool' lvalue Var 0x5585acccceb8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5585accd1f30 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585accd1ac8 <col:31> 'int' lvalue Var 0x5585accccac0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5585accd1ee0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5585accd1eb0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5585accd1cd8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5585accd1bf8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5585accd1b20 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5585accd1b08 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5585accd1ae8 <col:45> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5585accd1bd8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5585accd1b70 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5585accd1b58 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5585accd1b38 <col:64> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5585accd1bc0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5585accd1ba8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5585accd1b88 <col:83> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5585accd1cb8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5585accd1c50 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5585accd1c38 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5585accd1c18 <col:102> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5585accd1ca0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5585accd1c88 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5585accd1c68 <col:121> '_Bool' lvalue Var 0x5585acccc948 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5585accd1e98 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5585accd1cf8 <col:138> 'int' lvalue Var 0x5585accccac0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5585accd1e78 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5585accd1e48 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5585accd1db8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5585accd1d70 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5585accd1d58 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5585accd1d18 <col:151> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5585accd1da0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5585accd1d88 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5585accd1d38 <col:169> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5585accd1e18 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5585accd1dd8 <col:186> 'int' lvalue Var 0x5585accccac0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5585accd1e30 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5585accd1df8 <col:198> 'int' lvalue Var 0x5585accccac0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5585accd24c0 <line:775:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5585accd1fd0 <col:3> 'int' lvalue Var 0x5585accccbb8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5585accd2490 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5585accd2460 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5585accd2448 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5585accd1ff0 <col:15> '_Bool' lvalue Var 0x5585acccceb8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5585accd2478 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585accd2010 <col:31> 'int' lvalue Var 0x5585accccbb8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5585accd2428 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5585accd23f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5585accd2220 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5585accd2140 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5585accd2068 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5585accd2050 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5585accd2030 <col:45> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5585accd2120 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5585accd20b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5585accd20a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5585accd2080 <col:64> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5585accd2108 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5585accd20f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5585accd20d0 <col:83> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5585accd2200 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5585accd2198 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5585accd2180 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5585accd2160 <col:102> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5585accd21e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5585accd21d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5585accd21b0 <col:121> '_Bool' lvalue Var 0x5585acccc948 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5585accd23e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5585accd2240 <col:138> 'int' lvalue Var 0x5585accccbb8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5585accd23c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5585accd2390 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5585accd2300 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5585accd22b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5585accd22a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5585accd2260 <col:151> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5585accd22e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5585accd22d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5585accd2280 <col:169> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5585accd2360 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5585accd2320 <col:186> 'int' lvalue Var 0x5585accccbb8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5585accd2378 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5585accd2340 <col:198> 'int' lvalue Var 0x5585accccbb8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5585accd2a68 <line:776:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd24e0 <col:3> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585accd2a50 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585accd2a20 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5585accd29d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585accd29c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585accd2500 <col:20> '_Bool' lvalue Var 0x5585acccceb8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585accd2a08 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585accd29f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585accd2520 <col:36> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5585accd29a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5585accd2970 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5585accd2730 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5585accd2650 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5585accd2578 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5585accd2560 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5585accd2540 <col:55> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5585accd2630 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5585accd25c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5585accd25b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5585accd2590 <col:74> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5585accd2618 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5585accd2600 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5585accd25e0 <col:93> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5585accd2710 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5585accd26a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5585accd2690 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5585accd2670 <col:112> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5585accd26f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5585accd26e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5585accd26c0 <col:131> '_Bool' lvalue Var 0x5585acccc948 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5585accd2958 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5585accd2940 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5585accd2750 <col:148> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5585accd2920 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5585accd28f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5585accd2810 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5585accd27c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5585accd27b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5585accd2770 <col:166> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5585accd27f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5585accd27e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5585accd2790 <col:184> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5585accd28a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5585accd2860 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5585accd2830 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5585accd28d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5585accd28c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5585accd2888 <col:212> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5585accd3058 <line:777:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd2a88 <col:3> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585accd3040 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585accd3010 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5585accd2fc8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585accd2fb0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585accd2aa8 <col:20> '_Bool' lvalue Var 0x5585acccceb8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585accd2ff8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585accd2fe0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585accd2ac8 <col:36> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5585accd2f90 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5585accd2f38 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5585accd2cd8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5585accd2bf8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5585accd2b20 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5585accd2b08 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5585accd2ae8 <col:55> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5585accd2bd8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5585accd2b70 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5585accd2b58 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5585accd2b38 <col:74> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5585accd2bc0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5585accd2ba8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5585accd2b88 <col:93> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5585accd2cb8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5585accd2c50 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5585accd2c38 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5585accd2c18 <col:112> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5585accd2ca0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5585accd2c88 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5585accd2c68 <col:131> '_Bool' lvalue Var 0x5585acccc948 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5585accd2f20 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5585accd2f08 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5585accd2cf8 <col:148> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5585accd2ee8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5585accd2eb8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5585accd2db8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5585accd2d70 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5585accd2d58 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5585accd2d18 <col:166> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5585accd2da0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5585accd2d88 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5585accd2d38 <col:184> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5585accd2e88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5585accd2e08 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5585accd2dd8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5585accd2ea0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5585accd2e60 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5585accd2e30 <col:219> 'int' 0
|   |-BinaryOperator 0x5585accd3600 <line:778:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd3078 <col:3> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5585accd35e8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585accd35b8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5585accd3570 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585accd3558 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585accd3098 <col:20> '_Bool' lvalue Var 0x5585acccceb8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585accd35a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585accd3588 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585accd30b8 <col:36> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5585accd3538 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5585accd3508 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5585accd32c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5585accd31e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5585accd3110 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5585accd30f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5585accd30d8 <col:55> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5585accd31c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5585accd3160 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5585accd3148 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5585accd3128 <col:74> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5585accd31b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5585accd3198 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5585accd3178 <col:93> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5585accd32a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5585accd3240 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5585accd3228 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5585accd3208 <col:112> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5585accd3290 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5585accd3278 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5585accd3258 <col:131> '_Bool' lvalue Var 0x5585acccc948 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5585accd34f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5585accd34d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5585accd32e8 <col:148> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5585accd34b8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5585accd3488 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5585accd33a8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5585accd3360 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5585accd3348 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5585accd3308 <col:166> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5585accd3390 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5585accd3378 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5585accd3328 <col:184> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5585accd3440 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5585accd33f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5585accd33c8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5585accd3470 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5585accd3458 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5585accd3420 <col:212> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5585accd3bc8 <line:779:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd3620 <col:3> '_Bool' lvalue Var 0x5585acccc948 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5585accd3bb0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585accd3b80 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5585accd3b38 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585accd3b20 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585accd3640 <col:20> '_Bool' lvalue Var 0x5585acccceb8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585accd3b68 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585accd3b50 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585accd3660 <col:36> '_Bool' lvalue Var 0x5585acccc948 'x$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5585accd3b00 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5585accd3ad0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5585accd3870 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5585accd3790 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5585accd36b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5585accd36a0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5585accd3680 <col:55> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5585accd3770 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5585accd3708 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5585accd36f0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5585accd36d0 <col:74> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5585accd3758 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5585accd3740 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5585accd3720 <col:93> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5585accd3850 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5585accd37e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5585accd37d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5585accd37b0 <col:112> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5585accd3838 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5585accd3820 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5585accd3800 <col:131> '_Bool' lvalue Var 0x5585acccc948 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5585accd3ab8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5585accd3aa0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5585accd3890 <col:148> '_Bool' lvalue Var 0x5585acccc948 'x$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5585accd3a80 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5585accd3a50 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5585accd3950 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5585accd3908 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5585accd38f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5585accd38b0 <col:166> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5585accd3938 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5585accd3920 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5585accd38d0 <col:184> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5585accd3a20 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5585accd39a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5585accd3970 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5585accd3a38 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5585accd39f8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5585accd39c8 <col:219> 'int' 0
|   |-BinaryOperator 0x5585accd3c60 <line:780:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd3be8 <col:3> '_Bool' lvalue Var 0x5585acccc010 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5585accd3c38 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5585accd3c08 <col:45> 'int' 1
|   |-BinaryOperator 0x5585accd3cd8 <line:781:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x5585accd3c80 <col:3> 'int *' lvalue Var 0x5585acccc090 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x5585accd3cc0 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x5585accd3ca0 <col:43> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   |-BinaryOperator 0x5585accd3d50 <line:782:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5585accd3cf8 <col:3> 'int' lvalue Var 0x5585acccbaa0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5585accd3d38 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585accd3d18 <col:25> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   |-BinaryOperator 0x5585accd3e80 <line:783:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5585accd3d70 <col:3> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   | `-ConditionalOperator 0x5585accd3e50 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5585accd3e08 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5585accd3df0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5585accd3d90 <col:7> '_Bool' lvalue Var 0x5585acccc508 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5585accd3e20 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585accd3db0 <col:25> 'int' lvalue Var 0x5585acccc588 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5585accd3e38 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5585accd3dd0 <col:37> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   |-BinaryOperator 0x5585accd3f18 <line:784:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd3ea0 <col:3> '_Bool' lvalue Var 0x5585acccc508 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5585accd3ef0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5585accd3ec0 <col:28> 'int' 0
|   |-CallExpr 0x5585accd3f70 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585accd3f58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585accd3f38 <col:3> 'void ()' Function 0x5585acc72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585accd3fd8 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585accd3fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585accd3fa0 <col:3> 'void ()' Function 0x5585acc724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585accd4038 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5585accd3ff8 <col:3> 'int' lvalue Var 0x5585accccd30 'y' 'int'
|   | `-IntegerLiteral 0x5585accd4018 <col:7> 'int' 1
|   |-CallExpr 0x5585accd4090 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585accd4078 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585accd4058 <col:3> 'void ()' Function 0x5585acc72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585accd40e8 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585accd40d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585accd40b0 <col:3> 'void ()' Function 0x5585acc724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585accd43d0 <line:790:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5585accd4108 <col:3> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   | `-ConditionalOperator 0x5585accd43a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5585accd41c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5585accd4180 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5585accd4168 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5585accd4128 <col:7> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5585accd41b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5585accd4198 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5585accd4148 <col:25> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5585accd4388 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585accd41e8 <col:42> 'int' lvalue Var 0x5585accccac0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5585accd4368 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5585accd4338 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5585accd42a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5585accd4260 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5585accd4248 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5585accd4208 <col:55> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5585accd4290 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5585accd4278 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5585accd4228 <col:73> '_Bool' lvalue Var 0x5585acccc948 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5585accd4308 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5585accd42c8 <col:90> 'int' lvalue Var 0x5585accccbb8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5585accd4320 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585accd42e8 <col:102> 'int' lvalue Var 0x5585acccc470 'x' 'int'
|   |-BinaryOperator 0x5585accd45d8 <line:791:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd43f0 <col:3> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585accd45c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585accd4590 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5585accd44b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5585accd4468 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5585accd4450 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5585accd4410 <col:20> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5585accd4498 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5585accd4480 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5585accd4430 <col:38> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5585accd4548 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585accd4500 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585accd44d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5585accd4578 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585accd4560 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585accd4528 <col:66> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5585accd48c0 <line:792:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd45f8 <col:3> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585accd48a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585accd4878 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5585accd4798 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5585accd46b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5585accd4670 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5585accd4658 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5585accd4618 <col:20> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5585accd46a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5585accd4688 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5585accd4638 <col:38> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5585accd4778 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5585accd4730 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5585accd4718 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5585accd46d8 <col:56> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5585accd4760 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5585accd4748 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5585accd46f8 <col:74> '_Bool' lvalue Var 0x5585acccc948 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5585accd4830 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585accd47e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585accd47b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5585accd4860 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585accd4848 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585accd4810 <col:102> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5585accd4ac8 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd48e0 <col:3> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5585accd4ab0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585accd4a80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5585accd49a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5585accd4958 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5585accd4940 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5585accd4900 <col:20> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5585accd4988 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5585accd4970 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5585accd4920 <col:38> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5585accd4a38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585accd49f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585accd49c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5585accd4a68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585accd4a50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585accd4a18 <col:66> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5585accd4db0 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5585accd4ae8 <col:3> '_Bool' lvalue Var 0x5585acccc948 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5585accd4d98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585accd4d68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5585accd4c88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5585accd4ba8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5585accd4b60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5585accd4b48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5585accd4b08 <col:20> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5585accd4b90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5585accd4b78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5585accd4b28 <col:38> '_Bool' lvalue Var 0x5585acccc768 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5585accd4c68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5585accd4c20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5585accd4c08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5585accd4bc8 <col:56> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5585accd4c50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5585accd4c38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5585accd4be8 <col:74> '_Bool' lvalue Var 0x5585acccc948 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5585accd4d20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585accd4cd8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585accd4ca8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5585accd4d50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585accd4d38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585accd4d00 <col:102> '_Bool' lvalue Var 0x5585acccc948 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5585accd4e08 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585accd4df0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585accd4dd0 <col:3> 'void ()' Function 0x5585acc72570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585accd4e60 <line:796:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585accd4e48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585accd4e28 <col:3> 'void ()' Function 0x5585acc724b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585accd4f18 <line:797:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5585accd4e80 <col:3> 'int' lvalue Var 0x5585acccb740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5585accd4ef8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5585accd4ee0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585accd4ea0 <col:22> 'int' lvalue Var 0x5585acccb740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5585accd4ec0 <col:41> 'int' 1
|   |-CallExpr 0x5585accd4f70 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585accd4f58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585accd4f38 <col:3> 'void ()' Function 0x5585acc72570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5585accd5008 <line:799:3, col:36>
|     `-CallExpr 0x5585accd4fe8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5585accd4fd0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5585accd4fb0 <col:10> 'void *(void)' Function 0x5585acc71fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5585accd5148 prev 0x5585acccb488 <line:801:1, line:803:1> line:801:6 fence 'void ()'
| `-CompoundStmt 0x5585accd51e8 <line:802:1, line:803:1>
|-FunctionDecl 0x5585accd5218 prev 0x5585acccb548 <line:804:1, line:806:1> line:804:6 isync 'void ()'
| `-CompoundStmt 0x5585accd52b8 <line:805:1, line:806:1>
|-FunctionDecl 0x5585accd52e8 prev 0x5585acccb608 <line:807:1, line:809:1> line:807:6 lwfence 'void ()'
| `-CompoundStmt 0x5585accd5388 <line:808:1, line:809:1>
`-FunctionDecl 0x5585accd53f8 <line:810:1, line:836:1> line:810:5 main 'int ()'
  `-CompoundStmt 0x5585accd7360 <line:811:1, line:836:1>
    |-DeclStmt 0x5585accd5510 <line:812:3, col:18>
    | `-VarDecl 0x5585accd54a8 <col:3, col:13> col:13 used t2218 'pthread_t':'unsigned long'
    |-CallExpr 0x5585accd5718 <line:813:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5585accd5700 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585accd5528 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5585accb29d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5585accd5568 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5585accd5548 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5585accd54a8 't2218' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5585accd5758 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5585accd55e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5585accd55b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5585accd5580 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5585accd5770 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585accd5600 <col:39> 'void *(void *)' Function 0x5585accccfe0 'P0' 'void *(void *)'
    | `-ParenExpr 0x5585accd5680 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5585accd5658 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5585accd5620 <col:52> 'int' 0
    |-DeclStmt 0x5585accd5800 <line:814:3, col:18>
    | `-VarDecl 0x5585accd5798 <col:3, col:13> col:13 used t2219 'pthread_t':'unsigned long'
    |-CallExpr 0x5585accd59a8 <line:815:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5585accd5990 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585accd5818 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5585accb29d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5585accd5858 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5585accd5838 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5585accd5798 't2219' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5585accd59e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5585accd58d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5585accd58a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5585accd5870 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5585accd5a00 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585accd58f0 <col:39> 'void *(void *)' Function 0x5585accd00e8 'P1' 'void *(void *)'
    | `-ParenExpr 0x5585accd5970 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5585accd5948 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5585accd5910 <col:52> 'int' 0
    |-DeclStmt 0x5585accd5a90 <line:816:3, col:18>
    | `-VarDecl 0x5585accd5a28 <col:3, col:13> col:13 used t2220 'pthread_t':'unsigned long'
    |-CallExpr 0x5585accd5c38 <line:817:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5585accd5c20 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585accd5aa8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5585accb29d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5585accd5ae8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5585accd5ac8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5585accd5a28 't2220' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5585accd5c78 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5585accd5b60 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5585accd5b38 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5585accd5b00 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5585accd5c90 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585accd5b80 <col:39> 'void *(void *)' Function 0x5585accd1330 'P2' 'void *(void *)'
    | `-ParenExpr 0x5585accd5c00 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5585accd5bd8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5585accd5ba0 <col:52> 'int' 0
    |-CallExpr 0x5585accd5ce0 <line:818:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5585accd5cc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5585accd5ca8 <col:3> 'void ()' Function 0x5585acc724b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5585accd5db0 <line:819:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5585accd5d00 <col:3> '_Bool' lvalue Var 0x5585acccc2f8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5585accd5d98 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5585accd5d78 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5585accd5d60 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5585accd5d20 <col:21> 'int' lvalue Var 0x5585acccb740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5585accd5d40 <col:41> 'int' 3
    |-CallExpr 0x5585accd5e08 <line:820:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5585accd5df0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5585accd5dd0 <col:3> 'void ()' Function 0x5585acc72570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5585accd5eb8 <line:821:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5585accd5ea0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585accd5e28 <col:3> 'void (int)' Function 0x5585acc71e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5585accd5ef8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5585accd5ee0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5585accd5e48 <col:21> '_Bool' lvalue Var 0x5585acccc2f8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5585accd5f48 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5585accd5f30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5585accd5f10 <col:3> 'void ()' Function 0x5585acc724b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5585accd6248 <line:823:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5585accd5f68 <col:3> 'int' lvalue Var 0x5585acccc470 'x' 'int'
    | `-ConditionalOperator 0x5585accd6218 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5585accd6040 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5585accd5ff8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5585accd5fe0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5585accd5f88 <col:7> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5585accd6028 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5585accd6010 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5585accd5fc0 <col:25> '_Bool' lvalue Var 0x5585acccc600 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5585accd6200 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5585accd6060 <col:42> 'int' lvalue Var 0x5585accccac0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5585accd61e0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5585accd61b0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5585accd6120 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5585accd60d8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5585accd60c0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5585accd6080 <col:55> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5585accd6108 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5585accd60f0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5585accd60a0 <col:73> '_Bool' lvalue Var 0x5585acccc7e0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5585accd6180 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5585accd6140 <col:90> 'int' lvalue Var 0x5585accccbb8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5585accd6198 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5585accd6160 <col:102> 'int' lvalue Var 0x5585acccc470 'x' 'int'
    |-BinaryOperator 0x5585accd6450 <line:824:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5585accd6268 <col:3> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5585accd6438 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5585accd6408 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5585accd6328 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5585accd62e0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5585accd62c8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5585accd6288 <col:20> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5585accd6310 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5585accd62f8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5585accd62a8 <col:38> '_Bool' lvalue Var 0x5585acccc600 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5585accd63c0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5585accd6378 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5585accd6348 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5585accd63f0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5585accd63d8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5585accd63a0 <col:66> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5585accd6738 <line:825:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5585accd6470 <col:3> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5585accd6720 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5585accd66f0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5585accd6610 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5585accd6530 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5585accd64e8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5585accd64d0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5585accd6490 <col:20> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5585accd6518 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5585accd6500 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5585accd64b0 <col:38> '_Bool' lvalue Var 0x5585acccc600 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5585accd65f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5585accd65a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5585accd6590 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5585accd6550 <col:56> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5585accd65d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5585accd65c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5585accd6570 <col:74> '_Bool' lvalue Var 0x5585acccc7e0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5585accd66a8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5585accd6660 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5585accd6630 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5585accd66d8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5585accd66c0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5585accd6688 <col:102> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5585accd6940 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5585accd6758 <col:3> '_Bool' lvalue Var 0x5585acccc600 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5585accd6928 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5585accd68f8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5585accd6818 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5585accd67d0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5585accd67b8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5585accd6778 <col:20> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5585accd6800 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5585accd67e8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5585accd6798 <col:38> '_Bool' lvalue Var 0x5585acccc600 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5585accd68b0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5585accd6868 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5585accd6838 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5585accd68e0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5585accd68c8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5585accd6890 <col:66> '_Bool' lvalue Var 0x5585acccc600 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5585accd6c28 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5585accd6960 <col:3> '_Bool' lvalue Var 0x5585acccc7e0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5585accd6c10 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5585accd6be0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5585accd6b00 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5585accd6a20 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5585accd69d8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5585accd69c0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5585accd6980 <col:20> '_Bool' lvalue Var 0x5585accccb38 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5585accd6a08 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5585accd69f0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5585accd69a0 <col:38> '_Bool' lvalue Var 0x5585acccc600 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5585accd6ae0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5585accd6a98 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5585accd6a80 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5585accd6a40 <col:56> '_Bool' lvalue Var 0x5585accccc30 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5585accd6ac8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5585accd6ab0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5585accd6a60 <col:74> '_Bool' lvalue Var 0x5585acccc7e0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5585accd6b98 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5585accd6b50 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5585accd6b20 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5585accd6bc8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5585accd6bb0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5585accd6b78 <col:102> '_Bool' lvalue Var 0x5585acccc7e0 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5585accd6c80 <line:828:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5585accd6c68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5585accd6c48 <col:3> 'void ()' Function 0x5585acc72570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5585accd6cd8 <line:829:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5585accd6cc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5585accd6ca0 <col:3> 'void ()' Function 0x5585acc724b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5585accd6d70 <line:830:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x5585accd6cf8 <col:3> '_Bool' lvalue Var 0x5585acccce40 'weak$$choice1' '_Bool'
    | `-CallExpr 0x5585accd6d50 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x5585accd6d38 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x5585accd6d18 <col:19> '_Bool (void)' Function 0x5585acc71c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x5585accd6fd0 <line:831:3, col:140> 'int' '='
    | |-DeclRefExpr 0x5585accd6d90 <col:3> 'int' lvalue Var 0x5585acccbaa0 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x5585accd6f78 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x5585accd6f48 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5585accd6f30 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5585accd6db0 <col:25> '_Bool' lvalue Var 0x5585acccc010 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x5585accd6ef0 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x5585accd6ec0 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x5585accd6e78 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x5585accd6e60 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5585accd6dd0 <col:61> '_Bool' lvalue Var 0x5585acccce40 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x5585accd6e90 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x5585accd6e28 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x5585accd6e10 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x5585accd6df0 <col:78> 'int *' lvalue Var 0x5585acccc090 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x5585accd6ea8 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5585accd6e40 <col:117> 'int' lvalue Var 0x5585acccbaa0 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x5585accd6f60 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5585accd6f10 <col:140> 'int' lvalue Var 0x5585acccbaa0 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x5585accd7208 <line:832:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x5585accd6ff0 <col:3> '_Bool' lvalue Var 0x5585acccc370 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5585accd71f0 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5585accd71d8 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5585accd71b8 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x5585accd7198 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x5585accd7100 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x5585accd7068 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x5585accd7050 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x5585accd7010 <col:23> 'int' lvalue Var 0x5585acccb860 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x5585accd7030 <col:46> 'int' 1
    |         | `-BinaryOperator 0x5585accd70e0 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5585accd70c8 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5585accd7088 <col:51> 'int' lvalue Var 0x5585acccb980 '__unbuffered_p0_EBX' 'int'
    |         |   `-IntegerLiteral 0x5585accd70a8 <col:74> 'int' 0
    |         `-BinaryOperator 0x5585accd7178 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x5585accd7160 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5585accd7120 <col:79> 'int' lvalue Var 0x5585acccbaa0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x5585accd7140 <col:102> 'int' 1
    |-CallExpr 0x5585accd7260 <line:833:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5585accd7248 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5585accd7228 <col:3> 'void ()' Function 0x5585acc72570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5585accd72d8 <line:834:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5585accd72c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585accd7280 <col:3> 'void (int)' Function 0x5585acc72238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5585accd7318 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5585accd7300 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5585accd72a0 <col:21> '_Bool' lvalue Var 0x5585acccc370 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5585accd7350 <line:835:3, col:10>
      `-IntegerLiteral 0x5585accd7330 <col:10> 'int' 0
