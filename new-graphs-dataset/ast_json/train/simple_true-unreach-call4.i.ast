TranslationUnitDecl 0x55598764cf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55598764d848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55598764d520 '__int128'
|-TypedefDecl 0x55598764d8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55598764d540 'unsigned __int128'
|-TypedefDecl 0x55598764dbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55598764d990 'struct __NSConstantString_tag'
|   `-Record 0x55598764d910 '__NSConstantString_tag'
|-TypedefDecl 0x55598764dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55598764dc20 'char *'
|   `-BuiltinType 0x55598764d020 'char'
|-TypedefDecl 0x55598768ccd0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55598764df00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55598764dd40 'struct __va_list_tag'
|     `-Record 0x55598764dcc0 '__va_list_tag'
|-FunctionDecl 0x55598768cdb0 <loop-acceleration/simple_true-unreach-call4.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55598768cf80 <line:2:1, line:7:1> line:2:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55598768ceb0 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x55598768d1d0 <col:34, line:7:1>
|   |-IfStmt 0x55598768d1a8 <line:3:3, line:5:3>
|   | |-UnaryOperator 0x55598768d080 <line:3:7, col:13> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55598768d068 <col:8, col:13> 'int' <LValueToRValue>
|   | |   `-ParenExpr 0x55598768d048 <col:8, col:13> 'int' lvalue
|   | |     `-DeclRefExpr 0x55598768d028 <col:9> 'int' lvalue ParmVar 0x55598768ceb0 'cond' 'int'
|   | `-CompoundStmt 0x55598768d190 <col:16, line:5:3>
|   |   `-LabelStmt 0x55598768d178 <line:4:5, col:29> 'ERROR'
|   |     `-CallExpr 0x55598768d108 <col:12, col:29> 'void'
|   |       `-ImplicitCastExpr 0x55598768d0f0 <col:12> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55598768d098 <col:12> 'void () __attribute__((noreturn))' Function 0x55598768cdb0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   `-ReturnStmt 0x55598768d1c0 <line:6:3>
`-FunctionDecl 0x55598768d2c8 <line:8:1, line:14:1> line:8:5 main 'int (void)'
  `-CompoundStmt 0x55598768d710 <col:16, line:14:1>
    |-DeclStmt 0x55598768d458 <line:9:3, col:30>
    | `-VarDecl 0x55598768d3b8 <col:3, col:20> col:16 used x 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x55598768d440 <col:20> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x55598768d420 <col:20> 'int' 268435440
    |-WhileStmt 0x55598768d5a0 <line:10:3, line:12:3>
    | |-BinaryOperator 0x55598768d4e0 <line:10:10, col:14> 'int' '>'
    | | |-ImplicitCastExpr 0x55598768d4b0 <col:10> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x55598768d470 <col:10> 'unsigned int' lvalue Var 0x55598768d3b8 'x' 'unsigned int'
    | | `-ImplicitCastExpr 0x55598768d4c8 <col:14> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x55598768d490 <col:14> 'int' 0
    | `-CompoundStmt 0x55598768d588 <col:17, line:12:3>
    |   `-CompoundAssignOperator 0x55598768d558 <line:11:5, col:10> 'unsigned int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |     |-DeclRefExpr 0x55598768d500 <col:5> 'unsigned int' lvalue Var 0x55598768d3b8 'x' 'unsigned int'
    |     `-ImplicitCastExpr 0x55598768d540 <col:10> 'unsigned int' <IntegralCast>
    |       `-IntegerLiteral 0x55598768d520 <col:10> 'int' 2
    `-CallExpr 0x55598768d6e8 <line:13:3, col:29> 'void'
      |-ImplicitCastExpr 0x55598768d6d0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x55598768d5b8 <col:3> 'void (int)' Function 0x55598768cf80 '__VERIFIER_assert' 'void (int)'
      `-UnaryOperator 0x55598768d688 <col:21, col:28> 'int' prefix '!' cannot overflow
        `-ParenExpr 0x55598768d668 <col:22, col:28> 'unsigned int'
          `-BinaryOperator 0x55598768d648 <col:23, col:27> 'unsigned int' '%'
            |-ImplicitCastExpr 0x55598768d618 <col:23> 'unsigned int' <LValueToRValue>
            | `-DeclRefExpr 0x55598768d5d8 <col:23> 'unsigned int' lvalue Var 0x55598768d3b8 'x' 'unsigned int'
            `-ImplicitCastExpr 0x55598768d630 <col:27> 'unsigned int' <IntegralCast>
              `-IntegerLiteral 0x55598768d5f8 <col:27> 'int' 2
