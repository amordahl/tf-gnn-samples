TranslationUnitDecl 0x5586c5253538 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5586c5253df8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5586c5253ad0 '__int128'
|-TypedefDecl 0x5586c5253e68 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5586c5253af0 'unsigned __int128'
|-TypedefDecl 0x5586c5254170 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5586c5253f40 'struct __NSConstantString_tag'
|   `-Record 0x5586c5253ec0 '__NSConstantString_tag'
|-TypedefDecl 0x5586c5254218 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5586c52541d0 'char *'
|   `-BuiltinType 0x5586c52535d0 'char'
|-TypedefDecl 0x5586c5293220 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5586c52544b0 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5586c52542f0 'struct __va_list_tag'
|     `-Record 0x5586c5254270 '__va_list_tag'
|-EnumDecl 0x5586c5293278 <termination-crafted/NonTerminationSimple6_false-no-overflow.c:6:9, col:26> col:9
| |-EnumConstantDecl 0x5586c5293348 <col:15> col:15 false 'int'
| `-EnumConstantDecl 0x5586c5293398 <col:22> col:22 true 'int'
|-TypedefDecl 0x5586c5293450 <col:1, col:28> col:28 bool 'enum bool':'bool'
| `-ElaboratedType 0x5586c52933f0 'enum bool' sugar
|   `-EnumType 0x5586c5293320 'bool'
|     `-Enum 0x5586c5293278 ''
|-FunctionDecl 0x5586c5293598 <line:8:1, col:38> col:12 used __VERIFIER_nondet_int 'int (void)' extern
`-FunctionDecl 0x5586c52936d8 <line:10:1, line:19:1> line:10:5 main 'int ()'
  `-CompoundStmt 0x5586c5293b80 <line:11:1, line:19:1>
    |-DeclStmt 0x5586c5293890 <line:12:2, col:10>
    | |-VarDecl 0x5586c5293790 <col:2, col:6> col:6 used c 'int'
    | `-VarDecl 0x5586c5293810 <col:2, col:9> col:9 used x 'int'
    |-BinaryOperator 0x5586c52938e8 <line:13:5, col:9> 'int' '='
    | |-DeclRefExpr 0x5586c52938a8 <col:5> 'int' lvalue Var 0x5586c5293790 'c' 'int'
    | `-IntegerLiteral 0x5586c52938c8 <col:9> 'int' 5
    |-BinaryOperator 0x5586c52939b8 <line:14:5, col:31> 'int' '='
    | |-DeclRefExpr 0x5586c5293908 <col:5> 'int' lvalue Var 0x5586c5293810 'x' 'int'
    | `-CallExpr 0x5586c5293998 <col:9, col:31> 'int'
    |   `-ImplicitCastExpr 0x5586c5293980 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x5586c5293928 <col:9> 'int (void)' Function 0x5586c5293598 '__VERIFIER_nondet_int' 'int (void)'
    |-WhileStmt 0x5586c5293b38 <line:15:2, line:17:2>
    | |-BinaryOperator 0x5586c5293a30 <line:15:9, col:14> 'int' '>='
    | | |-ImplicitCastExpr 0x5586c5293a18 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5586c52939d8 <col:9> 'int' lvalue Var 0x5586c5293810 'x' 'int'
    | | `-IntegerLiteral 0x5586c52939f8 <col:14> 'int' 0
    | `-CompoundStmt 0x5586c5293b20 <col:17, line:17:2>
    |   `-BinaryOperator 0x5586c5293b00 <line:16:3, col:11> 'int' '='
    |     |-DeclRefExpr 0x5586c5293a50 <col:3> 'int' lvalue Var 0x5586c5293810 'x' 'int'
    |     `-BinaryOperator 0x5586c5293ae0 <col:7, col:11> 'int' '+'
    |       |-ImplicitCastExpr 0x5586c5293ab0 <col:7> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5586c5293a70 <col:7> 'int' lvalue Var 0x5586c5293810 'x' 'int'
    |       `-ImplicitCastExpr 0x5586c5293ac8 <col:11> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5586c5293a90 <col:11> 'int' lvalue Var 0x5586c5293790 'c' 'int'
    `-ReturnStmt 0x5586c5293b70 <line:18:2, col:9>
      `-IntegerLiteral 0x5586c5293b50 <col:9> 'int' 0
