TranslationUnitDecl 0x564b3998dfe8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x564b3998e8a8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x564b3998e580 '__int128'
|-TypedefDecl 0x564b3998e918 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x564b3998e5a0 'unsigned __int128'
|-TypedefDecl 0x564b3998ec20 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x564b3998e9f0 'struct __NSConstantString_tag'
|   `-Record 0x564b3998e970 '__NSConstantString_tag'
|-TypedefDecl 0x564b3998ecc8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x564b3998ec80 'char *'
|   `-BuiltinType 0x564b3998e080 'char'
|-TypedefDecl 0x564b399cde60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x564b3998ef60 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x564b3998eda0 'struct __va_list_tag'
|     `-Record 0x564b3998ed20 '__va_list_tag'
|-FunctionDecl 0x564b399cdf40 <array-industry-pattern/array_of_struct_ptr_mul_init_true-unreach-call.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x564b399ce110 <line:2:1, col:79> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x564b399ce040 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x564b399ce350 <col:34, col:79>
|   `-IfStmt 0x564b399ce338 <col:36, col:77>
|     |-UnaryOperator 0x564b399ce210 <col:39, col:45> 'int' prefix '!' cannot overflow
|     | `-ImplicitCastExpr 0x564b399ce1f8 <col:40, col:45> 'int' <LValueToRValue>
|     |   `-ParenExpr 0x564b399ce1d8 <col:40, col:45> 'int' lvalue
|     |     `-DeclRefExpr 0x564b399ce1b8 <col:41> 'int' lvalue ParmVar 0x564b399ce040 'cond' 'int'
|     `-CompoundStmt 0x564b399ce320 <col:48, col:77>
|       `-LabelStmt 0x564b399ce308 <col:50, col:74> 'ERROR'
|         `-CallExpr 0x564b399ce298 <col:57, col:74> 'void'
|           `-ImplicitCastExpr 0x564b399ce280 <col:57> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|             `-DeclRefExpr 0x564b399ce228 <col:57> 'void () __attribute__((noreturn))' Function 0x564b399cdf40 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|-RecordDecl 0x564b399ce368 <line:3:1, line:6:1> line:3:8 struct S definition
| |-FieldDecl 0x564b399ce430 <line:4:2, col:17> col:17 referenced p 'unsigned short'
| `-FieldDecl 0x564b399ce498 <line:5:2, col:17> col:17 referenced q 'unsigned short'
|-VarDecl 0x564b399ce670 <line:3:1, line:6:11> col:3 used a 'struct S [100000]'
|-FunctionDecl 0x564b399ce748 <line:7:1, col:31> col:7 used __VERIFIER_nondet_short 'short ()'
|-FunctionDecl 0x564b399ce848 <line:8:1, col:39> col:15 used __VERIFIER_nondet_uchar 'unsigned char ()'
`-FunctionDecl 0x564b399ce948 <line:9:1, line:32:1> line:9:5 main 'int ()'
  `-CompoundStmt 0x564b399f3e50 <line:10:1, line:32:1>
    |-DeclStmt 0x564b399cea68 <line:11:2, col:17>
    | `-VarDecl 0x564b399cea00 <col:2, col:16> col:16 used k 'unsigned char'
    |-DeclStmt 0x564b399ceb00 <line:12:2, col:7>
    | `-VarDecl 0x564b399cea98 <col:2, col:6> col:6 used i 'int'
    |-ForStmt 0x564b399f30e0 <line:13:2, line:17:2>
    | |-BinaryOperator 0x564b399ceb58 <line:13:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x564b399ceb18 <col:7> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    | | `-IntegerLiteral 0x564b399ceb38 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x564b399cebd0 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x564b399cebb8 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x564b399ceb78 <col:14> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    | | `-IntegerLiteral 0x564b399ceb98 <col:18> 'int' 100000
    | |-UnaryOperator 0x564b399cec10 <col:27, col:28> 'int' postfix '++'
    | | `-DeclRefExpr 0x564b399cebf0 <col:27> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    | `-CompoundStmt 0x564b399f30c0 <line:14:2, line:17:2>
    |   |-BinaryOperator 0x564b399ceda0 <line:15:3, col:12> 'unsigned short' '='
    |   | |-MemberExpr 0x564b399ced20 <col:3, col:8> 'unsigned short' lvalue .p 0x564b399ce430
    |   | | `-ArraySubscriptExpr 0x564b399ced00 <col:3, col:6> 'struct S':'struct S' lvalue
    |   | |   |-ImplicitCastExpr 0x564b399cecd0 <col:3> 'struct S *' <ArrayToPointerDecay>
    |   | |   | `-DeclRefExpr 0x564b399cec28 <col:3> 'struct S [100000]' lvalue Var 0x564b399ce670 'a' 'struct S [100000]'
    |   | |   `-ImplicitCastExpr 0x564b399cece8 <col:5> 'int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x564b399cec48 <col:5> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    |   | `-ImplicitCastExpr 0x564b399ced88 <col:12> 'unsigned short' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x564b399ced70 <col:12> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x564b399ced50 <col:12> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    |   `-BinaryOperator 0x564b399f30a0 <line:16:3, col:12> 'unsigned short' '='
    |     |-MemberExpr 0x564b399f3020 <col:3, col:8> 'unsigned short' lvalue .q 0x564b399ce498
    |     | `-ArraySubscriptExpr 0x564b399cee30 <col:3, col:6> 'struct S':'struct S' lvalue
    |     |   |-ImplicitCastExpr 0x564b399cee00 <col:3> 'struct S *' <ArrayToPointerDecay>
    |     |   | `-DeclRefExpr 0x564b399cedc0 <col:3> 'struct S [100000]' lvalue Var 0x564b399ce670 'a' 'struct S [100000]'
    |     |   `-ImplicitCastExpr 0x564b399cee18 <col:5> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564b399cede0 <col:5> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    |     `-ImplicitCastExpr 0x564b399f3088 <col:12> 'unsigned short' <IntegralCast>
    |       `-ImplicitCastExpr 0x564b399f3070 <col:12> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564b399f3050 <col:12> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    |-ForStmt 0x564b399f36c8 <line:18:2, line:26:2>
    | |-BinaryOperator 0x564b399f3158 <line:18:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x564b399f3118 <col:7> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    | | `-IntegerLiteral 0x564b399f3138 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x564b399f31d0 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x564b399f31b8 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x564b399f3178 <col:14> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    | | `-IntegerLiteral 0x564b399f3198 <col:18> 'int' 100000
    | |-UnaryOperator 0x564b399f3210 <col:26, col:27> 'int' postfix '++'
    | | `-DeclRefExpr 0x564b399f31f0 <col:26> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    | `-CompoundStmt 0x564b399f36b0 <line:19:2, line:26:2>
    |   `-IfStmt 0x564b399f3698 <line:20:3, line:25:3>
    |     |-CallExpr 0x564b399f3298 <line:20:8, col:32> 'short'
    |     | `-ImplicitCastExpr 0x564b399f3280 <col:8> 'short (*)()' <FunctionToPointerDecay>
    |     |   `-DeclRefExpr 0x564b399f3228 <col:8> 'short ()' Function 0x564b399ce748 '__VERIFIER_nondet_short' 'short ()'
    |     `-CompoundStmt 0x564b399f3670 <line:21:3, line:25:3>
    |       |-BinaryOperator 0x564b399f3368 <line:22:4, col:32> 'unsigned char' '='
    |       | |-DeclRefExpr 0x564b399f32b8 <col:4> 'unsigned char' lvalue Var 0x564b399cea00 'k' 'unsigned char'
    |       | `-CallExpr 0x564b399f3348 <col:8, col:32> 'unsigned char'
    |       |   `-ImplicitCastExpr 0x564b399f3330 <col:8> 'unsigned char (*)()' <FunctionToPointerDecay>
    |       |     `-DeclRefExpr 0x564b399f32d8 <col:8> 'unsigned char ()' Function 0x564b399ce848 '__VERIFIER_nondet_uchar' 'unsigned char ()'
    |       |-BinaryOperator 0x564b399f3498 <line:23:4, col:13> 'unsigned short' '='
    |       | |-MemberExpr 0x564b399f3418 <col:4, col:9> 'unsigned short' lvalue .p 0x564b399ce430
    |       | | `-ArraySubscriptExpr 0x564b399f33f8 <col:4, col:7> 'struct S':'struct S' lvalue
    |       | |   |-ImplicitCastExpr 0x564b399f33c8 <col:4> 'struct S *' <ArrayToPointerDecay>
    |       | |   | `-DeclRefExpr 0x564b399f3388 <col:4> 'struct S [100000]' lvalue Var 0x564b399ce670 'a' 'struct S [100000]'
    |       | |   `-ImplicitCastExpr 0x564b399f33e0 <col:6> 'int' <LValueToRValue>
    |       | |     `-DeclRefExpr 0x564b399f33a8 <col:6> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    |       | `-ImplicitCastExpr 0x564b399f3480 <col:13> 'unsigned short' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564b399f3468 <col:13> 'unsigned char' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564b399f3448 <col:13> 'unsigned char' lvalue Var 0x564b399cea00 'k' 'unsigned char'
    |       `-BinaryOperator 0x564b399f3650 <line:24:4, col:17> 'unsigned short' '='
    |         |-MemberExpr 0x564b399f3548 <col:4, col:9> 'unsigned short' lvalue .q 0x564b399ce498
    |         | `-ArraySubscriptExpr 0x564b399f3528 <col:4, col:7> 'struct S':'struct S' lvalue
    |         |   |-ImplicitCastExpr 0x564b399f34f8 <col:4> 'struct S *' <ArrayToPointerDecay>
    |         |   | `-DeclRefExpr 0x564b399f34b8 <col:4> 'struct S [100000]' lvalue Var 0x564b399ce670 'a' 'struct S [100000]'
    |         |   `-ImplicitCastExpr 0x564b399f3510 <col:6> 'int' <LValueToRValue>
    |         |     `-DeclRefExpr 0x564b399f34d8 <col:6> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    |         `-ImplicitCastExpr 0x564b399f3638 <col:13, col:17> 'unsigned short' <IntegralCast>
    |           `-BinaryOperator 0x564b399f3618 <col:13, col:17> 'int' '*'
    |             |-ImplicitCastExpr 0x564b399f35d0 <col:13> 'int' <IntegralCast>
    |             | `-ImplicitCastExpr 0x564b399f35b8 <col:13> 'unsigned char' <LValueToRValue>
    |             |   `-DeclRefExpr 0x564b399f3578 <col:13> 'unsigned char' lvalue Var 0x564b399cea00 'k' 'unsigned char'
    |             `-ImplicitCastExpr 0x564b399f3600 <col:17> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x564b399f35e8 <col:17> 'unsigned char' <LValueToRValue>
    |                 `-DeclRefExpr 0x564b399f3598 <col:17> 'unsigned char' lvalue Var 0x564b399cea00 'k' 'unsigned char'
    |-ForStmt 0x564b399f3de8 <line:27:2, line:30:2>
    | |-BinaryOperator 0x564b399f3740 <line:27:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x564b399f3700 <col:7> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    | | `-IntegerLiteral 0x564b399f3720 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x564b399f37b8 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x564b399f37a0 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x564b399f3760 <col:14> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    | | `-IntegerLiteral 0x564b399f3780 <col:18> 'int' 100000
    | |-UnaryOperator 0x564b399f37f8 <col:26, col:27> 'int' postfix '++'
    | | `-DeclRefExpr 0x564b399f37d8 <col:26> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    | `-CompoundStmt 0x564b399f3dd0 <line:28:2, line:30:2>
    |   `-CallExpr 0x564b399f3da8 <line:29:3, col:66> 'void'
    |     |-ImplicitCastExpr 0x564b399f3d90 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x564b399f3810 <col:3> 'void (int)' Function 0x564b399ce110 '__VERIFIER_assert' 'void (int)'
    |     `-BinaryOperator 0x564b399f3d40 <col:21, col:65> 'int' '||'
    |       |-BinaryOperator 0x564b399f3a10 <col:21, col:36> 'int' '=='
    |       | |-ImplicitCastExpr 0x564b399f39e0 <col:21, col:26> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564b399f39b0 <col:21, col:26> 'unsigned short' <LValueToRValue>
    |       | |   `-MemberExpr 0x564b399f38c0 <col:21, col:26> 'unsigned short' lvalue .p 0x564b399ce430
    |       | |     `-ArraySubscriptExpr 0x564b399f38a0 <col:21, col:24> 'struct S':'struct S' lvalue
    |       | |       |-ImplicitCastExpr 0x564b399f3870 <col:21> 'struct S *' <ArrayToPointerDecay>
    |       | |       | `-DeclRefExpr 0x564b399f3830 <col:21> 'struct S [100000]' lvalue Var 0x564b399ce670 'a' 'struct S [100000]'
    |       | |       `-ImplicitCastExpr 0x564b399f3888 <col:23> 'int' <LValueToRValue>
    |       | |         `-DeclRefExpr 0x564b399f3850 <col:23> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    |       | `-ImplicitCastExpr 0x564b399f39f8 <col:31, col:36> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564b399f39c8 <col:31, col:36> 'unsigned short' <LValueToRValue>
    |       |     `-MemberExpr 0x564b399f3980 <col:31, col:36> 'unsigned short' lvalue .q 0x564b399ce498
    |       |       `-ArraySubscriptExpr 0x564b399f3960 <col:31, col:34> 'struct S':'struct S' lvalue
    |       |         |-ImplicitCastExpr 0x564b399f3930 <col:31> 'struct S *' <ArrayToPointerDecay>
    |       |         | `-DeclRefExpr 0x564b399f38f0 <col:31> 'struct S [100000]' lvalue Var 0x564b399ce670 'a' 'struct S [100000]'
    |       |         `-ImplicitCastExpr 0x564b399f3948 <col:33> 'int' <LValueToRValue>
    |       |           `-DeclRefExpr 0x564b399f3910 <col:33> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    |       `-BinaryOperator 0x564b399f3d20 <col:41, col:65> 'int' '=='
    |         |-ImplicitCastExpr 0x564b399f3d08 <col:41, col:46> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x564b399f3cf0 <col:41, col:46> 'unsigned short' <LValueToRValue>
    |         |   `-MemberExpr 0x564b399f3ac0 <col:41, col:46> 'unsigned short' lvalue .q 0x564b399ce498
    |         |     `-ArraySubscriptExpr 0x564b399f3aa0 <col:41, col:44> 'struct S':'struct S' lvalue
    |         |       |-ImplicitCastExpr 0x564b399f3a70 <col:41> 'struct S *' <ArrayToPointerDecay>
    |         |       | `-DeclRefExpr 0x564b399f3a30 <col:41> 'struct S [100000]' lvalue Var 0x564b399ce670 'a' 'struct S [100000]'
    |         |       `-ImplicitCastExpr 0x564b399f3a88 <col:43> 'int' <LValueToRValue>
    |         |         `-DeclRefExpr 0x564b399f3a50 <col:43> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    |         `-BinaryOperator 0x564b399f3cd0 <col:51, col:65> 'int' '*'
    |           |-ImplicitCastExpr 0x564b399f3c88 <col:51, col:56> 'int' <IntegralCast>
    |           | `-ImplicitCastExpr 0x564b399f3c70 <col:51, col:56> 'unsigned short' <LValueToRValue>
    |           |   `-MemberExpr 0x564b399f3b80 <col:51, col:56> 'unsigned short' lvalue .p 0x564b399ce430
    |           |     `-ArraySubscriptExpr 0x564b399f3b60 <col:51, col:54> 'struct S':'struct S' lvalue
    |           |       |-ImplicitCastExpr 0x564b399f3b30 <col:51> 'struct S *' <ArrayToPointerDecay>
    |           |       | `-DeclRefExpr 0x564b399f3af0 <col:51> 'struct S [100000]' lvalue Var 0x564b399ce670 'a' 'struct S [100000]'
    |           |       `-ImplicitCastExpr 0x564b399f3b48 <col:53> 'int' <LValueToRValue>
    |           |         `-DeclRefExpr 0x564b399f3b10 <col:53> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    |           `-ImplicitCastExpr 0x564b399f3cb8 <col:60, col:65> 'int' <IntegralCast>
    |             `-ImplicitCastExpr 0x564b399f3ca0 <col:60, col:65> 'unsigned short' <LValueToRValue>
    |               `-MemberExpr 0x564b399f3c40 <col:60, col:65> 'unsigned short' lvalue .p 0x564b399ce430
    |                 `-ArraySubscriptExpr 0x564b399f3c20 <col:60, col:63> 'struct S':'struct S' lvalue
    |                   |-ImplicitCastExpr 0x564b399f3bf0 <col:60> 'struct S *' <ArrayToPointerDecay>
    |                   | `-DeclRefExpr 0x564b399f3bb0 <col:60> 'struct S [100000]' lvalue Var 0x564b399ce670 'a' 'struct S [100000]'
    |                   `-ImplicitCastExpr 0x564b399f3c08 <col:62> 'int' <LValueToRValue>
    |                     `-DeclRefExpr 0x564b399f3bd0 <col:62> 'int' lvalue Var 0x564b399cea98 'i' 'int'
    `-ReturnStmt 0x564b399f3e40 <line:31:2, col:9>
      `-IntegerLiteral 0x564b399f3e20 <col:9> 'int' 0
