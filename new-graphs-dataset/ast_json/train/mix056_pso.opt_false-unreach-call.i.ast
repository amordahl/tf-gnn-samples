TranslationUnitDecl 0x561dc2e86f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561dc2e87848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561dc2e87520 '__int128'
|-TypedefDecl 0x561dc2e878b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561dc2e87540 'unsigned __int128'
|-TypedefDecl 0x561dc2e87bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561dc2e87990 'struct __NSConstantString_tag'
|   `-Record 0x561dc2e87910 '__NSConstantString_tag'
|-TypedefDecl 0x561dc2e87c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561dc2e87c20 'char *'
|   `-BuiltinType 0x561dc2e87020 'char'
|-TypedefDecl 0x561dc2ec6b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561dc2e87f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561dc2e87d40 'struct __va_list_tag'
|     `-Record 0x561dc2e87cc0 '__va_list_tag'
|-FunctionDecl 0x561dc2ec6ca0 <pthread-wmm/mix056_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x561dc2ec6bd0 <col:31> col:34 'int'
|-FunctionDecl 0x561dc2ec6e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x561dc2ec6f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x561dc2ec70d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x561dc2ec7048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x561dc2ec7308 <col:40, col:99>
|   |-IfStmt 0x561dc2ec72d8 <col:42, col:88>
|   | |-UnaryOperator 0x561dc2ec71b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x561dc2ec71a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x561dc2ec7180 <col:47> 'int' lvalue ParmVar 0x561dc2ec7048 'expression' 'int'
|   | `-CompoundStmt 0x561dc2ec72c0 <col:59, col:88>
|   |   `-LabelStmt 0x561dc2ec72a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x561dc2ec7238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x561dc2ec7220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x561dc2ec71d0 <col:68> 'void () __attribute__((noreturn))' Function 0x561dc2ec6f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x561dc2ec72f0 <col:89>
|   `-ReturnStmt 0x561dc2ec72f8 <col:91>
|-FunctionDecl 0x561dc2ec7350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x561dc2ec7410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x561dc2ec7790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561dc2ec74c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x561dc2ec7548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x561dc2ec75c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561dc2ec7648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561dc2ec7850 <line:10:22>
|-FunctionDecl 0x561dc2eed8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561dc2ec78c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x561dc2ec7940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x561dc2ec79c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561dc2ec7a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561dc2eed960 <line:13:22>
|-FunctionDecl 0x561dc2eedc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561dc2eed9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x561dc2eeda50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x561dc2eedad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x561dc2eedcc8 <line:15:22>
|-TypedefDecl 0x561dc2eedd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x561dc2e870e0 'unsigned char'
|-TypedefDecl 0x561dc2eedda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x561dc2e87100 'unsigned short'
|-TypedefDecl 0x561dc2eede18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x561dc2e87120 'unsigned int'
|-TypedefDecl 0x561dc2eede88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-TypedefDecl 0x561dc2eedef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x561dc2e87040 'signed char'
|-TypedefDecl 0x561dc2eedf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x561dc2e870e0 'unsigned char'
|-TypedefDecl 0x561dc2eedfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x561dc2e87060 'short'
|-TypedefDecl 0x561dc2eee048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x561dc2e87100 'unsigned short'
|-TypedefDecl 0x561dc2eee0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x561dc2e87080 'int'
|-TypedefDecl 0x561dc2eee128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x561dc2e87120 'unsigned int'
|-TypedefDecl 0x561dc2eee198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2eee208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-TypedefDecl 0x561dc2eee278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2eee2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-TypedefDecl 0x561dc2eee358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-TypedefDecl 0x561dc2eee3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x561dc2e87120 'unsigned int'
|-TypedefDecl 0x561dc2eee438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x561dc2e87120 'unsigned int'
|-TypedefDecl 0x561dc2eee4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-TypedefDecl 0x561dc2eee518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-TypedefDecl 0x561dc2eee588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x561dc2e87120 'unsigned int'
|-TypedefDecl 0x561dc2eee5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-TypedefDecl 0x561dc2eee668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2eee6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2eee748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x561dc2e87080 'int'
|-RecordDecl 0x561dc2eee7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x561dc2eee918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x561dc2eee9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x561dc2eee970 'struct __fsid_t' sugar
|   `-RecordType 0x561dc2eee820 '__fsid_t'
|     `-Record 0x561dc2eee7a0 ''
|-TypedefDecl 0x561dc2eeea58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2eeeac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-TypedefDecl 0x561dc2eeeb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-TypedefDecl 0x561dc2eeeba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x561dc2e87120 'unsigned int'
|-TypedefDecl 0x561dc2eeec18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2eeec88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x561dc2e87120 'unsigned int'
|-TypedefDecl 0x561dc2eeecf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2eeed68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x561dc2e87080 'int'
|-TypedefDecl 0x561dc2eeedd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x561dc2e87080 'int'
|-TypedefDecl 0x561dc2eeee48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x561dc2e87080 'int'
|-TypedefDecl 0x561dc2eeeeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x561dc2e877a0 'void *'
|   `-BuiltinType 0x561dc2e86fe0 'void'
|-TypedefDecl 0x561dc2eeef28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2eeef98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2eef008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2eef078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-TypedefDecl 0x561dc2eef0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-TypedefDecl 0x561dc2eef158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-TypedefDecl 0x561dc2eef1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-TypedefDecl 0x561dc2eef238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2eef2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2eef318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2eef388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-TypedefDecl 0x561dc2eef418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x561dc2eef3e0 '__off64_t' sugar
|   |-Typedef 0x561dc2eee6d8 '__off64_t'
|   `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2eef510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x561dc2eef4d0 '__quad_t *'
|   `-TypedefType 0x561dc2eef470 '__quad_t' sugar
|     |-Typedef 0x561dc2eee278 '__quad_t'
|     `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2eef580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x561dc2e87c20 'char *'
|   `-BuiltinType 0x561dc2e87020 'char'
|-TypedefDecl 0x561dc2eef5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2eef660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x561dc2e87120 'unsigned int'
|-FunctionDecl 0x561dc2eef7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x561dc2eef6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x561dc2eefae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x561dc2eefad8 <line:72:3, col:34>
|     `-CallExpr 0x561dc2eefa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x561dc2eefa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561dc2eefa10 <col:10> '<builtin fn type>' Function 0x561dc2eef880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x561dc2eefac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561dc2eefa30 <col:29> 'unsigned int' lvalue ParmVar 0x561dc2eef6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x561dc2eef880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x561dc2eef920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x561dc2eef990 <col:10> Implicit
| `-ConstAttr 0x561dc2eef9e8 <col:10> Implicit
|-FunctionDecl 0x561dc2eefc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x561dc2eefb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x561dc2eeff58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x561dc2eeff48 <line:77:3, col:34>
|     `-CallExpr 0x561dc2eeff08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x561dc2eefef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561dc2eefe78 <col:10> '<builtin fn type>' Function 0x561dc2eefce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x561dc2eeff30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x561dc2eefe98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x561dc2eefb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x561dc2eefce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x561dc2eefd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x561dc2eefdf8 <col:10> Implicit
| `-ConstAttr 0x561dc2eefe50 <col:10> Implicit
|-TypedefDecl 0x561dc2eeff88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-TypedefDecl 0x561dc2ef0018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x561dc2eeffe0 '__time_t' sugar
|   |-Typedef 0x561dc2eeec18 '__time_t'
|   `-BuiltinType 0x561dc2e870a0 'long'
|-RecordDecl 0x561dc2ef0070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x561dc2ef0128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x561dc2ef01b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x561dc2ef0248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x561dc2ef0210 '__pid_t' sugar
|   |-Typedef 0x561dc2eee748 '__pid_t'
|   `-BuiltinType 0x561dc2e87080 'int'
|-RecordDecl 0x561dc2ef02a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x561dc2ef0360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x561dc2ef03b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x561dc2ef0470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x561dc2ef04d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-RecordDecl 0x561dc2ef0530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x561dc2ef07c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x561dc2ef28b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x561dc2ef0810 'struct cpu_set_t' sugar
|   `-RecordType 0x561dc2ef05b0 'cpu_set_t'
|     `-Record 0x561dc2ef0530 ''
|-FunctionDecl 0x561dc2ef2b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x561dc2ef2958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561dc2ef2a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x561dc2ef2c38 <line:107:19>
|-FunctionDecl 0x561dc2ef2e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x561dc2ef2ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x561dc2ef2eb8 <col:69>
|-FunctionDecl 0x561dc2ef3030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x561dc2ef2f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x561dc2ef30d8 <col:64>
|-FunctionDecl 0x561dc2ef3398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x561dc2ef3140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561dc2ef3278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561dc2ef3448 <line:113:22>
|-FunctionDecl 0x561dc2ef36c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x561dc2ef34b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561dc2ef35a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x561dc2ef3778 <col:88>
|-FunctionDecl 0x561dc2ef3a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561dc2ef37e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561dc2ef38c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x561dc2ef3950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561dc2ef3b50 <col:62>
|-FunctionDecl 0x561dc2ef3cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x561dc2ef3bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x561dc2ef3d70 <col:63>
|-FunctionDecl 0x561dc2ef3e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x561dc2ef3f38 <col:47>
|-FunctionDecl 0x561dc2ef4040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x561dc2ef3fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561dc2ef40e8 <col:69>
|-FunctionDecl 0x561dc2ef41f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x561dc2ef4158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561dc2ef4298 <col:69>
|-FunctionDecl 0x561dc2ef4558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561dc2ef4300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561dc2ef4438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x561dc2ef4608 <col:88>
|-TypedefDecl 0x561dc2ef4698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x561dc2ef4660 '__clock_t' sugar
|   |-Typedef 0x561dc2eeea58 '__clock_t'
|   `-BuiltinType 0x561dc2e870a0 'long'
|-TypedefDecl 0x561dc2ef4728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x561dc2ef46f0 '__clockid_t' sugar
|   |-Typedef 0x561dc2eeee48 '__clockid_t'
|   `-BuiltinType 0x561dc2e87080 'int'
|-TypedefDecl 0x561dc2ef47b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x561dc2ef4780 '__timer_t' sugar
|   |-Typedef 0x561dc2eeeeb8 '__timer_t'
|   `-PointerType 0x561dc2e877a0 'void *'
|     `-BuiltinType 0x561dc2e86fe0 'void'
|-RecordDecl 0x561dc2ef4810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x561dc2ef48e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x561dc2ef4950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x561dc2ef49b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x561dc2ef4a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x561dc2ef4a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x561dc2ef4af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x561dc2ef4b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x561dc2ef4bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x561dc2ef4c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x561dc2ef4c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x561dc2ef4cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x561dc2ef4d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x561dc2ef4e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x561dc2ef4e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x561dc2ef4f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x561dc2ef5100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x561dc2ef51a0 <col:45>
|-FunctionDecl 0x561dc2ef5380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x561dc2ef5270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x561dc2ef5428 <col:54>
|-FunctionDecl 0x561dc2ef5628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x561dc2ef5490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x561dc2ef5508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x561dc2ef56d8 <line:157:22>
| `-ConstAttr 0x561dc2ef5730 <col:63>
|-FunctionDecl 0x561dc2ef6560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561dc2ef5828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561dc2ef6608 <col:56>
|-FunctionDecl 0x561dc2ef69b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x561dc2ef6678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x561dc2ef66f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561dc2ef6770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x561dc2ef6868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x561dc2ef6a70 <col:54>
|-RecordDecl 0x561dc2ef6ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x561dc2ef6b78 parent 0x561dc2e86f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x561dc2ef6dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x561dc2ef6e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x561dc2ef6ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x561dc2ef6f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x561dc2ef7038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x561dc2ef7158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x561dc2ef7100 'struct __locale_struct *'
|   `-ElaboratedType 0x561dc2ef7090 'struct __locale_struct' sugar
|     `-RecordType 0x561dc2ef6b50 'struct __locale_struct'
|       `-Record 0x561dc2ef6ac8 '__locale_struct'
|-TypedefDecl 0x561dc2ef7208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x561dc2ef71d0 '__locale_t' sugar
|   |-Typedef 0x561dc2ef7158 '__locale_t'
|   `-PointerType 0x561dc2ef7100 'struct __locale_struct *'
|     `-ElaboratedType 0x561dc2ef7090 'struct __locale_struct' sugar
|       `-RecordType 0x561dc2ef6b50 'struct __locale_struct'
|         `-Record 0x561dc2ef6ac8 '__locale_struct'
|-FunctionDecl 0x561dc2ef7610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x561dc2ef7278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x561dc2ef72f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561dc2ef7370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x561dc2ef7400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561dc2ef7478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x561dc2ef76d8 <col:40>
|-FunctionDecl 0x561dc2ef78c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561dc2ef77a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x561dc2ef7970 <col:66>
|-FunctionDecl 0x561dc2ef7a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561dc2ef79d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x561dc2ef7b28 <col:69>
|-FunctionDecl 0x561dc2ef7d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561dc2ef7b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561dc2ef7c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561dc2ef7e08 <col:52>
|-FunctionDecl 0x561dc2ef7fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561dc2ef7e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561dc2ef7f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561dc2ef8060 <col:55>
|-FunctionDecl 0x561dc2ef81f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x561dc2ef80e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x561dc2ef82a0 <col:62>
|-FunctionDecl 0x561dc2ef8418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x561dc2ef8308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x561dc2ef84c0 <col:60>
|-FunctionDecl 0x561dc2ef8718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561dc2ef8578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561dc2ef85f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x561dc2ef87c8 <col:44>
|-FunctionDecl 0x561dc2ef89d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561dc2ef8830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561dc2ef88b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x561dc2ef8a88 <col:49>
|-VarDecl 0x561dc2ef8b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x561dc2ef8c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x561dc2ef8c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x561dc2ef8d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x561dc2ef8e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x561dc2ef8f20 <col:42>
|-VarDecl 0x561dc2ef8f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x561dc2ef9010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x561dc2ef9198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x561dc2ef9088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x561dc2ef9240 <col:57>
|-FunctionDecl 0x561dc2ef9350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561dc2ef92c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561dc2ef93f8 <col:56>
|-FunctionDecl 0x561dc2efa540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561dc2ef9478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x561dc2efa5e8 <col:59>
|-FunctionDecl 0x561dc2efa6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x561dc2efa658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x561dc2efa798 <col:48>
| `-ConstAttr 0x561dc2efa7f0 <col:89>
|-FunctionDecl 0x561dc2efaa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561dc2efa8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x561dc2efa938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x561dc2efacb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561dc2efab48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561dc2efabd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x561dc2efad68 <col:88>
|-FunctionDecl 0x561dc2efaf00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561dc2efadd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561dc2efae60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x561dc2efafb0 <col:88>
|-FunctionDecl 0x561dc2efb1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x561dc2efb018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561dc2efb0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x561dc2efb278 <line:208:22>
|-FunctionDecl 0x561dc2efb5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561dc2efb2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561dc2efb360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x561dc2efb3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x561dc2efb480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x561dc2efb8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x561dc2efb6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x561dc2efb7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x561dc2efb998 <col:85>
|-FunctionDecl 0x561dc2efbd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x561dc2efba00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561dc2efbb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x561dc2efbc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x561dc2efbe40 <col:52>
|-FunctionDecl 0x561dc2efbfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x561dc2efbea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561dc2efc060 <col:61>
|-FunctionDecl 0x561dc2efc560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x561dc2efc0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561dc2efc148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x561dc2efc278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x561dc2efc368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x561dc2efc620 <col:62>
|-FunctionDecl 0x561dc2efc838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x561dc2efc688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561dc2efc718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x561dc2efc8e8 <line:221:22>
|-FunctionDecl 0x561dc2efc9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x561dc2efc950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561dc2efca90 <col:65>
|-TypedefDecl 0x561dc2efcb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x561dc2e87140 'unsigned long'
|-RecordDecl 0x561dc2efcb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x561dc2efcca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561dc2efcd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561dc2efcdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x561dc2efcd60 'union pthread_attr_t' sugar
|   `-RecordType 0x561dc2efcbe0 'union pthread_attr_t'
|     `-Record 0x561dc2efcb58 'pthread_attr_t'
|-RecordDecl 0x561dc2efce10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x561dc2efcf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x561dc2efd000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x561dc2efd0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x561dc2efd050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x561dc2efce90 'struct __pthread_internal_list'
|     `-Record 0x561dc2efce10 '__pthread_internal_list'
|-RecordDecl 0x561dc2efd120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x561dc2efd1c8 parent 0x561dc2e86f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x561dc2efd2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561dc2efd308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x561dc2efd370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x561dc2efd3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x561dc2efd440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x561dc2efd4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x561dc2f01580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x561dc2f01630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x561dc2f01720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x561dc2f01788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561dc2f01910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x561dc2f018b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x561dc2efd1a0 'pthread_mutex_t'
|     `-Record 0x561dc2efd120 ''
|-RecordDecl 0x561dc2f01980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x561dc2f01ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561dc2f01b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561dc2f01be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x561dc2f01b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x561dc2f01a00 'pthread_mutexattr_t'
|     `-Record 0x561dc2f01980 ''
|-RecordDecl 0x561dc2f01c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x561dc2f01cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x561dc2f01dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561dc2f01e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x561dc2f01e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x561dc2f01ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x561dc2f01f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x561dc2f01fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x561dc2f02030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x561dc2f02098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x561dc2f02150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix056_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix056_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x561dc2f02240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x561dc2f022a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x561dc2f023e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x561dc2f02380 'union pthread_cond_t' sugar
|   `-RecordType 0x561dc2f01cd0 'pthread_cond_t'
|     `-Record 0x561dc2f01c50 ''
|-RecordDecl 0x561dc2f02450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x561dc2f02590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561dc2f025f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561dc2f026b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x561dc2f02650 'union pthread_condattr_t' sugar
|   `-RecordType 0x561dc2f024d0 'pthread_condattr_t'
|     `-Record 0x561dc2f02450 ''
|-TypedefDecl 0x561dc2f02738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x561dc2e87120 'unsigned int'
|-TypedefDecl 0x561dc2f027a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x561dc2e87080 'int'
|-RecordDecl 0x561dc2f02800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x561dc2f028a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x561dc2f02970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561dc2f029d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x561dc2f02a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x561dc2f02aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x561dc2f02b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x561dc2f02b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x561dc2f02be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x561dc2f02c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x561dc2f02cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x561dc2f02d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x561dc2f02d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x561dc2f02e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix056_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix056_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x561dc2f02ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561dc2f02f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561dc2f03090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x561dc2f03030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x561dc2f02880 'pthread_rwlock_t'
|     `-Record 0x561dc2f02800 ''
|-RecordDecl 0x561dc2f03100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x561dc2f03240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x561dc2f032a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561dc2f03360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x561dc2f03300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x561dc2f03180 'pthread_rwlockattr_t'
|     `-Record 0x561dc2f03100 ''
|-TypedefDecl 0x561dc2f033e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x561dc2e87084 'volatile int' volatile
|   `-BuiltinType 0x561dc2e87080 'int'
|-RecordDecl 0x561dc2f03440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x561dc2f055b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x561dc2f05618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561dc2f056d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x561dc2f05670 'union pthread_barrier_t' sugar
|   `-RecordType 0x561dc2f034c0 'pthread_barrier_t'
|     `-Record 0x561dc2f03440 ''
|-RecordDecl 0x561dc2f05740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x561dc2f05840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561dc2f058a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561dc2f05960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x561dc2f05900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x561dc2f057c0 'pthread_barrierattr_t'
|     `-Record 0x561dc2f05740 ''
|-TypedefDecl 0x561dc2f05a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x561dc2f05a10 'long [8]' 8 
|   `-BuiltinType 0x561dc2e870a0 'long'
|-EnumDecl 0x561dc2f05ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x561dc2f05b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x561dc2f05be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x561dc2f05c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x561dc2f05d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x561dc2f05d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x561dc2f05da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x561dc2f05df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x561dc2f05e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x561dc2f05e68 <col:26> 'int'
| |   `-DeclRefExpr 0x561dc2f05e48 <col:26> 'int' EnumConstant 0x561dc2f05d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x561dc2f05f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x561dc2f05ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x561dc2f05ed0 <col:29> 'int' EnumConstant 0x561dc2f05d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x561dc2f05f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x561dc2f05f78 <col:30> 'int'
| |   `-DeclRefExpr 0x561dc2f05f58 <col:30> 'int' EnumConstant 0x561dc2f05da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x561dc2f06018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x561dc2f06000 <col:27> 'int'
|     `-DeclRefExpr 0x561dc2f05fe0 <col:27> 'int' EnumConstant 0x561dc2f05e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x561dc2f06068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x561dc2f06138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x561dc2f061c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x561dc2f061a8 <col:30> 'int'
| |   `-DeclRefExpr 0x561dc2f06188 <col:30> 'int' EnumConstant 0x561dc2f06138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x561dc2f06210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x561dc2f06298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x561dc2f06280 <col:29> 'int'
|     `-DeclRefExpr 0x561dc2f06260 <col:29> 'int' EnumConstant 0x561dc2f06210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x561dc2f062e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x561dc2f063b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x561dc2f06408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x561dc2f06458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x561dc2f064a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x561dc2f065c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x561dc2f06610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x561dc2f06660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x561dc2f066e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x561dc2f066d0 <col:31> 'int'
|     `-DeclRefExpr 0x561dc2f066b0 <col:31> 'int' EnumConstant 0x561dc2f065c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x561dc2f06738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x561dc2f06808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x561dc2f06858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x561dc2f068a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x561dc2f06978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x561dc2f069c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x561dc2f06a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x561dc2f06ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x561dc2f06b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x561dc2f06b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x561dc2f06dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x561dc2f06e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x561dc2f06e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x561dc2f06fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x561dc2f07008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x561dc2f070d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x561dc2f07128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x561dc2f07178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x561dc2f07248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x561dc2f07298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x561dc2f078f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x561dc2f07390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x561dc2f074a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561dc2f076e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x561dc2f07760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x561dc2f079b8 <col:47>
| |-NonNullAttr 0x561dc2f07a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x561dc2f07a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x561dc2f07b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x561dc2f07aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x561dc2f07dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x561dc2f07c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x561dc2f07ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x561dc2f07f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x561dc2f07e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x561dc2f08040 <col:60>
|-FunctionDecl 0x561dc2f08190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x561dc2f08230 <col:54>
| `-ConstAttr 0x561dc2f08288 <col:95>
|-FunctionDecl 0x561dc2f08458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x561dc2f082c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561dc2f08338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x561dc2f08508 <line:394:19>
| `-ConstAttr 0x561dc2f08560 <col:60>
|-FunctionDecl 0x561dc2f08f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561dc2f08e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561dc2f09010 <col:71>
| `-NonNullAttr 0x561dc2f09068 <col:112, col:126> 1
|-FunctionDecl 0x561dc2f09170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561dc2f090b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561dc2f09218 <line:397:22>
| `-NonNullAttr 0x561dc2f09270 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f09498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x561dc2f092b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561dc2f09338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x561dc2f09548 <line:400:22>
| `-NonNullAttr 0x561dc2f095a0 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f097a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561dc2f095e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561dc2f09668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x561dc2f09858 <line:403:22>
| `-NonNullAttr 0x561dc2f098b0 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f09b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x561dc2f098f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561dc2f099a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x561dc2f09bb8 <line:406:22>
| `-NonNullAttr 0x561dc2f09c10 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f0ae48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561dc2f09c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561dc2f09cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561dc2f0aef8 <line:409:22>
| `-NonNullAttr 0x561dc2f0af50 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f0b188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561dc2f0af98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561dc2f0b028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561dc2f0b238 <line:412:22>
| `-NonNullAttr 0x561dc2f0b290 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f0b4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561dc2f0b2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x561dc2f0b368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x561dc2f0b578 <col:37>
| `-NonNullAttr 0x561dc2f0b5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x561dc2f0b7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561dc2f0b618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561dc2f0b698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x561dc2f0b868 <line:418:22>
| `-NonNullAttr 0x561dc2f0b8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f0ba48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561dc2f0b908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561dc2f0b988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x561dc2f0baf8 <line:420:22>
| `-NonNullAttr 0x561dc2f0bb50 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f0bcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561dc2f0bb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561dc2f0bc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x561dc2f0bda8 <line:423:22>
| `-NonNullAttr 0x561dc2f0ce30 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f0cfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561dc2f0ce78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561dc2f0cef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x561dc2f0d068 <line:426:22>
| `-NonNullAttr 0x561dc2f0d0c0 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f0d268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561dc2f0d108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561dc2f0d188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x561dc2f0d318 <line:429:22>
| `-NonNullAttr 0x561dc2f0d370 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f0d4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561dc2f0d3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561dc2f0d438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x561dc2f0d5a8 <line:431:22>
| `-NonNullAttr 0x561dc2f0d600 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f0d828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x561dc2f0d648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561dc2f0d6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x561dc2f0d8d8 <line:434:22>
| |-NonNullAttr 0x561dc2f0d930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x561dc2f0d968 <col:100> "" ""
|-FunctionDecl 0x561dc2f0db78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x561dc2f0d9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561dc2f0da38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x561dc2f0dc28 <line:437:22>
| |-NonNullAttr 0x561dc2f0dc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x561dc2f0dcb8 <col:97> "" ""
|-FunctionDecl 0x561dc2f0deb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561dc2f0dd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561dc2f0dd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561dc2f0df68 <line:440:22>
| `-NonNullAttr 0x561dc2f0dfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f0e140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561dc2f0e008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561dc2f0e080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561dc2f0e1f0 <line:443:22>
| `-NonNullAttr 0x561dc2f0e248 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f0e538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561dc2f0e298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561dc2f0e318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x561dc2f0e390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561dc2f0e5f0 <line:447:22>
| `-NonNullAttr 0x561dc2f0e648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x561dc2f0e8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x561dc2f0e6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561dc2f0e720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x561dc2f0e798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561dc2f0e9b0 <col:43>
| `-NonNullAttr 0x561dc2f0ea08 <col:84, col:98> 1
|-FunctionDecl 0x561dc2f0ecc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561dc2f0ea58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561dc2f0ead8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x561dc2f0eb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x561dc2f0ed80 <line:452:22>
| `-NonNullAttr 0x561dc2f0edd8 <col:63, col:77> 3
|-FunctionDecl 0x561dc2f0f0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561dc2f0ee50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561dc2f0eed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x561dc2f0ef60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561dc2f0f1a0 <line:456:22>
| `-NonNullAttr 0x561dc2f0f1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x561dc2f0f3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x561dc2f0f248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561dc2f0f2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x561dc2f0f498 <line:458:22>
|-FunctionDecl 0x561dc2f0f868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x561dc2f0f560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x561dc2f0f700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x561dc2f0f918 <col:52, col:69> 1 2
|-FunctionDecl 0x561dc2f0fac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x561dc2f0f9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x561dc2f0fa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x561dc2f0fca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x561dc2f0fb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x561dc2f0fc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x561dc2f0fe60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x561dc2f0fd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x561dc2f0ffa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x561dc2f10040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x561dc2f100e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x561dc2f101d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x561dc2f10240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x561dc2f10410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix056_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x561dc2f10508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x561dc2f105c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x561dc2f10560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x561dc2f100c0 '__pthread_unwind_buf_t'
| |   `-Record 0x561dc2f10040 ''
| `-AlignedAttr 0x561dc2f10618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x561dc2f10690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x561dc2f107f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x561dc2f10858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x561dc2f108c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x561dc2f10928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x561dc2f10b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561dc2f10a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561dc2f10c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561dc2f10be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561dc2f10e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561dc2f10d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x561dc2f10f18 <line:487:22>
|-RecordDecl 0x561dc2f10f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x561dc2f11288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x561dc2f110e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x561dc2f11168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x561dc2f11338 <col:86>
| `-ReturnsTwiceAttr 0x561dc2f11390 <col:12> Implicit
|-FunctionDecl 0x561dc2f116b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561dc2f11460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x561dc2f11570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x561dc2f11768 <line:493:22>
| `-NonNullAttr 0x561dc2f117c0 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f11938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561dc2f11808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561dc2f119e0 <line:495:22>
| `-NonNullAttr 0x561dc2f11a38 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f11b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561dc2f11a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561dc2f11be8 <line:497:22>
| `-NonNullAttr 0x561dc2f11c40 <col:52, col:66> 1
|-FunctionDecl 0x561dc2f11d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561dc2f11c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561dc2f11de8 <line:499:22>
| `-NonNullAttr 0x561dc2f11e40 <col:52, col:66> 1
|-FunctionDecl 0x561dc2f12088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561dc2f11e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561dc2f11f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561dc2f12138 <col:36>
| `-NonNullAttr 0x561dc2f12190 <col:66, col:83> 1 2
|-FunctionDecl 0x561dc2f12290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561dc2f121d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561dc2f12338 <line:504:22>
| `-NonNullAttr 0x561dc2f12390 <col:52, col:66> 1
|-FunctionDecl 0x561dc2f12628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561dc2f12440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561dc2f124c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561dc2f126d8 <line:508:22>
| `-NonNullAttr 0x561dc2f12730 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f129f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x561dc2f12778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561dc2f127f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x561dc2f12878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x561dc2f12ab0 <line:512:22>
| `-NonNullAttr 0x561dc2f12b08 <col:63, col:80> 1 3
|-FunctionDecl 0x561dc2f12c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561dc2f12b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561dc2f12cb8 <line:514:22>
| `-NonNullAttr 0x561dc2f12d10 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f12f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561dc2f12dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561dc2f12fe0 <line:516:22>
| `-NonNullAttr 0x561dc2f13038 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f13140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561dc2f13088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561dc2f131e8 <line:518:22>
| `-NonNullAttr 0x561dc2f13240 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f13468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561dc2f13288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561dc2f13308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x561dc2f13518 <line:522:22>
| `-NonNullAttr 0x561dc2f13570 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f13778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561dc2f135b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561dc2f13638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x561dc2f13828 <line:525:22>
| `-NonNullAttr 0x561dc2f13880 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f13a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561dc2f138c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561dc2f13948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x561dc2f13ad8 <line:528:22>
| `-NonNullAttr 0x561dc2f13b30 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f13cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561dc2f13b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561dc2f13bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x561dc2f13d68 <line:530:22>
| `-NonNullAttr 0x561dc2f13dc0 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f14f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561dc2f13e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561dc2f14eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x561dc2f15040 <line:534:22>
| `-NonNullAttr 0x561dc2f15098 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f15228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561dc2f150e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561dc2f15168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x561dc2f152d8 <line:537:22>
| `-NonNullAttr 0x561dc2f15330 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f154d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561dc2f15378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561dc2f153f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561dc2f15588 <line:541:22>
| `-NonNullAttr 0x561dc2f155e0 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f15768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561dc2f15628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561dc2f156a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x561dc2f15818 <line:544:22>
| `-NonNullAttr 0x561dc2f15870 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f15a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x561dc2f158b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x561dc2f15938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x561dc2f15b08 <line:547:22>
| `-NonNullAttr 0x561dc2f15b60 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f15ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561dc2f15ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561dc2f15c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x561dc2f15d98 <line:550:22>
| `-NonNullAttr 0x561dc2f15df0 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f17168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x561dc2f16f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561dc2f17020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x561dc2f17218 <col:29>
| `-NonNullAttr 0x561dc2f17270 <col:70, col:84> 1
|-FunctionDecl 0x561dc2f173e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561dc2f172b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561dc2f17490 <line:555:22>
| `-NonNullAttr 0x561dc2f174e8 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f175f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561dc2f17538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561dc2f17698 <line:557:22>
| `-NonNullAttr 0x561dc2f176f0 <col:52, col:66> 1
|-FunctionDecl 0x561dc2f177f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561dc2f17738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561dc2f17898 <line:559:19>
| `-NonNullAttr 0x561dc2f178f0 <col:49, col:63> 1
|-FunctionDecl 0x561dc2f17b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561dc2f17938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561dc2f179c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561dc2f17bd8 <col:39>
| `-NonNullAttr 0x561dc2f17c30 <col:69, col:86> 1 2
|-FunctionDecl 0x561dc2f17d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561dc2f17c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561dc2f17dd8 <line:564:22>
| `-NonNullAttr 0x561dc2f17e30 <col:52, col:66> 1
|-FunctionDecl 0x561dc2f17f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561dc2f17ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561dc2f18040 <line:566:22>
| `-NonNullAttr 0x561dc2f18098 <col:52, col:66> 1
|-FunctionDecl 0x561dc2f18258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561dc2f180e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561dc2f18178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561dc2f18308 <col:39>
| `-NonNullAttr 0x561dc2f18360 <col:69, col:86> 1 2
|-FunctionDecl 0x561dc2f18460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561dc2f183a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561dc2f18508 <line:571:22>
| `-NonNullAttr 0x561dc2f18560 <col:52, col:66> 1
|-FunctionDecl 0x561dc2f18748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561dc2f18610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561dc2f187f0 <line:573:22>
| `-NonNullAttr 0x561dc2f18848 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f18950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561dc2f18898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561dc2f189f8 <line:575:22>
| `-NonNullAttr 0x561dc2f18a50 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f18c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561dc2f18a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561dc2f18b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x561dc2f18d28 <line:579:22>
| `-NonNullAttr 0x561dc2f18d80 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f18fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561dc2f18dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561dc2f18e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x561dc2f19058 <line:582:22>
| `-NonNullAttr 0x561dc2f190b0 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f19258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561dc2f190f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561dc2f19178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x561dc2f19308 <line:586:22>
| `-NonNullAttr 0x561dc2f19360 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f194e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561dc2f193a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561dc2f19428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x561dc2f19598 <col:36>
| `-NonNullAttr 0x561dc2f195f0 <col:77, col:91> 1
|-FunctionDecl 0x561dc2f19928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x561dc2f196d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561dc2f197e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x561dc2f199d8 <line:591:22>
| `-NonNullAttr 0x561dc2f19a30 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f19ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561dc2f19a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561dc2f19c50 <line:593:22>
| `-NonNullAttr 0x561dc2f19ca8 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f19db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561dc2f19cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561dc2f19e58 <line:595:22>
| `-NonNullAttr 0x561dc2f19eb0 <col:52, col:66> 1
|-FunctionDecl 0x561dc2f19fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561dc2f19f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561dc2f1a070 <line:597:22>
| `-NonNullAttr 0x561dc2f1a0c8 <col:52, col:66> 1
|-FunctionDecl 0x561dc2f1a2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x561dc2f1a118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561dc2f1a190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x561dc2f1a3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x561dc2f1a6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561dc2f1a428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561dc2f1a4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561dc2f1a530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x561dc2f1a790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x561dc2f1a9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561dc2f1a870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561dc2f1aa50 <line:606:22>
| `-NonNullAttr 0x561dc2f1aaa8 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f1abb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561dc2f1aaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561dc2f1ac58 <line:608:22>
| `-NonNullAttr 0x561dc2f1acb0 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f1af10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561dc2f1acf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561dc2f1ad78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x561dc2f1afc0 <line:612:22>
| `-NonNullAttr 0x561dc2f1b018 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f1b228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x561dc2f1b068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561dc2f1b0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x561dc2f1b2d8 <col:37>
| `-NonNullAttr 0x561dc2f1b330 <col:78, col:92> 1
|-FunctionDecl 0x561dc2f1b548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x561dc2f1b378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561dc2f1b420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x561dc2f1b5f8 <line:618:22>
| `-NonNullAttr 0x561dc2f1b650 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f1b818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x561dc2f1b698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561dc2f1b710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x561dc2f1b8c8 <line:621:22>
| `-NonNullAttr 0x561dc2f1b920 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f1bbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x561dc2f1ba00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x561dc2f1ba80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x561dc2f1bc78 <line:623:22>
| `-NonNullAttr 0x561dc2f1bcd0 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f1be48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561dc2f1bd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561dc2f1bf20 <line:625:22>
| `-NonNullAttr 0x561dc2f1bf78 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f1c080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561dc2f1bfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561dc2f1c128 <line:627:22>
| `-NonNullAttr 0x561dc2f1c180 <col:52, col:66> 1
|-FunctionDecl 0x561dc2f1c280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561dc2f1c1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561dc2f1c328 <line:629:22>
| `-NonNullAttr 0x561dc2f1c380 <col:52, col:66> 1
|-FunctionDecl 0x561dc2f1c480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561dc2f1c3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561dc2f1c528 <line:631:22>
| `-NonNullAttr 0x561dc2f1c580 <col:52, col:66> 1
|-FunctionDecl 0x561dc2f1c958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x561dc2f1c660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x561dc2f1c770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561dc2f1c7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x561dc2f1ca10 <line:635:22>
| `-NonNullAttr 0x561dc2f1ca68 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f1cbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561dc2f1cab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561dc2f1cc90 <line:637:22>
| `-NonNullAttr 0x561dc2f1cce8 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f1cdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561dc2f1cd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561dc2f1ce98 <line:639:22>
| `-NonNullAttr 0x561dc2f1cef0 <col:52, col:66> 1
|-FunctionDecl 0x561dc2f1d0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561dc2f1cfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561dc2f1d190 <line:641:22>
| `-NonNullAttr 0x561dc2f1d1e8 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f1d2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561dc2f1d238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561dc2f1d398 <line:643:22>
| `-NonNullAttr 0x561dc2f1d3f0 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f1d618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561dc2f1d438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561dc2f1d4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x561dc2f1d6c8 <line:647:22>
| `-NonNullAttr 0x561dc2f1d720 <col:63, col:80> 1 2
|-FunctionDecl 0x561dc2f1d928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x561dc2f1d768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x561dc2f1d7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x561dc2f1d9d8 <line:650:22>
| `-NonNullAttr 0x561dc2f1da30 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f1dd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x561dc2f1db10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x561dc2f1dc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x561dc2f1de28 <line:653:22>
| `-NonNullAttr 0x561dc2f1de80 <col:63, col:77> 1
|-FunctionDecl 0x561dc2f1dfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x561dc2f1dec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561dc2f1e090 <col:69>
|-FunctionDecl 0x561dc2f1e208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x561dc2f1e0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561dc2f1e2b0 <col:72>
|-FunctionDecl 0x561dc2f1e4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x561dc2f1e318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x561dc2f1e3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x561dc2f1e598 <col:44>
|-FunctionDecl 0x561dc2f1e7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x561dc2f1e600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561dc2f1e678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x561dc2f1e868 <line:660:22>
| `-NonNullAttr 0x561dc2f1e8c0 <col:63, col:77> 2
|-FunctionDecl 0x561dc2f1ed08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x561dc2f1e9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x561dc2f1eab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x561dc2f1ebc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x561dc2f1edc0 <col:47>
|-FunctionDecl 0x561dc2f1ff60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x561dc2f1ee30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561dc2f200b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x561dc2f20020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561dc2f20210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x561dc2f20178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561dc2f202d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x561dc2f20398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x561dc2f20458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x561dc2f20510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x561dc2f20590 prev 0x561dc2f20510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x561dc2f205f8 <col:24> 'int' 0
|-VarDecl 0x561dc2f20630 <line:673:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x561dc2f206b0 prev 0x561dc2f20630 <line:674:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x561dc2f20718 <col:27> 'int' 0
|-VarDecl 0x561dc2f20748 <line:675:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x561dc2f207c0 <line:676:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x561dc2f20840 <line:677:1, col:5> col:5 used x 'int'
|-VarDecl 0x561dc2f208c0 prev 0x561dc2f20840 <line:678:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x561dc2f20928 <col:9> 'int' 0
|-VarDecl 0x561dc2f20960 <line:679:1, col:5> col:5 used y 'int'
|-VarDecl 0x561dc2f209e0 prev 0x561dc2f20960 <line:680:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x561dc2f20a48 <col:9> 'int' 0
|-VarDecl 0x561dc2f20a78 <line:681:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x561dc2f20af8 <line:682:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x561dc2f20b70 <line:683:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x561dc2f20be8 <line:684:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x561dc2f20c60 <line:685:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x561dc2f20cd8 <line:686:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x561dc2f20d50 <line:687:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x561dc2f20dc8 <line:688:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x561dc2f20e40 <line:689:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x561dc2f20eb8 <line:690:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x561dc2f20f70 <line:691:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x561dc2f20ff0 <line:692:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x561dc2f21070 <line:693:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x561dc2f210e8 <line:694:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x561dc2f21168 <line:695:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x561dc2f211e0 <line:696:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x561dc2f21260 <line:697:1, col:5> col:5 used z 'int'
|-VarDecl 0x561dc2f212e0 prev 0x561dc2f21260 <line:698:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x561dc2f21348 <col:9> 'int' 0
|-VarDecl 0x561dc2f21378 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x561dc2f213f0 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x561dc2f21508 prev 0x561dc2f1ff60 <line:701:1, line:715:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x561dc2f21470 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561dc2f21ab8 <line:702:1, line:715:1>
|   |-CallExpr 0x561dc2f21618 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561dc2f21600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f215b0 <col:3> 'void ()' Function 0x561dc2ec7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561dc2f21678 <line:704:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561dc2f21638 <col:3> 'int' lvalue Var 0x561dc2f212e0 'z' 'int'
|   | `-IntegerLiteral 0x561dc2f21658 <col:7> 'int' 1
|   |-CallExpr 0x561dc2f216d0 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561dc2f216b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f21698 <col:3> 'void ()' Function 0x561dc2ec7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561dc2f21728 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561dc2f21710 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f216f0 <col:3> 'void ()' Function 0x561dc2ec7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561dc2f21788 <line:707:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561dc2f21748 <col:3> 'int' lvalue Var 0x561dc2f208c0 'x' 'int'
|   | `-IntegerLiteral 0x561dc2f21768 <col:7> 'int' 1
|   |-CallExpr 0x561dc2f217e0 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561dc2f217c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f217a8 <col:3> 'void ()' Function 0x561dc2ec7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561dc2f21838 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561dc2f21820 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f21800 <col:3> 'void ()' Function 0x561dc2ec7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x561dc2f21890 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561dc2f21878 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f21858 <col:3> 'void ()' Function 0x561dc2ec7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561dc2f218e8 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561dc2f218d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f218b0 <col:3> 'void ()' Function 0x561dc2ec7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561dc2f219a0 <line:712:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561dc2f21908 <col:3> 'int' lvalue Var 0x561dc2f20590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561dc2f21980 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561dc2f21968 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561dc2f21928 <col:22> 'int' lvalue Var 0x561dc2f20590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561dc2f21948 <col:41> 'int' 1
|   |-CallExpr 0x561dc2f219f8 <line:713:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561dc2f219e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f219c0 <col:3> 'void ()' Function 0x561dc2ec7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561dc2f21aa8 <line:714:3, col:36>
|     `-CallExpr 0x561dc2f21a88 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561dc2f21a70 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561dc2f21a18 <col:10> 'void *(void)' Function 0x561dc2ec6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561dc2f21bd8 prev 0x561dc2f200b8 <line:716:1, line:735:1> line:716:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x561dc2f21b40 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561dc2f22df8 <line:717:1, line:735:1>
|   |-CallExpr 0x561dc2f21cb8 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561dc2f21ca0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f21c80 <col:3> 'void ()' Function 0x561dc2ec7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561dc2f21d18 <line:719:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561dc2f21cd8 <col:3> 'int' lvalue Var 0x561dc2f208c0 'x' 'int'
|   | `-IntegerLiteral 0x561dc2f21cf8 <col:7> 'int' 2
|   |-CallExpr 0x561dc2f21d70 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561dc2f21d58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f21d38 <col:3> 'void ()' Function 0x561dc2ec7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561dc2f21dc8 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561dc2f21db0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f21d90 <col:3> 'void ()' Function 0x561dc2ec7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561dc2f21e28 <line:722:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561dc2f21de8 <col:3> 'int' lvalue Var 0x561dc2f209e0 'y' 'int'
|   | `-IntegerLiteral 0x561dc2f21e08 <col:7> 'int' 1
|   |-CallExpr 0x561dc2f21e80 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561dc2f21e68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f21e48 <col:3> 'void ()' Function 0x561dc2ec7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561dc2f21ed8 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561dc2f21ec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f21ea0 <col:3> 'void ()' Function 0x561dc2ec7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561dc2f221d0 <line:725:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561dc2f21ef8 <col:3> 'int' lvalue Var 0x561dc2f209e0 'y' 'int'
|   | `-ConditionalOperator 0x561dc2f221a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561dc2f21fc8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561dc2f21f80 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561dc2f21f58 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561dc2f21f18 <col:7> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561dc2f21fb0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561dc2f21f98 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561dc2f21f38 <col:25> '_Bool' lvalue Var 0x561dc2f20c60 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x561dc2f22188 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561dc2f21fe8 <col:42> 'int' lvalue Var 0x561dc2f21070 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561dc2f22168 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561dc2f22138 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561dc2f220a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561dc2f22060 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561dc2f22048 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561dc2f22008 <col:55> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561dc2f22090 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561dc2f22078 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561dc2f22028 <col:73> '_Bool' lvalue Var 0x561dc2f20e40 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561dc2f22108 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561dc2f220c8 <col:90> 'int' lvalue Var 0x561dc2f21168 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561dc2f22120 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561dc2f220e8 <col:102> 'int' lvalue Var 0x561dc2f209e0 'y' 'int'
|   |-BinaryOperator 0x561dc2f223d8 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561dc2f221f0 <col:3> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561dc2f223c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561dc2f22390 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561dc2f222b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561dc2f22268 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561dc2f22250 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561dc2f22210 <col:20> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561dc2f22298 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561dc2f22280 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561dc2f22230 <col:38> '_Bool' lvalue Var 0x561dc2f20c60 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561dc2f22348 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561dc2f22300 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561dc2f222d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561dc2f22378 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561dc2f22360 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561dc2f22328 <col:66> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561dc2f226c0 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561dc2f223f8 <col:3> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561dc2f226a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561dc2f22678 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561dc2f22598 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561dc2f224b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561dc2f22470 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561dc2f22458 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561dc2f22418 <col:20> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561dc2f224a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561dc2f22488 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561dc2f22438 <col:38> '_Bool' lvalue Var 0x561dc2f20c60 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561dc2f22578 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561dc2f22530 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561dc2f22518 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561dc2f224d8 <col:56> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561dc2f22560 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561dc2f22548 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561dc2f224f8 <col:74> '_Bool' lvalue Var 0x561dc2f20e40 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561dc2f22630 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561dc2f225e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561dc2f225b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561dc2f22660 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561dc2f22648 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561dc2f22610 <col:102> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561dc2f228c8 <line:728:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561dc2f226e0 <col:3> '_Bool' lvalue Var 0x561dc2f20c60 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561dc2f228b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561dc2f22880 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561dc2f227a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561dc2f22758 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561dc2f22740 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561dc2f22700 <col:20> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561dc2f22788 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561dc2f22770 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561dc2f22720 <col:38> '_Bool' lvalue Var 0x561dc2f20c60 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561dc2f22838 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561dc2f227f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561dc2f227c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561dc2f22868 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561dc2f22850 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561dc2f22818 <col:66> '_Bool' lvalue Var 0x561dc2f20c60 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561dc2f22bb0 <line:729:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561dc2f228e8 <col:3> '_Bool' lvalue Var 0x561dc2f20e40 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561dc2f22b98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561dc2f22b68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561dc2f22a88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561dc2f229a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561dc2f22960 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561dc2f22948 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561dc2f22908 <col:20> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561dc2f22990 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561dc2f22978 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561dc2f22928 <col:38> '_Bool' lvalue Var 0x561dc2f20c60 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561dc2f22a68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561dc2f22a20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561dc2f22a08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561dc2f229c8 <col:56> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561dc2f22a50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561dc2f22a38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561dc2f229e8 <col:74> '_Bool' lvalue Var 0x561dc2f20e40 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561dc2f22b20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561dc2f22ad8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561dc2f22aa8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561dc2f22b50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561dc2f22b38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561dc2f22b00 <col:102> '_Bool' lvalue Var 0x561dc2f20e40 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x561dc2f22c08 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561dc2f22bf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f22bd0 <col:3> 'void ()' Function 0x561dc2ec7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561dc2f22c60 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561dc2f22c48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f22c28 <col:3> 'void ()' Function 0x561dc2ec7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561dc2f22d18 <line:732:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561dc2f22c80 <col:3> 'int' lvalue Var 0x561dc2f20590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561dc2f22cf8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561dc2f22ce0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561dc2f22ca0 <col:22> 'int' lvalue Var 0x561dc2f20590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561dc2f22cc0 <col:41> 'int' 1
|   |-CallExpr 0x561dc2f22d70 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561dc2f22d58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f22d38 <col:3> 'void ()' Function 0x561dc2ec7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561dc2f22de8 <line:734:3, col:36>
|     `-CallExpr 0x561dc2f22dc8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561dc2f22db0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561dc2f22d90 <col:10> 'void *(void)' Function 0x561dc2ec6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561dc2f22f90 prev 0x561dc2f20210 <line:736:1, line:764:1> line:736:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x561dc2f22ea8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561dc2f24750 <line:737:1, line:764:1>
|   |-CallExpr 0x561dc2f23070 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561dc2f23058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f23038 <col:3> 'void ()' Function 0x561dc2ec7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561dc2f230e8 <line:739:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561dc2f23090 <col:3> 'int' lvalue Var 0x561dc2f21168 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x561dc2f230d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561dc2f230b0 <col:15> 'int' lvalue Var 0x561dc2f21070 'y$w_buff0' 'int'
|   |-BinaryOperator 0x561dc2f23148 <line:740:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561dc2f23108 <col:3> 'int' lvalue Var 0x561dc2f21070 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x561dc2f23128 <col:15> 'int' 2
|   |-BinaryOperator 0x561dc2f231c0 <line:741:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561dc2f23168 <col:3> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561dc2f231a8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561dc2f23188 <col:20> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561dc2f23258 <line:742:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561dc2f231e0 <col:3> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x561dc2f23230 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561dc2f23200 <col:27> 'int' 1
|   |-CallExpr 0x561dc2f233d8 <line:743:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x561dc2f233c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x561dc2f23278 <col:3> 'void (int)' Function 0x561dc2ec70d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x561dc2f23378 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x561dc2f23358 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x561dc2f23338 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x561dc2f232f0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x561dc2f232d8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x561dc2f23298 <col:23> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x561dc2f23320 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x561dc2f23308 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x561dc2f232b8 <col:41> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561dc2f23458 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561dc2f23400 <col:3> '_Bool' lvalue Var 0x561dc2f20d50 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x561dc2f23440 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561dc2f23420 <col:20> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x561dc2f234d0 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561dc2f23478 <col:3> '_Bool' lvalue Var 0x561dc2f20dc8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561dc2f234b8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561dc2f23498 <col:20> '_Bool' lvalue Var 0x561dc2f20be8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561dc2f23548 <line:746:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561dc2f234f0 <col:3> '_Bool' lvalue Var 0x561dc2f20e40 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561dc2f23530 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561dc2f23510 <col:20> '_Bool' lvalue Var 0x561dc2f20c60 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561dc2f235c0 <line:747:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561dc2f23568 <col:3> '_Bool' lvalue Var 0x561dc2f20eb8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561dc2f235a8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561dc2f23588 <col:20> '_Bool' lvalue Var 0x561dc2f20cd8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561dc2f23658 <line:748:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561dc2f235e0 <col:3> '_Bool' lvalue Var 0x561dc2f20cd8 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x561dc2f23630 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561dc2f23600 <col:27> 'int' 1
|   |-CallExpr 0x561dc2f236b0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561dc2f23698 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f23678 <col:3> 'void ()' Function 0x561dc2ec7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561dc2f23708 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561dc2f236f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f236d0 <col:3> 'void ()' Function 0x561dc2ec7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561dc2f23780 <line:751:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561dc2f23728 <col:3> 'int' lvalue Var 0x561dc2f206b0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x561dc2f23768 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561dc2f23748 <col:25> 'int' lvalue Var 0x561dc2f212e0 'z' 'int'
|   |-CallExpr 0x561dc2f237d8 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561dc2f237c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f237a0 <col:3> 'void ()' Function 0x561dc2ec7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561dc2f23830 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561dc2f23818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f237f8 <col:3> 'void ()' Function 0x561dc2ec7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561dc2f23b18 <line:754:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561dc2f23850 <col:3> 'int' lvalue Var 0x561dc2f209e0 'y' 'int'
|   | `-ConditionalOperator 0x561dc2f23ae8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561dc2f23910 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561dc2f238c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561dc2f238b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561dc2f23870 <col:7> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561dc2f238f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561dc2f238e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561dc2f23890 <col:25> '_Bool' lvalue Var 0x561dc2f20cd8 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x561dc2f23ad0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561dc2f23930 <col:42> 'int' lvalue Var 0x561dc2f21070 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561dc2f23ab0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561dc2f23a80 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561dc2f239f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561dc2f239a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561dc2f23990 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561dc2f23950 <col:55> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561dc2f239d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561dc2f239c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561dc2f23970 <col:73> '_Bool' lvalue Var 0x561dc2f20eb8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x561dc2f23a50 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561dc2f23a10 <col:90> 'int' lvalue Var 0x561dc2f21168 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561dc2f23a68 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561dc2f23a30 <col:102> 'int' lvalue Var 0x561dc2f209e0 'y' 'int'
|   |-BinaryOperator 0x561dc2f23d20 <line:755:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561dc2f23b38 <col:3> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561dc2f23d08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561dc2f23cd8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561dc2f23bf8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561dc2f23bb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561dc2f23b98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561dc2f23b58 <col:20> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561dc2f23be0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561dc2f23bc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561dc2f23b78 <col:38> '_Bool' lvalue Var 0x561dc2f20cd8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561dc2f23c90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561dc2f23c48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561dc2f23c18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561dc2f23cc0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561dc2f23ca8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561dc2f23c70 <col:66> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561dc2f24018 <line:756:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561dc2f23d40 <col:3> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561dc2f24000 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561dc2f23fd0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561dc2f23ee0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561dc2f23e00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561dc2f23db8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561dc2f23da0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561dc2f23d60 <col:20> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561dc2f23de8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561dc2f23dd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561dc2f23d80 <col:38> '_Bool' lvalue Var 0x561dc2f20cd8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561dc2f23ec0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561dc2f23e78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561dc2f23e60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561dc2f23e20 <col:56> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561dc2f23ea8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561dc2f23e90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561dc2f23e40 <col:74> '_Bool' lvalue Var 0x561dc2f20eb8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561dc2f23f78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561dc2f23f30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561dc2f23f00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561dc2f23fb8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561dc2f23fa0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561dc2f23f58 <col:102> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561dc2f24220 <line:757:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561dc2f24038 <col:3> '_Bool' lvalue Var 0x561dc2f20cd8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561dc2f24208 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561dc2f241d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561dc2f240f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561dc2f240b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561dc2f24098 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561dc2f24058 <col:20> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561dc2f240e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561dc2f240c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561dc2f24078 <col:38> '_Bool' lvalue Var 0x561dc2f20cd8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561dc2f24190 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561dc2f24148 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561dc2f24118 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561dc2f241c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561dc2f241a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561dc2f24170 <col:66> '_Bool' lvalue Var 0x561dc2f20cd8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561dc2f24508 <line:758:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561dc2f24240 <col:3> '_Bool' lvalue Var 0x561dc2f20eb8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561dc2f244f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561dc2f244c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561dc2f243e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561dc2f24300 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561dc2f242b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561dc2f242a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561dc2f24260 <col:20> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561dc2f242e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561dc2f242d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561dc2f24280 <col:38> '_Bool' lvalue Var 0x561dc2f20cd8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561dc2f243c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561dc2f24378 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561dc2f24360 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561dc2f24320 <col:56> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561dc2f243a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561dc2f24390 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561dc2f24340 <col:74> '_Bool' lvalue Var 0x561dc2f20eb8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561dc2f24478 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561dc2f24430 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561dc2f24400 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561dc2f244a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561dc2f24490 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561dc2f24458 <col:102> '_Bool' lvalue Var 0x561dc2f20eb8 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x561dc2f24560 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561dc2f24548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f24528 <col:3> 'void ()' Function 0x561dc2ec7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561dc2f245b8 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561dc2f245a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f24580 <col:3> 'void ()' Function 0x561dc2ec7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561dc2f24670 <line:761:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561dc2f245d8 <col:3> 'int' lvalue Var 0x561dc2f20590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561dc2f24650 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561dc2f24638 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561dc2f245f8 <col:22> 'int' lvalue Var 0x561dc2f20590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561dc2f24618 <col:41> 'int' 1
|   |-CallExpr 0x561dc2f246c8 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561dc2f246b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561dc2f24690 <col:3> 'void ()' Function 0x561dc2ec7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561dc2f24740 <line:763:3, col:36>
|     `-CallExpr 0x561dc2f24720 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561dc2f24708 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561dc2f246e8 <col:10> 'void *(void)' Function 0x561dc2ec6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561dc2f24850 prev 0x561dc2f202d8 <line:765:1, line:767:1> line:765:6 fence 'void ()'
| `-CompoundStmt 0x561dc2f248f0 <line:766:1, line:767:1>
|-FunctionDecl 0x561dc2f24920 prev 0x561dc2f20398 <line:768:1, line:770:1> line:768:6 isync 'void ()'
| `-CompoundStmt 0x561dc2f249c0 <line:769:1, line:770:1>
|-FunctionDecl 0x561dc2f249f0 prev 0x561dc2f20458 <line:771:1, line:773:1> line:771:6 lwfence 'void ()'
| `-CompoundStmt 0x561dc2f24a90 <line:772:1, line:773:1>
`-FunctionDecl 0x561dc2f24af8 <line:774:1, line:811:1> line:774:5 main 'int ()'
  `-CompoundStmt 0x561dc2f29108 <line:775:1, line:811:1>
    |-DeclStmt 0x561dc2f24c10 <line:776:3, col:18>
    | `-VarDecl 0x561dc2f24ba8 <col:3, col:13> col:13 used t1500 'pthread_t':'unsigned long'
    |-CallExpr 0x561dc2f24e18 <line:777:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561dc2f24e00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561dc2f24c28 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561dc2f078f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561dc2f24c68 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561dc2f24c48 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561dc2f24ba8 't1500' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561dc2f24e58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561dc2f24ce0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561dc2f24cb8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561dc2f24c80 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561dc2f24e70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561dc2f24d00 <col:39> 'void *(void *)' Function 0x561dc2f21508 'P0' 'void *(void *)'
    | `-ParenExpr 0x561dc2f24d80 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561dc2f24d58 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561dc2f24d20 <col:52> 'int' 0
    |-DeclStmt 0x561dc2f24f00 <line:778:3, col:18>
    | `-VarDecl 0x561dc2f24e98 <col:3, col:13> col:13 used t1501 'pthread_t':'unsigned long'
    |-CallExpr 0x561dc2f250c8 <line:779:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561dc2f250b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561dc2f24f18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561dc2f078f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561dc2f24f58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561dc2f24f38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561dc2f24e98 't1501' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561dc2f25108 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561dc2f24ff0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561dc2f24fc8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561dc2f24f70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561dc2f25120 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561dc2f25010 <col:39> 'void *(void *)' Function 0x561dc2f21bd8 'P1' 'void *(void *)'
    | `-ParenExpr 0x561dc2f25090 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561dc2f25068 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561dc2f25030 <col:52> 'int' 0
    |-DeclStmt 0x561dc2f251b0 <line:780:3, col:18>
    | `-VarDecl 0x561dc2f25148 <col:3, col:13> col:13 used t1502 'pthread_t':'unsigned long'
    |-CallExpr 0x561dc2f25358 <line:781:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561dc2f25340 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561dc2f251c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561dc2f078f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561dc2f25208 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561dc2f251e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561dc2f25148 't1502' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561dc2f25398 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561dc2f25280 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561dc2f25258 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561dc2f25220 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561dc2f253b0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561dc2f252a0 <col:39> 'void *(void *)' Function 0x561dc2f22f90 'P2' 'void *(void *)'
    | `-ParenExpr 0x561dc2f25320 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561dc2f252f8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561dc2f252c0 <col:52> 'int' 0
    |-CallExpr 0x561dc2f25400 <line:782:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561dc2f253e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561dc2f253c8 <col:3> 'void ()' Function 0x561dc2ec7350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561dc2f254d0 <line:783:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x561dc2f25420 <col:3> '_Bool' lvalue Var 0x561dc2f20748 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x561dc2f254b8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x561dc2f25498 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x561dc2f25480 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x561dc2f25440 <col:21> 'int' lvalue Var 0x561dc2f20590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x561dc2f25460 <col:41> 'int' 3
    |-CallExpr 0x561dc2f25528 <line:784:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561dc2f25510 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561dc2f254f0 <col:3> 'void ()' Function 0x561dc2ec7410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561dc2f255a0 <line:785:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561dc2f25588 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561dc2f25548 <col:3> 'void (int)' Function 0x561dc2ec6ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x561dc2f255e0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561dc2f255c8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561dc2f25568 <col:21> '_Bool' lvalue Var 0x561dc2f20748 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x561dc2f25630 <line:786:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561dc2f25618 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561dc2f255f8 <col:3> 'void ()' Function 0x561dc2ec7350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561dc2f25918 <line:787:3, col:103> 'int' '='
    | |-DeclRefExpr 0x561dc2f25650 <col:3> 'int' lvalue Var 0x561dc2f209e0 'y' 'int'
    | `-ConditionalOperator 0x561dc2f258e8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x561dc2f25710 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x561dc2f256c8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x561dc2f256b0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x561dc2f25670 <col:7> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x561dc2f256f8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x561dc2f256e0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x561dc2f25690 <col:25> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x561dc2f258d0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561dc2f25730 <col:42> 'int' lvalue Var 0x561dc2f21070 'y$w_buff0' 'int'
    |   `-ParenExpr 0x561dc2f258b0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x561dc2f25880 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x561dc2f257f0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x561dc2f257a8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x561dc2f25790 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x561dc2f25750 <col:55> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x561dc2f257d8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x561dc2f257c0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561dc2f25770 <col:73> '_Bool' lvalue Var 0x561dc2f20d50 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561dc2f25850 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561dc2f25810 <col:90> 'int' lvalue Var 0x561dc2f21168 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x561dc2f25868 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x561dc2f25830 <col:102> 'int' lvalue Var 0x561dc2f209e0 'y' 'int'
    |-BinaryOperator 0x561dc2f25b20 <line:788:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561dc2f25938 <col:3> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x561dc2f25b08 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561dc2f25ad8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561dc2f259f8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561dc2f259b0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561dc2f25998 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561dc2f25958 <col:20> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561dc2f259e0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561dc2f259c8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561dc2f25978 <col:38> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561dc2f25a90 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561dc2f25a48 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561dc2f25a18 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561dc2f25ac0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561dc2f25aa8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561dc2f25a70 <col:66> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x561dc2f25e08 <line:789:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561dc2f25b40 <col:3> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x561dc2f25df0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561dc2f25dc0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561dc2f25ce0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561dc2f25c00 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561dc2f25bb8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561dc2f25ba0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561dc2f25b60 <col:20> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561dc2f25be8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561dc2f25bd0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561dc2f25b80 <col:38> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561dc2f25cc0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561dc2f25c78 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561dc2f25c60 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561dc2f25c20 <col:56> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561dc2f25ca8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561dc2f25c90 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561dc2f25c40 <col:74> '_Bool' lvalue Var 0x561dc2f20d50 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561dc2f25d78 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561dc2f25d30 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561dc2f25d00 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561dc2f25da8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561dc2f25d90 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561dc2f25d58 <col:102> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x561dc2f26020 <line:790:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561dc2f25e28 <col:3> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561dc2f26008 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561dc2f25fd8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561dc2f25ee8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561dc2f25ea0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561dc2f25e88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561dc2f25e48 <col:20> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561dc2f25ed0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561dc2f25eb8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561dc2f25e68 <col:38> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561dc2f25f80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561dc2f25f38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561dc2f25f08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561dc2f25fc0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561dc2f25f98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561dc2f25f60 <col:66> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x561dc2f26308 <line:791:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561dc2f26040 <col:3> '_Bool' lvalue Var 0x561dc2f20d50 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561dc2f262f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561dc2f262c0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561dc2f261e0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561dc2f26100 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561dc2f260b8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561dc2f260a0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561dc2f26060 <col:20> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561dc2f260e8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561dc2f260d0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561dc2f26080 <col:38> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561dc2f261c0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561dc2f26178 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561dc2f26160 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561dc2f26120 <col:56> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561dc2f261a8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561dc2f26190 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561dc2f26140 <col:74> '_Bool' lvalue Var 0x561dc2f20d50 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561dc2f26278 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561dc2f26230 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561dc2f26200 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561dc2f262a8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561dc2f26290 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561dc2f26258 <col:102> '_Bool' lvalue Var 0x561dc2f20d50 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x561dc2f26360 <line:792:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561dc2f26348 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561dc2f26328 <col:3> 'void ()' Function 0x561dc2ec7410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561dc2f263b8 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561dc2f263a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561dc2f26380 <col:3> 'void ()' Function 0x561dc2ec7350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561dc2f26468 <line:794:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x561dc2f263d8 <col:3> '_Bool' lvalue Var 0x561dc2f21378 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x561dc2f26450 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x561dc2f26430 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x561dc2f26418 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x561dc2f263f8 <col:19> 'void *(void)' Function 0x561dc2ec6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x561dc2f26518 <line:795:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x561dc2f26488 <col:3> '_Bool' lvalue Var 0x561dc2f213f0 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x561dc2f26500 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x561dc2f264e0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x561dc2f264c8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x561dc2f264a8 <col:19> 'void *(void)' Function 0x561dc2ec6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x561dc2f26590 <line:796:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x561dc2f26538 <col:3> '_Bool' lvalue Var 0x561dc2f20a78 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x561dc2f26578 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x561dc2f26558 <col:21> '_Bool' lvalue Var 0x561dc2f213f0 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x561dc2f26608 <line:797:3, col:15> 'int' '='
    | |-DeclRefExpr 0x561dc2f265b0 <col:3> 'int' lvalue Var 0x561dc2f20af8 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x561dc2f265f0 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x561dc2f265d0 <col:15> 'int' lvalue Var 0x561dc2f209e0 'y' 'int'
    |-BinaryOperator 0x561dc2f26a40 <line:798:3, col:162> 'int' '='
    | |-DeclRefExpr 0x561dc2f26628 <col:3> 'int' lvalue Var 0x561dc2f209e0 'y' 'int'
    | `-ConditionalOperator 0x561dc2f26a10 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x561dc2f26838 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x561dc2f26758 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x561dc2f26680 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x561dc2f26668 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x561dc2f26648 <col:8> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x561dc2f26738 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x561dc2f266d0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x561dc2f266b8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x561dc2f26698 <col:27> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x561dc2f26720 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x561dc2f26708 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x561dc2f266e8 <col:46> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x561dc2f26818 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x561dc2f267b0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x561dc2f26798 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x561dc2f26778 <col:65> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x561dc2f26800 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x561dc2f267e8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x561dc2f267c8 <col:84> '_Bool' lvalue Var 0x561dc2f20d50 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x561dc2f269f8 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561dc2f26858 <col:101> 'int' lvalue Var 0x561dc2f209e0 'y' 'int'
    |   `-ParenExpr 0x561dc2f269d8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x561dc2f269a8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x561dc2f26918 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x561dc2f268d0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x561dc2f268b8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x561dc2f26878 <col:106> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x561dc2f26900 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x561dc2f268e8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561dc2f26898 <col:124> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561dc2f26978 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561dc2f26938 <col:141> 'int' lvalue Var 0x561dc2f21070 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x561dc2f26990 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x561dc2f26958 <col:153> 'int' lvalue Var 0x561dc2f21168 'y$w_buff1' 'int'
    |-BinaryOperator 0x561dc2f26f50 <line:799:3, col:208> 'int' '='
    | |-DeclRefExpr 0x561dc2f26a60 <col:3> 'int' lvalue Var 0x561dc2f21070 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x561dc2f26f20 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x561dc2f26ef0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x561dc2f26ed8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x561dc2f26a80 <col:15> '_Bool' lvalue Var 0x561dc2f213f0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x561dc2f26f08 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561dc2f26aa0 <col:31> 'int' lvalue Var 0x561dc2f21070 'y$w_buff0' 'int'
    |   `-ParenExpr 0x561dc2f26eb8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x561dc2f26e88 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x561dc2f26cb0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x561dc2f26bd0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x561dc2f26af8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x561dc2f26ae0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x561dc2f26ac0 <col:45> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x561dc2f26bb0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x561dc2f26b48 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x561dc2f26b30 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x561dc2f26b10 <col:64> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x561dc2f26b98 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x561dc2f26b80 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x561dc2f26b60 <col:83> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x561dc2f26c90 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x561dc2f26c28 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x561dc2f26c10 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x561dc2f26bf0 <col:102> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x561dc2f26c78 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x561dc2f26c60 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x561dc2f26c40 <col:121> '_Bool' lvalue Var 0x561dc2f20d50 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561dc2f26e70 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561dc2f26cd0 <col:138> 'int' lvalue Var 0x561dc2f21070 'y$w_buff0' 'int'
    |       `-ParenExpr 0x561dc2f26e50 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x561dc2f26e20 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x561dc2f26d90 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x561dc2f26d48 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x561dc2f26d30 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x561dc2f26cf0 <col:151> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x561dc2f26d78 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x561dc2f26d60 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x561dc2f26d10 <col:169> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x561dc2f26df0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561dc2f26db0 <col:186> 'int' lvalue Var 0x561dc2f21070 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x561dc2f26e08 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x561dc2f26dd0 <col:198> 'int' lvalue Var 0x561dc2f21070 'y$w_buff0' 'int'
    |-BinaryOperator 0x561dc2f27480 <line:800:3, col:208> 'int' '='
    | |-DeclRefExpr 0x561dc2f26f70 <col:3> 'int' lvalue Var 0x561dc2f21168 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x561dc2f27450 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x561dc2f27420 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x561dc2f27408 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x561dc2f26f90 <col:15> '_Bool' lvalue Var 0x561dc2f213f0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x561dc2f27438 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561dc2f26fd0 <col:31> 'int' lvalue Var 0x561dc2f21168 'y$w_buff1' 'int'
    |   `-ParenExpr 0x561dc2f273e8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x561dc2f273b8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x561dc2f271e0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x561dc2f27100 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x561dc2f27028 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x561dc2f27010 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x561dc2f26ff0 <col:45> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x561dc2f270e0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x561dc2f27078 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x561dc2f27060 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x561dc2f27040 <col:64> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x561dc2f270c8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x561dc2f270b0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x561dc2f27090 <col:83> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x561dc2f271c0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x561dc2f27158 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x561dc2f27140 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x561dc2f27120 <col:102> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x561dc2f271a8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x561dc2f27190 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x561dc2f27170 <col:121> '_Bool' lvalue Var 0x561dc2f20d50 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561dc2f273a0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561dc2f27200 <col:138> 'int' lvalue Var 0x561dc2f21168 'y$w_buff1' 'int'
    |       `-ParenExpr 0x561dc2f27380 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x561dc2f27350 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x561dc2f272c0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x561dc2f27278 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x561dc2f27260 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x561dc2f27220 <col:151> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x561dc2f272a8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x561dc2f27290 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x561dc2f27240 <col:169> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x561dc2f27320 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561dc2f272e0 <col:186> 'int' lvalue Var 0x561dc2f21168 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x561dc2f27338 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x561dc2f27300 <col:198> 'int' lvalue Var 0x561dc2f21168 'y$w_buff1' 'int'
    |-BinaryOperator 0x561dc2f27a28 <line:801:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x561dc2f274a0 <col:3> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x561dc2f27a10 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561dc2f279e0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x561dc2f27998 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561dc2f27980 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561dc2f274c0 <col:20> '_Bool' lvalue Var 0x561dc2f213f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x561dc2f279c8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561dc2f279b0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561dc2f274e0 <col:36> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x561dc2f27960 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x561dc2f27930 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x561dc2f276f0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x561dc2f27610 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x561dc2f27538 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x561dc2f27520 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x561dc2f27500 <col:55> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x561dc2f275f0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x561dc2f27588 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x561dc2f27570 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x561dc2f27550 <col:74> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x561dc2f275d8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x561dc2f275c0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x561dc2f275a0 <col:93> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x561dc2f276d0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x561dc2f27668 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x561dc2f27650 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x561dc2f27630 <col:112> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x561dc2f276b8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x561dc2f276a0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x561dc2f27680 <col:131> '_Bool' lvalue Var 0x561dc2f20d50 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x561dc2f27918 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x561dc2f27900 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x561dc2f27710 <col:148> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x561dc2f278e0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x561dc2f278b0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x561dc2f277d0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x561dc2f27788 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x561dc2f27770 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x561dc2f27730 <col:166> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x561dc2f277b8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x561dc2f277a0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x561dc2f27750 <col:184> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x561dc2f27868 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x561dc2f27820 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x561dc2f277f0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x561dc2f27898 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x561dc2f27880 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x561dc2f27848 <col:212> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x561dc2f28028 <line:802:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x561dc2f27a48 <col:3> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x561dc2f28010 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561dc2f27fe0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x561dc2f27f60 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561dc2f27f48 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561dc2f27a68 <col:20> '_Bool' lvalue Var 0x561dc2f213f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x561dc2f27f90 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561dc2f27f78 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561dc2f27a88 <col:36> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x561dc2f27f28 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x561dc2f27ef8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x561dc2f27c98 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x561dc2f27bb8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x561dc2f27ae0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x561dc2f27ac8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x561dc2f27aa8 <col:55> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x561dc2f27b98 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x561dc2f27b30 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x561dc2f27b18 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x561dc2f27af8 <col:74> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x561dc2f27b80 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x561dc2f27b68 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x561dc2f27b48 <col:93> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x561dc2f27c78 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x561dc2f27c10 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x561dc2f27bf8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x561dc2f27bd8 <col:112> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x561dc2f27c60 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x561dc2f27c48 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x561dc2f27c28 <col:131> '_Bool' lvalue Var 0x561dc2f20d50 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x561dc2f27ee0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x561dc2f27ec8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x561dc2f27cb8 <col:148> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x561dc2f27ea8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x561dc2f27e78 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x561dc2f27d78 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x561dc2f27d30 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x561dc2f27d18 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x561dc2f27cd8 <col:166> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x561dc2f27d60 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x561dc2f27d48 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x561dc2f27cf8 <col:184> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x561dc2f27e48 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x561dc2f27dc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x561dc2f27d98 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x561dc2f27e60 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x561dc2f27e20 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x561dc2f27df0 <col:219> 'int' 0
    |-BinaryOperator 0x561dc2f285d0 <line:803:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x561dc2f28048 <col:3> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561dc2f285b8 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561dc2f28588 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x561dc2f28540 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561dc2f28528 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561dc2f28068 <col:20> '_Bool' lvalue Var 0x561dc2f213f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x561dc2f28570 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561dc2f28558 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561dc2f28088 <col:36> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x561dc2f28508 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x561dc2f284d8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x561dc2f28298 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x561dc2f281b8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x561dc2f280e0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x561dc2f280c8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x561dc2f280a8 <col:55> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x561dc2f28198 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x561dc2f28130 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x561dc2f28118 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x561dc2f280f8 <col:74> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x561dc2f28180 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x561dc2f28168 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x561dc2f28148 <col:93> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x561dc2f28278 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x561dc2f28210 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x561dc2f281f8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x561dc2f281d8 <col:112> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x561dc2f28260 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x561dc2f28248 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x561dc2f28228 <col:131> '_Bool' lvalue Var 0x561dc2f20d50 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x561dc2f284c0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x561dc2f284a8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x561dc2f282b8 <col:148> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x561dc2f28488 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x561dc2f28458 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x561dc2f28378 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x561dc2f28330 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x561dc2f28318 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x561dc2f282d8 <col:166> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x561dc2f28360 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x561dc2f28348 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x561dc2f282f8 <col:184> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x561dc2f28410 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x561dc2f283c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x561dc2f28398 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x561dc2f28440 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x561dc2f28428 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x561dc2f283f0 <col:212> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x561dc2f28b98 <line:804:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x561dc2f285f0 <col:3> '_Bool' lvalue Var 0x561dc2f20d50 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561dc2f28b80 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561dc2f28b50 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x561dc2f28b08 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561dc2f28af0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561dc2f28610 <col:20> '_Bool' lvalue Var 0x561dc2f213f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x561dc2f28b38 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561dc2f28b20 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561dc2f28630 <col:36> '_Bool' lvalue Var 0x561dc2f20d50 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x561dc2f28ad0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x561dc2f28aa0 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x561dc2f28840 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x561dc2f28760 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x561dc2f28688 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x561dc2f28670 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x561dc2f28650 <col:55> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x561dc2f28740 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x561dc2f286d8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x561dc2f286c0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x561dc2f286a0 <col:74> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x561dc2f28728 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x561dc2f28710 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x561dc2f286f0 <col:93> '_Bool' lvalue Var 0x561dc2f211e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x561dc2f28820 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x561dc2f287b8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x561dc2f287a0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x561dc2f28780 <col:112> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x561dc2f28808 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x561dc2f287f0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x561dc2f287d0 <col:131> '_Bool' lvalue Var 0x561dc2f20d50 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x561dc2f28a88 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x561dc2f28a70 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x561dc2f28860 <col:148> '_Bool' lvalue Var 0x561dc2f20d50 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x561dc2f28a50 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x561dc2f28a20 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x561dc2f28920 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x561dc2f288d8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x561dc2f288c0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x561dc2f28880 <col:166> '_Bool' lvalue Var 0x561dc2f210e8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x561dc2f28908 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x561dc2f288f0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x561dc2f288a0 <col:184> '_Bool' lvalue Var 0x561dc2f20b70 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x561dc2f289f0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x561dc2f28970 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x561dc2f28940 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x561dc2f28a08 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x561dc2f289c8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x561dc2f28998 <col:219> 'int' 0
    |-BinaryOperator 0x561dc2f28dd0 <line:805:3, col:67> '_Bool' '='
    | |-DeclRefExpr 0x561dc2f28bb8 <col:3> '_Bool' lvalue Var 0x561dc2f207c0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x561dc2f28db8 <col:21, col:67> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x561dc2f28da0 <col:21, col:67> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x561dc2f28d80 <col:22, col:67> 'int'
    |       `-BinaryOperator 0x561dc2f28d60 <col:23, col:66> 'int' '&&'
    |         |-BinaryOperator 0x561dc2f28cc8 <col:23, col:38> 'int' '&&'
    |         | |-BinaryOperator 0x561dc2f28c30 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x561dc2f28c18 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x561dc2f28bd8 <col:23> 'int' lvalue Var 0x561dc2f208c0 'x' 'int'
    |         | | `-IntegerLiteral 0x561dc2f28bf8 <col:28> 'int' 2
    |         | `-BinaryOperator 0x561dc2f28ca8 <col:33, col:38> 'int' '=='
    |         |   |-ImplicitCastExpr 0x561dc2f28c90 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x561dc2f28c50 <col:33> 'int' lvalue Var 0x561dc2f209e0 'y' 'int'
    |         |   `-IntegerLiteral 0x561dc2f28c70 <col:38> 'int' 2
    |         `-BinaryOperator 0x561dc2f28d40 <col:43, col:66> 'int' '=='
    |           |-ImplicitCastExpr 0x561dc2f28d28 <col:43> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561dc2f28ce8 <col:43> 'int' lvalue Var 0x561dc2f206b0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x561dc2f28d08 <col:66> 'int' 0
    |-BinaryOperator 0x561dc2f28f00 <line:806:3, col:37> 'int' '='
    | |-DeclRefExpr 0x561dc2f28df0 <col:3> 'int' lvalue Var 0x561dc2f209e0 'y' 'int'
    | `-ConditionalOperator 0x561dc2f28ed0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x561dc2f28e88 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x561dc2f28e70 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x561dc2f28e10 <col:7> '_Bool' lvalue Var 0x561dc2f20a78 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x561dc2f28ea0 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561dc2f28e30 <col:25> 'int' lvalue Var 0x561dc2f20af8 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x561dc2f28eb8 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x561dc2f28e50 <col:37> 'int' lvalue Var 0x561dc2f209e0 'y' 'int'
    |-BinaryOperator 0x561dc2f28f98 <line:807:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x561dc2f28f20 <col:3> '_Bool' lvalue Var 0x561dc2f20a78 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x561dc2f28f70 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x561dc2f28f40 <col:28> 'int' 0
    |-CallExpr 0x561dc2f29008 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561dc2f28ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561dc2f28fb8 <col:3> 'void ()' Function 0x561dc2ec7410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561dc2f29080 <line:809:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561dc2f29068 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561dc2f29028 <col:3> 'void (int)' Function 0x561dc2ec70d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x561dc2f290c0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561dc2f290a8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561dc2f29048 <col:21> '_Bool' lvalue Var 0x561dc2f207c0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x561dc2f290f8 <line:810:3, col:10>
      `-IntegerLiteral 0x561dc2f290d8 <col:10> 'int' 0
