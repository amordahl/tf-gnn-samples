TranslationUnitDecl 0x55fba7192f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55fba7193848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55fba7193520 '__int128'
|-TypedefDecl 0x55fba71938b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55fba7193540 'unsigned __int128'
|-TypedefDecl 0x55fba7193bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55fba7193990 'struct __NSConstantString_tag'
|   `-Record 0x55fba7193910 '__NSConstantString_tag'
|-TypedefDecl 0x55fba7193c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55fba7193c20 'char *'
|   `-BuiltinType 0x55fba7193020 'char'
|-TypedefDecl 0x55fba71d2e40 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55fba7193f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55fba7193d40 'struct __va_list_tag'
|     `-Record 0x55fba7193cc0 '__va_list_tag'
|-FunctionDecl 0x55fba71d2f20 <reducercommutativity/sum60_true-unreach-call.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55fba71d3068 <line:2:1, col:34> col:12 used __VERIFIER_nondet_int 'int ()' extern
|-FunctionDecl 0x55fba71d3328 <line:4:1, line:13:1> line:4:5 used sum 'int (int *)'
| |-ParmVarDecl 0x55fba71d3218 <col:10, col:18> col:14 used x 'int *':'int *'
| `-CompoundStmt 0x55fba71d3890 <line:5:1, line:13:1>
|   |-DeclStmt 0x55fba71d3450 <line:6:3, col:8>
|   | `-VarDecl 0x55fba71d33e8 <col:3, col:7> col:7 used i 'int'
|   |-DeclStmt 0x55fba71d34e8 <line:7:3, col:16>
|   | `-VarDecl 0x55fba71d3480 <col:3, col:13> col:13 used ret 'long long'
|   |-BinaryOperator 0x55fba71d3558 <line:8:3, col:9> 'long long' '='
|   | |-DeclRefExpr 0x55fba71d3500 <col:3> 'long long' lvalue Var 0x55fba71d3480 'ret' 'long long'
|   | `-ImplicitCastExpr 0x55fba71d3540 <col:9> 'long long' <IntegralCast>
|   |   `-IntegerLiteral 0x55fba71d3520 <col:9> 'int' 0
|   |-ForStmt 0x55fba71d37f8 <line:9:3, line:11:3>
|   | |-BinaryOperator 0x55fba71d35b8 <line:9:8, col:12> 'int' '='
|   | | |-DeclRefExpr 0x55fba71d3578 <col:8> 'int' lvalue Var 0x55fba71d33e8 'i' 'int'
|   | | `-IntegerLiteral 0x55fba71d3598 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x55fba71d3630 <col:15, col:19> 'int' '<'
|   | | |-ImplicitCastExpr 0x55fba71d3618 <col:15> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x55fba71d35d8 <col:15> 'int' lvalue Var 0x55fba71d33e8 'i' 'int'
|   | | `-IntegerLiteral 0x55fba71d35f8 <col:19> 'int' 60
|   | |-UnaryOperator 0x55fba71d3670 <col:23, col:24> 'int' postfix '++'
|   | | `-DeclRefExpr 0x55fba71d3650 <col:23> 'int' lvalue Var 0x55fba71d33e8 'i' 'int'
|   | `-CompoundStmt 0x55fba71d37e0 <col:28, line:11:3>
|   |   `-BinaryOperator 0x55fba71d37c0 <line:10:5, col:20> 'long long' '='
|   |     |-DeclRefExpr 0x55fba71d3688 <col:5> 'long long' lvalue Var 0x55fba71d3480 'ret' 'long long'
|   |     `-BinaryOperator 0x55fba71d37a0 <col:11, col:20> 'long long' '+'
|   |       |-ImplicitCastExpr 0x55fba71d3758 <col:11> 'long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fba71d36a8 <col:11> 'long long' lvalue Var 0x55fba71d3480 'ret' 'long long'
|   |       `-ImplicitCastExpr 0x55fba71d3788 <col:17, col:20> 'long long' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55fba71d3770 <col:17, col:20> 'int' <LValueToRValue>
|   |           `-ArraySubscriptExpr 0x55fba71d3738 <col:17, col:20> 'int' lvalue
|   |             |-ImplicitCastExpr 0x55fba71d3708 <col:17> 'int *':'int *' <LValueToRValue>
|   |             | `-DeclRefExpr 0x55fba71d36c8 <col:17> 'int *':'int *' lvalue ParmVar 0x55fba71d3218 'x' 'int *':'int *'
|   |             `-ImplicitCastExpr 0x55fba71d3720 <col:19> 'int' <LValueToRValue>
|   |               `-DeclRefExpr 0x55fba71d36e8 <col:19> 'int' lvalue Var 0x55fba71d33e8 'i' 'int'
|   `-ReturnStmt 0x55fba71d3880 <line:12:3, col:10>
|     `-ImplicitCastExpr 0x55fba71d3868 <col:10> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55fba71d3850 <col:10> 'long long' <LValueToRValue>
|         `-DeclRefExpr 0x55fba71d3830 <col:10> 'long long' lvalue Var 0x55fba71d3480 'ret' 'long long'
`-FunctionDecl 0x55fba71d38f0 <line:15:1, line:42:1> line:15:5 main 'int ()'
  `-CompoundStmt 0x55fba71f8ed8 <line:16:1, line:42:1>
    |-DeclStmt 0x55fba71d3a58 <line:17:3, col:12>
    | `-VarDecl 0x55fba71d39f0 <col:3, col:11> col:7 used x 'int [60]'
    |-DeclStmt 0x55fba71d3af0 <line:18:3, col:11>
    | `-VarDecl 0x55fba71d3a88 <col:3, col:7> col:7 used temp 'int'
    |-DeclStmt 0x55fba71d3b88 <line:19:3, col:10>
    | `-VarDecl 0x55fba71d3b20 <col:3, col:7> col:7 used ret 'int'
    |-DeclStmt 0x55fba71d3c20 <line:20:3, col:11>
    | `-VarDecl 0x55fba71d3bb8 <col:3, col:7> col:7 used ret2 'int'
    |-DeclStmt 0x55fba71d3cb8 <line:21:3, col:11>
    | `-VarDecl 0x55fba71d3c50 <col:3, col:7> col:7 used ret5 'int'
    |-ForStmt 0x55fba71f8150 <line:23:3, line:25:3>
    | |-DeclStmt 0x55fba71d3d70 <line:23:8, col:17>
    | | `-VarDecl 0x55fba71d3ce8 <col:8, col:16> col:12 used i 'int' cinit
    | |   `-IntegerLiteral 0x55fba71d3d50 <col:16> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x55fba71d3de0 <col:19, col:23> 'int' '<'
    | | |-ImplicitCastExpr 0x55fba71d3dc8 <col:19> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x55fba71d3d88 <col:19> 'int' lvalue Var 0x55fba71d3ce8 'i' 'int'
    | | `-IntegerLiteral 0x55fba71d3da8 <col:23> 'int' 60
    | |-UnaryOperator 0x55fba71d3e20 <col:27, col:28> 'int' postfix '++'
    | | `-DeclRefExpr 0x55fba71d3e00 <col:27> 'int' lvalue Var 0x55fba71d3ce8 'i' 'int'
    | `-CompoundStmt 0x55fba71f8138 <col:32, line:25:3>
    |   `-BinaryOperator 0x55fba71f8118 <line:24:5, col:34> 'int' '='
    |     |-ArraySubscriptExpr 0x55fba71f8070 <col:5, col:8> 'int' lvalue
    |     | |-ImplicitCastExpr 0x55fba71f8040 <col:5> 'int *' <ArrayToPointerDecay>
    |     | | `-DeclRefExpr 0x55fba71f8000 <col:5> 'int [60]' lvalue Var 0x55fba71d39f0 'x' 'int [60]'
    |     | `-ImplicitCastExpr 0x55fba71f8058 <col:7> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55fba71f8020 <col:7> 'int' lvalue Var 0x55fba71d3ce8 'i' 'int'
    |     `-CallExpr 0x55fba71f80f8 <col:12, col:34> 'int'
    |       `-ImplicitCastExpr 0x55fba71f80e0 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x55fba71f8090 <col:12> 'int ()' Function 0x55fba71d3068 '__VERIFIER_nondet_int' 'int ()'
    |-BinaryOperator 0x55fba71f82a8 <line:27:3, col:14> 'int' '='
    | |-DeclRefExpr 0x55fba71f8188 <col:3> 'int' lvalue Var 0x55fba71d3b20 'ret' 'int'
    | `-CallExpr 0x55fba71f8268 <col:9, col:14> 'int'
    |   |-ImplicitCastExpr 0x55fba71f8250 <col:9> 'int (*)(int *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x55fba71f81a8 <col:9> 'int (int *)' Function 0x55fba71d3328 'sum' 'int (int *)'
    |   `-ImplicitCastExpr 0x55fba71f8290 <col:13> 'int *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x55fba71f81c8 <col:13> 'int [60]' lvalue Var 0x55fba71d39f0 'x' 'int [60]'
    |-BinaryOperator 0x55fba71f8378 <line:29:3, col:11> 'int' '='
    | |-DeclRefExpr 0x55fba71f82c8 <col:3> 'int' lvalue Var 0x55fba71d3a88 'temp' 'int'
    | `-ImplicitCastExpr 0x55fba71f8360 <col:8, col:11> 'int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x55fba71f8340 <col:8, col:11> 'int' lvalue
    |     |-ImplicitCastExpr 0x55fba71f8328 <col:8> 'int *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x55fba71f82e8 <col:8> 'int [60]' lvalue Var 0x55fba71d39f0 'x' 'int [60]'
    |     `-IntegerLiteral 0x55fba71f8308 <col:10> 'int' 0
    |-BinaryOperator 0x55fba71f84a0 <col:13, col:23> 'int' '='
    | |-ArraySubscriptExpr 0x55fba71f83f0 <col:13, col:16> 'int' lvalue
    | | |-ImplicitCastExpr 0x55fba71f83d8 <col:13> 'int *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x55fba71f8398 <col:13> 'int [60]' lvalue Var 0x55fba71d39f0 'x' 'int [60]'
    | | `-IntegerLiteral 0x55fba71f83b8 <col:15> 'int' 0
    | `-ImplicitCastExpr 0x55fba71f8488 <col:20, col:23> 'int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x55fba71f8468 <col:20, col:23> 'int' lvalue
    |     |-ImplicitCastExpr 0x55fba71f8450 <col:20> 'int *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x55fba71f8410 <col:20> 'int [60]' lvalue Var 0x55fba71d39f0 'x' 'int [60]'
    |     `-IntegerLiteral 0x55fba71f8430 <col:22> 'int' 1
    |-BinaryOperator 0x55fba71f8570 <col:26, col:33> 'int' '='
    | |-ArraySubscriptExpr 0x55fba71f8518 <col:26, col:29> 'int' lvalue
    | | |-ImplicitCastExpr 0x55fba71f8500 <col:26> 'int *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x55fba71f84c0 <col:26> 'int [60]' lvalue Var 0x55fba71d39f0 'x' 'int [60]'
    | | `-IntegerLiteral 0x55fba71f84e0 <col:28> 'int' 1
    | `-ImplicitCastExpr 0x55fba71f8558 <col:33> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55fba71f8538 <col:33> 'int' lvalue Var 0x55fba71d3a88 'temp' 'int'
    |-BinaryOperator 0x55fba71f8648 <line:30:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55fba71f8590 <col:3> 'int' lvalue Var 0x55fba71d3bb8 'ret2' 'int'
    | `-CallExpr 0x55fba71f8608 <col:10, col:15> 'int'
    |   |-ImplicitCastExpr 0x55fba71f85f0 <col:10> 'int (*)(int *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x55fba71f85b0 <col:10> 'int (int *)' Function 0x55fba71d3328 'sum' 'int (int *)'
    |   `-ImplicitCastExpr 0x55fba71f8630 <col:14> 'int *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x55fba71f85d0 <col:14> 'int [60]' lvalue Var 0x55fba71d39f0 'x' 'int [60]'
    |-BinaryOperator 0x55fba71f8718 <line:31:3, col:11> 'int' '='
    | |-DeclRefExpr 0x55fba71f8668 <col:3> 'int' lvalue Var 0x55fba71d3a88 'temp' 'int'
    | `-ImplicitCastExpr 0x55fba71f8700 <col:8, col:11> 'int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x55fba71f86e0 <col:8, col:11> 'int' lvalue
    |     |-ImplicitCastExpr 0x55fba71f86c8 <col:8> 'int *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x55fba71f8688 <col:8> 'int [60]' lvalue Var 0x55fba71d39f0 'x' 'int [60]'
    |     `-IntegerLiteral 0x55fba71f86a8 <col:10> 'int' 0
    |-ForStmt 0x55fba71f8a90 <line:32:3, line:34:3>
    | |-DeclStmt 0x55fba71f87d8 <line:32:7, col:16>
    | | `-VarDecl 0x55fba71f8750 <col:7, col:14> col:11 used i 'int' cinit
    | |   `-IntegerLiteral 0x55fba71f87b8 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x55fba71f8888 <col:18, col:24> 'int' '<'
    | | |-ImplicitCastExpr 0x55fba71f8870 <col:18> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x55fba71f87f0 <col:18> 'int' lvalue Var 0x55fba71f8750 'i' 'int'
    | | `-BinaryOperator 0x55fba71f8850 <col:20, col:24> 'int' '-'
    | |   |-IntegerLiteral 0x55fba71f8810 <col:20> 'int' 60
    | |   `-IntegerLiteral 0x55fba71f8830 <col:24> 'int' 1
    | |-UnaryOperator 0x55fba71f88c8 <col:27, col:28> 'int' postfix '++'
    | | `-DeclRefExpr 0x55fba71f88a8 <col:27> 'int' lvalue Var 0x55fba71f8750 'i' 'int'
    | `-CompoundStmt 0x55fba71f8a78 <col:31, line:34:3>
    |   `-BinaryOperator 0x55fba71f8a58 <line:33:6, col:18> 'int' '='
    |     |-ArraySubscriptExpr 0x55fba71f8950 <col:6, col:9> 'int' lvalue
    |     | |-ImplicitCastExpr 0x55fba71f8920 <col:6> 'int *' <ArrayToPointerDecay>
    |     | | `-DeclRefExpr 0x55fba71f88e0 <col:6> 'int [60]' lvalue Var 0x55fba71d39f0 'x' 'int [60]'
    |     | `-ImplicitCastExpr 0x55fba71f8938 <col:8> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55fba71f8900 <col:8> 'int' lvalue Var 0x55fba71f8750 'i' 'int'
    |     `-ImplicitCastExpr 0x55fba71f8a40 <col:13, col:18> 'int' <LValueToRValue>
    |       `-ArraySubscriptExpr 0x55fba71f8a20 <col:13, col:18> 'int' lvalue
    |         |-ImplicitCastExpr 0x55fba71f8a08 <col:13> 'int *' <ArrayToPointerDecay>
    |         | `-DeclRefExpr 0x55fba71f8970 <col:13> 'int [60]' lvalue Var 0x55fba71d39f0 'x' 'int [60]'
    |         `-BinaryOperator 0x55fba71f89e8 <col:15, col:17> 'int' '+'
    |           |-ImplicitCastExpr 0x55fba71f89d0 <col:15> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55fba71f8990 <col:15> 'int' lvalue Var 0x55fba71f8750 'i' 'int'
    |           `-IntegerLiteral 0x55fba71f89b0 <col:17> 'int' 1
    |-BinaryOperator 0x55fba71f8bb8 <line:35:3, col:14> 'int' '='
    | |-ArraySubscriptExpr 0x55fba71f8b60 <col:3, col:10> 'int' lvalue
    | | |-ImplicitCastExpr 0x55fba71f8b48 <col:3> 'int *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x55fba71f8ac8 <col:3> 'int [60]' lvalue Var 0x55fba71d39f0 'x' 'int [60]'
    | | `-BinaryOperator 0x55fba71f8b28 <col:5, col:9> 'int' '-'
    | |   |-IntegerLiteral 0x55fba71f8ae8 <col:5> 'int' 60
    | |   `-IntegerLiteral 0x55fba71f8b08 <col:9> 'int' 1
    | `-ImplicitCastExpr 0x55fba71f8ba0 <col:14> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55fba71f8b80 <col:14> 'int' lvalue Var 0x55fba71d3a88 'temp' 'int'
    |-BinaryOperator 0x55fba71f8c90 <line:36:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55fba71f8bd8 <col:3> 'int' lvalue Var 0x55fba71d3c50 'ret5' 'int'
    | `-CallExpr 0x55fba71f8c50 <col:10, col:15> 'int'
    |   |-ImplicitCastExpr 0x55fba71f8c38 <col:10> 'int (*)(int *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x55fba71f8bf8 <col:10> 'int (int *)' Function 0x55fba71d3328 'sum' 'int (int *)'
    |   `-ImplicitCastExpr 0x55fba71f8c78 <col:14> 'int *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x55fba71f8c18 <col:14> 'int [60]' lvalue Var 0x55fba71d39f0 'x' 'int [60]'
    |-IfStmt 0x55fba71f8e90 <line:38:3, line:40:3>
    | |-BinaryOperator 0x55fba71f8dd0 <line:38:6, col:27> 'int' '||'
    | | |-BinaryOperator 0x55fba71f8d20 <col:6, col:13> 'int' '!='
    | | | |-ImplicitCastExpr 0x55fba71f8cf0 <col:6> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x55fba71f8cb0 <col:6> 'int' lvalue Var 0x55fba71d3b20 'ret' 'int'
    | | | `-ImplicitCastExpr 0x55fba71f8d08 <col:13> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x55fba71f8cd0 <col:13> 'int' lvalue Var 0x55fba71d3bb8 'ret2' 'int'
    | | `-BinaryOperator 0x55fba71f8db0 <col:21, col:27> 'int' '!='
    | |   |-ImplicitCastExpr 0x55fba71f8d80 <col:21> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x55fba71f8d40 <col:21> 'int' lvalue Var 0x55fba71d3b20 'ret' 'int'
    | |   `-ImplicitCastExpr 0x55fba71f8d98 <col:27> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x55fba71f8d60 <col:27> 'int' lvalue Var 0x55fba71d3c50 'ret5' 'int'
    | `-CompoundStmt 0x55fba71f8e78 <col:32, line:40:3>
    |   `-CallExpr 0x55fba71f8e58 <line:39:5, col:22> 'void'
    |     `-ImplicitCastExpr 0x55fba71f8e40 <col:5> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55fba71f8df0 <col:5> 'void () __attribute__((noreturn))' Function 0x55fba71d2f20 '__VERIFIER_error' 'void () __attribute__((noreturn))'
    `-ReturnStmt 0x55fba71f8ec8 <line:41:3, col:10>
      `-IntegerLiteral 0x55fba71f8ea8 <col:10> 'int' 1
