TranslationUnitDecl 0x557902cd6698 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x557902cd6f58 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x557902cd6c30 '__int128'
|-TypedefDecl 0x557902cd6fc8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x557902cd6c50 'unsigned __int128'
|-TypedefDecl 0x557902cd72d0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x557902cd70a0 'struct __NSConstantString_tag'
|   `-Record 0x557902cd7020 '__NSConstantString_tag'
|-TypedefDecl 0x557902cd7378 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x557902cd7330 'char *'
|   `-BuiltinType 0x557902cd6730 'char'
|-TypedefDecl 0x557902d16330 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x557902cd7610 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x557902cd7450 'struct __va_list_tag'
|     `-Record 0x557902cd73d0 '__va_list_tag'
|-EnumDecl 0x557902d16388 <termination-crafted-lit/ChenFlurMukhopadhyay-SAS2012-Ex2.13_false-no-overflow.c:18:9, col:26> col:9
| |-EnumConstantDecl 0x557902d16458 <col:15> col:15 false 'int'
| `-EnumConstantDecl 0x557902d164a8 <col:22> col:22 true 'int'
|-TypedefDecl 0x557902d16560 <col:1, col:28> col:28 bool 'enum bool':'bool'
| `-ElaboratedType 0x557902d16500 'enum bool' sugar
|   `-EnumType 0x557902d16430 'bool'
|     `-Enum 0x557902d16388 ''
|-FunctionDecl 0x557902d166a8 <line:20:1, col:38> col:12 used __VERIFIER_nondet_int 'int (void)' extern
`-FunctionDecl 0x557902d167e8 <line:22:1, line:31:1> line:22:5 main 'int ()'
  `-CompoundStmt 0x557902d16de0 <col:12, line:31:1>
    |-DeclStmt 0x557902d169a0 <line:23:5, col:13>
    | |-VarDecl 0x557902d168a0 <col:5, col:9> col:9 used x 'int'
    | `-VarDecl 0x557902d16920 <col:5, col:12> col:12 used y 'int'
    |-BinaryOperator 0x557902d16a68 <line:24:5, col:31> 'int' '='
    | |-DeclRefExpr 0x557902d169b8 <col:5> 'int' lvalue Var 0x557902d168a0 'x' 'int'
    | `-CallExpr 0x557902d16a48 <col:9, col:31> 'int'
    |   `-ImplicitCastExpr 0x557902d16a30 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x557902d169d8 <col:9> 'int (void)' Function 0x557902d166a8 '__VERIFIER_nondet_int' 'int (void)'
    |-BinaryOperator 0x557902d16b00 <line:25:5, col:31> 'int' '='
    | |-DeclRefExpr 0x557902d16a88 <col:5> 'int' lvalue Var 0x557902d16920 'y' 'int'
    | `-CallExpr 0x557902d16ae0 <col:9, col:31> 'int'
    |   `-ImplicitCastExpr 0x557902d16ac8 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x557902d16aa8 <col:9> 'int (void)' Function 0x557902d166a8 '__VERIFIER_nondet_int' 'int (void)'
    |-WhileStmt 0x557902d16d98 <line:26:5, line:29:5>
    | |-BinaryOperator 0x557902d16bd0 <line:26:12, col:20> 'int' '>'
    | | |-BinaryOperator 0x557902d16b90 <col:12, col:16> 'int' '-'
    | | | |-ImplicitCastExpr 0x557902d16b60 <col:12> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x557902d16b20 <col:12> 'int' lvalue Var 0x557902d168a0 'x' 'int'
    | | | `-ImplicitCastExpr 0x557902d16b78 <col:16> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x557902d16b40 <col:16> 'int' lvalue Var 0x557902d16920 'y' 'int'
    | | `-IntegerLiteral 0x557902d16bb0 <col:20> 'int' 0
    | `-CompoundStmt 0x557902d16d78 <col:23, line:29:5>
    |   |-BinaryOperator 0x557902d16ca0 <line:27:9, col:17> 'int' '='
    |   | |-DeclRefExpr 0x557902d16bf0 <col:9> 'int' lvalue Var 0x557902d168a0 'x' 'int'
    |   | `-BinaryOperator 0x557902d16c80 <col:13, col:17> 'int' '-'
    |   |   |-ImplicitCastExpr 0x557902d16c50 <col:13> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x557902d16c10 <col:13> 'int' lvalue Var 0x557902d16920 'y' 'int'
    |   |   `-ImplicitCastExpr 0x557902d16c68 <col:17> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x557902d16c30 <col:17> 'int' lvalue Var 0x557902d168a0 'x' 'int'
    |   `-BinaryOperator 0x557902d16d58 <line:28:9, col:17> 'int' '='
    |     |-DeclRefExpr 0x557902d16cc0 <col:9> 'int' lvalue Var 0x557902d16920 'y' 'int'
    |     `-BinaryOperator 0x557902d16d38 <col:13, col:17> 'int' '+'
    |       |-ImplicitCastExpr 0x557902d16d20 <col:13> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x557902d16ce0 <col:13> 'int' lvalue Var 0x557902d16920 'y' 'int'
    |       `-IntegerLiteral 0x557902d16d00 <col:17> 'int' 1
    `-ReturnStmt 0x557902d16dd0 <line:30:5, col:12>
      `-IntegerLiteral 0x557902d16db0 <col:12> 'int' 0
