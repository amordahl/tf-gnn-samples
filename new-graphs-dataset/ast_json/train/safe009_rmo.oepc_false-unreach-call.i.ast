TranslationUnitDecl 0x5595bce6af88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5595bce6b848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5595bce6b520 '__int128'
|-TypedefDecl 0x5595bce6b8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5595bce6b540 'unsigned __int128'
|-TypedefDecl 0x5595bce6bbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5595bce6b990 'struct __NSConstantString_tag'
|   `-Record 0x5595bce6b910 '__NSConstantString_tag'
|-TypedefDecl 0x5595bce6bc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5595bce6bc20 'char *'
|   `-BuiltinType 0x5595bce6b020 'char'
|-TypedefDecl 0x5595bceaab60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5595bce6bf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5595bce6bd40 'struct __va_list_tag'
|     `-Record 0x5595bce6bcc0 '__va_list_tag'
|-FunctionDecl 0x5595bceaac80 <pthread-wmm/safe009_rmo.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x5595bceaae50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5595bceaad80 <col:31> col:34 'int'
|-FunctionDecl 0x5595bceaafc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5595bceab0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5595bceab238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5595bceab1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5595bceab468 <col:40, col:99>
|   |-IfStmt 0x5595bceab438 <col:42, col:88>
|   | |-UnaryOperator 0x5595bceab318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5595bceab300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5595bceab2e0 <col:47> 'int' lvalue ParmVar 0x5595bceab1a8 'expression' 'int'
|   | `-CompoundStmt 0x5595bceab420 <col:59, col:88>
|   |   `-LabelStmt 0x5595bceab408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5595bceab398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5595bceab380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5595bceab330 <col:68> 'void () __attribute__((noreturn))' Function 0x5595bceab0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5595bceab450 <col:89>
|   `-ReturnStmt 0x5595bceab458 <col:91>
|-FunctionDecl 0x5595bceab4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5595bceab570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5595bceab8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5595bceab628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5595bceab6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5595bceab728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5595bceab7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5595bceab9b0 <line:11:22>
|-FunctionDecl 0x5595bced0f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5595bceaba20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5595bceabaa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5595bced0d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5595bced0dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5595bced0fd0 <line:14:22>
|-FunctionDecl 0x5595bced1280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5595bced1040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5595bced10c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5595bced1140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5595bced1338 <line:16:22>
|-TypedefDecl 0x5595bced13a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5595bce6b0e0 'unsigned char'
|-TypedefDecl 0x5595bced1418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5595bce6b100 'unsigned short'
|-TypedefDecl 0x5595bced1488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5595bce6b120 'unsigned int'
|-TypedefDecl 0x5595bced14f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-TypedefDecl 0x5595bced1568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5595bce6b040 'signed char'
|-TypedefDecl 0x5595bced15d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5595bce6b0e0 'unsigned char'
|-TypedefDecl 0x5595bced1648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5595bce6b060 'short'
|-TypedefDecl 0x5595bced16b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5595bce6b100 'unsigned short'
|-TypedefDecl 0x5595bced1728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5595bce6b080 'int'
|-TypedefDecl 0x5595bced1798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5595bce6b120 'unsigned int'
|-TypedefDecl 0x5595bced1808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced1878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-TypedefDecl 0x5595bced18e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced1958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-TypedefDecl 0x5595bced19c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-TypedefDecl 0x5595bced1a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5595bce6b120 'unsigned int'
|-TypedefDecl 0x5595bced1aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5595bce6b120 'unsigned int'
|-TypedefDecl 0x5595bced1b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-TypedefDecl 0x5595bced1b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-TypedefDecl 0x5595bced1bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5595bce6b120 'unsigned int'
|-TypedefDecl 0x5595bced1c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-TypedefDecl 0x5595bced1cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced1d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced1dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5595bce6b080 'int'
|-RecordDecl 0x5595bced1e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x5595bced1f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5595bced2030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5595bced1fd0 'struct __fsid_t' sugar
|   `-RecordType 0x5595bced1eb0 '__fsid_t'
|     `-Record 0x5595bced1e30 ''
|-TypedefDecl 0x5595bced20b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced2128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-TypedefDecl 0x5595bced2198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-TypedefDecl 0x5595bced2208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5595bce6b120 'unsigned int'
|-TypedefDecl 0x5595bced2278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced22e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5595bce6b120 'unsigned int'
|-TypedefDecl 0x5595bced2358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced23c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5595bce6b080 'int'
|-TypedefDecl 0x5595bced2438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5595bce6b080 'int'
|-TypedefDecl 0x5595bced24a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5595bce6b080 'int'
|-TypedefDecl 0x5595bced2518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5595bce6b7a0 'void *'
|   `-BuiltinType 0x5595bce6afe0 'void'
|-TypedefDecl 0x5595bced2588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced25f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced2668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced26d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-TypedefDecl 0x5595bced2748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-TypedefDecl 0x5595bced27b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-TypedefDecl 0x5595bced2828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-TypedefDecl 0x5595bced2898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced2908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced2978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced29e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-TypedefDecl 0x5595bced2a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5595bced2a40 '__off64_t' sugar
|   |-Typedef 0x5595bced1d68 '__off64_t'
|   `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced2b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5595bced2b30 '__quad_t *'
|   `-TypedefType 0x5595bced2ad0 '__quad_t' sugar
|     |-Typedef 0x5595bced18e8 '__quad_t'
|     `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced2be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5595bce6bc20 'char *'
|   `-BuiltinType 0x5595bce6b020 'char'
|-TypedefDecl 0x5595bced2c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced2cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5595bce6b120 'unsigned int'
|-FunctionDecl 0x5595bced2e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5595bced2d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5595bced3148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x5595bced3138 <line:73:3, col:34>
|     `-CallExpr 0x5595bced30f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5595bced30e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5595bced3070 <col:10> '<builtin fn type>' Function 0x5595bced2ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5595bced3120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5595bced3090 <col:29> 'unsigned int' lvalue ParmVar 0x5595bced2d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x5595bced2ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5595bced2f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5595bced2ff0 <col:10> Implicit
| `-ConstAttr 0x5595bced3048 <col:10> Implicit
|-FunctionDecl 0x5595bced32a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5595bced3198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5595bced35b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5595bced35a8 <line:78:3, col:34>
|     `-CallExpr 0x5595bced3568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5595bced3550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5595bced34d8 <col:10> '<builtin fn type>' Function 0x5595bced3348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5595bced3590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5595bced34f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5595bced3198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5595bced3348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5595bced33e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5595bced3458 <col:10> Implicit
| `-ConstAttr 0x5595bced34b0 <col:10> Implicit
|-TypedefDecl 0x5595bced35e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-TypedefDecl 0x5595bced3678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5595bced3640 '__time_t' sugar
|   |-Typedef 0x5595bced2278 '__time_t'
|   `-BuiltinType 0x5595bce6b0a0 'long'
|-RecordDecl 0x5595bced36d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x5595bced3788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5595bced3818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5595bced38a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5595bced3870 '__pid_t' sugar
|   |-Typedef 0x5595bced1dd8 '__pid_t'
|   `-BuiltinType 0x5595bce6b080 'int'
|-RecordDecl 0x5595bced3900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5595bced39c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5595bced3a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x5595bced3ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5595bced3b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-RecordDecl 0x5595bced3b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x5595bced5e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5595bced5f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5595bced5ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x5595bced3c10 'cpu_set_t'
|     `-Record 0x5595bced3b90 ''
|-FunctionDecl 0x5595bced61f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5595bced5fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5595bced60d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5595bced62a8 <line:108:19>
|-FunctionDecl 0x5595bced6480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5595bced6310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5595bced6528 <col:69>
|-FunctionDecl 0x5595bced66a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5595bced6590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5595bced6748 <col:64>
|-FunctionDecl 0x5595bced6a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5595bced67b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5595bced68e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5595bced6ab8 <line:114:22>
|-FunctionDecl 0x5595bced6e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5595bced6b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5595bced6c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5595bced6f10 <col:88>
|-FunctionDecl 0x5595bced71c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5595bced6f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5595bced6ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5595bced7088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5595bced7280 <col:62>
|-FunctionDecl 0x5595bced73f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5595bced72e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5595bced74a0 <col:63>
|-FunctionDecl 0x5595bced75c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5595bced7668 <col:47>
|-FunctionDecl 0x5595bced7770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5595bced76d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5595bced7818 <col:69>
|-FunctionDecl 0x5595bced7920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5595bced7888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5595bced79c8 <col:69>
|-FunctionDecl 0x5595bced7c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5595bced7a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5595bced7b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5595bced7d38 <col:88>
|-TypedefDecl 0x5595bced7dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5595bced7d90 '__clock_t' sugar
|   |-Typedef 0x5595bced20b8 '__clock_t'
|   `-BuiltinType 0x5595bce6b0a0 'long'
|-TypedefDecl 0x5595bced87e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5595bced7e20 '__clockid_t' sugar
|   |-Typedef 0x5595bced24a8 '__clockid_t'
|   `-BuiltinType 0x5595bce6b080 'int'
|-TypedefDecl 0x5595bced8878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5595bced8840 '__timer_t' sugar
|   |-Typedef 0x5595bced2518 '__timer_t'
|   `-PointerType 0x5595bce6b7a0 'void *'
|     `-BuiltinType 0x5595bce6afe0 'void'
|-RecordDecl 0x5595bced88d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x5595bced8990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5595bced89f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5595bced8a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5595bced8ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5595bced8b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5595bced8b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5595bced8c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5595bced8c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5595bced8cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5595bced8d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5595bced8da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5595bced8df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x5595bced8eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5595bced8f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5595bced8fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5595bced91a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5595bced9240 <col:45>
|-FunctionDecl 0x5595bced9420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5595bced9310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5595bced94c8 <col:54>
|-FunctionDecl 0x5595bced96c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5595bced9530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5595bced95a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5595bced9778 <line:158:22>
| `-ConstAttr 0x5595bceda410 <col:63>
|-FunctionDecl 0x5595bceda610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5595bceda508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5595bceda6b8 <col:56>
|-FunctionDecl 0x5595bcedaa60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5595bceda728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5595bceda7a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5595bceda820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5595bceda918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5595bcedab20 <col:54>
|-RecordDecl 0x5595bcedab78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x5595bcedac28 parent 0x5595bce6af88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5595bcedae88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5595bcedaf28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5595bcedaf90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5595bcedaff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5595bcedb0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5595bcedb208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5595bcedb1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x5595bcedb140 'struct __locale_struct' sugar
|     `-RecordType 0x5595bcedac00 'struct __locale_struct'
|       `-Record 0x5595bcedab78 '__locale_struct'
|-TypedefDecl 0x5595bcedb2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5595bcedb280 '__locale_t' sugar
|   |-Typedef 0x5595bcedb208 '__locale_t'
|   `-PointerType 0x5595bcedb1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x5595bcedb140 'struct __locale_struct' sugar
|       `-RecordType 0x5595bcedac00 'struct __locale_struct'
|         `-Record 0x5595bcedab78 '__locale_struct'
|-FunctionDecl 0x5595bcedb6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5595bcedb328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5595bcedb3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5595bcedb438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5595bcedb4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5595bcedb540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5595bcedb778 <col:40>
|-FunctionDecl 0x5595bcedb968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5595bcedb840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5595bcedba10 <col:66>
|-FunctionDecl 0x5595bcedbb20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5595bcedba78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5595bcedbbc8 <col:69>
|-FunctionDecl 0x5595bcedbdf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5595bcedbc30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5595bcedbcc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5595bcedbea8 <col:52>
|-FunctionDecl 0x5595bcedc050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5595bcedbf10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5595bcedbfa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5595bcedc100 <col:55>
|-FunctionDecl 0x5595bcedc298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5595bcedc180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5595bcedc340 <col:62>
|-FunctionDecl 0x5595bcedc578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5595bcedc3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5595bcedc620 <col:60>
|-FunctionDecl 0x5595bcedc848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5595bcedc6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5595bcedc720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5595bcedc8f8 <col:44>
|-FunctionDecl 0x5595bcedcb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5595bcedc960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5595bcedc9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5595bcedcbb8 <col:49>
|-VarDecl 0x5595bcedccb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5595bcedcd38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5595bcedcdb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5595bcedce80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5595bcedcfb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5595bcedd050 <col:42>
|-VarDecl 0x5595bcedd0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5595bcedd140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5595bcedd2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5595bcedd1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5595bcedd370 <col:57>
|-FunctionDecl 0x5595bcede4f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5595bcedd3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5595bcede598 <col:56>
|-FunctionDecl 0x5595bcede6a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5595bcede618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5595bcede750 <col:59>
|-FunctionDecl 0x5595bcede858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5595bcede7c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5595bcede900 <col:48>
| `-ConstAttr 0x5595bcede958 <col:89>
|-FunctionDecl 0x5595bcedebb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5595bcedea08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5595bcedea98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5595bcedee18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5595bcedeca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5595bceded38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5595bcedeec8 <col:88>
|-FunctionDecl 0x5595bcedf060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5595bcedef30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5595bcedefc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5595bcedf110 <col:88>
|-FunctionDecl 0x5595bcedf328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5595bcedf178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5595bcedf208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5595bcedf3d8 <line:209:22>
|-FunctionDecl 0x5595bcedf778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5595bcedf440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5595bcedf500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5595bcedf590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5595bcedf620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5595bcedfa78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5595bcedf878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5595bcedf950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5595bcedfb28 <col:85>
|-FunctionDecl 0x5595bcedff18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5595bcedfb90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5595bcedfcc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5595bcedfdd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5595bcedffd0 <col:52>
|-FunctionDecl 0x5595bcee0148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5595bcee0038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5595bcee01f0 <col:61>
|-FunctionDecl 0x5595bcee0668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5595bcee0258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5595bcee02d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5595bcee0408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5595bcee0510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5595bcee0728 <col:62>
|-FunctionDecl 0x5595bcee0948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5595bcee0790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5595bcee0820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5595bcee09f8 <line:222:22>
|-FunctionDecl 0x5595bcee0af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5595bcee0a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5595bcee0ba0 <col:65>
|-TypedefDecl 0x5595bcee0c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5595bce6b140 'unsigned long'
|-RecordDecl 0x5595bcee0c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x5595bcee0db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5595bcee0e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5595bcee0ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5595bcee0e70 'union pthread_attr_t' sugar
|   `-RecordType 0x5595bcee0cf0 'union pthread_attr_t'
|     `-Record 0x5595bcee0c68 'pthread_attr_t'
|-RecordDecl 0x5595bcee0f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5595bcee1098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5595bcee1110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5595bcee11c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5595bcee1160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5595bcee0fa0 'struct __pthread_internal_list'
|     `-Record 0x5595bcee0f20 '__pthread_internal_list'
|-RecordDecl 0x5595bcee1230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x5595bcee12d8 parent 0x5595bce6af88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5595bcee13b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5595bcee1418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5595bcee1480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5595bcee5530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5595bcee5598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5595bcee5600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5595bcee5688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5595bcee5740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5595bcee5830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5595bcee5898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5595bcee5a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5595bcee59c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5595bcee12b0 'pthread_mutex_t'
|     `-Record 0x5595bcee1230 ''
|-RecordDecl 0x5595bcee5a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x5595bcee5bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5595bcee5c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5595bcee5cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5595bcee5c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5595bcee5b10 'pthread_mutexattr_t'
|     `-Record 0x5595bcee5a90 ''
|-RecordDecl 0x5595bcee5d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x5595bcee5e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x5595bcee5ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5595bcee5f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5595bcee5fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5595bcee6008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5595bcee6070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5595bcee60d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5595bcee6140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5595bcee61a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5595bcee6260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe009_rmo.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe009_rmo.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x5595bcee6350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5595bcee63b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5595bcee6540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5595bcee6490 'union pthread_cond_t' sugar
|   `-RecordType 0x5595bcee5de0 'pthread_cond_t'
|     `-Record 0x5595bcee5d60 ''
|-RecordDecl 0x5595bcee65b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5595bcee66b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5595bcee6718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5595bcee67d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5595bcee6770 'union pthread_condattr_t' sugar
|   `-RecordType 0x5595bcee6630 'pthread_condattr_t'
|     `-Record 0x5595bcee65b0 ''
|-TypedefDecl 0x5595bcee6858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5595bce6b120 'unsigned int'
|-TypedefDecl 0x5595bcee68c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5595bce6b080 'int'
|-RecordDecl 0x5595bcee6920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5595bcee69c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x5595bcee6a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5595bcee6af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5595bcee6b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5595bcee6bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5595bcee6c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5595bcee6c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5595bcee6d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5595bcee6d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5595bcee6dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5595bcee6e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5595bcee6ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5595bcee6f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe009_rmo.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe009_rmo.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x5595bcee6ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5595bcee7060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5595bcee71b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5595bcee7150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5595bcee69a0 'pthread_rwlock_t'
|     `-Record 0x5595bcee6920 ''
|-RecordDecl 0x5595bcee7220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x5595bcee7360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5595bcee73c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5595bcee7480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5595bcee7420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5595bcee72a0 'pthread_rwlockattr_t'
|     `-Record 0x5595bcee7220 ''
|-TypedefDecl 0x5595bcee9560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5595bce6b084 'volatile int' volatile
|   `-BuiltinType 0x5595bce6b080 'int'
|-RecordDecl 0x5595bcee95b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x5595bcee9700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5595bcee9768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5595bcee9820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5595bcee97c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x5595bcee9640 'pthread_barrier_t'
|     `-Record 0x5595bcee95b8 ''
|-RecordDecl 0x5595bcee9890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x5595bcee9990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5595bcee99f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5595bcee9ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5595bcee9a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5595bcee9910 'pthread_barrierattr_t'
|     `-Record 0x5595bcee9890 ''
|-TypedefDecl 0x5595bcee9bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5595bcee9b60 'long [8]' 8 
|   `-BuiltinType 0x5595bce6b0a0 'long'
|-EnumDecl 0x5595bcee9c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x5595bcee9ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5595bcee9d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5595bcee9d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x5595bcee9e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5595bcee9ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5595bcee9ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5595bcee9f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5595bcee9fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5595bcee9fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x5595bcee9f98 <col:26> 'int' EnumConstant 0x5595bcee9e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5595bceea058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5595bceea040 <col:29> 'int'
| |   `-DeclRefExpr 0x5595bceea020 <col:29> 'int' EnumConstant 0x5595bcee9ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5595bceea0e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5595bceea0c8 <col:30> 'int'
| |   `-DeclRefExpr 0x5595bceea0a8 <col:30> 'int' EnumConstant 0x5595bcee9ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5595bceea168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5595bceea150 <col:27> 'int'
|     `-DeclRefExpr 0x5595bceea130 <col:27> 'int' EnumConstant 0x5595bcee9fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5595bceea1b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x5595bceea288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5595bceea310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5595bceea2f8 <col:30> 'int'
| |   `-DeclRefExpr 0x5595bceea2d8 <col:30> 'int' EnumConstant 0x5595bceea288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5595bceea360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5595bceea3e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5595bceea3d0 <col:29> 'int'
|     `-DeclRefExpr 0x5595bceea3b0 <col:29> 'int' EnumConstant 0x5595bceea360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5595bceea438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x5595bceea508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5595bceea570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5595bceea5c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5595bceea610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5595bceea6d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5595bceea728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5595bceea778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5595bceea800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5595bceea7e8 <col:31> 'int'
|     `-DeclRefExpr 0x5595bceea7c8 <col:31> 'int' EnumConstant 0x5595bceea6d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5595bceea850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x5595bceea918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5595bceea968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5595bceea9b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x5595bceeaa88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5595bceeaad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5595bceeab28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x5595bceeabf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5595bceeac48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5595bceeac98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5595bceeaed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5595bceeaf40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5595bceeafa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5595bceeb0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5595bceeb118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x5595bceeb1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5595bceeb238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5595bceeb288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x5595bceeb358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5595bceeb3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5595bceeb9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5595bceeb4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5595bceeb5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5595bceeb7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5595bceeb840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5595bceeba98 <col:47>
| |-NonNullAttr 0x5595bceebaf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5595bceebb28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x5595bceebc50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5595bceebb80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5595bceebea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5595bceebd08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5595bceebd88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5595bceec078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5595bceebf68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5595bceec120 <col:60>
|-FunctionDecl 0x5595bceec270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5595bceec310 <col:54>
| `-ConstAttr 0x5595bceec368 <col:95>
|-FunctionDecl 0x5595bceecda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5595bceec3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5595bceec418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5595bceece50 <line:395:19>
| `-ConstAttr 0x5595bceecea8 <col:60>
|-FunctionDecl 0x5595bceed078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5595bceecf40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5595bceed120 <col:71>
| `-NonNullAttr 0x5595bceed178 <col:112, col:126> 1
|-FunctionDecl 0x5595bceed280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5595bceed1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5595bceed328 <line:398:22>
| `-NonNullAttr 0x5595bceed380 <col:63, col:77> 1
|-FunctionDecl 0x5595bceed5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5595bceed3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5595bceed448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5595bceed658 <line:401:22>
| `-NonNullAttr 0x5595bceed6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bceed8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5595bceed6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5595bceed778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5595bceed968 <line:404:22>
| `-NonNullAttr 0x5595bceed9c0 <col:63, col:77> 1
|-FunctionDecl 0x5595bceedc18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5595bceeda08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5595bceedab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5595bceedcc8 <line:407:22>
| `-NonNullAttr 0x5595bceedd20 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bceeef78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5595bceeedc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5595bceeee38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5595bceef028 <line:410:22>
| `-NonNullAttr 0x5595bceef080 <col:63, col:77> 1
|-FunctionDecl 0x5595bceef2b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5595bceef0c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5595bceef158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5595bceef368 <line:413:22>
| `-NonNullAttr 0x5595bceef3c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bceef5f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5595bceef408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5595bceef498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5595bceef6a8 <col:37>
| `-NonNullAttr 0x5595bceef700 <col:78, col:95> 1 2
|-FunctionDecl 0x5595bceef8e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5595bceef748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5595bceef7c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5595bceef998 <line:419:22>
| `-NonNullAttr 0x5595bceef9f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bceefb78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5595bceefa38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5595bceefab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5595bceefc28 <line:421:22>
| `-NonNullAttr 0x5595bceefc80 <col:63, col:77> 1
|-FunctionDecl 0x5595bcef0e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5595bceefcc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5595bceefd48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5595bcef0f08 <line:424:22>
| `-NonNullAttr 0x5595bcef0f60 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bcef10e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5595bcef0fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5595bcef1028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5595bcef1198 <line:427:22>
| `-NonNullAttr 0x5595bcef11f0 <col:63, col:77> 1
|-FunctionDecl 0x5595bcef1398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5595bcef1238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5595bcef12b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5595bcef1448 <line:430:22>
| `-NonNullAttr 0x5595bcef14a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bcef1628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5595bcef14e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5595bcef1568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5595bcef16d8 <line:432:22>
| `-NonNullAttr 0x5595bcef1730 <col:63, col:77> 1
|-FunctionDecl 0x5595bcef1958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5595bcef1778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5595bcef17f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5595bcef1a08 <line:435:22>
| |-NonNullAttr 0x5595bcef1a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5595bcef1a98 <col:100> "" ""
|-FunctionDecl 0x5595bcef1ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5595bcef1ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5595bcef1b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5595bcef1d58 <line:438:22>
| |-NonNullAttr 0x5595bcef1db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x5595bcef1df8 <col:97> "" ""
|-FunctionDecl 0x5595bcef1fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5595bcef1e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5595bcef1ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5595bcef2098 <line:441:22>
| `-NonNullAttr 0x5595bcef20f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bcef2270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5595bcef2138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5595bcef21b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5595bcef2320 <line:444:22>
| `-NonNullAttr 0x5595bcef2378 <col:63, col:77> 1
|-FunctionDecl 0x5595bcef2668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5595bcef23c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5595bcef2448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5595bcef24c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5595bcef2720 <line:448:22>
| `-NonNullAttr 0x5595bcef2778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5595bcef2a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5595bcef27d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5595bcef2850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5595bcef28c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5595bcef2ae0 <col:43>
| `-NonNullAttr 0x5595bcef2b38 <col:84, col:98> 1
|-FunctionDecl 0x5595bcef2e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5595bcef2b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5595bcef2c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5595bcef2c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5595bcef2ef8 <line:453:22>
| `-NonNullAttr 0x5595bcef2f50 <col:63, col:77> 3
|-FunctionDecl 0x5595bcef3228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5595bcef2f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5595bcef3018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5595bcef30a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5595bcef32e0 <line:457:22>
| `-NonNullAttr 0x5595bcef3338 <col:63, col:80> 2 3
|-FunctionDecl 0x5595bcef3528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5595bcef3388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5595bcef3408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5595bcef35d8 <line:459:22>
|-FunctionDecl 0x5595bcef39a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5595bcef36a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5595bcef3840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5595bcef3a58 <col:52, col:69> 1 2
|-FunctionDecl 0x5595bcef3c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5595bcef3ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5595bcef3b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5595bcef3e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5595bcef3cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5595bcef3d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5595bcef3f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5595bcef3ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5595bcef40a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5595bcef4148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x5595bcef41f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x5595bcef42e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5595bcef4350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5595bcef4520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe009_rmo.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x5595bcef4618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5595bcef46d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5595bcef4670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5595bcef41d0 '__pthread_unwind_buf_t'
| |   `-Record 0x5595bcef4148 ''
| `-AlignedAttr 0x5595bcef4728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5595bcef47a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5595bcef4900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5595bcef4968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5595bcef49d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5595bcef4a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5595bcef4c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5595bcef4b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5595bcef4e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5595bcef4cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5595bcef4fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5595bcef4ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5595bcef5088 <line:488:22>
|-RecordDecl 0x5595bcef50e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5595bcef53f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5595bcef5258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5595bcef52d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5595bcef54a8 <col:86>
| `-ReturnsTwiceAttr 0x5595bcef5500 <col:12> Implicit
|-FunctionDecl 0x5595bcef5828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5595bcef55d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5595bcef56e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5595bcef58d8 <line:494:22>
| `-NonNullAttr 0x5595bcef5930 <col:63, col:77> 1
|-FunctionDecl 0x5595bcef5aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5595bcef5978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5595bcef5b50 <line:496:22>
| `-NonNullAttr 0x5595bcef5ba8 <col:63, col:77> 1
|-FunctionDecl 0x5595bcef5cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5595bcef5bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5595bcef5d58 <line:498:22>
| `-NonNullAttr 0x5595bcef5db0 <col:52, col:66> 1
|-FunctionDecl 0x5595bcef5ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5595bcef5e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5595bcef5f90 <line:500:22>
| `-NonNullAttr 0x5595bcef5fe8 <col:52, col:66> 1
|-FunctionDecl 0x5595bcef6228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5595bcef6038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5595bcef60c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5595bcef62d8 <col:36>
| `-NonNullAttr 0x5595bcef6330 <col:66, col:83> 1 2
|-FunctionDecl 0x5595bcef6430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5595bcef6378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5595bcef64d8 <line:505:22>
| `-NonNullAttr 0x5595bcef6530 <col:52, col:66> 1
|-FunctionDecl 0x5595bcef67c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5595bcef65e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5595bcef6660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5595bcef6878 <line:509:22>
| `-NonNullAttr 0x5595bcef68d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bcef6b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5595bcef6918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5595bcef6998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5595bcef6a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5595bcef6c50 <line:513:22>
| `-NonNullAttr 0x5595bcef6ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x5595bcef6e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5595bcef6cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5595bcef6ee8 <line:515:22>
| `-NonNullAttr 0x5595bcef6f40 <col:63, col:77> 1
|-FunctionDecl 0x5595bcef7128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5595bcef6ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5595bcef71d0 <line:517:22>
| `-NonNullAttr 0x5595bcef7228 <col:63, col:77> 1
|-FunctionDecl 0x5595bcef7330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5595bcef7278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5595bcef73d8 <line:519:22>
| `-NonNullAttr 0x5595bcef7430 <col:63, col:77> 1
|-FunctionDecl 0x5595bcef7658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5595bcef7478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5595bcef74f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5595bcef7708 <line:523:22>
| `-NonNullAttr 0x5595bcef7760 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bcef7968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5595bcef77a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5595bcef7828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5595bcef7a18 <line:526:22>
| `-NonNullAttr 0x5595bcef7a70 <col:63, col:77> 1
|-FunctionDecl 0x5595bcef7c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5595bcef7ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5595bcef7b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5595bcef7cc8 <line:529:22>
| `-NonNullAttr 0x5595bcef7d20 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bcef8f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5595bcef7d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5595bcef8e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5595bcef8fd0 <line:531:22>
| `-NonNullAttr 0x5595bcef9028 <col:63, col:77> 1
|-FunctionDecl 0x5595bcef91d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5595bcef9078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5595bcef90f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5595bcef9288 <line:535:22>
| `-NonNullAttr 0x5595bcef92e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bcef9468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5595bcef9328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5595bcef93a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5595bcef9518 <line:538:22>
| `-NonNullAttr 0x5595bcef9570 <col:63, col:77> 1
|-FunctionDecl 0x5595bcef9718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5595bcef95b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5595bcef9638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5595bcef97c8 <line:542:22>
| `-NonNullAttr 0x5595bcef9820 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bcef99a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5595bcef9868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5595bcef98e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5595bcef9a58 <line:545:22>
| `-NonNullAttr 0x5595bcef9ab0 <col:63, col:77> 1
|-FunctionDecl 0x5595bcef9c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5595bcef9af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5595bcef9b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5595bcef9d48 <line:548:22>
| `-NonNullAttr 0x5595bcef9da0 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bcefaf58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5595bcef9de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5595bcefae98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5595bcefb008 <line:551:22>
| `-NonNullAttr 0x5595bcefb060 <col:63, col:77> 1
|-FunctionDecl 0x5595bcefb398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5595bcefb140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5595bcefb250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5595bcefb448 <col:29>
| `-NonNullAttr 0x5595bcefb4a0 <col:70, col:84> 1
|-FunctionDecl 0x5595bcefb618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5595bcefb4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5595bcefb6c0 <line:556:22>
| `-NonNullAttr 0x5595bcefb718 <col:63, col:77> 1
|-FunctionDecl 0x5595bcefb820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5595bcefb768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5595bcefb8c8 <line:558:22>
| `-NonNullAttr 0x5595bcefb920 <col:52, col:66> 1
|-FunctionDecl 0x5595bcefba20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5595bcefb968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5595bcefbac8 <line:560:19>
| `-NonNullAttr 0x5595bcefbb20 <col:49, col:63> 1
|-FunctionDecl 0x5595bcefbd58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5595bcefbb68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5595bcefbbf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5595bcefbe08 <col:39>
| `-NonNullAttr 0x5595bcefbe90 <col:69, col:86> 1 2
|-FunctionDecl 0x5595bcefbf90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5595bcefbed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5595bcefc038 <line:565:22>
| `-NonNullAttr 0x5595bcefc090 <col:52, col:66> 1
|-FunctionDecl 0x5595bcefc190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5595bcefc0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5595bcefc238 <line:567:22>
| `-NonNullAttr 0x5595bcefc290 <col:52, col:66> 1
|-FunctionDecl 0x5595bcefc448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5595bcefc2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5595bcefc368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5595bcefc4f8 <col:39>
| `-NonNullAttr 0x5595bcefc550 <col:69, col:86> 1 2
|-FunctionDecl 0x5595bcefc650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5595bcefc598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5595bcefc6f8 <line:572:22>
| `-NonNullAttr 0x5595bcefc750 <col:52, col:66> 1
|-FunctionDecl 0x5595bcefc938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5595bcefc800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5595bcefc9e0 <line:574:22>
| `-NonNullAttr 0x5595bcefca38 <col:63, col:77> 1
|-FunctionDecl 0x5595bcefcb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5595bcefca88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5595bcefcbe8 <line:576:22>
| `-NonNullAttr 0x5595bcefcc40 <col:63, col:77> 1
|-FunctionDecl 0x5595bcefcea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5595bcefcc88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5595bcefcd08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5595bcefcf50 <line:580:22>
| `-NonNullAttr 0x5595bcefcfa8 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bcefd1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5595bcefcff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5595bcefd078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5595bcefd268 <line:583:22>
| `-NonNullAttr 0x5595bcefd2c0 <col:63, col:77> 1
|-FunctionDecl 0x5595bcefd468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5595bcefd308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5595bcefd388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5595bcefd518 <line:587:22>
| `-NonNullAttr 0x5595bcefd570 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bcefd6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5595bcefd5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5595bcefd638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5595bcefd7a8 <col:36>
| `-NonNullAttr 0x5595bcefd800 <col:77, col:91> 1
|-FunctionDecl 0x5595bcefdb38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5595bcefd8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5595bcefd9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5595bcefdbe8 <line:592:22>
| `-NonNullAttr 0x5595bcefdc40 <col:63, col:77> 1
|-FunctionDecl 0x5595bcefddb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5595bcefdc88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5595bcefde60 <line:594:22>
| `-NonNullAttr 0x5595bcefdee0 <col:63, col:77> 1
|-FunctionDecl 0x5595bcefdfe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5595bcefdf28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5595bcefe088 <line:596:22>
| `-NonNullAttr 0x5595bcefe0e0 <col:52, col:66> 1
|-FunctionDecl 0x5595bcefe1e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5595bcefe128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5595bcefe288 <line:598:22>
| `-NonNullAttr 0x5595bcefe2e0 <col:52, col:66> 1
|-FunctionDecl 0x5595bcefe508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5595bcefe328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5595bcefe3a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5595bcefe5b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5595bcefe8e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5595bcefe638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5595bcefe6b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5595bcefe740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5595bcefe9a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x5595bcefebb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5595bcefea80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5595bcefec60 <line:607:22>
| `-NonNullAttr 0x5595bcefecb8 <col:63, col:77> 1
|-FunctionDecl 0x5595bcefedc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5595bcefed08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5595bcefee68 <line:609:22>
| `-NonNullAttr 0x5595bcefeef0 <col:63, col:77> 1
|-FunctionDecl 0x5595bceff118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5595bcefef38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5595bcefefb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5595bceff1c8 <line:613:22>
| `-NonNullAttr 0x5595bceff220 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bceff428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5595bceff268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5595bceff2e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5595bceff4d8 <col:37>
| `-NonNullAttr 0x5595bceff530 <col:78, col:92> 1
|-FunctionDecl 0x5595bceff748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5595bceff578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5595bceff620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5595bceff7f8 <line:619:22>
| `-NonNullAttr 0x5595bceff850 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bceffa18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5595bceff898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5595bceff910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5595bceffac8 <line:622:22>
| `-NonNullAttr 0x5595bceffb20 <col:63, col:77> 1
|-FunctionDecl 0x5595bceffdc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5595bceffc00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5595bceffc80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5595bceffe78 <line:624:22>
| `-NonNullAttr 0x5595bcefff00 <col:63, col:77> 1
|-FunctionDecl 0x5595bcf00078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5595bcefff48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5595bcf00120 <line:626:22>
| `-NonNullAttr 0x5595bcf00178 <col:63, col:77> 1
|-FunctionDecl 0x5595bcf00280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5595bcf001c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5595bcf00328 <line:628:22>
| `-NonNullAttr 0x5595bcf00380 <col:52, col:66> 1
|-FunctionDecl 0x5595bcf00480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5595bcf003c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5595bcf00528 <line:630:22>
| `-NonNullAttr 0x5595bcf00580 <col:52, col:66> 1
|-FunctionDecl 0x5595bcf00680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5595bcf005c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5595bcf00728 <line:632:22>
| `-NonNullAttr 0x5595bcf00780 <col:52, col:66> 1
|-FunctionDecl 0x5595bcf00b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5595bcf00860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5595bcf00970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5595bcf009f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5595bcf00c10 <line:636:22>
| `-NonNullAttr 0x5595bcf00c68 <col:63, col:77> 1
|-FunctionDecl 0x5595bcf00de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5595bcf00cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5595bcf00e90 <line:638:22>
| `-NonNullAttr 0x5595bcf00f10 <col:63, col:77> 1
|-FunctionDecl 0x5595bcf01010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5595bcf00f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5595bcf010b8 <line:640:22>
| `-NonNullAttr 0x5595bcf01110 <col:52, col:66> 1
|-FunctionDecl 0x5595bcf012f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5595bcf011c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5595bcf013a0 <line:642:22>
| `-NonNullAttr 0x5595bcf013f8 <col:63, col:77> 1
|-FunctionDecl 0x5595bcf01500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5595bcf01448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5595bcf015a8 <line:644:22>
| `-NonNullAttr 0x5595bcf01600 <col:63, col:77> 1
|-FunctionDecl 0x5595bcf01828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5595bcf01648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5595bcf016c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5595bcf018d8 <line:648:22>
| `-NonNullAttr 0x5595bcf01930 <col:63, col:80> 1 2
|-FunctionDecl 0x5595bcf01b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5595bcf01978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5595bcf019f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5595bcf01be8 <line:651:22>
| `-NonNullAttr 0x5595bcf01c40 <col:63, col:77> 1
|-FunctionDecl 0x5595bcf01fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5595bcf01d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5595bcf01e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5595bcf02058 <line:654:22>
| `-NonNullAttr 0x5595bcf020b0 <col:63, col:77> 1
|-FunctionDecl 0x5595bcf02208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5595bcf020f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5595bcf022b0 <col:69>
|-FunctionDecl 0x5595bcf02428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5595bcf02318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5595bcf024d0 <col:72>
|-FunctionDecl 0x5595bcf02708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5595bcf02538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5595bcf025e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5595bcf027b8 <col:44>
|-FunctionDecl 0x5595bcf029d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5595bcf02820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5595bcf02898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5595bcf02a88 <line:661:22>
| `-NonNullAttr 0x5595bcf02ae0 <col:63, col:77> 2
|-FunctionDecl 0x5595bcf03f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5595bcf02bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5595bcf02cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5595bcf02de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5595bcf04008 <col:47>
|-FunctionDecl 0x5595bcf04110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5595bcf04078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5595bcf04268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5595bcf041d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5595bcf043c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5595bcf04328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5595bcf04488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5595bcf04548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5595bcf04608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5595bcf046c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5595bcf04740 prev 0x5595bcf046c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5595bcf047a8 <col:24> 'int' 0
|-VarDecl 0x5595bcf047e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5595bcf04860 prev 0x5595bcf047e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5595bcf048c8 <col:27> 'int' 0
|-VarDecl 0x5595bcf048f8 <line:676:1, col:7> col:7 __unbuffered_p0_EAX$flush_delayed '_Bool'
|-VarDecl 0x5595bcf04978 <line:677:1, col:5> col:5 __unbuffered_p0_EAX$mem_tmp 'int'
|-VarDecl 0x5595bcf049f0 <line:678:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x5595bcf04a68 <line:679:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x5595bcf04ae0 <line:680:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x5595bcf04b58 <line:681:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x5595bcf04bd0 <line:682:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x5595bcf04c48 <line:683:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x5595bcf04cc0 <line:684:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x5595bcf04d38 <line:685:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x5595bcf04db0 <line:686:1, col:7> col:7 used __unbuffered_p0_EAX$read_delayed '_Bool'
|-VarDecl 0x5595bcf04e30 <line:687:1, col:6> col:6 used __unbuffered_p0_EAX$read_delayed_var 'int *'
|-VarDecl 0x5595bcf04f20 <line:688:1, col:5> col:5 __unbuffered_p0_EAX$w_buff0 'int'
|-VarDecl 0x5595bcf04f98 <line:689:1, col:7> col:7 __unbuffered_p0_EAX$w_buff0_used '_Bool'
|-VarDecl 0x5595bcf05018 <line:690:1, col:5> col:5 __unbuffered_p0_EAX$w_buff1 'int'
|-VarDecl 0x5595bcf05090 <line:691:1, col:7> col:7 __unbuffered_p0_EAX$w_buff1_used '_Bool'
|-VarDecl 0x5595bcf05110 <line:692:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5595bcf05190 prev 0x5595bcf05110 <line:693:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5595bcf051f8 <col:27> 'int' 0
|-VarDecl 0x5595bcf05228 <line:694:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5595bcf052a0 <line:695:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5595bcf05320 <line:696:1, col:5> col:5 used x 'int'
|-VarDecl 0x5595bcf053a0 prev 0x5595bcf05320 <line:697:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5595bcf05408 <col:9> 'int' 0
|-VarDecl 0x5595bcf05440 <line:698:1, col:5> col:5 used y 'int'
|-VarDecl 0x5595bcf054c0 prev 0x5595bcf05440 <line:699:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5595bcf05528 <col:9> 'int' 0
|-VarDecl 0x5595bcf05558 <line:700:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x5595bcf055d8 <line:701:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x5595bcf05650 <line:702:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x5595bcf056c8 <line:703:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x5595bcf05740 <line:704:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x5595bcf057b8 <line:705:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x5595bcf05830 <line:706:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x5595bcf058a8 <line:707:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x5595bcf05920 <line:708:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x5595bcf05998 <line:709:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x5595bcf05a10 <line:710:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x5595bcf05a90 <line:711:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x5595bcf05b10 <line:712:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x5595bcf05b88 <line:713:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x5595bcf05c08 <line:714:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x5595bcf05c80 <line:715:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x5595bcf05cf8 <line:716:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5595bcf05d70 <line:717:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x5595bcf05de8 <line:718:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5595bcf05f30 prev 0x5595bcf04110 <line:719:1, line:748:1> line:719:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5595bcf05e68 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5595bcf08fa8 <line:720:1, line:748:1>
|   |-CallExpr 0x5595bcf06048 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5595bcf06030 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf05fd8 <col:3> 'void ()' Function 0x5595bceab4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5595bcf06118 <line:722:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf06068 <col:3> '_Bool' lvalue Var 0x5595bcf05cf8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5595bcf060f8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5595bcf060e0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5595bcf06088 <col:19> '_Bool (void)' Function 0x5595bceaac80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5595bcf061b0 <line:723:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf06138 <col:3> '_Bool' lvalue Var 0x5595bcf05de8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5595bcf06190 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5595bcf06178 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5595bcf06158 <col:19> '_Bool (void)' Function 0x5595bceaac80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5595bcf06228 <line:724:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf061d0 <col:3> '_Bool' lvalue Var 0x5595bcf05558 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5595bcf06210 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5595bcf061f0 <col:21> '_Bool' lvalue Var 0x5595bcf05de8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5595bcf062a0 <line:725:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5595bcf06248 <col:3> 'int' lvalue Var 0x5595bcf055d8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5595bcf06288 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5595bcf06268 <col:15> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
|   |-BinaryOperator 0x5595bcf066d8 <line:726:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5595bcf062c0 <col:3> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
|   | `-ConditionalOperator 0x5595bcf066a8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5595bcf064d0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5595bcf063f0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5595bcf06318 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5595bcf06300 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5595bcf062e0 <col:8> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5595bcf063d0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5595bcf06368 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5595bcf06350 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5595bcf06330 <col:27> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x5595bcf063b8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5595bcf063a0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5595bcf06380 <col:46> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5595bcf064b0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5595bcf06448 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5595bcf06430 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5595bcf06410 <col:65> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x5595bcf06498 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5595bcf06480 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5595bcf06460 <col:84> '_Bool' lvalue Var 0x5595bcf058a8 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5595bcf06690 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5595bcf064f0 <col:101> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
|   |   `-ParenExpr 0x5595bcf06670 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5595bcf06640 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5595bcf065b0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5595bcf06568 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5595bcf06550 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5595bcf06510 <col:106> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5595bcf06598 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5595bcf06580 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5595bcf06530 <col:124> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5595bcf06610 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5595bcf065d0 <col:141> 'int' lvalue Var 0x5595bcf05b10 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5595bcf06628 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5595bcf065f0 <col:153> 'int' lvalue Var 0x5595bcf05c08 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5595bcf06be8 <line:727:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5595bcf066f8 <col:3> 'int' lvalue Var 0x5595bcf05b10 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5595bcf06bb8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5595bcf06b88 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5595bcf06b70 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5595bcf06718 <col:15> '_Bool' lvalue Var 0x5595bcf05de8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5595bcf06ba0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5595bcf06738 <col:31> 'int' lvalue Var 0x5595bcf05b10 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5595bcf06b50 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5595bcf06b20 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5595bcf06948 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5595bcf06868 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5595bcf06790 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5595bcf06778 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5595bcf06758 <col:45> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5595bcf06848 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5595bcf067e0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5595bcf067c8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5595bcf067a8 <col:64> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5595bcf06830 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5595bcf06818 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5595bcf067f8 <col:83> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5595bcf06928 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5595bcf068c0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5595bcf068a8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5595bcf06888 <col:102> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5595bcf06910 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5595bcf068f8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5595bcf068d8 <col:121> '_Bool' lvalue Var 0x5595bcf058a8 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5595bcf06b08 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5595bcf06968 <col:138> 'int' lvalue Var 0x5595bcf05b10 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5595bcf06ae8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5595bcf06ab8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5595bcf06a28 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5595bcf069e0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5595bcf069c8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5595bcf06988 <col:151> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5595bcf06a10 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5595bcf069f8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5595bcf069a8 <col:169> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5595bcf06a88 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5595bcf06a48 <col:186> 'int' lvalue Var 0x5595bcf05b10 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5595bcf06aa0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5595bcf06a68 <col:198> 'int' lvalue Var 0x5595bcf05b10 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5595bcf07118 <line:728:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5595bcf06c08 <col:3> 'int' lvalue Var 0x5595bcf05c08 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5595bcf070e8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5595bcf070b8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5595bcf070a0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5595bcf06c28 <col:15> '_Bool' lvalue Var 0x5595bcf05de8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5595bcf070d0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5595bcf06c48 <col:31> 'int' lvalue Var 0x5595bcf05c08 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5595bcf07080 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5595bcf07050 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5595bcf06e58 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5595bcf06d78 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5595bcf06ca0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5595bcf06c88 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5595bcf06c68 <col:45> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5595bcf06d58 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5595bcf06cf0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5595bcf06cd8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5595bcf06cb8 <col:64> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5595bcf06d40 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5595bcf06d28 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5595bcf06d08 <col:83> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5595bcf06e38 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5595bcf06dd0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5595bcf06db8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5595bcf06d98 <col:102> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5595bcf06e20 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5595bcf06e08 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5595bcf06de8 <col:121> '_Bool' lvalue Var 0x5595bcf058a8 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5595bcf07038 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5595bcf06e78 <col:138> 'int' lvalue Var 0x5595bcf05c08 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5595bcf07018 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5595bcf06fe8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5595bcf06f58 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5595bcf06ef0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5595bcf06ed8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5595bcf06e98 <col:151> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5595bcf06f40 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5595bcf06f08 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5595bcf06eb8 <col:169> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5595bcf06fb8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5595bcf06f78 <col:186> 'int' lvalue Var 0x5595bcf05c08 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5595bcf06fd0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5595bcf06f98 <col:198> 'int' lvalue Var 0x5595bcf05c08 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5595bcf076c0 <line:729:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf07138 <col:3> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5595bcf076a8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5595bcf07678 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5595bcf07630 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5595bcf07618 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5595bcf07158 <col:20> '_Bool' lvalue Var 0x5595bcf05de8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5595bcf07660 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5595bcf07648 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5595bcf07178 <col:36> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5595bcf075f8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5595bcf075c8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5595bcf07388 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5595bcf072a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5595bcf071d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5595bcf071b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5595bcf07198 <col:55> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5595bcf07288 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5595bcf07220 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5595bcf07208 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5595bcf071e8 <col:74> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5595bcf07270 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5595bcf07258 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5595bcf07238 <col:93> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5595bcf07368 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5595bcf07300 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5595bcf072e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5595bcf072c8 <col:112> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5595bcf07350 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5595bcf07338 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5595bcf07318 <col:131> '_Bool' lvalue Var 0x5595bcf058a8 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5595bcf075b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5595bcf07598 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5595bcf073a8 <col:148> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5595bcf07578 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5595bcf07548 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5595bcf07468 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5595bcf07420 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5595bcf07408 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5595bcf073c8 <col:166> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5595bcf07450 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5595bcf07438 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5595bcf073e8 <col:184> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5595bcf07500 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5595bcf074b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5595bcf07488 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5595bcf07530 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5595bcf07518 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5595bcf074e0 <col:212> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5595bcf07c88 <line:730:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf076e0 <col:3> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5595bcf07c70 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5595bcf07c40 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5595bcf07bf8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5595bcf07be0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5595bcf07700 <col:20> '_Bool' lvalue Var 0x5595bcf05de8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5595bcf07c28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5595bcf07c10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5595bcf07720 <col:36> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5595bcf07bc0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5595bcf07b90 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5595bcf07930 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5595bcf07850 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5595bcf07778 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5595bcf07760 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5595bcf07740 <col:55> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5595bcf07830 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5595bcf077c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5595bcf077b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5595bcf07790 <col:74> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5595bcf07818 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5595bcf07800 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5595bcf077e0 <col:93> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5595bcf07910 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5595bcf078a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5595bcf07890 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5595bcf07870 <col:112> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5595bcf078f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5595bcf078e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5595bcf078c0 <col:131> '_Bool' lvalue Var 0x5595bcf058a8 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5595bcf07b78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5595bcf07b60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5595bcf07950 <col:148> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5595bcf07b40 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5595bcf07b10 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5595bcf07a10 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5595bcf079c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5595bcf079b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5595bcf07970 <col:166> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5595bcf079f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5595bcf079e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5595bcf07990 <col:184> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5595bcf07ae0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5595bcf07a60 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5595bcf07a30 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5595bcf07af8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5595bcf07ab8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5595bcf07a88 <col:219> 'int' 0
|   |-BinaryOperator 0x5595bcf08248 <line:731:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf07ca8 <col:3> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5595bcf08230 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5595bcf08200 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5595bcf081b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5595bcf081a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5595bcf07cc8 <col:20> '_Bool' lvalue Var 0x5595bcf05de8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5595bcf081e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5595bcf081d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5595bcf07ce8 <col:36> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x5595bcf08180 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5595bcf08150 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5595bcf07ef8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5595bcf07e18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5595bcf07d40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5595bcf07d28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5595bcf07d08 <col:55> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5595bcf07df8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5595bcf07d90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5595bcf07d78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5595bcf07d58 <col:74> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5595bcf07de0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5595bcf07dc8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5595bcf07da8 <col:93> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5595bcf07ed8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5595bcf07e70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5595bcf07e58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5595bcf07e38 <col:112> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5595bcf07ec0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5595bcf07ea8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5595bcf07e88 <col:131> '_Bool' lvalue Var 0x5595bcf058a8 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5595bcf08138 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5595bcf08120 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5595bcf07f18 <col:148> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x5595bcf08100 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5595bcf080d0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5595bcf07ff0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5595bcf07fa8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5595bcf07f90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5595bcf07f50 <col:166> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5595bcf07fd8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5595bcf07fc0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5595bcf07f70 <col:184> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5595bcf08088 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5595bcf08040 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5595bcf08010 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5595bcf080b8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5595bcf080a0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5595bcf08068 <col:212> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5595bcf08810 <line:732:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf08268 <col:3> '_Bool' lvalue Var 0x5595bcf058a8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5595bcf087f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5595bcf087c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5595bcf08780 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5595bcf08768 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5595bcf08288 <col:20> '_Bool' lvalue Var 0x5595bcf05de8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5595bcf087b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5595bcf08798 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5595bcf082a8 <col:36> '_Bool' lvalue Var 0x5595bcf058a8 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x5595bcf08748 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5595bcf08718 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5595bcf084b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5595bcf083d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5595bcf08300 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5595bcf082e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5595bcf082c8 <col:55> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5595bcf083b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5595bcf08350 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5595bcf08338 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5595bcf08318 <col:74> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5595bcf083a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5595bcf08388 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5595bcf08368 <col:93> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5595bcf08498 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5595bcf08430 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5595bcf08418 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5595bcf083f8 <col:112> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5595bcf08480 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5595bcf08468 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5595bcf08448 <col:131> '_Bool' lvalue Var 0x5595bcf058a8 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5595bcf08700 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5595bcf086e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5595bcf084d8 <col:148> '_Bool' lvalue Var 0x5595bcf058a8 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x5595bcf086c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5595bcf08698 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5595bcf08598 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5595bcf08550 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5595bcf08538 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5595bcf084f8 <col:166> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5595bcf08580 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5595bcf08568 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5595bcf08518 <col:184> '_Bool' lvalue Var 0x5595bcf056c8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5595bcf08668 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5595bcf085e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5595bcf085b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5595bcf08680 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5595bcf08640 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5595bcf08610 <col:219> 'int' 0
|   |-BinaryOperator 0x5595bcf088a8 <line:733:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf08830 <col:3> '_Bool' lvalue Var 0x5595bcf04db0 '__unbuffered_p0_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5595bcf08880 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5595bcf08850 <col:45> 'int' 1
|   |-BinaryOperator 0x5595bcf08920 <line:734:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x5595bcf088c8 <col:3> 'int *' lvalue Var 0x5595bcf04e30 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x5595bcf08908 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x5595bcf088e8 <col:43> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
|   |-BinaryOperator 0x5595bcf08998 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5595bcf08940 <col:3> 'int' lvalue Var 0x5595bcf04860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5595bcf08980 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5595bcf08960 <col:25> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
|   |-BinaryOperator 0x5595bcf08ac8 <line:736:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5595bcf089b8 <col:3> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
|   | `-ConditionalOperator 0x5595bcf08a98 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5595bcf08a50 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5595bcf08a38 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5595bcf089d8 <col:7> '_Bool' lvalue Var 0x5595bcf05558 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5595bcf08a68 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5595bcf089f8 <col:25> 'int' lvalue Var 0x5595bcf055d8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5595bcf08a80 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5595bcf08a18 <col:37> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
|   |-BinaryOperator 0x5595bcf08b60 <line:737:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf08ae8 <col:3> '_Bool' lvalue Var 0x5595bcf05558 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5595bcf08b38 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5595bcf08b08 <col:28> 'int' 0
|   |-CallExpr 0x5595bcf08bb8 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5595bcf08ba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf08b80 <col:3> 'void ()' Function 0x5595bceab570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5595bcf08c10 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5595bcf08bf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf08bd8 <col:3> 'void ()' Function 0x5595bceab4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5595bcf08c70 <line:740:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5595bcf08c30 <col:3> 'int' lvalue Var 0x5595bcf053a0 'x' 'int'
|   | `-IntegerLiteral 0x5595bcf08c50 <col:7> 'int' 1
|   |-CallExpr 0x5595bcf08cc8 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5595bcf08cb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf08c90 <col:3> 'void ()' Function 0x5595bceab570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5595bcf08d20 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5595bcf08d08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf08ce8 <col:3> 'void ()' Function 0x5595bceab4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5595bcf08d78 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5595bcf08d60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf08d40 <col:3> 'void ()' Function 0x5595bceab570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5595bcf08dd0 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5595bcf08db8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf08d98 <col:3> 'void ()' Function 0x5595bceab4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5595bcf08e88 <line:745:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5595bcf08df0 <col:3> 'int' lvalue Var 0x5595bcf04740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5595bcf08e68 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5595bcf08e50 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5595bcf08e10 <col:22> 'int' lvalue Var 0x5595bcf04740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5595bcf08e30 <col:41> 'int' 1
|   |-CallExpr 0x5595bcf08ee0 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5595bcf08ec8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf08ea8 <col:3> 'void ()' Function 0x5595bceab570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5595bcf08f98 <line:747:3, col:36>
|     `-CallExpr 0x5595bcf08f78 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5595bcf08f60 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5595bcf08f00 <col:10> 'void *(void)' Function 0x5595bceaafc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5595bcf09140 prev 0x5595bcf04268 <line:749:1, line:768:1> line:749:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5595bcf090a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5595bcf0a380 <line:750:1, line:768:1>
|   |-CallExpr 0x5595bcf09220 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5595bcf09208 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf091e8 <col:3> 'void ()' Function 0x5595bceab4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5595bcf09298 <line:752:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5595bcf09240 <col:3> 'int' lvalue Var 0x5595bcf05190 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5595bcf09280 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5595bcf09260 <col:25> 'int' lvalue Var 0x5595bcf053a0 'x' 'int'
|   |-CallExpr 0x5595bcf092f0 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5595bcf092d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf092b8 <col:3> 'void ()' Function 0x5595bceab570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5595bcf09348 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5595bcf09330 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf09310 <col:3> 'void ()' Function 0x5595bceab4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5595bcf093a8 <line:755:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5595bcf09368 <col:3> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
|   | `-IntegerLiteral 0x5595bcf09388 <col:7> 'int' 1
|   |-CallExpr 0x5595bcf09400 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5595bcf093e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf093c8 <col:3> 'void ()' Function 0x5595bceab570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5595bcf09458 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5595bcf09440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf09420 <col:3> 'void ()' Function 0x5595bceab4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5595bcf09740 <line:758:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5595bcf09478 <col:3> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
|   | `-ConditionalOperator 0x5595bcf09710 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5595bcf09538 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5595bcf094f0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5595bcf094d8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5595bcf09498 <col:7> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5595bcf09520 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5595bcf09508 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5595bcf094b8 <col:25> '_Bool' lvalue Var 0x5595bcf05740 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5595bcf096f8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5595bcf09558 <col:42> 'int' lvalue Var 0x5595bcf05b10 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5595bcf096d8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5595bcf096a8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5595bcf09618 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5595bcf095d0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5595bcf095b8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5595bcf09578 <col:55> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5595bcf09600 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5595bcf095e8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5595bcf09598 <col:73> '_Bool' lvalue Var 0x5595bcf05920 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5595bcf09678 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5595bcf09638 <col:90> 'int' lvalue Var 0x5595bcf05c08 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5595bcf09690 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5595bcf09658 <col:102> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
|   |-BinaryOperator 0x5595bcf09948 <line:759:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf09760 <col:3> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5595bcf09930 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5595bcf09900 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5595bcf09820 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5595bcf097d8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5595bcf097c0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5595bcf09780 <col:20> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5595bcf09808 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5595bcf097f0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5595bcf097a0 <col:38> '_Bool' lvalue Var 0x5595bcf05740 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5595bcf098b8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5595bcf09870 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5595bcf09840 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5595bcf098e8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5595bcf098d0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5595bcf09898 <col:66> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5595bcf09c30 <line:760:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf09968 <col:3> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5595bcf09c18 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5595bcf09be8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5595bcf09b08 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5595bcf09a28 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5595bcf099e0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5595bcf099c8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5595bcf09988 <col:20> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5595bcf09a10 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5595bcf099f8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5595bcf099a8 <col:38> '_Bool' lvalue Var 0x5595bcf05740 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5595bcf09ae8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5595bcf09aa0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5595bcf09a88 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5595bcf09a48 <col:56> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5595bcf09ad0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5595bcf09ab8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5595bcf09a68 <col:74> '_Bool' lvalue Var 0x5595bcf05920 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5595bcf09ba0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5595bcf09b58 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5595bcf09b28 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5595bcf09bd0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5595bcf09bb8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5595bcf09b80 <col:102> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5595bcf09e38 <line:761:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf09c50 <col:3> '_Bool' lvalue Var 0x5595bcf05740 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5595bcf09e20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5595bcf09df0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5595bcf09d10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5595bcf09cc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5595bcf09cb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5595bcf09c70 <col:20> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5595bcf09cf8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5595bcf09ce0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5595bcf09c90 <col:38> '_Bool' lvalue Var 0x5595bcf05740 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5595bcf09da8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5595bcf09d60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5595bcf09d30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5595bcf09dd8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5595bcf09dc0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5595bcf09d88 <col:66> '_Bool' lvalue Var 0x5595bcf05740 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5595bcf0a138 <line:762:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf09e58 <col:3> '_Bool' lvalue Var 0x5595bcf05920 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5595bcf0a120 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5595bcf0a0f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5595bcf0a010 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5595bcf09f18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5595bcf09ed0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5595bcf09eb8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5595bcf09e78 <col:20> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5595bcf09f00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5595bcf09ee8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5595bcf09e98 <col:38> '_Bool' lvalue Var 0x5595bcf05740 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5595bcf09ff0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5595bcf09fa8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5595bcf09f90 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5595bcf09f38 <col:56> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5595bcf09fd8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5595bcf09fc0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5595bcf09f70 <col:74> '_Bool' lvalue Var 0x5595bcf05920 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5595bcf0a0a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5595bcf0a060 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5595bcf0a030 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5595bcf0a0d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5595bcf0a0c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5595bcf0a088 <col:102> '_Bool' lvalue Var 0x5595bcf05920 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5595bcf0a190 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5595bcf0a178 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf0a158 <col:3> 'void ()' Function 0x5595bceab570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5595bcf0a1e8 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5595bcf0a1d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf0a1b0 <col:3> 'void ()' Function 0x5595bceab4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5595bcf0a2a0 <line:765:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5595bcf0a208 <col:3> 'int' lvalue Var 0x5595bcf04740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5595bcf0a280 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5595bcf0a268 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5595bcf0a228 <col:22> 'int' lvalue Var 0x5595bcf04740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5595bcf0a248 <col:41> 'int' 1
|   |-CallExpr 0x5595bcf0a2f8 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5595bcf0a2e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf0a2c0 <col:3> 'void ()' Function 0x5595bceab570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5595bcf0a370 <line:767:3, col:36>
|     `-CallExpr 0x5595bcf0a350 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5595bcf0a338 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5595bcf0a318 <col:10> 'void *(void)' Function 0x5595bceaafc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5595bcf0a4c8 prev 0x5595bcf043c0 <line:769:1, line:785:1> line:769:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5595bcf0a430 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5595bcf0b5d8 <line:770:1, line:785:1>
|   |-CallExpr 0x5595bcf0a5a8 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5595bcf0a590 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf0a570 <col:3> 'void ()' Function 0x5595bceab4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5595bcf0a608 <line:772:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5595bcf0a5c8 <col:3> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
|   | `-IntegerLiteral 0x5595bcf0a5e8 <col:7> 'int' 2
|   |-CallExpr 0x5595bcf0a660 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5595bcf0a648 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf0a628 <col:3> 'void ()' Function 0x5595bceab570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5595bcf0a6b8 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5595bcf0a6a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf0a680 <col:3> 'void ()' Function 0x5595bceab4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5595bcf0a9a0 <line:775:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5595bcf0a6d8 <col:3> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
|   | `-ConditionalOperator 0x5595bcf0a970 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5595bcf0a798 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5595bcf0a750 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5595bcf0a738 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5595bcf0a6f8 <col:7> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5595bcf0a780 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5595bcf0a768 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5595bcf0a718 <col:25> '_Bool' lvalue Var 0x5595bcf057b8 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5595bcf0a958 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5595bcf0a7b8 <col:42> 'int' lvalue Var 0x5595bcf05b10 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5595bcf0a938 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5595bcf0a908 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5595bcf0a878 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5595bcf0a830 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5595bcf0a818 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5595bcf0a7d8 <col:55> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5595bcf0a860 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5595bcf0a848 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5595bcf0a7f8 <col:73> '_Bool' lvalue Var 0x5595bcf05998 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5595bcf0a8d8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5595bcf0a898 <col:90> 'int' lvalue Var 0x5595bcf05c08 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5595bcf0a8f0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5595bcf0a8b8 <col:102> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
|   |-BinaryOperator 0x5595bcf0aba8 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf0a9c0 <col:3> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5595bcf0ab90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5595bcf0ab60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5595bcf0aa80 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5595bcf0aa38 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5595bcf0aa20 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5595bcf0a9e0 <col:20> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5595bcf0aa68 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5595bcf0aa50 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5595bcf0aa00 <col:38> '_Bool' lvalue Var 0x5595bcf057b8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5595bcf0ab18 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5595bcf0aad0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5595bcf0aaa0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5595bcf0ab48 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5595bcf0ab30 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5595bcf0aaf8 <col:66> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5595bcf0ae90 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf0abc8 <col:3> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5595bcf0ae78 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5595bcf0ae48 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5595bcf0ad68 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5595bcf0ac88 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5595bcf0ac40 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5595bcf0ac28 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5595bcf0abe8 <col:20> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5595bcf0ac70 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5595bcf0ac58 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5595bcf0ac08 <col:38> '_Bool' lvalue Var 0x5595bcf057b8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5595bcf0ad48 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5595bcf0ad00 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5595bcf0ace8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5595bcf0aca8 <col:56> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5595bcf0ad30 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5595bcf0ad18 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5595bcf0acc8 <col:74> '_Bool' lvalue Var 0x5595bcf05998 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5595bcf0ae00 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5595bcf0adb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5595bcf0ad88 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5595bcf0ae30 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5595bcf0ae18 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5595bcf0ade0 <col:102> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5595bcf0b0a8 <line:778:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf0aeb0 <col:3> '_Bool' lvalue Var 0x5595bcf057b8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5595bcf0b090 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5595bcf0b060 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5595bcf0af80 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5595bcf0af28 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5595bcf0af10 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5595bcf0aed0 <col:20> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5595bcf0af58 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5595bcf0af40 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5595bcf0aef0 <col:38> '_Bool' lvalue Var 0x5595bcf057b8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5595bcf0b018 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5595bcf0afd0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5595bcf0afa0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5595bcf0b048 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5595bcf0b030 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5595bcf0aff8 <col:66> '_Bool' lvalue Var 0x5595bcf057b8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5595bcf0b390 <line:779:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5595bcf0b0c8 <col:3> '_Bool' lvalue Var 0x5595bcf05998 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5595bcf0b378 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5595bcf0b348 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5595bcf0b268 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5595bcf0b188 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5595bcf0b140 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5595bcf0b128 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5595bcf0b0e8 <col:20> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5595bcf0b170 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5595bcf0b158 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5595bcf0b108 <col:38> '_Bool' lvalue Var 0x5595bcf057b8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5595bcf0b248 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5595bcf0b200 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5595bcf0b1e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5595bcf0b1a8 <col:56> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5595bcf0b230 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5595bcf0b218 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5595bcf0b1c8 <col:74> '_Bool' lvalue Var 0x5595bcf05998 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5595bcf0b300 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5595bcf0b2b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5595bcf0b288 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5595bcf0b330 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5595bcf0b318 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5595bcf0b2e0 <col:102> '_Bool' lvalue Var 0x5595bcf05998 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5595bcf0b3e8 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5595bcf0b3d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf0b3b0 <col:3> 'void ()' Function 0x5595bceab570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5595bcf0b440 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5595bcf0b428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf0b408 <col:3> 'void ()' Function 0x5595bceab4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5595bcf0b4f8 <line:782:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5595bcf0b460 <col:3> 'int' lvalue Var 0x5595bcf04740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5595bcf0b4d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5595bcf0b4c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5595bcf0b480 <col:22> 'int' lvalue Var 0x5595bcf04740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5595bcf0b4a0 <col:41> 'int' 1
|   |-CallExpr 0x5595bcf0b550 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5595bcf0b538 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5595bcf0b518 <col:3> 'void ()' Function 0x5595bceab570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5595bcf0b5c8 <line:784:3, col:36>
|     `-CallExpr 0x5595bcf0b5a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5595bcf0b590 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5595bcf0b570 <col:10> 'void *(void)' Function 0x5595bceaafc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5595bcf0b678 prev 0x5595bcf04488 <line:786:1, line:788:1> line:786:6 fence 'void ()'
| `-CompoundStmt 0x5595bcf0b718 <line:787:1, line:788:1>
|-FunctionDecl 0x5595bcf0b748 prev 0x5595bcf04548 <line:789:1, line:791:1> line:789:6 isync 'void ()'
| `-CompoundStmt 0x5595bcf0b7e8 <line:790:1, line:791:1>
|-FunctionDecl 0x5595bcf0b818 prev 0x5595bcf04608 <line:792:1, line:794:1> line:792:6 lwfence 'void ()'
| `-CompoundStmt 0x5595bcf0b8b8 <line:793:1, line:794:1>
`-FunctionDecl 0x5595bcf0b928 <line:795:1, line:834:1> line:795:5 main 'int ()'
  `-CompoundStmt 0x5595bcf10208 <line:796:1, line:834:1>
    |-DeclStmt 0x5595bcf0ba40 <line:797:3, col:18>
    | `-VarDecl 0x5595bcf0b9d8 <col:3, col:13> col:13 used t1999 'pthread_t':'unsigned long'
    |-CallExpr 0x5595bcf0bc48 <line:798:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5595bcf0bc30 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5595bcf0ba58 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5595bceeb9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5595bcf0ba98 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5595bcf0ba78 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5595bcf0b9d8 't1999' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5595bcf0bc88 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5595bcf0bb10 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5595bcf0bae8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5595bcf0bab0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5595bcf0bca0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5595bcf0bb30 <col:39> 'void *(void *)' Function 0x5595bcf05f30 'P0' 'void *(void *)'
    | `-ParenExpr 0x5595bcf0bbb0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5595bcf0bb88 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5595bcf0bb50 <col:52> 'int' 0
    |-DeclStmt 0x5595bcf0bd30 <line:799:3, col:18>
    | `-VarDecl 0x5595bcf0bcc8 <col:3, col:13> col:13 used t2000 'pthread_t':'unsigned long'
    |-CallExpr 0x5595bcf0bed8 <line:800:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5595bcf0bec0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5595bcf0bd48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5595bceeb9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5595bcf0bd88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5595bcf0bd68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5595bcf0bcc8 't2000' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5595bcf0bf18 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5595bcf0be00 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5595bcf0bdd8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5595bcf0bda0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5595bcf0bf30 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5595bcf0be20 <col:39> 'void *(void *)' Function 0x5595bcf09140 'P1' 'void *(void *)'
    | `-ParenExpr 0x5595bcf0bea0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5595bcf0be78 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5595bcf0be40 <col:52> 'int' 0
    |-DeclStmt 0x5595bcf0bff8 <line:801:3, col:18>
    | `-VarDecl 0x5595bcf0bf90 <col:3, col:13> col:13 used t2001 'pthread_t':'unsigned long'
    |-CallExpr 0x5595bcf0c1a0 <line:802:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5595bcf0c188 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5595bcf0c010 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5595bceeb9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5595bcf0c050 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5595bcf0c030 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5595bcf0bf90 't2001' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5595bcf0c1e0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5595bcf0c0c8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5595bcf0c0a0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5595bcf0c068 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5595bcf0c1f8 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5595bcf0c0e8 <col:39> 'void *(void *)' Function 0x5595bcf0a4c8 'P2' 'void *(void *)'
    | `-ParenExpr 0x5595bcf0c168 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5595bcf0c140 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5595bcf0c108 <col:52> 'int' 0
    |-CallExpr 0x5595bcf0c248 <line:803:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5595bcf0c230 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5595bcf0c210 <col:3> 'void ()' Function 0x5595bceab4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5595bcf0c318 <line:804:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5595bcf0c268 <col:3> '_Bool' lvalue Var 0x5595bcf05228 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5595bcf0c300 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5595bcf0c2e0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5595bcf0c2c8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5595bcf0c288 <col:21> 'int' lvalue Var 0x5595bcf04740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5595bcf0c2a8 <col:41> 'int' 3
    |-CallExpr 0x5595bcf0c370 <line:805:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5595bcf0c358 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5595bcf0c338 <col:3> 'void ()' Function 0x5595bceab570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5595bcf0c418 <line:806:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5595bcf0c400 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5595bcf0c390 <col:3> 'void (int)' Function 0x5595bceaae50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5595bcf0c458 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5595bcf0c440 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5595bcf0c3b0 <col:21> '_Bool' lvalue Var 0x5595bcf05228 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5595bcf0c4a8 <line:807:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5595bcf0c490 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5595bcf0c470 <col:3> 'void ()' Function 0x5595bceab4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5595bcf0c790 <line:808:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5595bcf0c4c8 <col:3> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
    | `-ConditionalOperator 0x5595bcf0c760 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5595bcf0c588 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5595bcf0c540 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5595bcf0c528 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5595bcf0c4e8 <col:7> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5595bcf0c570 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5595bcf0c558 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5595bcf0c508 <col:25> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5595bcf0c748 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5595bcf0c5a8 <col:42> 'int' lvalue Var 0x5595bcf05b10 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5595bcf0c728 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5595bcf0c6f8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5595bcf0c668 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5595bcf0c620 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5595bcf0c608 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5595bcf0c5c8 <col:55> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5595bcf0c650 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5595bcf0c638 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5595bcf0c5e8 <col:73> '_Bool' lvalue Var 0x5595bcf05830 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5595bcf0c6c8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5595bcf0c688 <col:90> 'int' lvalue Var 0x5595bcf05c08 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5595bcf0c6e0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5595bcf0c6a8 <col:102> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
    |-BinaryOperator 0x5595bcf0c998 <line:809:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5595bcf0c7b0 <col:3> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5595bcf0c980 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5595bcf0c950 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5595bcf0c870 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5595bcf0c828 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5595bcf0c810 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5595bcf0c7d0 <col:20> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5595bcf0c858 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5595bcf0c840 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5595bcf0c7f0 <col:38> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5595bcf0c908 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5595bcf0c8c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5595bcf0c890 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5595bcf0c938 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5595bcf0c920 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5595bcf0c8e8 <col:66> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5595bcf0cc80 <line:810:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5595bcf0c9b8 <col:3> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5595bcf0cc68 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5595bcf0cc38 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5595bcf0cb58 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5595bcf0ca78 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5595bcf0ca30 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5595bcf0ca18 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5595bcf0c9d8 <col:20> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5595bcf0ca60 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5595bcf0ca48 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5595bcf0c9f8 <col:38> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5595bcf0cb38 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5595bcf0caf0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5595bcf0cad8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5595bcf0ca98 <col:56> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5595bcf0cb20 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5595bcf0cb08 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5595bcf0cab8 <col:74> '_Bool' lvalue Var 0x5595bcf05830 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5595bcf0cbf0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5595bcf0cba8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5595bcf0cb78 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5595bcf0cc20 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5595bcf0cc08 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5595bcf0cbd0 <col:102> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5595bcf0ce88 <line:811:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5595bcf0cca0 <col:3> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5595bcf0ce70 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5595bcf0ce40 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5595bcf0cd60 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5595bcf0cd18 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5595bcf0cd00 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5595bcf0ccc0 <col:20> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5595bcf0cd48 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5595bcf0cd30 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5595bcf0cce0 <col:38> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5595bcf0cdf8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5595bcf0cdb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5595bcf0cd80 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5595bcf0ce28 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5595bcf0ce10 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5595bcf0cdd8 <col:66> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5595bcf0d188 <line:812:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5595bcf0cea8 <col:3> '_Bool' lvalue Var 0x5595bcf05830 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5595bcf0d170 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5595bcf0d140 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5595bcf0d060 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5595bcf0cf68 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5595bcf0cf20 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5595bcf0cf08 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5595bcf0cec8 <col:20> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5595bcf0cf50 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5595bcf0cf38 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5595bcf0cee8 <col:38> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5595bcf0d040 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5595bcf0cff8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5595bcf0cfe0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5595bcf0cfa0 <col:56> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5595bcf0d028 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5595bcf0d010 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5595bcf0cfc0 <col:74> '_Bool' lvalue Var 0x5595bcf05830 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5595bcf0d0f8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5595bcf0d0b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5595bcf0d080 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5595bcf0d128 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5595bcf0d110 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5595bcf0d0d8 <col:102> '_Bool' lvalue Var 0x5595bcf05830 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5595bcf0d1e0 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5595bcf0d1c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5595bcf0d1a8 <col:3> 'void ()' Function 0x5595bceab570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5595bcf0d238 <line:814:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5595bcf0d220 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5595bcf0d200 <col:3> 'void ()' Function 0x5595bceab4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5595bcf0d2d0 <line:815:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x5595bcf0d258 <col:3> '_Bool' lvalue Var 0x5595bcf05cf8 'weak$$choice0' '_Bool'
    | `-CallExpr 0x5595bcf0d2b0 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x5595bcf0d298 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x5595bcf0d278 <col:19> '_Bool (void)' Function 0x5595bceaac80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x5595bcf0d368 <line:816:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x5595bcf0d2f0 <col:3> '_Bool' lvalue Var 0x5595bcf05de8 'weak$$choice2' '_Bool'
    | `-CallExpr 0x5595bcf0d348 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x5595bcf0d330 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x5595bcf0d310 <col:19> '_Bool (void)' Function 0x5595bceaac80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x5595bcf0d3e0 <line:817:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x5595bcf0d388 <col:3> '_Bool' lvalue Var 0x5595bcf05558 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x5595bcf0d3c8 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x5595bcf0d3a8 <col:21> '_Bool' lvalue Var 0x5595bcf05de8 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x5595bcf0d458 <line:818:3, col:15> 'int' '='
    | |-DeclRefExpr 0x5595bcf0d400 <col:3> 'int' lvalue Var 0x5595bcf055d8 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x5595bcf0d440 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5595bcf0d420 <col:15> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
    |-BinaryOperator 0x5595bcf0d890 <line:819:3, col:162> 'int' '='
    | |-DeclRefExpr 0x5595bcf0d478 <col:3> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
    | `-ConditionalOperator 0x5595bcf0d860 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x5595bcf0d688 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x5595bcf0d5a8 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x5595bcf0d4d0 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x5595bcf0d4b8 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x5595bcf0d498 <col:8> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x5595bcf0d588 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x5595bcf0d520 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x5595bcf0d508 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x5595bcf0d4e8 <col:27> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x5595bcf0d570 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x5595bcf0d558 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x5595bcf0d538 <col:46> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x5595bcf0d668 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x5595bcf0d600 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x5595bcf0d5e8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5595bcf0d5c8 <col:65> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x5595bcf0d650 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x5595bcf0d638 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5595bcf0d618 <col:84> '_Bool' lvalue Var 0x5595bcf05830 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5595bcf0d848 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5595bcf0d6a8 <col:101> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
    |   `-ParenExpr 0x5595bcf0d828 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x5595bcf0d7f8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x5595bcf0d768 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5595bcf0d720 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5595bcf0d708 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5595bcf0d6c8 <col:106> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5595bcf0d750 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5595bcf0d738 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5595bcf0d6e8 <col:124> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5595bcf0d7c8 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5595bcf0d788 <col:141> 'int' lvalue Var 0x5595bcf05b10 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x5595bcf0d7e0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5595bcf0d7a8 <col:153> 'int' lvalue Var 0x5595bcf05c08 'y$w_buff1' 'int'
    |-BinaryOperator 0x5595bcf0dda0 <line:820:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5595bcf0d8b0 <col:3> 'int' lvalue Var 0x5595bcf05b10 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x5595bcf0dd70 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5595bcf0dd40 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5595bcf0dd28 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5595bcf0d8d0 <col:15> '_Bool' lvalue Var 0x5595bcf05de8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5595bcf0dd58 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5595bcf0d8f0 <col:31> 'int' lvalue Var 0x5595bcf05b10 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5595bcf0dd08 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5595bcf0dcd8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5595bcf0db00 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5595bcf0da20 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5595bcf0d948 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5595bcf0d930 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5595bcf0d910 <col:45> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5595bcf0da00 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5595bcf0d998 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5595bcf0d980 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5595bcf0d960 <col:64> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5595bcf0d9e8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5595bcf0d9d0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5595bcf0d9b0 <col:83> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5595bcf0dae0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5595bcf0da78 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5595bcf0da60 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5595bcf0da40 <col:102> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5595bcf0dac8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5595bcf0dab0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5595bcf0da90 <col:121> '_Bool' lvalue Var 0x5595bcf05830 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5595bcf0dcc0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5595bcf0db20 <col:138> 'int' lvalue Var 0x5595bcf05b10 'y$w_buff0' 'int'
    |       `-ParenExpr 0x5595bcf0dca0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5595bcf0dc70 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5595bcf0dbe0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5595bcf0db98 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5595bcf0db80 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5595bcf0db40 <col:151> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5595bcf0dbc8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5595bcf0dbb0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5595bcf0db60 <col:169> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5595bcf0dc40 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5595bcf0dc00 <col:186> 'int' lvalue Var 0x5595bcf05b10 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x5595bcf0dc58 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5595bcf0dc20 <col:198> 'int' lvalue Var 0x5595bcf05b10 'y$w_buff0' 'int'
    |-BinaryOperator 0x5595bcf0e2c0 <line:821:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5595bcf0ddc0 <col:3> 'int' lvalue Var 0x5595bcf05c08 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x5595bcf0e290 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5595bcf0e260 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5595bcf0e248 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5595bcf0dde0 <col:15> '_Bool' lvalue Var 0x5595bcf05de8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5595bcf0e278 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5595bcf0de00 <col:31> 'int' lvalue Var 0x5595bcf05c08 'y$w_buff1' 'int'
    |   `-ParenExpr 0x5595bcf0e228 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5595bcf0e1f8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5595bcf0e020 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5595bcf0df30 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5595bcf0de58 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5595bcf0de40 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5595bcf0de20 <col:45> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5595bcf0df10 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5595bcf0dea8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5595bcf0de90 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5595bcf0de70 <col:64> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5595bcf0def8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5595bcf0dee0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5595bcf0dec0 <col:83> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5595bcf0e000 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5595bcf0df88 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5595bcf0df70 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5595bcf0df50 <col:102> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5595bcf0dfe8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5595bcf0dfd0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5595bcf0dfb0 <col:121> '_Bool' lvalue Var 0x5595bcf05830 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5595bcf0e1e0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5595bcf0e040 <col:138> 'int' lvalue Var 0x5595bcf05c08 'y$w_buff1' 'int'
    |       `-ParenExpr 0x5595bcf0e1c0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5595bcf0e190 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5595bcf0e100 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5595bcf0e0b8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5595bcf0e0a0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5595bcf0e060 <col:151> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5595bcf0e0e8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5595bcf0e0d0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5595bcf0e080 <col:169> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5595bcf0e160 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5595bcf0e120 <col:186> 'int' lvalue Var 0x5595bcf05c08 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x5595bcf0e178 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5595bcf0e140 <col:198> 'int' lvalue Var 0x5595bcf05c08 'y$w_buff1' 'int'
    |-BinaryOperator 0x5595bcf0e868 <line:822:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5595bcf0e2e0 <col:3> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5595bcf0e850 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5595bcf0e820 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5595bcf0e7d8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5595bcf0e7c0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5595bcf0e300 <col:20> '_Bool' lvalue Var 0x5595bcf05de8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5595bcf0e808 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5595bcf0e7f0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5595bcf0e320 <col:36> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x5595bcf0e7a0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5595bcf0e770 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5595bcf0e530 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5595bcf0e450 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5595bcf0e378 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5595bcf0e360 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5595bcf0e340 <col:55> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5595bcf0e430 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5595bcf0e3c8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5595bcf0e3b0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5595bcf0e390 <col:74> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5595bcf0e418 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5595bcf0e400 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5595bcf0e3e0 <col:93> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5595bcf0e510 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5595bcf0e4a8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5595bcf0e490 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5595bcf0e470 <col:112> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5595bcf0e4f8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5595bcf0e4e0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5595bcf0e4c0 <col:131> '_Bool' lvalue Var 0x5595bcf05830 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5595bcf0e758 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5595bcf0e740 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5595bcf0e550 <col:148> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x5595bcf0e720 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5595bcf0e6f0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5595bcf0e610 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5595bcf0e5c8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5595bcf0e5b0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5595bcf0e570 <col:166> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5595bcf0e5f8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5595bcf0e5e0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5595bcf0e590 <col:184> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5595bcf0e6a8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5595bcf0e660 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5595bcf0e630 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5595bcf0e6d8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5595bcf0e6c0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5595bcf0e688 <col:212> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5595bcf0ee30 <line:823:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5595bcf0e888 <col:3> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5595bcf0ee18 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5595bcf0ede8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5595bcf0eda0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5595bcf0ed88 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5595bcf0e8a8 <col:20> '_Bool' lvalue Var 0x5595bcf05de8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5595bcf0edd0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5595bcf0edb8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5595bcf0e8c8 <col:36> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x5595bcf0ed68 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5595bcf0ed38 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5595bcf0ead8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5595bcf0e9f8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5595bcf0e920 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5595bcf0e908 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5595bcf0e8e8 <col:55> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5595bcf0e9d8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5595bcf0e970 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5595bcf0e958 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5595bcf0e938 <col:74> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5595bcf0e9c0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5595bcf0e9a8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5595bcf0e988 <col:93> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5595bcf0eab8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5595bcf0ea50 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5595bcf0ea38 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5595bcf0ea18 <col:112> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5595bcf0eaa0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5595bcf0ea88 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5595bcf0ea68 <col:131> '_Bool' lvalue Var 0x5595bcf05830 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5595bcf0ed20 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5595bcf0ed08 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5595bcf0eaf8 <col:148> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x5595bcf0ece8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5595bcf0ecb8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5595bcf0ebb8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5595bcf0eb70 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5595bcf0eb58 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5595bcf0eb18 <col:166> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5595bcf0eba0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5595bcf0eb88 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5595bcf0eb38 <col:184> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5595bcf0ec88 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5595bcf0ec08 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5595bcf0ebd8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5595bcf0eca0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5595bcf0ec60 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5595bcf0ec30 <col:219> 'int' 0
    |-BinaryOperator 0x5595bcf0f3f8 <line:824:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5595bcf0ee50 <col:3> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5595bcf0f3e0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5595bcf0f3b0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5595bcf0f368 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5595bcf0f350 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5595bcf0ee70 <col:20> '_Bool' lvalue Var 0x5595bcf05de8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5595bcf0f398 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5595bcf0f380 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5595bcf0ee90 <col:36> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x5595bcf0f330 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5595bcf0f300 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5595bcf0f0c0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5595bcf0efe0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5595bcf0eee8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5595bcf0eed0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5595bcf0eeb0 <col:55> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5595bcf0efc0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5595bcf0ef38 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5595bcf0ef20 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5595bcf0ef00 <col:74> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5595bcf0ef88 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5595bcf0ef70 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5595bcf0ef50 <col:93> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5595bcf0f0a0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5595bcf0f038 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5595bcf0f020 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5595bcf0f000 <col:112> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5595bcf0f088 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5595bcf0f070 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5595bcf0f050 <col:131> '_Bool' lvalue Var 0x5595bcf05830 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5595bcf0f2e8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5595bcf0f2d0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5595bcf0f0e0 <col:148> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x5595bcf0f2b0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5595bcf0f280 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5595bcf0f1a0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5595bcf0f158 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5595bcf0f140 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5595bcf0f100 <col:166> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5595bcf0f188 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5595bcf0f170 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5595bcf0f120 <col:184> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5595bcf0f238 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5595bcf0f1f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5595bcf0f1c0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5595bcf0f268 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5595bcf0f250 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5595bcf0f218 <col:212> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5595bcf0f9c0 <line:825:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5595bcf0f418 <col:3> '_Bool' lvalue Var 0x5595bcf05830 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5595bcf0f9a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5595bcf0f978 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5595bcf0f930 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5595bcf0f918 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5595bcf0f438 <col:20> '_Bool' lvalue Var 0x5595bcf05de8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5595bcf0f960 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5595bcf0f948 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5595bcf0f458 <col:36> '_Bool' lvalue Var 0x5595bcf05830 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x5595bcf0f8f8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5595bcf0f8c8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5595bcf0f668 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5595bcf0f588 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5595bcf0f4b0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5595bcf0f498 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5595bcf0f478 <col:55> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5595bcf0f568 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5595bcf0f500 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5595bcf0f4e8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5595bcf0f4c8 <col:74> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5595bcf0f550 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5595bcf0f538 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5595bcf0f518 <col:93> '_Bool' lvalue Var 0x5595bcf05c80 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5595bcf0f648 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5595bcf0f5e0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5595bcf0f5c8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5595bcf0f5a8 <col:112> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5595bcf0f630 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5595bcf0f618 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5595bcf0f5f8 <col:131> '_Bool' lvalue Var 0x5595bcf05830 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5595bcf0f8b0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5595bcf0f898 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5595bcf0f688 <col:148> '_Bool' lvalue Var 0x5595bcf05830 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x5595bcf0f878 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5595bcf0f848 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5595bcf0f748 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5595bcf0f700 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5595bcf0f6e8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5595bcf0f6a8 <col:166> '_Bool' lvalue Var 0x5595bcf05b88 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5595bcf0f730 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5595bcf0f718 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5595bcf0f6c8 <col:184> '_Bool' lvalue Var 0x5595bcf05650 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5595bcf0f818 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5595bcf0f798 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5595bcf0f768 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5595bcf0f830 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5595bcf0f7f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5595bcf0f7c0 <col:219> 'int' 0
    |-BinaryOperator 0x5595bcf0fa58 <line:826:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x5595bcf0f9e0 <col:3> '_Bool' lvalue Var 0x5595bcf05d70 'weak$$choice1' '_Bool'
    | `-CallExpr 0x5595bcf0fa38 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x5595bcf0fa20 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x5595bcf0fa00 <col:19> '_Bool (void)' Function 0x5595bceaac80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x5595bcf0fc90 <line:827:3, col:140> 'int' '='
    | |-DeclRefExpr 0x5595bcf0fa78 <col:3> 'int' lvalue Var 0x5595bcf04860 '__unbuffered_p0_EAX' 'int'
    | `-ConditionalOperator 0x5595bcf0fc60 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x5595bcf0fc30 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5595bcf0fc18 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5595bcf0fa98 <col:25> '_Bool' lvalue Var 0x5595bcf04db0 '__unbuffered_p0_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x5595bcf0fbd8 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x5595bcf0fba8 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x5595bcf0fb60 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x5595bcf0fb48 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5595bcf0fab8 <col:61> '_Bool' lvalue Var 0x5595bcf05d70 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x5595bcf0fb78 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x5595bcf0fb10 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x5595bcf0faf8 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x5595bcf0fad8 <col:78> 'int *' lvalue Var 0x5595bcf04e30 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x5595bcf0fb90 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5595bcf0fb28 <col:117> 'int' lvalue Var 0x5595bcf04860 '__unbuffered_p0_EAX' 'int'
    |   `-ImplicitCastExpr 0x5595bcf0fc48 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5595bcf0fbf8 <col:140> 'int' lvalue Var 0x5595bcf04860 '__unbuffered_p0_EAX' 'int'
    |-BinaryOperator 0x5595bcf0fec8 <line:828:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x5595bcf0fcb0 <col:3> '_Bool' lvalue Var 0x5595bcf052a0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5595bcf0feb0 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5595bcf0fe98 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5595bcf0fe78 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x5595bcf0fe58 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x5595bcf0fdc0 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x5595bcf0fd28 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x5595bcf0fd10 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x5595bcf0fcd0 <col:23> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
    |         | | `-IntegerLiteral 0x5595bcf0fcf0 <col:28> 'int' 2
    |         | `-BinaryOperator 0x5595bcf0fda0 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5595bcf0fd88 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5595bcf0fd48 <col:33> 'int' lvalue Var 0x5595bcf04860 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x5595bcf0fd68 <col:56> 'int' 2
    |         `-BinaryOperator 0x5595bcf0fe38 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x5595bcf0fe20 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5595bcf0fde0 <col:61> 'int' lvalue Var 0x5595bcf05190 '__unbuffered_p1_EAX' 'int'
    |           `-IntegerLiteral 0x5595bcf0fe00 <col:84> 'int' 1
    |-BinaryOperator 0x5595bcf10018 <line:829:3, col:37> 'int' '='
    | |-DeclRefExpr 0x5595bcf0fee8 <col:3> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
    | `-ConditionalOperator 0x5595bcf0ffe8 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x5595bcf0ff80 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5595bcf0ff68 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5595bcf0ff08 <col:7> '_Bool' lvalue Var 0x5595bcf05558 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x5595bcf0ff98 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5595bcf0ff28 <col:25> 'int' lvalue Var 0x5595bcf055d8 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x5595bcf0ffd0 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5595bcf0ff48 <col:37> 'int' lvalue Var 0x5595bcf054c0 'y' 'int'
    |-BinaryOperator 0x5595bcf100b0 <line:830:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x5595bcf10038 <col:3> '_Bool' lvalue Var 0x5595bcf05558 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x5595bcf10088 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x5595bcf10058 <col:28> 'int' 0
    |-CallExpr 0x5595bcf10108 <line:831:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5595bcf100f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5595bcf100d0 <col:3> 'void ()' Function 0x5595bceab570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5595bcf10180 <line:832:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5595bcf10168 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5595bcf10128 <col:3> 'void (int)' Function 0x5595bceab238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5595bcf101c0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5595bcf101a8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5595bcf10148 <col:21> '_Bool' lvalue Var 0x5595bcf052a0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5595bcf101f8 <line:833:3, col:10>
      `-IntegerLiteral 0x5595bcf101d8 <col:10> 'int' 0
