TranslationUnitDecl 0x55c96b9e8f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55c96b9e9848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55c96b9e9520 '__int128'
|-TypedefDecl 0x55c96b9e98b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55c96b9e9540 'unsigned __int128'
|-TypedefDecl 0x55c96b9e9bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55c96b9e9990 'struct __NSConstantString_tag'
|   `-Record 0x55c96b9e9910 '__NSConstantString_tag'
|-TypedefDecl 0x55c96b9e9c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55c96b9e9c20 'char *'
|   `-BuiltinType 0x55c96b9e9020 'char'
|-TypedefDecl 0x55c96ba28b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55c96b9e9f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55c96b9e9d40 'struct __va_list_tag'
|     `-Record 0x55c96b9e9cc0 '__va_list_tag'
|-FunctionDecl 0x55c96ba28ca0 <pthread-wmm/rfi000_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55c96ba28bd0 <col:31> col:34 'int'
|-FunctionDecl 0x55c96ba28e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55c96ba28f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55c96ba290d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55c96ba29048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55c96ba29308 <col:40, col:99>
|   |-IfStmt 0x55c96ba292d8 <col:42, col:88>
|   | |-UnaryOperator 0x55c96ba291b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55c96ba291a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55c96ba29180 <col:47> 'int' lvalue ParmVar 0x55c96ba29048 'expression' 'int'
|   | `-CompoundStmt 0x55c96ba292c0 <col:59, col:88>
|   |   `-LabelStmt 0x55c96ba292a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55c96ba29238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55c96ba29220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55c96ba291d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55c96ba28f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55c96ba292f0 <col:89>
|   `-ReturnStmt 0x55c96ba292f8 <col:91>
|-FunctionDecl 0x55c96ba29350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55c96ba29410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55c96ba29790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55c96ba294c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55c96ba29548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55c96ba295c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55c96ba29648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55c96ba29850 <line:10:22>
|-FunctionDecl 0x55c96ba4f8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55c96ba298c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55c96ba29940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55c96ba299c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55c96ba29a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55c96ba4f960 <line:13:22>
|-FunctionDecl 0x55c96ba4fc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55c96ba4f9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55c96ba4fa50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55c96ba4fad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55c96ba4fcc8 <line:15:22>
|-TypedefDecl 0x55c96ba4fd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55c96b9e90e0 'unsigned char'
|-TypedefDecl 0x55c96ba4fda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55c96b9e9100 'unsigned short'
|-TypedefDecl 0x55c96ba4fe18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55c96b9e9120 'unsigned int'
|-TypedefDecl 0x55c96ba4fe88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-TypedefDecl 0x55c96ba4fef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55c96b9e9040 'signed char'
|-TypedefDecl 0x55c96ba4ff68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55c96b9e90e0 'unsigned char'
|-TypedefDecl 0x55c96ba4ffd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55c96b9e9060 'short'
|-TypedefDecl 0x55c96ba50048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55c96b9e9100 'unsigned short'
|-TypedefDecl 0x55c96ba500b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55c96b9e9080 'int'
|-TypedefDecl 0x55c96ba50128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55c96b9e9120 'unsigned int'
|-TypedefDecl 0x55c96ba50198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba50208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-TypedefDecl 0x55c96ba50278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba502e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-TypedefDecl 0x55c96ba50358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-TypedefDecl 0x55c96ba503c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55c96b9e9120 'unsigned int'
|-TypedefDecl 0x55c96ba50438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55c96b9e9120 'unsigned int'
|-TypedefDecl 0x55c96ba504a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-TypedefDecl 0x55c96ba50518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-TypedefDecl 0x55c96ba50588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55c96b9e9120 'unsigned int'
|-TypedefDecl 0x55c96ba505f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-TypedefDecl 0x55c96ba50668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba506d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba50748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55c96b9e9080 'int'
|-RecordDecl 0x55c96ba507a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55c96ba50918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55c96ba509d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55c96ba50970 'struct __fsid_t' sugar
|   `-RecordType 0x55c96ba50820 '__fsid_t'
|     `-Record 0x55c96ba507a0 ''
|-TypedefDecl 0x55c96ba50a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba50ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-TypedefDecl 0x55c96ba50b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-TypedefDecl 0x55c96ba50ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55c96b9e9120 'unsigned int'
|-TypedefDecl 0x55c96ba50c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba50c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55c96b9e9120 'unsigned int'
|-TypedefDecl 0x55c96ba50cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba50d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55c96b9e9080 'int'
|-TypedefDecl 0x55c96ba50dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55c96b9e9080 'int'
|-TypedefDecl 0x55c96ba50e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55c96b9e9080 'int'
|-TypedefDecl 0x55c96ba50eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55c96b9e97a0 'void *'
|   `-BuiltinType 0x55c96b9e8fe0 'void'
|-TypedefDecl 0x55c96ba50f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba50f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba51008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba51078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-TypedefDecl 0x55c96ba510e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-TypedefDecl 0x55c96ba51158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-TypedefDecl 0x55c96ba511c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-TypedefDecl 0x55c96ba51238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba512a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba51318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba51388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-TypedefDecl 0x55c96ba51418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55c96ba513e0 '__off64_t' sugar
|   |-Typedef 0x55c96ba506d8 '__off64_t'
|   `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba51510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55c96ba514d0 '__quad_t *'
|   `-TypedefType 0x55c96ba51470 '__quad_t' sugar
|     |-Typedef 0x55c96ba50278 '__quad_t'
|     `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba51580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55c96b9e9c20 'char *'
|   `-BuiltinType 0x55c96b9e9020 'char'
|-TypedefDecl 0x55c96ba515f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba51660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55c96b9e9120 'unsigned int'
|-FunctionDecl 0x55c96ba517a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55c96ba516d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55c96ba51ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55c96ba51ad8 <line:72:3, col:34>
|     `-CallExpr 0x55c96ba51a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55c96ba51a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55c96ba51a10 <col:10> '<builtin fn type>' Function 0x55c96ba51880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55c96ba51ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55c96ba51a30 <col:29> 'unsigned int' lvalue ParmVar 0x55c96ba516d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55c96ba51880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55c96ba51920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55c96ba51990 <col:10> Implicit
| `-ConstAttr 0x55c96ba519e8 <col:10> Implicit
|-FunctionDecl 0x55c96ba51c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55c96ba51b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55c96ba51f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55c96ba51f48 <line:77:3, col:34>
|     `-CallExpr 0x55c96ba51f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55c96ba51ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55c96ba51e78 <col:10> '<builtin fn type>' Function 0x55c96ba51ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55c96ba51f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55c96ba51e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55c96ba51b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55c96ba51ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55c96ba51d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55c96ba51df8 <col:10> Implicit
| `-ConstAttr 0x55c96ba51e50 <col:10> Implicit
|-TypedefDecl 0x55c96ba51f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-TypedefDecl 0x55c96ba52018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55c96ba51fe0 '__time_t' sugar
|   |-Typedef 0x55c96ba50c18 '__time_t'
|   `-BuiltinType 0x55c96b9e90a0 'long'
|-RecordDecl 0x55c96ba52070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55c96ba52128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55c96ba521b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55c96ba52248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55c96ba52210 '__pid_t' sugar
|   |-Typedef 0x55c96ba50748 '__pid_t'
|   `-BuiltinType 0x55c96b9e9080 'int'
|-RecordDecl 0x55c96ba522a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55c96ba52360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55c96ba523b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55c96ba52470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55c96ba524d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-RecordDecl 0x55c96ba52530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55c96ba527c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55c96ba548b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55c96ba52810 'struct cpu_set_t' sugar
|   `-RecordType 0x55c96ba525b0 'cpu_set_t'
|     `-Record 0x55c96ba52530 ''
|-FunctionDecl 0x55c96ba54b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55c96ba54958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55c96ba54a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55c96ba54c38 <line:107:19>
|-FunctionDecl 0x55c96ba54e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55c96ba54ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55c96ba54eb8 <col:69>
|-FunctionDecl 0x55c96ba55030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55c96ba54f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55c96ba550d8 <col:64>
|-FunctionDecl 0x55c96ba55398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55c96ba55140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55c96ba55278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55c96ba55448 <line:113:22>
|-FunctionDecl 0x55c96ba556c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55c96ba554b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55c96ba555a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55c96ba55778 <col:88>
|-FunctionDecl 0x55c96ba55a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55c96ba557e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55c96ba558c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55c96ba55950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55c96ba55b50 <col:62>
|-FunctionDecl 0x55c96ba55cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55c96ba55bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55c96ba55d70 <col:63>
|-FunctionDecl 0x55c96ba55e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55c96ba55f38 <col:47>
|-FunctionDecl 0x55c96ba56040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55c96ba55fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55c96ba560e8 <col:69>
|-FunctionDecl 0x55c96ba561f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55c96ba56158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55c96ba56298 <col:69>
|-FunctionDecl 0x55c96ba56558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55c96ba56300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55c96ba56438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55c96ba56608 <col:88>
|-TypedefDecl 0x55c96ba56698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55c96ba56660 '__clock_t' sugar
|   |-Typedef 0x55c96ba50a58 '__clock_t'
|   `-BuiltinType 0x55c96b9e90a0 'long'
|-TypedefDecl 0x55c96ba56728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55c96ba566f0 '__clockid_t' sugar
|   |-Typedef 0x55c96ba50e48 '__clockid_t'
|   `-BuiltinType 0x55c96b9e9080 'int'
|-TypedefDecl 0x55c96ba567b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55c96ba56780 '__timer_t' sugar
|   |-Typedef 0x55c96ba50eb8 '__timer_t'
|   `-PointerType 0x55c96b9e97a0 'void *'
|     `-BuiltinType 0x55c96b9e8fe0 'void'
|-RecordDecl 0x55c96ba56810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55c96ba568e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55c96ba56950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55c96ba569b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55c96ba56a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55c96ba56a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55c96ba56af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55c96ba56b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55c96ba56bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55c96ba56c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55c96ba56c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55c96ba56cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55c96ba56d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55c96ba56e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55c96ba56e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55c96ba56f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55c96ba57100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55c96ba571a0 <col:45>
|-FunctionDecl 0x55c96ba57380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55c96ba57270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55c96ba57428 <col:54>
|-FunctionDecl 0x55c96ba57628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55c96ba57490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55c96ba57508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55c96ba576d8 <line:157:22>
| `-ConstAttr 0x55c96ba57730 <col:63>
|-FunctionDecl 0x55c96ba58560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55c96ba57828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55c96ba58608 <col:56>
|-FunctionDecl 0x55c96ba589b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55c96ba58678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55c96ba586f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55c96ba58770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55c96ba58868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55c96ba58a70 <col:54>
|-RecordDecl 0x55c96ba58ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55c96ba58b78 parent 0x55c96b9e8f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55c96ba58dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55c96ba58e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55c96ba58ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55c96ba58f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55c96ba59038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55c96ba59158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55c96ba59100 'struct __locale_struct *'
|   `-ElaboratedType 0x55c96ba59090 'struct __locale_struct' sugar
|     `-RecordType 0x55c96ba58b50 'struct __locale_struct'
|       `-Record 0x55c96ba58ac8 '__locale_struct'
|-TypedefDecl 0x55c96ba59208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55c96ba591d0 '__locale_t' sugar
|   |-Typedef 0x55c96ba59158 '__locale_t'
|   `-PointerType 0x55c96ba59100 'struct __locale_struct *'
|     `-ElaboratedType 0x55c96ba59090 'struct __locale_struct' sugar
|       `-RecordType 0x55c96ba58b50 'struct __locale_struct'
|         `-Record 0x55c96ba58ac8 '__locale_struct'
|-FunctionDecl 0x55c96ba59610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55c96ba59278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55c96ba592f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55c96ba59370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55c96ba59400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55c96ba59478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55c96ba596d8 <col:40>
|-FunctionDecl 0x55c96ba598c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55c96ba597a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55c96ba59970 <col:66>
|-FunctionDecl 0x55c96ba59a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55c96ba599d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55c96ba59b28 <col:69>
|-FunctionDecl 0x55c96ba59d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55c96ba59b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55c96ba59c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55c96ba59e08 <col:52>
|-FunctionDecl 0x55c96ba59fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55c96ba59e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55c96ba59f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55c96ba5a060 <col:55>
|-FunctionDecl 0x55c96ba5a1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55c96ba5a0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55c96ba5a2a0 <col:62>
|-FunctionDecl 0x55c96ba5a418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55c96ba5a308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55c96ba5a4c0 <col:60>
|-FunctionDecl 0x55c96ba5a718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55c96ba5a578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55c96ba5a5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55c96ba5a7c8 <col:44>
|-FunctionDecl 0x55c96ba5a9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55c96ba5a830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55c96ba5a8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55c96ba5aa88 <col:49>
|-VarDecl 0x55c96ba5ab88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55c96ba5ac08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55c96ba5ac88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55c96ba5ad50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55c96ba5ae80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55c96ba5af20 <col:42>
|-VarDecl 0x55c96ba5af90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55c96ba5b010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55c96ba5b198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55c96ba5b088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55c96ba5b240 <col:57>
|-FunctionDecl 0x55c96ba5b350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55c96ba5b2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55c96ba5b3f8 <col:56>
|-FunctionDecl 0x55c96ba5c540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55c96ba5b478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55c96ba5c5e8 <col:59>
|-FunctionDecl 0x55c96ba5c6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55c96ba5c658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55c96ba5c798 <col:48>
| `-ConstAttr 0x55c96ba5c7f0 <col:89>
|-FunctionDecl 0x55c96ba5ca58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55c96ba5c8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55c96ba5c938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55c96ba5ccb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55c96ba5cb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55c96ba5cbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55c96ba5cd68 <col:88>
|-FunctionDecl 0x55c96ba5cf00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55c96ba5cdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55c96ba5ce60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55c96ba5cfb0 <col:88>
|-FunctionDecl 0x55c96ba5d1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55c96ba5d018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55c96ba5d0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55c96ba5d278 <line:208:22>
|-FunctionDecl 0x55c96ba5d5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55c96ba5d2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55c96ba5d360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55c96ba5d3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55c96ba5d480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55c96ba5d8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55c96ba5d6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55c96ba5d7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55c96ba5d998 <col:85>
|-FunctionDecl 0x55c96ba5dd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55c96ba5da00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55c96ba5db38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55c96ba5dc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55c96ba5de40 <col:52>
|-FunctionDecl 0x55c96ba5dfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55c96ba5dea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55c96ba5e060 <col:61>
|-FunctionDecl 0x55c96ba5e560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55c96ba5e0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55c96ba5e148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55c96ba5e278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55c96ba5e368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55c96ba5e620 <col:62>
|-FunctionDecl 0x55c96ba5e838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55c96ba5e688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55c96ba5e718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55c96ba5e8e8 <line:221:22>
|-FunctionDecl 0x55c96ba5e9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55c96ba5e950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55c96ba5ea90 <col:65>
|-TypedefDecl 0x55c96ba5eb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55c96b9e9140 'unsigned long'
|-RecordDecl 0x55c96ba5eb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55c96ba5eca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55c96ba5ed08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55c96ba5edb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55c96ba5ed60 'union pthread_attr_t' sugar
|   `-RecordType 0x55c96ba5ebe0 'union pthread_attr_t'
|     `-Record 0x55c96ba5eb58 'pthread_attr_t'
|-RecordDecl 0x55c96ba5ee10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55c96ba5ef88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55c96ba5f000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55c96ba5f0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55c96ba5f050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55c96ba5ee90 'struct __pthread_internal_list'
|     `-Record 0x55c96ba5ee10 '__pthread_internal_list'
|-RecordDecl 0x55c96ba5f120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55c96ba5f1c8 parent 0x55c96b9e8f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55c96ba5f2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55c96ba5f308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55c96ba5f370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55c96ba5f3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55c96ba5f440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55c96ba5f4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55c96ba63580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55c96ba63630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55c96ba63720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55c96ba63788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55c96ba63910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55c96ba638b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55c96ba5f1a0 'pthread_mutex_t'
|     `-Record 0x55c96ba5f120 ''
|-RecordDecl 0x55c96ba63980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55c96ba63ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55c96ba63b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55c96ba63be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55c96ba63b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55c96ba63a00 'pthread_mutexattr_t'
|     `-Record 0x55c96ba63980 ''
|-RecordDecl 0x55c96ba63c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55c96ba63cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55c96ba63dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55c96ba63e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55c96ba63e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55c96ba63ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55c96ba63f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55c96ba63fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55c96ba64030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55c96ba64098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55c96ba64150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi000_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/rfi000_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55c96ba64240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55c96ba642a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55c96ba643e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55c96ba64380 'union pthread_cond_t' sugar
|   `-RecordType 0x55c96ba63cd0 'pthread_cond_t'
|     `-Record 0x55c96ba63c50 ''
|-RecordDecl 0x55c96ba64450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55c96ba64590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55c96ba645f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55c96ba646b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55c96ba64650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55c96ba644d0 'pthread_condattr_t'
|     `-Record 0x55c96ba64450 ''
|-TypedefDecl 0x55c96ba64738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55c96b9e9120 'unsigned int'
|-TypedefDecl 0x55c96ba647a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55c96b9e9080 'int'
|-RecordDecl 0x55c96ba64800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55c96ba648a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55c96ba64970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55c96ba649d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55c96ba64a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55c96ba64aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55c96ba64b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55c96ba64b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55c96ba64be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55c96ba64c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55c96ba64cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55c96ba64d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55c96ba64d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55c96ba64e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi000_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/rfi000_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55c96ba64ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55c96ba64f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55c96ba65090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55c96ba65030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55c96ba64880 'pthread_rwlock_t'
|     `-Record 0x55c96ba64800 ''
|-RecordDecl 0x55c96ba65100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55c96ba65240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55c96ba652a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55c96ba65360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55c96ba65300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55c96ba65180 'pthread_rwlockattr_t'
|     `-Record 0x55c96ba65100 ''
|-TypedefDecl 0x55c96ba653e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55c96b9e9084 'volatile int' volatile
|   `-BuiltinType 0x55c96b9e9080 'int'
|-RecordDecl 0x55c96ba65440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55c96ba675b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55c96ba67618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55c96ba676d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55c96ba67670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55c96ba654c0 'pthread_barrier_t'
|     `-Record 0x55c96ba65440 ''
|-RecordDecl 0x55c96ba67740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55c96ba67840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55c96ba678a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55c96ba67960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55c96ba67900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55c96ba677c0 'pthread_barrierattr_t'
|     `-Record 0x55c96ba67740 ''
|-TypedefDecl 0x55c96ba67a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55c96ba67a10 'long [8]' 8 
|   `-BuiltinType 0x55c96b9e90a0 'long'
|-EnumDecl 0x55c96ba67ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55c96ba67b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55c96ba67be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55c96ba67c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55c96ba67d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55c96ba67d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55c96ba67da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55c96ba67df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55c96ba67e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55c96ba67e68 <col:26> 'int'
| |   `-DeclRefExpr 0x55c96ba67e48 <col:26> 'int' EnumConstant 0x55c96ba67d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55c96ba67f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55c96ba67ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55c96ba67ed0 <col:29> 'int' EnumConstant 0x55c96ba67d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55c96ba67f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55c96ba67f78 <col:30> 'int'
| |   `-DeclRefExpr 0x55c96ba67f58 <col:30> 'int' EnumConstant 0x55c96ba67da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55c96ba68018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55c96ba68000 <col:27> 'int'
|     `-DeclRefExpr 0x55c96ba67fe0 <col:27> 'int' EnumConstant 0x55c96ba67e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55c96ba68068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55c96ba68138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55c96ba681c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55c96ba681a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55c96ba68188 <col:30> 'int' EnumConstant 0x55c96ba68138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55c96ba68210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55c96ba68298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55c96ba68280 <col:29> 'int'
|     `-DeclRefExpr 0x55c96ba68260 <col:29> 'int' EnumConstant 0x55c96ba68210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55c96ba682e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55c96ba683b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55c96ba68408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55c96ba68458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55c96ba684a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55c96ba685c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55c96ba68610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55c96ba68660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55c96ba686e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55c96ba686d0 <col:31> 'int'
|     `-DeclRefExpr 0x55c96ba686b0 <col:31> 'int' EnumConstant 0x55c96ba685c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55c96ba68738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55c96ba68808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55c96ba68858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55c96ba688a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55c96ba68978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55c96ba689c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55c96ba68a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55c96ba68ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55c96ba68b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55c96ba68b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55c96ba68dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55c96ba68e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55c96ba68e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55c96ba68fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55c96ba69008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55c96ba690d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55c96ba69128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55c96ba69178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55c96ba69248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55c96ba69298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55c96ba698f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55c96ba69390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55c96ba694a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c96ba696e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55c96ba69760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55c96ba699b8 <col:47>
| |-NonNullAttr 0x55c96ba69a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55c96ba69a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55c96ba69b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55c96ba69aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55c96ba69dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55c96ba69c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55c96ba69ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55c96ba69f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55c96ba69e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55c96ba6a040 <col:60>
|-FunctionDecl 0x55c96ba6a190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55c96ba6a230 <col:54>
| `-ConstAttr 0x55c96ba6a288 <col:95>
|-FunctionDecl 0x55c96ba6a458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55c96ba6a2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55c96ba6a338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55c96ba6a508 <line:394:19>
| `-ConstAttr 0x55c96ba6a560 <col:60>
|-FunctionDecl 0x55c96ba6af68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55c96ba6ae30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55c96ba6b010 <col:71>
| `-NonNullAttr 0x55c96ba6b068 <col:112, col:126> 1
|-FunctionDecl 0x55c96ba6b170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55c96ba6b0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55c96ba6b218 <line:397:22>
| `-NonNullAttr 0x55c96ba6b270 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba6b498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55c96ba6b2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55c96ba6b338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55c96ba6b548 <line:400:22>
| `-NonNullAttr 0x55c96ba6b5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba6b7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55c96ba6b5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55c96ba6b668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55c96ba6b858 <line:403:22>
| `-NonNullAttr 0x55c96ba6b8b0 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba6bb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55c96ba6b8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55c96ba6b9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55c96ba6bbb8 <line:406:22>
| `-NonNullAttr 0x55c96ba6bc10 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba6ce48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55c96ba6bc58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55c96ba6bcd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55c96ba6cef8 <line:409:22>
| `-NonNullAttr 0x55c96ba6cf50 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba6d188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55c96ba6cf98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c96ba6d028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55c96ba6d238 <line:412:22>
| `-NonNullAttr 0x55c96ba6d290 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba6d4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55c96ba6d2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c96ba6d368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55c96ba6d578 <col:37>
| `-NonNullAttr 0x55c96ba6d5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55c96ba6d7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c96ba6d618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c96ba6d698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55c96ba6d868 <line:418:22>
| `-NonNullAttr 0x55c96ba6d8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba6da48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55c96ba6d908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55c96ba6d988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55c96ba6daf8 <line:420:22>
| `-NonNullAttr 0x55c96ba6db50 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba6dcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c96ba6db98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c96ba6dc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55c96ba6dda8 <line:423:22>
| `-NonNullAttr 0x55c96ba6ee30 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba6efb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55c96ba6ee78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55c96ba6eef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55c96ba6f068 <line:426:22>
| `-NonNullAttr 0x55c96ba6f0c0 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba6f268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c96ba6f108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c96ba6f188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55c96ba6f318 <line:429:22>
| `-NonNullAttr 0x55c96ba6f370 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba6f4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55c96ba6f3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55c96ba6f438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55c96ba6f5a8 <line:431:22>
| `-NonNullAttr 0x55c96ba6f600 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba6f828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55c96ba6f648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c96ba6f6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55c96ba6f8d8 <line:434:22>
| |-NonNullAttr 0x55c96ba6f930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55c96ba6f968 <col:100> "" ""
|-FunctionDecl 0x55c96ba6fb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55c96ba6f9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55c96ba6fa38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55c96ba6fc28 <line:437:22>
| |-NonNullAttr 0x55c96ba6fc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55c96ba6fcb8 <col:97> "" ""
|-FunctionDecl 0x55c96ba6feb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55c96ba6fd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c96ba6fd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55c96ba6ff68 <line:440:22>
| `-NonNullAttr 0x55c96ba6ffc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba70140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55c96ba70008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55c96ba70080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55c96ba701f0 <line:443:22>
| `-NonNullAttr 0x55c96ba70248 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba70538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55c96ba70298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55c96ba70318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55c96ba70390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55c96ba705f0 <line:447:22>
| `-NonNullAttr 0x55c96ba70648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55c96ba708f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55c96ba706a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55c96ba70720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55c96ba70798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55c96ba709b0 <col:43>
| `-NonNullAttr 0x55c96ba70a08 <col:84, col:98> 1
|-FunctionDecl 0x55c96ba70cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55c96ba70a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55c96ba70ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55c96ba70b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55c96ba70d80 <line:452:22>
| `-NonNullAttr 0x55c96ba70dd8 <col:63, col:77> 3
|-FunctionDecl 0x55c96ba710e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55c96ba70e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55c96ba70ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55c96ba70f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55c96ba711a0 <line:456:22>
| `-NonNullAttr 0x55c96ba711f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55c96ba713e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55c96ba71248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55c96ba712c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55c96ba71498 <line:458:22>
|-FunctionDecl 0x55c96ba71868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55c96ba71560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55c96ba71700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55c96ba71918 <col:52, col:69> 1 2
|-FunctionDecl 0x55c96ba71ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55c96ba719a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55c96ba71a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55c96ba71ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55c96ba71b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55c96ba71c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55c96ba71e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55c96ba71d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55c96ba71fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55c96ba72040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55c96ba720e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55c96ba721d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55c96ba72240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55c96ba72410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/rfi000_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55c96ba72508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55c96ba725c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55c96ba72560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55c96ba720c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55c96ba72040 ''
| `-AlignedAttr 0x55c96ba72618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55c96ba72690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55c96ba727f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55c96ba72858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55c96ba728c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55c96ba72928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55c96ba72b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55c96ba72a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55c96ba72c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55c96ba72be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55c96ba72e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55c96ba72d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55c96ba72f18 <line:487:22>
|-RecordDecl 0x55c96ba72f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55c96ba73288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55c96ba730e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55c96ba73168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55c96ba73338 <col:86>
| `-ReturnsTwiceAttr 0x55c96ba73390 <col:12> Implicit
|-FunctionDecl 0x55c96ba736b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55c96ba73460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55c96ba73570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55c96ba73768 <line:493:22>
| `-NonNullAttr 0x55c96ba737c0 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba73938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55c96ba73808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55c96ba739e0 <line:495:22>
| `-NonNullAttr 0x55c96ba73a38 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba73b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55c96ba73a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55c96ba73be8 <line:497:22>
| `-NonNullAttr 0x55c96ba73c40 <col:52, col:66> 1
|-FunctionDecl 0x55c96ba73d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55c96ba73c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55c96ba73de8 <line:499:22>
| `-NonNullAttr 0x55c96ba73e40 <col:52, col:66> 1
|-FunctionDecl 0x55c96ba74088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55c96ba73e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55c96ba73f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55c96ba74138 <col:36>
| `-NonNullAttr 0x55c96ba74190 <col:66, col:83> 1 2
|-FunctionDecl 0x55c96ba74290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55c96ba741d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55c96ba74338 <line:504:22>
| `-NonNullAttr 0x55c96ba74390 <col:52, col:66> 1
|-FunctionDecl 0x55c96ba74628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c96ba74440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55c96ba744c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55c96ba746d8 <line:508:22>
| `-NonNullAttr 0x55c96ba74730 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba749f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55c96ba74778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55c96ba747f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55c96ba74878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55c96ba74ab0 <line:512:22>
| `-NonNullAttr 0x55c96ba74b08 <col:63, col:80> 1 3
|-FunctionDecl 0x55c96ba74c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55c96ba74b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55c96ba74cb8 <line:514:22>
| `-NonNullAttr 0x55c96ba74d10 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba74f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55c96ba74dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55c96ba74fe0 <line:516:22>
| `-NonNullAttr 0x55c96ba75038 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba75140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55c96ba75088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55c96ba751e8 <line:518:22>
| `-NonNullAttr 0x55c96ba75240 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba75468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c96ba75288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55c96ba75308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55c96ba75518 <line:522:22>
| `-NonNullAttr 0x55c96ba75570 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba75778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55c96ba755b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55c96ba75638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55c96ba75828 <line:525:22>
| `-NonNullAttr 0x55c96ba75880 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba75a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c96ba758c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55c96ba75948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55c96ba75ad8 <line:528:22>
| `-NonNullAttr 0x55c96ba75b30 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba75cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55c96ba75b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55c96ba75bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55c96ba75d68 <line:530:22>
| `-NonNullAttr 0x55c96ba75dc0 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba76f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c96ba75e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55c96ba76eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55c96ba77040 <line:534:22>
| `-NonNullAttr 0x55c96ba77098 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba77228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55c96ba770e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55c96ba77168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55c96ba772d8 <line:537:22>
| `-NonNullAttr 0x55c96ba77330 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba774d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c96ba77378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55c96ba773f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55c96ba77588 <line:541:22>
| `-NonNullAttr 0x55c96ba775e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba77768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55c96ba77628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55c96ba776a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55c96ba77818 <line:544:22>
| `-NonNullAttr 0x55c96ba77870 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba77a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55c96ba778b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55c96ba77938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55c96ba77b08 <line:547:22>
| `-NonNullAttr 0x55c96ba77b60 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba77ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55c96ba77ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55c96ba77c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55c96ba77d98 <line:550:22>
| `-NonNullAttr 0x55c96ba77df0 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba79168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55c96ba78f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55c96ba79020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55c96ba79218 <col:29>
| `-NonNullAttr 0x55c96ba79270 <col:70, col:84> 1
|-FunctionDecl 0x55c96ba793e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55c96ba792b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55c96ba79490 <line:555:22>
| `-NonNullAttr 0x55c96ba794e8 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba795f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55c96ba79538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55c96ba79698 <line:557:22>
| `-NonNullAttr 0x55c96ba796f0 <col:52, col:66> 1
|-FunctionDecl 0x55c96ba797f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55c96ba79738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55c96ba79898 <line:559:19>
| `-NonNullAttr 0x55c96ba798f0 <col:49, col:63> 1
|-FunctionDecl 0x55c96ba79b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55c96ba79938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55c96ba799c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55c96ba79bd8 <col:39>
| `-NonNullAttr 0x55c96ba79c30 <col:69, col:86> 1 2
|-FunctionDecl 0x55c96ba79d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55c96ba79c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55c96ba79dd8 <line:564:22>
| `-NonNullAttr 0x55c96ba79e30 <col:52, col:66> 1
|-FunctionDecl 0x55c96ba79f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55c96ba79ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55c96ba7a040 <line:566:22>
| `-NonNullAttr 0x55c96ba7a098 <col:52, col:66> 1
|-FunctionDecl 0x55c96ba7a258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55c96ba7a0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55c96ba7a178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55c96ba7a308 <col:39>
| `-NonNullAttr 0x55c96ba7a360 <col:69, col:86> 1 2
|-FunctionDecl 0x55c96ba7a460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55c96ba7a3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55c96ba7a508 <line:571:22>
| `-NonNullAttr 0x55c96ba7a560 <col:52, col:66> 1
|-FunctionDecl 0x55c96ba7a748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55c96ba7a610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55c96ba7a7f0 <line:573:22>
| `-NonNullAttr 0x55c96ba7a848 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba7a950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55c96ba7a898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55c96ba7a9f8 <line:575:22>
| `-NonNullAttr 0x55c96ba7aa50 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba7ac78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c96ba7aa98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55c96ba7ab18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55c96ba7ad28 <line:579:22>
| `-NonNullAttr 0x55c96ba7ad80 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba7afa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55c96ba7adc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55c96ba7ae48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55c96ba7b058 <line:582:22>
| `-NonNullAttr 0x55c96ba7b0b0 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba7b258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c96ba7b0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55c96ba7b178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55c96ba7b308 <line:586:22>
| `-NonNullAttr 0x55c96ba7b360 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba7b4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55c96ba7b3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55c96ba7b428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55c96ba7b598 <col:36>
| `-NonNullAttr 0x55c96ba7b5f0 <col:77, col:91> 1
|-FunctionDecl 0x55c96ba7b928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55c96ba7b6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55c96ba7b7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55c96ba7b9d8 <line:591:22>
| `-NonNullAttr 0x55c96ba7ba30 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba7bba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55c96ba7ba78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55c96ba7bc50 <line:593:22>
| `-NonNullAttr 0x55c96ba7bca8 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba7bdb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55c96ba7bcf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55c96ba7be58 <line:595:22>
| `-NonNullAttr 0x55c96ba7beb0 <col:52, col:66> 1
|-FunctionDecl 0x55c96ba7bfc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55c96ba7bf10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55c96ba7c070 <line:597:22>
| `-NonNullAttr 0x55c96ba7c0c8 <col:52, col:66> 1
|-FunctionDecl 0x55c96ba7c2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55c96ba7c118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55c96ba7c190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55c96ba7c3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55c96ba7c6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55c96ba7c428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55c96ba7c4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55c96ba7c530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55c96ba7c790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55c96ba7c9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55c96ba7c870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55c96ba7ca50 <line:606:22>
| `-NonNullAttr 0x55c96ba7caa8 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba7cbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55c96ba7caf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55c96ba7cc58 <line:608:22>
| `-NonNullAttr 0x55c96ba7ccb0 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba7cf10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c96ba7ccf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55c96ba7cd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55c96ba7cfc0 <line:612:22>
| `-NonNullAttr 0x55c96ba7d018 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba7d228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55c96ba7d068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55c96ba7d0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55c96ba7d2d8 <col:37>
| `-NonNullAttr 0x55c96ba7d330 <col:78, col:92> 1
|-FunctionDecl 0x55c96ba7d548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55c96ba7d378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55c96ba7d420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55c96ba7d5f8 <line:618:22>
| `-NonNullAttr 0x55c96ba7d650 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba7d818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55c96ba7d698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55c96ba7d710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55c96ba7d8c8 <line:621:22>
| `-NonNullAttr 0x55c96ba7d920 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba7dbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55c96ba7da00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55c96ba7da80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55c96ba7dc78 <line:623:22>
| `-NonNullAttr 0x55c96ba7dcd0 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba7de48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55c96ba7dd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55c96ba7df20 <line:625:22>
| `-NonNullAttr 0x55c96ba7df78 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba7e080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55c96ba7dfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55c96ba7e128 <line:627:22>
| `-NonNullAttr 0x55c96ba7e180 <col:52, col:66> 1
|-FunctionDecl 0x55c96ba7e280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55c96ba7e1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55c96ba7e328 <line:629:22>
| `-NonNullAttr 0x55c96ba7e380 <col:52, col:66> 1
|-FunctionDecl 0x55c96ba7e480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55c96ba7e3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55c96ba7e528 <line:631:22>
| `-NonNullAttr 0x55c96ba7e580 <col:52, col:66> 1
|-FunctionDecl 0x55c96ba7e958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55c96ba7e660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55c96ba7e770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55c96ba7e7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55c96ba7ea10 <line:635:22>
| `-NonNullAttr 0x55c96ba7ea68 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba7ebe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55c96ba7eab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55c96ba7ec90 <line:637:22>
| `-NonNullAttr 0x55c96ba7ece8 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba7edf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55c96ba7ed38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55c96ba7ee98 <line:639:22>
| `-NonNullAttr 0x55c96ba7eef0 <col:52, col:66> 1
|-FunctionDecl 0x55c96ba7f0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55c96ba7efb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55c96ba7f190 <line:641:22>
| `-NonNullAttr 0x55c96ba7f1e8 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba7f2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55c96ba7f238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55c96ba7f398 <line:643:22>
| `-NonNullAttr 0x55c96ba7f3f0 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba7f618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55c96ba7f438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55c96ba7f4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55c96ba7f6c8 <line:647:22>
| `-NonNullAttr 0x55c96ba7f720 <col:63, col:80> 1 2
|-FunctionDecl 0x55c96ba7f928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55c96ba7f768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55c96ba7f7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55c96ba7f9d8 <line:650:22>
| `-NonNullAttr 0x55c96ba7fa30 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba7fd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55c96ba7fb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55c96ba7fc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55c96ba7fe28 <line:653:22>
| `-NonNullAttr 0x55c96ba7fe80 <col:63, col:77> 1
|-FunctionDecl 0x55c96ba7ffe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55c96ba7fec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55c96ba80090 <col:69>
|-FunctionDecl 0x55c96ba80208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55c96ba800f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55c96ba802b0 <col:72>
|-FunctionDecl 0x55c96ba804e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55c96ba80318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55c96ba803c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55c96ba80598 <col:44>
|-FunctionDecl 0x55c96ba807b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55c96ba80600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55c96ba80678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55c96ba80868 <line:660:22>
| `-NonNullAttr 0x55c96ba808c0 <col:63, col:77> 2
|-FunctionDecl 0x55c96ba80d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55c96ba809a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55c96ba80ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55c96ba80bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55c96ba80dc0 <col:47>
|-FunctionDecl 0x55c96ba81f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55c96ba80e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55c96ba820b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55c96ba82020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55c96ba82180 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55c96ba82240 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55c96ba82300 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55c96ba823b8 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55c96ba82438 prev 0x55c96ba823b8 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55c96ba824a0 <col:24> 'int' 0
|-VarDecl 0x55c96ba824d8 <line:672:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55c96ba82558 prev 0x55c96ba824d8 <line:673:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55c96ba825c0 <col:27> 'int' 0
|-VarDecl 0x55c96ba825f8 <line:674:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55c96ba82678 prev 0x55c96ba825f8 <line:675:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55c96ba826e0 <col:27> 'int' 0
|-VarDecl 0x55c96ba82710 <line:676:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55c96ba82788 <line:677:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55c96ba82808 <line:678:1, col:5> col:5 used x 'int'
|-VarDecl 0x55c96ba82888 prev 0x55c96ba82808 <line:679:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55c96ba828f0 <col:9> 'int' 0
|-VarDecl 0x55c96ba82928 <line:680:1, col:5> col:5 used y 'int'
|-VarDecl 0x55c96ba829a8 prev 0x55c96ba82928 <line:681:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55c96ba82a10 <col:9> 'int' 0
|-VarDecl 0x55c96ba82a40 <line:682:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55c96ba82ac0 <line:683:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55c96ba82b38 <line:684:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55c96ba82bb0 <line:685:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55c96ba82c28 <line:686:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55c96ba82ca0 <line:687:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55c96ba82d18 <line:688:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55c96ba82d90 <line:689:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55c96ba82e08 <line:690:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55c96ba82e88 <line:691:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55c96ba82f70 <line:692:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55c96ba82fe8 <line:693:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55c96ba83068 <line:694:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55c96ba830e0 <line:695:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55c96ba83158 <line:696:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55c96ba831d0 <line:697:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55c96ba832e8 prev 0x55c96ba81f60 <line:698:1, line:725:1> line:698:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55c96ba83250 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55c96ba84a88 <line:699:1, line:725:1>
|   |-CallExpr 0x55c96ba833f8 <line:700:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c96ba833e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba83390 <col:3> 'void ()' Function 0x55c96ba29350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c96ba83470 <line:701:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55c96ba83418 <col:3> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55c96ba83458 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c96ba83438 <col:15> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55c96ba834d0 <line:702:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55c96ba83490 <col:3> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55c96ba834b0 <col:15> 'int' 2
|   |-BinaryOperator 0x55c96ba83548 <line:703:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba834f0 <col:3> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba83530 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c96ba83510 <col:20> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55c96ba835e0 <line:704:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba83568 <col:3> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55c96ba835b8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55c96ba83588 <col:27> 'int' 1
|   |-CallExpr 0x55c96ba83768 <line:705:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55c96ba83750 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55c96ba83600 <col:3> 'void (int)' Function 0x55c96ba290d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55c96ba83700 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55c96ba836e0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55c96ba836c0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55c96ba83678 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55c96ba83660 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55c96ba83620 <col:23> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55c96ba836a8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55c96ba83690 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55c96ba83640 <col:41> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55c96ba837e8 <line:706:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba83790 <col:3> '_Bool' lvalue Var 0x55c96ba82ca0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba837d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c96ba837b0 <col:20> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55c96ba83860 <line:707:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba83808 <col:3> '_Bool' lvalue Var 0x55c96ba82d18 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba83848 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c96ba83828 <col:20> '_Bool' lvalue Var 0x55c96ba82bb0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55c96ba838d8 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba83880 <col:3> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba838c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c96ba838a0 <col:20> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55c96ba83970 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba838f8 <col:3> '_Bool' lvalue Var 0x55c96ba82bb0 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55c96ba83948 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55c96ba83918 <col:27> 'int' 1
|   |-CallExpr 0x55c96ba839c8 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c96ba839b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba83990 <col:3> 'void ()' Function 0x55c96ba29410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c96ba83a20 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c96ba83a08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba839e8 <col:3> 'void ()' Function 0x55c96ba29350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c96ba83a80 <line:712:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55c96ba83a40 <col:3> 'int' lvalue Var 0x55c96ba82888 'x' 'int'
|   | `-IntegerLiteral 0x55c96ba83a60 <col:7> 'int' 1
|   |-CallExpr 0x55c96ba83ad8 <line:713:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c96ba83ac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba83aa0 <col:3> 'void ()' Function 0x55c96ba29410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c96ba83b30 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c96ba83b18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba83af8 <col:3> 'void ()' Function 0x55c96ba29350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c96ba83e18 <line:715:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55c96ba83b50 <col:3> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   | `-ConditionalOperator 0x55c96ba83de8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55c96ba83c10 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55c96ba83bc8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55c96ba83bb0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55c96ba83b70 <col:7> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55c96ba83bf8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55c96ba83be0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55c96ba83b90 <col:25> '_Bool' lvalue Var 0x55c96ba82bb0 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55c96ba83dd0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c96ba83c30 <col:42> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55c96ba83db0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55c96ba83d80 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55c96ba83cf0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55c96ba83ca8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55c96ba83c90 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55c96ba83c50 <col:55> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55c96ba83cd8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55c96ba83cc0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55c96ba83c70 <col:73> '_Bool' lvalue Var 0x55c96ba82d18 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55c96ba83d50 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c96ba83d10 <col:90> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55c96ba83d68 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c96ba83d30 <col:102> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   |-BinaryOperator 0x55c96ba84030 <line:716:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba83e38 <col:3> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba84018 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c96ba83fe8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55c96ba83ef8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55c96ba83eb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55c96ba83e98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55c96ba83e58 <col:20> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55c96ba83ee0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55c96ba83ec8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55c96ba83e78 <col:38> '_Bool' lvalue Var 0x55c96ba82bb0 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55c96ba83fa0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c96ba83f48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c96ba83f18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55c96ba83fd0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c96ba83fb8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c96ba83f80 <col:66> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55c96ba84318 <line:717:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba84050 <col:3> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba84300 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c96ba842d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55c96ba841f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55c96ba84110 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55c96ba840c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55c96ba840b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55c96ba84070 <col:20> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55c96ba840f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55c96ba840e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55c96ba84090 <col:38> '_Bool' lvalue Var 0x55c96ba82bb0 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55c96ba841d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55c96ba84188 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55c96ba84170 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55c96ba84130 <col:56> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55c96ba841b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55c96ba841a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55c96ba84150 <col:74> '_Bool' lvalue Var 0x55c96ba82d18 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55c96ba84288 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c96ba84240 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c96ba84210 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55c96ba842b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c96ba842a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c96ba84268 <col:102> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55c96ba84520 <line:718:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba84338 <col:3> '_Bool' lvalue Var 0x55c96ba82bb0 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba84508 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c96ba844d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55c96ba843f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55c96ba843b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55c96ba84398 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55c96ba84358 <col:20> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55c96ba843e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55c96ba843c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55c96ba84378 <col:38> '_Bool' lvalue Var 0x55c96ba82bb0 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55c96ba84490 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c96ba84448 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c96ba84418 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55c96ba844c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c96ba844a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c96ba84470 <col:66> '_Bool' lvalue Var 0x55c96ba82bb0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55c96ba84808 <line:719:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba84540 <col:3> '_Bool' lvalue Var 0x55c96ba82d18 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba847f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c96ba847c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55c96ba846e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55c96ba84600 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55c96ba845b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55c96ba845a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55c96ba84560 <col:20> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55c96ba845e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55c96ba845d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55c96ba84580 <col:38> '_Bool' lvalue Var 0x55c96ba82bb0 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55c96ba846c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55c96ba84678 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55c96ba84660 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55c96ba84620 <col:56> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55c96ba846a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55c96ba84690 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55c96ba84640 <col:74> '_Bool' lvalue Var 0x55c96ba82d18 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55c96ba84778 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c96ba84730 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c96ba84700 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55c96ba847a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c96ba84790 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c96ba84758 <col:102> '_Bool' lvalue Var 0x55c96ba82d18 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55c96ba84860 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c96ba84848 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba84828 <col:3> 'void ()' Function 0x55c96ba29410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c96ba848b8 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c96ba848a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba84880 <col:3> 'void ()' Function 0x55c96ba29350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c96ba84970 <line:722:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55c96ba848d8 <col:3> 'int' lvalue Var 0x55c96ba82438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55c96ba84950 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55c96ba84938 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c96ba848f8 <col:22> 'int' lvalue Var 0x55c96ba82438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55c96ba84918 <col:41> 'int' 1
|   |-CallExpr 0x55c96ba849c8 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c96ba849b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba84990 <col:3> 'void ()' Function 0x55c96ba29410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55c96ba84a78 <line:724:3, col:36>
|     `-CallExpr 0x55c96ba84a58 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55c96ba84a40 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55c96ba849e8 <col:10> 'void *(void)' Function 0x55c96ba28e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55c96ba84c10 prev 0x55c96ba820b8 <line:726:1, line:777:1> line:726:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55c96ba84b78 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55c96ba8b3c8 <line:727:1, line:777:1>
|   |-CallExpr 0x55c96ba84cf0 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c96ba84cd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba84cb8 <col:3> 'void ()' Function 0x55c96ba29350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c96ba84d50 <line:729:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55c96ba84d10 <col:3> 'int' lvalue Var 0x55c96ba82888 'x' 'int'
|   | `-IntegerLiteral 0x55c96ba84d30 <col:7> 'int' 2
|   |-CallExpr 0x55c96ba84da8 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c96ba84d90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba84d70 <col:3> 'void ()' Function 0x55c96ba29410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c96ba84e00 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c96ba84de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba84dc8 <col:3> 'void ()' Function 0x55c96ba29350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c96ba84e60 <line:732:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55c96ba84e20 <col:3> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   | `-IntegerLiteral 0x55c96ba84e40 <col:7> 'int' 1
|   |-CallExpr 0x55c96ba84eb8 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c96ba84ea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba84e80 <col:3> 'void ()' Function 0x55c96ba29410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c96ba84f10 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c96ba84ef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba84ed8 <col:3> 'void ()' Function 0x55c96ba29350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c96ba84fe0 <line:735:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba84f30 <col:3> '_Bool' lvalue Var 0x55c96ba83158 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba84fc8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55c96ba84fa8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55c96ba84f90 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55c96ba84f50 <col:19> 'void *(void)' Function 0x55c96ba28e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55c96ba85090 <line:736:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba85000 <col:3> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba85078 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55c96ba85058 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55c96ba85040 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55c96ba85020 <col:19> 'void *(void)' Function 0x55c96ba28e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55c96ba85108 <line:737:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba850b0 <col:3> '_Bool' lvalue Var 0x55c96ba82a40 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba850f0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c96ba850d0 <col:21> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55c96ba85180 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55c96ba85128 <col:3> 'int' lvalue Var 0x55c96ba82ac0 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55c96ba85168 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c96ba85148 <col:15> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   |-BinaryOperator 0x55c96ba855b8 <line:739:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55c96ba851a0 <col:3> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   | `-ConditionalOperator 0x55c96ba85588 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55c96ba853b0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55c96ba852d0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55c96ba851f8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55c96ba851e0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55c96ba851c0 <col:8> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55c96ba852b0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55c96ba85248 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55c96ba85230 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55c96ba85210 <col:27> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55c96ba85298 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55c96ba85280 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55c96ba85260 <col:46> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55c96ba85390 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55c96ba85328 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55c96ba85310 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55c96ba852f0 <col:65> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55c96ba85378 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55c96ba85360 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55c96ba85340 <col:84> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55c96ba85570 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c96ba853d0 <col:101> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   |   `-ParenExpr 0x55c96ba85550 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55c96ba85520 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55c96ba85490 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55c96ba85448 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55c96ba85430 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55c96ba853f0 <col:106> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55c96ba85478 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55c96ba85460 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55c96ba85410 <col:124> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55c96ba854f0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c96ba854b0 <col:141> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55c96ba85508 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c96ba854d0 <col:153> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55c96ba85ac8 <line:740:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55c96ba855d8 <col:3> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55c96ba85a98 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55c96ba85a68 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55c96ba85a50 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55c96ba855f8 <col:15> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55c96ba85a80 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c96ba85618 <col:31> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55c96ba85a30 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55c96ba85a00 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55c96ba85828 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55c96ba85748 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55c96ba85670 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55c96ba85658 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55c96ba85638 <col:45> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55c96ba85728 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55c96ba856c0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55c96ba856a8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55c96ba85688 <col:64> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55c96ba85710 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55c96ba856f8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55c96ba856d8 <col:83> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55c96ba85808 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55c96ba857a0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55c96ba85788 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55c96ba85768 <col:102> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55c96ba857f0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55c96ba857d8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55c96ba857b8 <col:121> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55c96ba859e8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c96ba85848 <col:138> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55c96ba859c8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55c96ba85998 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55c96ba85908 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55c96ba858c0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55c96ba858a8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55c96ba85868 <col:151> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55c96ba858f0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55c96ba858d8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55c96ba85888 <col:169> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55c96ba85968 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55c96ba85928 <col:186> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55c96ba85980 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55c96ba85948 <col:198> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55c96ba85fe8 <line:741:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55c96ba85ae8 <col:3> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55c96ba85fb8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55c96ba85f78 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55c96ba85f60 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55c96ba85b08 <col:15> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55c96ba85fa0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c96ba85b28 <col:31> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55c96ba85f40 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55c96ba85f10 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55c96ba85d38 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55c96ba85c58 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55c96ba85b80 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55c96ba85b68 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55c96ba85b48 <col:45> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55c96ba85c38 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55c96ba85bd0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55c96ba85bb8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55c96ba85b98 <col:64> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55c96ba85c20 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55c96ba85c08 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55c96ba85be8 <col:83> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55c96ba85d18 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55c96ba85cb0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55c96ba85c98 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55c96ba85c78 <col:102> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55c96ba85d00 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55c96ba85ce8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55c96ba85cc8 <col:121> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55c96ba85ef8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c96ba85d58 <col:138> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55c96ba85ed8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55c96ba85ea8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55c96ba85e18 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55c96ba85dd0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55c96ba85db8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55c96ba85d78 <col:151> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55c96ba85e00 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55c96ba85de8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55c96ba85d98 <col:169> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55c96ba85e78 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55c96ba85e38 <col:186> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55c96ba85e90 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55c96ba85e58 <col:198> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55c96ba86590 <line:742:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba86008 <col:3> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba86578 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c96ba86548 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55c96ba86500 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c96ba864e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c96ba86028 <col:20> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c96ba86530 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c96ba86518 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c96ba86048 <col:36> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55c96ba864c8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55c96ba86498 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55c96ba86258 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55c96ba86178 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55c96ba860a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55c96ba86088 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55c96ba86068 <col:55> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55c96ba86158 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55c96ba860f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55c96ba860d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55c96ba860b8 <col:74> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55c96ba86140 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55c96ba86128 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55c96ba86108 <col:93> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55c96ba86238 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55c96ba861d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55c96ba861b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55c96ba86198 <col:112> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55c96ba86220 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55c96ba86208 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55c96ba861e8 <col:131> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55c96ba86480 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55c96ba86468 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55c96ba86278 <col:148> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55c96ba86448 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55c96ba86418 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55c96ba86338 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55c96ba862f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55c96ba862d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55c96ba86298 <col:166> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55c96ba86320 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55c96ba86308 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55c96ba862b8 <col:184> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55c96ba863d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55c96ba86388 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55c96ba86358 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55c96ba86400 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55c96ba863e8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55c96ba863b0 <col:212> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55c96ba86b58 <line:743:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba865b0 <col:3> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba86b40 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c96ba86b10 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55c96ba86ac8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c96ba86ab0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c96ba865d0 <col:20> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c96ba86af8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c96ba86ae0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c96ba865f0 <col:36> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55c96ba86a90 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55c96ba86a60 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55c96ba86800 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55c96ba86720 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55c96ba86648 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55c96ba86630 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55c96ba86610 <col:55> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55c96ba86700 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55c96ba86698 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55c96ba86680 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55c96ba86660 <col:74> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55c96ba866e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55c96ba866d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55c96ba866b0 <col:93> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55c96ba867e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55c96ba86778 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55c96ba86760 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55c96ba86740 <col:112> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55c96ba867c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55c96ba867b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55c96ba86790 <col:131> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55c96ba86a48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55c96ba86a30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55c96ba86820 <col:148> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55c96ba86a10 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55c96ba869e0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55c96ba868e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55c96ba86898 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55c96ba86880 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55c96ba86840 <col:166> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55c96ba868c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55c96ba868b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55c96ba86860 <col:184> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55c96ba869b0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55c96ba86930 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55c96ba86900 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55c96ba869c8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55c96ba86988 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55c96ba86958 <col:219> 'int' 0
|   |-BinaryOperator 0x55c96ba87128 <line:744:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba86b78 <col:3> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba87110 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c96ba870e0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55c96ba87098 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c96ba87080 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c96ba86b98 <col:20> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c96ba870c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c96ba870b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c96ba86bb8 <col:36> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55c96ba87060 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55c96ba87030 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55c96ba86dc8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55c96ba86ce8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55c96ba86c10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55c96ba86bf8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55c96ba86bd8 <col:55> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55c96ba86cc8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55c96ba86c60 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55c96ba86c48 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55c96ba86c28 <col:74> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55c96ba86cb0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55c96ba86c98 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55c96ba86c78 <col:93> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55c96ba86da8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55c96ba86d40 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55c96ba86d28 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55c96ba86d08 <col:112> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55c96ba86d90 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55c96ba86d78 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55c96ba86d58 <col:131> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55c96ba87018 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55c96ba87000 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55c96ba86de8 <col:148> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55c96ba86fe0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55c96ba86fb0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55c96ba86ea8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55c96ba86e60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55c96ba86e48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55c96ba86e08 <col:166> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55c96ba86e90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55c96ba86e78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55c96ba86e28 <col:184> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55c96ba86f40 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55c96ba86ef8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55c96ba86ec8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55c96ba86f70 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55c96ba86f58 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55c96ba86f20 <col:212> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55c96ba876f0 <line:745:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba87148 <col:3> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba876d8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c96ba876a8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55c96ba87660 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c96ba87648 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c96ba87168 <col:20> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c96ba87690 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c96ba87678 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c96ba87188 <col:36> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55c96ba87628 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55c96ba875f8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55c96ba87398 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55c96ba872b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55c96ba871e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55c96ba871c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55c96ba871a8 <col:55> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55c96ba87298 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55c96ba87230 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55c96ba87218 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55c96ba871f8 <col:74> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55c96ba87280 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55c96ba87268 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55c96ba87248 <col:93> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55c96ba87378 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55c96ba87310 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55c96ba872f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55c96ba872d8 <col:112> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55c96ba87360 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55c96ba87348 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55c96ba87328 <col:131> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55c96ba875e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55c96ba875c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55c96ba873b8 <col:148> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55c96ba875a8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55c96ba87578 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55c96ba87478 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55c96ba87430 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55c96ba87418 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55c96ba873d8 <col:166> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55c96ba87460 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55c96ba87448 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55c96ba873f8 <col:184> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55c96ba87548 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55c96ba874c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55c96ba87498 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55c96ba87560 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55c96ba87520 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55c96ba874f0 <col:219> 'int' 0
|   |-BinaryOperator 0x55c96ba87768 <line:746:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55c96ba87710 <col:3> 'int' lvalue Var 0x55c96ba82558 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55c96ba87750 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c96ba87730 <col:25> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   |-BinaryOperator 0x55c96ba87898 <line:747:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55c96ba87788 <col:3> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   | `-ConditionalOperator 0x55c96ba87868 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55c96ba87820 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55c96ba87808 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55c96ba877a8 <col:7> '_Bool' lvalue Var 0x55c96ba82a40 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55c96ba87838 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c96ba877c8 <col:25> 'int' lvalue Var 0x55c96ba82ac0 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55c96ba87850 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55c96ba877e8 <col:37> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   |-BinaryOperator 0x55c96ba87930 <line:748:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba878b8 <col:3> '_Bool' lvalue Var 0x55c96ba82a40 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55c96ba87908 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55c96ba878d8 <col:28> 'int' 0
|   |-CallExpr 0x55c96ba87988 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c96ba87970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba87950 <col:3> 'void ()' Function 0x55c96ba29410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c96ba879e0 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c96ba879c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba879a8 <col:3> 'void ()' Function 0x55c96ba29350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c96ba87a90 <line:751:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba87a00 <col:3> '_Bool' lvalue Var 0x55c96ba83158 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba87a78 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55c96ba87a58 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55c96ba87a40 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55c96ba87a20 <col:19> 'void *(void)' Function 0x55c96ba28e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55c96ba87b40 <line:752:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba87ab0 <col:3> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba87b28 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55c96ba87b08 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55c96ba87af0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55c96ba87ad0 <col:19> 'void *(void)' Function 0x55c96ba28e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55c96ba87bb8 <line:753:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba87b60 <col:3> '_Bool' lvalue Var 0x55c96ba82a40 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba87ba0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c96ba87b80 <col:21> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55c96ba87c30 <line:754:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55c96ba87bd8 <col:3> 'int' lvalue Var 0x55c96ba82ac0 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55c96ba87c18 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c96ba87bf8 <col:15> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   |-BinaryOperator 0x55c96ba88088 <line:755:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55c96ba87c50 <col:3> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   | `-ConditionalOperator 0x55c96ba88058 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55c96ba87e60 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55c96ba87d80 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55c96ba87ca8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55c96ba87c90 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55c96ba87c70 <col:8> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55c96ba87d60 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55c96ba87cf8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55c96ba87ce0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55c96ba87cc0 <col:27> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55c96ba87d48 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55c96ba87d30 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55c96ba87d10 <col:46> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55c96ba87e40 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55c96ba87dd8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55c96ba87dc0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55c96ba87da0 <col:65> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55c96ba87e28 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55c96ba87e10 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55c96ba87df0 <col:84> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55c96ba88040 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c96ba87e80 <col:101> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   |   `-ParenExpr 0x55c96ba88020 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55c96ba87ff0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55c96ba87f40 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55c96ba87ef8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55c96ba87ee0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55c96ba87ea0 <col:106> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55c96ba87f28 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55c96ba87f10 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55c96ba87ec0 <col:124> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55c96ba87fc0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c96ba87f60 <col:141> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55c96ba87fd8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c96ba87f80 <col:153> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55c96ba88598 <line:756:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55c96ba880a8 <col:3> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55c96ba88568 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55c96ba88538 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55c96ba88520 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55c96ba880c8 <col:15> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55c96ba88550 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c96ba880e8 <col:31> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55c96ba88500 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55c96ba884d0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55c96ba882f8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55c96ba88218 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55c96ba88140 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55c96ba88128 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55c96ba88108 <col:45> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55c96ba881f8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55c96ba88190 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55c96ba88178 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55c96ba88158 <col:64> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55c96ba881e0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55c96ba881c8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55c96ba881a8 <col:83> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55c96ba882d8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55c96ba88270 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55c96ba88258 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55c96ba88238 <col:102> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55c96ba882c0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55c96ba882a8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55c96ba88288 <col:121> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55c96ba884b8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c96ba88318 <col:138> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55c96ba88498 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55c96ba88468 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55c96ba883d8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55c96ba88390 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55c96ba88378 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55c96ba88338 <col:151> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55c96ba883c0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55c96ba883a8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55c96ba88358 <col:169> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55c96ba88438 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55c96ba883f8 <col:186> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55c96ba88450 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55c96ba88418 <col:198> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55c96ba88aa8 <line:757:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55c96ba885b8 <col:3> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55c96ba88a78 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55c96ba88a48 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55c96ba88a30 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55c96ba885d8 <col:15> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55c96ba88a60 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c96ba885f8 <col:31> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55c96ba88a10 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55c96ba889e0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55c96ba88808 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55c96ba88728 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55c96ba88650 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55c96ba88638 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55c96ba88618 <col:45> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55c96ba88708 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55c96ba886a0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55c96ba88688 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55c96ba88668 <col:64> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55c96ba886f0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55c96ba886d8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55c96ba886b8 <col:83> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55c96ba887e8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55c96ba88780 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55c96ba88768 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55c96ba88748 <col:102> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55c96ba887d0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55c96ba887b8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55c96ba88798 <col:121> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55c96ba889c8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c96ba88828 <col:138> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55c96ba889a8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55c96ba88978 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55c96ba888e8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55c96ba888a0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55c96ba88888 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55c96ba88848 <col:151> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55c96ba888d0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55c96ba888b8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55c96ba88868 <col:169> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55c96ba88948 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55c96ba88908 <col:186> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55c96ba88960 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55c96ba88928 <col:198> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55c96ba89060 <line:758:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba88ac8 <col:3> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba89048 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c96ba89018 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55c96ba88fd0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c96ba88fa8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c96ba88ae8 <col:20> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c96ba89000 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c96ba88fe8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c96ba88b08 <col:36> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55c96ba88f88 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55c96ba88f58 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55c96ba88d18 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55c96ba88c38 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55c96ba88b60 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55c96ba88b48 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55c96ba88b28 <col:55> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55c96ba88c18 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55c96ba88bb0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55c96ba88b98 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55c96ba88b78 <col:74> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55c96ba88c00 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55c96ba88be8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55c96ba88bc8 <col:93> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55c96ba88cf8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55c96ba88c90 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55c96ba88c78 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55c96ba88c58 <col:112> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55c96ba88ce0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55c96ba88cc8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55c96ba88ca8 <col:131> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55c96ba88f40 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55c96ba88f28 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55c96ba88d38 <col:148> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55c96ba88f08 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55c96ba88ed8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55c96ba88df8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55c96ba88db0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55c96ba88d98 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55c96ba88d58 <col:166> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55c96ba88de0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55c96ba88dc8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55c96ba88d78 <col:184> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55c96ba88e90 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55c96ba88e48 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55c96ba88e18 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55c96ba88ec0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55c96ba88ea8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55c96ba88e70 <col:212> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55c96ba89628 <line:759:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba89080 <col:3> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba89610 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c96ba895e0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55c96ba89598 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c96ba89580 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c96ba890a0 <col:20> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c96ba895c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c96ba895b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c96ba890c0 <col:36> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55c96ba89560 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55c96ba89530 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55c96ba892d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55c96ba891f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55c96ba89118 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55c96ba89100 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55c96ba890e0 <col:55> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55c96ba891d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55c96ba89168 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55c96ba89150 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55c96ba89130 <col:74> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55c96ba891b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55c96ba891a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55c96ba89180 <col:93> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55c96ba892b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55c96ba89248 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55c96ba89230 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55c96ba89210 <col:112> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55c96ba89298 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55c96ba89280 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55c96ba89260 <col:131> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55c96ba89518 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55c96ba89500 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55c96ba892f0 <col:148> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55c96ba894e0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55c96ba894b0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55c96ba893b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55c96ba89368 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55c96ba89350 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55c96ba89310 <col:166> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55c96ba89398 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55c96ba89380 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55c96ba89330 <col:184> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55c96ba89480 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55c96ba89400 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55c96ba893d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55c96ba89498 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55c96ba89458 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55c96ba89428 <col:219> 'int' 0
|   |-BinaryOperator 0x55c96ba89bd0 <line:760:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba89648 <col:3> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba89bb8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c96ba89b88 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55c96ba89b40 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c96ba89b28 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c96ba89668 <col:20> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c96ba89b70 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c96ba89b58 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c96ba89688 <col:36> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55c96ba89b08 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55c96ba89ad8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55c96ba89898 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55c96ba897b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55c96ba896e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55c96ba896c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55c96ba896a8 <col:55> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55c96ba89798 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55c96ba89730 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55c96ba89718 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55c96ba896f8 <col:74> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55c96ba89780 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55c96ba89768 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55c96ba89748 <col:93> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55c96ba89878 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55c96ba89810 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55c96ba897f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55c96ba897d8 <col:112> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55c96ba89860 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55c96ba89848 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55c96ba89828 <col:131> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55c96ba89ac0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55c96ba89aa8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55c96ba898b8 <col:148> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55c96ba89a88 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55c96ba89a58 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55c96ba89978 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55c96ba89930 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55c96ba89918 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55c96ba898d8 <col:166> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55c96ba89960 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55c96ba89948 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55c96ba898f8 <col:184> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55c96ba89a10 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55c96ba899c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55c96ba89998 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55c96ba89a40 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55c96ba89a28 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55c96ba899f0 <col:212> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55c96ba8a1b0 <line:761:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba89bf0 <col:3> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba8a198 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c96ba8a168 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55c96ba8a120 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c96ba8a108 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c96ba89c10 <col:20> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c96ba8a150 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55c96ba8a138 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55c96ba89c30 <col:36> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55c96ba8a0e8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55c96ba8a0b8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55c96ba89e40 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55c96ba89d60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55c96ba89c88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55c96ba89c70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55c96ba89c50 <col:55> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55c96ba89d40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55c96ba89cd8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55c96ba89cc0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55c96ba89ca0 <col:74> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55c96ba89d28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55c96ba89d10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55c96ba89cf0 <col:93> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55c96ba89e20 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55c96ba89db8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55c96ba89da0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55c96ba89d80 <col:112> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55c96ba89e08 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55c96ba89df0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55c96ba89dd0 <col:131> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55c96ba8a0a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55c96ba8a088 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55c96ba89e60 <col:148> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55c96ba8a068 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55c96ba8a038 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55c96ba89f20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55c96ba89ed8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55c96ba89ec0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55c96ba89e80 <col:166> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55c96ba89f08 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55c96ba89ef0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55c96ba89ea0 <col:184> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55c96ba8a008 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55c96ba89f70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55c96ba89f40 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55c96ba8a020 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55c96ba89fe0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55c96ba89f98 <col:219> 'int' 0
|   |-BinaryOperator 0x55c96ba8a228 <line:762:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55c96ba8a1d0 <col:3> 'int' lvalue Var 0x55c96ba82678 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55c96ba8a210 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c96ba8a1f0 <col:25> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   |-BinaryOperator 0x55c96ba8a358 <line:763:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55c96ba8a248 <col:3> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   | `-ConditionalOperator 0x55c96ba8a328 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55c96ba8a2e0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55c96ba8a2c8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55c96ba8a268 <col:7> '_Bool' lvalue Var 0x55c96ba82a40 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55c96ba8a2f8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c96ba8a288 <col:25> 'int' lvalue Var 0x55c96ba82ac0 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55c96ba8a310 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55c96ba8a2a8 <col:37> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   |-BinaryOperator 0x55c96ba8a3f0 <line:764:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba8a378 <col:3> '_Bool' lvalue Var 0x55c96ba82a40 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55c96ba8a3c8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55c96ba8a398 <col:28> 'int' 0
|   |-CallExpr 0x55c96ba8a448 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c96ba8a430 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba8a410 <col:3> 'void ()' Function 0x55c96ba29410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c96ba8a4a0 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c96ba8a488 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba8a468 <col:3> 'void ()' Function 0x55c96ba29350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c96ba8a788 <line:767:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55c96ba8a4c0 <col:3> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   | `-ConditionalOperator 0x55c96ba8a758 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55c96ba8a580 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55c96ba8a538 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55c96ba8a520 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55c96ba8a4e0 <col:7> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55c96ba8a568 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55c96ba8a550 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55c96ba8a500 <col:25> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55c96ba8a740 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c96ba8a5a0 <col:42> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55c96ba8a720 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55c96ba8a6f0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55c96ba8a660 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55c96ba8a618 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55c96ba8a600 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55c96ba8a5c0 <col:55> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55c96ba8a648 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55c96ba8a630 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55c96ba8a5e0 <col:73> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55c96ba8a6c0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55c96ba8a680 <col:90> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55c96ba8a6d8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c96ba8a6a0 <col:102> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
|   |-BinaryOperator 0x55c96ba8a990 <line:768:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba8a7a8 <col:3> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba8a978 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c96ba8a948 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55c96ba8a868 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55c96ba8a820 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55c96ba8a808 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55c96ba8a7c8 <col:20> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55c96ba8a850 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55c96ba8a838 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55c96ba8a7e8 <col:38> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c96ba8a900 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c96ba8a8b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c96ba8a888 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55c96ba8a930 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c96ba8a918 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c96ba8a8e0 <col:66> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55c96ba8ac78 <line:769:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba8a9b0 <col:3> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba8ac60 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c96ba8ac30 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55c96ba8ab50 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55c96ba8aa70 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55c96ba8aa28 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55c96ba8aa10 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55c96ba8a9d0 <col:20> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55c96ba8aa58 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55c96ba8aa40 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55c96ba8a9f0 <col:38> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55c96ba8ab30 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55c96ba8aae8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55c96ba8aad0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55c96ba8aa90 <col:56> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55c96ba8ab18 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55c96ba8ab00 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55c96ba8aab0 <col:74> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c96ba8abe8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c96ba8aba0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c96ba8ab70 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55c96ba8ac18 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c96ba8ac00 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c96ba8abc8 <col:102> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55c96ba8ae80 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba8ac98 <col:3> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba8ae68 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c96ba8ae38 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55c96ba8ad58 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55c96ba8ad10 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55c96ba8acf8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55c96ba8acb8 <col:20> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55c96ba8ad40 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55c96ba8ad28 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55c96ba8acd8 <col:38> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c96ba8adf0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c96ba8ada8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c96ba8ad78 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55c96ba8ae20 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c96ba8ae08 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c96ba8add0 <col:66> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55c96ba8b180 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55c96ba8aea0 <col:3> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55c96ba8b168 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55c96ba8b138 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55c96ba8b058 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55c96ba8af60 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55c96ba8af18 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55c96ba8af00 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55c96ba8aec0 <col:20> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55c96ba8af48 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55c96ba8af30 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55c96ba8aee0 <col:38> '_Bool' lvalue Var 0x55c96ba82c28 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55c96ba8b038 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55c96ba8aff0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55c96ba8afc0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55c96ba8af80 <col:56> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55c96ba8b020 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55c96ba8b008 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55c96ba8afa0 <col:74> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55c96ba8b0f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55c96ba8b0a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55c96ba8b078 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55c96ba8b120 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55c96ba8b108 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55c96ba8b0d0 <col:102> '_Bool' lvalue Var 0x55c96ba82d90 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55c96ba8b1d8 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c96ba8b1c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba8b1a0 <col:3> 'void ()' Function 0x55c96ba29410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55c96ba8b230 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55c96ba8b218 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba8b1f8 <col:3> 'void ()' Function 0x55c96ba29350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55c96ba8b2e8 <line:774:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55c96ba8b250 <col:3> 'int' lvalue Var 0x55c96ba82438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55c96ba8b2c8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55c96ba8b2b0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c96ba8b270 <col:22> 'int' lvalue Var 0x55c96ba82438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55c96ba8b290 <col:41> 'int' 1
|   |-CallExpr 0x55c96ba8b340 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55c96ba8b328 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c96ba8b308 <col:3> 'void ()' Function 0x55c96ba29410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55c96ba8b3b8 <line:776:3, col:36>
|     `-CallExpr 0x55c96ba8b398 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55c96ba8b380 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55c96ba8b360 <col:10> 'void *(void)' Function 0x55c96ba28e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55c96ba8b580 prev 0x55c96ba82180 <line:778:1, line:780:1> line:778:6 fence 'void ()'
| `-CompoundStmt 0x55c96ba8b620 <line:779:1, line:780:1>
|-FunctionDecl 0x55c96ba8b650 prev 0x55c96ba82240 <line:781:1, line:783:1> line:781:6 isync 'void ()'
| `-CompoundStmt 0x55c96ba8b6f0 <line:782:1, line:783:1>
|-FunctionDecl 0x55c96ba8b720 prev 0x55c96ba82300 <line:784:1, line:786:1> line:784:6 lwfence 'void ()'
| `-CompoundStmt 0x55c96ba8b7c0 <line:785:1, line:786:1>
`-FunctionDecl 0x55c96ba8b828 <line:787:1, line:822:1> line:787:5 main 'int ()'
  `-CompoundStmt 0x55c96ba8fc00 <line:788:1, line:822:1>
    |-DeclStmt 0x55c96ba8b940 <line:789:3, col:18>
    | `-VarDecl 0x55c96ba8b8d8 <col:3, col:13> col:13 used t1595 'pthread_t':'unsigned long'
    |-CallExpr 0x55c96ba8bb48 <line:790:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55c96ba8bb30 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55c96ba8b958 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55c96ba698f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55c96ba8b998 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55c96ba8b978 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55c96ba8b8d8 't1595' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55c96ba8bb88 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55c96ba8ba10 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55c96ba8b9e8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55c96ba8b9b0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55c96ba8bba0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55c96ba8ba30 <col:39> 'void *(void *)' Function 0x55c96ba832e8 'P0' 'void *(void *)'
    | `-ParenExpr 0x55c96ba8bab0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55c96ba8ba88 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55c96ba8ba50 <col:52> 'int' 0
    |-DeclStmt 0x55c96ba8bc30 <line:791:3, col:18>
    | `-VarDecl 0x55c96ba8bbc8 <col:3, col:13> col:13 used t1596 'pthread_t':'unsigned long'
    |-CallExpr 0x55c96ba8bdd8 <line:792:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55c96ba8bdc0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55c96ba8bc48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55c96ba698f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55c96ba8bc88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55c96ba8bc68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55c96ba8bbc8 't1596' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55c96ba8be18 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55c96ba8bd00 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55c96ba8bcd8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55c96ba8bca0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55c96ba8be30 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55c96ba8bd20 <col:39> 'void *(void *)' Function 0x55c96ba84c10 'P1' 'void *(void *)'
    | `-ParenExpr 0x55c96ba8bda0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55c96ba8bd78 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55c96ba8bd40 <col:52> 'int' 0
    |-CallExpr 0x55c96ba8be80 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55c96ba8be68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55c96ba8be48 <col:3> 'void ()' Function 0x55c96ba29350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55c96ba8bf50 <line:794:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55c96ba8bea0 <col:3> '_Bool' lvalue Var 0x55c96ba82710 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55c96ba8bf38 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55c96ba8bf18 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55c96ba8bf00 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55c96ba8bec0 <col:21> 'int' lvalue Var 0x55c96ba82438 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55c96ba8bee0 <col:41> 'int' 2
    |-CallExpr 0x55c96ba8bfa8 <line:795:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55c96ba8bf90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55c96ba8bf70 <col:3> 'void ()' Function 0x55c96ba29410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55c96ba8c038 <line:796:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55c96ba8c020 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55c96ba8bfc8 <col:3> 'void (int)' Function 0x55c96ba28ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55c96ba8c078 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55c96ba8c060 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55c96ba8c000 <col:21> '_Bool' lvalue Var 0x55c96ba82710 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55c96ba8c0c8 <line:797:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55c96ba8c0b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55c96ba8c090 <col:3> 'void ()' Function 0x55c96ba29350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55c96ba8c3b0 <line:798:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55c96ba8c0e8 <col:3> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
    | `-ConditionalOperator 0x55c96ba8c380 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55c96ba8c1a8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55c96ba8c160 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55c96ba8c148 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55c96ba8c108 <col:7> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55c96ba8c190 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55c96ba8c178 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55c96ba8c128 <col:25> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55c96ba8c368 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55c96ba8c1c8 <col:42> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55c96ba8c348 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55c96ba8c318 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55c96ba8c288 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55c96ba8c240 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55c96ba8c228 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55c96ba8c1e8 <col:55> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55c96ba8c270 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55c96ba8c258 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55c96ba8c208 <col:73> '_Bool' lvalue Var 0x55c96ba82ca0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55c96ba8c2e8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55c96ba8c2a8 <col:90> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55c96ba8c300 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55c96ba8c2c8 <col:102> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
    |-BinaryOperator 0x55c96ba8c5b8 <line:799:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55c96ba8c3d0 <col:3> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55c96ba8c5a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55c96ba8c570 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55c96ba8c490 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55c96ba8c448 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55c96ba8c430 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55c96ba8c3f0 <col:20> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55c96ba8c478 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55c96ba8c460 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55c96ba8c410 <col:38> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55c96ba8c528 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55c96ba8c4e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55c96ba8c4b0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55c96ba8c558 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55c96ba8c540 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55c96ba8c508 <col:66> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55c96ba8c8a0 <line:800:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55c96ba8c5d8 <col:3> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55c96ba8c888 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55c96ba8c858 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55c96ba8c778 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55c96ba8c698 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55c96ba8c650 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55c96ba8c638 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55c96ba8c5f8 <col:20> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55c96ba8c680 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55c96ba8c668 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55c96ba8c618 <col:38> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55c96ba8c758 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55c96ba8c710 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55c96ba8c6f8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55c96ba8c6b8 <col:56> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55c96ba8c740 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55c96ba8c728 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55c96ba8c6d8 <col:74> '_Bool' lvalue Var 0x55c96ba82ca0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55c96ba8c810 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55c96ba8c7c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55c96ba8c798 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55c96ba8c840 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55c96ba8c828 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55c96ba8c7f0 <col:102> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55c96ba8caa8 <line:801:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55c96ba8c8c0 <col:3> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55c96ba8ca90 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55c96ba8ca60 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55c96ba8c980 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55c96ba8c938 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55c96ba8c920 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55c96ba8c8e0 <col:20> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55c96ba8c968 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55c96ba8c950 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55c96ba8c900 <col:38> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55c96ba8ca18 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55c96ba8c9d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55c96ba8c9a0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55c96ba8ca48 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55c96ba8ca30 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55c96ba8c9f8 <col:66> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55c96ba8cd90 <line:802:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55c96ba8cac8 <col:3> '_Bool' lvalue Var 0x55c96ba82ca0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55c96ba8cd78 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55c96ba8cd48 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55c96ba8cc68 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55c96ba8cb88 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55c96ba8cb40 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55c96ba8cb28 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55c96ba8cae8 <col:20> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55c96ba8cb70 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55c96ba8cb58 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55c96ba8cb08 <col:38> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55c96ba8cc48 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55c96ba8cc00 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55c96ba8cbe8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55c96ba8cba8 <col:56> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55c96ba8cc30 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55c96ba8cc18 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55c96ba8cbc8 <col:74> '_Bool' lvalue Var 0x55c96ba82ca0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55c96ba8cd00 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55c96ba8ccb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55c96ba8cc88 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55c96ba8cd30 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55c96ba8cd18 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55c96ba8cce0 <col:102> '_Bool' lvalue Var 0x55c96ba82ca0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55c96ba8cde8 <line:803:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55c96ba8cdd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55c96ba8cdb0 <col:3> 'void ()' Function 0x55c96ba29410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55c96ba8ce40 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55c96ba8ce28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55c96ba8ce08 <col:3> 'void ()' Function 0x55c96ba29350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55c96ba8cef0 <line:805:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55c96ba8ce60 <col:3> '_Bool' lvalue Var 0x55c96ba83158 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x55c96ba8ced8 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55c96ba8ceb8 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55c96ba8cea0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55c96ba8ce80 <col:19> 'void *(void)' Function 0x55c96ba28e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55c96ba8cfa0 <line:806:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55c96ba8cf10 <col:3> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x55c96ba8cf88 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55c96ba8cf68 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55c96ba8cf50 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55c96ba8cf30 <col:19> 'void *(void)' Function 0x55c96ba28e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55c96ba8d028 <line:807:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55c96ba8cfc0 <col:3> '_Bool' lvalue Var 0x55c96ba82a40 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55c96ba8d010 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55c96ba8cfe0 <col:21> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55c96ba8d0a0 <line:808:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55c96ba8d048 <col:3> 'int' lvalue Var 0x55c96ba82ac0 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55c96ba8d088 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55c96ba8d068 <col:15> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
    |-BinaryOperator 0x55c96ba8d4d8 <line:809:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55c96ba8d0c0 <col:3> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
    | `-ConditionalOperator 0x55c96ba8d4a8 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55c96ba8d2d0 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55c96ba8d1f0 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55c96ba8d118 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55c96ba8d100 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55c96ba8d0e0 <col:8> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55c96ba8d1d0 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55c96ba8d168 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55c96ba8d150 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55c96ba8d130 <col:27> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55c96ba8d1b8 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55c96ba8d1a0 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55c96ba8d180 <col:46> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55c96ba8d2b0 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55c96ba8d248 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55c96ba8d230 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55c96ba8d210 <col:65> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55c96ba8d298 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55c96ba8d280 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55c96ba8d260 <col:84> '_Bool' lvalue Var 0x55c96ba82ca0 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55c96ba8d490 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55c96ba8d2f0 <col:101> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
    |   `-ParenExpr 0x55c96ba8d470 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55c96ba8d440 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55c96ba8d3b0 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55c96ba8d368 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55c96ba8d350 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55c96ba8d310 <col:106> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55c96ba8d398 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55c96ba8d380 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55c96ba8d330 <col:124> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55c96ba8d410 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55c96ba8d3d0 <col:141> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55c96ba8d428 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55c96ba8d3f0 <col:153> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
    |-BinaryOperator 0x55c96ba8d9e8 <line:810:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55c96ba8d4f8 <col:3> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x55c96ba8d9b8 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55c96ba8d988 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55c96ba8d970 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55c96ba8d518 <col:15> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55c96ba8d9a0 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55c96ba8d538 <col:31> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55c96ba8d950 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55c96ba8d920 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55c96ba8d748 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55c96ba8d668 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55c96ba8d590 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55c96ba8d578 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55c96ba8d558 <col:45> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55c96ba8d648 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55c96ba8d5e0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55c96ba8d5c8 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55c96ba8d5a8 <col:64> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55c96ba8d630 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55c96ba8d618 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55c96ba8d5f8 <col:83> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55c96ba8d728 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55c96ba8d6c0 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55c96ba8d6a8 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55c96ba8d688 <col:102> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55c96ba8d710 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55c96ba8d6f8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55c96ba8d6d8 <col:121> '_Bool' lvalue Var 0x55c96ba82ca0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55c96ba8d908 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55c96ba8d768 <col:138> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
    |       `-ParenExpr 0x55c96ba8d8e8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55c96ba8d8b8 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55c96ba8d828 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55c96ba8d7e0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55c96ba8d7c8 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55c96ba8d788 <col:151> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55c96ba8d810 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55c96ba8d7f8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55c96ba8d7a8 <col:169> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55c96ba8d888 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55c96ba8d848 <col:186> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55c96ba8d8a0 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55c96ba8d868 <col:198> 'int' lvalue Var 0x55c96ba82f70 'y$w_buff0' 'int'
    |-BinaryOperator 0x55c96ba8def8 <line:811:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55c96ba8da08 <col:3> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x55c96ba8dec8 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55c96ba8de98 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55c96ba8de80 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55c96ba8da28 <col:15> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55c96ba8deb0 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55c96ba8da48 <col:31> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
    |   `-ParenExpr 0x55c96ba8de60 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55c96ba8de30 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55c96ba8dc58 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55c96ba8db78 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55c96ba8daa0 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55c96ba8da88 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55c96ba8da68 <col:45> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55c96ba8db58 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55c96ba8daf0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55c96ba8dad8 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55c96ba8dab8 <col:64> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55c96ba8db40 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55c96ba8db28 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55c96ba8db08 <col:83> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55c96ba8dc38 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55c96ba8dbd0 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55c96ba8dbb8 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55c96ba8db98 <col:102> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55c96ba8dc20 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55c96ba8dc08 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55c96ba8dbe8 <col:121> '_Bool' lvalue Var 0x55c96ba82ca0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55c96ba8de18 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55c96ba8dc78 <col:138> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
    |       `-ParenExpr 0x55c96ba8ddf8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55c96ba8ddc8 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55c96ba8dd38 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55c96ba8dcf0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55c96ba8dcd8 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55c96ba8dc98 <col:151> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55c96ba8dd20 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55c96ba8dd08 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55c96ba8dcb8 <col:169> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55c96ba8dd98 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55c96ba8dd58 <col:186> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55c96ba8ddb0 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55c96ba8dd78 <col:198> 'int' lvalue Var 0x55c96ba83068 'y$w_buff1' 'int'
    |-BinaryOperator 0x55c96ba8e4c0 <line:812:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55c96ba8df18 <col:3> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55c96ba8e4a8 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55c96ba8e478 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55c96ba8e430 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55c96ba8e418 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55c96ba8df38 <col:20> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55c96ba8e460 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55c96ba8e448 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55c96ba8df58 <col:36> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55c96ba8e3f8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55c96ba8e3c8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55c96ba8e188 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55c96ba8e0a8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55c96ba8dfb0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55c96ba8df98 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55c96ba8df78 <col:55> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55c96ba8e088 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55c96ba8e020 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55c96ba8dfe8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55c96ba8dfc8 <col:74> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55c96ba8e070 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55c96ba8e058 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55c96ba8e038 <col:93> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55c96ba8e168 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55c96ba8e100 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55c96ba8e0e8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55c96ba8e0c8 <col:112> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55c96ba8e150 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55c96ba8e138 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55c96ba8e118 <col:131> '_Bool' lvalue Var 0x55c96ba82ca0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55c96ba8e3b0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55c96ba8e398 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55c96ba8e1a8 <col:148> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55c96ba8e378 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55c96ba8e348 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55c96ba8e268 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55c96ba8e220 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55c96ba8e208 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55c96ba8e1c8 <col:166> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55c96ba8e250 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55c96ba8e238 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55c96ba8e1e8 <col:184> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55c96ba8e300 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55c96ba8e2b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55c96ba8e288 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55c96ba8e330 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55c96ba8e318 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55c96ba8e2e0 <col:212> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55c96ba8ea88 <line:813:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55c96ba8e4e0 <col:3> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55c96ba8ea70 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55c96ba8ea40 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55c96ba8e9f8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55c96ba8e9e0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55c96ba8e500 <col:20> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55c96ba8ea28 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55c96ba8ea10 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55c96ba8e520 <col:36> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55c96ba8e9c0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55c96ba8e990 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55c96ba8e730 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55c96ba8e650 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55c96ba8e578 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55c96ba8e560 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55c96ba8e540 <col:55> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55c96ba8e630 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55c96ba8e5c8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55c96ba8e5b0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55c96ba8e590 <col:74> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55c96ba8e618 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55c96ba8e600 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55c96ba8e5e0 <col:93> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55c96ba8e710 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55c96ba8e6a8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55c96ba8e690 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55c96ba8e670 <col:112> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55c96ba8e6f8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55c96ba8e6e0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55c96ba8e6c0 <col:131> '_Bool' lvalue Var 0x55c96ba82ca0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55c96ba8e978 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55c96ba8e960 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55c96ba8e750 <col:148> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55c96ba8e940 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55c96ba8e910 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55c96ba8e810 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55c96ba8e7c8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55c96ba8e7b0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55c96ba8e770 <col:166> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55c96ba8e7f8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55c96ba8e7e0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55c96ba8e790 <col:184> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55c96ba8e8e0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55c96ba8e860 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55c96ba8e830 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55c96ba8e8f8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55c96ba8e8b8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55c96ba8e888 <col:219> 'int' 0
    |-BinaryOperator 0x55c96ba8f048 <line:814:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55c96ba8eaa8 <col:3> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55c96ba8f030 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55c96ba8efe8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55c96ba8efa0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55c96ba8ef88 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55c96ba8eac8 <col:20> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55c96ba8efd0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55c96ba8efb8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55c96ba8eae8 <col:36> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55c96ba8ef68 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55c96ba8ef38 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55c96ba8ecf8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55c96ba8ec18 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55c96ba8eb40 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55c96ba8eb28 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55c96ba8eb08 <col:55> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55c96ba8ebf8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55c96ba8eb90 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55c96ba8eb78 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55c96ba8eb58 <col:74> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55c96ba8ebe0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55c96ba8ebc8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55c96ba8eba8 <col:93> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55c96ba8ecd8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55c96ba8ec70 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55c96ba8ec58 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55c96ba8ec38 <col:112> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55c96ba8ecc0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55c96ba8eca8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55c96ba8ec88 <col:131> '_Bool' lvalue Var 0x55c96ba82ca0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55c96ba8ef20 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55c96ba8ef08 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55c96ba8ed18 <col:148> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55c96ba8eee8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55c96ba8eeb8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55c96ba8edd8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55c96ba8ed90 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55c96ba8ed78 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55c96ba8ed38 <col:166> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55c96ba8edc0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55c96ba8eda8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55c96ba8ed58 <col:184> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55c96ba8ee70 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55c96ba8ee28 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55c96ba8edf8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55c96ba8eea0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55c96ba8ee88 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55c96ba8ee50 <col:212> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55c96ba8f610 <line:815:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55c96ba8f068 <col:3> '_Bool' lvalue Var 0x55c96ba82ca0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55c96ba8f5f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55c96ba8f5c8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55c96ba8f580 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55c96ba8f568 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55c96ba8f088 <col:20> '_Bool' lvalue Var 0x55c96ba831d0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55c96ba8f5b0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55c96ba8f598 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55c96ba8f0a8 <col:36> '_Bool' lvalue Var 0x55c96ba82ca0 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55c96ba8f548 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55c96ba8f518 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55c96ba8f2b8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55c96ba8f1d8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55c96ba8f100 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55c96ba8f0e8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55c96ba8f0c8 <col:55> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55c96ba8f1b8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55c96ba8f150 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55c96ba8f138 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55c96ba8f118 <col:74> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55c96ba8f1a0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55c96ba8f188 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55c96ba8f168 <col:93> '_Bool' lvalue Var 0x55c96ba830e0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55c96ba8f298 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55c96ba8f230 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55c96ba8f218 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55c96ba8f1f8 <col:112> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55c96ba8f280 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55c96ba8f268 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55c96ba8f248 <col:131> '_Bool' lvalue Var 0x55c96ba82ca0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55c96ba8f500 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55c96ba8f4e8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55c96ba8f2d8 <col:148> '_Bool' lvalue Var 0x55c96ba82ca0 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55c96ba8f4c8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55c96ba8f498 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55c96ba8f398 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55c96ba8f350 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55c96ba8f338 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55c96ba8f2f8 <col:166> '_Bool' lvalue Var 0x55c96ba82fe8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55c96ba8f380 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55c96ba8f368 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55c96ba8f318 <col:184> '_Bool' lvalue Var 0x55c96ba82b38 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55c96ba8f468 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55c96ba8f3e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55c96ba8f3b8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55c96ba8f480 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55c96ba8f440 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55c96ba8f410 <col:219> 'int' 0
    |-BinaryOperator 0x55c96ba8f8e0 <line:816:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x55c96ba8f630 <col:3> '_Bool' lvalue Var 0x55c96ba82788 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55c96ba8f8c8 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55c96ba8f8b0 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55c96ba8f890 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x55c96ba8f870 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x55c96ba8f7d8 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x55c96ba8f740 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x55c96ba8f6a8 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55c96ba8f690 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55c96ba8f650 <col:23> 'int' lvalue Var 0x55c96ba82888 'x' 'int'
    |         | | | `-IntegerLiteral 0x55c96ba8f670 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55c96ba8f720 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55c96ba8f708 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55c96ba8f6c8 <col:33> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
    |         | |   `-IntegerLiteral 0x55c96ba8f6e8 <col:38> 'int' 2
    |         | `-BinaryOperator 0x55c96ba8f7b8 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55c96ba8f7a0 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55c96ba8f760 <col:43> 'int' lvalue Var 0x55c96ba82558 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55c96ba8f780 <col:66> 'int' 1
    |         `-BinaryOperator 0x55c96ba8f850 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x55c96ba8f838 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55c96ba8f7f8 <col:71> 'int' lvalue Var 0x55c96ba82678 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55c96ba8f818 <col:94> 'int' 1
    |-BinaryOperator 0x55c96ba8fa10 <line:817:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55c96ba8f900 <col:3> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
    | `-ConditionalOperator 0x55c96ba8f9e0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55c96ba8f998 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55c96ba8f980 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55c96ba8f920 <col:7> '_Bool' lvalue Var 0x55c96ba82a40 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55c96ba8f9b0 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55c96ba8f940 <col:25> 'int' lvalue Var 0x55c96ba82ac0 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55c96ba8f9c8 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55c96ba8f960 <col:37> 'int' lvalue Var 0x55c96ba829a8 'y' 'int'
    |-BinaryOperator 0x55c96ba8faa8 <line:818:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55c96ba8fa30 <col:3> '_Bool' lvalue Var 0x55c96ba82a40 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55c96ba8fa80 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55c96ba8fa50 <col:28> 'int' 0
    |-CallExpr 0x55c96ba8fb00 <line:819:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55c96ba8fae8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55c96ba8fac8 <col:3> 'void ()' Function 0x55c96ba29410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55c96ba8fb78 <line:820:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55c96ba8fb60 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55c96ba8fb20 <col:3> 'void (int)' Function 0x55c96ba290d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55c96ba8fbb8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55c96ba8fba0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55c96ba8fb40 <col:21> '_Bool' lvalue Var 0x55c96ba82788 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55c96ba8fbf0 <line:821:3, col:10>
      `-IntegerLiteral 0x55c96ba8fbd0 <col:10> 'int' 0
