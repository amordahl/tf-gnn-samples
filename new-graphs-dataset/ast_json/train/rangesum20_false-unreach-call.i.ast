TranslationUnitDecl 0x55ed97142f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55ed97143848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55ed97143520 '__int128'
|-TypedefDecl 0x55ed971438b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55ed97143540 'unsigned __int128'
|-TypedefDecl 0x55ed97143bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55ed97143990 'struct __NSConstantString_tag'
|   `-Record 0x55ed97143910 '__NSConstantString_tag'
|-TypedefDecl 0x55ed97143c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55ed97143c20 'char *'
|   `-BuiltinType 0x55ed97143020 'char'
|-TypedefDecl 0x55ed97182b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55ed97143f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55ed97143d40 'struct __va_list_tag'
|     `-Record 0x55ed97143cc0 '__va_list_tag'
|-FunctionDecl 0x55ed97182c40 <reducercommutativity/rangesum20_false-unreach-call.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55ed97182d88 <line:2:1, col:34> col:12 used __VERIFIER_nondet_int 'int ()' extern
|-FunctionDecl 0x55ed97183040 <line:4:1, line:9:1> line:4:6 used init_nondet 'void (int *)'
| |-ParmVarDecl 0x55ed97182f38 <col:18, col:26> col:22 used x 'int *':'int *'
| `-CompoundStmt 0x55ed97183418 <col:29, line:9:1>
|   |-DeclStmt 0x55ed97183168 <line:5:3, col:8>
|   | `-VarDecl 0x55ed97183100 <col:3, col:7> col:7 used i 'int'
|   `-ForStmt 0x55ed971833e0 <line:6:3, line:8:3>
|     |-BinaryOperator 0x55ed971831c0 <line:6:8, col:12> 'int' '='
|     | |-DeclRefExpr 0x55ed97183180 <col:8> 'int' lvalue Var 0x55ed97183100 'i' 'int'
|     | `-IntegerLiteral 0x55ed971831a0 <col:12> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x55ed97183238 <col:15, col:19> 'int' '<'
|     | |-ImplicitCastExpr 0x55ed97183220 <col:15> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55ed971831e0 <col:15> 'int' lvalue Var 0x55ed97183100 'i' 'int'
|     | `-IntegerLiteral 0x55ed97183200 <col:19> 'int' 20
|     |-UnaryOperator 0x55ed97183278 <col:23, col:24> 'int' postfix '++'
|     | `-DeclRefExpr 0x55ed97183258 <col:23> 'int' lvalue Var 0x55ed97183100 'i' 'int'
|     `-CompoundStmt 0x55ed971833c8 <col:28, line:8:3>
|       `-BinaryOperator 0x55ed971833a8 <line:7:5, col:34> 'int' '='
|         |-ArraySubscriptExpr 0x55ed97183300 <col:5, col:8> 'int' lvalue
|         | |-ImplicitCastExpr 0x55ed971832d0 <col:5> 'int *':'int *' <LValueToRValue>
|         | | `-DeclRefExpr 0x55ed97183290 <col:5> 'int *':'int *' lvalue ParmVar 0x55ed97182f38 'x' 'int *':'int *'
|         | `-ImplicitCastExpr 0x55ed971832e8 <col:7> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55ed971832b0 <col:7> 'int' lvalue Var 0x55ed97183100 'i' 'int'
|         `-CallExpr 0x55ed97183388 <col:12, col:34> 'int'
|           `-ImplicitCastExpr 0x55ed97183370 <col:12> 'int (*)()' <FunctionToPointerDecay>
|             `-DeclRefExpr 0x55ed97183320 <col:12> 'int ()' Function 0x55ed97182d88 '__VERIFIER_nondet_int' 'int ()'
|-FunctionDecl 0x55ed971835a8 <line:11:1, line:27:1> line:11:5 used rangesum 'int (int *)'
| |-ParmVarDecl 0x55ed97183498 <col:15, col:23> col:19 used x 'int *':'int *'
| `-CompoundStmt 0x55ed971a83f0 <line:12:1, line:27:1>
|   |-DeclStmt 0x55ed971836d0 <line:13:3, col:8>
|   | `-VarDecl 0x55ed97183668 <col:3, col:7> col:7 used i 'int'
|   |-DeclStmt 0x55ed97183768 <line:14:3, col:16>
|   | `-VarDecl 0x55ed97183700 <col:3, col:13> col:13 used ret 'long long'
|   |-BinaryOperator 0x55ed971837d8 <line:15:3, col:9> 'long long' '='
|   | |-DeclRefExpr 0x55ed97183780 <col:3> 'long long' lvalue Var 0x55ed97183700 'ret' 'long long'
|   | `-ImplicitCastExpr 0x55ed971837c0 <col:9> 'long long' <IntegralCast>
|   |   `-IntegerLiteral 0x55ed971837a0 <col:9> 'int' 0
|   |-DeclStmt 0x55ed97183898 <line:16:3, col:14>
|   | `-VarDecl 0x55ed97183810 <col:3, col:13> col:7 used cnt 'int' cinit
|   |   `-IntegerLiteral 0x55ed97183878 <col:13> 'int' 0
|   |-ForStmt 0x55ed971a8218 <line:17:3, line:22:3>
|   | |-BinaryOperator 0x55ed971838f0 <line:17:8, col:12> 'int' '='
|   | | |-DeclRefExpr 0x55ed971838b0 <col:8> 'int' lvalue Var 0x55ed97183668 'i' 'int'
|   | | `-IntegerLiteral 0x55ed971838d0 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x55ed97183968 <col:15, col:19> 'int' '<'
|   | | |-ImplicitCastExpr 0x55ed97183950 <col:15> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x55ed97183910 <col:15> 'int' lvalue Var 0x55ed97183668 'i' 'int'
|   | | `-IntegerLiteral 0x55ed97183930 <col:19> 'int' 20
|   | |-UnaryOperator 0x55ed971839a8 <col:23, col:24> 'int' postfix '++'
|   | | `-DeclRefExpr 0x55ed97183988 <col:23> 'int' lvalue Var 0x55ed97183668 'i' 'int'
|   | `-CompoundStmt 0x55ed971a8200 <col:28, line:22:3>
|   |   `-IfStmt 0x55ed971a81e8 <line:18:5, line:21:5>
|   |     |-BinaryOperator 0x55ed97183a58 <line:18:9, col:16> 'int' '>'
|   |     | |-ImplicitCastExpr 0x55ed97183a40 <col:9> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x55ed971839c0 <col:9> 'int' lvalue Var 0x55ed97183668 'i' 'int'
|   |     | `-BinaryOperator 0x55ed97183a20 <col:13, col:16> 'int' '/'
|   |     |   |-IntegerLiteral 0x55ed971839e0 <col:13> 'int' 20
|   |     |   `-IntegerLiteral 0x55ed97183a00 <col:16> 'int' 2
|   |     `-CompoundStmt 0x55ed971a81c8 <col:18, line:21:5>
|   |       |-BinaryOperator 0x55ed971a80f0 <line:19:8, col:23> 'long long' '='
|   |       | |-DeclRefExpr 0x55ed97183a78 <col:8> 'long long' lvalue Var 0x55ed97183700 'ret' 'long long'
|   |       | `-BinaryOperator 0x55ed971a80d0 <col:14, col:23> 'long long' '+'
|   |       |   |-ImplicitCastExpr 0x55ed97183b48 <col:14> 'long long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x55ed97183a98 <col:14> 'long long' lvalue Var 0x55ed97183700 'ret' 'long long'
|   |       |   `-ImplicitCastExpr 0x55ed971a80b8 <col:20, col:23> 'long long' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x55ed971a80a0 <col:20, col:23> 'int' <LValueToRValue>
|   |       |       `-ArraySubscriptExpr 0x55ed97183b28 <col:20, col:23> 'int' lvalue
|   |       |         |-ImplicitCastExpr 0x55ed97183af8 <col:20> 'int *':'int *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x55ed97183ab8 <col:20> 'int *':'int *' lvalue ParmVar 0x55ed97183498 'x' 'int *':'int *'
|   |       |         `-ImplicitCastExpr 0x55ed97183b10 <col:22> 'int' <LValueToRValue>
|   |       |           `-DeclRefExpr 0x55ed97183ad8 <col:22> 'int' lvalue Var 0x55ed97183668 'i' 'int'
|   |       `-BinaryOperator 0x55ed971a81a8 <line:20:8, col:20> 'int' '='
|   |         |-DeclRefExpr 0x55ed971a8110 <col:8> 'int' lvalue Var 0x55ed97183810 'cnt' 'int'
|   |         `-BinaryOperator 0x55ed971a8188 <col:14, col:20> 'int' '+'
|   |           |-ImplicitCastExpr 0x55ed971a8170 <col:14> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55ed971a8130 <col:14> 'int' lvalue Var 0x55ed97183810 'cnt' 'int'
|   |           `-IntegerLiteral 0x55ed971a8150 <col:20> 'int' 1
|   `-IfStmt 0x55ed971a83c8 <line:23:3, line:26:12> has_else
|     |-BinaryOperator 0x55ed971a82a8 <line:23:8, col:14> 'int' '!='
|     | |-ImplicitCastExpr 0x55ed971a8290 <col:8> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55ed971a8250 <col:8> 'int' lvalue Var 0x55ed97183810 'cnt' 'int'
|     | `-IntegerLiteral 0x55ed971a8270 <col:14> 'int' 0
|     |-ReturnStmt 0x55ed971a8388 <line:24:5, col:18>
|     | `-ImplicitCastExpr 0x55ed971a8370 <col:12, col:18> 'int' <IntegralCast>
|     |   `-BinaryOperator 0x55ed971a8350 <col:12, col:18> 'long long' '/'
|     |     |-ImplicitCastExpr 0x55ed971a8308 <col:12> 'long long' <LValueToRValue>
|     |     | `-DeclRefExpr 0x55ed971a82c8 <col:12> 'long long' lvalue Var 0x55ed97183700 'ret' 'long long'
|     |     `-ImplicitCastExpr 0x55ed971a8338 <col:18> 'long long' <IntegralCast>
|     |       `-ImplicitCastExpr 0x55ed971a8320 <col:18> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55ed971a82e8 <col:18> 'int' lvalue Var 0x55ed97183810 'cnt' 'int'
|     `-ReturnStmt 0x55ed971a83b8 <line:26:5, col:12>
|       `-IntegerLiteral 0x55ed971a8398 <col:12> 'int' 0
`-FunctionDecl 0x55ed971a8458 <line:29:1, line:53:1> line:29:5 main 'int ()'
  `-CompoundStmt 0x55ed971a96a8 <line:30:1, line:53:1>
    |-DeclStmt 0x55ed971a85c0 <line:31:3, col:12>
    | `-VarDecl 0x55ed971a8558 <col:3, col:11> col:7 used x 'int [20]'
    |-CallExpr 0x55ed971a8698 <line:32:3, col:16> 'void'
    | |-ImplicitCastExpr 0x55ed971a8680 <col:3> 'void (*)(int *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ed971a85d8 <col:3> 'void (int *)' Function 0x55ed97183040 'init_nondet' 'void (int *)'
    | `-ImplicitCastExpr 0x55ed971a86c0 <col:15> 'int *' <ArrayToPointerDecay>
    |   `-DeclRefExpr 0x55ed971a85f8 <col:15> 'int [20]' lvalue Var 0x55ed971a8558 'x' 'int [20]'
    |-DeclStmt 0x55ed971a8758 <line:33:3, col:11>
    | `-VarDecl 0x55ed971a86f0 <col:3, col:7> col:7 used temp 'int'
    |-DeclStmt 0x55ed971a87f0 <line:34:3, col:10>
    | `-VarDecl 0x55ed971a8788 <col:3, col:7> col:7 used ret 'int'
    |-DeclStmt 0x55ed971a8888 <line:35:3, col:11>
    | `-VarDecl 0x55ed971a8820 <col:3, col:7> col:7 used ret2 'int'
    |-DeclStmt 0x55ed971a8920 <line:36:3, col:11>
    | `-VarDecl 0x55ed971a88b8 <col:3, col:7> col:7 used ret5 'int'
    |-BinaryOperator 0x55ed971a8a58 <line:38:3, col:19> 'int' '='
    | |-DeclRefExpr 0x55ed971a8938 <col:3> 'int' lvalue Var 0x55ed971a8788 'ret' 'int'
    | `-CallExpr 0x55ed971a8a18 <col:9, col:19> 'int'
    |   |-ImplicitCastExpr 0x55ed971a8a00 <col:9> 'int (*)(int *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x55ed971a8958 <col:9> 'int (int *)' Function 0x55ed971835a8 'rangesum' 'int (int *)'
    |   `-ImplicitCastExpr 0x55ed971a8a40 <col:18> 'int *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x55ed971a8978 <col:18> 'int [20]' lvalue Var 0x55ed971a8558 'x' 'int [20]'
    |-BinaryOperator 0x55ed971a8b28 <line:40:3, col:11> 'int' '='
    | |-DeclRefExpr 0x55ed971a8a78 <col:3> 'int' lvalue Var 0x55ed971a86f0 'temp' 'int'
    | `-ImplicitCastExpr 0x55ed971a8b10 <col:8, col:11> 'int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x55ed971a8af0 <col:8, col:11> 'int' lvalue
    |     |-ImplicitCastExpr 0x55ed971a8ad8 <col:8> 'int *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x55ed971a8a98 <col:8> 'int [20]' lvalue Var 0x55ed971a8558 'x' 'int [20]'
    |     `-IntegerLiteral 0x55ed971a8ab8 <col:10> 'int' 0
    |-BinaryOperator 0x55ed971a8c50 <col:13, col:23> 'int' '='
    | |-ArraySubscriptExpr 0x55ed971a8ba0 <col:13, col:16> 'int' lvalue
    | | |-ImplicitCastExpr 0x55ed971a8b88 <col:13> 'int *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x55ed971a8b48 <col:13> 'int [20]' lvalue Var 0x55ed971a8558 'x' 'int [20]'
    | | `-IntegerLiteral 0x55ed971a8b68 <col:15> 'int' 0
    | `-ImplicitCastExpr 0x55ed971a8c38 <col:20, col:23> 'int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x55ed971a8c18 <col:20, col:23> 'int' lvalue
    |     |-ImplicitCastExpr 0x55ed971a8c00 <col:20> 'int *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x55ed971a8bc0 <col:20> 'int [20]' lvalue Var 0x55ed971a8558 'x' 'int [20]'
    |     `-IntegerLiteral 0x55ed971a8be0 <col:22> 'int' 1
    |-BinaryOperator 0x55ed971a8d20 <col:26, col:33> 'int' '='
    | |-ArraySubscriptExpr 0x55ed971a8cc8 <col:26, col:29> 'int' lvalue
    | | |-ImplicitCastExpr 0x55ed971a8cb0 <col:26> 'int *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x55ed971a8c70 <col:26> 'int [20]' lvalue Var 0x55ed971a8558 'x' 'int [20]'
    | | `-IntegerLiteral 0x55ed971a8c90 <col:28> 'int' 1
    | `-ImplicitCastExpr 0x55ed971a8d08 <col:33> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55ed971a8ce8 <col:33> 'int' lvalue Var 0x55ed971a86f0 'temp' 'int'
    |-BinaryOperator 0x55ed971a8df8 <line:41:3, col:20> 'int' '='
    | |-DeclRefExpr 0x55ed971a8d40 <col:3> 'int' lvalue Var 0x55ed971a8820 'ret2' 'int'
    | `-CallExpr 0x55ed971a8db8 <col:10, col:20> 'int'
    |   |-ImplicitCastExpr 0x55ed971a8da0 <col:10> 'int (*)(int *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x55ed971a8d60 <col:10> 'int (int *)' Function 0x55ed971835a8 'rangesum' 'int (int *)'
    |   `-ImplicitCastExpr 0x55ed971a8de0 <col:19> 'int *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x55ed971a8d80 <col:19> 'int [20]' lvalue Var 0x55ed971a8558 'x' 'int [20]'
    |-BinaryOperator 0x55ed971a8ec8 <line:42:3, col:11> 'int' '='
    | |-DeclRefExpr 0x55ed971a8e18 <col:3> 'int' lvalue Var 0x55ed971a86f0 'temp' 'int'
    | `-ImplicitCastExpr 0x55ed971a8eb0 <col:8, col:11> 'int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x55ed971a8e90 <col:8, col:11> 'int' lvalue
    |     |-ImplicitCastExpr 0x55ed971a8e78 <col:8> 'int *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x55ed971a8e38 <col:8> 'int [20]' lvalue Var 0x55ed971a8558 'x' 'int [20]'
    |     `-IntegerLiteral 0x55ed971a8e58 <col:10> 'int' 0
    |-ForStmt 0x55ed971a9260 <line:43:3, line:45:3>
    | |-DeclStmt 0x55ed971a8f88 <line:43:7, col:16>
    | | `-VarDecl 0x55ed971a8f00 <col:7, col:14> col:11 used i 'int' cinit
    | |   `-IntegerLiteral 0x55ed971a8f68 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x55ed971a9038 <col:18, col:24> 'int' '<'
    | | |-ImplicitCastExpr 0x55ed971a9020 <col:18> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x55ed971a8fa0 <col:18> 'int' lvalue Var 0x55ed971a8f00 'i' 'int'
    | | `-BinaryOperator 0x55ed971a9000 <col:20, col:24> 'int' '-'
    | |   |-IntegerLiteral 0x55ed971a8fc0 <col:20> 'int' 20
    | |   `-IntegerLiteral 0x55ed971a8fe0 <col:24> 'int' 1
    | |-UnaryOperator 0x55ed971a9078 <col:27, col:28> 'int' postfix '++'
    | | `-DeclRefExpr 0x55ed971a9058 <col:27> 'int' lvalue Var 0x55ed971a8f00 'i' 'int'
    | `-CompoundStmt 0x55ed971a9248 <col:31, line:45:3>
    |   `-BinaryOperator 0x55ed971a9228 <line:44:6, col:18> 'int' '='
    |     |-ArraySubscriptExpr 0x55ed971a9120 <col:6, col:9> 'int' lvalue
    |     | |-ImplicitCastExpr 0x55ed971a90f0 <col:6> 'int *' <ArrayToPointerDecay>
    |     | | `-DeclRefExpr 0x55ed971a90b0 <col:6> 'int [20]' lvalue Var 0x55ed971a8558 'x' 'int [20]'
    |     | `-ImplicitCastExpr 0x55ed971a9108 <col:8> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55ed971a90d0 <col:8> 'int' lvalue Var 0x55ed971a8f00 'i' 'int'
    |     `-ImplicitCastExpr 0x55ed971a9210 <col:13, col:18> 'int' <LValueToRValue>
    |       `-ArraySubscriptExpr 0x55ed971a91f0 <col:13, col:18> 'int' lvalue
    |         |-ImplicitCastExpr 0x55ed971a91d8 <col:13> 'int *' <ArrayToPointerDecay>
    |         | `-DeclRefExpr 0x55ed971a9140 <col:13> 'int [20]' lvalue Var 0x55ed971a8558 'x' 'int [20]'
    |         `-BinaryOperator 0x55ed971a91b8 <col:15, col:17> 'int' '+'
    |           |-ImplicitCastExpr 0x55ed971a91a0 <col:15> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55ed971a9160 <col:15> 'int' lvalue Var 0x55ed971a8f00 'i' 'int'
    |           `-IntegerLiteral 0x55ed971a9180 <col:17> 'int' 1
    |-BinaryOperator 0x55ed971a9388 <line:46:3, col:14> 'int' '='
    | |-ArraySubscriptExpr 0x55ed971a9330 <col:3, col:10> 'int' lvalue
    | | |-ImplicitCastExpr 0x55ed971a9318 <col:3> 'int *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x55ed971a9298 <col:3> 'int [20]' lvalue Var 0x55ed971a8558 'x' 'int [20]'
    | | `-BinaryOperator 0x55ed971a92f8 <col:5, col:9> 'int' '-'
    | |   |-IntegerLiteral 0x55ed971a92b8 <col:5> 'int' 20
    | |   `-IntegerLiteral 0x55ed971a92d8 <col:9> 'int' 1
    | `-ImplicitCastExpr 0x55ed971a9370 <col:14> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55ed971a9350 <col:14> 'int' lvalue Var 0x55ed971a86f0 'temp' 'int'
    |-BinaryOperator 0x55ed971a9460 <line:47:3, col:20> 'int' '='
    | |-DeclRefExpr 0x55ed971a93a8 <col:3> 'int' lvalue Var 0x55ed971a88b8 'ret5' 'int'
    | `-CallExpr 0x55ed971a9420 <col:10, col:20> 'int'
    |   |-ImplicitCastExpr 0x55ed971a9408 <col:10> 'int (*)(int *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x55ed971a93c8 <col:10> 'int (int *)' Function 0x55ed971835a8 'rangesum' 'int (int *)'
    |   `-ImplicitCastExpr 0x55ed971a9448 <col:19> 'int *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x55ed971a93e8 <col:19> 'int [20]' lvalue Var 0x55ed971a8558 'x' 'int [20]'
    |-IfStmt 0x55ed971a9660 <line:49:3, line:51:3>
    | |-BinaryOperator 0x55ed971a95a0 <line:49:6, col:27> 'int' '||'
    | | |-BinaryOperator 0x55ed971a94f0 <col:6, col:13> 'int' '!='
    | | | |-ImplicitCastExpr 0x55ed971a94c0 <col:6> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x55ed971a9480 <col:6> 'int' lvalue Var 0x55ed971a8788 'ret' 'int'
    | | | `-ImplicitCastExpr 0x55ed971a94d8 <col:13> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x55ed971a94a0 <col:13> 'int' lvalue Var 0x55ed971a8820 'ret2' 'int'
    | | `-BinaryOperator 0x55ed971a9580 <col:21, col:27> 'int' '!='
    | |   |-ImplicitCastExpr 0x55ed971a9550 <col:21> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x55ed971a9510 <col:21> 'int' lvalue Var 0x55ed971a8788 'ret' 'int'
    | |   `-ImplicitCastExpr 0x55ed971a9568 <col:27> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x55ed971a9530 <col:27> 'int' lvalue Var 0x55ed971a88b8 'ret5' 'int'
    | `-CompoundStmt 0x55ed971a9648 <col:32, line:51:3>
    |   `-CallExpr 0x55ed971a9628 <line:50:5, col:22> 'void'
    |     `-ImplicitCastExpr 0x55ed971a9610 <col:5> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55ed971a95c0 <col:5> 'void () __attribute__((noreturn))' Function 0x55ed97182c40 '__VERIFIER_error' 'void () __attribute__((noreturn))'
    `-ReturnStmt 0x55ed971a9698 <line:52:3, col:10>
      `-IntegerLiteral 0x55ed971a9678 <col:10> 'int' 1
