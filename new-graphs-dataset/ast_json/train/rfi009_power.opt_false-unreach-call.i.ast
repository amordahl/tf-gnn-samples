TranslationUnitDecl 0x561ad4745f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561ad4746848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561ad4746520 '__int128'
|-TypedefDecl 0x561ad47468b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561ad4746540 'unsigned __int128'
|-TypedefDecl 0x561ad4746bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561ad4746990 'struct __NSConstantString_tag'
|   `-Record 0x561ad4746910 '__NSConstantString_tag'
|-TypedefDecl 0x561ad4746c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561ad4746c20 'char *'
|   `-BuiltinType 0x561ad4746020 'char'
|-TypedefDecl 0x561ad4785b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561ad4746f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561ad4746d40 'struct __va_list_tag'
|     `-Record 0x561ad4746cc0 '__va_list_tag'
|-FunctionDecl 0x561ad4785c80 <pthread-wmm/rfi009_power.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x561ad4785e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x561ad4785d80 <col:31> col:34 'int'
|-FunctionDecl 0x561ad4785fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x561ad47860f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x561ad4786238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x561ad47861a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x561ad4786468 <col:40, col:99>
|   |-IfStmt 0x561ad4786438 <col:42, col:88>
|   | |-UnaryOperator 0x561ad4786318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x561ad4786300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x561ad47862e0 <col:47> 'int' lvalue ParmVar 0x561ad47861a8 'expression' 'int'
|   | `-CompoundStmt 0x561ad4786420 <col:59, col:88>
|   |   `-LabelStmt 0x561ad4786408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x561ad4786398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x561ad4786380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x561ad4786330 <col:68> 'void () __attribute__((noreturn))' Function 0x561ad47860f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x561ad4786450 <col:89>
|   `-ReturnStmt 0x561ad4786458 <col:91>
|-FunctionDecl 0x561ad47864b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x561ad4786570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x561ad47868f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561ad4786628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x561ad47866a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x561ad4786728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561ad47867a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561ad47869b0 <line:11:22>
|-FunctionDecl 0x561ad47abf10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561ad4786a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x561ad4786aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x561ad47abd40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561ad47abdc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561ad47abfd0 <line:14:22>
|-FunctionDecl 0x561ad47ac280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561ad47ac040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x561ad47ac0c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x561ad47ac140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x561ad47ac338 <line:16:22>
|-TypedefDecl 0x561ad47ac3a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x561ad47460e0 'unsigned char'
|-TypedefDecl 0x561ad47ac418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x561ad4746100 'unsigned short'
|-TypedefDecl 0x561ad47ac488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x561ad4746120 'unsigned int'
|-TypedefDecl 0x561ad47ac4f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-TypedefDecl 0x561ad47ac568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x561ad4746040 'signed char'
|-TypedefDecl 0x561ad47ac5d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x561ad47460e0 'unsigned char'
|-TypedefDecl 0x561ad47ac648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x561ad4746060 'short'
|-TypedefDecl 0x561ad47ac6b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x561ad4746100 'unsigned short'
|-TypedefDecl 0x561ad47ac728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x561ad4746080 'int'
|-TypedefDecl 0x561ad47ac798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x561ad4746120 'unsigned int'
|-TypedefDecl 0x561ad47ac808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47ac878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-TypedefDecl 0x561ad47ac8e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47ac958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-TypedefDecl 0x561ad47ac9c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-TypedefDecl 0x561ad47aca38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x561ad4746120 'unsigned int'
|-TypedefDecl 0x561ad47acaa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x561ad4746120 'unsigned int'
|-TypedefDecl 0x561ad47acb18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-TypedefDecl 0x561ad47acb88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-TypedefDecl 0x561ad47acbf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x561ad4746120 'unsigned int'
|-TypedefDecl 0x561ad47acc68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-TypedefDecl 0x561ad47accd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47acd68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47acdd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x561ad4746080 'int'
|-RecordDecl 0x561ad47ace30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x561ad47acf78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x561ad47ad030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x561ad47acfd0 'struct __fsid_t' sugar
|   `-RecordType 0x561ad47aceb0 '__fsid_t'
|     `-Record 0x561ad47ace30 ''
|-TypedefDecl 0x561ad47ad0b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47ad128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-TypedefDecl 0x561ad47ad198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-TypedefDecl 0x561ad47ad208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x561ad4746120 'unsigned int'
|-TypedefDecl 0x561ad47ad278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47ad2e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x561ad4746120 'unsigned int'
|-TypedefDecl 0x561ad47ad358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47ad3c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x561ad4746080 'int'
|-TypedefDecl 0x561ad47ad438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x561ad4746080 'int'
|-TypedefDecl 0x561ad47ad4a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x561ad4746080 'int'
|-TypedefDecl 0x561ad47ad518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x561ad47467a0 'void *'
|   `-BuiltinType 0x561ad4745fe0 'void'
|-TypedefDecl 0x561ad47ad588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47ad5f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47ad668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47ad6d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-TypedefDecl 0x561ad47ad748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-TypedefDecl 0x561ad47ad7b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-TypedefDecl 0x561ad47ad828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-TypedefDecl 0x561ad47ad898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47ad908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47ad978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47ad9e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-TypedefDecl 0x561ad47ada78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x561ad47ada40 '__off64_t' sugar
|   |-Typedef 0x561ad47acd68 '__off64_t'
|   `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47adb70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x561ad47adb30 '__quad_t *'
|   `-TypedefType 0x561ad47adad0 '__quad_t' sugar
|     |-Typedef 0x561ad47ac8e8 '__quad_t'
|     `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47adbe0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x561ad4746c20 'char *'
|   `-BuiltinType 0x561ad4746020 'char'
|-TypedefDecl 0x561ad47adc50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47adcc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x561ad4746120 'unsigned int'
|-FunctionDecl 0x561ad47ade38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x561ad47add60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x561ad47ae148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x561ad47ae138 <line:73:3, col:34>
|     `-CallExpr 0x561ad47ae0f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x561ad47ae0e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561ad47ae070 <col:10> '<builtin fn type>' Function 0x561ad47adee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x561ad47ae120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561ad47ae090 <col:29> 'unsigned int' lvalue ParmVar 0x561ad47add60 '__bsx' 'unsigned int'
|-FunctionDecl 0x561ad47adee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x561ad47adf80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x561ad47adff0 <col:10> Implicit
| `-ConstAttr 0x561ad47ae048 <col:10> Implicit
|-FunctionDecl 0x561ad47ae2a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x561ad47ae198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x561ad47ae5b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x561ad47ae5a8 <line:78:3, col:34>
|     `-CallExpr 0x561ad47ae568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x561ad47ae550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561ad47ae4d8 <col:10> '<builtin fn type>' Function 0x561ad47ae348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x561ad47ae590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x561ad47ae4f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x561ad47ae198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x561ad47ae348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x561ad47ae3e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x561ad47ae458 <col:10> Implicit
| `-ConstAttr 0x561ad47ae4b0 <col:10> Implicit
|-TypedefDecl 0x561ad47ae5e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-TypedefDecl 0x561ad47ae678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x561ad47ae640 '__time_t' sugar
|   |-Typedef 0x561ad47ad278 '__time_t'
|   `-BuiltinType 0x561ad47460a0 'long'
|-RecordDecl 0x561ad47ae6d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x561ad47ae788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x561ad47ae818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x561ad47ae8a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x561ad47ae870 '__pid_t' sugar
|   |-Typedef 0x561ad47acdd8 '__pid_t'
|   `-BuiltinType 0x561ad4746080 'int'
|-RecordDecl 0x561ad47ae900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x561ad47ae9c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x561ad47aea10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x561ad47aead0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x561ad47aeb38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-RecordDecl 0x561ad47aeb90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x561ad47b0e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x561ad47b0f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x561ad47b0ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x561ad47aec10 'cpu_set_t'
|     `-Record 0x561ad47aeb90 ''
|-FunctionDecl 0x561ad47b11f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x561ad47b0fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561ad47b10d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x561ad47b12a8 <line:108:19>
|-FunctionDecl 0x561ad47b1480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x561ad47b1310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x561ad47b1528 <col:69>
|-FunctionDecl 0x561ad47b16a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x561ad47b1590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x561ad47b1748 <col:64>
|-FunctionDecl 0x561ad47b1a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x561ad47b17b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561ad47b18e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561ad47b1ab8 <line:114:22>
|-FunctionDecl 0x561ad47b1e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x561ad47b1b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561ad47b1c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x561ad47b1f10 <col:88>
|-FunctionDecl 0x561ad47b21c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561ad47b1f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561ad47b1ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x561ad47b2088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561ad47b2280 <col:62>
|-FunctionDecl 0x561ad47b23f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x561ad47b22e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x561ad47b24a0 <col:63>
|-FunctionDecl 0x561ad47b25c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x561ad47b2668 <col:47>
|-FunctionDecl 0x561ad47b2770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x561ad47b26d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561ad47b2818 <col:69>
|-FunctionDecl 0x561ad47b2920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x561ad47b2888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561ad47b29c8 <col:69>
|-FunctionDecl 0x561ad47b2c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561ad47b2a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561ad47b2b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x561ad47b2d38 <col:88>
|-TypedefDecl 0x561ad47b2dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x561ad47b2d90 '__clock_t' sugar
|   |-Typedef 0x561ad47ad0b8 '__clock_t'
|   `-BuiltinType 0x561ad47460a0 'long'
|-TypedefDecl 0x561ad47b37e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x561ad47b2e20 '__clockid_t' sugar
|   |-Typedef 0x561ad47ad4a8 '__clockid_t'
|   `-BuiltinType 0x561ad4746080 'int'
|-TypedefDecl 0x561ad47b3878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x561ad47b3840 '__timer_t' sugar
|   |-Typedef 0x561ad47ad518 '__timer_t'
|   `-PointerType 0x561ad47467a0 'void *'
|     `-BuiltinType 0x561ad4745fe0 'void'
|-RecordDecl 0x561ad47b38d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x561ad47b3990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x561ad47b39f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x561ad47b3a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x561ad47b3ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x561ad47b3b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x561ad47b3b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x561ad47b3c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x561ad47b3c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x561ad47b3cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x561ad47b3d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x561ad47b3da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x561ad47b3df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x561ad47b3eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x561ad47b3f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x561ad47b3fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x561ad47b41a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x561ad47b4240 <col:45>
|-FunctionDecl 0x561ad47b4420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x561ad47b4310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x561ad47b44c8 <col:54>
|-FunctionDecl 0x561ad47b46c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x561ad47b4530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x561ad47b45a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x561ad47b4778 <line:158:22>
| `-ConstAttr 0x561ad47b5410 <col:63>
|-FunctionDecl 0x561ad47b5610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561ad47b5508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561ad47b56b8 <col:56>
|-FunctionDecl 0x561ad47b5a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x561ad47b5728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x561ad47b57a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561ad47b5820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x561ad47b5918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x561ad47b5b20 <col:54>
|-RecordDecl 0x561ad47b5b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x561ad47b5c28 parent 0x561ad4745f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x561ad47b5e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x561ad47b5f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x561ad47b5f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x561ad47b5ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x561ad47b60e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x561ad47b6208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x561ad47b61b0 'struct __locale_struct *'
|   `-ElaboratedType 0x561ad47b6140 'struct __locale_struct' sugar
|     `-RecordType 0x561ad47b5c00 'struct __locale_struct'
|       `-Record 0x561ad47b5b78 '__locale_struct'
|-TypedefDecl 0x561ad47b62b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x561ad47b6280 '__locale_t' sugar
|   |-Typedef 0x561ad47b6208 '__locale_t'
|   `-PointerType 0x561ad47b61b0 'struct __locale_struct *'
|     `-ElaboratedType 0x561ad47b6140 'struct __locale_struct' sugar
|       `-RecordType 0x561ad47b5c00 'struct __locale_struct'
|         `-Record 0x561ad47b5b78 '__locale_struct'
|-FunctionDecl 0x561ad47b66b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x561ad47b6328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x561ad47b63a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561ad47b6438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x561ad47b64c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561ad47b6540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x561ad47b6778 <col:40>
|-FunctionDecl 0x561ad47b6968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561ad47b6840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x561ad47b6a10 <col:66>
|-FunctionDecl 0x561ad47b6b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561ad47b6a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x561ad47b6bc8 <col:69>
|-FunctionDecl 0x561ad47b6df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561ad47b6c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561ad47b6cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561ad47b6ea8 <col:52>
|-FunctionDecl 0x561ad47b7050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561ad47b6f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561ad47b6fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561ad47b7100 <col:55>
|-FunctionDecl 0x561ad47b7298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x561ad47b7180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x561ad47b7340 <col:62>
|-FunctionDecl 0x561ad47b7578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x561ad47b73a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x561ad47b7620 <col:60>
|-FunctionDecl 0x561ad47b7848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561ad47b76a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561ad47b7720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x561ad47b78f8 <col:44>
|-FunctionDecl 0x561ad47b7b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561ad47b7960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561ad47b79e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x561ad47b7bb8 <col:49>
|-VarDecl 0x561ad47b7cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x561ad47b7d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x561ad47b7db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x561ad47b7e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x561ad47b7fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x561ad47b8050 <col:42>
|-VarDecl 0x561ad47b80c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x561ad47b8140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x561ad47b82c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x561ad47b81b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x561ad47b8370 <col:57>
|-FunctionDecl 0x561ad47b94f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561ad47b83f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561ad47b9598 <col:56>
|-FunctionDecl 0x561ad47b96a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561ad47b9618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x561ad47b9750 <col:59>
|-FunctionDecl 0x561ad47b9858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x561ad47b97c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x561ad47b9900 <col:48>
| `-ConstAttr 0x561ad47b9958 <col:89>
|-FunctionDecl 0x561ad47b9bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561ad47b9a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x561ad47b9a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x561ad47b9e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561ad47b9ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561ad47b9d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x561ad47b9ec8 <col:88>
|-FunctionDecl 0x561ad47ba060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561ad47b9f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561ad47b9fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x561ad47ba110 <col:88>
|-FunctionDecl 0x561ad47ba328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x561ad47ba178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561ad47ba208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x561ad47ba3d8 <line:209:22>
|-FunctionDecl 0x561ad47ba778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561ad47ba440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561ad47ba500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x561ad47ba590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x561ad47ba620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x561ad47baa78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x561ad47ba878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x561ad47ba950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x561ad47bab28 <col:85>
|-FunctionDecl 0x561ad47baf18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x561ad47bab90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561ad47bacc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x561ad47badd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x561ad47bafd0 <col:52>
|-FunctionDecl 0x561ad47bb148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x561ad47bb038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561ad47bb1f0 <col:61>
|-FunctionDecl 0x561ad47bb668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x561ad47bb258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561ad47bb2d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x561ad47bb408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x561ad47bb510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x561ad47bb728 <col:62>
|-FunctionDecl 0x561ad47bb948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x561ad47bb790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561ad47bb820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x561ad47bb9f8 <line:222:22>
|-FunctionDecl 0x561ad47bbaf8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x561ad47bba60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561ad47bbba0 <col:65>
|-TypedefDecl 0x561ad47bbc10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x561ad4746140 'unsigned long'
|-RecordDecl 0x561ad47bbc68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x561ad47bbdb0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561ad47bbe18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561ad47bbec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x561ad47bbe70 'union pthread_attr_t' sugar
|   `-RecordType 0x561ad47bbcf0 'union pthread_attr_t'
|     `-Record 0x561ad47bbc68 'pthread_attr_t'
|-RecordDecl 0x561ad47bbf20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x561ad47bc098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x561ad47bc110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x561ad47bc1c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x561ad47bc160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x561ad47bbfa0 'struct __pthread_internal_list'
|     `-Record 0x561ad47bbf20 '__pthread_internal_list'
|-RecordDecl 0x561ad47bc230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x561ad47bc2d8 parent 0x561ad4745f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x561ad47bc3b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561ad47bc418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x561ad47bc480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x561ad47c0530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x561ad47c0598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x561ad47c0600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x561ad47c0688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x561ad47c0740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x561ad47c0830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x561ad47c0898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561ad47c0a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x561ad47c09c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x561ad47bc2b0 'pthread_mutex_t'
|     `-Record 0x561ad47bc230 ''
|-RecordDecl 0x561ad47c0a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x561ad47c0bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561ad47c0c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561ad47c0cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x561ad47c0c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x561ad47c0b10 'pthread_mutexattr_t'
|     `-Record 0x561ad47c0a90 ''
|-RecordDecl 0x561ad47c0d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x561ad47c0e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x561ad47c0ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561ad47c0f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x561ad47c0fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x561ad47c1008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x561ad47c1070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x561ad47c10d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x561ad47c1140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x561ad47c11a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x561ad47c1260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi009_power.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/rfi009_power.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x561ad47c1350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x561ad47c13b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x561ad47c1540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x561ad47c1490 'union pthread_cond_t' sugar
|   `-RecordType 0x561ad47c0de0 'pthread_cond_t'
|     `-Record 0x561ad47c0d60 ''
|-RecordDecl 0x561ad47c15b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x561ad47c16b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561ad47c1718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561ad47c17d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x561ad47c1770 'union pthread_condattr_t' sugar
|   `-RecordType 0x561ad47c1630 'pthread_condattr_t'
|     `-Record 0x561ad47c15b0 ''
|-TypedefDecl 0x561ad47c1858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x561ad4746120 'unsigned int'
|-TypedefDecl 0x561ad47c18c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x561ad4746080 'int'
|-RecordDecl 0x561ad47c1920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x561ad47c19c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x561ad47c1a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561ad47c1af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x561ad47c1b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x561ad47c1bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x561ad47c1c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x561ad47c1c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x561ad47c1d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x561ad47c1d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x561ad47c1dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x561ad47c1e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x561ad47c1ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x561ad47c1f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi009_power.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/rfi009_power.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x561ad47c1ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561ad47c2060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561ad47c21b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x561ad47c2150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x561ad47c19a0 'pthread_rwlock_t'
|     `-Record 0x561ad47c1920 ''
|-RecordDecl 0x561ad47c2220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x561ad47c2360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x561ad47c23c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561ad47c2480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x561ad47c2420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x561ad47c22a0 'pthread_rwlockattr_t'
|     `-Record 0x561ad47c2220 ''
|-TypedefDecl 0x561ad47c4560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x561ad4746084 'volatile int' volatile
|   `-BuiltinType 0x561ad4746080 'int'
|-RecordDecl 0x561ad47c45b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x561ad47c4700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x561ad47c4768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561ad47c4820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x561ad47c47c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x561ad47c4640 'pthread_barrier_t'
|     `-Record 0x561ad47c45b8 ''
|-RecordDecl 0x561ad47c4890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x561ad47c4990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561ad47c49f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561ad47c4ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x561ad47c4a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x561ad47c4910 'pthread_barrierattr_t'
|     `-Record 0x561ad47c4890 ''
|-TypedefDecl 0x561ad47c4bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x561ad47c4b60 'long [8]' 8 
|   `-BuiltinType 0x561ad47460a0 'long'
|-EnumDecl 0x561ad47c4c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x561ad47c4ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x561ad47c4d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x561ad47c4d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x561ad47c4e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x561ad47c4ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x561ad47c4ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x561ad47c4f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x561ad47c4fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x561ad47c4fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x561ad47c4f98 <col:26> 'int' EnumConstant 0x561ad47c4e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x561ad47c5058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x561ad47c5040 <col:29> 'int'
| |   `-DeclRefExpr 0x561ad47c5020 <col:29> 'int' EnumConstant 0x561ad47c4ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x561ad47c50e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x561ad47c50c8 <col:30> 'int'
| |   `-DeclRefExpr 0x561ad47c50a8 <col:30> 'int' EnumConstant 0x561ad47c4ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x561ad47c5168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x561ad47c5150 <col:27> 'int'
|     `-DeclRefExpr 0x561ad47c5130 <col:27> 'int' EnumConstant 0x561ad47c4fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x561ad47c51b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x561ad47c5288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x561ad47c5310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x561ad47c52f8 <col:30> 'int'
| |   `-DeclRefExpr 0x561ad47c52d8 <col:30> 'int' EnumConstant 0x561ad47c5288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x561ad47c5360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x561ad47c53e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x561ad47c53d0 <col:29> 'int'
|     `-DeclRefExpr 0x561ad47c53b0 <col:29> 'int' EnumConstant 0x561ad47c5360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x561ad47c5438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x561ad47c5508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x561ad47c5570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x561ad47c55c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x561ad47c5610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x561ad47c56d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x561ad47c5728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x561ad47c5778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x561ad47c5800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x561ad47c57e8 <col:31> 'int'
|     `-DeclRefExpr 0x561ad47c57c8 <col:31> 'int' EnumConstant 0x561ad47c56d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x561ad47c5850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x561ad47c5918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x561ad47c5968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x561ad47c59b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x561ad47c5a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x561ad47c5ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x561ad47c5b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x561ad47c5bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x561ad47c5c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x561ad47c5c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x561ad47c5ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x561ad47c5f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x561ad47c5fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x561ad47c60c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x561ad47c6118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x561ad47c61e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x561ad47c6238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x561ad47c6288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x561ad47c6358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x561ad47c63a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x561ad47c69d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x561ad47c64a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x561ad47c65c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ad47c67c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x561ad47c6840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x561ad47c6a98 <col:47>
| |-NonNullAttr 0x561ad47c6af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x561ad47c6b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x561ad47c6c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x561ad47c6b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x561ad47c6ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x561ad47c6d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x561ad47c6d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x561ad47c7078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x561ad47c6f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x561ad47c7120 <col:60>
|-FunctionDecl 0x561ad47c7270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x561ad47c7310 <col:54>
| `-ConstAttr 0x561ad47c7368 <col:95>
|-FunctionDecl 0x561ad47c7da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x561ad47c73a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561ad47c7418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x561ad47c7e50 <line:395:19>
| `-ConstAttr 0x561ad47c7ea8 <col:60>
|-FunctionDecl 0x561ad47c8078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561ad47c7f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561ad47c8120 <col:71>
| `-NonNullAttr 0x561ad47c8178 <col:112, col:126> 1
|-FunctionDecl 0x561ad47c8280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561ad47c81c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561ad47c8328 <line:398:22>
| `-NonNullAttr 0x561ad47c8380 <col:63, col:77> 1
|-FunctionDecl 0x561ad47c85a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x561ad47c83c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561ad47c8448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x561ad47c8658 <line:401:22>
| `-NonNullAttr 0x561ad47c86b0 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47c88b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561ad47c86f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561ad47c8778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x561ad47c8968 <line:404:22>
| `-NonNullAttr 0x561ad47c89c0 <col:63, col:77> 1
|-FunctionDecl 0x561ad47c8c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x561ad47c8a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561ad47c8ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x561ad47c8cc8 <line:407:22>
| `-NonNullAttr 0x561ad47c8d20 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47c9f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561ad47c9dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561ad47c9e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561ad47ca028 <line:410:22>
| `-NonNullAttr 0x561ad47ca080 <col:63, col:77> 1
|-FunctionDecl 0x561ad47ca2b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561ad47ca0c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ad47ca158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561ad47ca368 <line:413:22>
| `-NonNullAttr 0x561ad47ca3c0 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47ca5f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561ad47ca408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ad47ca498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x561ad47ca6a8 <col:37>
| `-NonNullAttr 0x561ad47ca700 <col:78, col:95> 1 2
|-FunctionDecl 0x561ad47ca8e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ad47ca748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ad47ca7c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x561ad47ca998 <line:419:22>
| `-NonNullAttr 0x561ad47ca9f0 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47cab78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561ad47caa38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561ad47caab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x561ad47cac28 <line:421:22>
| `-NonNullAttr 0x561ad47cac80 <col:63, col:77> 1
|-FunctionDecl 0x561ad47cbe58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ad47cacc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ad47cad48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x561ad47cbf08 <line:424:22>
| `-NonNullAttr 0x561ad47cbf60 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47cc0e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561ad47cbfa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561ad47cc028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x561ad47cc198 <line:427:22>
| `-NonNullAttr 0x561ad47cc1f0 <col:63, col:77> 1
|-FunctionDecl 0x561ad47cc398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ad47cc238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ad47cc2b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x561ad47cc448 <line:430:22>
| `-NonNullAttr 0x561ad47cc4a0 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47cc628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561ad47cc4e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561ad47cc568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x561ad47cc6d8 <line:432:22>
| `-NonNullAttr 0x561ad47cc730 <col:63, col:77> 1
|-FunctionDecl 0x561ad47cc958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x561ad47cc778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ad47cc7f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x561ad47cca08 <line:435:22>
| |-NonNullAttr 0x561ad47cca60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x561ad47cca98 <col:100> "" ""
|-FunctionDecl 0x561ad47ccca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x561ad47ccae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561ad47ccb68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x561ad47ccd58 <line:438:22>
| |-NonNullAttr 0x561ad47ccdb0 <col:63, col:77> 1
| `-DeprecatedAttr 0x561ad47ccdf8 <col:97> "" ""
|-FunctionDecl 0x561ad47ccfe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561ad47cce48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ad47ccec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561ad47cd098 <line:441:22>
| `-NonNullAttr 0x561ad47cd0f0 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47cd270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561ad47cd138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561ad47cd1b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561ad47cd320 <line:444:22>
| `-NonNullAttr 0x561ad47cd378 <col:63, col:77> 1
|-FunctionDecl 0x561ad47cd668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561ad47cd3c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ad47cd448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x561ad47cd4c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561ad47cd720 <line:448:22>
| `-NonNullAttr 0x561ad47cd778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x561ad47cda28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x561ad47cd7d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561ad47cd850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x561ad47cd8c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561ad47cdae0 <col:43>
| `-NonNullAttr 0x561ad47cdb38 <col:84, col:98> 1
|-FunctionDecl 0x561ad47cde40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561ad47cdb88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561ad47cdc08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x561ad47cdc98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x561ad47cdef8 <line:453:22>
| `-NonNullAttr 0x561ad47cdf50 <col:63, col:77> 3
|-FunctionDecl 0x561ad47ce228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561ad47cdf98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561ad47ce018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x561ad47ce0a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561ad47ce2e0 <line:457:22>
| `-NonNullAttr 0x561ad47ce338 <col:63, col:80> 2 3
|-FunctionDecl 0x561ad47ce528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x561ad47ce388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561ad47ce408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x561ad47ce5d8 <line:459:22>
|-FunctionDecl 0x561ad47ce9a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x561ad47ce6a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x561ad47ce840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x561ad47cea58 <col:52, col:69> 1 2
|-FunctionDecl 0x561ad47cec00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x561ad47ceae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x561ad47ceb60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x561ad47cee10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x561ad47cecc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x561ad47ced48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x561ad47cef68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x561ad47ceed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x561ad47cf0a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x561ad47cf148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x561ad47cf1f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x561ad47cf2e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x561ad47cf350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x561ad47cf520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/rfi009_power.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x561ad47cf618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x561ad47cf6d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x561ad47cf670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x561ad47cf1d0 '__pthread_unwind_buf_t'
| |   `-Record 0x561ad47cf148 ''
| `-AlignedAttr 0x561ad47cf728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x561ad47cf7a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x561ad47cf900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x561ad47cf968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x561ad47cf9d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x561ad47cfa38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x561ad47cfc40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561ad47cfb30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561ad47cfe20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561ad47cfcf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561ad47cffe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561ad47cfed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x561ad47d0088 <line:488:22>
|-RecordDecl 0x561ad47d00e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x561ad47d03f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x561ad47d0258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x561ad47d02d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x561ad47d04a8 <col:86>
| `-ReturnsTwiceAttr 0x561ad47d0500 <col:12> Implicit
|-FunctionDecl 0x561ad47d0828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561ad47d05d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x561ad47d06e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x561ad47d08d8 <line:494:22>
| `-NonNullAttr 0x561ad47d0930 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d0aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561ad47d0978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561ad47d0b50 <line:496:22>
| `-NonNullAttr 0x561ad47d0ba8 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d0cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561ad47d0bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561ad47d0d58 <line:498:22>
| `-NonNullAttr 0x561ad47d0db0 <col:52, col:66> 1
|-FunctionDecl 0x561ad47d0ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561ad47d0e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561ad47d0f90 <line:500:22>
| `-NonNullAttr 0x561ad47d0fe8 <col:52, col:66> 1
|-FunctionDecl 0x561ad47d1228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561ad47d1038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561ad47d10c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561ad47d12d8 <col:36>
| `-NonNullAttr 0x561ad47d1330 <col:66, col:83> 1 2
|-FunctionDecl 0x561ad47d1430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561ad47d1378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561ad47d14d8 <line:505:22>
| `-NonNullAttr 0x561ad47d1530 <col:52, col:66> 1
|-FunctionDecl 0x561ad47d17c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ad47d15e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561ad47d1660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561ad47d1878 <line:509:22>
| `-NonNullAttr 0x561ad47d18d0 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47d1b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x561ad47d1918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561ad47d1998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x561ad47d1a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x561ad47d1c50 <line:513:22>
| `-NonNullAttr 0x561ad47d1ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x561ad47d1e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561ad47d1cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561ad47d1ee8 <line:515:22>
| `-NonNullAttr 0x561ad47d1f40 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d2128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561ad47d1ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561ad47d21d0 <line:517:22>
| `-NonNullAttr 0x561ad47d2228 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d2330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561ad47d2278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561ad47d23d8 <line:519:22>
| `-NonNullAttr 0x561ad47d2430 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d2658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ad47d2478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561ad47d24f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x561ad47d2708 <line:523:22>
| `-NonNullAttr 0x561ad47d2760 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47d2968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561ad47d27a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561ad47d2828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x561ad47d2a18 <line:526:22>
| `-NonNullAttr 0x561ad47d2a70 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d2c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ad47d2ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561ad47d2b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x561ad47d2cc8 <line:529:22>
| `-NonNullAttr 0x561ad47d2d20 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47d3f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561ad47d2d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561ad47d3e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x561ad47d3fd0 <line:531:22>
| `-NonNullAttr 0x561ad47d4028 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d41d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ad47d4078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561ad47d40f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x561ad47d4288 <line:535:22>
| `-NonNullAttr 0x561ad47d42e0 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47d4468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561ad47d4328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561ad47d43a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x561ad47d4518 <line:538:22>
| `-NonNullAttr 0x561ad47d4570 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d4718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ad47d45b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561ad47d4638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561ad47d47c8 <line:542:22>
| `-NonNullAttr 0x561ad47d4820 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47d49a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561ad47d4868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561ad47d48e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x561ad47d4a58 <line:545:22>
| `-NonNullAttr 0x561ad47d4ab0 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d4c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x561ad47d4af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x561ad47d4b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x561ad47d4d48 <line:548:22>
| `-NonNullAttr 0x561ad47d4da0 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47d5f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561ad47d4de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561ad47d5e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x561ad47d6008 <line:551:22>
| `-NonNullAttr 0x561ad47d6060 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d6398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x561ad47d6140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561ad47d6250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x561ad47d6448 <col:29>
| `-NonNullAttr 0x561ad47d64a0 <col:70, col:84> 1
|-FunctionDecl 0x561ad47d6618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561ad47d64e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561ad47d66c0 <line:556:22>
| `-NonNullAttr 0x561ad47d6718 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d6820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561ad47d6768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561ad47d68c8 <line:558:22>
| `-NonNullAttr 0x561ad47d6920 <col:52, col:66> 1
|-FunctionDecl 0x561ad47d6a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561ad47d6968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561ad47d6ac8 <line:560:19>
| `-NonNullAttr 0x561ad47d6b20 <col:49, col:63> 1
|-FunctionDecl 0x561ad47d6d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561ad47d6b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561ad47d6bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561ad47d6e08 <col:39>
| `-NonNullAttr 0x561ad47d6e90 <col:69, col:86> 1 2
|-FunctionDecl 0x561ad47d6f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561ad47d6ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561ad47d7038 <line:565:22>
| `-NonNullAttr 0x561ad47d7090 <col:52, col:66> 1
|-FunctionDecl 0x561ad47d7190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561ad47d70d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561ad47d7238 <line:567:22>
| `-NonNullAttr 0x561ad47d7290 <col:52, col:66> 1
|-FunctionDecl 0x561ad47d7448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561ad47d72d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561ad47d7368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561ad47d74f8 <col:39>
| `-NonNullAttr 0x561ad47d7550 <col:69, col:86> 1 2
|-FunctionDecl 0x561ad47d7650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561ad47d7598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561ad47d76f8 <line:572:22>
| `-NonNullAttr 0x561ad47d7750 <col:52, col:66> 1
|-FunctionDecl 0x561ad47d7938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561ad47d7800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561ad47d79e0 <line:574:22>
| `-NonNullAttr 0x561ad47d7a38 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d7b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561ad47d7a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561ad47d7be8 <line:576:22>
| `-NonNullAttr 0x561ad47d7c40 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d7ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ad47d7c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561ad47d7d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x561ad47d7f50 <line:580:22>
| `-NonNullAttr 0x561ad47d7fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47d81b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561ad47d7ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561ad47d8078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x561ad47d8268 <line:583:22>
| `-NonNullAttr 0x561ad47d82c0 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d8468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ad47d8308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561ad47d8388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x561ad47d8518 <line:587:22>
| `-NonNullAttr 0x561ad47d8570 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47d86f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561ad47d85b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561ad47d8638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x561ad47d87a8 <col:36>
| `-NonNullAttr 0x561ad47d8800 <col:77, col:91> 1
|-FunctionDecl 0x561ad47d8b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x561ad47d88e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561ad47d89f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x561ad47d8be8 <line:592:22>
| `-NonNullAttr 0x561ad47d8c40 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d8db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561ad47d8c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561ad47d8e60 <line:594:22>
| `-NonNullAttr 0x561ad47d8ee0 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d8fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561ad47d8f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561ad47d9088 <line:596:22>
| `-NonNullAttr 0x561ad47d90e0 <col:52, col:66> 1
|-FunctionDecl 0x561ad47d91e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561ad47d9128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561ad47d9288 <line:598:22>
| `-NonNullAttr 0x561ad47d92e0 <col:52, col:66> 1
|-FunctionDecl 0x561ad47d9508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x561ad47d9328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561ad47d93a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x561ad47d95b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x561ad47d98e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561ad47d9638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561ad47d96b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561ad47d9740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x561ad47d99a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x561ad47d9bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561ad47d9a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561ad47d9c60 <line:607:22>
| `-NonNullAttr 0x561ad47d9cb8 <col:63, col:77> 1
|-FunctionDecl 0x561ad47d9dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561ad47d9d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561ad47d9e68 <line:609:22>
| `-NonNullAttr 0x561ad47d9ef0 <col:63, col:77> 1
|-FunctionDecl 0x561ad47da118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ad47d9f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561ad47d9fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x561ad47da1c8 <line:613:22>
| `-NonNullAttr 0x561ad47da220 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47da428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x561ad47da268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561ad47da2e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x561ad47da4d8 <col:37>
| `-NonNullAttr 0x561ad47da530 <col:78, col:92> 1
|-FunctionDecl 0x561ad47da748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x561ad47da578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561ad47da620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x561ad47da7f8 <line:619:22>
| `-NonNullAttr 0x561ad47da850 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47daa18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x561ad47da898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561ad47da910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x561ad47daac8 <line:622:22>
| `-NonNullAttr 0x561ad47dab20 <col:63, col:77> 1
|-FunctionDecl 0x561ad47dadc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x561ad47dac00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x561ad47dac80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x561ad47dae78 <line:624:22>
| `-NonNullAttr 0x561ad47daf00 <col:63, col:77> 1
|-FunctionDecl 0x561ad47db078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561ad47daf48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561ad47db120 <line:626:22>
| `-NonNullAttr 0x561ad47db178 <col:63, col:77> 1
|-FunctionDecl 0x561ad47db280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561ad47db1c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561ad47db328 <line:628:22>
| `-NonNullAttr 0x561ad47db380 <col:52, col:66> 1
|-FunctionDecl 0x561ad47db480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561ad47db3c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561ad47db528 <line:630:22>
| `-NonNullAttr 0x561ad47db580 <col:52, col:66> 1
|-FunctionDecl 0x561ad47db680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561ad47db5c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561ad47db728 <line:632:22>
| `-NonNullAttr 0x561ad47db780 <col:52, col:66> 1
|-FunctionDecl 0x561ad47dbb58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x561ad47db860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x561ad47db970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561ad47db9f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x561ad47dbc10 <line:636:22>
| `-NonNullAttr 0x561ad47dbc68 <col:63, col:77> 1
|-FunctionDecl 0x561ad47dbde8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561ad47dbcb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561ad47dbe90 <line:638:22>
| `-NonNullAttr 0x561ad47dbf10 <col:63, col:77> 1
|-FunctionDecl 0x561ad47dc010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561ad47dbf58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561ad47dc0b8 <line:640:22>
| `-NonNullAttr 0x561ad47dc110 <col:52, col:66> 1
|-FunctionDecl 0x561ad47dc2f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561ad47dc1c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561ad47dc3a0 <line:642:22>
| `-NonNullAttr 0x561ad47dc3f8 <col:63, col:77> 1
|-FunctionDecl 0x561ad47dc500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561ad47dc448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561ad47dc5a8 <line:644:22>
| `-NonNullAttr 0x561ad47dc600 <col:63, col:77> 1
|-FunctionDecl 0x561ad47dc828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ad47dc648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561ad47dc6c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x561ad47dc8d8 <line:648:22>
| `-NonNullAttr 0x561ad47dc930 <col:63, col:80> 1 2
|-FunctionDecl 0x561ad47dcb38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x561ad47dc978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x561ad47dc9f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x561ad47dcbe8 <line:651:22>
| `-NonNullAttr 0x561ad47dcc40 <col:63, col:77> 1
|-FunctionDecl 0x561ad47dcfa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x561ad47dcd20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x561ad47dce40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x561ad47dd058 <line:654:22>
| `-NonNullAttr 0x561ad47dd0b0 <col:63, col:77> 1
|-FunctionDecl 0x561ad47dd208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x561ad47dd0f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561ad47dd2b0 <col:69>
|-FunctionDecl 0x561ad47dd428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x561ad47dd318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561ad47dd4d0 <col:72>
|-FunctionDecl 0x561ad47dd708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x561ad47dd538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x561ad47dd5e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x561ad47dd7b8 <col:44>
|-FunctionDecl 0x561ad47dd9d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x561ad47dd820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561ad47dd898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x561ad47dda88 <line:661:22>
| `-NonNullAttr 0x561ad47ddae0 <col:63, col:77> 2
|-FunctionDecl 0x561ad47def50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x561ad47ddbc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x561ad47ddcd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x561ad47ddde0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x561ad47df008 <col:47>
|-FunctionDecl 0x561ad47df110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x561ad47df078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561ad47df268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x561ad47df1d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561ad47df3c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x561ad47df328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561ad47df488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x561ad47df548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x561ad47df608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x561ad47df6c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x561ad47df740 prev 0x561ad47df6c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x561ad47df7a8 <col:24> 'int' 0
|-VarDecl 0x561ad47df7e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x561ad47df860 prev 0x561ad47df7e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x561ad47df8c8 <col:27> 'int' 0
|-VarDecl 0x561ad47df900 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x561ad47df980 prev 0x561ad47df900 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x561ad47df9e8 <col:27> 'int' 0
|-VarDecl 0x561ad47dfa20 <line:678:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x561ad47dfaa0 prev 0x561ad47dfa20 <line:679:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x561ad47dfb08 <col:27> 'int' 0
|-VarDecl 0x561ad47dfb40 <line:680:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x561ad47dfbc0 prev 0x561ad47dfb40 <line:681:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x561ad47dfc28 <col:27> 'int' 0
|-VarDecl 0x561ad47dfc58 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x561ad47dfcd0 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x561ad47dfd50 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x561ad47dfdd0 prev 0x561ad47dfd50 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x561ad47dfe38 <col:9> 'int' 0
|-VarDecl 0x561ad47dfe70 <line:686:1, col:5> col:5 used y 'int'
|-VarDecl 0x561ad47dff20 prev 0x561ad47dfe70 <line:687:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x561ad47dff88 <col:9> 'int' 0
|-VarDecl 0x561ad47dffb8 <line:688:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x561ad47e0038 <line:689:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x561ad47e00b0 <line:690:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x561ad47e0128 <line:691:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x561ad47e01a0 <line:692:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x561ad47e0218 <line:693:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x561ad47e0290 <line:694:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x561ad47e0308 <line:695:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x561ad47e0380 <line:696:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x561ad47e03f8 <line:697:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x561ad47e0470 <line:698:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x561ad47e04f0 <line:699:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x561ad47e0570 <line:700:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x561ad47e05e8 <line:701:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x561ad47e0668 <line:702:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x561ad47e06e0 <line:703:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x561ad47e0758 <line:704:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x561ad47e07d0 <line:705:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x561ad47e08e8 prev 0x561ad47df110 <line:706:1, line:733:1> line:706:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x561ad47e0850 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561ad47e3848 <line:707:1, line:733:1>
|   |-CallExpr 0x561ad47e09f8 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ad47e09e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e0990 <col:3> 'void ()' Function 0x561ad47864b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ad47e0a70 <line:709:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561ad47e0a18 <col:3> 'int' lvalue Var 0x561ad47df860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x561ad47e0a58 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ad47e0a38 <col:25> 'int' lvalue Var 0x561ad47dfdd0 'x' 'int'
|   |-CallExpr 0x561ad47e0ac8 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ad47e0ab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e0a90 <col:3> 'void ()' Function 0x561ad4786570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ad47e0b20 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ad47e0b08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e0ae8 <col:3> 'void ()' Function 0x561ad47864b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ad47e0be8 <line:712:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e0b40 <col:3> '_Bool' lvalue Var 0x561ad47e0758 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x561ad47e0bc8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x561ad47e0bb0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x561ad47e0b60 <col:19> '_Bool (void)' Function 0x561ad4785c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x561ad47e0c80 <line:713:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e0c08 <col:3> '_Bool' lvalue Var 0x561ad47e07d0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x561ad47e0c60 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x561ad47e0c48 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x561ad47e0c28 <col:19> '_Bool (void)' Function 0x561ad4785c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x561ad47e0cf8 <line:714:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e0ca0 <col:3> '_Bool' lvalue Var 0x561ad47dffb8 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e0ce0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ad47e0cc0 <col:21> '_Bool' lvalue Var 0x561ad47e07d0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x561ad47e0d70 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561ad47e0d18 <col:3> 'int' lvalue Var 0x561ad47e0038 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x561ad47e0d58 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ad47e0d38 <col:15> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
|   |-BinaryOperator 0x561ad47e11c0 <line:716:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x561ad47e0d90 <col:3> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
|   | `-ConditionalOperator 0x561ad47e1190 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x561ad47e0fb8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x561ad47e0ec0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x561ad47e0de8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x561ad47e0dd0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x561ad47e0db0 <col:8> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x561ad47e0ea0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x561ad47e0e38 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x561ad47e0e20 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x561ad47e0e00 <col:27> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x561ad47e0e88 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x561ad47e0e70 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x561ad47e0e50 <col:46> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x561ad47e0f98 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x561ad47e0f30 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x561ad47e0f00 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x561ad47e0ee0 <col:65> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x561ad47e0f80 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x561ad47e0f68 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x561ad47e0f48 <col:84> '_Bool' lvalue Var 0x561ad47e0308 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x561ad47e1178 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ad47e0fd8 <col:101> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
|   |   `-ParenExpr 0x561ad47e1158 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x561ad47e1128 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x561ad47e1098 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561ad47e1050 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561ad47e1038 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561ad47e0ff8 <col:106> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561ad47e1080 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561ad47e1068 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561ad47e1018 <col:124> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561ad47e10f8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561ad47e10b8 <col:141> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x561ad47e1110 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ad47e10d8 <col:153> 'int' lvalue Var 0x561ad47e0668 'y$w_buff1' 'int'
|   |-BinaryOperator 0x561ad47e16d0 <line:717:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561ad47e11e0 <col:3> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x561ad47e16a0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561ad47e1670 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561ad47e1658 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561ad47e1200 <col:15> '_Bool' lvalue Var 0x561ad47e07d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561ad47e1688 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ad47e1220 <col:31> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561ad47e1638 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561ad47e1608 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561ad47e1430 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561ad47e1350 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561ad47e1278 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561ad47e1260 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561ad47e1240 <col:45> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561ad47e1330 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561ad47e12c8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561ad47e12b0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561ad47e1290 <col:64> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x561ad47e1318 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561ad47e1300 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561ad47e12e0 <col:83> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561ad47e1410 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561ad47e13a8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561ad47e1390 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561ad47e1370 <col:102> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x561ad47e13f8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561ad47e13e0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561ad47e13c0 <col:121> '_Bool' lvalue Var 0x561ad47e0308 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561ad47e15f0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561ad47e1450 <col:138> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x561ad47e15d0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561ad47e15a0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561ad47e1510 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561ad47e14c8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561ad47e14b0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561ad47e1470 <col:151> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561ad47e14f8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561ad47e14e0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561ad47e1490 <col:169> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x561ad47e1570 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561ad47e1530 <col:186> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x561ad47e1588 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561ad47e1550 <col:198> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
|   |-BinaryOperator 0x561ad47e1be0 <line:718:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561ad47e16f0 <col:3> 'int' lvalue Var 0x561ad47e0668 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x561ad47e1bb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561ad47e1b80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561ad47e1b68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561ad47e1710 <col:15> '_Bool' lvalue Var 0x561ad47e07d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561ad47e1b98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ad47e1730 <col:31> 'int' lvalue Var 0x561ad47e0668 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x561ad47e1b48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561ad47e1b18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561ad47e1940 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561ad47e1860 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561ad47e1788 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561ad47e1770 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561ad47e1750 <col:45> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561ad47e1840 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561ad47e17d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561ad47e17c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561ad47e17a0 <col:64> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x561ad47e1828 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561ad47e1810 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561ad47e17f0 <col:83> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561ad47e1920 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561ad47e18b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561ad47e18a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561ad47e1880 <col:102> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x561ad47e1908 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561ad47e18f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561ad47e18d0 <col:121> '_Bool' lvalue Var 0x561ad47e0308 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561ad47e1b00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561ad47e1960 <col:138> 'int' lvalue Var 0x561ad47e0668 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x561ad47e1ae0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561ad47e1ab0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561ad47e1a20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561ad47e19d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561ad47e19c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561ad47e1980 <col:151> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561ad47e1a08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561ad47e19f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561ad47e19a0 <col:169> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x561ad47e1a80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561ad47e1a40 <col:186> 'int' lvalue Var 0x561ad47e0668 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x561ad47e1a98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561ad47e1a60 <col:198> 'int' lvalue Var 0x561ad47e0668 'y$w_buff1' 'int'
|   |-BinaryOperator 0x561ad47e2198 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e1c00 <col:3> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e2180 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ad47e2150 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561ad47e2108 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ad47e20f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ad47e1c20 <col:20> '_Bool' lvalue Var 0x561ad47e07d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ad47e2138 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ad47e2120 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ad47e1c40 <col:36> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x561ad47e20d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561ad47e20a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561ad47e1e50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561ad47e1d70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561ad47e1c98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561ad47e1c80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561ad47e1c60 <col:55> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561ad47e1d50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561ad47e1ce8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561ad47e1cd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561ad47e1cb0 <col:74> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x561ad47e1d38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561ad47e1d20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561ad47e1d00 <col:93> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561ad47e1e30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561ad47e1dc8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561ad47e1db0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561ad47e1d90 <col:112> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x561ad47e1e18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561ad47e1e00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561ad47e1de0 <col:131> '_Bool' lvalue Var 0x561ad47e0308 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x561ad47e2088 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561ad47e2070 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561ad47e1e70 <col:148> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x561ad47e2050 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561ad47e2020 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561ad47e1f40 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561ad47e1ee8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561ad47e1ed0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561ad47e1e90 <col:166> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561ad47e1f18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561ad47e1f00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561ad47e1eb0 <col:184> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x561ad47e1fd8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561ad47e1f90 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561ad47e1f60 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561ad47e2008 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561ad47e1ff0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561ad47e1fb8 <col:212> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561ad47e2760 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e21b8 <col:3> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e2748 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ad47e2718 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561ad47e26d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ad47e26b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ad47e21d8 <col:20> '_Bool' lvalue Var 0x561ad47e07d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ad47e2700 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ad47e26e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ad47e21f8 <col:36> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x561ad47e2698 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561ad47e2668 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561ad47e2408 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561ad47e2328 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561ad47e2250 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561ad47e2238 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561ad47e2218 <col:55> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561ad47e2308 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561ad47e22a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561ad47e2288 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561ad47e2268 <col:74> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x561ad47e22f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561ad47e22d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561ad47e22b8 <col:93> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561ad47e23e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561ad47e2380 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561ad47e2368 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561ad47e2348 <col:112> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x561ad47e23d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561ad47e23b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561ad47e2398 <col:131> '_Bool' lvalue Var 0x561ad47e0308 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x561ad47e2650 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561ad47e2638 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561ad47e2428 <col:148> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x561ad47e2618 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561ad47e25e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561ad47e24e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561ad47e24a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561ad47e2488 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561ad47e2448 <col:166> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561ad47e24d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561ad47e24b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561ad47e2468 <col:184> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x561ad47e25b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561ad47e2538 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561ad47e2508 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561ad47e25d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561ad47e2590 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561ad47e2560 <col:219> 'int' 0
|   |-BinaryOperator 0x561ad47e2d08 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e2780 <col:3> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e2cf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ad47e2cc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561ad47e2c78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ad47e2c60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ad47e27a0 <col:20> '_Bool' lvalue Var 0x561ad47e07d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ad47e2ca8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ad47e2c90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ad47e27c0 <col:36> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x561ad47e2c40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561ad47e2c10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561ad47e29d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561ad47e28f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561ad47e2818 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561ad47e2800 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561ad47e27e0 <col:55> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561ad47e28d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561ad47e2868 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561ad47e2850 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561ad47e2830 <col:74> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x561ad47e28b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561ad47e28a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561ad47e2880 <col:93> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561ad47e29b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561ad47e2948 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561ad47e2930 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561ad47e2910 <col:112> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x561ad47e2998 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561ad47e2980 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561ad47e2960 <col:131> '_Bool' lvalue Var 0x561ad47e0308 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x561ad47e2bf8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561ad47e2be0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561ad47e29f0 <col:148> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x561ad47e2bc0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561ad47e2b90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561ad47e2ab0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561ad47e2a68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561ad47e2a50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561ad47e2a10 <col:166> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561ad47e2a98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561ad47e2a80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561ad47e2a30 <col:184> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x561ad47e2b48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561ad47e2b00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561ad47e2ad0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561ad47e2b78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561ad47e2b60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561ad47e2b28 <col:212> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561ad47e32e0 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e2d28 <col:3> '_Bool' lvalue Var 0x561ad47e0308 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e32c8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ad47e3298 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561ad47e3250 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ad47e3238 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ad47e2d48 <col:20> '_Bool' lvalue Var 0x561ad47e07d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ad47e3280 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ad47e3268 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ad47e2d68 <col:36> '_Bool' lvalue Var 0x561ad47e0308 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x561ad47e3218 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561ad47e31e8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561ad47e2f88 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561ad47e2e98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561ad47e2dc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561ad47e2da8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561ad47e2d88 <col:55> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561ad47e2e78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561ad47e2e10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561ad47e2df8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561ad47e2dd8 <col:74> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x561ad47e2e60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561ad47e2e48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561ad47e2e28 <col:93> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561ad47e2f68 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561ad47e2ef0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561ad47e2ed8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561ad47e2eb8 <col:112> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x561ad47e2f50 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561ad47e2f28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561ad47e2f08 <col:131> '_Bool' lvalue Var 0x561ad47e0308 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x561ad47e31d0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561ad47e31b8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561ad47e2fa8 <col:148> '_Bool' lvalue Var 0x561ad47e0308 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x561ad47e3198 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561ad47e3168 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561ad47e3068 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561ad47e3020 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561ad47e3008 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561ad47e2fc8 <col:166> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561ad47e3050 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561ad47e3038 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561ad47e2fe8 <col:184> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x561ad47e3138 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561ad47e30b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561ad47e3088 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561ad47e3150 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561ad47e3110 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561ad47e30e0 <col:219> 'int' 0
|   |-BinaryOperator 0x561ad47e3358 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561ad47e3300 <col:3> 'int' lvalue Var 0x561ad47df980 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x561ad47e3340 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ad47e3320 <col:25> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
|   |-BinaryOperator 0x561ad47e3488 <line:724:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x561ad47e3378 <col:3> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
|   | `-ConditionalOperator 0x561ad47e3458 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x561ad47e3410 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561ad47e33f8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561ad47e3398 <col:7> '_Bool' lvalue Var 0x561ad47dffb8 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x561ad47e3428 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ad47e33b8 <col:25> 'int' lvalue Var 0x561ad47e0038 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x561ad47e3440 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x561ad47e33d8 <col:37> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
|   |-BinaryOperator 0x561ad47e3520 <line:725:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e34a8 <col:3> '_Bool' lvalue Var 0x561ad47dffb8 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x561ad47e34f8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561ad47e34c8 <col:28> 'int' 0
|   |-CallExpr 0x561ad47e3578 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ad47e3560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e3540 <col:3> 'void ()' Function 0x561ad4786570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ad47e35d0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ad47e35b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e3598 <col:3> 'void ()' Function 0x561ad47864b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x561ad47e3628 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ad47e3610 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e35f0 <col:3> 'void ()' Function 0x561ad4786570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ad47e3680 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ad47e3668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e3648 <col:3> 'void ()' Function 0x561ad47864b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ad47e3738 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561ad47e36a0 <col:3> 'int' lvalue Var 0x561ad47df740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561ad47e3718 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561ad47e3700 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ad47e36c0 <col:22> 'int' lvalue Var 0x561ad47df740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561ad47e36e0 <col:41> 'int' 1
|   |-CallExpr 0x561ad47e3790 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ad47e3778 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e3758 <col:3> 'void ()' Function 0x561ad4786570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561ad47e3838 <line:732:3, col:36>
|     `-CallExpr 0x561ad47e3818 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561ad47e3800 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561ad47e37b0 <col:10> 'void *(void)' Function 0x561ad4785fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561ad47e39d0 prev 0x561ad47df268 <line:734:1, line:778:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x561ad47e3938 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561ad47e7c50 <line:735:1, line:778:1>
|   |-CallExpr 0x561ad47e3ab0 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ad47e3a98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e3a78 <col:3> 'void ()' Function 0x561ad47864b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ad47e3b28 <line:737:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561ad47e3ad0 <col:3> 'int' lvalue Var 0x561ad47e0668 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x561ad47e3b10 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ad47e3af0 <col:15> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
|   |-BinaryOperator 0x561ad47e3b88 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561ad47e3b48 <col:3> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x561ad47e3b68 <col:15> 'int' 1
|   |-BinaryOperator 0x561ad47e3c00 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e3ba8 <col:3> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e3be8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ad47e3bc8 <col:20> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561ad47e3c98 <line:740:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e3c20 <col:3> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x561ad47e3c70 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561ad47e3c40 <col:27> 'int' 1
|   |-CallExpr 0x561ad47e3e18 <line:741:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x561ad47e3e00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x561ad47e3cb8 <col:3> 'void (int)' Function 0x561ad4786238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x561ad47e3db8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x561ad47e3d98 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x561ad47e3d78 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x561ad47e3d30 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x561ad47e3d18 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x561ad47e3cd8 <col:23> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x561ad47e3d60 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x561ad47e3d48 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x561ad47e3cf8 <col:41> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561ad47e3e98 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e3e40 <col:3> '_Bool' lvalue Var 0x561ad47e0290 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e3e80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ad47e3e60 <col:20> '_Bool' lvalue Var 0x561ad47e00b0 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x561ad47e3f10 <line:743:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e3eb8 <col:3> '_Bool' lvalue Var 0x561ad47e0308 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e3ef8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ad47e3ed8 <col:20> '_Bool' lvalue Var 0x561ad47e0128 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561ad47e3f98 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e3f30 <col:3> '_Bool' lvalue Var 0x561ad47e0380 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e3f80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ad47e3f60 <col:20> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561ad47e4010 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e3fb8 <col:3> '_Bool' lvalue Var 0x561ad47e03f8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e3ff8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ad47e3fd8 <col:20> '_Bool' lvalue Var 0x561ad47e0218 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561ad47e40a8 <line:746:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e4030 <col:3> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x561ad47e4080 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561ad47e4050 <col:27> 'int' 1
|   |-CallExpr 0x561ad47e4100 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ad47e40e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e40c8 <col:3> 'void ()' Function 0x561ad4786570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ad47e4158 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ad47e4140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e4120 <col:3> 'void ()' Function 0x561ad47864b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ad47e41f0 <line:749:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e4178 <col:3> '_Bool' lvalue Var 0x561ad47e0758 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x561ad47e41d0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x561ad47e41b8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x561ad47e4198 <col:19> '_Bool (void)' Function 0x561ad4785c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x561ad47e4288 <line:750:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e4210 <col:3> '_Bool' lvalue Var 0x561ad47e07d0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x561ad47e4268 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x561ad47e4250 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x561ad47e4230 <col:19> '_Bool (void)' Function 0x561ad4785c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x561ad47e4300 <line:751:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e42a8 <col:3> '_Bool' lvalue Var 0x561ad47dffb8 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e42e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ad47e42c8 <col:21> '_Bool' lvalue Var 0x561ad47e07d0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x561ad47e4378 <line:752:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561ad47e4320 <col:3> 'int' lvalue Var 0x561ad47e0038 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x561ad47e4360 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ad47e4340 <col:15> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
|   |-BinaryOperator 0x561ad47e47b0 <line:753:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x561ad47e4398 <col:3> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
|   | `-ConditionalOperator 0x561ad47e4780 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x561ad47e45a8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x561ad47e44c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x561ad47e43f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x561ad47e43d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x561ad47e43b8 <col:8> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x561ad47e44a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x561ad47e4440 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x561ad47e4428 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x561ad47e4408 <col:27> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x561ad47e4490 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x561ad47e4478 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x561ad47e4458 <col:46> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x561ad47e4588 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x561ad47e4520 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x561ad47e4508 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x561ad47e44e8 <col:65> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x561ad47e4570 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x561ad47e4558 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x561ad47e4538 <col:84> '_Bool' lvalue Var 0x561ad47e0380 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x561ad47e4768 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ad47e45c8 <col:101> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
|   |   `-ParenExpr 0x561ad47e4748 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x561ad47e4718 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x561ad47e4688 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561ad47e4640 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561ad47e4628 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561ad47e45e8 <col:106> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561ad47e4670 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561ad47e4658 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561ad47e4608 <col:124> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561ad47e46e8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561ad47e46a8 <col:141> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x561ad47e4700 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ad47e46c8 <col:153> 'int' lvalue Var 0x561ad47e0668 'y$w_buff1' 'int'
|   |-BinaryOperator 0x561ad47e4cc0 <line:754:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561ad47e47d0 <col:3> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x561ad47e4c90 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561ad47e4c60 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561ad47e4c48 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561ad47e47f0 <col:15> '_Bool' lvalue Var 0x561ad47e07d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561ad47e4c78 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ad47e4810 <col:31> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561ad47e4c28 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561ad47e4bf8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561ad47e4a20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561ad47e4940 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561ad47e4868 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561ad47e4850 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561ad47e4830 <col:45> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561ad47e4920 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561ad47e48b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561ad47e48a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561ad47e4880 <col:64> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x561ad47e4908 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561ad47e48f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561ad47e48d0 <col:83> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561ad47e4a00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561ad47e4998 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561ad47e4980 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561ad47e4960 <col:102> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x561ad47e49e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561ad47e49d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561ad47e49b0 <col:121> '_Bool' lvalue Var 0x561ad47e0380 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561ad47e4be0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561ad47e4a40 <col:138> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x561ad47e4bc0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561ad47e4b90 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561ad47e4b00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561ad47e4ab8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561ad47e4aa0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561ad47e4a60 <col:151> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561ad47e4ae8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561ad47e4ad0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561ad47e4a80 <col:169> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x561ad47e4b60 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561ad47e4b20 <col:186> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x561ad47e4b78 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561ad47e4b40 <col:198> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
|   |-BinaryOperator 0x561ad47e51f0 <line:755:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561ad47e4ce0 <col:3> 'int' lvalue Var 0x561ad47e0668 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x561ad47e51c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561ad47e5190 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561ad47e5178 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561ad47e4d00 <col:15> '_Bool' lvalue Var 0x561ad47e07d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561ad47e51a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ad47e4d20 <col:31> 'int' lvalue Var 0x561ad47e0668 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x561ad47e5158 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561ad47e5128 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561ad47e4f30 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561ad47e4e50 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561ad47e4d78 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561ad47e4d60 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561ad47e4d40 <col:45> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561ad47e4e30 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561ad47e4dc8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561ad47e4db0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561ad47e4d90 <col:64> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x561ad47e4e18 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561ad47e4e00 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561ad47e4de0 <col:83> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561ad47e4f10 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561ad47e4ea8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561ad47e4e90 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561ad47e4e70 <col:102> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x561ad47e4ef8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561ad47e4ee0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561ad47e4ec0 <col:121> '_Bool' lvalue Var 0x561ad47e0380 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561ad47e5110 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561ad47e4f70 <col:138> 'int' lvalue Var 0x561ad47e0668 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x561ad47e50f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561ad47e50c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561ad47e5030 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561ad47e4fe8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561ad47e4fd0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561ad47e4f90 <col:151> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561ad47e5018 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561ad47e5000 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561ad47e4fb0 <col:169> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x561ad47e5090 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561ad47e5050 <col:186> 'int' lvalue Var 0x561ad47e0668 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x561ad47e50a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561ad47e5070 <col:198> 'int' lvalue Var 0x561ad47e0668 'y$w_buff1' 'int'
|   |-BinaryOperator 0x561ad47e5798 <line:756:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e5210 <col:3> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e5780 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ad47e5750 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561ad47e5708 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ad47e56f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ad47e5230 <col:20> '_Bool' lvalue Var 0x561ad47e07d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ad47e5738 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ad47e5720 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ad47e5250 <col:36> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x561ad47e56d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561ad47e56a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561ad47e5460 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561ad47e5380 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561ad47e52a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561ad47e5290 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561ad47e5270 <col:55> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561ad47e5360 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561ad47e52f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561ad47e52e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561ad47e52c0 <col:74> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x561ad47e5348 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561ad47e5330 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561ad47e5310 <col:93> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561ad47e5440 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561ad47e53d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561ad47e53c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561ad47e53a0 <col:112> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x561ad47e5428 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561ad47e5410 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561ad47e53f0 <col:131> '_Bool' lvalue Var 0x561ad47e0380 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x561ad47e5688 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561ad47e5670 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561ad47e5480 <col:148> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x561ad47e5650 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561ad47e5620 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561ad47e5540 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561ad47e54f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561ad47e54e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561ad47e54a0 <col:166> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561ad47e5528 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561ad47e5510 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561ad47e54c0 <col:184> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x561ad47e55d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561ad47e5590 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561ad47e5560 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561ad47e5608 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561ad47e55f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561ad47e55b8 <col:212> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561ad47e5d60 <line:757:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e57b8 <col:3> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e5d48 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ad47e5d18 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561ad47e5cd0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ad47e5cb8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ad47e57d8 <col:20> '_Bool' lvalue Var 0x561ad47e07d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ad47e5d00 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ad47e5ce8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ad47e57f8 <col:36> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x561ad47e5c98 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561ad47e5c68 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561ad47e5a08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561ad47e5928 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561ad47e5850 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561ad47e5838 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561ad47e5818 <col:55> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561ad47e5908 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561ad47e58a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561ad47e5888 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561ad47e5868 <col:74> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x561ad47e58f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561ad47e58d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561ad47e58b8 <col:93> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561ad47e59e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561ad47e5980 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561ad47e5968 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561ad47e5948 <col:112> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x561ad47e59d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561ad47e59b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561ad47e5998 <col:131> '_Bool' lvalue Var 0x561ad47e0380 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x561ad47e5c50 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561ad47e5c38 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561ad47e5a28 <col:148> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x561ad47e5c18 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561ad47e5be8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561ad47e5ae8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561ad47e5aa0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561ad47e5a88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561ad47e5a48 <col:166> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561ad47e5ad0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561ad47e5ab8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561ad47e5a68 <col:184> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x561ad47e5bb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561ad47e5b38 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561ad47e5b08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561ad47e5bd0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561ad47e5b90 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561ad47e5b60 <col:219> 'int' 0
|   |-BinaryOperator 0x561ad47e6328 <line:758:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e5d80 <col:3> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e6310 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ad47e62e0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561ad47e6298 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ad47e6280 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ad47e5da0 <col:20> '_Bool' lvalue Var 0x561ad47e07d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ad47e62c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ad47e62b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ad47e5dc0 <col:36> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x561ad47e6260 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561ad47e6230 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561ad47e5ff0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561ad47e5ef0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561ad47e5e18 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561ad47e5e00 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561ad47e5de0 <col:55> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561ad47e5ed0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561ad47e5e68 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561ad47e5e50 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561ad47e5e30 <col:74> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x561ad47e5eb8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561ad47e5ea0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561ad47e5e80 <col:93> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561ad47e5fd0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561ad47e5f48 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561ad47e5f30 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561ad47e5f10 <col:112> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x561ad47e5fb8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561ad47e5fa0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561ad47e5f80 <col:131> '_Bool' lvalue Var 0x561ad47e0380 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x561ad47e6218 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561ad47e6200 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561ad47e6010 <col:148> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x561ad47e61e0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561ad47e61b0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561ad47e60d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561ad47e6088 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561ad47e6070 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561ad47e6030 <col:166> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561ad47e60b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561ad47e60a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561ad47e6050 <col:184> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x561ad47e6168 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561ad47e6120 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561ad47e60f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561ad47e6198 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561ad47e6180 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561ad47e6148 <col:212> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561ad47e68f0 <line:759:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e6348 <col:3> '_Bool' lvalue Var 0x561ad47e0380 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e68d8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ad47e68a8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561ad47e6860 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ad47e6848 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ad47e6368 <col:20> '_Bool' lvalue Var 0x561ad47e07d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ad47e6890 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ad47e6878 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ad47e6388 <col:36> '_Bool' lvalue Var 0x561ad47e0380 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x561ad47e6828 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561ad47e67f8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561ad47e6598 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561ad47e64b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561ad47e63e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561ad47e63c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561ad47e63a8 <col:55> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561ad47e6498 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561ad47e6430 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561ad47e6418 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561ad47e63f8 <col:74> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x561ad47e6480 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561ad47e6468 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561ad47e6448 <col:93> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561ad47e6578 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561ad47e6510 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561ad47e64f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561ad47e64d8 <col:112> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x561ad47e6560 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561ad47e6548 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561ad47e6528 <col:131> '_Bool' lvalue Var 0x561ad47e0380 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x561ad47e67e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561ad47e67c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561ad47e65b8 <col:148> '_Bool' lvalue Var 0x561ad47e0380 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x561ad47e67a8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561ad47e6778 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561ad47e6678 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561ad47e6630 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561ad47e6618 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561ad47e65d8 <col:166> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561ad47e6660 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561ad47e6648 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561ad47e65f8 <col:184> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x561ad47e6748 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561ad47e66c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561ad47e6698 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561ad47e6760 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561ad47e6720 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561ad47e66f0 <col:219> 'int' 0
|   |-BinaryOperator 0x561ad47e6968 <line:760:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561ad47e6910 <col:3> 'int' lvalue Var 0x561ad47dfaa0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x561ad47e6950 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ad47e6930 <col:25> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
|   |-BinaryOperator 0x561ad47e6a98 <line:761:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x561ad47e6988 <col:3> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
|   | `-ConditionalOperator 0x561ad47e6a68 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x561ad47e6a20 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561ad47e6a08 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561ad47e69a8 <col:7> '_Bool' lvalue Var 0x561ad47dffb8 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x561ad47e6a38 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ad47e69c8 <col:25> 'int' lvalue Var 0x561ad47e0038 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x561ad47e6a50 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x561ad47e69e8 <col:37> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
|   |-BinaryOperator 0x561ad47e6b30 <line:762:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e6ab8 <col:3> '_Bool' lvalue Var 0x561ad47dffb8 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x561ad47e6b08 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561ad47e6ad8 <col:28> 'int' 0
|   |-CallExpr 0x561ad47e6b88 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ad47e6b70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e6b50 <col:3> 'void ()' Function 0x561ad4786570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ad47e6be0 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ad47e6bc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e6ba8 <col:3> 'void ()' Function 0x561ad47864b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ad47e6c58 <line:765:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561ad47e6c00 <col:3> 'int' lvalue Var 0x561ad47dfbc0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x561ad47e6c40 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ad47e6c20 <col:25> 'int' lvalue Var 0x561ad47dfdd0 'x' 'int'
|   |-CallExpr 0x561ad47e6cb0 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ad47e6c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e6c78 <col:3> 'void ()' Function 0x561ad4786570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ad47e6d08 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ad47e6cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e6cd0 <col:3> 'void ()' Function 0x561ad47864b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ad47e7028 <line:768:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561ad47e6d28 <col:3> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
|   | `-ConditionalOperator 0x561ad47e6ff8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561ad47e6de8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561ad47e6da0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561ad47e6d88 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561ad47e6d48 <col:7> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561ad47e6dd0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561ad47e6db8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561ad47e6d68 <col:25> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x561ad47e6fe0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ad47e6e08 <col:42> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561ad47e6fc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561ad47e6f90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561ad47e6ec8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561ad47e6e80 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561ad47e6e68 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561ad47e6e28 <col:55> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561ad47e6eb0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561ad47e6e98 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561ad47e6e48 <col:73> '_Bool' lvalue Var 0x561ad47e0380 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561ad47e6f28 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561ad47e6ee8 <col:90> 'int' lvalue Var 0x561ad47e0668 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561ad47e6f40 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ad47e6f08 <col:102> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
|   |-BinaryOperator 0x561ad47e7230 <line:769:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e7048 <col:3> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e7218 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ad47e71e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561ad47e7108 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561ad47e70c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561ad47e70a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561ad47e7068 <col:20> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561ad47e70f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561ad47e70d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561ad47e7088 <col:38> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ad47e71a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ad47e7158 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ad47e7128 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561ad47e71d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ad47e71b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ad47e7180 <col:66> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561ad47e7518 <line:770:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e7250 <col:3> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e7500 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ad47e74d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561ad47e73f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561ad47e7310 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561ad47e72c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561ad47e72b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561ad47e7270 <col:20> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561ad47e72f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561ad47e72e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561ad47e7290 <col:38> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561ad47e73d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561ad47e7388 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561ad47e7370 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561ad47e7330 <col:56> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561ad47e73b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561ad47e73a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561ad47e7350 <col:74> '_Bool' lvalue Var 0x561ad47e0380 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ad47e7488 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ad47e7440 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ad47e7410 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561ad47e74b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ad47e74a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ad47e7468 <col:102> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561ad47e7720 <line:771:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e7538 <col:3> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e7708 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ad47e76d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561ad47e75f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561ad47e75b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561ad47e7598 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561ad47e7558 <col:20> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561ad47e75e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561ad47e75c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561ad47e7578 <col:38> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ad47e7690 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ad47e7648 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ad47e7618 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561ad47e76c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ad47e76a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ad47e7670 <col:66> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561ad47e7a08 <line:772:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e7740 <col:3> '_Bool' lvalue Var 0x561ad47e0380 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e79f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ad47e79c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561ad47e78e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561ad47e7800 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561ad47e77b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561ad47e77a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561ad47e7760 <col:20> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561ad47e77e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561ad47e77d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561ad47e7780 <col:38> '_Bool' lvalue Var 0x561ad47e01a0 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561ad47e78c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561ad47e7878 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561ad47e7860 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561ad47e7820 <col:56> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561ad47e78a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561ad47e7890 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561ad47e7840 <col:74> '_Bool' lvalue Var 0x561ad47e0380 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ad47e7978 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ad47e7930 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ad47e7900 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561ad47e79a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ad47e7990 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ad47e7958 <col:102> '_Bool' lvalue Var 0x561ad47e0380 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x561ad47e7a60 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ad47e7a48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e7a28 <col:3> 'void ()' Function 0x561ad4786570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ad47e7ab8 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ad47e7aa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e7a80 <col:3> 'void ()' Function 0x561ad47864b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ad47e7b70 <line:775:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561ad47e7ad8 <col:3> 'int' lvalue Var 0x561ad47df740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561ad47e7b50 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561ad47e7b38 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ad47e7af8 <col:22> 'int' lvalue Var 0x561ad47df740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561ad47e7b18 <col:41> 'int' 1
|   |-CallExpr 0x561ad47e7bc8 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ad47e7bb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e7b90 <col:3> 'void ()' Function 0x561ad4786570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561ad47e7c40 <line:777:3, col:36>
|     `-CallExpr 0x561ad47e7c20 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561ad47e7c08 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561ad47e7be8 <col:10> 'void *(void)' Function 0x561ad4785fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561ad47e7e60 prev 0x561ad47df3c0 <line:779:1, line:795:1> line:779:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x561ad47e7dc8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561ad47e8fb0 <line:780:1, line:795:1>
|   |-CallExpr 0x561ad47e7f40 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ad47e7f28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e7f08 <col:3> 'void ()' Function 0x561ad47864b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ad47e7fc0 <line:782:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561ad47e7f60 <col:3> 'int' lvalue Var 0x561ad47dfdd0 'x' 'int'
|   | `-IntegerLiteral 0x561ad47e7fa0 <col:7> 'int' 1
|   |-CallExpr 0x561ad47e8018 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ad47e8000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e7fe0 <col:3> 'void ()' Function 0x561ad4786570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ad47e8070 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ad47e8058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e8038 <col:3> 'void ()' Function 0x561ad47864b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ad47e8358 <line:785:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561ad47e8090 <col:3> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
|   | `-ConditionalOperator 0x561ad47e8328 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561ad47e8150 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561ad47e8108 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561ad47e80f0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561ad47e80b0 <col:7> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561ad47e8138 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561ad47e8120 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561ad47e80d0 <col:25> '_Bool' lvalue Var 0x561ad47e0218 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x561ad47e8310 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ad47e8170 <col:42> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561ad47e82f0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561ad47e82c0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561ad47e8230 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561ad47e81e8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561ad47e81d0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561ad47e8190 <col:55> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561ad47e8218 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561ad47e8200 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561ad47e81b0 <col:73> '_Bool' lvalue Var 0x561ad47e03f8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x561ad47e8290 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561ad47e8250 <col:90> 'int' lvalue Var 0x561ad47e0668 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561ad47e82a8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ad47e8270 <col:102> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
|   |-BinaryOperator 0x561ad47e8560 <line:786:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e8378 <col:3> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e8548 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ad47e8518 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561ad47e8438 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561ad47e83f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561ad47e83d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561ad47e8398 <col:20> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561ad47e8420 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561ad47e8408 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561ad47e83b8 <col:38> '_Bool' lvalue Var 0x561ad47e0218 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561ad47e84d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ad47e8488 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ad47e8458 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561ad47e8500 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ad47e84e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ad47e84b0 <col:66> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561ad47e8848 <line:787:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e8580 <col:3> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e8830 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ad47e8800 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561ad47e8720 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561ad47e8640 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561ad47e85f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561ad47e85e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561ad47e85a0 <col:20> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561ad47e8628 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561ad47e8610 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561ad47e85c0 <col:38> '_Bool' lvalue Var 0x561ad47e0218 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561ad47e8700 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561ad47e86b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561ad47e86a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561ad47e8660 <col:56> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561ad47e86e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561ad47e86d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561ad47e8680 <col:74> '_Bool' lvalue Var 0x561ad47e03f8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561ad47e87b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ad47e8770 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ad47e8740 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561ad47e87e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ad47e87d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ad47e8798 <col:102> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561ad47e8a50 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e8868 <col:3> '_Bool' lvalue Var 0x561ad47e0218 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e8a38 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ad47e8a08 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561ad47e8928 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561ad47e88e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561ad47e88c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561ad47e8888 <col:20> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561ad47e8910 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561ad47e88f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561ad47e88a8 <col:38> '_Bool' lvalue Var 0x561ad47e0218 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561ad47e89c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ad47e8978 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ad47e8948 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561ad47e89f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ad47e89d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ad47e89a0 <col:66> '_Bool' lvalue Var 0x561ad47e0218 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561ad47e8d38 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561ad47e8a70 <col:3> '_Bool' lvalue Var 0x561ad47e03f8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561ad47e8d20 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ad47e8cf0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561ad47e8c10 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561ad47e8b30 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561ad47e8ae8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561ad47e8ad0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561ad47e8a90 <col:20> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561ad47e8b18 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561ad47e8b00 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561ad47e8ab0 <col:38> '_Bool' lvalue Var 0x561ad47e0218 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561ad47e8bf0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561ad47e8ba8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561ad47e8b90 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561ad47e8b50 <col:56> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561ad47e8bd8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561ad47e8bc0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561ad47e8b70 <col:74> '_Bool' lvalue Var 0x561ad47e03f8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561ad47e8ca8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ad47e8c60 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ad47e8c30 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561ad47e8cd8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ad47e8cc0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ad47e8c88 <col:102> '_Bool' lvalue Var 0x561ad47e03f8 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x561ad47e8d90 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ad47e8d78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e8d58 <col:3> 'void ()' Function 0x561ad4786570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ad47e8de8 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ad47e8dd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e8db0 <col:3> 'void ()' Function 0x561ad47864b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ad47e8ea0 <line:792:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561ad47e8e08 <col:3> 'int' lvalue Var 0x561ad47df740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561ad47e8e80 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561ad47e8e68 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ad47e8e28 <col:22> 'int' lvalue Var 0x561ad47df740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561ad47e8e48 <col:41> 'int' 1
|   |-CallExpr 0x561ad47e8ef8 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ad47e8ee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ad47e8ec0 <col:3> 'void ()' Function 0x561ad4786570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561ad47e8f70 <line:794:3, col:36>
|     `-CallExpr 0x561ad47e8f50 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561ad47e8f38 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561ad47e8f18 <col:10> 'void *(void)' Function 0x561ad4785fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561ad47e9050 prev 0x561ad47df488 <line:796:1, line:798:1> line:796:6 fence 'void ()'
| `-CompoundStmt 0x561ad47e90f0 <line:797:1, line:798:1>
|-FunctionDecl 0x561ad47e9120 prev 0x561ad47df548 <line:799:1, line:801:1> line:799:6 isync 'void ()'
| `-CompoundStmt 0x561ad47e91c0 <line:800:1, line:801:1>
|-FunctionDecl 0x561ad47e91f0 prev 0x561ad47df608 <line:802:1, line:804:1> line:802:6 lwfence 'void ()'
| `-CompoundStmt 0x561ad47e9290 <line:803:1, line:804:1>
`-FunctionDecl 0x561ad47e92f8 <line:805:1, line:829:1> line:805:5 main 'int ()'
  `-CompoundStmt 0x561ad47eafe0 <line:806:1, line:829:1>
    |-DeclStmt 0x561ad47e9410 <line:807:3, col:18>
    | `-VarDecl 0x561ad47e93a8 <col:3, col:13> col:13 used t1742 'pthread_t':'unsigned long'
    |-CallExpr 0x561ad47e9618 <line:808:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561ad47e9600 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ad47e9428 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561ad47c69d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561ad47e9468 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561ad47e9448 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561ad47e93a8 't1742' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561ad47e9658 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561ad47e94e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561ad47e94b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561ad47e9480 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561ad47e9670 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ad47e9500 <col:39> 'void *(void *)' Function 0x561ad47e08e8 'P0' 'void *(void *)'
    | `-ParenExpr 0x561ad47e9580 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561ad47e9558 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561ad47e9520 <col:52> 'int' 0
    |-DeclStmt 0x561ad47e9700 <line:809:3, col:18>
    | `-VarDecl 0x561ad47e9698 <col:3, col:13> col:13 used t1743 'pthread_t':'unsigned long'
    |-CallExpr 0x561ad47e98a8 <line:810:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561ad47e9890 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ad47e9718 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561ad47c69d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561ad47e9758 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561ad47e9738 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561ad47e9698 't1743' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561ad47e98e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561ad47e97d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561ad47e97a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561ad47e9770 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561ad47e9900 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ad47e97f0 <col:39> 'void *(void *)' Function 0x561ad47e39d0 'P1' 'void *(void *)'
    | `-ParenExpr 0x561ad47e9870 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561ad47e9848 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561ad47e9810 <col:52> 'int' 0
    |-DeclStmt 0x561ad47e9990 <line:811:3, col:18>
    | `-VarDecl 0x561ad47e9928 <col:3, col:13> col:13 used t1744 'pthread_t':'unsigned long'
    |-CallExpr 0x561ad47e9b38 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561ad47e9b20 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ad47e99a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561ad47c69d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561ad47e99e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561ad47e99c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561ad47e9928 't1744' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561ad47e9b78 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561ad47e9a60 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561ad47e9a38 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561ad47e9a00 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561ad47e9b90 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ad47e9a80 <col:39> 'void *(void *)' Function 0x561ad47e7e60 'P2' 'void *(void *)'
    | `-ParenExpr 0x561ad47e9b00 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561ad47e9ad8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561ad47e9aa0 <col:52> 'int' 0
    |-CallExpr 0x561ad47e9be0 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561ad47e9bc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561ad47e9ba8 <col:3> 'void ()' Function 0x561ad47864b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561ad47e9cb0 <line:814:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x561ad47e9c00 <col:3> '_Bool' lvalue Var 0x561ad47dfc58 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x561ad47e9c98 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x561ad47e9c78 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x561ad47e9c60 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x561ad47e9c20 <col:21> 'int' lvalue Var 0x561ad47df740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x561ad47e9c40 <col:41> 'int' 3
    |-CallExpr 0x561ad47e9d08 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561ad47e9cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561ad47e9cd0 <col:3> 'void ()' Function 0x561ad4786570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561ad47e9d80 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561ad47e9d68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ad47e9d28 <col:3> 'void (int)' Function 0x561ad4785e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x561ad47e9dc0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561ad47e9da8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561ad47e9d48 <col:21> '_Bool' lvalue Var 0x561ad47dfc58 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x561ad47e9e10 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561ad47e9df8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561ad47e9dd8 <col:3> 'void ()' Function 0x561ad47864b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561ad47ea118 <line:818:3, col:103> 'int' '='
    | |-DeclRefExpr 0x561ad47e9e30 <col:3> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
    | `-ConditionalOperator 0x561ad47ea0e8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x561ad47e9ef0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x561ad47e9ea8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x561ad47e9e90 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x561ad47e9e50 <col:7> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x561ad47e9ed8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x561ad47e9ec0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x561ad47e9e70 <col:25> '_Bool' lvalue Var 0x561ad47e00b0 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x561ad47ea0d0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561ad47e9f10 <col:42> 'int' lvalue Var 0x561ad47e0570 'y$w_buff0' 'int'
    |   `-ParenExpr 0x561ad47ea0b0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x561ad47ea080 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x561ad47e9ff0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x561ad47e9f88 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x561ad47e9f70 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x561ad47e9f30 <col:55> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x561ad47e9fd8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x561ad47e9fc0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561ad47e9f50 <col:73> '_Bool' lvalue Var 0x561ad47e0290 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561ad47ea050 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561ad47ea010 <col:90> 'int' lvalue Var 0x561ad47e0668 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x561ad47ea068 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x561ad47ea030 <col:102> 'int' lvalue Var 0x561ad47dff20 'y' 'int'
    |-BinaryOperator 0x561ad47ea320 <line:819:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561ad47ea138 <col:3> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x561ad47ea308 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561ad47ea2d8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561ad47ea1f8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561ad47ea1b0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561ad47ea198 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561ad47ea158 <col:20> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561ad47ea1e0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561ad47ea1c8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561ad47ea178 <col:38> '_Bool' lvalue Var 0x561ad47e00b0 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561ad47ea290 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561ad47ea248 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561ad47ea218 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561ad47ea2c0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561ad47ea2a8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561ad47ea270 <col:66> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x561ad47ea608 <line:820:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561ad47ea340 <col:3> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x561ad47ea5f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561ad47ea5c0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561ad47ea4e0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561ad47ea400 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561ad47ea3b8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561ad47ea3a0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561ad47ea360 <col:20> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561ad47ea3e8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561ad47ea3d0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561ad47ea380 <col:38> '_Bool' lvalue Var 0x561ad47e00b0 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561ad47ea4c0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561ad47ea478 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561ad47ea460 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561ad47ea420 <col:56> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561ad47ea4a8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561ad47ea490 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561ad47ea440 <col:74> '_Bool' lvalue Var 0x561ad47e0290 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561ad47ea578 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561ad47ea530 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561ad47ea500 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561ad47ea5a8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561ad47ea590 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561ad47ea558 <col:102> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x561ad47ea810 <line:821:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561ad47ea628 <col:3> '_Bool' lvalue Var 0x561ad47e00b0 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561ad47ea7f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561ad47ea7c8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561ad47ea6e8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561ad47ea6a0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561ad47ea688 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561ad47ea648 <col:20> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561ad47ea6d0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561ad47ea6b8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561ad47ea668 <col:38> '_Bool' lvalue Var 0x561ad47e00b0 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561ad47ea780 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561ad47ea738 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561ad47ea708 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561ad47ea7b0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561ad47ea798 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561ad47ea760 <col:66> '_Bool' lvalue Var 0x561ad47e00b0 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x561ad47eaaf8 <line:822:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561ad47ea830 <col:3> '_Bool' lvalue Var 0x561ad47e0290 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561ad47eaae0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561ad47eaab0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561ad47ea9d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561ad47ea8f0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561ad47ea8a8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561ad47ea890 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561ad47ea850 <col:20> '_Bool' lvalue Var 0x561ad47e05e8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561ad47ea8d8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561ad47ea8c0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561ad47ea870 <col:38> '_Bool' lvalue Var 0x561ad47e00b0 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561ad47ea9b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561ad47ea968 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561ad47ea950 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561ad47ea910 <col:56> '_Bool' lvalue Var 0x561ad47e06e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561ad47ea998 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561ad47ea980 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561ad47ea930 <col:74> '_Bool' lvalue Var 0x561ad47e0290 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561ad47eaa68 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561ad47eaa20 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561ad47ea9f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561ad47eaa98 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561ad47eaa80 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561ad47eaa48 <col:102> '_Bool' lvalue Var 0x561ad47e0290 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x561ad47eab50 <line:823:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561ad47eab38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561ad47eab18 <col:3> 'void ()' Function 0x561ad4786570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561ad47eaba8 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561ad47eab90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561ad47eab70 <col:3> 'void ()' Function 0x561ad47864b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561ad47eae78 <line:825:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x561ad47eabc8 <col:3> '_Bool' lvalue Var 0x561ad47dfcd0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x561ad47eae60 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x561ad47eae48 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x561ad47eae28 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x561ad47eae08 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x561ad47ead70 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x561ad47eacd8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x561ad47eac40 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x561ad47eac28 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x561ad47eabe8 <col:23> 'int' lvalue Var 0x561ad47df860 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x561ad47eac08 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x561ad47eacb8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x561ad47eaca0 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x561ad47eac60 <col:51> 'int' lvalue Var 0x561ad47df980 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x561ad47eac80 <col:74> 'int' 0
    |         | `-BinaryOperator 0x561ad47ead50 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x561ad47ead38 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x561ad47eacf8 <col:79> 'int' lvalue Var 0x561ad47dfaa0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x561ad47ead18 <col:102> 'int' 1
    |         `-BinaryOperator 0x561ad47eade8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x561ad47eadd0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561ad47ead90 <col:107> 'int' lvalue Var 0x561ad47dfbc0 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x561ad47eadb0 <col:130> 'int' 0
    |-CallExpr 0x561ad47eaed0 <line:826:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561ad47eaeb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561ad47eae98 <col:3> 'void ()' Function 0x561ad4786570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561ad47eaf48 <line:827:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561ad47eaf30 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ad47eaef0 <col:3> 'void (int)' Function 0x561ad4786238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x561ad47eaf88 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561ad47eaf70 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561ad47eaf10 <col:21> '_Bool' lvalue Var 0x561ad47dfcd0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x561ad47eafd0 <line:828:3, col:10>
      `-IntegerLiteral 0x561ad47eafa0 <col:10> 'int' 0
