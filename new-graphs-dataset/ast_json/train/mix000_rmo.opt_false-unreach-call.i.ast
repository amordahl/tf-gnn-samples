TranslationUnitDecl 0x560e607a6f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x560e607a7848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x560e607a7520 '__int128'
|-TypedefDecl 0x560e607a78b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x560e607a7540 'unsigned __int128'
|-TypedefDecl 0x560e607a7bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x560e607a7990 'struct __NSConstantString_tag'
|   `-Record 0x560e607a7910 '__NSConstantString_tag'
|-TypedefDecl 0x560e607a7c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x560e607a7c20 'char *'
|   `-BuiltinType 0x560e607a7020 'char'
|-TypedefDecl 0x560e607e6b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x560e607a7f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x560e607a7d40 'struct __va_list_tag'
|     `-Record 0x560e607a7cc0 '__va_list_tag'
|-FunctionDecl 0x560e607e6c80 <pthread-wmm/mix000_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x560e607e6e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x560e607e6d80 <col:31> col:34 'int'
|-FunctionDecl 0x560e607e6fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x560e607e70f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x560e607e7238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x560e607e71a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x560e607e7468 <col:40, col:99>
|   |-IfStmt 0x560e607e7438 <col:42, col:88>
|   | |-UnaryOperator 0x560e607e7318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x560e607e7300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x560e607e72e0 <col:47> 'int' lvalue ParmVar 0x560e607e71a8 'expression' 'int'
|   | `-CompoundStmt 0x560e607e7420 <col:59, col:88>
|   |   `-LabelStmt 0x560e607e7408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x560e607e7398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x560e607e7380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x560e607e7330 <col:68> 'void () __attribute__((noreturn))' Function 0x560e607e70f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x560e607e7450 <col:89>
|   `-ReturnStmt 0x560e607e7458 <col:91>
|-FunctionDecl 0x560e607e74b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x560e607e7570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x560e607e78f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560e607e7628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x560e607e76a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x560e607e7728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560e607e77a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560e607e79b0 <line:11:22>
|-FunctionDecl 0x560e6080cf10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560e607e7a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x560e607e7aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x560e6080cd40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560e6080cdc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560e6080cfd0 <line:14:22>
|-FunctionDecl 0x560e6080d280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560e6080d040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x560e6080d0c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x560e6080d140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x560e6080d338 <line:16:22>
|-TypedefDecl 0x560e6080d3a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x560e607a70e0 'unsigned char'
|-TypedefDecl 0x560e6080d418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x560e607a7100 'unsigned short'
|-TypedefDecl 0x560e6080d488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x560e607a7120 'unsigned int'
|-TypedefDecl 0x560e6080d4f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-TypedefDecl 0x560e6080d568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x560e607a7040 'signed char'
|-TypedefDecl 0x560e6080d5d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x560e607a70e0 'unsigned char'
|-TypedefDecl 0x560e6080d648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x560e607a7060 'short'
|-TypedefDecl 0x560e6080d6b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x560e607a7100 'unsigned short'
|-TypedefDecl 0x560e6080d728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x560e607a7080 'int'
|-TypedefDecl 0x560e6080d798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x560e607a7120 'unsigned int'
|-TypedefDecl 0x560e6080d808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e6080d878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-TypedefDecl 0x560e6080d8e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e6080d958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-TypedefDecl 0x560e6080d9c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-TypedefDecl 0x560e6080da38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x560e607a7120 'unsigned int'
|-TypedefDecl 0x560e6080daa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x560e607a7120 'unsigned int'
|-TypedefDecl 0x560e6080db18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-TypedefDecl 0x560e6080db88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-TypedefDecl 0x560e6080dbf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x560e607a7120 'unsigned int'
|-TypedefDecl 0x560e6080dc68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-TypedefDecl 0x560e6080dcd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e6080dd68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e6080ddd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x560e607a7080 'int'
|-RecordDecl 0x560e6080de30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x560e6080df78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x560e6080e030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x560e6080dfd0 'struct __fsid_t' sugar
|   `-RecordType 0x560e6080deb0 '__fsid_t'
|     `-Record 0x560e6080de30 ''
|-TypedefDecl 0x560e6080e0b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e6080e128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-TypedefDecl 0x560e6080e198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-TypedefDecl 0x560e6080e208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x560e607a7120 'unsigned int'
|-TypedefDecl 0x560e6080e278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e6080e2e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x560e607a7120 'unsigned int'
|-TypedefDecl 0x560e6080e358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e6080e3c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x560e607a7080 'int'
|-TypedefDecl 0x560e6080e438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x560e607a7080 'int'
|-TypedefDecl 0x560e6080e4a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x560e607a7080 'int'
|-TypedefDecl 0x560e6080e518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x560e607a77a0 'void *'
|   `-BuiltinType 0x560e607a6fe0 'void'
|-TypedefDecl 0x560e6080e588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e6080e5f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e6080e668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e6080e6d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-TypedefDecl 0x560e6080e748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-TypedefDecl 0x560e6080e7b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-TypedefDecl 0x560e6080e828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-TypedefDecl 0x560e6080e898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e6080e908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e6080e978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e6080e9e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-TypedefDecl 0x560e6080ea78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x560e6080ea40 '__off64_t' sugar
|   |-Typedef 0x560e6080dd68 '__off64_t'
|   `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e6080eb70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x560e6080eb30 '__quad_t *'
|   `-TypedefType 0x560e6080ead0 '__quad_t' sugar
|     |-Typedef 0x560e6080d8e8 '__quad_t'
|     `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e6080ebe0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x560e607a7c20 'char *'
|   `-BuiltinType 0x560e607a7020 'char'
|-TypedefDecl 0x560e6080ec50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e6080ecc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x560e607a7120 'unsigned int'
|-FunctionDecl 0x560e6080ee38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x560e6080ed60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x560e6080f148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x560e6080f138 <line:73:3, col:34>
|     `-CallExpr 0x560e6080f0f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x560e6080f0e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560e6080f070 <col:10> '<builtin fn type>' Function 0x560e6080eee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x560e6080f120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560e6080f090 <col:29> 'unsigned int' lvalue ParmVar 0x560e6080ed60 '__bsx' 'unsigned int'
|-FunctionDecl 0x560e6080eee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x560e6080ef80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x560e6080eff0 <col:10> Implicit
| `-ConstAttr 0x560e6080f048 <col:10> Implicit
|-FunctionDecl 0x560e6080f2a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x560e6080f198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x560e6080f5b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x560e6080f5a8 <line:78:3, col:34>
|     `-CallExpr 0x560e6080f568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x560e6080f550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560e6080f4d8 <col:10> '<builtin fn type>' Function 0x560e6080f348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x560e6080f590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x560e6080f4f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x560e6080f198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x560e6080f348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x560e6080f3e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x560e6080f458 <col:10> Implicit
| `-ConstAttr 0x560e6080f4b0 <col:10> Implicit
|-TypedefDecl 0x560e6080f5e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-TypedefDecl 0x560e6080f678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x560e6080f640 '__time_t' sugar
|   |-Typedef 0x560e6080e278 '__time_t'
|   `-BuiltinType 0x560e607a70a0 'long'
|-RecordDecl 0x560e6080f6d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x560e6080f788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x560e6080f818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x560e6080f8a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x560e6080f870 '__pid_t' sugar
|   |-Typedef 0x560e6080ddd8 '__pid_t'
|   `-BuiltinType 0x560e607a7080 'int'
|-RecordDecl 0x560e6080f900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x560e6080f9c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x560e6080fa10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x560e6080fad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x560e6080fb38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-RecordDecl 0x560e6080fb90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x560e60811e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x560e60811f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x560e60811ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x560e6080fc10 'cpu_set_t'
|     `-Record 0x560e6080fb90 ''
|-FunctionDecl 0x560e608121f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x560e60811fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560e608120d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x560e608122a8 <line:108:19>
|-FunctionDecl 0x560e60812480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x560e60812310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x560e60812528 <col:69>
|-FunctionDecl 0x560e608126a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x560e60812590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x560e60812748 <col:64>
|-FunctionDecl 0x560e60812a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x560e608127b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560e608128e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560e60812ab8 <line:114:22>
|-FunctionDecl 0x560e60812e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x560e60812b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560e60812c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x560e60812f10 <col:88>
|-FunctionDecl 0x560e608131c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560e60812f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560e60812ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x560e60813088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560e60813280 <col:62>
|-FunctionDecl 0x560e608133f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x560e608132e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x560e608134a0 <col:63>
|-FunctionDecl 0x560e608135c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x560e60813668 <col:47>
|-FunctionDecl 0x560e60813770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x560e608136d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560e60813818 <col:69>
|-FunctionDecl 0x560e60813920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x560e60813888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560e608139c8 <col:69>
|-FunctionDecl 0x560e60813c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560e60813a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560e60813b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x560e60813d38 <col:88>
|-TypedefDecl 0x560e60813dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560e60813d90 '__clock_t' sugar
|   |-Typedef 0x560e6080e0b8 '__clock_t'
|   `-BuiltinType 0x560e607a70a0 'long'
|-TypedefDecl 0x560e608147e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x560e60813e20 '__clockid_t' sugar
|   |-Typedef 0x560e6080e4a8 '__clockid_t'
|   `-BuiltinType 0x560e607a7080 'int'
|-TypedefDecl 0x560e60814878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560e60814840 '__timer_t' sugar
|   |-Typedef 0x560e6080e518 '__timer_t'
|   `-PointerType 0x560e607a77a0 'void *'
|     `-BuiltinType 0x560e607a6fe0 'void'
|-RecordDecl 0x560e608148d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x560e60814990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x560e608149f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x560e60814a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560e60814ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560e60814b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x560e60814b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560e60814c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x560e60814c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560e60814cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560e60814d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x560e60814da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560e60814df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x560e60814eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560e60814f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560e60814fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x560e608151a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560e60815240 <col:45>
|-FunctionDecl 0x560e60815420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560e60815310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x560e608154c8 <col:54>
|-FunctionDecl 0x560e608156c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560e60815530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x560e608155a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x560e60815778 <line:158:22>
| `-ConstAttr 0x560e60816410 <col:63>
|-FunctionDecl 0x560e60816610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560e60816508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560e608166b8 <col:56>
|-FunctionDecl 0x560e60816a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560e60816728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x560e608167a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560e60816820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560e60816918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560e60816b20 <col:54>
|-RecordDecl 0x560e60816b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x560e60816c28 parent 0x560e607a6f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x560e60816e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560e60816f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x560e60816f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560e60816ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x560e608170e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x560e60817208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x560e608171b0 'struct __locale_struct *'
|   `-ElaboratedType 0x560e60817140 'struct __locale_struct' sugar
|     `-RecordType 0x560e60816c00 'struct __locale_struct'
|       `-Record 0x560e60816b78 '__locale_struct'
|-TypedefDecl 0x560e608172b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x560e60817280 '__locale_t' sugar
|   |-Typedef 0x560e60817208 '__locale_t'
|   `-PointerType 0x560e608171b0 'struct __locale_struct *'
|     `-ElaboratedType 0x560e60817140 'struct __locale_struct' sugar
|       `-RecordType 0x560e60816c00 'struct __locale_struct'
|         `-Record 0x560e60816b78 '__locale_struct'
|-FunctionDecl 0x560e608176b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x560e60817328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x560e608173a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560e60817438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x560e608174c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560e60817540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x560e60817778 <col:40>
|-FunctionDecl 0x560e60817968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560e60817840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x560e60817a10 <col:66>
|-FunctionDecl 0x560e60817b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560e60817a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x560e60817bc8 <col:69>
|-FunctionDecl 0x560e60817df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560e60817c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560e60817cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560e60817ea8 <col:52>
|-FunctionDecl 0x560e60818050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560e60817f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560e60817fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560e60818100 <col:55>
|-FunctionDecl 0x560e60818298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x560e60818180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x560e60818340 <col:62>
|-FunctionDecl 0x560e60818578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x560e608183a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x560e60818620 <col:60>
|-FunctionDecl 0x560e60818848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560e608186a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560e60818720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x560e608188f8 <col:44>
|-FunctionDecl 0x560e60818b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560e60818960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560e608189e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x560e60818bb8 <col:49>
|-VarDecl 0x560e60818cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x560e60818d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x560e60818db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x560e60818e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x560e60818fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x560e60819050 <col:42>
|-VarDecl 0x560e608190c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x560e60819140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x560e608192c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x560e608191b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x560e60819370 <col:57>
|-FunctionDecl 0x560e6081a4f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560e608193f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560e6081a598 <col:56>
|-FunctionDecl 0x560e6081a6a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560e6081a618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x560e6081a750 <col:59>
|-FunctionDecl 0x560e6081a858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x560e6081a7c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x560e6081a900 <col:48>
| `-ConstAttr 0x560e6081a958 <col:89>
|-FunctionDecl 0x560e6081abb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560e6081aa08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x560e6081aa98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x560e6081ae18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560e6081aca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560e6081ad38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x560e6081aec8 <col:88>
|-FunctionDecl 0x560e6081b060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560e6081af30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560e6081afc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x560e6081b110 <col:88>
|-FunctionDecl 0x560e6081b328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x560e6081b178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560e6081b208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x560e6081b3d8 <line:209:22>
|-FunctionDecl 0x560e6081b778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560e6081b440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560e6081b500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x560e6081b590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x560e6081b620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x560e6081ba78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x560e6081b878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x560e6081b950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x560e6081bb28 <col:85>
|-FunctionDecl 0x560e6081bf18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x560e6081bb90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560e6081bcc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x560e6081bdd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x560e6081bfd0 <col:52>
|-FunctionDecl 0x560e6081c148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x560e6081c038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560e6081c1f0 <col:61>
|-FunctionDecl 0x560e6081c668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x560e6081c258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560e6081c2d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x560e6081c408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x560e6081c510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x560e6081c728 <col:62>
|-FunctionDecl 0x560e6081c948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x560e6081c790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560e6081c820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x560e6081c9f8 <line:222:22>
|-FunctionDecl 0x560e6081caf8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x560e6081ca60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560e6081cba0 <col:65>
|-TypedefDecl 0x560e6081cc10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x560e607a7140 'unsigned long'
|-RecordDecl 0x560e6081cc68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x560e6081cdb0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560e6081ce18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560e6081cec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x560e6081ce70 'union pthread_attr_t' sugar
|   `-RecordType 0x560e6081ccf0 'union pthread_attr_t'
|     `-Record 0x560e6081cc68 'pthread_attr_t'
|-RecordDecl 0x560e6081cf20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560e6081d098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560e6081d110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x560e6081d1c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560e6081d160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x560e6081cfa0 'struct __pthread_internal_list'
|     `-Record 0x560e6081cf20 '__pthread_internal_list'
|-RecordDecl 0x560e6081d230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x560e6081d2d8 parent 0x560e607a6f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x560e6081d3b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560e6081d418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560e6081d480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560e60821530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560e60821598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560e60821600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x560e60821688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x560e60821740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x560e60821830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x560e60821898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560e60821a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x560e608219c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x560e6081d2b0 'pthread_mutex_t'
|     `-Record 0x560e6081d230 ''
|-RecordDecl 0x560e60821a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x560e60821bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560e60821c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560e60821cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x560e60821c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x560e60821b10 'pthread_mutexattr_t'
|     `-Record 0x560e60821a90 ''
|-RecordDecl 0x560e60821d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x560e60821e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x560e60821ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560e60821f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x560e60821fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x560e60822008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x560e60822070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x560e608220d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x560e60822140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x560e608221a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x560e60822260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix000_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix000_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x560e60822350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x560e608223b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x560e60822540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x560e60822490 'union pthread_cond_t' sugar
|   `-RecordType 0x560e60821de0 'pthread_cond_t'
|     `-Record 0x560e60821d60 ''
|-RecordDecl 0x560e608225b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x560e608226b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560e60822718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560e608227d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x560e60822770 'union pthread_condattr_t' sugar
|   `-RecordType 0x560e60822630 'pthread_condattr_t'
|     `-Record 0x560e608225b0 ''
|-TypedefDecl 0x560e60822858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x560e607a7120 'unsigned int'
|-TypedefDecl 0x560e608228c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x560e607a7080 'int'
|-RecordDecl 0x560e60822920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x560e608229c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x560e60822a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560e60822af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x560e60822b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x560e60822bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x560e60822c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x560e60822c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x560e60822d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x560e60822d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x560e60822dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x560e60822e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x560e60822ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x560e60822f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix000_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix000_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x560e60822ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560e60823060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560e608231b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x560e60823150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x560e608229a0 'pthread_rwlock_t'
|     `-Record 0x560e60822920 ''
|-RecordDecl 0x560e60823220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x560e60823360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x560e608233c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560e60823480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x560e60823420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x560e608232a0 'pthread_rwlockattr_t'
|     `-Record 0x560e60823220 ''
|-TypedefDecl 0x560e60825560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x560e607a7084 'volatile int' volatile
|   `-BuiltinType 0x560e607a7080 'int'
|-RecordDecl 0x560e608255b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x560e60825700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x560e60825768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560e60825820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x560e608257c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x560e60825640 'pthread_barrier_t'
|     `-Record 0x560e608255b8 ''
|-RecordDecl 0x560e60825890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x560e60825990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560e608259f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560e60825ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560e60825a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560e60825910 'pthread_barrierattr_t'
|     `-Record 0x560e60825890 ''
|-TypedefDecl 0x560e60825bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x560e60825b60 'long [8]' 8 
|   `-BuiltinType 0x560e607a70a0 'long'
|-EnumDecl 0x560e60825c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x560e60825ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560e60825d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x560e60825d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x560e60825e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x560e60825ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560e60825ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560e60825f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560e60825fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x560e60825fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x560e60825f98 <col:26> 'int' EnumConstant 0x560e60825e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560e60826058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560e60826040 <col:29> 'int'
| |   `-DeclRefExpr 0x560e60826020 <col:29> 'int' EnumConstant 0x560e60825ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x560e608260e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x560e608260c8 <col:30> 'int'
| |   `-DeclRefExpr 0x560e608260a8 <col:30> 'int' EnumConstant 0x560e60825ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560e60826168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560e60826150 <col:27> 'int'
|     `-DeclRefExpr 0x560e60826130 <col:27> 'int' EnumConstant 0x560e60825fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x560e608261b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x560e60826288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560e60826310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x560e608262f8 <col:30> 'int'
| |   `-DeclRefExpr 0x560e608262d8 <col:30> 'int' EnumConstant 0x560e60826288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560e60826360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x560e608263e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x560e608263d0 <col:29> 'int'
|     `-DeclRefExpr 0x560e608263b0 <col:29> 'int' EnumConstant 0x560e60826360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560e60826438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x560e60826508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560e60826570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x560e608265c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560e60826610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x560e608266d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x560e60826728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x560e60826778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560e60826800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x560e608267e8 <col:31> 'int'
|     `-DeclRefExpr 0x560e608267c8 <col:31> 'int' EnumConstant 0x560e608266d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x560e60826850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x560e60826918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x560e60826968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x560e608269b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x560e60826a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560e60826ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x560e60826b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x560e60826bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x560e60826c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560e60826c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560e60826ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x560e60826f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560e60826fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x560e608270c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x560e60827118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x560e608271e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x560e60827238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x560e60827288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x560e60827358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x560e608273a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x560e608279d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x560e608274a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x560e608275c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e608277c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x560e60827840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x560e60827a98 <col:47>
| |-NonNullAttr 0x560e60827af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x560e60827b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x560e60827c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x560e60827b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x560e60827ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x560e60827d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x560e60827d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x560e60828078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x560e60827f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x560e60828120 <col:60>
|-FunctionDecl 0x560e60828270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x560e60828310 <col:54>
| `-ConstAttr 0x560e60828368 <col:95>
|-FunctionDecl 0x560e60828da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x560e608283a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560e60828418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x560e60828e50 <line:395:19>
| `-ConstAttr 0x560e60828ea8 <col:60>
|-FunctionDecl 0x560e60829078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560e60828f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560e60829120 <col:71>
| `-NonNullAttr 0x560e60829178 <col:112, col:126> 1
|-FunctionDecl 0x560e60829280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560e608291c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560e60829328 <line:398:22>
| `-NonNullAttr 0x560e60829380 <col:63, col:77> 1
|-FunctionDecl 0x560e608295a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x560e608293c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560e60829448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x560e60829658 <line:401:22>
| `-NonNullAttr 0x560e608296b0 <col:63, col:80> 1 2
|-FunctionDecl 0x560e608298b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560e608296f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560e60829778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x560e60829968 <line:404:22>
| `-NonNullAttr 0x560e608299c0 <col:63, col:77> 1
|-FunctionDecl 0x560e60829c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x560e60829a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560e60829ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x560e60829cc8 <line:407:22>
| `-NonNullAttr 0x560e60829d20 <col:63, col:80> 1 2
|-FunctionDecl 0x560e6082af78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560e6082adc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560e6082ae38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560e6082b028 <line:410:22>
| `-NonNullAttr 0x560e6082b080 <col:63, col:77> 1
|-FunctionDecl 0x560e6082b2b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560e6082b0c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e6082b158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560e6082b368 <line:413:22>
| `-NonNullAttr 0x560e6082b3c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560e6082b5f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560e6082b408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e6082b498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x560e6082b6a8 <col:37>
| `-NonNullAttr 0x560e6082b700 <col:78, col:95> 1 2
|-FunctionDecl 0x560e6082b8e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e6082b748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e6082b7c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x560e6082b998 <line:419:22>
| `-NonNullAttr 0x560e6082b9f0 <col:63, col:80> 1 2
|-FunctionDecl 0x560e6082bb78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560e6082ba38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560e6082bab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x560e6082bc28 <line:421:22>
| `-NonNullAttr 0x560e6082bc80 <col:63, col:77> 1
|-FunctionDecl 0x560e6082ce58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e6082bcc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e6082bd48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x560e6082cf08 <line:424:22>
| `-NonNullAttr 0x560e6082cf60 <col:63, col:80> 1 2
|-FunctionDecl 0x560e6082d0e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560e6082cfa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560e6082d028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560e6082d198 <line:427:22>
| `-NonNullAttr 0x560e6082d1f0 <col:63, col:77> 1
|-FunctionDecl 0x560e6082d398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e6082d238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e6082d2b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560e6082d448 <line:430:22>
| `-NonNullAttr 0x560e6082d4a0 <col:63, col:80> 1 2
|-FunctionDecl 0x560e6082d628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560e6082d4e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560e6082d568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x560e6082d6d8 <line:432:22>
| `-NonNullAttr 0x560e6082d730 <col:63, col:77> 1
|-FunctionDecl 0x560e6082d958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x560e6082d778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e6082d7f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560e6082da08 <line:435:22>
| |-NonNullAttr 0x560e6082da60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x560e6082da98 <col:100> "" ""
|-FunctionDecl 0x560e6082dca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560e6082dae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560e6082db68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x560e6082dd58 <line:438:22>
| |-NonNullAttr 0x560e6082ddb0 <col:63, col:77> 1
| `-DeprecatedAttr 0x560e6082ddf8 <col:97> "" ""
|-FunctionDecl 0x560e6082dfe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560e6082de48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e6082dec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560e6082e098 <line:441:22>
| `-NonNullAttr 0x560e6082e0f0 <col:63, col:80> 1 2
|-FunctionDecl 0x560e6082e270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560e6082e138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560e6082e1b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560e6082e320 <line:444:22>
| `-NonNullAttr 0x560e6082e378 <col:63, col:77> 1
|-FunctionDecl 0x560e6082e668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560e6082e3c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560e6082e448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x560e6082e4c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560e6082e720 <line:448:22>
| `-NonNullAttr 0x560e6082e778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x560e6082ea28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x560e6082e7d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560e6082e850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x560e6082e8c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560e6082eae0 <col:43>
| `-NonNullAttr 0x560e6082eb38 <col:84, col:98> 1
|-FunctionDecl 0x560e6082ee40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560e6082eb88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560e6082ec08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x560e6082ec98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x560e6082eef8 <line:453:22>
| `-NonNullAttr 0x560e6082ef50 <col:63, col:77> 3
|-FunctionDecl 0x560e6082f228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560e6082ef98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560e6082f018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x560e6082f0a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560e6082f2e0 <line:457:22>
| `-NonNullAttr 0x560e6082f338 <col:63, col:80> 2 3
|-FunctionDecl 0x560e6082f528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x560e6082f388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560e6082f408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x560e6082f5d8 <line:459:22>
|-FunctionDecl 0x560e6082f9a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x560e6082f6a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x560e6082f840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x560e6082fa58 <col:52, col:69> 1 2
|-FunctionDecl 0x560e6082fc00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x560e6082fae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x560e6082fb60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x560e6082fe10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x560e6082fcc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x560e6082fd48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x560e6082ff68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x560e6082fed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x560e608300a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x560e60830148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x560e608301f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x560e608302e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x560e60830350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x560e60830520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix000_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x560e60830618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x560e608306d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x560e60830670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x560e608301d0 '__pthread_unwind_buf_t'
| |   `-Record 0x560e60830148 ''
| `-AlignedAttr 0x560e60830728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x560e608307a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x560e60830900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x560e60830968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x560e608309d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x560e60830a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x560e60830c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560e60830b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560e60830e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560e60830cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560e60830fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560e60830ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x560e60831088 <line:488:22>
|-RecordDecl 0x560e608310e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x560e608313f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x560e60831258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x560e608312d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x560e608314a8 <col:86>
| `-ReturnsTwiceAttr 0x560e60831500 <col:12> Implicit
|-FunctionDecl 0x560e60831828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560e608315d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x560e608316e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x560e608318d8 <line:494:22>
| `-NonNullAttr 0x560e60831930 <col:63, col:77> 1
|-FunctionDecl 0x560e60831aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560e60831978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560e60831b50 <line:496:22>
| `-NonNullAttr 0x560e60831ba8 <col:63, col:77> 1
|-FunctionDecl 0x560e60831cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560e60831bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560e60831d58 <line:498:22>
| `-NonNullAttr 0x560e60831db0 <col:52, col:66> 1
|-FunctionDecl 0x560e60831ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560e60831e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560e60831f90 <line:500:22>
| `-NonNullAttr 0x560e60831fe8 <col:52, col:66> 1
|-FunctionDecl 0x560e60832228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560e60832038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560e608320c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560e608322d8 <col:36>
| `-NonNullAttr 0x560e60832330 <col:66, col:83> 1 2
|-FunctionDecl 0x560e60832430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560e60832378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560e608324d8 <line:505:22>
| `-NonNullAttr 0x560e60832530 <col:52, col:66> 1
|-FunctionDecl 0x560e608327c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e608325e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560e60832660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560e60832878 <line:509:22>
| `-NonNullAttr 0x560e608328d0 <col:63, col:80> 1 2
|-FunctionDecl 0x560e60832b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x560e60832918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560e60832998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x560e60832a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x560e60832c50 <line:513:22>
| `-NonNullAttr 0x560e60832ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x560e60832e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560e60832cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560e60832ee8 <line:515:22>
| `-NonNullAttr 0x560e60832f40 <col:63, col:77> 1
|-FunctionDecl 0x560e60833128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560e60832ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560e608331d0 <line:517:22>
| `-NonNullAttr 0x560e60833228 <col:63, col:77> 1
|-FunctionDecl 0x560e60833330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560e60833278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560e608333d8 <line:519:22>
| `-NonNullAttr 0x560e60833430 <col:63, col:77> 1
|-FunctionDecl 0x560e60833658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e60833478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560e608334f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x560e60833708 <line:523:22>
| `-NonNullAttr 0x560e60833760 <col:63, col:80> 1 2
|-FunctionDecl 0x560e60833968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560e608337a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560e60833828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x560e60833a18 <line:526:22>
| `-NonNullAttr 0x560e60833a70 <col:63, col:77> 1
|-FunctionDecl 0x560e60833c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e60833ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560e60833b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560e60833cc8 <line:529:22>
| `-NonNullAttr 0x560e60833d20 <col:63, col:80> 1 2
|-FunctionDecl 0x560e60834f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560e60833d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560e60834e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560e60834fd0 <line:531:22>
| `-NonNullAttr 0x560e60835028 <col:63, col:77> 1
|-FunctionDecl 0x560e608351d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e60835078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560e608350f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560e60835288 <line:535:22>
| `-NonNullAttr 0x560e608352e0 <col:63, col:80> 1 2
|-FunctionDecl 0x560e60835468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560e60835328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560e608353a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560e60835518 <line:538:22>
| `-NonNullAttr 0x560e60835570 <col:63, col:77> 1
|-FunctionDecl 0x560e60835718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e608355b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560e60835638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560e608357c8 <line:542:22>
| `-NonNullAttr 0x560e60835820 <col:63, col:80> 1 2
|-FunctionDecl 0x560e608359a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560e60835868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560e608358e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x560e60835a58 <line:545:22>
| `-NonNullAttr 0x560e60835ab0 <col:63, col:77> 1
|-FunctionDecl 0x560e60835c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560e60835af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x560e60835b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560e60835d48 <line:548:22>
| `-NonNullAttr 0x560e60835da0 <col:63, col:80> 1 2
|-FunctionDecl 0x560e60836f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560e60835de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560e60836e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x560e60837008 <line:551:22>
| `-NonNullAttr 0x560e60837060 <col:63, col:77> 1
|-FunctionDecl 0x560e60837398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x560e60837140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560e60837250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x560e60837448 <col:29>
| `-NonNullAttr 0x560e608374a0 <col:70, col:84> 1
|-FunctionDecl 0x560e60837618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560e608374e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560e608376c0 <line:556:22>
| `-NonNullAttr 0x560e60837718 <col:63, col:77> 1
|-FunctionDecl 0x560e60837820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560e60837768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560e608378c8 <line:558:22>
| `-NonNullAttr 0x560e60837920 <col:52, col:66> 1
|-FunctionDecl 0x560e60837a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560e60837968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560e60837ac8 <line:560:19>
| `-NonNullAttr 0x560e60837b20 <col:49, col:63> 1
|-FunctionDecl 0x560e60837d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560e60837b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560e60837bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560e60837e08 <col:39>
| `-NonNullAttr 0x560e60837e90 <col:69, col:86> 1 2
|-FunctionDecl 0x560e60837f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560e60837ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560e60838038 <line:565:22>
| `-NonNullAttr 0x560e60838090 <col:52, col:66> 1
|-FunctionDecl 0x560e60838190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560e608380d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560e60838238 <line:567:22>
| `-NonNullAttr 0x560e60838290 <col:52, col:66> 1
|-FunctionDecl 0x560e60838448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560e608382d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560e60838368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560e608384f8 <col:39>
| `-NonNullAttr 0x560e60838550 <col:69, col:86> 1 2
|-FunctionDecl 0x560e60838650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560e60838598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560e608386f8 <line:572:22>
| `-NonNullAttr 0x560e60838750 <col:52, col:66> 1
|-FunctionDecl 0x560e60838938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560e60838800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560e608389e0 <line:574:22>
| `-NonNullAttr 0x560e60838a38 <col:63, col:77> 1
|-FunctionDecl 0x560e60838b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560e60838a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560e60838be8 <line:576:22>
| `-NonNullAttr 0x560e60838c40 <col:63, col:77> 1
|-FunctionDecl 0x560e60838ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e60838c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560e60838d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x560e60838f50 <line:580:22>
| `-NonNullAttr 0x560e60838fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x560e608391b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560e60838ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560e60839078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x560e60839268 <line:583:22>
| `-NonNullAttr 0x560e608392c0 <col:63, col:77> 1
|-FunctionDecl 0x560e60839468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e60839308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560e60839388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x560e60839518 <line:587:22>
| `-NonNullAttr 0x560e60839570 <col:63, col:80> 1 2
|-FunctionDecl 0x560e608396f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560e608395b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560e60839638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x560e608397a8 <col:36>
| `-NonNullAttr 0x560e60839800 <col:77, col:91> 1
|-FunctionDecl 0x560e60839b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x560e608398e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560e608399f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x560e60839be8 <line:592:22>
| `-NonNullAttr 0x560e60839c40 <col:63, col:77> 1
|-FunctionDecl 0x560e60839db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560e60839c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560e60839e60 <line:594:22>
| `-NonNullAttr 0x560e60839ee0 <col:63, col:77> 1
|-FunctionDecl 0x560e60839fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560e60839f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560e6083a088 <line:596:22>
| `-NonNullAttr 0x560e6083a0e0 <col:52, col:66> 1
|-FunctionDecl 0x560e6083a1e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560e6083a128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560e6083a288 <line:598:22>
| `-NonNullAttr 0x560e6083a2e0 <col:52, col:66> 1
|-FunctionDecl 0x560e6083a508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x560e6083a328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560e6083a3a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x560e6083a5b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x560e6083a8e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560e6083a638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560e6083a6b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560e6083a740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x560e6083a9a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x560e6083abb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560e6083aa80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560e6083ac60 <line:607:22>
| `-NonNullAttr 0x560e6083acb8 <col:63, col:77> 1
|-FunctionDecl 0x560e6083adc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560e6083ad08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560e6083ae68 <line:609:22>
| `-NonNullAttr 0x560e6083aef0 <col:63, col:77> 1
|-FunctionDecl 0x560e6083b118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e6083af38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560e6083afb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x560e6083b1c8 <line:613:22>
| `-NonNullAttr 0x560e6083b220 <col:63, col:80> 1 2
|-FunctionDecl 0x560e6083b428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x560e6083b268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560e6083b2e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x560e6083b4d8 <col:37>
| `-NonNullAttr 0x560e6083b530 <col:78, col:92> 1
|-FunctionDecl 0x560e6083b748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x560e6083b578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560e6083b620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x560e6083b7f8 <line:619:22>
| `-NonNullAttr 0x560e6083b850 <col:63, col:80> 1 2
|-FunctionDecl 0x560e6083ba18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x560e6083b898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560e6083b910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x560e6083bac8 <line:622:22>
| `-NonNullAttr 0x560e6083bb20 <col:63, col:77> 1
|-FunctionDecl 0x560e6083bdc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x560e6083bc00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x560e6083bc80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x560e6083be78 <line:624:22>
| `-NonNullAttr 0x560e6083bf00 <col:63, col:77> 1
|-FunctionDecl 0x560e6083c078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560e6083bf48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560e6083c120 <line:626:22>
| `-NonNullAttr 0x560e6083c178 <col:63, col:77> 1
|-FunctionDecl 0x560e6083c280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560e6083c1c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560e6083c328 <line:628:22>
| `-NonNullAttr 0x560e6083c380 <col:52, col:66> 1
|-FunctionDecl 0x560e6083c480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560e6083c3c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560e6083c528 <line:630:22>
| `-NonNullAttr 0x560e6083c580 <col:52, col:66> 1
|-FunctionDecl 0x560e6083c680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560e6083c5c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560e6083c728 <line:632:22>
| `-NonNullAttr 0x560e6083c780 <col:52, col:66> 1
|-FunctionDecl 0x560e6083cb58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x560e6083c860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x560e6083c970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560e6083c9f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x560e6083cc10 <line:636:22>
| `-NonNullAttr 0x560e6083cc68 <col:63, col:77> 1
|-FunctionDecl 0x560e6083cde8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560e6083ccb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560e6083ce90 <line:638:22>
| `-NonNullAttr 0x560e6083cf10 <col:63, col:77> 1
|-FunctionDecl 0x560e6083d010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560e6083cf58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560e6083d0b8 <line:640:22>
| `-NonNullAttr 0x560e6083d110 <col:52, col:66> 1
|-FunctionDecl 0x560e6083d2f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560e6083d1c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560e6083d3a0 <line:642:22>
| `-NonNullAttr 0x560e6083d3f8 <col:63, col:77> 1
|-FunctionDecl 0x560e6083d500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560e6083d448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560e6083d5a8 <line:644:22>
| `-NonNullAttr 0x560e6083d600 <col:63, col:77> 1
|-FunctionDecl 0x560e6083d828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560e6083d648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560e6083d6c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x560e6083d8d8 <line:648:22>
| `-NonNullAttr 0x560e6083d930 <col:63, col:80> 1 2
|-FunctionDecl 0x560e6083db38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x560e6083d978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x560e6083d9f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x560e6083dbe8 <line:651:22>
| `-NonNullAttr 0x560e6083dc40 <col:63, col:77> 1
|-FunctionDecl 0x560e6083dfa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x560e6083dd20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x560e6083de40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x560e6083e058 <line:654:22>
| `-NonNullAttr 0x560e6083e0b0 <col:63, col:77> 1
|-FunctionDecl 0x560e6083e208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x560e6083e0f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560e6083e2b0 <col:69>
|-FunctionDecl 0x560e6083e428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x560e6083e318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560e6083e4d0 <col:72>
|-FunctionDecl 0x560e6083e708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x560e6083e538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x560e6083e5e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x560e6083e7b8 <col:44>
|-FunctionDecl 0x560e6083e9d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x560e6083e820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560e6083e898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x560e6083ea88 <line:661:22>
| `-NonNullAttr 0x560e6083eae0 <col:63, col:77> 2
|-FunctionDecl 0x560e6083ff50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x560e6083ebc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x560e6083ecd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x560e6083ede0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x560e60840008 <col:47>
|-FunctionDecl 0x560e60840110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x560e60840078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560e60840268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x560e608401d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560e60840330 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x560e608403f0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x560e608404b0 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x560e60840568 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x560e608405e8 prev 0x560e60840568 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x560e60840650 <col:24> 'int' 0
|-VarDecl 0x560e60840688 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x560e60840708 prev 0x560e60840688 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x560e60840770 <col:27> 'int' 0
|-VarDecl 0x560e608407a8 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x560e60840828 prev 0x560e608407a8 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x560e60840890 <col:27> 'int' 0
|-VarDecl 0x560e608408c8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x560e60840948 prev 0x560e608408c8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x560e608409b0 <col:27> 'int' 0
|-VarDecl 0x560e608409e8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x560e60840a68 prev 0x560e608409e8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x560e60840ad0 <col:27> 'int' 0
|-VarDecl 0x560e60840b00 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x560e60840b78 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x560e60840bf8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x560e60840c78 prev 0x560e60840bf8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x560e60840ce0 <col:9> 'int' 0
|-VarDecl 0x560e60840d10 <line:685:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x560e60840d90 <line:686:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x560e60840e08 <line:687:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x560e60840e80 <line:688:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x560e60840f20 <line:689:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x560e60840f98 <line:690:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x560e60841010 <line:691:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x560e60841088 <line:692:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x560e60841100 <line:693:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x560e60841180 <line:694:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x560e60841200 <line:695:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x560e60841278 <line:696:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x560e608412f8 <line:697:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x560e60841370 <line:698:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x560e608413f0 <line:699:1, col:5> col:5 used y 'int'
|-VarDecl 0x560e60841470 prev 0x560e608413f0 <line:700:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x560e608414d8 <col:9> 'int' 0
|-VarDecl 0x560e60841508 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x560e60841580 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x560e60841698 prev 0x560e60840110 <line:703:1, line:733:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x560e60841600 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560e60844738 <line:704:1, line:733:1>
|   |-CallExpr 0x560e608417a8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e60841790 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60841740 <col:3> 'void ()' Function 0x560e607e74b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e60841808 <line:706:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560e608417c8 <col:3> 'int' lvalue Var 0x560e60841470 'y' 'int'
|   | `-IntegerLiteral 0x560e608417e8 <col:7> 'int' 1
|   |-CallExpr 0x560e60841860 <line:707:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e60841848 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60841828 <col:3> 'void ()' Function 0x560e607e7570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560e608418b8 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e608418a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60841880 <col:3> 'void ()' Function 0x560e607e74b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e60841930 <line:709:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560e608418d8 <col:3> 'int' lvalue Var 0x560e60840708 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x560e60841918 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e608418f8 <col:25> 'int' lvalue Var 0x560e60841470 'y' 'int'
|   |-CallExpr 0x560e60841988 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e60841970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60841950 <col:3> 'void ()' Function 0x560e607e7570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560e608419e0 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e608419c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e608419a8 <col:3> 'void ()' Function 0x560e607e74b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e60841aa8 <line:712:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560e60841a00 <col:3> '_Bool' lvalue Var 0x560e60841508 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x560e60841a88 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560e60841a70 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560e60841a20 <col:19> '_Bool (void)' Function 0x560e607e6c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560e60841b40 <line:713:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560e60841ac8 <col:3> '_Bool' lvalue Var 0x560e60841580 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x560e60841b20 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560e60841b08 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560e60841ae8 <col:19> '_Bool (void)' Function 0x560e607e6c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560e60841bb8 <line:714:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560e60841b60 <col:3> '_Bool' lvalue Var 0x560e60840d10 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560e60841ba0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e60841b80 <col:21> '_Bool' lvalue Var 0x560e60841580 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560e60841c30 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560e60841bd8 <col:3> 'int' lvalue Var 0x560e60840d90 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560e60841c18 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e60841bf8 <col:15> 'int' lvalue Var 0x560e60840c78 'x' 'int'
|   |-BinaryOperator 0x560e60842088 <line:716:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560e60841c50 <col:3> 'int' lvalue Var 0x560e60840c78 'x' 'int'
|   | `-ConditionalOperator 0x560e60842058 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560e60841e60 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560e60841d80 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560e60841ca8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560e60841c90 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560e60841c70 <col:8> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560e60841d60 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560e60841cf8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560e60841ce0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560e60841cc0 <col:27> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x560e60841d48 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560e60841d30 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560e60841d10 <col:46> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560e60841e40 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560e60841dd8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560e60841dc0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560e60841da0 <col:65> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x560e60841e28 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560e60841e10 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560e60841df0 <col:84> '_Bool' lvalue Var 0x560e60841010 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x560e60842040 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e60841e80 <col:101> 'int' lvalue Var 0x560e60840c78 'x' 'int'
|   |   `-ParenExpr 0x560e60842020 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560e60841ff0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560e60841f60 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560e60841ef8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560e60841ee0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560e60841ea0 <col:106> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560e60841f48 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560e60841f30 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560e60841ec0 <col:124> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560e60841fc0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560e60841f80 <col:141> 'int' lvalue Var 0x560e60841200 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560e60841fd8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e60841fa0 <col:153> 'int' lvalue Var 0x560e608412f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x560e60842598 <line:717:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560e608420a8 <col:3> 'int' lvalue Var 0x560e60841200 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x560e60842568 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560e60842538 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560e60842520 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560e608420c8 <col:15> '_Bool' lvalue Var 0x560e60841580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560e60842550 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e608420e8 <col:31> 'int' lvalue Var 0x560e60841200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560e60842500 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560e608424d0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560e608422f8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560e60842218 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560e60842140 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560e60842128 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560e60842108 <col:45> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560e608421f8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560e60842190 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560e60842178 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560e60842158 <col:64> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x560e608421e0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560e608421c8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560e608421a8 <col:83> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560e608422d8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560e60842270 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560e60842258 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560e60842238 <col:102> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x560e608422c0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560e608422a8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560e60842288 <col:121> '_Bool' lvalue Var 0x560e60841010 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560e608424b8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560e60842318 <col:138> 'int' lvalue Var 0x560e60841200 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x560e60842498 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560e60842468 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560e608423d8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560e60842390 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560e60842378 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560e60842338 <col:151> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560e608423c0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560e608423a8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560e60842358 <col:169> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x560e60842438 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560e608423f8 <col:186> 'int' lvalue Var 0x560e60841200 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560e60842450 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560e60842418 <col:198> 'int' lvalue Var 0x560e60841200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x560e60842aa8 <line:718:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560e608425b8 <col:3> 'int' lvalue Var 0x560e608412f8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x560e60842a78 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560e60842a48 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560e60842a30 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560e608425d8 <col:15> '_Bool' lvalue Var 0x560e60841580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560e60842a60 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e608425f8 <col:31> 'int' lvalue Var 0x560e608412f8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x560e60842a10 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560e608429e0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560e60842808 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560e60842728 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560e60842650 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560e60842638 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560e60842618 <col:45> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560e60842708 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560e608426a0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560e60842688 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560e60842668 <col:64> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x560e608426f0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560e608426d8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560e608426b8 <col:83> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560e608427e8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560e60842780 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560e60842768 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560e60842748 <col:102> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x560e608427d0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560e608427b8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560e60842798 <col:121> '_Bool' lvalue Var 0x560e60841010 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560e608429c8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560e60842828 <col:138> 'int' lvalue Var 0x560e608412f8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x560e608429a8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560e60842978 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560e608428e8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560e608428a0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560e60842888 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560e60842848 <col:151> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560e608428d0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560e608428b8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560e60842868 <col:169> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x560e60842948 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560e60842908 <col:186> 'int' lvalue Var 0x560e608412f8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560e60842960 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560e60842928 <col:198> 'int' lvalue Var 0x560e608412f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x560e60843068 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560e60842ac8 <col:3> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560e60843050 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e60843020 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560e60842fd8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e60842fc0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e60842ae8 <col:20> '_Bool' lvalue Var 0x560e60841580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e60843008 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e60842ff0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e60842b08 <col:36> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560e60842fa0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560e60842f70 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560e60842d18 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560e60842c38 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560e60842b60 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560e60842b48 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560e60842b28 <col:55> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560e60842c18 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560e60842bb0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560e60842b98 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560e60842b78 <col:74> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560e60842c00 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560e60842be8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560e60842bc8 <col:93> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560e60842cf8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560e60842c90 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560e60842c78 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560e60842c58 <col:112> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560e60842ce0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560e60842cc8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560e60842ca8 <col:131> '_Bool' lvalue Var 0x560e60841010 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560e60842f58 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560e60842f40 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560e60842d38 <col:148> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560e60842f08 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560e60842ed8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560e60842df8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560e60842db0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560e60842d98 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560e60842d58 <col:166> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560e60842de0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560e60842dc8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560e60842d78 <col:184> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560e60842e90 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560e60842e48 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560e60842e18 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560e60842ec0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560e60842ea8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560e60842e70 <col:212> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560e60843630 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560e60843088 <col:3> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560e60843618 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e608435e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560e608435a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e60843588 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e608430a8 <col:20> '_Bool' lvalue Var 0x560e60841580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e608435d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e608435b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e608430c8 <col:36> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560e60843568 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560e60843538 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560e608432d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560e608431f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560e60843120 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560e60843108 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560e608430e8 <col:55> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560e608431d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560e60843170 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560e60843158 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560e60843138 <col:74> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560e608431c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560e608431a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560e60843188 <col:93> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560e608432b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560e60843250 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560e60843238 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560e60843218 <col:112> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560e608432a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560e60843288 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560e60843268 <col:131> '_Bool' lvalue Var 0x560e60841010 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560e60843520 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560e60843508 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560e608432f8 <col:148> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560e608434e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560e608434b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560e608433b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560e60843370 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560e60843358 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560e60843318 <col:166> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560e608433a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560e60843388 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560e60843338 <col:184> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560e60843488 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560e60843408 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560e608433d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560e608434a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560e60843460 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560e60843430 <col:219> 'int' 0
|   |-BinaryOperator 0x560e60843bd8 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560e60843650 <col:3> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560e60843bc0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e60843b90 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560e60843b48 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e60843b30 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e60843670 <col:20> '_Bool' lvalue Var 0x560e60841580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e60843b78 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e60843b60 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e60843690 <col:36> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x560e60843b10 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560e60843ae0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560e608438a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560e608437c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560e608436e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560e608436d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560e608436b0 <col:55> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560e608437a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560e60843738 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560e60843720 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560e60843700 <col:74> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560e60843788 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560e60843770 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560e60843750 <col:93> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560e60843880 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560e60843818 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560e60843800 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560e608437e0 <col:112> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560e60843868 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560e60843850 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560e60843830 <col:131> '_Bool' lvalue Var 0x560e60841010 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560e60843ac8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560e60843ab0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560e608438c0 <col:148> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x560e60843a90 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560e60843a60 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560e60843980 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560e60843938 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560e60843920 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560e608438e0 <col:166> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560e60843968 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560e60843950 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560e60843900 <col:184> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560e60843a18 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560e608439d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560e608439a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560e60843a48 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560e60843a30 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560e608439f8 <col:212> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560e608441c8 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560e60843bf8 <col:3> '_Bool' lvalue Var 0x560e60841010 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560e608441b0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e60844180 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560e60844138 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e60844120 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e60843c18 <col:20> '_Bool' lvalue Var 0x560e60841580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e60844168 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e60844150 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e60843c38 <col:36> '_Bool' lvalue Var 0x560e60841010 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x560e60844100 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560e608440d0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560e60843e48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560e60843d68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560e60843c90 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560e60843c78 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560e60843c58 <col:55> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560e60843d48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560e60843ce0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560e60843cc8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560e60843ca8 <col:74> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560e60843d30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560e60843d18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560e60843cf8 <col:93> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560e60843e28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560e60843dc0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560e60843da8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560e60843d88 <col:112> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560e60843e10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560e60843df8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560e60843dd8 <col:131> '_Bool' lvalue Var 0x560e60841010 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560e608440b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560e608440a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560e60843e68 <col:148> '_Bool' lvalue Var 0x560e60841010 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x560e60844080 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560e60844050 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560e60843f50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560e60843ee0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560e60843ec8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560e60843e88 <col:166> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560e60843f10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560e60843ef8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560e60843ea8 <col:184> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560e60844020 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560e60843fa0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560e60843f70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560e60844038 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560e60843ff8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560e60843fc8 <col:219> 'int' 0
|   |-BinaryOperator 0x560e60844240 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560e608441e8 <col:3> 'int' lvalue Var 0x560e60840828 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x560e60844228 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e60844208 <col:25> 'int' lvalue Var 0x560e60840c78 'x' 'int'
|   |-BinaryOperator 0x560e60844370 <line:724:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560e60844260 <col:3> 'int' lvalue Var 0x560e60840c78 'x' 'int'
|   | `-ConditionalOperator 0x560e60844340 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560e608442f8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560e608442e0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560e60844280 <col:7> '_Bool' lvalue Var 0x560e60840d10 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560e60844310 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e608442a0 <col:25> 'int' lvalue Var 0x560e60840d90 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560e60844328 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560e608442c0 <col:37> 'int' lvalue Var 0x560e60840c78 'x' 'int'
|   |-BinaryOperator 0x560e60844408 <line:725:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560e60844390 <col:3> '_Bool' lvalue Var 0x560e60840d10 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560e608443e0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560e608443b0 <col:28> 'int' 0
|   |-CallExpr 0x560e60844460 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e60844448 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60844428 <col:3> 'void ()' Function 0x560e607e7570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560e608444b8 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e608444a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60844480 <col:3> 'void ()' Function 0x560e607e74b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x560e60844510 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e608444f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e608444d8 <col:3> 'void ()' Function 0x560e607e7570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560e60844568 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e60844550 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60844530 <col:3> 'void ()' Function 0x560e607e74b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e60844620 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560e60844588 <col:3> 'int' lvalue Var 0x560e608405e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560e60844600 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560e608445e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e608445a8 <col:22> 'int' lvalue Var 0x560e608405e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560e608445c8 <col:41> 'int' 1
|   |-CallExpr 0x560e60844678 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e60844660 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60844640 <col:3> 'void ()' Function 0x560e607e7570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560e60844728 <line:732:3, col:36>
|     `-CallExpr 0x560e60844708 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560e608446f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560e60844698 <col:10> 'void *(void)' Function 0x560e607e6fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560e608448d8 prev 0x560e60840268 <line:734:1, line:777:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x560e60844840 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560e60848ad8 <line:735:1, line:777:1>
|   |-CallExpr 0x560e608449b8 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e608449a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60844980 <col:3> 'void ()' Function 0x560e607e74b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e60844a30 <line:737:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560e608449d8 <col:3> 'int' lvalue Var 0x560e608412f8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x560e60844a18 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e608449f8 <col:15> 'int' lvalue Var 0x560e60841200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x560e60844a90 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560e60844a50 <col:3> 'int' lvalue Var 0x560e60841200 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x560e60844a70 <col:15> 'int' 1
|   |-BinaryOperator 0x560e60844b08 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560e60844ab0 <col:3> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560e60844af0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e60844ad0 <col:20> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560e60844ba0 <line:740:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560e60844b28 <col:3> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x560e60844b78 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560e60844b48 <col:27> 'int' 1
|   |-CallExpr 0x560e60844d28 <line:741:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x560e60844d10 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560e60844bc0 <col:3> 'void (int)' Function 0x560e607e7238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x560e60844cc0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x560e60844ca0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x560e60844c80 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x560e60844c38 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x560e60844c20 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560e60844be0 <col:23> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x560e60844c68 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x560e60844c50 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x560e60844c00 <col:41> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560e60844da8 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560e60844d50 <col:3> '_Bool' lvalue Var 0x560e60840f98 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x560e60844d90 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e60844d70 <col:20> '_Bool' lvalue Var 0x560e60840e08 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x560e60844e20 <line:743:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560e60844dc8 <col:3> '_Bool' lvalue Var 0x560e60841010 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560e60844e08 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e60844de8 <col:20> '_Bool' lvalue Var 0x560e60840e80 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560e60844e98 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560e60844e40 <col:3> '_Bool' lvalue Var 0x560e60841088 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560e60844e80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e60844e60 <col:20> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560e60844f30 <line:745:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560e60844eb8 <col:3> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x560e60844f08 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560e60844ed8 <col:27> 'int' 1
|   |-CallExpr 0x560e60844f98 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e60844f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60844f60 <col:3> 'void ()' Function 0x560e607e7570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560e60844ff0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e60844fd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60844fb8 <col:3> 'void ()' Function 0x560e607e74b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e60845088 <line:748:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560e60845010 <col:3> '_Bool' lvalue Var 0x560e60841508 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x560e60845068 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560e60845050 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560e60845030 <col:19> '_Bool (void)' Function 0x560e607e6c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560e60845120 <line:749:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560e608450a8 <col:3> '_Bool' lvalue Var 0x560e60841580 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x560e60845100 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560e608450e8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560e608450c8 <col:19> '_Bool (void)' Function 0x560e607e6c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560e60845198 <line:750:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560e60845140 <col:3> '_Bool' lvalue Var 0x560e60840d10 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560e60845180 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e60845160 <col:21> '_Bool' lvalue Var 0x560e60841580 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560e60845210 <line:751:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560e608451b8 <col:3> 'int' lvalue Var 0x560e60840d90 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560e608451f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e608451d8 <col:15> 'int' lvalue Var 0x560e60840c78 'x' 'int'
|   |-BinaryOperator 0x560e60845648 <line:752:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560e60845230 <col:3> 'int' lvalue Var 0x560e60840c78 'x' 'int'
|   | `-ConditionalOperator 0x560e60845618 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560e60845440 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560e60845360 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560e60845288 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560e60845270 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560e60845250 <col:8> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560e60845340 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560e608452d8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560e608452c0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560e608452a0 <col:27> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x560e60845328 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560e60845310 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560e608452f0 <col:46> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560e60845420 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560e608453b8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560e608453a0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560e60845380 <col:65> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x560e60845408 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560e608453f0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560e608453d0 <col:84> '_Bool' lvalue Var 0x560e60841088 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x560e60845600 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e60845460 <col:101> 'int' lvalue Var 0x560e60840c78 'x' 'int'
|   |   `-ParenExpr 0x560e608455e0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560e608455b0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560e60845520 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560e608454d8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560e608454c0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560e60845480 <col:106> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560e60845508 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560e608454f0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560e608454a0 <col:124> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560e60845580 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560e60845540 <col:141> 'int' lvalue Var 0x560e60841200 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560e60845598 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e60845560 <col:153> 'int' lvalue Var 0x560e608412f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x560e60845b58 <line:753:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560e60845668 <col:3> 'int' lvalue Var 0x560e60841200 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x560e60845b28 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560e60845af8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560e60845ae0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560e60845688 <col:15> '_Bool' lvalue Var 0x560e60841580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560e60845b10 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e608456a8 <col:31> 'int' lvalue Var 0x560e60841200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560e60845ac0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560e60845a90 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560e608458b8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560e608457d8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560e60845700 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560e608456e8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560e608456c8 <col:45> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560e608457b8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560e60845750 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560e60845738 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560e60845718 <col:64> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x560e608457a0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560e60845788 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560e60845768 <col:83> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560e60845898 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560e60845830 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560e60845818 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560e608457f8 <col:102> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x560e60845880 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560e60845868 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560e60845848 <col:121> '_Bool' lvalue Var 0x560e60841088 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560e60845a78 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560e608458d8 <col:138> 'int' lvalue Var 0x560e60841200 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x560e60845a58 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560e60845a28 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560e60845998 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560e60845950 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560e60845938 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560e608458f8 <col:151> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560e60845980 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560e60845968 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560e60845918 <col:169> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x560e608459f8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560e608459b8 <col:186> 'int' lvalue Var 0x560e60841200 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560e60845a10 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560e608459d8 <col:198> 'int' lvalue Var 0x560e60841200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x560e608460a0 <line:754:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560e60845b78 <col:3> 'int' lvalue Var 0x560e608412f8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x560e60846070 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560e60846040 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560e60846028 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560e60845b98 <col:15> '_Bool' lvalue Var 0x560e60841580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560e60846058 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e60845bb8 <col:31> 'int' lvalue Var 0x560e608412f8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x560e60846008 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560e60845fd8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560e60845dc8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560e60845ce8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560e60845c10 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560e60845bf8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560e60845bd8 <col:45> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560e60845cc8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560e60845c60 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560e60845c48 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560e60845c28 <col:64> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x560e60845cb0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560e60845c98 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560e60845c78 <col:83> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560e60845da8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560e60845d40 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560e60845d28 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560e60845d08 <col:102> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x560e60845d90 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560e60845d78 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560e60845d58 <col:121> '_Bool' lvalue Var 0x560e60841088 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560e60845fc0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560e60845de8 <col:138> 'int' lvalue Var 0x560e608412f8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x560e60845fa0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560e60845f70 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560e60845ea8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560e60845e60 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560e60845e48 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560e60845e08 <col:151> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560e60845e90 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560e60845e78 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560e60845e28 <col:169> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x560e60845f08 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560e60845ec8 <col:186> 'int' lvalue Var 0x560e608412f8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560e60845f20 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560e60845ee8 <col:198> 'int' lvalue Var 0x560e608412f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x560e60846648 <line:755:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560e608460c0 <col:3> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560e60846630 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e60846600 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560e608465b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e608465a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e608460e0 <col:20> '_Bool' lvalue Var 0x560e60841580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e608465e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e608465d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e60846100 <col:36> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560e60846580 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560e60846550 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560e60846310 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560e60846230 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560e60846158 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560e60846140 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560e60846120 <col:55> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560e60846210 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560e608461a8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560e60846190 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560e60846170 <col:74> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x560e608461f8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560e608461e0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560e608461c0 <col:93> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560e608462f0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560e60846288 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560e60846270 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560e60846250 <col:112> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x560e608462d8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560e608462c0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560e608462a0 <col:131> '_Bool' lvalue Var 0x560e60841088 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x560e60846538 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560e60846520 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560e60846330 <col:148> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560e60846500 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560e608464d0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560e608463f0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560e608463a8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560e60846390 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560e60846350 <col:166> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560e608463d8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560e608463c0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560e60846370 <col:184> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560e60846488 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560e60846440 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560e60846410 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560e608464b8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560e608464a0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560e60846468 <col:212> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560e60846c10 <line:756:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560e60846668 <col:3> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560e60846bf8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e60846bc8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560e60846b80 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e60846b68 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e60846688 <col:20> '_Bool' lvalue Var 0x560e60841580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e60846bb0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e60846b98 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e608466a8 <col:36> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560e60846b48 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560e60846b18 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560e608468b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560e608467d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560e60846700 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560e608466e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560e608466c8 <col:55> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560e608467b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560e60846750 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560e60846738 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560e60846718 <col:74> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x560e608467a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560e60846788 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560e60846768 <col:93> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560e60846898 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560e60846830 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560e60846818 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560e608467f8 <col:112> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x560e60846880 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560e60846868 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560e60846848 <col:131> '_Bool' lvalue Var 0x560e60841088 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x560e60846b00 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560e60846ae8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560e608468d8 <col:148> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560e60846ac8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560e60846a98 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560e60846998 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560e60846950 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560e60846938 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560e608468f8 <col:166> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560e60846980 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560e60846968 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560e60846918 <col:184> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560e60846a68 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560e608469e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560e608469b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560e60846a80 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560e60846a40 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560e60846a10 <col:219> 'int' 0
|   |-BinaryOperator 0x560e608471d8 <line:757:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560e60846c30 <col:3> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560e608471c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e60847190 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560e60847148 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e60847130 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e60846c50 <col:20> '_Bool' lvalue Var 0x560e60841580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e60847178 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e60847160 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e60846c70 <col:36> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x560e60847110 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560e608470e0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560e60846e80 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560e60846da0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560e60846cc8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560e60846cb0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560e60846c90 <col:55> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560e60846d80 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560e60846d18 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560e60846d00 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560e60846ce0 <col:74> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x560e60846d68 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560e60846d50 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560e60846d30 <col:93> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560e60846e60 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560e60846df8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560e60846de0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560e60846dc0 <col:112> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x560e60846e48 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560e60846e30 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560e60846e10 <col:131> '_Bool' lvalue Var 0x560e60841088 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x560e608470c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560e608470b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560e60846ea0 <col:148> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x560e60847090 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560e60847060 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560e60846f80 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560e60846f18 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560e60846f00 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560e60846ec0 <col:166> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560e60846f48 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560e60846f30 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560e60846ee0 <col:184> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560e60847018 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560e60846fd0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560e60846fa0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560e60847048 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560e60847030 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560e60846ff8 <col:212> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560e608477a0 <line:758:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560e608471f8 <col:3> '_Bool' lvalue Var 0x560e60841088 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560e60847788 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e60847758 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560e60847710 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e608476f8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e60847218 <col:20> '_Bool' lvalue Var 0x560e60841580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e60847740 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560e60847728 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560e60847238 <col:36> '_Bool' lvalue Var 0x560e60841088 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x560e608476d8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560e608476a8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560e60847448 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560e60847368 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560e60847290 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560e60847278 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560e60847258 <col:55> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560e60847348 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560e608472e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560e608472c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560e608472a8 <col:74> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x560e60847330 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560e60847318 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560e608472f8 <col:93> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560e60847428 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560e608473c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560e608473a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560e60847388 <col:112> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x560e60847410 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560e608473f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560e608473d8 <col:131> '_Bool' lvalue Var 0x560e60841088 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x560e60847690 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560e60847678 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560e60847468 <col:148> '_Bool' lvalue Var 0x560e60841088 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x560e60847658 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560e60847628 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560e60847528 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560e608474e0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560e608474c8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560e60847488 <col:166> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560e60847510 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560e608474f8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560e608474a8 <col:184> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560e608475f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560e60847578 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560e60847548 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560e60847610 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560e608475d0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560e608475a0 <col:219> 'int' 0
|   |-BinaryOperator 0x560e60847818 <line:759:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560e608477c0 <col:3> 'int' lvalue Var 0x560e60840948 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x560e60847800 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e608477e0 <col:25> 'int' lvalue Var 0x560e60840c78 'x' 'int'
|   |-BinaryOperator 0x560e60847948 <line:760:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560e60847838 <col:3> 'int' lvalue Var 0x560e60840c78 'x' 'int'
|   | `-ConditionalOperator 0x560e60847918 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560e608478d0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560e608478b8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560e60847858 <col:7> '_Bool' lvalue Var 0x560e60840d10 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560e608478e8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e60847878 <col:25> 'int' lvalue Var 0x560e60840d90 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560e60847900 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560e60847898 <col:37> 'int' lvalue Var 0x560e60840c78 'x' 'int'
|   |-BinaryOperator 0x560e608479e0 <line:761:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560e60847968 <col:3> '_Bool' lvalue Var 0x560e60840d10 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560e608479b8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560e60847988 <col:28> 'int' 0
|   |-CallExpr 0x560e60847a38 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e60847a20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60847a00 <col:3> 'void ()' Function 0x560e607e7570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560e60847a90 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e60847a78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60847a58 <col:3> 'void ()' Function 0x560e607e74b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e60847b08 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560e60847ab0 <col:3> 'int' lvalue Var 0x560e60840a68 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x560e60847af0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560e60847ad0 <col:25> 'int' lvalue Var 0x560e60841470 'y' 'int'
|   |-CallExpr 0x560e60847b60 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e60847b48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60847b28 <col:3> 'void ()' Function 0x560e607e7570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560e60847bb8 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e60847ba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60847b80 <col:3> 'void ()' Function 0x560e607e74b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e60847ea0 <line:767:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560e60847bd8 <col:3> 'int' lvalue Var 0x560e60840c78 'x' 'int'
|   | `-ConditionalOperator 0x560e60847e70 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560e60847c98 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560e60847c50 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560e60847c38 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560e60847bf8 <col:7> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560e60847c80 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560e60847c68 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560e60847c18 <col:25> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x560e60847e58 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e60847cb8 <col:42> 'int' lvalue Var 0x560e60841200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560e60847e38 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560e60847e08 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560e60847d78 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560e60847d30 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560e60847d18 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560e60847cd8 <col:55> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560e60847d60 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560e60847d48 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560e60847cf8 <col:73> '_Bool' lvalue Var 0x560e60841088 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560e60847dd8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560e60847d98 <col:90> 'int' lvalue Var 0x560e608412f8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560e60847df0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e60847db8 <col:102> 'int' lvalue Var 0x560e60840c78 'x' 'int'
|   |-BinaryOperator 0x560e608480b8 <line:768:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560e60847ec0 <col:3> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560e608480a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e60848070 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560e60847f90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560e60847f38 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560e60847f20 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560e60847ee0 <col:20> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560e60847f68 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560e60847f50 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560e60847f00 <col:38> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e60848028 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560e60847fe0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560e60847fb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560e60848058 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560e60848040 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e60848008 <col:66> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560e608483a0 <line:769:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560e608480d8 <col:3> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560e60848388 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e60848358 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560e60848278 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560e60848198 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560e60848150 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560e60848138 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560e608480f8 <col:20> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560e60848180 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560e60848168 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560e60848118 <col:38> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560e60848258 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560e60848210 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560e608481f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560e608481b8 <col:56> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560e60848240 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560e60848228 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560e608481d8 <col:74> '_Bool' lvalue Var 0x560e60841088 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e60848310 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560e608482c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560e60848298 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560e60848340 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560e60848328 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e608482f0 <col:102> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560e608485a8 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560e608483c0 <col:3> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560e60848590 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e60848560 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560e60848480 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560e60848438 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560e60848420 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560e608483e0 <col:20> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560e60848468 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560e60848450 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560e60848400 <col:38> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e60848518 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560e608484d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560e608484a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560e60848548 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560e60848530 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e608484f8 <col:66> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560e60848890 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560e608485c8 <col:3> '_Bool' lvalue Var 0x560e60841088 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560e60848878 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560e60848848 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560e60848768 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560e60848688 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560e60848640 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560e60848628 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560e608485e8 <col:20> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560e60848670 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560e60848658 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560e60848608 <col:38> '_Bool' lvalue Var 0x560e60840f20 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560e60848748 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560e60848700 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560e608486e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560e608486a8 <col:56> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560e60848730 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560e60848718 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560e608486c8 <col:74> '_Bool' lvalue Var 0x560e60841088 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560e60848800 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560e608487b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560e60848788 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560e60848830 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560e60848818 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560e608487e0 <col:102> '_Bool' lvalue Var 0x560e60841088 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x560e608488e8 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e608488d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e608488b0 <col:3> 'void ()' Function 0x560e607e7570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560e60848940 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560e60848928 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60848908 <col:3> 'void ()' Function 0x560e607e74b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560e608489f8 <line:774:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560e60848960 <col:3> 'int' lvalue Var 0x560e608405e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560e608489d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560e608489c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560e60848980 <col:22> 'int' lvalue Var 0x560e608405e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560e608489a0 <col:41> 'int' 1
|   |-CallExpr 0x560e60848a50 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560e60848a38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560e60848a18 <col:3> 'void ()' Function 0x560e607e7570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560e60848ac8 <line:776:3, col:36>
|     `-CallExpr 0x560e60848aa8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560e60848a90 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560e60848a70 <col:10> 'void *(void)' Function 0x560e607e6fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560e60848c50 prev 0x560e60840330 <line:778:1, line:780:1> line:778:6 fence 'void ()'
| `-CompoundStmt 0x560e60848cf0 <line:779:1, line:780:1>
|-FunctionDecl 0x560e60848d20 prev 0x560e608403f0 <line:781:1, line:783:1> line:781:6 isync 'void ()'
| `-CompoundStmt 0x560e60848dc0 <line:782:1, line:783:1>
|-FunctionDecl 0x560e60848df0 prev 0x560e608404b0 <line:784:1, line:786:1> line:784:6 lwfence 'void ()'
| `-CompoundStmt 0x560e60848e90 <line:785:1, line:786:1>
`-FunctionDecl 0x560e60848fa0 <line:787:1, line:809:1> line:787:5 main 'int ()'
  `-CompoundStmt 0x560e6084a9f0 <line:788:1, line:809:1>
    |-DeclStmt 0x560e608490b8 <line:789:3, col:16>
    | `-VarDecl 0x560e60849050 <col:3, col:13> col:13 used t10 'pthread_t':'unsigned long'
    |-CallExpr 0x560e608492c8 <line:790:3, col:52> 'int'
    | |-ImplicitCastExpr 0x560e608492b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560e608490d0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560e608279d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560e60849110 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560e608490f0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560e60849050 't10' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560e60849308 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560e60849188 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x560e60849160 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560e60849128 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x560e60849320 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560e608491a8 <col:37> 'void *(void *)' Function 0x560e60841698 'P0' 'void *(void *)'
    | `-ParenExpr 0x560e60849228 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x560e60849200 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560e608491c8 <col:50> 'int' 0
    |-DeclStmt 0x560e608493b0 <line:791:3, col:16>
    | `-VarDecl 0x560e60849348 <col:3, col:13> col:13 used t11 'pthread_t':'unsigned long'
    |-CallExpr 0x560e60849558 <line:792:3, col:52> 'int'
    | |-ImplicitCastExpr 0x560e60849540 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560e608493c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560e608279d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560e60849408 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560e608493e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560e60849348 't11' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560e60849598 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560e60849480 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x560e60849458 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560e60849420 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x560e608495b0 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560e608494a0 <col:37> 'void *(void *)' Function 0x560e608448d8 'P1' 'void *(void *)'
    | `-ParenExpr 0x560e60849520 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x560e608494f8 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560e608494c0 <col:50> 'int' 0
    |-CallExpr 0x560e60849600 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560e608495e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560e608495c8 <col:3> 'void ()' Function 0x560e607e74b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560e608496d0 <line:794:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x560e60849620 <col:3> '_Bool' lvalue Var 0x560e60840b00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x560e608496b8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x560e60849698 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x560e60849680 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x560e60849640 <col:21> 'int' lvalue Var 0x560e608405e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x560e60849660 <col:41> 'int' 2
    |-CallExpr 0x560e60849728 <line:795:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560e60849710 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560e608496f0 <col:3> 'void ()' Function 0x560e607e7570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560e608497a0 <line:796:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560e60849788 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560e60849748 <col:3> 'void (int)' Function 0x560e607e6e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x560e608497e0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560e608497c8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560e60849768 <col:21> '_Bool' lvalue Var 0x560e60840b00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x560e60849830 <line:797:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560e60849818 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560e608497f8 <col:3> 'void ()' Function 0x560e607e74b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560e60849b18 <line:798:3, col:103> 'int' '='
    | |-DeclRefExpr 0x560e60849850 <col:3> 'int' lvalue Var 0x560e60840c78 'x' 'int'
    | `-ConditionalOperator 0x560e60849ae8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x560e60849910 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x560e608498c8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x560e608498b0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x560e60849870 <col:7> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x560e608498f8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x560e608498e0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560e60849890 <col:25> '_Bool' lvalue Var 0x560e60840e08 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560e60849ad0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560e60849930 <col:42> 'int' lvalue Var 0x560e60841200 'x$w_buff0' 'int'
    |   `-ParenExpr 0x560e60849ab0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x560e60849a80 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x560e608499f0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560e608499a8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560e60849990 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560e60849950 <col:55> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560e608499d8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560e608499c0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560e60849970 <col:73> '_Bool' lvalue Var 0x560e60840f98 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560e60849a50 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560e60849a10 <col:90> 'int' lvalue Var 0x560e608412f8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x560e60849a68 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560e60849a30 <col:102> 'int' lvalue Var 0x560e60840c78 'x' 'int'
    |-BinaryOperator 0x560e60849d20 <line:799:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560e60849b38 <col:3> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560e60849d08 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560e60849cd8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560e60849bf8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560e60849bb0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560e60849b98 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560e60849b58 <col:20> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560e60849be0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560e60849bc8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560e60849b78 <col:38> '_Bool' lvalue Var 0x560e60840e08 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560e60849c90 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560e60849c48 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560e60849c18 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560e60849cc0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560e60849ca8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560e60849c70 <col:66> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560e6084a028 <line:800:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560e60849d40 <col:3> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560e6084a010 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560e60849fe0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560e60849ee0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560e60849e00 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560e60849db8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560e60849da0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560e60849d60 <col:20> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560e60849de8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560e60849dd0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560e60849d80 <col:38> '_Bool' lvalue Var 0x560e60840e08 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560e60849ec0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560e60849e78 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560e60849e60 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560e60849e20 <col:56> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560e60849ea8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560e60849e90 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560e60849e40 <col:74> '_Bool' lvalue Var 0x560e60840f98 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560e60849f78 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560e60849f30 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560e60849f00 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560e60849fc8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560e60849fb0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560e60849f58 <col:102> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x560e6084a230 <line:801:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560e6084a048 <col:3> '_Bool' lvalue Var 0x560e60840e08 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560e6084a218 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560e6084a1e8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560e6084a108 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560e6084a0c0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560e6084a0a8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560e6084a068 <col:20> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560e6084a0f0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560e6084a0d8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560e6084a088 <col:38> '_Bool' lvalue Var 0x560e60840e08 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560e6084a1a0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560e6084a158 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560e6084a128 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560e6084a1d0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560e6084a1b8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560e6084a180 <col:66> '_Bool' lvalue Var 0x560e60840e08 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560e6084a518 <line:802:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560e6084a250 <col:3> '_Bool' lvalue Var 0x560e60840f98 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560e6084a500 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560e6084a4d0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560e6084a3f0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560e6084a310 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560e6084a2c8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560e6084a2b0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560e6084a270 <col:20> '_Bool' lvalue Var 0x560e60841278 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560e6084a2f8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560e6084a2e0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560e6084a290 <col:38> '_Bool' lvalue Var 0x560e60840e08 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560e6084a3d0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560e6084a388 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560e6084a370 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560e6084a330 <col:56> '_Bool' lvalue Var 0x560e60841370 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560e6084a3b8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560e6084a3a0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560e6084a350 <col:74> '_Bool' lvalue Var 0x560e60840f98 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560e6084a488 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560e6084a440 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560e6084a410 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560e6084a4b8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560e6084a4a0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560e6084a468 <col:102> '_Bool' lvalue Var 0x560e60840f98 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x560e6084a570 <line:803:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560e6084a558 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560e6084a538 <col:3> 'void ()' Function 0x560e607e7570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560e6084a5c8 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560e6084a5b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560e6084a590 <col:3> 'void ()' Function 0x560e607e74b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560e6084a898 <line:805:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x560e6084a5e8 <col:3> '_Bool' lvalue Var 0x560e60840b78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x560e6084a880 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x560e6084a868 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x560e6084a848 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x560e6084a828 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x560e6084a790 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x560e6084a6f8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x560e6084a660 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x560e6084a648 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x560e6084a608 <col:23> 'int' lvalue Var 0x560e60840708 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x560e6084a628 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x560e6084a6d8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x560e6084a6c0 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x560e6084a680 <col:51> 'int' lvalue Var 0x560e60840828 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x560e6084a6a0 <col:74> 'int' 0
    |         | `-BinaryOperator 0x560e6084a770 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x560e6084a758 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x560e6084a718 <col:79> 'int' lvalue Var 0x560e60840948 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x560e6084a738 <col:102> 'int' 1
    |         `-BinaryOperator 0x560e6084a808 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x560e6084a7f0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560e6084a7b0 <col:107> 'int' lvalue Var 0x560e60840a68 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x560e6084a7d0 <col:130> 'int' 0
    |-CallExpr 0x560e6084a8f0 <line:806:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560e6084a8d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560e6084a8b8 <col:3> 'void ()' Function 0x560e607e7570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560e6084a968 <line:807:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560e6084a950 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560e6084a910 <col:3> 'void (int)' Function 0x560e607e7238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x560e6084a9a8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560e6084a990 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560e6084a930 <col:21> '_Bool' lvalue Var 0x560e60840b78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x560e6084a9e0 <line:808:3, col:10>
      `-IntegerLiteral 0x560e6084a9c0 <col:10> 'int' 0
