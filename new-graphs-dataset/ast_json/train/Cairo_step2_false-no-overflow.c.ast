TranslationUnitDecl 0x55ef64a944d8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55ef64a94d98 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55ef64a94a70 '__int128'
|-TypedefDecl 0x55ef64a94e08 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55ef64a94a90 'unsigned __int128'
|-TypedefDecl 0x55ef64a95110 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55ef64a94ee0 'struct __NSConstantString_tag'
|   `-Record 0x55ef64a94e60 '__NSConstantString_tag'
|-TypedefDecl 0x55ef64a951b8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55ef64a95170 'char *'
|   `-BuiltinType 0x55ef64a94570 'char'
|-TypedefDecl 0x55ef64ad42f0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55ef64a95450 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55ef64a95290 'struct __va_list_tag'
|     `-Record 0x55ef64a95210 '__va_list_tag'
|-EnumDecl 0x55ef64ad4348 <termination-crafted/Cairo_step2_false-no-overflow.c:7:9, col:26> col:9
| |-EnumConstantDecl 0x55ef64ad4418 <col:15> col:15 false 'int'
| `-EnumConstantDecl 0x55ef64ad4468 <col:22> col:22 true 'int'
|-TypedefDecl 0x55ef64ad4520 <col:1, col:28> col:28 bool 'enum bool':'bool'
| `-ElaboratedType 0x55ef64ad44c0 'enum bool' sugar
|   `-EnumType 0x55ef64ad43f0 'bool'
|     `-Enum 0x55ef64ad4348 ''
|-FunctionDecl 0x55ef64ad4668 <line:9:1, col:38> col:12 used __VERIFIER_nondet_int 'int (void)' extern
`-FunctionDecl 0x55ef64ad47a8 <line:11:1, line:22:1> line:11:5 main 'int ()'
  `-CompoundStmt 0x55ef64ad4be0 <line:12:1, line:22:1>
    |-DeclStmt 0x55ef64ad48c8 <line:13:5, col:10>
    | `-VarDecl 0x55ef64ad4860 <col:5, col:9> col:9 used x 'int'
    |-BinaryOperator 0x55ef64ad4988 <line:14:5, col:31> 'int' '='
    | |-DeclRefExpr 0x55ef64ad48e0 <col:5> 'int' lvalue Var 0x55ef64ad4860 'x' 'int'
    | `-CallExpr 0x55ef64ad4968 <col:9, col:31> 'int'
    |   `-ImplicitCastExpr 0x55ef64ad4950 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55ef64ad4900 <col:9> 'int (void)' Function 0x55ef64ad4668 '__VERIFIER_nondet_int' 'int (void)'
    |-IfStmt 0x55ef64ad4b98 <line:15:2, line:20:2>
    | |-BinaryOperator 0x55ef64ad4a00 <line:15:6, col:10> 'int' '>'
    | | |-ImplicitCastExpr 0x55ef64ad49e8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x55ef64ad49a8 <col:6> 'int' lvalue Var 0x55ef64ad4860 'x' 'int'
    | | `-IntegerLiteral 0x55ef64ad49c8 <col:10> 'int' 0
    | `-CompoundStmt 0x55ef64ad4b80 <col:13, line:20:2>
    |   `-WhileStmt 0x55ef64ad4b68 <line:17:6, line:19:6>
    |     |-BinaryOperator 0x55ef64ad4a78 <line:17:13, col:18> 'int' '!='
    |     | |-ImplicitCastExpr 0x55ef64ad4a60 <col:13> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x55ef64ad4a20 <col:13> 'int' lvalue Var 0x55ef64ad4860 'x' 'int'
    |     | `-IntegerLiteral 0x55ef64ad4a40 <col:18> 'int' 0
    |     `-CompoundStmt 0x55ef64ad4b50 <col:21, line:19:6>
    |       `-BinaryOperator 0x55ef64ad4b30 <line:18:7, col:15> 'int' '='
    |         |-DeclRefExpr 0x55ef64ad4a98 <col:7> 'int' lvalue Var 0x55ef64ad4860 'x' 'int'
    |         `-BinaryOperator 0x55ef64ad4b10 <col:11, col:15> 'int' '-'
    |           |-ImplicitCastExpr 0x55ef64ad4af8 <col:11> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55ef64ad4ab8 <col:11> 'int' lvalue Var 0x55ef64ad4860 'x' 'int'
    |           `-IntegerLiteral 0x55ef64ad4ad8 <col:15> 'int' 2
    `-ReturnStmt 0x55ef64ad4bd0 <line:21:2, col:9>
      `-IntegerLiteral 0x55ef64ad4bb0 <col:9> 'int' 0
