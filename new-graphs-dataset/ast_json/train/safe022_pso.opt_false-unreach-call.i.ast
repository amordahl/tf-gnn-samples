TranslationUnitDecl 0x561d0bfe1f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561d0bfe2848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561d0bfe2520 '__int128'
|-TypedefDecl 0x561d0bfe28b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561d0bfe2540 'unsigned __int128'
|-TypedefDecl 0x561d0bfe2bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561d0bfe2990 'struct __NSConstantString_tag'
|   `-Record 0x561d0bfe2910 '__NSConstantString_tag'
|-TypedefDecl 0x561d0bfe2c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561d0bfe2c20 'char *'
|   `-BuiltinType 0x561d0bfe2020 'char'
|-TypedefDecl 0x561d0c021b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561d0bfe2f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561d0bfe2d40 'struct __va_list_tag'
|     `-Record 0x561d0bfe2cc0 '__va_list_tag'
|-FunctionDecl 0x561d0c021ca0 <pthread-wmm/safe022_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x561d0c021bd0 <col:31> col:34 'int'
|-FunctionDecl 0x561d0c021e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x561d0c021f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x561d0c0220d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x561d0c022048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x561d0c022308 <col:40, col:99>
|   |-IfStmt 0x561d0c0222d8 <col:42, col:88>
|   | |-UnaryOperator 0x561d0c0221b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x561d0c0221a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x561d0c022180 <col:47> 'int' lvalue ParmVar 0x561d0c022048 'expression' 'int'
|   | `-CompoundStmt 0x561d0c0222c0 <col:59, col:88>
|   |   `-LabelStmt 0x561d0c0222a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x561d0c022238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x561d0c022220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x561d0c0221d0 <col:68> 'void () __attribute__((noreturn))' Function 0x561d0c021f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x561d0c0222f0 <col:89>
|   `-ReturnStmt 0x561d0c0222f8 <col:91>
|-FunctionDecl 0x561d0c022350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x561d0c022410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x561d0c022790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561d0c0224c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x561d0c022548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x561d0c0225c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561d0c022648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561d0c022850 <line:10:22>
|-FunctionDecl 0x561d0c0488a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561d0c0228c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x561d0c022940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x561d0c0229c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561d0c022a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561d0c048960 <line:13:22>
|-FunctionDecl 0x561d0c048c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561d0c0489d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x561d0c048a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x561d0c048ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x561d0c048cc8 <line:15:22>
|-TypedefDecl 0x561d0c048d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x561d0bfe20e0 'unsigned char'
|-TypedefDecl 0x561d0c048da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x561d0bfe2100 'unsigned short'
|-TypedefDecl 0x561d0c048e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x561d0bfe2120 'unsigned int'
|-TypedefDecl 0x561d0c048e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-TypedefDecl 0x561d0c048ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x561d0bfe2040 'signed char'
|-TypedefDecl 0x561d0c048f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x561d0bfe20e0 'unsigned char'
|-TypedefDecl 0x561d0c048fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x561d0bfe2060 'short'
|-TypedefDecl 0x561d0c049048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x561d0bfe2100 'unsigned short'
|-TypedefDecl 0x561d0c0490b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x561d0bfe2080 'int'
|-TypedefDecl 0x561d0c049128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x561d0bfe2120 'unsigned int'
|-TypedefDecl 0x561d0c049198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c049208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-TypedefDecl 0x561d0c049278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c0492e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-TypedefDecl 0x561d0c049358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-TypedefDecl 0x561d0c0493c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x561d0bfe2120 'unsigned int'
|-TypedefDecl 0x561d0c049438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x561d0bfe2120 'unsigned int'
|-TypedefDecl 0x561d0c0494a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-TypedefDecl 0x561d0c049518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-TypedefDecl 0x561d0c049588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x561d0bfe2120 'unsigned int'
|-TypedefDecl 0x561d0c0495f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-TypedefDecl 0x561d0c049668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c0496d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c049748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x561d0bfe2080 'int'
|-RecordDecl 0x561d0c0497a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x561d0c049918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x561d0c0499d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x561d0c049970 'struct __fsid_t' sugar
|   `-RecordType 0x561d0c049820 '__fsid_t'
|     `-Record 0x561d0c0497a0 ''
|-TypedefDecl 0x561d0c049a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c049ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-TypedefDecl 0x561d0c049b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-TypedefDecl 0x561d0c049ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x561d0bfe2120 'unsigned int'
|-TypedefDecl 0x561d0c049c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c049c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x561d0bfe2120 'unsigned int'
|-TypedefDecl 0x561d0c049cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c049d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x561d0bfe2080 'int'
|-TypedefDecl 0x561d0c049dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x561d0bfe2080 'int'
|-TypedefDecl 0x561d0c049e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x561d0bfe2080 'int'
|-TypedefDecl 0x561d0c049eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x561d0bfe27a0 'void *'
|   `-BuiltinType 0x561d0bfe1fe0 'void'
|-TypedefDecl 0x561d0c049f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c049f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c04a008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c04a078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-TypedefDecl 0x561d0c04a0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-TypedefDecl 0x561d0c04a158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-TypedefDecl 0x561d0c04a1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-TypedefDecl 0x561d0c04a238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c04a2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c04a318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c04a388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-TypedefDecl 0x561d0c04a418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x561d0c04a3e0 '__off64_t' sugar
|   |-Typedef 0x561d0c0496d8 '__off64_t'
|   `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c04a510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x561d0c04a4d0 '__quad_t *'
|   `-TypedefType 0x561d0c04a470 '__quad_t' sugar
|     |-Typedef 0x561d0c049278 '__quad_t'
|     `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c04a580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x561d0bfe2c20 'char *'
|   `-BuiltinType 0x561d0bfe2020 'char'
|-TypedefDecl 0x561d0c04a5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c04a660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x561d0bfe2120 'unsigned int'
|-FunctionDecl 0x561d0c04a7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x561d0c04a6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x561d0c04aae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x561d0c04aad8 <line:72:3, col:34>
|     `-CallExpr 0x561d0c04aa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x561d0c04aa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561d0c04aa10 <col:10> '<builtin fn type>' Function 0x561d0c04a880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x561d0c04aac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561d0c04aa30 <col:29> 'unsigned int' lvalue ParmVar 0x561d0c04a6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x561d0c04a880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x561d0c04a920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x561d0c04a990 <col:10> Implicit
| `-ConstAttr 0x561d0c04a9e8 <col:10> Implicit
|-FunctionDecl 0x561d0c04ac40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x561d0c04ab38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x561d0c04af58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x561d0c04af48 <line:77:3, col:34>
|     `-CallExpr 0x561d0c04af08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x561d0c04aef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561d0c04ae78 <col:10> '<builtin fn type>' Function 0x561d0c04ace8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x561d0c04af30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x561d0c04ae98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x561d0c04ab38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x561d0c04ace8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x561d0c04ad88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x561d0c04adf8 <col:10> Implicit
| `-ConstAttr 0x561d0c04ae50 <col:10> Implicit
|-TypedefDecl 0x561d0c04af88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-TypedefDecl 0x561d0c04b018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x561d0c04afe0 '__time_t' sugar
|   |-Typedef 0x561d0c049c18 '__time_t'
|   `-BuiltinType 0x561d0bfe20a0 'long'
|-RecordDecl 0x561d0c04b070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x561d0c04b128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x561d0c04b1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x561d0c04b248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x561d0c04b210 '__pid_t' sugar
|   |-Typedef 0x561d0c049748 '__pid_t'
|   `-BuiltinType 0x561d0bfe2080 'int'
|-RecordDecl 0x561d0c04b2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x561d0c04b360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x561d0c04b3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x561d0c04b470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x561d0c04b4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-RecordDecl 0x561d0c04b530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x561d0c04b7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x561d0c04d8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x561d0c04b810 'struct cpu_set_t' sugar
|   `-RecordType 0x561d0c04b5b0 'cpu_set_t'
|     `-Record 0x561d0c04b530 ''
|-FunctionDecl 0x561d0c04db88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x561d0c04d958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561d0c04da60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x561d0c04dc38 <line:107:19>
|-FunctionDecl 0x561d0c04de10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x561d0c04dca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x561d0c04deb8 <col:69>
|-FunctionDecl 0x561d0c04e030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x561d0c04df20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x561d0c04e0d8 <col:64>
|-FunctionDecl 0x561d0c04e398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x561d0c04e140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561d0c04e278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561d0c04e448 <line:113:22>
|-FunctionDecl 0x561d0c04e6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x561d0c04e4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561d0c04e5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x561d0c04e778 <col:88>
|-FunctionDecl 0x561d0c04ea98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561d0c04e7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561d0c04e8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x561d0c04e950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561d0c04eb50 <col:62>
|-FunctionDecl 0x561d0c04ecc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x561d0c04ebb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x561d0c04ed70 <col:63>
|-FunctionDecl 0x561d0c04ee98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x561d0c04ef38 <col:47>
|-FunctionDecl 0x561d0c04f040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x561d0c04efa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561d0c04f0e8 <col:69>
|-FunctionDecl 0x561d0c04f1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x561d0c04f158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561d0c04f298 <col:69>
|-FunctionDecl 0x561d0c04f558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561d0c04f300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561d0c04f438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x561d0c04f608 <col:88>
|-TypedefDecl 0x561d0c04f698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x561d0c04f660 '__clock_t' sugar
|   |-Typedef 0x561d0c049a58 '__clock_t'
|   `-BuiltinType 0x561d0bfe20a0 'long'
|-TypedefDecl 0x561d0c04f728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x561d0c04f6f0 '__clockid_t' sugar
|   |-Typedef 0x561d0c049e48 '__clockid_t'
|   `-BuiltinType 0x561d0bfe2080 'int'
|-TypedefDecl 0x561d0c04f7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x561d0c04f780 '__timer_t' sugar
|   |-Typedef 0x561d0c049eb8 '__timer_t'
|   `-PointerType 0x561d0bfe27a0 'void *'
|     `-BuiltinType 0x561d0bfe1fe0 'void'
|-RecordDecl 0x561d0c04f810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x561d0c04f8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x561d0c04f950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x561d0c04f9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x561d0c04fa20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x561d0c04fa88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x561d0c04faf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x561d0c04fb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x561d0c04fbc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x561d0c04fc28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x561d0c04fc90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x561d0c04fcf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x561d0c04fd48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x561d0c04fe18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x561d0c04fe88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x561d0c04ff30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x561d0c050100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x561d0c0501a0 <col:45>
|-FunctionDecl 0x561d0c050380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x561d0c050270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x561d0c050428 <col:54>
|-FunctionDecl 0x561d0c050628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x561d0c050490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x561d0c050508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x561d0c0506d8 <line:157:22>
| `-ConstAttr 0x561d0c050730 <col:63>
|-FunctionDecl 0x561d0c051560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561d0c050828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561d0c051608 <col:56>
|-FunctionDecl 0x561d0c0519b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x561d0c051678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x561d0c0516f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561d0c051770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x561d0c051868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x561d0c051a70 <col:54>
|-RecordDecl 0x561d0c051ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x561d0c051b78 parent 0x561d0bfe1f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x561d0c051dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x561d0c051e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x561d0c051ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x561d0c051f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x561d0c052038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x561d0c052158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x561d0c052100 'struct __locale_struct *'
|   `-ElaboratedType 0x561d0c052090 'struct __locale_struct' sugar
|     `-RecordType 0x561d0c051b50 'struct __locale_struct'
|       `-Record 0x561d0c051ac8 '__locale_struct'
|-TypedefDecl 0x561d0c052208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x561d0c0521d0 '__locale_t' sugar
|   |-Typedef 0x561d0c052158 '__locale_t'
|   `-PointerType 0x561d0c052100 'struct __locale_struct *'
|     `-ElaboratedType 0x561d0c052090 'struct __locale_struct' sugar
|       `-RecordType 0x561d0c051b50 'struct __locale_struct'
|         `-Record 0x561d0c051ac8 '__locale_struct'
|-FunctionDecl 0x561d0c052610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x561d0c052278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x561d0c0522f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561d0c052370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x561d0c052400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561d0c052478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x561d0c0526d8 <col:40>
|-FunctionDecl 0x561d0c0528c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561d0c0527a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x561d0c052970 <col:66>
|-FunctionDecl 0x561d0c052a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561d0c0529d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x561d0c052b28 <col:69>
|-FunctionDecl 0x561d0c052d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561d0c052b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561d0c052c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561d0c052e08 <col:52>
|-FunctionDecl 0x561d0c052fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561d0c052e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561d0c052f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561d0c053060 <col:55>
|-FunctionDecl 0x561d0c0531f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x561d0c0530e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x561d0c0532a0 <col:62>
|-FunctionDecl 0x561d0c053418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x561d0c053308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x561d0c0534c0 <col:60>
|-FunctionDecl 0x561d0c053718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561d0c053578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561d0c0535f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x561d0c0537c8 <col:44>
|-FunctionDecl 0x561d0c0539d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561d0c053830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561d0c0538b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x561d0c053a88 <col:49>
|-VarDecl 0x561d0c053b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x561d0c053c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x561d0c053c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x561d0c053d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x561d0c053e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x561d0c053f20 <col:42>
|-VarDecl 0x561d0c053f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x561d0c054010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x561d0c054198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x561d0c054088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x561d0c054240 <col:57>
|-FunctionDecl 0x561d0c054350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561d0c0542c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561d0c0543f8 <col:56>
|-FunctionDecl 0x561d0c055540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561d0c054478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x561d0c0555e8 <col:59>
|-FunctionDecl 0x561d0c0556f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x561d0c055658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x561d0c055798 <col:48>
| `-ConstAttr 0x561d0c0557f0 <col:89>
|-FunctionDecl 0x561d0c055a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561d0c0558a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x561d0c055938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x561d0c055cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561d0c055b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561d0c055bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x561d0c055d68 <col:88>
|-FunctionDecl 0x561d0c055f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561d0c055dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561d0c055e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x561d0c055fb0 <col:88>
|-FunctionDecl 0x561d0c0561c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x561d0c056018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561d0c0560a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x561d0c056278 <line:208:22>
|-FunctionDecl 0x561d0c0565e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561d0c0562e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561d0c056360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x561d0c0563f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x561d0c056480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x561d0c0568e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x561d0c0566e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x561d0c0567c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x561d0c056998 <col:85>
|-FunctionDecl 0x561d0c056d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x561d0c056a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561d0c056b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x561d0c056c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x561d0c056e40 <col:52>
|-FunctionDecl 0x561d0c056fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x561d0c056ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561d0c057060 <col:61>
|-FunctionDecl 0x561d0c057560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x561d0c0570c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561d0c057148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x561d0c057278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x561d0c057368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x561d0c057620 <col:62>
|-FunctionDecl 0x561d0c057838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x561d0c057688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561d0c057718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x561d0c0578e8 <line:221:22>
|-FunctionDecl 0x561d0c0579e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x561d0c057950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561d0c057a90 <col:65>
|-TypedefDecl 0x561d0c057b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x561d0bfe2140 'unsigned long'
|-RecordDecl 0x561d0c057b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x561d0c057ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561d0c057d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561d0c057db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x561d0c057d60 'union pthread_attr_t' sugar
|   `-RecordType 0x561d0c057be0 'union pthread_attr_t'
|     `-Record 0x561d0c057b58 'pthread_attr_t'
|-RecordDecl 0x561d0c057e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x561d0c057f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x561d0c058000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x561d0c0580b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x561d0c058050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x561d0c057e90 'struct __pthread_internal_list'
|     `-Record 0x561d0c057e10 '__pthread_internal_list'
|-RecordDecl 0x561d0c058120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x561d0c0581c8 parent 0x561d0bfe1f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x561d0c0582a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561d0c058308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x561d0c058370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x561d0c0583d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x561d0c058440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x561d0c0584a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x561d0c05c580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x561d0c05c630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x561d0c05c720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x561d0c05c788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561d0c05c910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x561d0c05c8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x561d0c0581a0 'pthread_mutex_t'
|     `-Record 0x561d0c058120 ''
|-RecordDecl 0x561d0c05c980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x561d0c05cac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561d0c05cb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561d0c05cbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x561d0c05cb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x561d0c05ca00 'pthread_mutexattr_t'
|     `-Record 0x561d0c05c980 ''
|-RecordDecl 0x561d0c05cc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x561d0c05ccf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x561d0c05cdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561d0c05ce28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x561d0c05ce90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x561d0c05cef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x561d0c05cf60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x561d0c05cfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x561d0c05d030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x561d0c05d098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x561d0c05d150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe022_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe022_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x561d0c05d240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x561d0c05d2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x561d0c05d3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x561d0c05d380 'union pthread_cond_t' sugar
|   `-RecordType 0x561d0c05ccd0 'pthread_cond_t'
|     `-Record 0x561d0c05cc50 ''
|-RecordDecl 0x561d0c05d450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x561d0c05d590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561d0c05d5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561d0c05d6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x561d0c05d650 'union pthread_condattr_t' sugar
|   `-RecordType 0x561d0c05d4d0 'pthread_condattr_t'
|     `-Record 0x561d0c05d450 ''
|-TypedefDecl 0x561d0c05d738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x561d0bfe2120 'unsigned int'
|-TypedefDecl 0x561d0c05d7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x561d0bfe2080 'int'
|-RecordDecl 0x561d0c05d800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x561d0c05d8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x561d0c05d970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561d0c05d9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x561d0c05da40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x561d0c05daa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x561d0c05db10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x561d0c05db78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x561d0c05dbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x561d0c05dc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x561d0c05dcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x561d0c05dd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x561d0c05dd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x561d0c05de30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe022_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe022_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x561d0c05ded8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561d0c05df40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561d0c05e090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x561d0c05e030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x561d0c05d880 'pthread_rwlock_t'
|     `-Record 0x561d0c05d800 ''
|-RecordDecl 0x561d0c05e100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x561d0c05e240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x561d0c05e2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561d0c05e360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x561d0c05e300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x561d0c05e180 'pthread_rwlockattr_t'
|     `-Record 0x561d0c05e100 ''
|-TypedefDecl 0x561d0c05e3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x561d0bfe2084 'volatile int' volatile
|   `-BuiltinType 0x561d0bfe2080 'int'
|-RecordDecl 0x561d0c05e440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x561d0c0605b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x561d0c060618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561d0c0606d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x561d0c060670 'union pthread_barrier_t' sugar
|   `-RecordType 0x561d0c05e4c0 'pthread_barrier_t'
|     `-Record 0x561d0c05e440 ''
|-RecordDecl 0x561d0c060740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x561d0c060840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561d0c0608a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561d0c060960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x561d0c060900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x561d0c0607c0 'pthread_barrierattr_t'
|     `-Record 0x561d0c060740 ''
|-TypedefDecl 0x561d0c060a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x561d0c060a10 'long [8]' 8 
|   `-BuiltinType 0x561d0bfe20a0 'long'
|-EnumDecl 0x561d0c060ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x561d0c060b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x561d0c060be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x561d0c060c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x561d0c060d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x561d0c060d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x561d0c060da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x561d0c060df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x561d0c060e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x561d0c060e68 <col:26> 'int'
| |   `-DeclRefExpr 0x561d0c060e48 <col:26> 'int' EnumConstant 0x561d0c060d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x561d0c060f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x561d0c060ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x561d0c060ed0 <col:29> 'int' EnumConstant 0x561d0c060d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x561d0c060f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x561d0c060f78 <col:30> 'int'
| |   `-DeclRefExpr 0x561d0c060f58 <col:30> 'int' EnumConstant 0x561d0c060da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x561d0c061018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x561d0c061000 <col:27> 'int'
|     `-DeclRefExpr 0x561d0c060fe0 <col:27> 'int' EnumConstant 0x561d0c060e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x561d0c061068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x561d0c061138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x561d0c0611c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x561d0c0611a8 <col:30> 'int'
| |   `-DeclRefExpr 0x561d0c061188 <col:30> 'int' EnumConstant 0x561d0c061138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x561d0c061210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x561d0c061298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x561d0c061280 <col:29> 'int'
|     `-DeclRefExpr 0x561d0c061260 <col:29> 'int' EnumConstant 0x561d0c061210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x561d0c0612e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x561d0c0613b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x561d0c061408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x561d0c061458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x561d0c0614a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x561d0c0615c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x561d0c061610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x561d0c061660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x561d0c0616e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x561d0c0616d0 <col:31> 'int'
|     `-DeclRefExpr 0x561d0c0616b0 <col:31> 'int' EnumConstant 0x561d0c0615c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x561d0c061738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x561d0c061808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x561d0c061858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x561d0c0618a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x561d0c061978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x561d0c0619c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x561d0c061a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x561d0c061ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x561d0c061b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x561d0c061b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x561d0c061dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x561d0c061e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x561d0c061e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x561d0c061fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x561d0c062008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x561d0c0620d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x561d0c062128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x561d0c062178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x561d0c062248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x561d0c062298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x561d0c0628f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x561d0c062390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x561d0c0624a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d0c0626e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x561d0c062760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x561d0c0629b8 <col:47>
| |-NonNullAttr 0x561d0c062a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x561d0c062a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x561d0c062b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x561d0c062aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x561d0c062dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x561d0c062c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x561d0c062ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x561d0c062f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x561d0c062e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x561d0c063040 <col:60>
|-FunctionDecl 0x561d0c063190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x561d0c063230 <col:54>
| `-ConstAttr 0x561d0c063288 <col:95>
|-FunctionDecl 0x561d0c063458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x561d0c0632c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561d0c063338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x561d0c063508 <line:394:19>
| `-ConstAttr 0x561d0c063560 <col:60>
|-FunctionDecl 0x561d0c063f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561d0c063e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561d0c064010 <col:71>
| `-NonNullAttr 0x561d0c064068 <col:112, col:126> 1
|-FunctionDecl 0x561d0c064170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561d0c0640b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561d0c064218 <line:397:22>
| `-NonNullAttr 0x561d0c064270 <col:63, col:77> 1
|-FunctionDecl 0x561d0c064498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x561d0c0642b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561d0c064338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x561d0c064548 <line:400:22>
| `-NonNullAttr 0x561d0c0645a0 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c0647a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561d0c0645e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561d0c064668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x561d0c064858 <line:403:22>
| `-NonNullAttr 0x561d0c0648b0 <col:63, col:77> 1
|-FunctionDecl 0x561d0c064b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x561d0c0648f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561d0c0649a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x561d0c064bb8 <line:406:22>
| `-NonNullAttr 0x561d0c064c10 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c065e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561d0c064c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561d0c064cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561d0c065ef8 <line:409:22>
| `-NonNullAttr 0x561d0c065f50 <col:63, col:77> 1
|-FunctionDecl 0x561d0c066188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561d0c065f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d0c066028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561d0c066238 <line:412:22>
| `-NonNullAttr 0x561d0c066290 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c0664c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561d0c0662d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d0c066368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x561d0c066578 <col:37>
| `-NonNullAttr 0x561d0c0665d0 <col:78, col:95> 1 2
|-FunctionDecl 0x561d0c0667b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d0c066618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d0c066698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x561d0c066868 <line:418:22>
| `-NonNullAttr 0x561d0c0668c0 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c066a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561d0c066908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561d0c066988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x561d0c066af8 <line:420:22>
| `-NonNullAttr 0x561d0c066b50 <col:63, col:77> 1
|-FunctionDecl 0x561d0c066cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d0c066b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d0c066c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x561d0c066da8 <line:423:22>
| `-NonNullAttr 0x561d0c067e30 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c067fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561d0c067e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561d0c067ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x561d0c068068 <line:426:22>
| `-NonNullAttr 0x561d0c0680c0 <col:63, col:77> 1
|-FunctionDecl 0x561d0c068268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d0c068108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d0c068188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x561d0c068318 <line:429:22>
| `-NonNullAttr 0x561d0c068370 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c0684f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561d0c0683b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561d0c068438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x561d0c0685a8 <line:431:22>
| `-NonNullAttr 0x561d0c068600 <col:63, col:77> 1
|-FunctionDecl 0x561d0c068828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x561d0c068648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d0c0686c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x561d0c0688d8 <line:434:22>
| |-NonNullAttr 0x561d0c068930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x561d0c068968 <col:100> "" ""
|-FunctionDecl 0x561d0c068b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x561d0c0689b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561d0c068a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x561d0c068c28 <line:437:22>
| |-NonNullAttr 0x561d0c068c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x561d0c068cb8 <col:97> "" ""
|-FunctionDecl 0x561d0c068eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561d0c068d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d0c068d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561d0c068f68 <line:440:22>
| `-NonNullAttr 0x561d0c068fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c069140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561d0c069008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561d0c069080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561d0c0691f0 <line:443:22>
| `-NonNullAttr 0x561d0c069248 <col:63, col:77> 1
|-FunctionDecl 0x561d0c069538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561d0c069298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d0c069318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x561d0c069390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561d0c0695f0 <line:447:22>
| `-NonNullAttr 0x561d0c069648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x561d0c0698f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x561d0c0696a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561d0c069720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x561d0c069798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561d0c0699b0 <col:43>
| `-NonNullAttr 0x561d0c069a08 <col:84, col:98> 1
|-FunctionDecl 0x561d0c069cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561d0c069a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561d0c069ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x561d0c069b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x561d0c069d80 <line:452:22>
| `-NonNullAttr 0x561d0c069dd8 <col:63, col:77> 3
|-FunctionDecl 0x561d0c06a0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561d0c069e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561d0c069ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x561d0c069f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561d0c06a1a0 <line:456:22>
| `-NonNullAttr 0x561d0c06a1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x561d0c06a3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x561d0c06a248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561d0c06a2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x561d0c06a498 <line:458:22>
|-FunctionDecl 0x561d0c06a868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x561d0c06a560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x561d0c06a700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x561d0c06a918 <col:52, col:69> 1 2
|-FunctionDecl 0x561d0c06aac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x561d0c06a9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x561d0c06aa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x561d0c06aca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x561d0c06ab88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x561d0c06ac08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x561d0c06ae60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x561d0c06ad68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x561d0c06afa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x561d0c06b040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x561d0c06b0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x561d0c06b1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x561d0c06b240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x561d0c06b410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe022_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x561d0c06b508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x561d0c06b5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x561d0c06b560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x561d0c06b0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x561d0c06b040 ''
| `-AlignedAttr 0x561d0c06b618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x561d0c06b690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x561d0c06b7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x561d0c06b858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x561d0c06b8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x561d0c06b928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x561d0c06bb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561d0c06ba20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561d0c06bc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561d0c06bbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561d0c06be70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561d0c06bd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x561d0c06bf18 <line:487:22>
|-RecordDecl 0x561d0c06bf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x561d0c06c288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x561d0c06c0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x561d0c06c168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x561d0c06c338 <col:86>
| `-ReturnsTwiceAttr 0x561d0c06c390 <col:12> Implicit
|-FunctionDecl 0x561d0c06c6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561d0c06c460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x561d0c06c570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x561d0c06c768 <line:493:22>
| `-NonNullAttr 0x561d0c06c7c0 <col:63, col:77> 1
|-FunctionDecl 0x561d0c06c938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561d0c06c808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561d0c06c9e0 <line:495:22>
| `-NonNullAttr 0x561d0c06ca38 <col:63, col:77> 1
|-FunctionDecl 0x561d0c06cb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561d0c06ca88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561d0c06cbe8 <line:497:22>
| `-NonNullAttr 0x561d0c06cc40 <col:52, col:66> 1
|-FunctionDecl 0x561d0c06cd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561d0c06cc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561d0c06cde8 <line:499:22>
| `-NonNullAttr 0x561d0c06ce40 <col:52, col:66> 1
|-FunctionDecl 0x561d0c06d088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561d0c06ce98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561d0c06cf28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561d0c06d138 <col:36>
| `-NonNullAttr 0x561d0c06d190 <col:66, col:83> 1 2
|-FunctionDecl 0x561d0c06d290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561d0c06d1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561d0c06d338 <line:504:22>
| `-NonNullAttr 0x561d0c06d390 <col:52, col:66> 1
|-FunctionDecl 0x561d0c06d628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d0c06d440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561d0c06d4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561d0c06d6d8 <line:508:22>
| `-NonNullAttr 0x561d0c06d730 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c06d9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x561d0c06d778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561d0c06d7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x561d0c06d878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x561d0c06dab0 <line:512:22>
| `-NonNullAttr 0x561d0c06db08 <col:63, col:80> 1 3
|-FunctionDecl 0x561d0c06dc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561d0c06db58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561d0c06dcb8 <line:514:22>
| `-NonNullAttr 0x561d0c06dd10 <col:63, col:77> 1
|-FunctionDecl 0x561d0c06df38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561d0c06ddc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561d0c06dfe0 <line:516:22>
| `-NonNullAttr 0x561d0c06e038 <col:63, col:77> 1
|-FunctionDecl 0x561d0c06e140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561d0c06e088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561d0c06e1e8 <line:518:22>
| `-NonNullAttr 0x561d0c06e240 <col:63, col:77> 1
|-FunctionDecl 0x561d0c06e468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d0c06e288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561d0c06e308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x561d0c06e518 <line:522:22>
| `-NonNullAttr 0x561d0c06e570 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c06e778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561d0c06e5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561d0c06e638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x561d0c06e828 <line:525:22>
| `-NonNullAttr 0x561d0c06e880 <col:63, col:77> 1
|-FunctionDecl 0x561d0c06ea28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d0c06e8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561d0c06e948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x561d0c06ead8 <line:528:22>
| `-NonNullAttr 0x561d0c06eb30 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c06ecb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561d0c06eb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561d0c06ebf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x561d0c06ed68 <line:530:22>
| `-NonNullAttr 0x561d0c06edc0 <col:63, col:77> 1
|-FunctionDecl 0x561d0c06ff90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d0c06ee08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561d0c06feb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x561d0c070040 <line:534:22>
| `-NonNullAttr 0x561d0c070098 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c070228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561d0c0700e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561d0c070168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x561d0c0702d8 <line:537:22>
| `-NonNullAttr 0x561d0c070330 <col:63, col:77> 1
|-FunctionDecl 0x561d0c0704d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d0c070378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561d0c0703f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561d0c070588 <line:541:22>
| `-NonNullAttr 0x561d0c0705e0 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c070768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561d0c070628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561d0c0706a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x561d0c070818 <line:544:22>
| `-NonNullAttr 0x561d0c070870 <col:63, col:77> 1
|-FunctionDecl 0x561d0c070a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x561d0c0708b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x561d0c070938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x561d0c070b08 <line:547:22>
| `-NonNullAttr 0x561d0c070b60 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c070ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561d0c070ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561d0c070c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x561d0c070d98 <line:550:22>
| `-NonNullAttr 0x561d0c070df0 <col:63, col:77> 1
|-FunctionDecl 0x561d0c072168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x561d0c071f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561d0c072020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x561d0c072218 <col:29>
| `-NonNullAttr 0x561d0c072270 <col:70, col:84> 1
|-FunctionDecl 0x561d0c0723e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561d0c0722b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561d0c072490 <line:555:22>
| `-NonNullAttr 0x561d0c0724e8 <col:63, col:77> 1
|-FunctionDecl 0x561d0c0725f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561d0c072538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561d0c072698 <line:557:22>
| `-NonNullAttr 0x561d0c0726f0 <col:52, col:66> 1
|-FunctionDecl 0x561d0c0727f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561d0c072738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561d0c072898 <line:559:19>
| `-NonNullAttr 0x561d0c0728f0 <col:49, col:63> 1
|-FunctionDecl 0x561d0c072b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561d0c072938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561d0c0729c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561d0c072bd8 <col:39>
| `-NonNullAttr 0x561d0c072c30 <col:69, col:86> 1 2
|-FunctionDecl 0x561d0c072d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561d0c072c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561d0c072dd8 <line:564:22>
| `-NonNullAttr 0x561d0c072e30 <col:52, col:66> 1
|-FunctionDecl 0x561d0c072f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561d0c072ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561d0c073040 <line:566:22>
| `-NonNullAttr 0x561d0c073098 <col:52, col:66> 1
|-FunctionDecl 0x561d0c073258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561d0c0730e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561d0c073178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561d0c073308 <col:39>
| `-NonNullAttr 0x561d0c073360 <col:69, col:86> 1 2
|-FunctionDecl 0x561d0c073460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561d0c0733a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561d0c073508 <line:571:22>
| `-NonNullAttr 0x561d0c073560 <col:52, col:66> 1
|-FunctionDecl 0x561d0c073748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561d0c073610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561d0c0737f0 <line:573:22>
| `-NonNullAttr 0x561d0c073848 <col:63, col:77> 1
|-FunctionDecl 0x561d0c073950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561d0c073898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561d0c0739f8 <line:575:22>
| `-NonNullAttr 0x561d0c073a50 <col:63, col:77> 1
|-FunctionDecl 0x561d0c073c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d0c073a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561d0c073b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x561d0c073d28 <line:579:22>
| `-NonNullAttr 0x561d0c073d80 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c073fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561d0c073dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561d0c073e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x561d0c074058 <line:582:22>
| `-NonNullAttr 0x561d0c0740b0 <col:63, col:77> 1
|-FunctionDecl 0x561d0c074258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d0c0740f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561d0c074178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x561d0c074308 <line:586:22>
| `-NonNullAttr 0x561d0c074360 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c0744e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561d0c0743a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561d0c074428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x561d0c074598 <col:36>
| `-NonNullAttr 0x561d0c0745f0 <col:77, col:91> 1
|-FunctionDecl 0x561d0c074928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x561d0c0746d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561d0c0747e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x561d0c0749d8 <line:591:22>
| `-NonNullAttr 0x561d0c074a30 <col:63, col:77> 1
|-FunctionDecl 0x561d0c074ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561d0c074a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561d0c074c50 <line:593:22>
| `-NonNullAttr 0x561d0c074ca8 <col:63, col:77> 1
|-FunctionDecl 0x561d0c074db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561d0c074cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561d0c074e58 <line:595:22>
| `-NonNullAttr 0x561d0c074eb0 <col:52, col:66> 1
|-FunctionDecl 0x561d0c074fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561d0c074f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561d0c075070 <line:597:22>
| `-NonNullAttr 0x561d0c0750c8 <col:52, col:66> 1
|-FunctionDecl 0x561d0c0752f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x561d0c075118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561d0c075190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x561d0c0753a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x561d0c0756d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561d0c075428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561d0c0754a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561d0c075530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x561d0c075790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x561d0c0759a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561d0c075870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561d0c075a50 <line:606:22>
| `-NonNullAttr 0x561d0c075aa8 <col:63, col:77> 1
|-FunctionDecl 0x561d0c075bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561d0c075af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561d0c075c58 <line:608:22>
| `-NonNullAttr 0x561d0c075cb0 <col:63, col:77> 1
|-FunctionDecl 0x561d0c075f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d0c075cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561d0c075d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x561d0c075fc0 <line:612:22>
| `-NonNullAttr 0x561d0c076018 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c076228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x561d0c076068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561d0c0760e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x561d0c0762d8 <col:37>
| `-NonNullAttr 0x561d0c076330 <col:78, col:92> 1
|-FunctionDecl 0x561d0c076548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x561d0c076378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561d0c076420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x561d0c0765f8 <line:618:22>
| `-NonNullAttr 0x561d0c076650 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c076818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x561d0c076698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561d0c076710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x561d0c0768c8 <line:621:22>
| `-NonNullAttr 0x561d0c076920 <col:63, col:77> 1
|-FunctionDecl 0x561d0c076bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x561d0c076a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x561d0c076a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x561d0c076c78 <line:623:22>
| `-NonNullAttr 0x561d0c076cd0 <col:63, col:77> 1
|-FunctionDecl 0x561d0c076e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561d0c076d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561d0c076f20 <line:625:22>
| `-NonNullAttr 0x561d0c076f78 <col:63, col:77> 1
|-FunctionDecl 0x561d0c077080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561d0c076fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561d0c077128 <line:627:22>
| `-NonNullAttr 0x561d0c077180 <col:52, col:66> 1
|-FunctionDecl 0x561d0c077280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561d0c0771c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561d0c077328 <line:629:22>
| `-NonNullAttr 0x561d0c077380 <col:52, col:66> 1
|-FunctionDecl 0x561d0c077480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561d0c0773c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561d0c077528 <line:631:22>
| `-NonNullAttr 0x561d0c077580 <col:52, col:66> 1
|-FunctionDecl 0x561d0c077958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x561d0c077660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x561d0c077770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561d0c0777f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x561d0c077a10 <line:635:22>
| `-NonNullAttr 0x561d0c077a68 <col:63, col:77> 1
|-FunctionDecl 0x561d0c077be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561d0c077ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561d0c077c90 <line:637:22>
| `-NonNullAttr 0x561d0c077ce8 <col:63, col:77> 1
|-FunctionDecl 0x561d0c077df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561d0c077d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561d0c077e98 <line:639:22>
| `-NonNullAttr 0x561d0c077ef0 <col:52, col:66> 1
|-FunctionDecl 0x561d0c0780e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561d0c077fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561d0c078190 <line:641:22>
| `-NonNullAttr 0x561d0c0781e8 <col:63, col:77> 1
|-FunctionDecl 0x561d0c0782f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561d0c078238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561d0c078398 <line:643:22>
| `-NonNullAttr 0x561d0c0783f0 <col:63, col:77> 1
|-FunctionDecl 0x561d0c078618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d0c078438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561d0c0784b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x561d0c0786c8 <line:647:22>
| `-NonNullAttr 0x561d0c078720 <col:63, col:80> 1 2
|-FunctionDecl 0x561d0c078928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x561d0c078768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x561d0c0787e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x561d0c0789d8 <line:650:22>
| `-NonNullAttr 0x561d0c078a30 <col:63, col:77> 1
|-FunctionDecl 0x561d0c078d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x561d0c078b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x561d0c078c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x561d0c078e28 <line:653:22>
| `-NonNullAttr 0x561d0c078e80 <col:63, col:77> 1
|-FunctionDecl 0x561d0c078fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x561d0c078ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561d0c079090 <col:69>
|-FunctionDecl 0x561d0c079208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x561d0c0790f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561d0c0792b0 <col:72>
|-FunctionDecl 0x561d0c0794e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x561d0c079318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x561d0c0793c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x561d0c079598 <col:44>
|-FunctionDecl 0x561d0c0797b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x561d0c079600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561d0c079678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x561d0c079868 <line:660:22>
| `-NonNullAttr 0x561d0c0798c0 <col:63, col:77> 2
|-FunctionDecl 0x561d0c079d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x561d0c0799a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x561d0c079ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x561d0c079bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x561d0c079dc0 <col:47>
|-FunctionDecl 0x561d0c07af60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x561d0c079e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561d0c07b0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x561d0c07b020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561d0c07b180 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x561d0c07b240 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x561d0c07b300 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x561d0c07b3b8 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x561d0c07b438 prev 0x561d0c07b3b8 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x561d0c07b4a0 <col:24> 'int' 0
|-VarDecl 0x561d0c07b4d8 <line:672:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x561d0c07b558 prev 0x561d0c07b4d8 <line:673:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x561d0c07b5c0 <col:27> 'int' 0
|-VarDecl 0x561d0c07b5f8 <line:674:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x561d0c07b678 prev 0x561d0c07b5f8 <line:675:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x561d0c07b6e0 <col:27> 'int' 0
|-VarDecl 0x561d0c07b710 <line:676:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x561d0c07b788 <line:677:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x561d0c07b808 <line:678:1, col:5> col:5 used x 'int'
|-VarDecl 0x561d0c07b888 prev 0x561d0c07b808 <line:679:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x561d0c07b8f0 <col:9> 'int' 0
|-VarDecl 0x561d0c07b928 <line:680:1, col:5> col:5 used y 'int'
|-VarDecl 0x561d0c07b9a8 prev 0x561d0c07b928 <line:681:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x561d0c07ba10 <col:9> 'int' 0
|-VarDecl 0x561d0c07ba40 <line:682:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x561d0c07bac0 <line:683:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x561d0c07bb38 <line:684:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x561d0c07bbb0 <line:685:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x561d0c07bc28 <line:686:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x561d0c07bca0 <line:687:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x561d0c07bd18 <line:688:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x561d0c07bd90 <line:689:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x561d0c07be08 <line:690:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x561d0c07be88 <line:691:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x561d0c07bf70 <line:692:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x561d0c07bfe8 <line:693:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x561d0c07c068 <line:694:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x561d0c07c0e0 <line:695:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x561d0c07c158 <line:696:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x561d0c07c1d0 <line:697:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x561d0c07c2e8 prev 0x561d0c07af60 <line:698:1, line:725:1> line:698:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x561d0c07c250 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561d0c07da88 <line:699:1, line:725:1>
|   |-CallExpr 0x561d0c07c3f8 <line:700:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d0c07c3e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d0c07c390 <col:3> 'void ()' Function 0x561d0c022350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d0c07c470 <line:701:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561d0c07c418 <col:3> 'int' lvalue Var 0x561d0c07c068 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x561d0c07c458 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d0c07c438 <col:15> 'int' lvalue Var 0x561d0c07bf70 'y$w_buff0' 'int'
|   |-BinaryOperator 0x561d0c07c4d0 <line:702:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561d0c07c490 <col:3> 'int' lvalue Var 0x561d0c07bf70 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x561d0c07c4b0 <col:15> 'int' 1
|   |-BinaryOperator 0x561d0c07c548 <line:703:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c07c4f0 <col:3> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c07c530 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d0c07c510 <col:20> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561d0c07c5e0 <line:704:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c07c568 <col:3> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x561d0c07c5b8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561d0c07c588 <col:27> 'int' 1
|   |-CallExpr 0x561d0c07c768 <line:705:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x561d0c07c750 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x561d0c07c600 <col:3> 'void (int)' Function 0x561d0c0220d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x561d0c07c700 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x561d0c07c6e0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x561d0c07c6c0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x561d0c07c678 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x561d0c07c660 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x561d0c07c620 <col:23> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x561d0c07c6a8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x561d0c07c690 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x561d0c07c640 <col:41> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561d0c07c7e8 <line:706:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c07c790 <col:3> '_Bool' lvalue Var 0x561d0c07bca0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c07c7d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d0c07c7b0 <col:20> '_Bool' lvalue Var 0x561d0c07bb38 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x561d0c07c860 <line:707:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c07c808 <col:3> '_Bool' lvalue Var 0x561d0c07bd18 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c07c848 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d0c07c828 <col:20> '_Bool' lvalue Var 0x561d0c07bbb0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561d0c07c8d8 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c07c880 <col:3> '_Bool' lvalue Var 0x561d0c07bd90 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c07c8c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d0c07c8a0 <col:20> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561d0c07c970 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c07c8f8 <col:3> '_Bool' lvalue Var 0x561d0c07bbb0 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x561d0c07c948 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561d0c07c918 <col:27> 'int' 1
|   |-CallExpr 0x561d0c07c9c8 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d0c07c9b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d0c07c990 <col:3> 'void ()' Function 0x561d0c022410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561d0c07ca20 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d0c07ca08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d0c07c9e8 <col:3> 'void ()' Function 0x561d0c022350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d0c07ca80 <line:712:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561d0c07ca40 <col:3> 'int' lvalue Var 0x561d0c07b888 'x' 'int'
|   | `-IntegerLiteral 0x561d0c07ca60 <col:7> 'int' 1
|   |-CallExpr 0x561d0c07cad8 <line:713:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d0c07cac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d0c07caa0 <col:3> 'void ()' Function 0x561d0c022410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561d0c07cb30 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d0c07cb18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d0c07caf8 <col:3> 'void ()' Function 0x561d0c022350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d0c07ce18 <line:715:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561d0c07cb50 <col:3> 'int' lvalue Var 0x561d0c07b9a8 'y' 'int'
|   | `-ConditionalOperator 0x561d0c07cde8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561d0c07cc10 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561d0c07cbc8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561d0c07cbb0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561d0c07cb70 <col:7> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561d0c07cbf8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561d0c07cbe0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561d0c07cb90 <col:25> '_Bool' lvalue Var 0x561d0c07bbb0 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x561d0c07cdd0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d0c07cc30 <col:42> 'int' lvalue Var 0x561d0c07bf70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561d0c07cdb0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561d0c07cd80 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561d0c07ccf0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561d0c07cca8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561d0c07cc90 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561d0c07cc50 <col:55> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561d0c07ccd8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561d0c07ccc0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561d0c07cc70 <col:73> '_Bool' lvalue Var 0x561d0c07bd18 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561d0c07cd50 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561d0c07cd10 <col:90> 'int' lvalue Var 0x561d0c07c068 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561d0c07cd68 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d0c07cd30 <col:102> 'int' lvalue Var 0x561d0c07b9a8 'y' 'int'
|   |-BinaryOperator 0x561d0c07d030 <line:716:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c07ce38 <col:3> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c07d018 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d0c07cfe8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561d0c07cef8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561d0c07ceb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561d0c07ce98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561d0c07ce58 <col:20> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561d0c07cee0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561d0c07cec8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561d0c07ce78 <col:38> '_Bool' lvalue Var 0x561d0c07bbb0 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561d0c07cfa0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561d0c07cf48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561d0c07cf18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561d0c07cfd0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561d0c07cfb8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d0c07cf80 <col:66> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561d0c07d318 <line:717:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c07d050 <col:3> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c07d300 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d0c07d2d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561d0c07d1f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561d0c07d110 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561d0c07d0c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561d0c07d0b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561d0c07d070 <col:20> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561d0c07d0f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561d0c07d0e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561d0c07d090 <col:38> '_Bool' lvalue Var 0x561d0c07bbb0 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x561d0c07d1d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561d0c07d188 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561d0c07d170 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561d0c07d130 <col:56> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561d0c07d1b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561d0c07d1a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561d0c07d150 <col:74> '_Bool' lvalue Var 0x561d0c07bd18 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561d0c07d288 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561d0c07d240 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561d0c07d210 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561d0c07d2b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561d0c07d2a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d0c07d268 <col:102> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561d0c07d520 <line:718:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c07d338 <col:3> '_Bool' lvalue Var 0x561d0c07bbb0 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c07d508 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d0c07d4d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561d0c07d3f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561d0c07d3b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561d0c07d398 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561d0c07d358 <col:20> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561d0c07d3e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561d0c07d3c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561d0c07d378 <col:38> '_Bool' lvalue Var 0x561d0c07bbb0 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561d0c07d490 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561d0c07d448 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561d0c07d418 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561d0c07d4c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561d0c07d4a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d0c07d470 <col:66> '_Bool' lvalue Var 0x561d0c07bbb0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561d0c07d808 <line:719:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c07d540 <col:3> '_Bool' lvalue Var 0x561d0c07bd18 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c07d7f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d0c07d7c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561d0c07d6e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561d0c07d600 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561d0c07d5b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561d0c07d5a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561d0c07d560 <col:20> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561d0c07d5e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561d0c07d5d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561d0c07d580 <col:38> '_Bool' lvalue Var 0x561d0c07bbb0 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x561d0c07d6c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561d0c07d678 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561d0c07d660 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561d0c07d620 <col:56> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561d0c07d6a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561d0c07d690 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561d0c07d640 <col:74> '_Bool' lvalue Var 0x561d0c07bd18 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561d0c07d778 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561d0c07d730 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561d0c07d700 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561d0c07d7a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561d0c07d790 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d0c07d758 <col:102> '_Bool' lvalue Var 0x561d0c07bd18 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x561d0c07d860 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d0c07d848 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d0c07d828 <col:3> 'void ()' Function 0x561d0c022410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561d0c07d8b8 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d0c07d8a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d0c07d880 <col:3> 'void ()' Function 0x561d0c022350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d0c07d970 <line:722:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561d0c07d8d8 <col:3> 'int' lvalue Var 0x561d0c07b438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561d0c07d950 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561d0c07d938 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d0c07d8f8 <col:22> 'int' lvalue Var 0x561d0c07b438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561d0c07d918 <col:41> 'int' 1
|   |-CallExpr 0x561d0c07d9c8 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d0c07d9b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d0c07d990 <col:3> 'void ()' Function 0x561d0c022410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561d0c07da78 <line:724:3, col:36>
|     `-CallExpr 0x561d0c07da58 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561d0c07da40 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561d0c07d9e8 <col:10> 'void *(void)' Function 0x561d0c021e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561d0c07dc10 prev 0x561d0c07b0b8 <line:726:1, line:758:1> line:726:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x561d0c07db78 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561d0c081800 <line:727:1, line:758:1>
|   |-CallExpr 0x561d0c07dcf0 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d0c07dcd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d0c07dcb8 <col:3> 'void ()' Function 0x561d0c022350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d0c07dd68 <line:729:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561d0c07dd10 <col:3> 'int' lvalue Var 0x561d0c07b558 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x561d0c07dd50 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d0c07dd30 <col:25> 'int' lvalue Var 0x561d0c07b888 'x' 'int'
|   |-CallExpr 0x561d0c07ddc0 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d0c07dda8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d0c07dd88 <col:3> 'void ()' Function 0x561d0c022410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561d0c07de18 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d0c07de00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d0c07dde0 <col:3> 'void ()' Function 0x561d0c022350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d0c07dec8 <line:732:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c07de38 <col:3> '_Bool' lvalue Var 0x561d0c07c158 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c07deb0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x561d0c07de90 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x561d0c07de78 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x561d0c07de58 <col:19> 'void *(void)' Function 0x561d0c021e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x561d0c07df90 <line:733:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c07dee8 <col:3> '_Bool' lvalue Var 0x561d0c07c1d0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c07df60 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x561d0c07df40 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x561d0c07df28 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x561d0c07df08 <col:19> 'void *(void)' Function 0x561d0c021e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x561d0c07e008 <line:734:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c07dfb0 <col:3> '_Bool' lvalue Var 0x561d0c07ba40 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c07dff0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d0c07dfd0 <col:21> '_Bool' lvalue Var 0x561d0c07c1d0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x561d0c07e080 <line:735:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561d0c07e028 <col:3> 'int' lvalue Var 0x561d0c07bac0 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x561d0c07e068 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d0c07e048 <col:15> 'int' lvalue Var 0x561d0c07b9a8 'y' 'int'
|   |-BinaryOperator 0x561d0c07e4b8 <line:736:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x561d0c07e0a0 <col:3> 'int' lvalue Var 0x561d0c07b9a8 'y' 'int'
|   | `-ConditionalOperator 0x561d0c07e488 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x561d0c07e2b0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x561d0c07e1d0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x561d0c07e0f8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x561d0c07e0e0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x561d0c07e0c0 <col:8> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x561d0c07e1b0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x561d0c07e148 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x561d0c07e130 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x561d0c07e110 <col:27> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x561d0c07e198 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x561d0c07e180 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x561d0c07e160 <col:46> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x561d0c07e290 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x561d0c07e228 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x561d0c07e210 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x561d0c07e1f0 <col:65> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x561d0c07e278 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x561d0c07e260 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x561d0c07e240 <col:84> '_Bool' lvalue Var 0x561d0c07bd90 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x561d0c07e470 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d0c07e2d0 <col:101> 'int' lvalue Var 0x561d0c07b9a8 'y' 'int'
|   |   `-ParenExpr 0x561d0c07e450 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x561d0c07e420 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x561d0c07e390 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561d0c07e348 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561d0c07e330 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561d0c07e2f0 <col:106> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561d0c07e378 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561d0c07e360 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561d0c07e310 <col:124> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561d0c07e3f0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561d0c07e3b0 <col:141> 'int' lvalue Var 0x561d0c07bf70 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x561d0c07e408 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d0c07e3d0 <col:153> 'int' lvalue Var 0x561d0c07c068 'y$w_buff1' 'int'
|   |-BinaryOperator 0x561d0c07e9c8 <line:737:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561d0c07e4d8 <col:3> 'int' lvalue Var 0x561d0c07bf70 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x561d0c07e998 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561d0c07e968 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561d0c07e950 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561d0c07e4f8 <col:15> '_Bool' lvalue Var 0x561d0c07c1d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561d0c07e980 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d0c07e518 <col:31> 'int' lvalue Var 0x561d0c07bf70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561d0c07e930 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561d0c07e900 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561d0c07e728 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561d0c07e648 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561d0c07e570 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561d0c07e558 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561d0c07e538 <col:45> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561d0c07e628 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561d0c07e5c0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561d0c07e5a8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561d0c07e588 <col:64> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x561d0c07e610 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561d0c07e5f8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561d0c07e5d8 <col:83> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561d0c07e708 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561d0c07e6a0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561d0c07e688 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561d0c07e668 <col:102> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x561d0c07e6f0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561d0c07e6d8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561d0c07e6b8 <col:121> '_Bool' lvalue Var 0x561d0c07bd90 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561d0c07e8e8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561d0c07e748 <col:138> 'int' lvalue Var 0x561d0c07bf70 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x561d0c07e8c8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561d0c07e898 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561d0c07e808 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561d0c07e7c0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561d0c07e7a8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561d0c07e768 <col:151> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561d0c07e7f0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561d0c07e7d8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561d0c07e788 <col:169> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x561d0c07e868 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561d0c07e828 <col:186> 'int' lvalue Var 0x561d0c07bf70 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x561d0c07e880 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561d0c07e848 <col:198> 'int' lvalue Var 0x561d0c07bf70 'y$w_buff0' 'int'
|   |-BinaryOperator 0x561d0c07eed8 <line:738:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561d0c07e9e8 <col:3> 'int' lvalue Var 0x561d0c07c068 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x561d0c07eea8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561d0c07ee78 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561d0c07ee60 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561d0c07ea08 <col:15> '_Bool' lvalue Var 0x561d0c07c1d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561d0c07ee90 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d0c07ea28 <col:31> 'int' lvalue Var 0x561d0c07c068 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x561d0c07ee40 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561d0c07ee10 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561d0c07ec38 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561d0c07eb58 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561d0c07ea80 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561d0c07ea68 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561d0c07ea48 <col:45> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561d0c07eb38 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561d0c07ead0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561d0c07eab8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561d0c07ea98 <col:64> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x561d0c07eb20 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561d0c07eb08 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561d0c07eae8 <col:83> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561d0c07ec18 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561d0c07ebb0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561d0c07eb98 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561d0c07eb78 <col:102> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x561d0c07ec00 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561d0c07ebe8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561d0c07ebc8 <col:121> '_Bool' lvalue Var 0x561d0c07bd90 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561d0c07edf8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561d0c07ec58 <col:138> 'int' lvalue Var 0x561d0c07c068 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x561d0c07edd8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561d0c07eda8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561d0c07ed18 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561d0c07ecd0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561d0c07ecb8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561d0c07ec78 <col:151> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561d0c07ed00 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561d0c07ece8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561d0c07ec98 <col:169> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x561d0c07ed78 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561d0c07ed38 <col:186> 'int' lvalue Var 0x561d0c07c068 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x561d0c07ed90 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561d0c07ed58 <col:198> 'int' lvalue Var 0x561d0c07c068 'y$w_buff1' 'int'
|   |-BinaryOperator 0x561d0c07f490 <line:739:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c07eef8 <col:3> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c07f478 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d0c07f448 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561d0c07f400 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561d0c07f3e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561d0c07ef18 <col:20> '_Bool' lvalue Var 0x561d0c07c1d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561d0c07f430 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561d0c07f418 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561d0c07ef38 <col:36> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x561d0c07f3c8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561d0c07f398 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561d0c07f158 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561d0c07f078 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561d0c07efa0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561d0c07ef78 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561d0c07ef58 <col:55> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561d0c07f058 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561d0c07eff0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561d0c07efd8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561d0c07efb8 <col:74> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x561d0c07f040 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561d0c07f028 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561d0c07f008 <col:93> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561d0c07f138 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561d0c07f0d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561d0c07f0b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561d0c07f098 <col:112> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x561d0c07f120 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561d0c07f108 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561d0c07f0e8 <col:131> '_Bool' lvalue Var 0x561d0c07bd90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x561d0c07f380 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561d0c07f368 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561d0c07f178 <col:148> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x561d0c07f348 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561d0c07f318 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561d0c07f238 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561d0c07f1f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561d0c07f1d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561d0c07f198 <col:166> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561d0c07f220 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561d0c07f208 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561d0c07f1b8 <col:184> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x561d0c07f2d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561d0c07f288 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561d0c07f258 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561d0c07f300 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561d0c07f2e8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561d0c07f2b0 <col:212> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561d0c07fa58 <line:740:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c07f4b0 <col:3> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c07fa40 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d0c07fa10 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561d0c07f9c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561d0c07f9b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561d0c07f4d0 <col:20> '_Bool' lvalue Var 0x561d0c07c1d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561d0c07f9f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561d0c07f9e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561d0c07f4f0 <col:36> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x561d0c07f990 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561d0c07f960 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561d0c07f700 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561d0c07f620 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561d0c07f548 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561d0c07f530 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561d0c07f510 <col:55> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561d0c07f600 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561d0c07f598 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561d0c07f580 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561d0c07f560 <col:74> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x561d0c07f5e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561d0c07f5d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561d0c07f5b0 <col:93> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561d0c07f6e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561d0c07f678 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561d0c07f660 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561d0c07f640 <col:112> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x561d0c07f6c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561d0c07f6b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561d0c07f690 <col:131> '_Bool' lvalue Var 0x561d0c07bd90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x561d0c07f948 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561d0c07f930 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561d0c07f720 <col:148> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x561d0c07f910 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561d0c07f8e0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561d0c07f7e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561d0c07f798 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561d0c07f780 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561d0c07f740 <col:166> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561d0c07f7c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561d0c07f7b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561d0c07f760 <col:184> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x561d0c07f8b0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561d0c07f830 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561d0c07f800 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561d0c07f8c8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561d0c07f888 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561d0c07f858 <col:219> 'int' 0
|   |-BinaryOperator 0x561d0c080010 <line:741:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c07fa78 <col:3> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c07fff8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d0c07ffc8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561d0c07ff70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561d0c07ff58 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561d0c07fa98 <col:20> '_Bool' lvalue Var 0x561d0c07c1d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561d0c07ffb0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561d0c07ff88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561d0c07fab8 <col:36> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x561d0c07ff38 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561d0c07ff08 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561d0c07fcc8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561d0c07fbe8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561d0c07fb10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561d0c07faf8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561d0c07fad8 <col:55> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561d0c07fbc8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561d0c07fb60 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561d0c07fb48 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561d0c07fb28 <col:74> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x561d0c07fbb0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561d0c07fb98 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561d0c07fb78 <col:93> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561d0c07fca8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561d0c07fc40 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561d0c07fc28 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561d0c07fc08 <col:112> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x561d0c07fc90 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561d0c07fc78 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561d0c07fc58 <col:131> '_Bool' lvalue Var 0x561d0c07bd90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x561d0c07fef0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561d0c07fed8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561d0c07fce8 <col:148> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x561d0c07feb8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561d0c07fe88 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561d0c07fda8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561d0c07fd60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561d0c07fd48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561d0c07fd08 <col:166> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561d0c07fd90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561d0c07fd78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561d0c07fd28 <col:184> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x561d0c07fe40 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561d0c07fdf8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561d0c07fdc8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561d0c07fe70 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561d0c07fe58 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561d0c07fe20 <col:212> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561d0c0805d8 <line:742:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c080030 <col:3> '_Bool' lvalue Var 0x561d0c07bd90 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c0805c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d0c080590 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561d0c080548 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561d0c080530 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561d0c080050 <col:20> '_Bool' lvalue Var 0x561d0c07c1d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561d0c080578 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561d0c080560 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561d0c080070 <col:36> '_Bool' lvalue Var 0x561d0c07bd90 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x561d0c080510 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561d0c0804e0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561d0c080280 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561d0c0801a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561d0c0800c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561d0c0800b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561d0c080090 <col:55> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561d0c080180 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561d0c080118 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561d0c080100 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561d0c0800e0 <col:74> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x561d0c080168 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561d0c080150 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561d0c080130 <col:93> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561d0c080260 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561d0c0801f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561d0c0801e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561d0c0801c0 <col:112> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x561d0c080248 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561d0c080230 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561d0c080210 <col:131> '_Bool' lvalue Var 0x561d0c07bd90 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x561d0c0804c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561d0c0804b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561d0c0802a0 <col:148> '_Bool' lvalue Var 0x561d0c07bd90 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x561d0c080490 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561d0c080460 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561d0c080360 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561d0c080318 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561d0c080300 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561d0c0802c0 <col:166> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561d0c080348 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561d0c080330 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561d0c0802e0 <col:184> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x561d0c080430 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561d0c0803b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561d0c080380 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561d0c080448 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561d0c080408 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561d0c0803d8 <col:219> 'int' 0
|   |-BinaryOperator 0x561d0c080650 <line:743:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561d0c0805f8 <col:3> 'int' lvalue Var 0x561d0c07b678 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x561d0c080638 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d0c080618 <col:25> 'int' lvalue Var 0x561d0c07b9a8 'y' 'int'
|   |-BinaryOperator 0x561d0c080780 <line:744:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x561d0c080670 <col:3> 'int' lvalue Var 0x561d0c07b9a8 'y' 'int'
|   | `-ConditionalOperator 0x561d0c080750 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x561d0c080708 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561d0c0806f0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561d0c080690 <col:7> '_Bool' lvalue Var 0x561d0c07ba40 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x561d0c080720 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d0c0806b0 <col:25> 'int' lvalue Var 0x561d0c07bac0 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x561d0c080738 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x561d0c0806d0 <col:37> 'int' lvalue Var 0x561d0c07b9a8 'y' 'int'
|   |-BinaryOperator 0x561d0c080818 <line:745:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c0807a0 <col:3> '_Bool' lvalue Var 0x561d0c07ba40 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x561d0c0807f0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561d0c0807c0 <col:28> 'int' 0
|   |-CallExpr 0x561d0c080870 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d0c080858 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d0c080838 <col:3> 'void ()' Function 0x561d0c022410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561d0c0808c8 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d0c0808b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d0c080890 <col:3> 'void ()' Function 0x561d0c022350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d0c080bb0 <line:748:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561d0c0808e8 <col:3> 'int' lvalue Var 0x561d0c07b9a8 'y' 'int'
|   | `-ConditionalOperator 0x561d0c080b80 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561d0c0809a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561d0c080960 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561d0c080948 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561d0c080908 <col:7> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561d0c080990 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561d0c080978 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561d0c080928 <col:25> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x561d0c080b68 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d0c0809c8 <col:42> 'int' lvalue Var 0x561d0c07bf70 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561d0c080b48 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561d0c080b18 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561d0c080a88 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561d0c080a40 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561d0c080a28 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561d0c0809e8 <col:55> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561d0c080a70 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561d0c080a58 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561d0c080a08 <col:73> '_Bool' lvalue Var 0x561d0c07bd90 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561d0c080ae8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561d0c080aa8 <col:90> 'int' lvalue Var 0x561d0c07c068 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561d0c080b00 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d0c080ac8 <col:102> 'int' lvalue Var 0x561d0c07b9a8 'y' 'int'
|   |-BinaryOperator 0x561d0c080db8 <line:749:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c080bd0 <col:3> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c080da0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d0c080d70 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561d0c080c90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561d0c080c48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561d0c080c30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561d0c080bf0 <col:20> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561d0c080c78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561d0c080c60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561d0c080c10 <col:38> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561d0c080d28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561d0c080ce0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561d0c080cb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561d0c080d58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561d0c080d40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d0c080d08 <col:66> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561d0c0810c8 <line:750:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c080dd8 <col:3> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c0810b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d0c081080 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561d0c080f78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561d0c080e98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561d0c080e50 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561d0c080e38 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561d0c080df8 <col:20> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561d0c080e80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561d0c080e68 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561d0c080e18 <col:38> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561d0c080f58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561d0c080f10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561d0c080ef8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561d0c080eb8 <col:56> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561d0c080f40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561d0c080f28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561d0c080ed8 <col:74> '_Bool' lvalue Var 0x561d0c07bd90 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561d0c081038 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561d0c080ff0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561d0c080fc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561d0c081068 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561d0c081050 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d0c081018 <col:102> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561d0c0812d0 <line:751:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c0810e8 <col:3> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c0812b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d0c081288 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561d0c0811a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561d0c081160 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561d0c081148 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561d0c081108 <col:20> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561d0c081190 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561d0c081178 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561d0c081128 <col:38> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561d0c081240 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561d0c0811f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561d0c0811c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561d0c081270 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561d0c081258 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d0c081220 <col:66> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561d0c0815b8 <line:752:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561d0c0812f0 <col:3> '_Bool' lvalue Var 0x561d0c07bd90 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561d0c0815a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d0c081570 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561d0c081490 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561d0c0813b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561d0c081368 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561d0c081350 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561d0c081310 <col:20> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561d0c081398 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561d0c081380 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561d0c081330 <col:38> '_Bool' lvalue Var 0x561d0c07bc28 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561d0c081470 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561d0c081428 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561d0c081410 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561d0c0813d0 <col:56> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561d0c081458 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561d0c081440 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561d0c0813f0 <col:74> '_Bool' lvalue Var 0x561d0c07bd90 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561d0c081528 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561d0c0814e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561d0c0814b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561d0c081558 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561d0c081540 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d0c081508 <col:102> '_Bool' lvalue Var 0x561d0c07bd90 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x561d0c081610 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d0c0815f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d0c0815d8 <col:3> 'void ()' Function 0x561d0c022410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561d0c081668 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d0c081650 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d0c081630 <col:3> 'void ()' Function 0x561d0c022350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d0c081720 <line:755:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561d0c081688 <col:3> 'int' lvalue Var 0x561d0c07b438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561d0c081700 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561d0c0816e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d0c0816a8 <col:22> 'int' lvalue Var 0x561d0c07b438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561d0c0816c8 <col:41> 'int' 1
|   |-CallExpr 0x561d0c081778 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d0c081760 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d0c081740 <col:3> 'void ()' Function 0x561d0c022410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561d0c0817f0 <line:757:3, col:36>
|     `-CallExpr 0x561d0c0817d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561d0c0817b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561d0c081798 <col:10> 'void *(void)' Function 0x561d0c021e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561d0c081920 prev 0x561d0c07b180 <line:759:1, line:761:1> line:759:6 fence 'void ()'
| `-CompoundStmt 0x561d0c0819c0 <line:760:1, line:761:1>
|-FunctionDecl 0x561d0c0819f0 prev 0x561d0c07b240 <line:762:1, line:764:1> line:762:6 isync 'void ()'
| `-CompoundStmt 0x561d0c081a90 <line:763:1, line:764:1>
|-FunctionDecl 0x561d0c081ac0 prev 0x561d0c07b300 <line:765:1, line:767:1> line:765:6 lwfence 'void ()'
| `-CompoundStmt 0x561d0c081b60 <line:766:1, line:767:1>
`-FunctionDecl 0x561d0c081bc8 <line:768:1, line:790:1> line:768:5 main 'int ()'
  `-CompoundStmt 0x561d0c083550 <line:769:1, line:790:1>
    |-DeclStmt 0x561d0c081ce0 <line:770:3, col:18>
    | `-VarDecl 0x561d0c081c78 <col:3, col:13> col:13 used t2313 'pthread_t':'unsigned long'
    |-CallExpr 0x561d0c081ee8 <line:771:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561d0c081ed0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561d0c081cf8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561d0c0628f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561d0c081d38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561d0c081d18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561d0c081c78 't2313' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561d0c081f28 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561d0c081db0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561d0c081d88 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561d0c081d50 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561d0c081f40 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561d0c081dd0 <col:39> 'void *(void *)' Function 0x561d0c07c2e8 'P0' 'void *(void *)'
    | `-ParenExpr 0x561d0c081e50 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561d0c081e28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561d0c081df0 <col:52> 'int' 0
    |-DeclStmt 0x561d0c082038 <line:772:3, col:18>
    | `-VarDecl 0x561d0c081fd0 <col:3, col:13> col:13 used t2314 'pthread_t':'unsigned long'
    |-CallExpr 0x561d0c0821e0 <line:773:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561d0c0821c8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561d0c082050 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561d0c0628f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561d0c082090 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561d0c082070 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561d0c081fd0 't2314' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561d0c082220 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561d0c082108 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561d0c0820e0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561d0c0820a8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561d0c082238 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561d0c082128 <col:39> 'void *(void *)' Function 0x561d0c07dc10 'P1' 'void *(void *)'
    | `-ParenExpr 0x561d0c0821a8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561d0c082180 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561d0c082148 <col:52> 'int' 0
    |-CallExpr 0x561d0c082288 <line:774:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561d0c082270 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561d0c082250 <col:3> 'void ()' Function 0x561d0c022350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561d0c082358 <line:775:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x561d0c0822a8 <col:3> '_Bool' lvalue Var 0x561d0c07b710 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x561d0c082340 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x561d0c082320 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x561d0c082308 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x561d0c0822c8 <col:21> 'int' lvalue Var 0x561d0c07b438 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x561d0c0822e8 <col:41> 'int' 2
    |-CallExpr 0x561d0c0823b0 <line:776:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561d0c082398 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561d0c082378 <col:3> 'void ()' Function 0x561d0c022410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561d0c082428 <line:777:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561d0c082410 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561d0c0823d0 <col:3> 'void (int)' Function 0x561d0c021ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x561d0c082468 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561d0c082450 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561d0c0823f0 <col:21> '_Bool' lvalue Var 0x561d0c07b710 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x561d0c0824b8 <line:778:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561d0c0824a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561d0c082480 <col:3> 'void ()' Function 0x561d0c022350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561d0c0827a0 <line:779:3, col:103> 'int' '='
    | |-DeclRefExpr 0x561d0c0824d8 <col:3> 'int' lvalue Var 0x561d0c07b9a8 'y' 'int'
    | `-ConditionalOperator 0x561d0c082770 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x561d0c082598 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x561d0c082550 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x561d0c082538 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x561d0c0824f8 <col:7> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x561d0c082580 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x561d0c082568 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x561d0c082518 <col:25> '_Bool' lvalue Var 0x561d0c07bb38 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x561d0c082758 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561d0c0825b8 <col:42> 'int' lvalue Var 0x561d0c07bf70 'y$w_buff0' 'int'
    |   `-ParenExpr 0x561d0c082738 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x561d0c082708 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x561d0c082678 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x561d0c082630 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x561d0c082618 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x561d0c0825d8 <col:55> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x561d0c082660 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x561d0c082648 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561d0c0825f8 <col:73> '_Bool' lvalue Var 0x561d0c07bca0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561d0c0826d8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561d0c082698 <col:90> 'int' lvalue Var 0x561d0c07c068 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x561d0c0826f0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x561d0c0826b8 <col:102> 'int' lvalue Var 0x561d0c07b9a8 'y' 'int'
    |-BinaryOperator 0x561d0c0829a8 <line:780:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561d0c0827c0 <col:3> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x561d0c082990 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561d0c082960 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561d0c082880 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561d0c082838 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561d0c082820 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561d0c0827e0 <col:20> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561d0c082868 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561d0c082850 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561d0c082800 <col:38> '_Bool' lvalue Var 0x561d0c07bb38 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561d0c082918 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561d0c0828d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561d0c0828a0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561d0c082948 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561d0c082930 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561d0c0828f8 <col:66> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x561d0c082c90 <line:781:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561d0c0829c8 <col:3> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x561d0c082c78 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561d0c082c48 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561d0c082b68 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561d0c082a88 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561d0c082a40 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561d0c082a28 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561d0c0829e8 <col:20> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561d0c082a70 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561d0c082a58 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561d0c082a08 <col:38> '_Bool' lvalue Var 0x561d0c07bb38 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561d0c082b48 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561d0c082b00 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561d0c082ae8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561d0c082aa8 <col:56> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561d0c082b30 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561d0c082b18 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561d0c082ac8 <col:74> '_Bool' lvalue Var 0x561d0c07bca0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561d0c082c00 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561d0c082bb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561d0c082b88 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561d0c082c30 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561d0c082c18 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561d0c082be0 <col:102> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x561d0c082e98 <line:782:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561d0c082cb0 <col:3> '_Bool' lvalue Var 0x561d0c07bb38 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561d0c082e80 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561d0c082e50 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561d0c082d70 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561d0c082d28 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561d0c082d10 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561d0c082cd0 <col:20> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561d0c082d58 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561d0c082d40 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561d0c082cf0 <col:38> '_Bool' lvalue Var 0x561d0c07bb38 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561d0c082e08 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561d0c082dc0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561d0c082d90 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561d0c082e38 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561d0c082e20 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561d0c082de8 <col:66> '_Bool' lvalue Var 0x561d0c07bb38 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x561d0c0831a8 <line:783:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561d0c082eb8 <col:3> '_Bool' lvalue Var 0x561d0c07bca0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561d0c083190 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561d0c083160 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561d0c083080 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561d0c082f78 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561d0c082f30 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561d0c082f18 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561d0c082ed8 <col:20> '_Bool' lvalue Var 0x561d0c07bfe8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561d0c082f60 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561d0c082f48 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561d0c082ef8 <col:38> '_Bool' lvalue Var 0x561d0c07bb38 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561d0c083060 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561d0c083018 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561d0c083000 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561d0c082f98 <col:56> '_Bool' lvalue Var 0x561d0c07c0e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561d0c083048 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561d0c083030 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561d0c082fe0 <col:74> '_Bool' lvalue Var 0x561d0c07bca0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561d0c083118 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561d0c0830d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561d0c0830a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561d0c083148 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561d0c083130 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561d0c0830f8 <col:102> '_Bool' lvalue Var 0x561d0c07bca0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x561d0c083200 <line:784:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561d0c0831e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561d0c0831c8 <col:3> 'void ()' Function 0x561d0c022410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561d0c083258 <line:785:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561d0c083240 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561d0c083220 <col:3> 'void ()' Function 0x561d0c022350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561d0c0833f8 <line:786:3, col:75> '_Bool' '='
    | |-DeclRefExpr 0x561d0c083278 <col:3> '_Bool' lvalue Var 0x561d0c07b788 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x561d0c0833e0 <col:21, col:75> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x561d0c0833c8 <col:21, col:75> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x561d0c0833a8 <col:22, col:75> 'int'
    |       `-BinaryOperator 0x561d0c083388 <col:23, col:74> 'int' '&&'
    |         |-BinaryOperator 0x561d0c0832f0 <col:23, col:46> 'int' '=='
    |         | |-ImplicitCastExpr 0x561d0c0832d8 <col:23> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x561d0c083298 <col:23> 'int' lvalue Var 0x561d0c07b558 '__unbuffered_p1_EAX' 'int'
    |         | `-IntegerLiteral 0x561d0c0832b8 <col:46> 'int' 1
    |         `-BinaryOperator 0x561d0c083368 <col:51, col:74> 'int' '=='
    |           |-ImplicitCastExpr 0x561d0c083350 <col:51> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561d0c083310 <col:51> 'int' lvalue Var 0x561d0c07b678 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x561d0c083330 <col:74> 'int' 0
    |-CallExpr 0x561d0c083450 <line:787:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561d0c083438 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561d0c083418 <col:3> 'void ()' Function 0x561d0c022410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561d0c0834c8 <line:788:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561d0c0834b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561d0c083470 <col:3> 'void (int)' Function 0x561d0c0220d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x561d0c083508 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561d0c0834f0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561d0c083490 <col:21> '_Bool' lvalue Var 0x561d0c07b788 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x561d0c083540 <line:789:3, col:10>
      `-IntegerLiteral 0x561d0c083520 <col:10> 'int' 0
