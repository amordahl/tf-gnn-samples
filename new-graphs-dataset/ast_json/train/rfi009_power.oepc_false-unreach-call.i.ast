TranslationUnitDecl 0x55ab12c89f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55ab12c8a848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55ab12c8a520 '__int128'
|-TypedefDecl 0x55ab12c8a8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55ab12c8a540 'unsigned __int128'
|-TypedefDecl 0x55ab12c8abc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55ab12c8a990 'struct __NSConstantString_tag'
|   `-Record 0x55ab12c8a910 '__NSConstantString_tag'
|-TypedefDecl 0x55ab12c8ac68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55ab12c8ac20 'char *'
|   `-BuiltinType 0x55ab12c8a020 'char'
|-TypedefDecl 0x55ab12cc9b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55ab12c8af00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55ab12c8ad40 'struct __va_list_tag'
|     `-Record 0x55ab12c8acc0 '__va_list_tag'
|-FunctionDecl 0x55ab12cc9c80 <pthread-wmm/rfi009_power.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55ab12cc9e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55ab12cc9d80 <col:31> col:34 'int'
|-FunctionDecl 0x55ab12cc9fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55ab12cca0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55ab12cca238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55ab12cca1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55ab12cca468 <col:40, col:99>
|   |-IfStmt 0x55ab12cca438 <col:42, col:88>
|   | |-UnaryOperator 0x55ab12cca318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55ab12cca300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55ab12cca2e0 <col:47> 'int' lvalue ParmVar 0x55ab12cca1a8 'expression' 'int'
|   | `-CompoundStmt 0x55ab12cca420 <col:59, col:88>
|   |   `-LabelStmt 0x55ab12cca408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55ab12cca398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55ab12cca380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55ab12cca330 <col:68> 'void () __attribute__((noreturn))' Function 0x55ab12cca0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55ab12cca450 <col:89>
|   `-ReturnStmt 0x55ab12cca458 <col:91>
|-FunctionDecl 0x55ab12cca4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55ab12cca570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55ab12cca8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55ab12cca628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55ab12cca6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55ab12cca728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55ab12cca7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55ab12cca9b0 <line:11:22>
|-FunctionDecl 0x55ab12ceff10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55ab12ccaa20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55ab12ccaaa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55ab12cefd40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55ab12cefdc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55ab12ceffd0 <line:14:22>
|-FunctionDecl 0x55ab12cf0280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55ab12cf0040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55ab12cf00c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55ab12cf0140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55ab12cf0338 <line:16:22>
|-TypedefDecl 0x55ab12cf03a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55ab12c8a0e0 'unsigned char'
|-TypedefDecl 0x55ab12cf0418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55ab12c8a100 'unsigned short'
|-TypedefDecl 0x55ab12cf0488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55ab12c8a120 'unsigned int'
|-TypedefDecl 0x55ab12cf04f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-TypedefDecl 0x55ab12cf0568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55ab12c8a040 'signed char'
|-TypedefDecl 0x55ab12cf05d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55ab12c8a0e0 'unsigned char'
|-TypedefDecl 0x55ab12cf0648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55ab12c8a060 'short'
|-TypedefDecl 0x55ab12cf06b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55ab12c8a100 'unsigned short'
|-TypedefDecl 0x55ab12cf0728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55ab12c8a080 'int'
|-TypedefDecl 0x55ab12cf0798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55ab12c8a120 'unsigned int'
|-TypedefDecl 0x55ab12cf0808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf0878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-TypedefDecl 0x55ab12cf08e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf0958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-TypedefDecl 0x55ab12cf09c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-TypedefDecl 0x55ab12cf0a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55ab12c8a120 'unsigned int'
|-TypedefDecl 0x55ab12cf0aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55ab12c8a120 'unsigned int'
|-TypedefDecl 0x55ab12cf0b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-TypedefDecl 0x55ab12cf0b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-TypedefDecl 0x55ab12cf0bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55ab12c8a120 'unsigned int'
|-TypedefDecl 0x55ab12cf0c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-TypedefDecl 0x55ab12cf0cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf0d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf0dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55ab12c8a080 'int'
|-RecordDecl 0x55ab12cf0e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55ab12cf0f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55ab12cf1030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55ab12cf0fd0 'struct __fsid_t' sugar
|   `-RecordType 0x55ab12cf0eb0 '__fsid_t'
|     `-Record 0x55ab12cf0e30 ''
|-TypedefDecl 0x55ab12cf10b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf1128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-TypedefDecl 0x55ab12cf1198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-TypedefDecl 0x55ab12cf1208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55ab12c8a120 'unsigned int'
|-TypedefDecl 0x55ab12cf1278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf12e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55ab12c8a120 'unsigned int'
|-TypedefDecl 0x55ab12cf1358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf13c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55ab12c8a080 'int'
|-TypedefDecl 0x55ab12cf1438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55ab12c8a080 'int'
|-TypedefDecl 0x55ab12cf14a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55ab12c8a080 'int'
|-TypedefDecl 0x55ab12cf1518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55ab12c8a7a0 'void *'
|   `-BuiltinType 0x55ab12c89fe0 'void'
|-TypedefDecl 0x55ab12cf1588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf15f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf1668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf16d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-TypedefDecl 0x55ab12cf1748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-TypedefDecl 0x55ab12cf17b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-TypedefDecl 0x55ab12cf1828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-TypedefDecl 0x55ab12cf1898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf1908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf1978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf19e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-TypedefDecl 0x55ab12cf1a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55ab12cf1a40 '__off64_t' sugar
|   |-Typedef 0x55ab12cf0d68 '__off64_t'
|   `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf1b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55ab12cf1b30 '__quad_t *'
|   `-TypedefType 0x55ab12cf1ad0 '__quad_t' sugar
|     |-Typedef 0x55ab12cf08e8 '__quad_t'
|     `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf1be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55ab12c8ac20 'char *'
|   `-BuiltinType 0x55ab12c8a020 'char'
|-TypedefDecl 0x55ab12cf1c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf1cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55ab12c8a120 'unsigned int'
|-FunctionDecl 0x55ab12cf1e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55ab12cf1d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55ab12cf2148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55ab12cf2138 <line:73:3, col:34>
|     `-CallExpr 0x55ab12cf20f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55ab12cf20e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55ab12cf2070 <col:10> '<builtin fn type>' Function 0x55ab12cf1ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55ab12cf2120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55ab12cf2090 <col:29> 'unsigned int' lvalue ParmVar 0x55ab12cf1d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x55ab12cf1ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55ab12cf1f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55ab12cf1ff0 <col:10> Implicit
| `-ConstAttr 0x55ab12cf2048 <col:10> Implicit
|-FunctionDecl 0x55ab12cf22a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55ab12cf2198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55ab12cf25b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55ab12cf25a8 <line:78:3, col:34>
|     `-CallExpr 0x55ab12cf2568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55ab12cf2550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55ab12cf24d8 <col:10> '<builtin fn type>' Function 0x55ab12cf2348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55ab12cf2590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55ab12cf24f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55ab12cf2198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55ab12cf2348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55ab12cf23e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55ab12cf2458 <col:10> Implicit
| `-ConstAttr 0x55ab12cf24b0 <col:10> Implicit
|-TypedefDecl 0x55ab12cf25e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-TypedefDecl 0x55ab12cf2678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55ab12cf2640 '__time_t' sugar
|   |-Typedef 0x55ab12cf1278 '__time_t'
|   `-BuiltinType 0x55ab12c8a0a0 'long'
|-RecordDecl 0x55ab12cf26d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55ab12cf2788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55ab12cf2818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55ab12cf28a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55ab12cf2870 '__pid_t' sugar
|   |-Typedef 0x55ab12cf0dd8 '__pid_t'
|   `-BuiltinType 0x55ab12c8a080 'int'
|-RecordDecl 0x55ab12cf2900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55ab12cf29c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55ab12cf2a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55ab12cf2ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55ab12cf2b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-RecordDecl 0x55ab12cf2b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55ab12cf4e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55ab12cf4f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55ab12cf4ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x55ab12cf2c10 'cpu_set_t'
|     `-Record 0x55ab12cf2b90 ''
|-FunctionDecl 0x55ab12cf51f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55ab12cf4fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55ab12cf50d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55ab12cf52a8 <line:108:19>
|-FunctionDecl 0x55ab12cf5480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55ab12cf5310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55ab12cf5528 <col:69>
|-FunctionDecl 0x55ab12cf56a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55ab12cf5590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55ab12cf5748 <col:64>
|-FunctionDecl 0x55ab12cf5a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55ab12cf57b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55ab12cf58e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55ab12cf5ab8 <line:114:22>
|-FunctionDecl 0x55ab12cf5e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55ab12cf5b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55ab12cf5c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55ab12cf5f10 <col:88>
|-FunctionDecl 0x55ab12cf61c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55ab12cf5f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55ab12cf5ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55ab12cf6088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55ab12cf6280 <col:62>
|-FunctionDecl 0x55ab12cf63f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55ab12cf62e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55ab12cf64a0 <col:63>
|-FunctionDecl 0x55ab12cf65c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55ab12cf6668 <col:47>
|-FunctionDecl 0x55ab12cf6770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55ab12cf66d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55ab12cf6818 <col:69>
|-FunctionDecl 0x55ab12cf6920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55ab12cf6888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55ab12cf69c8 <col:69>
|-FunctionDecl 0x55ab12cf6c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55ab12cf6a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55ab12cf6b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55ab12cf6d38 <col:88>
|-TypedefDecl 0x55ab12cf6dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55ab12cf6d90 '__clock_t' sugar
|   |-Typedef 0x55ab12cf10b8 '__clock_t'
|   `-BuiltinType 0x55ab12c8a0a0 'long'
|-TypedefDecl 0x55ab12cf77e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55ab12cf6e20 '__clockid_t' sugar
|   |-Typedef 0x55ab12cf14a8 '__clockid_t'
|   `-BuiltinType 0x55ab12c8a080 'int'
|-TypedefDecl 0x55ab12cf7878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55ab12cf7840 '__timer_t' sugar
|   |-Typedef 0x55ab12cf1518 '__timer_t'
|   `-PointerType 0x55ab12c8a7a0 'void *'
|     `-BuiltinType 0x55ab12c89fe0 'void'
|-RecordDecl 0x55ab12cf78d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55ab12cf7990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55ab12cf79f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55ab12cf7a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55ab12cf7ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55ab12cf7b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55ab12cf7b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55ab12cf7c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55ab12cf7c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55ab12cf7cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55ab12cf7d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55ab12cf7da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55ab12cf7df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55ab12cf7eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55ab12cf7f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55ab12cf7fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55ab12cf81a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55ab12cf8240 <col:45>
|-FunctionDecl 0x55ab12cf8420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55ab12cf8310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55ab12cf84c8 <col:54>
|-FunctionDecl 0x55ab12cf86c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55ab12cf8530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55ab12cf85a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55ab12cf8778 <line:158:22>
| `-ConstAttr 0x55ab12cf9410 <col:63>
|-FunctionDecl 0x55ab12cf9610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55ab12cf9508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55ab12cf96b8 <col:56>
|-FunctionDecl 0x55ab12cf9a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55ab12cf9728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55ab12cf97a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55ab12cf9820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55ab12cf9918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55ab12cf9b20 <col:54>
|-RecordDecl 0x55ab12cf9b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55ab12cf9c28 parent 0x55ab12c89f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55ab12cf9e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55ab12cf9f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55ab12cf9f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55ab12cf9ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55ab12cfa0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55ab12cfa208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55ab12cfa1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55ab12cfa140 'struct __locale_struct' sugar
|     `-RecordType 0x55ab12cf9c00 'struct __locale_struct'
|       `-Record 0x55ab12cf9b78 '__locale_struct'
|-TypedefDecl 0x55ab12cfa2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55ab12cfa280 '__locale_t' sugar
|   |-Typedef 0x55ab12cfa208 '__locale_t'
|   `-PointerType 0x55ab12cfa1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55ab12cfa140 'struct __locale_struct' sugar
|       `-RecordType 0x55ab12cf9c00 'struct __locale_struct'
|         `-Record 0x55ab12cf9b78 '__locale_struct'
|-FunctionDecl 0x55ab12cfa6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55ab12cfa328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55ab12cfa3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55ab12cfa438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55ab12cfa4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55ab12cfa540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55ab12cfa778 <col:40>
|-FunctionDecl 0x55ab12cfa968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55ab12cfa840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55ab12cfaa10 <col:66>
|-FunctionDecl 0x55ab12cfab20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55ab12cfaa78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55ab12cfabc8 <col:69>
|-FunctionDecl 0x55ab12cfadf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55ab12cfac30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55ab12cfacc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55ab12cfaea8 <col:52>
|-FunctionDecl 0x55ab12cfb050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55ab12cfaf10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55ab12cfafa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55ab12cfb100 <col:55>
|-FunctionDecl 0x55ab12cfb298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55ab12cfb180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55ab12cfb340 <col:62>
|-FunctionDecl 0x55ab12cfb578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55ab12cfb3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55ab12cfb620 <col:60>
|-FunctionDecl 0x55ab12cfb848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55ab12cfb6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55ab12cfb720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55ab12cfb8f8 <col:44>
|-FunctionDecl 0x55ab12cfbb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55ab12cfb960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55ab12cfb9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55ab12cfbbb8 <col:49>
|-VarDecl 0x55ab12cfbcb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55ab12cfbd38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55ab12cfbdb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55ab12cfbe80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55ab12cfbfb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55ab12cfc050 <col:42>
|-VarDecl 0x55ab12cfc0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55ab12cfc140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55ab12cfc2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55ab12cfc1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55ab12cfc370 <col:57>
|-FunctionDecl 0x55ab12cfd4f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55ab12cfc3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55ab12cfd598 <col:56>
|-FunctionDecl 0x55ab12cfd6a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55ab12cfd618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55ab12cfd750 <col:59>
|-FunctionDecl 0x55ab12cfd858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55ab12cfd7c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55ab12cfd900 <col:48>
| `-ConstAttr 0x55ab12cfd958 <col:89>
|-FunctionDecl 0x55ab12cfdbb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55ab12cfda08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55ab12cfda98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55ab12cfde18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55ab12cfdca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ab12cfdd38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55ab12cfdec8 <col:88>
|-FunctionDecl 0x55ab12cfe060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55ab12cfdf30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ab12cfdfc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55ab12cfe110 <col:88>
|-FunctionDecl 0x55ab12cfe328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55ab12cfe178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ab12cfe208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55ab12cfe3d8 <line:209:22>
|-FunctionDecl 0x55ab12cfe778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55ab12cfe440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ab12cfe500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55ab12cfe590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55ab12cfe620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55ab12cfea78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55ab12cfe878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55ab12cfe950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55ab12cfeb28 <col:85>
|-FunctionDecl 0x55ab12cfef18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55ab12cfeb90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ab12cfecc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55ab12cfedd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55ab12cfefd0 <col:52>
|-FunctionDecl 0x55ab12cff148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55ab12cff038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55ab12cff1f0 <col:61>
|-FunctionDecl 0x55ab12cff668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55ab12cff258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55ab12cff2d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55ab12cff408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55ab12cff510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55ab12cff728 <col:62>
|-FunctionDecl 0x55ab12cff948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55ab12cff790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55ab12cff820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55ab12cff9f8 <line:222:22>
|-FunctionDecl 0x55ab12cffaf8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55ab12cffa60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55ab12cffba0 <col:65>
|-TypedefDecl 0x55ab12cffc10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55ab12c8a140 'unsigned long'
|-RecordDecl 0x55ab12cffc68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55ab12cffdb0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55ab12cffe18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ab12cffec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55ab12cffe70 'union pthread_attr_t' sugar
|   `-RecordType 0x55ab12cffcf0 'union pthread_attr_t'
|     `-Record 0x55ab12cffc68 'pthread_attr_t'
|-RecordDecl 0x55ab12cfff20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55ab12d00098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55ab12d00110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55ab12d001c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55ab12d00160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55ab12cfffa0 'struct __pthread_internal_list'
|     `-Record 0x55ab12cfff20 '__pthread_internal_list'
|-RecordDecl 0x55ab12d00230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55ab12d002d8 parent 0x55ab12c89f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55ab12d003b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55ab12d00418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55ab12d00480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55ab12d04530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55ab12d04598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55ab12d04600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55ab12d04688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55ab12d04740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55ab12d04830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55ab12d04898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ab12d04a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55ab12d049c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55ab12d002b0 'pthread_mutex_t'
|     `-Record 0x55ab12d00230 ''
|-RecordDecl 0x55ab12d04a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55ab12d04bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55ab12d04c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55ab12d04cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55ab12d04c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55ab12d04b10 'pthread_mutexattr_t'
|     `-Record 0x55ab12d04a90 ''
|-RecordDecl 0x55ab12d04d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55ab12d04e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55ab12d04ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55ab12d04f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55ab12d04fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55ab12d05008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55ab12d05070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55ab12d050d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55ab12d05140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55ab12d051a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55ab12d05260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi009_power.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/rfi009_power.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55ab12d05350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55ab12d053b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55ab12d05540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55ab12d05490 'union pthread_cond_t' sugar
|   `-RecordType 0x55ab12d04de0 'pthread_cond_t'
|     `-Record 0x55ab12d04d60 ''
|-RecordDecl 0x55ab12d055b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55ab12d056b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55ab12d05718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55ab12d057d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55ab12d05770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55ab12d05630 'pthread_condattr_t'
|     `-Record 0x55ab12d055b0 ''
|-TypedefDecl 0x55ab12d05858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55ab12c8a120 'unsigned int'
|-TypedefDecl 0x55ab12d058c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55ab12c8a080 'int'
|-RecordDecl 0x55ab12d05920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55ab12d059c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55ab12d05a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55ab12d05af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55ab12d05b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55ab12d05bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55ab12d05c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55ab12d05c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55ab12d05d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55ab12d05d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55ab12d05dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55ab12d05e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55ab12d05ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55ab12d05f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi009_power.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/rfi009_power.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55ab12d05ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55ab12d06060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ab12d061b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55ab12d06150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55ab12d059a0 'pthread_rwlock_t'
|     `-Record 0x55ab12d05920 ''
|-RecordDecl 0x55ab12d06220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55ab12d06360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55ab12d063c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ab12d06480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55ab12d06420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55ab12d062a0 'pthread_rwlockattr_t'
|     `-Record 0x55ab12d06220 ''
|-TypedefDecl 0x55ab12d08560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55ab12c8a084 'volatile int' volatile
|   `-BuiltinType 0x55ab12c8a080 'int'
|-RecordDecl 0x55ab12d085b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55ab12d08700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55ab12d08768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ab12d08820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55ab12d087c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55ab12d08640 'pthread_barrier_t'
|     `-Record 0x55ab12d085b8 ''
|-RecordDecl 0x55ab12d08890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55ab12d08990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55ab12d089f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55ab12d08ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55ab12d08a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55ab12d08910 'pthread_barrierattr_t'
|     `-Record 0x55ab12d08890 ''
|-TypedefDecl 0x55ab12d08bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55ab12d08b60 'long [8]' 8 
|   `-BuiltinType 0x55ab12c8a0a0 'long'
|-EnumDecl 0x55ab12d08c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55ab12d08ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55ab12d08d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55ab12d08d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55ab12d08e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55ab12d08ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55ab12d08ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55ab12d08f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55ab12d08fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55ab12d08fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55ab12d08f98 <col:26> 'int' EnumConstant 0x55ab12d08e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55ab12d09058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55ab12d09040 <col:29> 'int'
| |   `-DeclRefExpr 0x55ab12d09020 <col:29> 'int' EnumConstant 0x55ab12d08ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55ab12d090e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55ab12d090c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55ab12d090a8 <col:30> 'int' EnumConstant 0x55ab12d08ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55ab12d09168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55ab12d09150 <col:27> 'int'
|     `-DeclRefExpr 0x55ab12d09130 <col:27> 'int' EnumConstant 0x55ab12d08fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55ab12d091b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55ab12d09288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55ab12d09310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55ab12d092f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55ab12d092d8 <col:30> 'int' EnumConstant 0x55ab12d09288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55ab12d09360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55ab12d093e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55ab12d093d0 <col:29> 'int'
|     `-DeclRefExpr 0x55ab12d093b0 <col:29> 'int' EnumConstant 0x55ab12d09360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55ab12d09438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55ab12d09508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55ab12d09570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55ab12d095c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55ab12d09610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55ab12d096d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55ab12d09728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55ab12d09778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55ab12d09800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55ab12d097e8 <col:31> 'int'
|     `-DeclRefExpr 0x55ab12d097c8 <col:31> 'int' EnumConstant 0x55ab12d096d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55ab12d09850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55ab12d09918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55ab12d09968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55ab12d099b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55ab12d09a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55ab12d09ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55ab12d09b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55ab12d09bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55ab12d09c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55ab12d09c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55ab12d09ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55ab12d09f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55ab12d09fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55ab12d0a0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55ab12d0a118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55ab12d0a1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55ab12d0a238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55ab12d0a288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55ab12d0a358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55ab12d0a3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55ab12d0a9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55ab12d0a4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55ab12d0a5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ab12d0a7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55ab12d0a840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55ab12d0aa98 <col:47>
| |-NonNullAttr 0x55ab12d0aaf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55ab12d0ab28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55ab12d0ac50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55ab12d0ab80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55ab12d0aea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55ab12d0ad08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55ab12d0ad88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55ab12d0b078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55ab12d0af68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55ab12d0b120 <col:60>
|-FunctionDecl 0x55ab12d0b270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55ab12d0b310 <col:54>
| `-ConstAttr 0x55ab12d0b368 <col:95>
|-FunctionDecl 0x55ab12d0bda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55ab12d0b3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ab12d0b418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55ab12d0be50 <line:395:19>
| `-ConstAttr 0x55ab12d0bea8 <col:60>
|-FunctionDecl 0x55ab12d0c078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55ab12d0bf40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55ab12d0c120 <col:71>
| `-NonNullAttr 0x55ab12d0c178 <col:112, col:126> 1
|-FunctionDecl 0x55ab12d0c280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55ab12d0c1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55ab12d0c328 <line:398:22>
| `-NonNullAttr 0x55ab12d0c380 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d0c5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55ab12d0c3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55ab12d0c448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55ab12d0c658 <line:401:22>
| `-NonNullAttr 0x55ab12d0c6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d0c8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55ab12d0c6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ab12d0c778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55ab12d0c968 <line:404:22>
| `-NonNullAttr 0x55ab12d0c9c0 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d0cc18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55ab12d0ca08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55ab12d0cab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55ab12d0ccc8 <line:407:22>
| `-NonNullAttr 0x55ab12d0cd20 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d0df78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55ab12d0ddc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ab12d0de38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55ab12d0e028 <line:410:22>
| `-NonNullAttr 0x55ab12d0e080 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d0e2b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55ab12d0e0c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ab12d0e158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55ab12d0e368 <line:413:22>
| `-NonNullAttr 0x55ab12d0e3c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d0e5f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55ab12d0e408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ab12d0e498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55ab12d0e6a8 <col:37>
| `-NonNullAttr 0x55ab12d0e700 <col:78, col:95> 1 2
|-FunctionDecl 0x55ab12d0e8e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ab12d0e748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ab12d0e7c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55ab12d0e998 <line:419:22>
| `-NonNullAttr 0x55ab12d0e9f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d0eb78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55ab12d0ea38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ab12d0eab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55ab12d0ec28 <line:421:22>
| `-NonNullAttr 0x55ab12d0ec80 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d0fe58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ab12d0ecc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ab12d0ed48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55ab12d0ff08 <line:424:22>
| `-NonNullAttr 0x55ab12d0ff60 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d100e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55ab12d0ffa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ab12d10028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55ab12d10198 <line:427:22>
| `-NonNullAttr 0x55ab12d101f0 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d10398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ab12d10238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ab12d102b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55ab12d10448 <line:430:22>
| `-NonNullAttr 0x55ab12d104a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d10628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55ab12d104e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ab12d10568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55ab12d106d8 <line:432:22>
| `-NonNullAttr 0x55ab12d10730 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d10958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55ab12d10778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ab12d107f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55ab12d10a08 <line:435:22>
| |-NonNullAttr 0x55ab12d10a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55ab12d10a98 <col:100> "" ""
|-FunctionDecl 0x55ab12d10ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55ab12d10ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ab12d10b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55ab12d10d58 <line:438:22>
| |-NonNullAttr 0x55ab12d10db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x55ab12d10df8 <col:97> "" ""
|-FunctionDecl 0x55ab12d10fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55ab12d10e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ab12d10ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55ab12d11098 <line:441:22>
| `-NonNullAttr 0x55ab12d110f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d11270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55ab12d11138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ab12d111b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55ab12d11320 <line:444:22>
| `-NonNullAttr 0x55ab12d11378 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d11668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55ab12d113c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ab12d11448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55ab12d114c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55ab12d11720 <line:448:22>
| `-NonNullAttr 0x55ab12d11778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55ab12d11a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55ab12d117d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ab12d11850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55ab12d118c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55ab12d11ae0 <col:43>
| `-NonNullAttr 0x55ab12d11b38 <col:84, col:98> 1
|-FunctionDecl 0x55ab12d11e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55ab12d11b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ab12d11c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55ab12d11c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55ab12d11ef8 <line:453:22>
| `-NonNullAttr 0x55ab12d11f50 <col:63, col:77> 3
|-FunctionDecl 0x55ab12d12228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55ab12d11f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ab12d12018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55ab12d120a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55ab12d122e0 <line:457:22>
| `-NonNullAttr 0x55ab12d12338 <col:63, col:80> 2 3
|-FunctionDecl 0x55ab12d12528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55ab12d12388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ab12d12408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55ab12d125d8 <line:459:22>
|-FunctionDecl 0x55ab12d129a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55ab12d126a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55ab12d12840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55ab12d12a58 <col:52, col:69> 1 2
|-FunctionDecl 0x55ab12d12c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55ab12d12ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55ab12d12b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55ab12d12e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55ab12d12cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55ab12d12d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55ab12d12f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55ab12d12ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55ab12d130a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55ab12d13148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55ab12d131f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55ab12d132e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55ab12d13350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55ab12d13520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/rfi009_power.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55ab12d13618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55ab12d136d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55ab12d13670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55ab12d131d0 '__pthread_unwind_buf_t'
| |   `-Record 0x55ab12d13148 ''
| `-AlignedAttr 0x55ab12d13728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55ab12d137a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55ab12d13900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55ab12d13968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55ab12d139d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55ab12d13a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55ab12d13c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55ab12d13b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55ab12d13e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55ab12d13cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55ab12d13fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55ab12d13ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55ab12d14088 <line:488:22>
|-RecordDecl 0x55ab12d140e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55ab12d143f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55ab12d14258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55ab12d142d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55ab12d144a8 <col:86>
| `-ReturnsTwiceAttr 0x55ab12d14500 <col:12> Implicit
|-FunctionDecl 0x55ab12d14828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55ab12d145d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55ab12d146e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55ab12d148d8 <line:494:22>
| `-NonNullAttr 0x55ab12d14930 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d14aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ab12d14978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ab12d14b50 <line:496:22>
| `-NonNullAttr 0x55ab12d14ba8 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d14cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ab12d14bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ab12d14d58 <line:498:22>
| `-NonNullAttr 0x55ab12d14db0 <col:52, col:66> 1
|-FunctionDecl 0x55ab12d14ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ab12d14e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ab12d14f90 <line:500:22>
| `-NonNullAttr 0x55ab12d14fe8 <col:52, col:66> 1
|-FunctionDecl 0x55ab12d15228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55ab12d15038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55ab12d150c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55ab12d152d8 <col:36>
| `-NonNullAttr 0x55ab12d15330 <col:66, col:83> 1 2
|-FunctionDecl 0x55ab12d15430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ab12d15378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ab12d154d8 <line:505:22>
| `-NonNullAttr 0x55ab12d15530 <col:52, col:66> 1
|-FunctionDecl 0x55ab12d157c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ab12d155e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55ab12d15660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55ab12d15878 <line:509:22>
| `-NonNullAttr 0x55ab12d158d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d15b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55ab12d15918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55ab12d15998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55ab12d15a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55ab12d15c50 <line:513:22>
| `-NonNullAttr 0x55ab12d15ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55ab12d15e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ab12d15cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ab12d15ee8 <line:515:22>
| `-NonNullAttr 0x55ab12d15f40 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d16128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55ab12d15ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55ab12d161d0 <line:517:22>
| `-NonNullAttr 0x55ab12d16228 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d16330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55ab12d16278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55ab12d163d8 <line:519:22>
| `-NonNullAttr 0x55ab12d16430 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d16658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ab12d16478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55ab12d164f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55ab12d16708 <line:523:22>
| `-NonNullAttr 0x55ab12d16760 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d16968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ab12d167a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ab12d16828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55ab12d16a18 <line:526:22>
| `-NonNullAttr 0x55ab12d16a70 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d16c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ab12d16ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55ab12d16b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55ab12d16cc8 <line:529:22>
| `-NonNullAttr 0x55ab12d16d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d17f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ab12d16d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ab12d17e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55ab12d17fd0 <line:531:22>
| `-NonNullAttr 0x55ab12d18028 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d181d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ab12d18078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55ab12d180f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55ab12d18288 <line:535:22>
| `-NonNullAttr 0x55ab12d182e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d18468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ab12d18328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ab12d183a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55ab12d18518 <line:538:22>
| `-NonNullAttr 0x55ab12d18570 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d18718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ab12d185b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55ab12d18638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55ab12d187c8 <line:542:22>
| `-NonNullAttr 0x55ab12d18820 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d189a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ab12d18868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ab12d188e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55ab12d18a58 <line:545:22>
| `-NonNullAttr 0x55ab12d18ab0 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d18c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55ab12d18af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ab12d18b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55ab12d18d48 <line:548:22>
| `-NonNullAttr 0x55ab12d18da0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d19f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ab12d18de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ab12d19e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55ab12d1a008 <line:551:22>
| `-NonNullAttr 0x55ab12d1a060 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d1a398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55ab12d1a140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55ab12d1a250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55ab12d1a448 <col:29>
| `-NonNullAttr 0x55ab12d1a4a0 <col:70, col:84> 1
|-FunctionDecl 0x55ab12d1a618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ab12d1a4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ab12d1a6c0 <line:556:22>
| `-NonNullAttr 0x55ab12d1a718 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d1a820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ab12d1a768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ab12d1a8c8 <line:558:22>
| `-NonNullAttr 0x55ab12d1a920 <col:52, col:66> 1
|-FunctionDecl 0x55ab12d1aa20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ab12d1a968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ab12d1aac8 <line:560:19>
| `-NonNullAttr 0x55ab12d1ab20 <col:49, col:63> 1
|-FunctionDecl 0x55ab12d1ad58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55ab12d1ab68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55ab12d1abf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55ab12d1ae08 <col:39>
| `-NonNullAttr 0x55ab12d1ae90 <col:69, col:86> 1 2
|-FunctionDecl 0x55ab12d1af90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ab12d1aed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ab12d1b038 <line:565:22>
| `-NonNullAttr 0x55ab12d1b090 <col:52, col:66> 1
|-FunctionDecl 0x55ab12d1b190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ab12d1b0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ab12d1b238 <line:567:22>
| `-NonNullAttr 0x55ab12d1b290 <col:52, col:66> 1
|-FunctionDecl 0x55ab12d1b448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55ab12d1b2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55ab12d1b368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55ab12d1b4f8 <col:39>
| `-NonNullAttr 0x55ab12d1b550 <col:69, col:86> 1 2
|-FunctionDecl 0x55ab12d1b650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ab12d1b598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ab12d1b6f8 <line:572:22>
| `-NonNullAttr 0x55ab12d1b750 <col:52, col:66> 1
|-FunctionDecl 0x55ab12d1b938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55ab12d1b800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55ab12d1b9e0 <line:574:22>
| `-NonNullAttr 0x55ab12d1ba38 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d1bb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55ab12d1ba88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55ab12d1bbe8 <line:576:22>
| `-NonNullAttr 0x55ab12d1bc40 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d1bea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ab12d1bc88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55ab12d1bd08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55ab12d1bf50 <line:580:22>
| `-NonNullAttr 0x55ab12d1bfa8 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d1c1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55ab12d1bff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55ab12d1c078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55ab12d1c268 <line:583:22>
| `-NonNullAttr 0x55ab12d1c2c0 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d1c468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ab12d1c308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55ab12d1c388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55ab12d1c518 <line:587:22>
| `-NonNullAttr 0x55ab12d1c570 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d1c6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55ab12d1c5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55ab12d1c638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55ab12d1c7a8 <col:36>
| `-NonNullAttr 0x55ab12d1c800 <col:77, col:91> 1
|-FunctionDecl 0x55ab12d1cb38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55ab12d1c8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55ab12d1c9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55ab12d1cbe8 <line:592:22>
| `-NonNullAttr 0x55ab12d1cc40 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d1cdb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55ab12d1cc88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55ab12d1ce60 <line:594:22>
| `-NonNullAttr 0x55ab12d1cee0 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d1cfe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55ab12d1cf28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55ab12d1d088 <line:596:22>
| `-NonNullAttr 0x55ab12d1d0e0 <col:52, col:66> 1
|-FunctionDecl 0x55ab12d1d1e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55ab12d1d128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55ab12d1d288 <line:598:22>
| `-NonNullAttr 0x55ab12d1d2e0 <col:52, col:66> 1
|-FunctionDecl 0x55ab12d1d508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55ab12d1d328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55ab12d1d3a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55ab12d1d5b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55ab12d1d8e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55ab12d1d638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55ab12d1d6b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55ab12d1d740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55ab12d1d9a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55ab12d1dbb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55ab12d1da80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55ab12d1dc60 <line:607:22>
| `-NonNullAttr 0x55ab12d1dcb8 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d1ddc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55ab12d1dd08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55ab12d1de68 <line:609:22>
| `-NonNullAttr 0x55ab12d1def0 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d1e118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ab12d1df38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55ab12d1dfb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55ab12d1e1c8 <line:613:22>
| `-NonNullAttr 0x55ab12d1e220 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d1e428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55ab12d1e268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55ab12d1e2e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55ab12d1e4d8 <col:37>
| `-NonNullAttr 0x55ab12d1e530 <col:78, col:92> 1
|-FunctionDecl 0x55ab12d1e748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55ab12d1e578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55ab12d1e620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55ab12d1e7f8 <line:619:22>
| `-NonNullAttr 0x55ab12d1e850 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d1ea18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55ab12d1e898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55ab12d1e910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55ab12d1eac8 <line:622:22>
| `-NonNullAttr 0x55ab12d1eb20 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d1edc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55ab12d1ec00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55ab12d1ec80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55ab12d1ee78 <line:624:22>
| `-NonNullAttr 0x55ab12d1ef00 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d1f078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55ab12d1ef48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55ab12d1f120 <line:626:22>
| `-NonNullAttr 0x55ab12d1f178 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d1f280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55ab12d1f1c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55ab12d1f328 <line:628:22>
| `-NonNullAttr 0x55ab12d1f380 <col:52, col:66> 1
|-FunctionDecl 0x55ab12d1f480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55ab12d1f3c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55ab12d1f528 <line:630:22>
| `-NonNullAttr 0x55ab12d1f580 <col:52, col:66> 1
|-FunctionDecl 0x55ab12d1f680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55ab12d1f5c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55ab12d1f728 <line:632:22>
| `-NonNullAttr 0x55ab12d1f780 <col:52, col:66> 1
|-FunctionDecl 0x55ab12d1fb58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55ab12d1f860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55ab12d1f970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55ab12d1f9f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55ab12d1fc10 <line:636:22>
| `-NonNullAttr 0x55ab12d1fc68 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d1fde8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55ab12d1fcb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55ab12d1fe90 <line:638:22>
| `-NonNullAttr 0x55ab12d1ff10 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d20010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55ab12d1ff58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55ab12d200b8 <line:640:22>
| `-NonNullAttr 0x55ab12d20110 <col:52, col:66> 1
|-FunctionDecl 0x55ab12d202f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55ab12d201c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55ab12d203a0 <line:642:22>
| `-NonNullAttr 0x55ab12d203f8 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d20500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55ab12d20448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55ab12d205a8 <line:644:22>
| `-NonNullAttr 0x55ab12d20600 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d20828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ab12d20648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55ab12d206c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55ab12d208d8 <line:648:22>
| `-NonNullAttr 0x55ab12d20930 <col:63, col:80> 1 2
|-FunctionDecl 0x55ab12d20b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55ab12d20978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55ab12d209f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55ab12d20be8 <line:651:22>
| `-NonNullAttr 0x55ab12d20c40 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d20fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55ab12d20d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55ab12d20e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55ab12d21058 <line:654:22>
| `-NonNullAttr 0x55ab12d210b0 <col:63, col:77> 1
|-FunctionDecl 0x55ab12d21208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55ab12d210f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55ab12d212b0 <col:69>
|-FunctionDecl 0x55ab12d21428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55ab12d21318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55ab12d214d0 <col:72>
|-FunctionDecl 0x55ab12d21708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55ab12d21538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55ab12d215e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55ab12d217b8 <col:44>
|-FunctionDecl 0x55ab12d219d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55ab12d21820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ab12d21898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55ab12d21a88 <line:661:22>
| `-NonNullAttr 0x55ab12d21ae0 <col:63, col:77> 2
|-FunctionDecl 0x55ab12d22f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55ab12d21bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55ab12d21cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55ab12d21de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55ab12d23008 <col:47>
|-FunctionDecl 0x55ab12d23110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55ab12d23078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55ab12d23268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55ab12d231d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55ab12d233c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55ab12d23328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55ab12d23488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55ab12d23548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55ab12d23608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55ab12d236c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55ab12d23740 prev 0x55ab12d236c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55ab12d237a8 <col:24> 'int' 0
|-VarDecl 0x55ab12d237e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55ab12d23860 prev 0x55ab12d237e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55ab12d238c8 <col:27> 'int' 0
|-VarDecl 0x55ab12d238f8 <line:676:1, col:7> col:7 __unbuffered_p0_EAX$flush_delayed '_Bool'
|-VarDecl 0x55ab12d23978 <line:677:1, col:5> col:5 __unbuffered_p0_EAX$mem_tmp 'int'
|-VarDecl 0x55ab12d239f0 <line:678:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55ab12d23a68 <line:679:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55ab12d23ae0 <line:680:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55ab12d23b58 <line:681:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55ab12d23bd0 <line:682:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55ab12d23c48 <line:683:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55ab12d23cc0 <line:684:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55ab12d23d38 <line:685:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55ab12d23db0 <line:686:1, col:7> col:7 used __unbuffered_p0_EAX$read_delayed '_Bool'
|-VarDecl 0x55ab12d23e30 <line:687:1, col:6> col:6 used __unbuffered_p0_EAX$read_delayed_var 'int *'
|-VarDecl 0x55ab12d23f20 <line:688:1, col:5> col:5 __unbuffered_p0_EAX$w_buff0 'int'
|-VarDecl 0x55ab12d23f98 <line:689:1, col:7> col:7 __unbuffered_p0_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55ab12d24018 <line:690:1, col:5> col:5 __unbuffered_p0_EAX$w_buff1 'int'
|-VarDecl 0x55ab12d24090 <line:691:1, col:7> col:7 __unbuffered_p0_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55ab12d24110 <line:692:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55ab12d24190 prev 0x55ab12d24110 <line:693:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55ab12d241f8 <col:27> 'int' 0
|-VarDecl 0x55ab12d24230 <line:694:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55ab12d242b0 prev 0x55ab12d24230 <line:695:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55ab12d24318 <col:27> 'int' 0
|-VarDecl 0x55ab12d24350 <line:696:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55ab12d243d0 prev 0x55ab12d24350 <line:697:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55ab12d24438 <col:27> 'int' 0
|-VarDecl 0x55ab12d24468 <line:698:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55ab12d244e0 <line:699:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55ab12d24560 <line:700:1, col:5> col:5 used x 'int'
|-VarDecl 0x55ab12d245e0 prev 0x55ab12d24560 <line:701:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55ab12d24648 <col:9> 'int' 0
|-VarDecl 0x55ab12d24678 <line:702:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55ab12d246f8 <line:703:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55ab12d24770 <line:704:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55ab12d247e8 <line:705:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55ab12d24860 <line:706:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55ab12d248d8 <line:707:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55ab12d24950 <line:708:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55ab12d249c8 <line:709:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55ab12d24a40 <line:710:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55ab12d24ab8 <line:711:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55ab12d24b30 <line:712:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55ab12d24bb0 <line:713:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55ab12d24c30 <line:714:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55ab12d24ca8 <line:715:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55ab12d24d28 <line:716:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55ab12d24da0 <line:717:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55ab12d24e20 <line:718:1, col:5> col:5 used y 'int'
|-VarDecl 0x55ab12d24ea0 prev 0x55ab12d24e20 <line:719:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55ab12d24f30 <col:9> 'int' 0
|-VarDecl 0x55ab12d24f60 <line:720:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55ab12d24fd8 <line:721:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55ab12d25050 <line:722:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55ab12d25168 prev 0x55ab12d23110 <line:723:1, line:753:1> line:723:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55ab12d250d0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55ab12d29ac8 <line:724:1, line:753:1>
|   |-CallExpr 0x55ab12d25278 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ab12d25260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d25210 <col:3> 'void ()' Function 0x55ab12cca4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ab12d25348 <line:726:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d25298 <col:3> '_Bool' lvalue Var 0x55ab12d24f60 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55ab12d25328 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55ab12d25310 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55ab12d252b8 <col:19> '_Bool (void)' Function 0x55ab12cc9c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55ab12d253e0 <line:727:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d25368 <col:3> '_Bool' lvalue Var 0x55ab12d25050 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55ab12d253c0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55ab12d253a8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55ab12d25388 <col:19> '_Bool (void)' Function 0x55ab12cc9c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55ab12d25458 <line:728:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d25400 <col:3> '_Bool' lvalue Var 0x55ab12d24678 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55ab12d25440 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ab12d25420 <col:21> '_Bool' lvalue Var 0x55ab12d25050 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55ab12d254d0 <line:729:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55ab12d25478 <col:3> 'int' lvalue Var 0x55ab12d246f8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55ab12d254b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ab12d25498 <col:15> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   |-BinaryOperator 0x55ab12d25568 <line:730:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d254f0 <col:3> '_Bool' lvalue Var 0x55ab12d24fd8 'weak$$choice1' '_Bool'
|   | `-CallExpr 0x55ab12d25548 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55ab12d25530 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55ab12d25510 <col:19> '_Bool (void)' Function 0x55ab12cc9c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55ab12d25fa8 <line:731:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x55ab12d25588 <col:3> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   | `-ConditionalOperator 0x55ab12d25f78 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x55ab12d255e0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x55ab12d255c8 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ab12d255a8 <col:8> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x55ab12d25f60 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ab12d255f8 <col:25> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   |   `-ParenExpr 0x55ab12d25f40 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x55ab12d25ef8 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x55ab12d256b8 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55ab12d25670 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55ab12d25658 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55ab12d25618 <col:30> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55ab12d256a0 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55ab12d25688 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55ab12d25638 <col:48> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55ab12d25ee0 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ab12d256d8 <col:65> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55ab12d25ec0 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x55ab12d25e90 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x55ab12d25878 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x55ab12d25808 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x55ab12d25798 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x55ab12d25780 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x55ab12d25768 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x55ab12d256f8 <col:78> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x55ab12d25750 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x55ab12d25738 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x55ab12d25718 <col:97> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |           | | `-ImplicitCastExpr 0x55ab12d257f0 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x55ab12d257d8 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x55ab12d257b8 <col:115> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x55ab12d25860 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x55ab12d25848 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55ab12d25828 <col:134> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |           |-ParenExpr 0x55ab12d25a60 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x55ab12d25a30 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x55ab12d25a00 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x55ab12d259e8 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x55ab12d25898 <col:152> '_Bool' lvalue Var 0x55ab12d24f60 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x55ab12d25a18 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x55ab12d258b8 <col:168> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   |           |   `-ParenExpr 0x55ab12d259c8 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x55ab12d25998 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x55ab12d25950 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x55ab12d25938 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x55ab12d258d8 <col:173> '_Bool' lvalue Var 0x55ab12d24fd8 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x55ab12d25968 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x55ab12d258f8 <col:189> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x55ab12d25980 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x55ab12d25918 <col:201> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x55ab12d25e70 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x55ab12d25e40 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x55ab12d25c00 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x55ab12d25b90 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x55ab12d25b20 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55ab12d25ad8 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55ab12d25ac0 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55ab12d25a80 <col:216> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x55ab12d25b08 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x55ab12d25af0 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55ab12d25aa0 <col:234> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55ab12d25b78 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55ab12d25b60 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55ab12d25b40 <col:252> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55ab12d25be8 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55ab12d25bd0 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55ab12d25bb0 <col:271> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |               |-ParenExpr 0x55ab12d25d10 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x55ab12d25ce0 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x55ab12d25c98 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x55ab12d25c80 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x55ab12d25c20 <col:289> '_Bool' lvalue Var 0x55ab12d24f60 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x55ab12d25cb0 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x55ab12d25c40 <col:305> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x55ab12d25cc8 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55ab12d25c60 <col:317> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x55ab12d25e20 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x55ab12d25df0 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x55ab12d25da8 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x55ab12d25d90 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x55ab12d25d30 <col:331> '_Bool' lvalue Var 0x55ab12d24f60 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x55ab12d25dc0 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55ab12d25d50 <col:347> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55ab12d25dd8 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55ab12d25d70 <col:359> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   |-BinaryOperator 0x55ab12d26748 <line:732:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55ab12d25fc8 <col:3> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55ab12d26718 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55ab12d266e8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ab12d266d0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ab12d25fe8 <col:15> '_Bool' lvalue Var 0x55ab12d25050 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55ab12d26700 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ab12d26008 <col:31> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55ab12d266b0 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55ab12d26680 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55ab12d26060 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55ab12d26048 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55ab12d26028 <col:45> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55ab12d26668 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ab12d26078 <col:62> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55ab12d26648 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55ab12d26618 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55ab12d26138 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55ab12d260f0 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55ab12d260d8 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55ab12d26098 <col:75> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55ab12d26120 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55ab12d26108 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55ab12d260b8 <col:93> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55ab12d26600 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55ab12d26158 <col:110> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   |           `-ParenExpr 0x55ab12d265e0 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55ab12d265b0 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55ab12d262f8 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55ab12d26288 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55ab12d26218 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55ab12d26200 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55ab12d261e8 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55ab12d26178 <col:123> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55ab12d261d0 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55ab12d261b8 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55ab12d26198 <col:142> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55ab12d26270 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55ab12d26258 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55ab12d26238 <col:160> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55ab12d262e0 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55ab12d262c8 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55ab12d262a8 <col:179> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |               |-ImplicitCastExpr 0x55ab12d26598 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55ab12d26318 <col:196> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x55ab12d26578 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55ab12d26548 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55ab12d264b8 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55ab12d26448 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55ab12d263d8 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55ab12d26390 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55ab12d26378 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55ab12d26338 <col:209> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55ab12d263c0 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55ab12d263a8 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55ab12d26358 <col:227> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55ab12d26430 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55ab12d26418 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55ab12d263f8 <col:245> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55ab12d264a0 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55ab12d26488 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55ab12d26468 <col:264> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |                   |-ImplicitCastExpr 0x55ab12d26518 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55ab12d264d8 <col:281> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55ab12d26530 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55ab12d264f8 <col:293> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55ab12d26ee8 <line:733:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55ab12d26768 <col:3> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55ab12d26eb8 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55ab12d26e88 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ab12d26e70 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ab12d26788 <col:15> '_Bool' lvalue Var 0x55ab12d25050 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55ab12d26ea0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ab12d267a8 <col:31> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55ab12d26e50 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55ab12d26e20 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55ab12d26800 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55ab12d267e8 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55ab12d267c8 <col:45> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55ab12d26e08 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ab12d26818 <col:62> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55ab12d26de8 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55ab12d26db8 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55ab12d268d8 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55ab12d26890 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55ab12d26878 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55ab12d26838 <col:75> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55ab12d268c0 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55ab12d268a8 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55ab12d26858 <col:93> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55ab12d26da0 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55ab12d268f8 <col:110> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x55ab12d26d80 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55ab12d26d50 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55ab12d26a98 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55ab12d26a28 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55ab12d269b8 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55ab12d269a0 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55ab12d26988 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55ab12d26918 <col:123> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55ab12d26970 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55ab12d26958 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55ab12d26938 <col:142> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55ab12d26a10 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55ab12d269f8 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55ab12d269d8 <col:160> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55ab12d26a80 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55ab12d26a68 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55ab12d26a48 <col:179> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |               |-ImplicitCastExpr 0x55ab12d26d38 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55ab12d26ab8 <col:196> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
|   |               `-ParenExpr 0x55ab12d26d18 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55ab12d26ce8 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55ab12d26c58 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55ab12d26be8 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55ab12d26b78 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55ab12d26b30 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55ab12d26b18 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55ab12d26ad8 <col:209> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55ab12d26b60 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55ab12d26b48 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55ab12d26af8 <col:227> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55ab12d26bd0 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55ab12d26bb8 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55ab12d26b98 <col:245> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55ab12d26c40 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55ab12d26c28 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55ab12d26c08 <col:264> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |                   |-ImplicitCastExpr 0x55ab12d26cb8 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55ab12d26c78 <col:281> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x55ab12d26cd0 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55ab12d26c98 <col:293> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55ab12d277e8 <line:734:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d26f08 <col:3> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ab12d277d0 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ab12d277a0 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x55ab12d27758 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ab12d27740 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ab12d26f50 <col:20> '_Bool' lvalue Var 0x55ab12d25050 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ab12d27788 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ab12d27770 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ab12d26f70 <col:36> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55ab12d27720 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x55ab12d276f0 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x55ab12d26fc8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55ab12d26fb0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ab12d26f90 <col:55> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55ab12d276d8 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ab12d276c0 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ab12d26fe0 <col:72> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55ab12d276a0 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x55ab12d27670 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x55ab12d270a0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ab12d27058 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ab12d27040 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ab12d27000 <col:90> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ab12d27088 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ab12d27070 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ab12d27020 <col:108> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55ab12d27658 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ab12d270f0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ab12d270c0 <col:132> 'int' 0
|   |             `-ParenExpr 0x55ab12d27638 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x55ab12d27608 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x55ab12d27298 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55ab12d27228 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55ab12d271b8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55ab12d271a0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55ab12d27188 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55ab12d27118 <col:137> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55ab12d27170 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55ab12d27158 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55ab12d27138 <col:156> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55ab12d27210 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55ab12d271f8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55ab12d271d8 <col:174> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55ab12d27280 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55ab12d27268 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55ab12d27248 <col:193> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |                 |-BinaryOperator 0x55ab12d27358 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x55ab12d27340 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x55ab12d27328 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x55ab12d272b8 <col:210> '_Bool' lvalue Var 0x55ab12d24f60 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x55ab12d27310 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55ab12d272f8 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55ab12d272d8 <col:228> '_Bool' lvalue Var 0x55ab12d24fd8 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x55ab12d275e8 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x55ab12d275b8 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x55ab12d274f8 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x55ab12d27488 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55ab12d27418 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55ab12d273d0 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55ab12d273b8 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55ab12d27378 <col:245> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55ab12d27400 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55ab12d273e8 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55ab12d27398 <col:263> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55ab12d27470 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55ab12d27458 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55ab12d27438 <col:281> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55ab12d274e0 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55ab12d274c8 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55ab12d274a8 <col:300> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55ab12d27570 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x55ab12d27558 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x55ab12d27518 <col:317> '_Bool' lvalue Var 0x55ab12d24f60 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x55ab12d275a0 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x55ab12d27588 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x55ab12d27538 <col:333> '_Bool' lvalue Var 0x55ab12d24f60 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x55ab12d280a8 <line:735:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d27808 <col:3> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ab12d28090 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ab12d28060 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x55ab12d28018 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ab12d28000 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ab12d27828 <col:20> '_Bool' lvalue Var 0x55ab12d25050 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ab12d28048 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ab12d28030 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ab12d27848 <col:36> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55ab12d27fe0 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x55ab12d27fb0 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x55ab12d278a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55ab12d27888 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ab12d27868 <col:55> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55ab12d27f98 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ab12d27f80 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ab12d278b8 <col:72> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55ab12d27f60 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x55ab12d27f18 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x55ab12d27978 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ab12d27930 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ab12d27918 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ab12d278d8 <col:90> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ab12d27960 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ab12d27948 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ab12d278f8 <col:108> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55ab12d27f00 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ab12d279c8 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ab12d27998 <col:132> 'int' 0
|   |             `-ParenExpr 0x55ab12d27ee0 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x55ab12d27eb0 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x55ab12d27b70 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55ab12d27b00 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55ab12d27a90 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55ab12d27a78 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55ab12d27a60 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55ab12d279f0 <col:137> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55ab12d27a48 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55ab12d27a30 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55ab12d27a10 <col:156> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55ab12d27ae8 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55ab12d27ad0 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55ab12d27ab0 <col:174> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55ab12d27b58 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55ab12d27b40 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55ab12d27b20 <col:193> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |                 |-ImplicitCastExpr 0x55ab12d27e98 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55ab12d27e80 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55ab12d27b90 <col:210> '_Bool' lvalue Var 0x55ab12d24f60 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x55ab12d27e60 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x55ab12d27e30 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x55ab12d27d30 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x55ab12d27cc0 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55ab12d27c50 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55ab12d27c08 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55ab12d27bf0 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55ab12d27bb0 <col:227> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55ab12d27c38 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55ab12d27c20 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55ab12d27bd0 <col:245> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55ab12d27ca8 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55ab12d27c90 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55ab12d27c70 <col:263> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55ab12d27d18 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55ab12d27d00 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55ab12d27ce0 <col:282> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55ab12d27e00 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55ab12d27d80 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55ab12d27d50 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x55ab12d27e18 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55ab12d27dd8 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55ab12d27da8 <col:317> 'int' 0
|   |-BinaryOperator 0x55ab12d28950 <line:736:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d280c8 <col:3> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55ab12d28938 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ab12d28908 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x55ab12d288c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ab12d288a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ab12d280e8 <col:20> '_Bool' lvalue Var 0x55ab12d25050 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ab12d288f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ab12d288d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ab12d28108 <col:36> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55ab12d28888 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x55ab12d28858 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x55ab12d28160 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55ab12d28148 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ab12d28128 <col:55> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55ab12d28840 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ab12d28828 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ab12d28178 <col:72> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55ab12d28808 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x55ab12d287d8 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x55ab12d28238 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ab12d281f0 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ab12d281d8 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ab12d28198 <col:90> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ab12d28220 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ab12d28208 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ab12d281b8 <col:108> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55ab12d287c0 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ab12d28288 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ab12d28258 <col:132> 'int' 0
|   |             `-ParenExpr 0x55ab12d287a0 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x55ab12d28770 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x55ab12d28430 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55ab12d283c0 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55ab12d28350 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55ab12d28338 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55ab12d28320 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55ab12d282b0 <col:137> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55ab12d28308 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55ab12d282f0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55ab12d282d0 <col:156> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55ab12d283a8 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55ab12d28390 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55ab12d28370 <col:174> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55ab12d28418 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55ab12d28400 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55ab12d283e0 <col:193> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |                 |-ImplicitCastExpr 0x55ab12d28758 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55ab12d28740 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55ab12d28450 <col:210> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |                 `-ParenExpr 0x55ab12d28720 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x55ab12d286f0 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x55ab12d285f0 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x55ab12d28580 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55ab12d28510 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55ab12d284c8 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55ab12d284b0 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55ab12d28470 <col:228> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55ab12d284f8 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55ab12d284e0 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55ab12d28490 <col:246> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55ab12d28568 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55ab12d28550 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55ab12d28530 <col:264> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55ab12d285d8 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55ab12d285c0 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55ab12d285a0 <col:283> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55ab12d286c0 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55ab12d28640 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55ab12d28610 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x55ab12d286d8 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55ab12d28698 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55ab12d28668 <col:318> 'int' 0
|   |-BinaryOperator 0x55ab12d29328 <line:737:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d28970 <col:3> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55ab12d29310 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ab12d292e0 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x55ab12d29298 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ab12d29280 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ab12d28990 <col:20> '_Bool' lvalue Var 0x55ab12d25050 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ab12d292c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ab12d292b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ab12d289b0 <col:36> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55ab12d29260 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x55ab12d29230 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x55ab12d28a08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55ab12d289f0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ab12d289d0 <col:55> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55ab12d29218 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ab12d29200 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ab12d28a20 <col:72> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55ab12d291e0 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x55ab12d291b0 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x55ab12d28ae0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ab12d28a98 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ab12d28a80 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ab12d28a40 <col:90> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ab12d28ac8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ab12d28ab0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ab12d28a60 <col:108> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55ab12d29198 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ab12d28b30 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ab12d28b00 <col:132> 'int' 0
|   |             `-ParenExpr 0x55ab12d29178 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x55ab12d29148 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x55ab12d28cd8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55ab12d28c68 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55ab12d28bf8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55ab12d28be0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55ab12d28bc8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55ab12d28b58 <col:137> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55ab12d28bb0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55ab12d28b98 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55ab12d28b78 <col:156> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55ab12d28c50 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55ab12d28c38 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55ab12d28c18 <col:174> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55ab12d28cc0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55ab12d28ca8 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55ab12d28c88 <col:193> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |                 |-ParenExpr 0x55ab12d28e38 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x55ab12d28e08 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x55ab12d28da8 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55ab12d28d90 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55ab12d28cf8 <col:211> '_Bool' lvalue Var 0x55ab12d24f60 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x55ab12d28dd8 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55ab12d28dc0 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55ab12d28d18 <col:227> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x55ab12d28df0 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x55ab12d28d68 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x55ab12d28d38 <col:251> 'int' 0
|   |                 `-ParenExpr 0x55ab12d29128 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x55ab12d290f8 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x55ab12d28ff8 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x55ab12d28f88 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55ab12d28ef8 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55ab12d28eb0 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55ab12d28e98 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55ab12d28e58 <col:257> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55ab12d28ee0 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55ab12d28ec8 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55ab12d28e78 <col:275> '_Bool' lvalue Var 0x55ab12d249c8 'x$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55ab12d28f70 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55ab12d28f38 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55ab12d28f18 <col:293> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55ab12d28fe0 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55ab12d28fc8 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55ab12d28fa8 <col:312> '_Bool' lvalue Var 0x55ab12d247e8 'x$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55ab12d290c8 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55ab12d29048 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55ab12d29018 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x55ab12d290e0 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55ab12d290a0 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55ab12d29070 <col:347> 'int' 0
|   |-BinaryOperator 0x55ab12d293c0 <line:738:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d29348 <col:3> '_Bool' lvalue Var 0x55ab12d23db0 '__unbuffered_p0_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55ab12d29398 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55ab12d29368 <col:45> 'int' 1
|   |-BinaryOperator 0x55ab12d29438 <line:739:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55ab12d293e0 <col:3> 'int *' lvalue Var 0x55ab12d23e30 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55ab12d29420 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55ab12d29400 <col:43> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   |-BinaryOperator 0x55ab12d294b0 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55ab12d29458 <col:3> 'int' lvalue Var 0x55ab12d23860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55ab12d29498 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ab12d29478 <col:25> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   |-BinaryOperator 0x55ab12d295e0 <line:741:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55ab12d294d0 <col:3> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   | `-ConditionalOperator 0x55ab12d295b0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55ab12d29568 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ab12d29550 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ab12d294f0 <col:7> '_Bool' lvalue Var 0x55ab12d24678 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55ab12d29580 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ab12d29510 <col:25> 'int' lvalue Var 0x55ab12d246f8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55ab12d29598 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55ab12d29530 <col:37> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   |-BinaryOperator 0x55ab12d29678 <line:742:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d29600 <col:3> '_Bool' lvalue Var 0x55ab12d24678 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55ab12d29650 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55ab12d29620 <col:28> 'int' 0
|   |-CallExpr 0x55ab12d296d0 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ab12d296b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d29698 <col:3> 'void ()' Function 0x55ab12cca570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ab12d29728 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ab12d29710 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d296f0 <col:3> 'void ()' Function 0x55ab12cca4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ab12d297a0 <line:745:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55ab12d29748 <col:3> 'int' lvalue Var 0x55ab12d24190 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55ab12d29788 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ab12d29768 <col:25> 'int' lvalue Var 0x55ab12d24ea0 'y' 'int'
|   |-CallExpr 0x55ab12d297f8 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ab12d297e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d297c0 <col:3> 'void ()' Function 0x55ab12cca570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ab12d29850 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ab12d29838 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d29818 <col:3> 'void ()' Function 0x55ab12cca4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55ab12d298a8 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ab12d29890 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d29870 <col:3> 'void ()' Function 0x55ab12cca570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ab12d29900 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ab12d298e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d298c8 <col:3> 'void ()' Function 0x55ab12cca4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ab12d299b8 <line:750:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55ab12d29920 <col:3> 'int' lvalue Var 0x55ab12d23740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55ab12d29998 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55ab12d29980 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ab12d29940 <col:22> 'int' lvalue Var 0x55ab12d23740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55ab12d29960 <col:41> 'int' 1
|   |-CallExpr 0x55ab12d29a10 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ab12d299f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d299d8 <col:3> 'void ()' Function 0x55ab12cca570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55ab12d29ab8 <line:752:3, col:36>
|     `-CallExpr 0x55ab12d29a98 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55ab12d29a80 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55ab12d29a30 <col:10> 'void *(void)' Function 0x55ab12cc9fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55ab12d29c68 prev 0x55ab12d23268 <line:754:1, line:784:1> line:754:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55ab12d29bd0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55ab12d2cc60 <line:755:1, line:784:1>
|   |-CallExpr 0x55ab12d29d48 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ab12d29d30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d29d10 <col:3> 'void ()' Function 0x55ab12cca4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ab12d29da8 <line:757:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55ab12d29d68 <col:3> 'int' lvalue Var 0x55ab12d24ea0 'y' 'int'
|   | `-IntegerLiteral 0x55ab12d29d88 <col:7> 'int' 1
|   |-CallExpr 0x55ab12d29e00 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ab12d29de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d29dc8 <col:3> 'void ()' Function 0x55ab12cca570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ab12d29e58 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ab12d29e40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d29e20 <col:3> 'void ()' Function 0x55ab12cca4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ab12d29ed0 <line:760:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55ab12d29e78 <col:3> 'int' lvalue Var 0x55ab12d242b0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55ab12d29eb8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ab12d29e98 <col:25> 'int' lvalue Var 0x55ab12d24ea0 'y' 'int'
|   |-CallExpr 0x55ab12d29f28 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ab12d29f10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d29ef0 <col:3> 'void ()' Function 0x55ab12cca570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ab12d29f98 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ab12d29f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d29f48 <col:3> 'void ()' Function 0x55ab12cca4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ab12d2a030 <line:763:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d29fb8 <col:3> '_Bool' lvalue Var 0x55ab12d24f60 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55ab12d2a010 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55ab12d29ff8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55ab12d29fd8 <col:19> '_Bool (void)' Function 0x55ab12cc9c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55ab12d2a0c8 <line:764:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d2a050 <col:3> '_Bool' lvalue Var 0x55ab12d25050 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55ab12d2a0a8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55ab12d2a090 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55ab12d2a070 <col:19> '_Bool (void)' Function 0x55ab12cc9c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55ab12d2a140 <line:765:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d2a0e8 <col:3> '_Bool' lvalue Var 0x55ab12d24678 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55ab12d2a128 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ab12d2a108 <col:21> '_Bool' lvalue Var 0x55ab12d25050 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55ab12d2a1b8 <line:766:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55ab12d2a160 <col:3> 'int' lvalue Var 0x55ab12d246f8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55ab12d2a1a0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ab12d2a180 <col:15> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   |-BinaryOperator 0x55ab12d2a5f0 <line:767:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55ab12d2a1d8 <col:3> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   | `-ConditionalOperator 0x55ab12d2a5c0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55ab12d2a3e8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55ab12d2a308 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55ab12d2a230 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55ab12d2a218 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55ab12d2a1f8 <col:8> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55ab12d2a2e8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55ab12d2a280 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55ab12d2a268 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55ab12d2a248 <col:27> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55ab12d2a2d0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55ab12d2a2b8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55ab12d2a298 <col:46> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55ab12d2a3c8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55ab12d2a360 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55ab12d2a348 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55ab12d2a328 <col:65> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55ab12d2a3b0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55ab12d2a398 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55ab12d2a378 <col:84> '_Bool' lvalue Var 0x55ab12d24a40 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55ab12d2a5a8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ab12d2a408 <col:101> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   |   `-ParenExpr 0x55ab12d2a588 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55ab12d2a558 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55ab12d2a4c8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55ab12d2a480 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55ab12d2a468 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55ab12d2a428 <col:106> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55ab12d2a4b0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55ab12d2a498 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55ab12d2a448 <col:124> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55ab12d2a528 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ab12d2a4e8 <col:141> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55ab12d2a540 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ab12d2a508 <col:153> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55ab12d2ab00 <line:768:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55ab12d2a610 <col:3> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55ab12d2aad0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55ab12d2aaa0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ab12d2aa88 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ab12d2a630 <col:15> '_Bool' lvalue Var 0x55ab12d25050 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55ab12d2aab8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ab12d2a650 <col:31> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55ab12d2aa68 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55ab12d2aa38 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55ab12d2a860 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55ab12d2a780 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55ab12d2a6a8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55ab12d2a690 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55ab12d2a670 <col:45> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55ab12d2a760 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55ab12d2a6f8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55ab12d2a6e0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55ab12d2a6c0 <col:64> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55ab12d2a748 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55ab12d2a730 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55ab12d2a710 <col:83> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55ab12d2a840 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55ab12d2a7d8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55ab12d2a7c0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55ab12d2a7a0 <col:102> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55ab12d2a828 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55ab12d2a810 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55ab12d2a7f0 <col:121> '_Bool' lvalue Var 0x55ab12d24a40 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55ab12d2aa20 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ab12d2a880 <col:138> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55ab12d2aa00 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55ab12d2a9d0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55ab12d2a940 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55ab12d2a8f8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55ab12d2a8e0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55ab12d2a8a0 <col:151> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55ab12d2a928 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55ab12d2a910 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55ab12d2a8c0 <col:169> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55ab12d2a9a0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55ab12d2a960 <col:186> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55ab12d2a9b8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55ab12d2a980 <col:198> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55ab12d2b028 <line:769:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55ab12d2ab20 <col:3> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55ab12d2aff8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55ab12d2afc8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ab12d2afb0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ab12d2ab40 <col:15> '_Bool' lvalue Var 0x55ab12d25050 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55ab12d2afe0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ab12d2ab60 <col:31> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55ab12d2af90 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55ab12d2af48 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55ab12d2ad70 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55ab12d2ac90 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55ab12d2abb8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55ab12d2aba0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55ab12d2ab80 <col:45> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55ab12d2ac70 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55ab12d2ac08 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55ab12d2abf0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55ab12d2abd0 <col:64> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55ab12d2ac58 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55ab12d2ac40 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55ab12d2ac20 <col:83> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55ab12d2ad50 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55ab12d2ace8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55ab12d2acd0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55ab12d2acb0 <col:102> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55ab12d2ad38 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55ab12d2ad20 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55ab12d2ad00 <col:121> '_Bool' lvalue Var 0x55ab12d24a40 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55ab12d2af30 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ab12d2ad90 <col:138> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55ab12d2af10 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55ab12d2aee0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55ab12d2ae50 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55ab12d2ae08 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55ab12d2adf0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55ab12d2adb0 <col:151> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55ab12d2ae38 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55ab12d2ae20 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55ab12d2add0 <col:169> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55ab12d2aeb0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55ab12d2ae70 <col:186> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55ab12d2aec8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55ab12d2ae90 <col:198> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55ab12d2b5d0 <line:770:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d2b048 <col:3> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ab12d2b5b8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ab12d2b588 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55ab12d2b540 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ab12d2b528 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ab12d2b068 <col:20> '_Bool' lvalue Var 0x55ab12d25050 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ab12d2b570 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ab12d2b558 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ab12d2b088 <col:36> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55ab12d2b508 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55ab12d2b4d8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55ab12d2b298 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55ab12d2b1b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55ab12d2b0e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55ab12d2b0c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55ab12d2b0a8 <col:55> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55ab12d2b198 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55ab12d2b130 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55ab12d2b118 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55ab12d2b0f8 <col:74> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55ab12d2b180 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55ab12d2b168 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55ab12d2b148 <col:93> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55ab12d2b278 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55ab12d2b210 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55ab12d2b1f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55ab12d2b1d8 <col:112> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55ab12d2b260 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55ab12d2b248 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55ab12d2b228 <col:131> '_Bool' lvalue Var 0x55ab12d24a40 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55ab12d2b4c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ab12d2b4a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ab12d2b2b8 <col:148> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55ab12d2b488 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55ab12d2b458 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55ab12d2b378 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ab12d2b330 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ab12d2b318 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ab12d2b2d8 <col:166> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ab12d2b360 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ab12d2b348 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ab12d2b2f8 <col:184> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55ab12d2b410 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ab12d2b3c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ab12d2b398 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55ab12d2b440 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55ab12d2b428 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55ab12d2b3f0 <col:212> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ab12d2bb98 <line:771:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d2b5f0 <col:3> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ab12d2bb80 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ab12d2bb50 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55ab12d2bb08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ab12d2baf0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ab12d2b610 <col:20> '_Bool' lvalue Var 0x55ab12d25050 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ab12d2bb38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ab12d2bb20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ab12d2b630 <col:36> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55ab12d2bad0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55ab12d2baa0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55ab12d2b840 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55ab12d2b760 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55ab12d2b688 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55ab12d2b670 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55ab12d2b650 <col:55> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55ab12d2b740 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55ab12d2b6d8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55ab12d2b6c0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55ab12d2b6a0 <col:74> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55ab12d2b728 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55ab12d2b710 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55ab12d2b6f0 <col:93> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55ab12d2b820 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55ab12d2b7b8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55ab12d2b7a0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55ab12d2b780 <col:112> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55ab12d2b808 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55ab12d2b7f0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55ab12d2b7d0 <col:131> '_Bool' lvalue Var 0x55ab12d24a40 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55ab12d2ba88 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ab12d2ba70 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ab12d2b860 <col:148> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55ab12d2ba50 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55ab12d2ba20 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55ab12d2b920 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ab12d2b8d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ab12d2b8c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ab12d2b880 <col:166> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ab12d2b908 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ab12d2b8f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ab12d2b8a0 <col:184> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55ab12d2b9f0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ab12d2b970 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ab12d2b940 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55ab12d2ba08 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55ab12d2b9c8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55ab12d2b998 <col:219> 'int' 0
|   |-BinaryOperator 0x55ab12d2c160 <line:772:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d2bbb8 <col:3> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55ab12d2c148 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ab12d2c118 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55ab12d2c0d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ab12d2c0b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ab12d2bbd8 <col:20> '_Bool' lvalue Var 0x55ab12d25050 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ab12d2c100 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ab12d2c0e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ab12d2bbf8 <col:36> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55ab12d2c098 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55ab12d2c068 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55ab12d2be08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55ab12d2bd28 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55ab12d2bc50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55ab12d2bc38 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55ab12d2bc18 <col:55> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55ab12d2bd08 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55ab12d2bca0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55ab12d2bc88 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55ab12d2bc68 <col:74> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55ab12d2bcf0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55ab12d2bcd8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55ab12d2bcb8 <col:93> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55ab12d2bde8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55ab12d2bd80 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55ab12d2bd68 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55ab12d2bd48 <col:112> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55ab12d2bdd0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55ab12d2bdb8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55ab12d2bd98 <col:131> '_Bool' lvalue Var 0x55ab12d24a40 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55ab12d2c050 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ab12d2c038 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ab12d2be28 <col:148> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55ab12d2c018 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55ab12d2bfe8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55ab12d2bee8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ab12d2bea0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ab12d2be88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ab12d2be48 <col:166> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ab12d2bed0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ab12d2beb8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ab12d2be68 <col:184> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55ab12d2bfa0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ab12d2bf38 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ab12d2bf08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55ab12d2bfd0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55ab12d2bfb8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55ab12d2bf60 <col:212> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55ab12d2c728 <line:773:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d2c180 <col:3> '_Bool' lvalue Var 0x55ab12d24a40 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55ab12d2c710 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ab12d2c6e0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55ab12d2c698 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ab12d2c680 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ab12d2c1a0 <col:20> '_Bool' lvalue Var 0x55ab12d25050 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ab12d2c6c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ab12d2c6b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ab12d2c1c0 <col:36> '_Bool' lvalue Var 0x55ab12d24a40 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55ab12d2c660 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55ab12d2c630 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55ab12d2c3d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55ab12d2c2f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55ab12d2c218 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55ab12d2c200 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55ab12d2c1e0 <col:55> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55ab12d2c2d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55ab12d2c268 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55ab12d2c250 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55ab12d2c230 <col:74> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55ab12d2c2b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55ab12d2c2a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55ab12d2c280 <col:93> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55ab12d2c3b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55ab12d2c348 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55ab12d2c330 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55ab12d2c310 <col:112> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55ab12d2c398 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55ab12d2c380 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55ab12d2c360 <col:131> '_Bool' lvalue Var 0x55ab12d24a40 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55ab12d2c618 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ab12d2c600 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ab12d2c3f0 <col:148> '_Bool' lvalue Var 0x55ab12d24a40 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55ab12d2c5e0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55ab12d2c5b0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55ab12d2c4b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ab12d2c468 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ab12d2c450 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ab12d2c410 <col:166> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ab12d2c498 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ab12d2c480 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ab12d2c430 <col:184> '_Bool' lvalue Var 0x55ab12d24860 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55ab12d2c580 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ab12d2c500 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ab12d2c4d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55ab12d2c598 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55ab12d2c558 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55ab12d2c528 <col:219> 'int' 0
|   |-BinaryOperator 0x55ab12d2c7a0 <line:774:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55ab12d2c748 <col:3> 'int' lvalue Var 0x55ab12d243d0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55ab12d2c788 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ab12d2c768 <col:25> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   |-BinaryOperator 0x55ab12d2c8d0 <line:775:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55ab12d2c7c0 <col:3> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   | `-ConditionalOperator 0x55ab12d2c8a0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55ab12d2c858 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ab12d2c840 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ab12d2c7e0 <col:7> '_Bool' lvalue Var 0x55ab12d24678 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55ab12d2c870 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ab12d2c800 <col:25> 'int' lvalue Var 0x55ab12d246f8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55ab12d2c888 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55ab12d2c820 <col:37> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   |-BinaryOperator 0x55ab12d2c968 <line:776:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d2c8f0 <col:3> '_Bool' lvalue Var 0x55ab12d24678 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55ab12d2c940 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55ab12d2c910 <col:28> 'int' 0
|   |-CallExpr 0x55ab12d2c9c0 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ab12d2c9a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d2c988 <col:3> 'void ()' Function 0x55ab12cca570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ab12d2ca18 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ab12d2ca00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d2c9e0 <col:3> 'void ()' Function 0x55ab12cca4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55ab12d2ca70 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ab12d2ca58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d2ca38 <col:3> 'void ()' Function 0x55ab12cca570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ab12d2cac8 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ab12d2cab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d2ca90 <col:3> 'void ()' Function 0x55ab12cca4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ab12d2cb80 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55ab12d2cae8 <col:3> 'int' lvalue Var 0x55ab12d23740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55ab12d2cb60 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55ab12d2cb48 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ab12d2cb08 <col:22> 'int' lvalue Var 0x55ab12d23740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55ab12d2cb28 <col:41> 'int' 1
|   |-CallExpr 0x55ab12d2cbd8 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ab12d2cbc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d2cba0 <col:3> 'void ()' Function 0x55ab12cca570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55ab12d2cc50 <line:783:3, col:36>
|     `-CallExpr 0x55ab12d2cc30 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55ab12d2cc18 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55ab12d2cbf8 <col:10> 'void *(void)' Function 0x55ab12cc9fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55ab12d2ce00 prev 0x55ab12d233c0 <line:785:1, line:801:1> line:785:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55ab12d2cd68 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55ab12d2df18 <line:786:1, line:801:1>
|   |-CallExpr 0x55ab12d2cee0 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ab12d2cec8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d2cea8 <col:3> 'void ()' Function 0x55ab12cca4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ab12d2cf40 <line:788:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55ab12d2cf00 <col:3> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   | `-IntegerLiteral 0x55ab12d2cf20 <col:7> 'int' 1
|   |-CallExpr 0x55ab12d2cfb0 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ab12d2cf80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d2cf60 <col:3> 'void ()' Function 0x55ab12cca570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ab12d2d008 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ab12d2cff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d2cfd0 <col:3> 'void ()' Function 0x55ab12cca4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ab12d2d2f0 <line:791:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55ab12d2d028 <col:3> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   | `-ConditionalOperator 0x55ab12d2d2c0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55ab12d2d0e8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55ab12d2d0a0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55ab12d2d088 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55ab12d2d048 <col:7> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55ab12d2d0d0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55ab12d2d0b8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55ab12d2d068 <col:25> '_Bool' lvalue Var 0x55ab12d248d8 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55ab12d2d2a8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ab12d2d108 <col:42> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55ab12d2d288 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55ab12d2d258 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55ab12d2d1c8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55ab12d2d180 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55ab12d2d168 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55ab12d2d128 <col:55> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55ab12d2d1b0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55ab12d2d198 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55ab12d2d148 <col:73> '_Bool' lvalue Var 0x55ab12d24ab8 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55ab12d2d228 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ab12d2d1e8 <col:90> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55ab12d2d240 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ab12d2d208 <col:102> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
|   |-BinaryOperator 0x55ab12d2d4f8 <line:792:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d2d310 <col:3> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ab12d2d4e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ab12d2d4b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ab12d2d3d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ab12d2d388 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ab12d2d370 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ab12d2d330 <col:20> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ab12d2d3b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ab12d2d3a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ab12d2d350 <col:38> '_Bool' lvalue Var 0x55ab12d248d8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55ab12d2d468 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ab12d2d420 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ab12d2d3f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ab12d2d498 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ab12d2d480 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ab12d2d448 <col:66> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ab12d2d7e0 <line:793:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d2d518 <col:3> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ab12d2d7c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ab12d2d798 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ab12d2d6b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ab12d2d5d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ab12d2d590 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ab12d2d578 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ab12d2d538 <col:20> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ab12d2d5c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ab12d2d5a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ab12d2d558 <col:38> '_Bool' lvalue Var 0x55ab12d248d8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55ab12d2d698 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ab12d2d650 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ab12d2d638 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ab12d2d5f8 <col:56> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ab12d2d680 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ab12d2d668 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ab12d2d618 <col:74> '_Bool' lvalue Var 0x55ab12d24ab8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55ab12d2d750 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ab12d2d708 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ab12d2d6d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ab12d2d780 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ab12d2d768 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ab12d2d730 <col:102> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55ab12d2d9e8 <line:794:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d2d800 <col:3> '_Bool' lvalue Var 0x55ab12d248d8 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55ab12d2d9d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ab12d2d9a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ab12d2d8c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ab12d2d878 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ab12d2d860 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ab12d2d820 <col:20> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ab12d2d8a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ab12d2d890 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ab12d2d840 <col:38> '_Bool' lvalue Var 0x55ab12d248d8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55ab12d2d958 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ab12d2d910 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ab12d2d8e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ab12d2d988 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ab12d2d970 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ab12d2d938 <col:66> '_Bool' lvalue Var 0x55ab12d248d8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55ab12d2dcd0 <line:795:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ab12d2da08 <col:3> '_Bool' lvalue Var 0x55ab12d24ab8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55ab12d2dcb8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ab12d2dc88 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ab12d2dba8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ab12d2dac8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ab12d2da80 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ab12d2da68 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ab12d2da28 <col:20> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ab12d2dab0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ab12d2da98 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ab12d2da48 <col:38> '_Bool' lvalue Var 0x55ab12d248d8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55ab12d2db88 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ab12d2db40 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ab12d2db28 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ab12d2dae8 <col:56> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ab12d2db70 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ab12d2db58 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ab12d2db08 <col:74> '_Bool' lvalue Var 0x55ab12d24ab8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55ab12d2dc40 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ab12d2dbf8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ab12d2dbc8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ab12d2dc70 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ab12d2dc58 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ab12d2dc20 <col:102> '_Bool' lvalue Var 0x55ab12d24ab8 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55ab12d2dd28 <line:796:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ab12d2dd10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d2dcf0 <col:3> 'void ()' Function 0x55ab12cca570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ab12d2dd80 <line:797:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ab12d2dd68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d2dd48 <col:3> 'void ()' Function 0x55ab12cca4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ab12d2de38 <line:798:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55ab12d2dda0 <col:3> 'int' lvalue Var 0x55ab12d23740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55ab12d2de18 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55ab12d2de00 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ab12d2ddc0 <col:22> 'int' lvalue Var 0x55ab12d23740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55ab12d2dde0 <col:41> 'int' 1
|   |-CallExpr 0x55ab12d2de90 <line:799:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ab12d2de78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ab12d2de58 <col:3> 'void ()' Function 0x55ab12cca570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55ab12d2df08 <line:800:3, col:36>
|     `-CallExpr 0x55ab12d2dee8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55ab12d2ded0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55ab12d2deb0 <col:10> 'void *(void)' Function 0x55ab12cc9fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55ab12d2dfe0 prev 0x55ab12d23488 <line:802:1, line:804:1> line:802:6 fence 'void ()'
| `-CompoundStmt 0x55ab12d2e080 <line:803:1, line:804:1>
|-FunctionDecl 0x55ab12d2e0b0 prev 0x55ab12d23548 <line:805:1, line:807:1> line:805:6 isync 'void ()'
| `-CompoundStmt 0x55ab12d2e150 <line:806:1, line:807:1>
|-FunctionDecl 0x55ab12d2e180 prev 0x55ab12d23608 <line:808:1, line:810:1> line:808:6 lwfence 'void ()'
| `-CompoundStmt 0x55ab12d2e220 <line:809:1, line:810:1>
`-FunctionDecl 0x55ab12d2e288 <line:811:1, line:837:1> line:811:5 main 'int ()'
  `-CompoundStmt 0x55ab12d30278 <line:812:1, line:837:1>
    |-DeclStmt 0x55ab12d2e3a0 <line:813:3, col:18>
    | `-VarDecl 0x55ab12d2e338 <col:3, col:13> col:13 used t1739 'pthread_t':'unsigned long'
    |-CallExpr 0x55ab12d2e5a8 <line:814:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55ab12d2e590 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ab12d2e3b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55ab12d0a9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55ab12d2e3f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55ab12d2e3d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55ab12d2e338 't1739' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55ab12d2e5e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55ab12d2e470 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55ab12d2e448 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55ab12d2e410 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55ab12d2e600 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ab12d2e490 <col:39> 'void *(void *)' Function 0x55ab12d25168 'P0' 'void *(void *)'
    | `-ParenExpr 0x55ab12d2e510 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55ab12d2e4e8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55ab12d2e4b0 <col:52> 'int' 0
    |-DeclStmt 0x55ab12d2e690 <line:815:3, col:18>
    | `-VarDecl 0x55ab12d2e628 <col:3, col:13> col:13 used t1740 'pthread_t':'unsigned long'
    |-CallExpr 0x55ab12d2e838 <line:816:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55ab12d2e820 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ab12d2e6a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55ab12d0a9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55ab12d2e6e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55ab12d2e6c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55ab12d2e628 't1740' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55ab12d2e878 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55ab12d2e760 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55ab12d2e738 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55ab12d2e700 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55ab12d2e890 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ab12d2e780 <col:39> 'void *(void *)' Function 0x55ab12d29c68 'P1' 'void *(void *)'
    | `-ParenExpr 0x55ab12d2e800 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55ab12d2e7d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55ab12d2e7a0 <col:52> 'int' 0
    |-DeclStmt 0x55ab12d2e920 <line:817:3, col:18>
    | `-VarDecl 0x55ab12d2e8b8 <col:3, col:13> col:13 used t1741 'pthread_t':'unsigned long'
    |-CallExpr 0x55ab12d2eac8 <line:818:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55ab12d2eab0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ab12d2e938 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55ab12d0a9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55ab12d2e978 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55ab12d2e958 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55ab12d2e8b8 't1741' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55ab12d2eb08 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55ab12d2e9f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55ab12d2e9c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55ab12d2e990 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55ab12d2eb20 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ab12d2ea10 <col:39> 'void *(void *)' Function 0x55ab12d2ce00 'P2' 'void *(void *)'
    | `-ParenExpr 0x55ab12d2ea90 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55ab12d2ea68 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55ab12d2ea30 <col:52> 'int' 0
    |-CallExpr 0x55ab12d2eb70 <line:819:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55ab12d2eb58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ab12d2eb38 <col:3> 'void ()' Function 0x55ab12cca4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55ab12d2ec40 <line:820:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55ab12d2eb90 <col:3> '_Bool' lvalue Var 0x55ab12d24468 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55ab12d2ec28 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55ab12d2ec08 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55ab12d2ebf0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55ab12d2ebb0 <col:21> 'int' lvalue Var 0x55ab12d23740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55ab12d2ebd0 <col:41> 'int' 3
    |-CallExpr 0x55ab12d2ec98 <line:821:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55ab12d2ec80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ab12d2ec60 <col:3> 'void ()' Function 0x55ab12cca570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55ab12d2ed48 <line:822:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55ab12d2ed30 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ab12d2ecb8 <col:3> 'void (int)' Function 0x55ab12cc9e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55ab12d2ed88 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55ab12d2ed70 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55ab12d2ecd8 <col:21> '_Bool' lvalue Var 0x55ab12d24468 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55ab12d2edd8 <line:823:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55ab12d2edc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ab12d2eda0 <col:3> 'void ()' Function 0x55ab12cca4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55ab12d2f0d8 <line:824:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55ab12d2edf8 <col:3> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
    | `-ConditionalOperator 0x55ab12d2f0a8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55ab12d2eeb8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55ab12d2ee70 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55ab12d2ee58 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55ab12d2ee18 <col:7> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55ab12d2eea0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55ab12d2ee88 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55ab12d2ee38 <col:25> '_Bool' lvalue Var 0x55ab12d24770 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55ab12d2f090 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55ab12d2eed8 <col:42> 'int' lvalue Var 0x55ab12d24c30 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55ab12d2f070 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55ab12d2f040 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55ab12d2ef98 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55ab12d2ef50 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55ab12d2ef38 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55ab12d2eef8 <col:55> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55ab12d2ef80 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55ab12d2ef68 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55ab12d2ef18 <col:73> '_Bool' lvalue Var 0x55ab12d24950 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55ab12d2f010 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55ab12d2efd0 <col:90> 'int' lvalue Var 0x55ab12d24d28 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55ab12d2f028 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55ab12d2eff0 <col:102> 'int' lvalue Var 0x55ab12d245e0 'x' 'int'
    |-BinaryOperator 0x55ab12d2f2e0 <line:825:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55ab12d2f0f8 <col:3> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55ab12d2f2c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ab12d2f298 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55ab12d2f1b8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55ab12d2f170 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55ab12d2f158 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55ab12d2f118 <col:20> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55ab12d2f1a0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55ab12d2f188 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55ab12d2f138 <col:38> '_Bool' lvalue Var 0x55ab12d24770 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55ab12d2f250 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55ab12d2f208 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55ab12d2f1d8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55ab12d2f280 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55ab12d2f268 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55ab12d2f230 <col:66> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55ab12d2f5c8 <line:826:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55ab12d2f300 <col:3> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55ab12d2f5b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ab12d2f580 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55ab12d2f4a0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55ab12d2f3c0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55ab12d2f378 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55ab12d2f360 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55ab12d2f320 <col:20> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55ab12d2f3a8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55ab12d2f390 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55ab12d2f340 <col:38> '_Bool' lvalue Var 0x55ab12d24770 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55ab12d2f480 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55ab12d2f438 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55ab12d2f420 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55ab12d2f3e0 <col:56> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55ab12d2f468 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55ab12d2f450 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55ab12d2f400 <col:74> '_Bool' lvalue Var 0x55ab12d24950 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55ab12d2f538 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55ab12d2f4f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55ab12d2f4c0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55ab12d2f568 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55ab12d2f550 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55ab12d2f518 <col:102> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55ab12d2f7d0 <line:827:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55ab12d2f5e8 <col:3> '_Bool' lvalue Var 0x55ab12d24770 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55ab12d2f7b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ab12d2f788 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55ab12d2f6a8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55ab12d2f660 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55ab12d2f648 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55ab12d2f608 <col:20> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55ab12d2f690 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55ab12d2f678 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55ab12d2f628 <col:38> '_Bool' lvalue Var 0x55ab12d24770 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55ab12d2f740 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55ab12d2f6f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55ab12d2f6c8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55ab12d2f770 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55ab12d2f758 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55ab12d2f720 <col:66> '_Bool' lvalue Var 0x55ab12d24770 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55ab12d2fab8 <line:828:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55ab12d2f7f0 <col:3> '_Bool' lvalue Var 0x55ab12d24950 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55ab12d2faa0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ab12d2fa70 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55ab12d2f990 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55ab12d2f8b0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55ab12d2f868 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55ab12d2f850 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55ab12d2f810 <col:20> '_Bool' lvalue Var 0x55ab12d24ca8 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55ab12d2f898 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55ab12d2f880 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55ab12d2f830 <col:38> '_Bool' lvalue Var 0x55ab12d24770 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55ab12d2f970 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55ab12d2f928 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55ab12d2f910 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55ab12d2f8d0 <col:56> '_Bool' lvalue Var 0x55ab12d24da0 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55ab12d2f958 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55ab12d2f940 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55ab12d2f8f0 <col:74> '_Bool' lvalue Var 0x55ab12d24950 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55ab12d2fa28 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55ab12d2f9e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55ab12d2f9b0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55ab12d2fa58 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55ab12d2fa40 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55ab12d2fa08 <col:102> '_Bool' lvalue Var 0x55ab12d24950 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55ab12d2fb10 <line:829:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55ab12d2faf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ab12d2fad8 <col:3> 'void ()' Function 0x55ab12cca570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55ab12d2fb68 <line:830:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55ab12d2fb50 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ab12d2fb30 <col:3> 'void ()' Function 0x55ab12cca4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55ab12d2fc00 <line:831:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55ab12d2fb88 <col:3> '_Bool' lvalue Var 0x55ab12d24fd8 'weak$$choice1' '_Bool'
    | `-CallExpr 0x55ab12d2fbe0 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55ab12d2fbc8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55ab12d2fba8 <col:19> '_Bool (void)' Function 0x55ab12cc9c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55ab12d2fe38 <line:832:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55ab12d2fc20 <col:3> 'int' lvalue Var 0x55ab12d23860 '__unbuffered_p0_EAX' 'int'
    | `-ConditionalOperator 0x55ab12d2fe08 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55ab12d2fdd8 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55ab12d2fdc0 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55ab12d2fc40 <col:25> '_Bool' lvalue Var 0x55ab12d23db0 '__unbuffered_p0_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55ab12d2fd80 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55ab12d2fd50 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55ab12d2fd08 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55ab12d2fcf0 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55ab12d2fc60 <col:61> '_Bool' lvalue Var 0x55ab12d24fd8 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55ab12d2fd20 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55ab12d2fcb8 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55ab12d2fca0 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55ab12d2fc80 <col:78> 'int *' lvalue Var 0x55ab12d23e30 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55ab12d2fd38 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55ab12d2fcd0 <col:117> 'int' lvalue Var 0x55ab12d23860 '__unbuffered_p0_EAX' 'int'
    |   `-ImplicitCastExpr 0x55ab12d2fdf0 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55ab12d2fda0 <col:140> 'int' lvalue Var 0x55ab12d23860 '__unbuffered_p0_EAX' 'int'
    |-BinaryOperator 0x55ab12d30120 <line:833:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x55ab12d2fe58 <col:3> '_Bool' lvalue Var 0x55ab12d244e0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55ab12d30108 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55ab12d300f0 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55ab12d300d0 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x55ab12d300b0 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x55ab12d30018 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x55ab12d2ff68 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x55ab12d2fed0 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55ab12d2feb8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55ab12d2fe78 <col:23> 'int' lvalue Var 0x55ab12d23860 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x55ab12d2fe98 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x55ab12d2ff48 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55ab12d2ff30 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55ab12d2fef0 <col:51> 'int' lvalue Var 0x55ab12d24190 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x55ab12d2ff10 <col:74> 'int' 0
    |         | `-BinaryOperator 0x55ab12d2fff8 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55ab12d2ffe0 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55ab12d2ff88 <col:79> 'int' lvalue Var 0x55ab12d242b0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55ab12d2ffa8 <col:102> 'int' 1
    |         `-BinaryOperator 0x55ab12d30090 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x55ab12d30078 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55ab12d30038 <col:107> 'int' lvalue Var 0x55ab12d243d0 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55ab12d30058 <col:130> 'int' 0
    |-CallExpr 0x55ab12d30178 <line:834:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55ab12d30160 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ab12d30140 <col:3> 'void ()' Function 0x55ab12cca570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55ab12d301f0 <line:835:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55ab12d301d8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ab12d30198 <col:3> 'void (int)' Function 0x55ab12cca238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55ab12d30230 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55ab12d30218 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55ab12d301b8 <col:21> '_Bool' lvalue Var 0x55ab12d244e0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55ab12d30268 <line:836:3, col:10>
      `-IntegerLiteral 0x55ab12d30248 <col:10> 'int' 0
