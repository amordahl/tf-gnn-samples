TranslationUnitDecl 0x5634a6355f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5634a6356848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5634a6356520 '__int128'
|-TypedefDecl 0x5634a63568b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5634a6356540 'unsigned __int128'
|-TypedefDecl 0x5634a6356bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5634a6356990 'struct __NSConstantString_tag'
|   `-Record 0x5634a6356910 '__NSConstantString_tag'
|-TypedefDecl 0x5634a6356c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5634a6356c20 'char *'
|   `-BuiltinType 0x5634a6356020 'char'
|-TypedefDecl 0x5634a6395b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5634a6356f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5634a6356d40 'struct __va_list_tag'
|     `-Record 0x5634a6356cc0 '__va_list_tag'
|-FunctionDecl 0x5634a6395ca0 <pthread-wmm/mix044_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5634a6395bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5634a6395e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5634a6395f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5634a63960d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5634a6396048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5634a6396308 <col:40, col:99>
|   |-IfStmt 0x5634a63962d8 <col:42, col:88>
|   | |-UnaryOperator 0x5634a63961b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5634a63961a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5634a6396180 <col:47> 'int' lvalue ParmVar 0x5634a6396048 'expression' 'int'
|   | `-CompoundStmt 0x5634a63962c0 <col:59, col:88>
|   |   `-LabelStmt 0x5634a63962a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5634a6396238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5634a6396220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5634a63961d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5634a6395f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5634a63962f0 <col:89>
|   `-ReturnStmt 0x5634a63962f8 <col:91>
|-FunctionDecl 0x5634a6396350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5634a6396410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5634a6396790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5634a63964c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5634a6396548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5634a63965c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5634a6396648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5634a6396850 <line:10:22>
|-FunctionDecl 0x5634a63bc8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5634a63968c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5634a6396940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5634a63969c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5634a6396a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5634a63bc960 <line:13:22>
|-FunctionDecl 0x5634a63bcc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5634a63bc9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5634a63bca50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5634a63bcad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5634a63bccc8 <line:15:22>
|-TypedefDecl 0x5634a63bcd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5634a63560e0 'unsigned char'
|-TypedefDecl 0x5634a63bcda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5634a6356100 'unsigned short'
|-TypedefDecl 0x5634a63bce18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5634a6356120 'unsigned int'
|-TypedefDecl 0x5634a63bce88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-TypedefDecl 0x5634a63bcef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5634a6356040 'signed char'
|-TypedefDecl 0x5634a63bcf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5634a63560e0 'unsigned char'
|-TypedefDecl 0x5634a63bcfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5634a6356060 'short'
|-TypedefDecl 0x5634a63bd048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5634a6356100 'unsigned short'
|-TypedefDecl 0x5634a63bd0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5634a6356080 'int'
|-TypedefDecl 0x5634a63bd128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5634a6356120 'unsigned int'
|-TypedefDecl 0x5634a63bd198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63bd208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-TypedefDecl 0x5634a63bd278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63bd2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-TypedefDecl 0x5634a63bd358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-TypedefDecl 0x5634a63bd3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5634a6356120 'unsigned int'
|-TypedefDecl 0x5634a63bd438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5634a6356120 'unsigned int'
|-TypedefDecl 0x5634a63bd4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-TypedefDecl 0x5634a63bd518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-TypedefDecl 0x5634a63bd588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5634a6356120 'unsigned int'
|-TypedefDecl 0x5634a63bd5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-TypedefDecl 0x5634a63bd668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63bd6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63bd748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5634a6356080 'int'
|-RecordDecl 0x5634a63bd7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5634a63bd918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5634a63bd9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5634a63bd970 'struct __fsid_t' sugar
|   `-RecordType 0x5634a63bd820 '__fsid_t'
|     `-Record 0x5634a63bd7a0 ''
|-TypedefDecl 0x5634a63bda58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63bdac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-TypedefDecl 0x5634a63bdb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-TypedefDecl 0x5634a63bdba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5634a6356120 'unsigned int'
|-TypedefDecl 0x5634a63bdc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63bdc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5634a6356120 'unsigned int'
|-TypedefDecl 0x5634a63bdcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63bdd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5634a6356080 'int'
|-TypedefDecl 0x5634a63bddd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5634a6356080 'int'
|-TypedefDecl 0x5634a63bde48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5634a6356080 'int'
|-TypedefDecl 0x5634a63bdeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5634a63567a0 'void *'
|   `-BuiltinType 0x5634a6355fe0 'void'
|-TypedefDecl 0x5634a63bdf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63bdf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63be008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63be078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-TypedefDecl 0x5634a63be0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-TypedefDecl 0x5634a63be158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-TypedefDecl 0x5634a63be1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-TypedefDecl 0x5634a63be238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63be2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63be318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63be388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-TypedefDecl 0x5634a63be418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5634a63be3e0 '__off64_t' sugar
|   |-Typedef 0x5634a63bd6d8 '__off64_t'
|   `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63be510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5634a63be4d0 '__quad_t *'
|   `-TypedefType 0x5634a63be470 '__quad_t' sugar
|     |-Typedef 0x5634a63bd278 '__quad_t'
|     `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63be580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5634a6356c20 'char *'
|   `-BuiltinType 0x5634a6356020 'char'
|-TypedefDecl 0x5634a63be5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63be660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5634a6356120 'unsigned int'
|-FunctionDecl 0x5634a63be7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5634a63be6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5634a63beae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5634a63bead8 <line:72:3, col:34>
|     `-CallExpr 0x5634a63bea98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5634a63bea80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5634a63bea10 <col:10> '<builtin fn type>' Function 0x5634a63be880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5634a63beac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5634a63bea30 <col:29> 'unsigned int' lvalue ParmVar 0x5634a63be6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5634a63be880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5634a63be920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5634a63be990 <col:10> Implicit
| `-ConstAttr 0x5634a63be9e8 <col:10> Implicit
|-FunctionDecl 0x5634a63bec40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5634a63beb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5634a63bef58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5634a63bef48 <line:77:3, col:34>
|     `-CallExpr 0x5634a63bef08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5634a63beef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5634a63bee78 <col:10> '<builtin fn type>' Function 0x5634a63bece8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5634a63bef30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5634a63bee98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5634a63beb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5634a63bece8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5634a63bed88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5634a63bedf8 <col:10> Implicit
| `-ConstAttr 0x5634a63bee50 <col:10> Implicit
|-TypedefDecl 0x5634a63bef88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-TypedefDecl 0x5634a63bf018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5634a63befe0 '__time_t' sugar
|   |-Typedef 0x5634a63bdc18 '__time_t'
|   `-BuiltinType 0x5634a63560a0 'long'
|-RecordDecl 0x5634a63bf070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5634a63bf128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5634a63bf1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5634a63bf248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5634a63bf210 '__pid_t' sugar
|   |-Typedef 0x5634a63bd748 '__pid_t'
|   `-BuiltinType 0x5634a6356080 'int'
|-RecordDecl 0x5634a63bf2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5634a63bf360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5634a63bf3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5634a63bf470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5634a63bf4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-RecordDecl 0x5634a63bf530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5634a63bf7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5634a63c18b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5634a63bf810 'struct cpu_set_t' sugar
|   `-RecordType 0x5634a63bf5b0 'cpu_set_t'
|     `-Record 0x5634a63bf530 ''
|-FunctionDecl 0x5634a63c1b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5634a63c1958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5634a63c1a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5634a63c1c38 <line:107:19>
|-FunctionDecl 0x5634a63c1e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5634a63c1ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5634a63c1eb8 <col:69>
|-FunctionDecl 0x5634a63c2030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5634a63c1f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5634a63c20d8 <col:64>
|-FunctionDecl 0x5634a63c2398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5634a63c2140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5634a63c2278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5634a63c2448 <line:113:22>
|-FunctionDecl 0x5634a63c26c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5634a63c24b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5634a63c25a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5634a63c2778 <col:88>
|-FunctionDecl 0x5634a63c2a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5634a63c27e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5634a63c28c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5634a63c2950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5634a63c2b50 <col:62>
|-FunctionDecl 0x5634a63c2cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5634a63c2bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5634a63c2d70 <col:63>
|-FunctionDecl 0x5634a63c2e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5634a63c2f38 <col:47>
|-FunctionDecl 0x5634a63c3040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5634a63c2fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5634a63c30e8 <col:69>
|-FunctionDecl 0x5634a63c31f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5634a63c3158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5634a63c3298 <col:69>
|-FunctionDecl 0x5634a63c3558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5634a63c3300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5634a63c3438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5634a63c3608 <col:88>
|-TypedefDecl 0x5634a63c3698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5634a63c3660 '__clock_t' sugar
|   |-Typedef 0x5634a63bda58 '__clock_t'
|   `-BuiltinType 0x5634a63560a0 'long'
|-TypedefDecl 0x5634a63c3728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5634a63c36f0 '__clockid_t' sugar
|   |-Typedef 0x5634a63bde48 '__clockid_t'
|   `-BuiltinType 0x5634a6356080 'int'
|-TypedefDecl 0x5634a63c37b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5634a63c3780 '__timer_t' sugar
|   |-Typedef 0x5634a63bdeb8 '__timer_t'
|   `-PointerType 0x5634a63567a0 'void *'
|     `-BuiltinType 0x5634a6355fe0 'void'
|-RecordDecl 0x5634a63c3810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5634a63c38e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5634a63c3950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5634a63c39b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5634a63c3a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5634a63c3a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5634a63c3af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5634a63c3b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5634a63c3bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5634a63c3c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5634a63c3c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5634a63c3cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5634a63c3d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5634a63c3e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5634a63c3e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5634a63c3f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5634a63c4100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5634a63c41a0 <col:45>
|-FunctionDecl 0x5634a63c4380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5634a63c4270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5634a63c4428 <col:54>
|-FunctionDecl 0x5634a63c4628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5634a63c4490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5634a63c4508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5634a63c46d8 <line:157:22>
| `-ConstAttr 0x5634a63c4730 <col:63>
|-FunctionDecl 0x5634a63c5560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5634a63c4828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5634a63c5608 <col:56>
|-FunctionDecl 0x5634a63c59b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5634a63c5678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5634a63c56f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5634a63c5770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5634a63c5868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5634a63c5a70 <col:54>
|-RecordDecl 0x5634a63c5ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5634a63c5b78 parent 0x5634a6355f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5634a63c5dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5634a63c5e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5634a63c5ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5634a63c5f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5634a63c6038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5634a63c6158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5634a63c6100 'struct __locale_struct *'
|   `-ElaboratedType 0x5634a63c6090 'struct __locale_struct' sugar
|     `-RecordType 0x5634a63c5b50 'struct __locale_struct'
|       `-Record 0x5634a63c5ac8 '__locale_struct'
|-TypedefDecl 0x5634a63c6208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5634a63c61d0 '__locale_t' sugar
|   |-Typedef 0x5634a63c6158 '__locale_t'
|   `-PointerType 0x5634a63c6100 'struct __locale_struct *'
|     `-ElaboratedType 0x5634a63c6090 'struct __locale_struct' sugar
|       `-RecordType 0x5634a63c5b50 'struct __locale_struct'
|         `-Record 0x5634a63c5ac8 '__locale_struct'
|-FunctionDecl 0x5634a63c6610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5634a63c6278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5634a63c62f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5634a63c6370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5634a63c6400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5634a63c6478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5634a63c66d8 <col:40>
|-FunctionDecl 0x5634a63c68c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5634a63c67a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5634a63c6970 <col:66>
|-FunctionDecl 0x5634a63c6a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5634a63c69d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5634a63c6b28 <col:69>
|-FunctionDecl 0x5634a63c6d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5634a63c6b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5634a63c6c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5634a63c6e08 <col:52>
|-FunctionDecl 0x5634a63c6fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5634a63c6e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5634a63c6f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5634a63c7060 <col:55>
|-FunctionDecl 0x5634a63c71f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5634a63c70e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5634a63c72a0 <col:62>
|-FunctionDecl 0x5634a63c7418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5634a63c7308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5634a63c74c0 <col:60>
|-FunctionDecl 0x5634a63c7718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5634a63c7578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5634a63c75f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5634a63c77c8 <col:44>
|-FunctionDecl 0x5634a63c79d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5634a63c7830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5634a63c78b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5634a63c7a88 <col:49>
|-VarDecl 0x5634a63c7b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5634a63c7c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5634a63c7c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5634a63c7d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5634a63c7e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5634a63c7f20 <col:42>
|-VarDecl 0x5634a63c7f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5634a63c8010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5634a63c8198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5634a63c8088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5634a63c8240 <col:57>
|-FunctionDecl 0x5634a63c8350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5634a63c82c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5634a63c83f8 <col:56>
|-FunctionDecl 0x5634a63c9540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5634a63c8478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5634a63c95e8 <col:59>
|-FunctionDecl 0x5634a63c96f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5634a63c9658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5634a63c9798 <col:48>
| `-ConstAttr 0x5634a63c97f0 <col:89>
|-FunctionDecl 0x5634a63c9a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5634a63c98a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5634a63c9938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5634a63c9cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5634a63c9b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5634a63c9bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5634a63c9d68 <col:88>
|-FunctionDecl 0x5634a63c9f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5634a63c9dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5634a63c9e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5634a63c9fb0 <col:88>
|-FunctionDecl 0x5634a63ca1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5634a63ca018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5634a63ca0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5634a63ca278 <line:208:22>
|-FunctionDecl 0x5634a63ca5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5634a63ca2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5634a63ca360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5634a63ca3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5634a63ca480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5634a63ca8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5634a63ca6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5634a63ca7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5634a63ca998 <col:85>
|-FunctionDecl 0x5634a63cad88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5634a63caa00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5634a63cab38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5634a63cac40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5634a63cae40 <col:52>
|-FunctionDecl 0x5634a63cafb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5634a63caea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5634a63cb060 <col:61>
|-FunctionDecl 0x5634a63cb560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5634a63cb0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5634a63cb148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5634a63cb278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5634a63cb368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5634a63cb620 <col:62>
|-FunctionDecl 0x5634a63cb838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5634a63cb688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5634a63cb718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5634a63cb8e8 <line:221:22>
|-FunctionDecl 0x5634a63cb9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5634a63cb950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5634a63cba90 <col:65>
|-TypedefDecl 0x5634a63cbb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5634a6356140 'unsigned long'
|-RecordDecl 0x5634a63cbb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5634a63cbca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5634a63cbd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5634a63cbdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5634a63cbd60 'union pthread_attr_t' sugar
|   `-RecordType 0x5634a63cbbe0 'union pthread_attr_t'
|     `-Record 0x5634a63cbb58 'pthread_attr_t'
|-RecordDecl 0x5634a63cbe10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5634a63cbf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5634a63cc000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5634a63cc0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5634a63cc050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5634a63cbe90 'struct __pthread_internal_list'
|     `-Record 0x5634a63cbe10 '__pthread_internal_list'
|-RecordDecl 0x5634a63cc120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5634a63cc1c8 parent 0x5634a6355f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5634a63cc2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5634a63cc308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5634a63cc370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5634a63cc3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5634a63cc440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5634a63cc4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5634a63d0580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5634a63d0630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5634a63d0720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5634a63d0788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5634a63d0910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5634a63d08b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5634a63cc1a0 'pthread_mutex_t'
|     `-Record 0x5634a63cc120 ''
|-RecordDecl 0x5634a63d0980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5634a63d0ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5634a63d0b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5634a63d0be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5634a63d0b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5634a63d0a00 'pthread_mutexattr_t'
|     `-Record 0x5634a63d0980 ''
|-RecordDecl 0x5634a63d0c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5634a63d0cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5634a63d0dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5634a63d0e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5634a63d0e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5634a63d0ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5634a63d0f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5634a63d0fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5634a63d1030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5634a63d1098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5634a63d1150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix044_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix044_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5634a63d1240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5634a63d12a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5634a63d13e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5634a63d1380 'union pthread_cond_t' sugar
|   `-RecordType 0x5634a63d0cd0 'pthread_cond_t'
|     `-Record 0x5634a63d0c50 ''
|-RecordDecl 0x5634a63d1450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5634a63d1590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5634a63d15f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5634a63d16b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5634a63d1650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5634a63d14d0 'pthread_condattr_t'
|     `-Record 0x5634a63d1450 ''
|-TypedefDecl 0x5634a63d1738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5634a6356120 'unsigned int'
|-TypedefDecl 0x5634a63d17a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5634a6356080 'int'
|-RecordDecl 0x5634a63d1800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5634a63d18a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5634a63d1970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5634a63d19d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5634a63d1a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5634a63d1aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5634a63d1b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5634a63d1b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5634a63d1be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5634a63d1c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5634a63d1cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5634a63d1d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5634a63d1d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5634a63d1e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix044_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix044_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5634a63d1ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5634a63d1f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5634a63d2090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5634a63d2030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5634a63d1880 'pthread_rwlock_t'
|     `-Record 0x5634a63d1800 ''
|-RecordDecl 0x5634a63d2100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5634a63d2240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5634a63d22a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5634a63d2360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5634a63d2300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5634a63d2180 'pthread_rwlockattr_t'
|     `-Record 0x5634a63d2100 ''
|-TypedefDecl 0x5634a63d23e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5634a6356084 'volatile int' volatile
|   `-BuiltinType 0x5634a6356080 'int'
|-RecordDecl 0x5634a63d2440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5634a63d45b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5634a63d4618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5634a63d46d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5634a63d4670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5634a63d24c0 'pthread_barrier_t'
|     `-Record 0x5634a63d2440 ''
|-RecordDecl 0x5634a63d4740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5634a63d4840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5634a63d48a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5634a63d4960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5634a63d4900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5634a63d47c0 'pthread_barrierattr_t'
|     `-Record 0x5634a63d4740 ''
|-TypedefDecl 0x5634a63d4a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5634a63d4a10 'long [8]' 8 
|   `-BuiltinType 0x5634a63560a0 'long'
|-EnumDecl 0x5634a63d4ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5634a63d4b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5634a63d4be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5634a63d4c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5634a63d4d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5634a63d4d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5634a63d4da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5634a63d4df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5634a63d4e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5634a63d4e68 <col:26> 'int'
| |   `-DeclRefExpr 0x5634a63d4e48 <col:26> 'int' EnumConstant 0x5634a63d4d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5634a63d4f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5634a63d4ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5634a63d4ed0 <col:29> 'int' EnumConstant 0x5634a63d4d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5634a63d4f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5634a63d4f78 <col:30> 'int'
| |   `-DeclRefExpr 0x5634a63d4f58 <col:30> 'int' EnumConstant 0x5634a63d4da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5634a63d5018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5634a63d5000 <col:27> 'int'
|     `-DeclRefExpr 0x5634a63d4fe0 <col:27> 'int' EnumConstant 0x5634a63d4e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5634a63d5068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5634a63d5138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5634a63d51c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5634a63d51a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5634a63d5188 <col:30> 'int' EnumConstant 0x5634a63d5138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5634a63d5210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5634a63d5298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5634a63d5280 <col:29> 'int'
|     `-DeclRefExpr 0x5634a63d5260 <col:29> 'int' EnumConstant 0x5634a63d5210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5634a63d52e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5634a63d53b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5634a63d5408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5634a63d5458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5634a63d54a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5634a63d55c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5634a63d5610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5634a63d5660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5634a63d56e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5634a63d56d0 <col:31> 'int'
|     `-DeclRefExpr 0x5634a63d56b0 <col:31> 'int' EnumConstant 0x5634a63d55c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5634a63d5738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5634a63d5808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5634a63d5858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5634a63d58a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5634a63d5978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5634a63d59c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5634a63d5a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5634a63d5ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5634a63d5b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5634a63d5b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5634a63d5dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5634a63d5e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5634a63d5e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5634a63d5fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5634a63d6008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5634a63d60d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5634a63d6128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5634a63d6178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5634a63d6248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5634a63d6298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5634a63d68f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5634a63d6390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5634a63d64a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634a63d66e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5634a63d6760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5634a63d69b8 <col:47>
| |-NonNullAttr 0x5634a63d6a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5634a63d6a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5634a63d6b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5634a63d6aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5634a63d6dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5634a63d6c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5634a63d6ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5634a63d6f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5634a63d6e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5634a63d7040 <col:60>
|-FunctionDecl 0x5634a63d7190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5634a63d7230 <col:54>
| `-ConstAttr 0x5634a63d7288 <col:95>
|-FunctionDecl 0x5634a63d7458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5634a63d72c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5634a63d7338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5634a63d7508 <line:394:19>
| `-ConstAttr 0x5634a63d7560 <col:60>
|-FunctionDecl 0x5634a63d7f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5634a63d7e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5634a63d8010 <col:71>
| `-NonNullAttr 0x5634a63d8068 <col:112, col:126> 1
|-FunctionDecl 0x5634a63d8170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5634a63d80b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5634a63d8218 <line:397:22>
| `-NonNullAttr 0x5634a63d8270 <col:63, col:77> 1
|-FunctionDecl 0x5634a63d8498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5634a63d82b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5634a63d8338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5634a63d8548 <line:400:22>
| `-NonNullAttr 0x5634a63d85a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63d87a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5634a63d85e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5634a63d8668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5634a63d8858 <line:403:22>
| `-NonNullAttr 0x5634a63d88b0 <col:63, col:77> 1
|-FunctionDecl 0x5634a63d8b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5634a63d88f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5634a63d89a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5634a63d8bb8 <line:406:22>
| `-NonNullAttr 0x5634a63d8c10 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63d9e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5634a63d8c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5634a63d8cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5634a63d9ef8 <line:409:22>
| `-NonNullAttr 0x5634a63d9f50 <col:63, col:77> 1
|-FunctionDecl 0x5634a63da188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5634a63d9f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634a63da028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5634a63da238 <line:412:22>
| `-NonNullAttr 0x5634a63da290 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63da4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5634a63da2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634a63da368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5634a63da578 <col:37>
| `-NonNullAttr 0x5634a63da5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5634a63da7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634a63da618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634a63da698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5634a63da868 <line:418:22>
| `-NonNullAttr 0x5634a63da8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63daa48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5634a63da908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5634a63da988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5634a63daaf8 <line:420:22>
| `-NonNullAttr 0x5634a63dab50 <col:63, col:77> 1
|-FunctionDecl 0x5634a63dacf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634a63dab98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634a63dac18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5634a63dada8 <line:423:22>
| `-NonNullAttr 0x5634a63dbe30 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63dbfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5634a63dbe78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5634a63dbef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5634a63dc068 <line:426:22>
| `-NonNullAttr 0x5634a63dc0c0 <col:63, col:77> 1
|-FunctionDecl 0x5634a63dc268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634a63dc108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634a63dc188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5634a63dc318 <line:429:22>
| `-NonNullAttr 0x5634a63dc370 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63dc4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5634a63dc3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5634a63dc438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5634a63dc5a8 <line:431:22>
| `-NonNullAttr 0x5634a63dc600 <col:63, col:77> 1
|-FunctionDecl 0x5634a63dc828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5634a63dc648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634a63dc6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5634a63dc8d8 <line:434:22>
| |-NonNullAttr 0x5634a63dc930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5634a63dc968 <col:100> "" ""
|-FunctionDecl 0x5634a63dcb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5634a63dc9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5634a63dca38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5634a63dcc28 <line:437:22>
| |-NonNullAttr 0x5634a63dcc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5634a63dccb8 <col:97> "" ""
|-FunctionDecl 0x5634a63dceb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5634a63dcd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634a63dcd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5634a63dcf68 <line:440:22>
| `-NonNullAttr 0x5634a63dcfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63dd140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5634a63dd008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5634a63dd080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5634a63dd1f0 <line:443:22>
| `-NonNullAttr 0x5634a63dd248 <col:63, col:77> 1
|-FunctionDecl 0x5634a63dd538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5634a63dd298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634a63dd318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5634a63dd390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5634a63dd5f0 <line:447:22>
| `-NonNullAttr 0x5634a63dd648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5634a63dd8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5634a63dd6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5634a63dd720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5634a63dd798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5634a63dd9b0 <col:43>
| `-NonNullAttr 0x5634a63dda08 <col:84, col:98> 1
|-FunctionDecl 0x5634a63ddcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5634a63dda58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5634a63ddad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5634a63ddb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5634a63ddd80 <line:452:22>
| `-NonNullAttr 0x5634a63dddd8 <col:63, col:77> 3
|-FunctionDecl 0x5634a63de0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5634a63dde50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5634a63dded0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5634a63ddf60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5634a63de1a0 <line:456:22>
| `-NonNullAttr 0x5634a63de1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5634a63de3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5634a63de248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5634a63de2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5634a63de498 <line:458:22>
|-FunctionDecl 0x5634a63de868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5634a63de560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5634a63de700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5634a63de918 <col:52, col:69> 1 2
|-FunctionDecl 0x5634a63deac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5634a63de9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5634a63dea20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5634a63deca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5634a63deb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5634a63dec08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5634a63dee60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5634a63ded68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5634a63defa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5634a63df040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5634a63df0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5634a63df1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5634a63df240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5634a63df410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix044_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5634a63df508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5634a63df5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5634a63df560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5634a63df0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5634a63df040 ''
| `-AlignedAttr 0x5634a63df618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5634a63df690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5634a63df7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5634a63df858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5634a63df8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5634a63df928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5634a63dfb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5634a63dfa20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5634a63dfc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5634a63dfbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5634a63dfe70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5634a63dfd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5634a63dff18 <line:487:22>
|-RecordDecl 0x5634a63dff70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5634a63e0288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5634a63e00e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5634a63e0168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5634a63e0338 <col:86>
| `-ReturnsTwiceAttr 0x5634a63e0390 <col:12> Implicit
|-FunctionDecl 0x5634a63e06b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5634a63e0460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5634a63e0570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5634a63e0768 <line:493:22>
| `-NonNullAttr 0x5634a63e07c0 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e0938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5634a63e0808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5634a63e09e0 <line:495:22>
| `-NonNullAttr 0x5634a63e0a38 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e0b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5634a63e0a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5634a63e0be8 <line:497:22>
| `-NonNullAttr 0x5634a63e0c40 <col:52, col:66> 1
|-FunctionDecl 0x5634a63e0d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5634a63e0c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5634a63e0de8 <line:499:22>
| `-NonNullAttr 0x5634a63e0e40 <col:52, col:66> 1
|-FunctionDecl 0x5634a63e1088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5634a63e0e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5634a63e0f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5634a63e1138 <col:36>
| `-NonNullAttr 0x5634a63e1190 <col:66, col:83> 1 2
|-FunctionDecl 0x5634a63e1290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5634a63e11d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5634a63e1338 <line:504:22>
| `-NonNullAttr 0x5634a63e1390 <col:52, col:66> 1
|-FunctionDecl 0x5634a63e1628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634a63e1440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5634a63e14c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5634a63e16d8 <line:508:22>
| `-NonNullAttr 0x5634a63e1730 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63e19f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5634a63e1778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5634a63e17f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5634a63e1878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5634a63e1ab0 <line:512:22>
| `-NonNullAttr 0x5634a63e1b08 <col:63, col:80> 1 3
|-FunctionDecl 0x5634a63e1c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5634a63e1b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5634a63e1cb8 <line:514:22>
| `-NonNullAttr 0x5634a63e1d10 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e1f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5634a63e1dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5634a63e1fe0 <line:516:22>
| `-NonNullAttr 0x5634a63e2038 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e2140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5634a63e2088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5634a63e21e8 <line:518:22>
| `-NonNullAttr 0x5634a63e2240 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e2468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634a63e2288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5634a63e2308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5634a63e2518 <line:522:22>
| `-NonNullAttr 0x5634a63e2570 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63e2778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5634a63e25b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5634a63e2638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5634a63e2828 <line:525:22>
| `-NonNullAttr 0x5634a63e2880 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e2a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634a63e28c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5634a63e2948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5634a63e2ad8 <line:528:22>
| `-NonNullAttr 0x5634a63e2b30 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63e2cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5634a63e2b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5634a63e2bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5634a63e2d68 <line:530:22>
| `-NonNullAttr 0x5634a63e2dc0 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e3f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634a63e2e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5634a63e3eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5634a63e4040 <line:534:22>
| `-NonNullAttr 0x5634a63e4098 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63e4228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5634a63e40e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5634a63e4168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5634a63e42d8 <line:537:22>
| `-NonNullAttr 0x5634a63e4330 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e44d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634a63e4378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5634a63e43f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5634a63e4588 <line:541:22>
| `-NonNullAttr 0x5634a63e45e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63e4768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5634a63e4628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5634a63e46a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5634a63e4818 <line:544:22>
| `-NonNullAttr 0x5634a63e4870 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e4a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5634a63e48b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5634a63e4938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5634a63e4b08 <line:547:22>
| `-NonNullAttr 0x5634a63e4b60 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63e4ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5634a63e4ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5634a63e4c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5634a63e4d98 <line:550:22>
| `-NonNullAttr 0x5634a63e4df0 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e6168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5634a63e5f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5634a63e6020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5634a63e6218 <col:29>
| `-NonNullAttr 0x5634a63e6270 <col:70, col:84> 1
|-FunctionDecl 0x5634a63e63e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5634a63e62b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5634a63e6490 <line:555:22>
| `-NonNullAttr 0x5634a63e64e8 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e65f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5634a63e6538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5634a63e6698 <line:557:22>
| `-NonNullAttr 0x5634a63e66f0 <col:52, col:66> 1
|-FunctionDecl 0x5634a63e67f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5634a63e6738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5634a63e6898 <line:559:19>
| `-NonNullAttr 0x5634a63e68f0 <col:49, col:63> 1
|-FunctionDecl 0x5634a63e6b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5634a63e6938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5634a63e69c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5634a63e6bd8 <col:39>
| `-NonNullAttr 0x5634a63e6c30 <col:69, col:86> 1 2
|-FunctionDecl 0x5634a63e6d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5634a63e6c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5634a63e6dd8 <line:564:22>
| `-NonNullAttr 0x5634a63e6e30 <col:52, col:66> 1
|-FunctionDecl 0x5634a63e6f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5634a63e6ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5634a63e7040 <line:566:22>
| `-NonNullAttr 0x5634a63e7098 <col:52, col:66> 1
|-FunctionDecl 0x5634a63e7258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5634a63e70e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5634a63e7178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5634a63e7308 <col:39>
| `-NonNullAttr 0x5634a63e7360 <col:69, col:86> 1 2
|-FunctionDecl 0x5634a63e7460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5634a63e73a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5634a63e7508 <line:571:22>
| `-NonNullAttr 0x5634a63e7560 <col:52, col:66> 1
|-FunctionDecl 0x5634a63e7748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5634a63e7610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5634a63e77f0 <line:573:22>
| `-NonNullAttr 0x5634a63e7848 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e7950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5634a63e7898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5634a63e79f8 <line:575:22>
| `-NonNullAttr 0x5634a63e7a50 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e7c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634a63e7a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5634a63e7b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5634a63e7d28 <line:579:22>
| `-NonNullAttr 0x5634a63e7d80 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63e7fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5634a63e7dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5634a63e7e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5634a63e8058 <line:582:22>
| `-NonNullAttr 0x5634a63e80b0 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e8258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634a63e80f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5634a63e8178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5634a63e8308 <line:586:22>
| `-NonNullAttr 0x5634a63e8360 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63e84e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5634a63e83a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5634a63e8428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5634a63e8598 <col:36>
| `-NonNullAttr 0x5634a63e85f0 <col:77, col:91> 1
|-FunctionDecl 0x5634a63e8928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5634a63e86d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5634a63e87e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5634a63e89d8 <line:591:22>
| `-NonNullAttr 0x5634a63e8a30 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e8ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5634a63e8a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5634a63e8c50 <line:593:22>
| `-NonNullAttr 0x5634a63e8ca8 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e8db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5634a63e8cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5634a63e8e58 <line:595:22>
| `-NonNullAttr 0x5634a63e8eb0 <col:52, col:66> 1
|-FunctionDecl 0x5634a63e8fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5634a63e8f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5634a63e9070 <line:597:22>
| `-NonNullAttr 0x5634a63e90c8 <col:52, col:66> 1
|-FunctionDecl 0x5634a63e92f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5634a63e9118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5634a63e9190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5634a63e93a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5634a63e96d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5634a63e9428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5634a63e94a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5634a63e9530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5634a63e9790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5634a63e99a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5634a63e9870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5634a63e9a50 <line:606:22>
| `-NonNullAttr 0x5634a63e9aa8 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e9bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5634a63e9af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5634a63e9c58 <line:608:22>
| `-NonNullAttr 0x5634a63e9cb0 <col:63, col:77> 1
|-FunctionDecl 0x5634a63e9f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634a63e9cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5634a63e9d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5634a63e9fc0 <line:612:22>
| `-NonNullAttr 0x5634a63ea018 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63ea228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5634a63ea068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5634a63ea0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5634a63ea2d8 <col:37>
| `-NonNullAttr 0x5634a63ea330 <col:78, col:92> 1
|-FunctionDecl 0x5634a63ea548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5634a63ea378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5634a63ea420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5634a63ea5f8 <line:618:22>
| `-NonNullAttr 0x5634a63ea650 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63ea818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5634a63ea698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5634a63ea710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5634a63ea8c8 <line:621:22>
| `-NonNullAttr 0x5634a63ea920 <col:63, col:77> 1
|-FunctionDecl 0x5634a63eabc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5634a63eaa00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5634a63eaa80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5634a63eac78 <line:623:22>
| `-NonNullAttr 0x5634a63eacd0 <col:63, col:77> 1
|-FunctionDecl 0x5634a63eae48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5634a63ead18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5634a63eaf20 <line:625:22>
| `-NonNullAttr 0x5634a63eaf78 <col:63, col:77> 1
|-FunctionDecl 0x5634a63eb080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5634a63eafc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5634a63eb128 <line:627:22>
| `-NonNullAttr 0x5634a63eb180 <col:52, col:66> 1
|-FunctionDecl 0x5634a63eb280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5634a63eb1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5634a63eb328 <line:629:22>
| `-NonNullAttr 0x5634a63eb380 <col:52, col:66> 1
|-FunctionDecl 0x5634a63eb480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5634a63eb3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5634a63eb528 <line:631:22>
| `-NonNullAttr 0x5634a63eb580 <col:52, col:66> 1
|-FunctionDecl 0x5634a63eb958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5634a63eb660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5634a63eb770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5634a63eb7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5634a63eba10 <line:635:22>
| `-NonNullAttr 0x5634a63eba68 <col:63, col:77> 1
|-FunctionDecl 0x5634a63ebbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5634a63ebab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5634a63ebc90 <line:637:22>
| `-NonNullAttr 0x5634a63ebce8 <col:63, col:77> 1
|-FunctionDecl 0x5634a63ebdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5634a63ebd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5634a63ebe98 <line:639:22>
| `-NonNullAttr 0x5634a63ebef0 <col:52, col:66> 1
|-FunctionDecl 0x5634a63ec0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5634a63ebfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5634a63ec190 <line:641:22>
| `-NonNullAttr 0x5634a63ec1e8 <col:63, col:77> 1
|-FunctionDecl 0x5634a63ec2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5634a63ec238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5634a63ec398 <line:643:22>
| `-NonNullAttr 0x5634a63ec3f0 <col:63, col:77> 1
|-FunctionDecl 0x5634a63ec618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634a63ec438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5634a63ec4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5634a63ec6c8 <line:647:22>
| `-NonNullAttr 0x5634a63ec720 <col:63, col:80> 1 2
|-FunctionDecl 0x5634a63ec928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5634a63ec768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5634a63ec7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5634a63ec9d8 <line:650:22>
| `-NonNullAttr 0x5634a63eca30 <col:63, col:77> 1
|-FunctionDecl 0x5634a63ecd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5634a63ecb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5634a63ecc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5634a63ece28 <line:653:22>
| `-NonNullAttr 0x5634a63ece80 <col:63, col:77> 1
|-FunctionDecl 0x5634a63ecfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5634a63ecec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5634a63ed090 <col:69>
|-FunctionDecl 0x5634a63ed208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5634a63ed0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5634a63ed2b0 <col:72>
|-FunctionDecl 0x5634a63ed4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5634a63ed318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5634a63ed3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5634a63ed598 <col:44>
|-FunctionDecl 0x5634a63ed7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5634a63ed600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5634a63ed678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5634a63ed868 <line:660:22>
| `-NonNullAttr 0x5634a63ed8c0 <col:63, col:77> 2
|-FunctionDecl 0x5634a63edd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5634a63ed9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5634a63edab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5634a63edbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5634a63eddc0 <col:47>
|-FunctionDecl 0x5634a63eef60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5634a63ede30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5634a63ef0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5634a63ef020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5634a63ef210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5634a63ef178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5634a63ef368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x5634a63ef2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5634a63ef430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5634a63ef4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5634a63ef5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5634a63ef668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5634a63ef6e8 prev 0x5634a63ef668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5634a63ef750 <col:24> 'int' 0
|-VarDecl 0x5634a63ef788 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5634a63ef808 prev 0x5634a63ef788 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5634a63ef870 <col:27> 'int' 0
|-VarDecl 0x5634a63ef8a8 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x5634a63ef928 prev 0x5634a63ef8a8 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x5634a63ef990 <col:27> 'int' 0
|-VarDecl 0x5634a63ef9c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x5634a63efa48 prev 0x5634a63ef9c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x5634a63efab0 <col:27> 'int' 0
|-VarDecl 0x5634a63efae8 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x5634a63efb68 prev 0x5634a63efae8 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5634a63efbd0 <col:9> 'int' 0
|-VarDecl 0x5634a63efc08 <line:682:1, col:5> col:5 used b 'int'
|-VarDecl 0x5634a63efc88 prev 0x5634a63efc08 <line:683:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x5634a63efcf0 <col:9> 'int' 0
|-VarDecl 0x5634a63efd20 <line:684:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5634a63efd98 <line:685:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5634a63efe18 <line:686:1, col:5> col:5 used x 'int'
|-VarDecl 0x5634a63efe98 prev 0x5634a63efe18 <line:687:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5634a63eff00 <col:9> 'int' 0
|-VarDecl 0x5634a63eff70 <line:688:1, col:5> col:5 used y 'int'
|-VarDecl 0x5634a63efff0 prev 0x5634a63eff70 <line:689:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5634a63f0058 <col:9> 'int' 0
|-VarDecl 0x5634a63f0090 <line:690:1, col:5> col:5 used z 'int'
|-VarDecl 0x5634a63f0110 prev 0x5634a63f0090 <line:691:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5634a63f0178 <col:9> 'int' 0
|-VarDecl 0x5634a63f01a8 <line:692:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x5634a63f0228 <line:693:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x5634a63f02a0 <line:694:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x5634a63f0318 <line:695:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x5634a63f0390 <line:696:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x5634a63f0408 <line:697:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x5634a63f0480 <line:698:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x5634a63f04f8 <line:699:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x5634a63f0570 <line:700:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x5634a63f05e8 <line:701:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x5634a63f0660 <line:702:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x5634a63f06d8 <line:703:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x5634a63f0750 <line:704:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x5634a63f07d0 <line:705:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x5634a63f0850 <line:706:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x5634a63f08c8 <line:707:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x5634a63f0948 <line:708:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x5634a63f09c0 <line:709:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x5634a63f0a38 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5634a63f0ab0 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5634a63f0bc8 prev 0x5634a63eef60 <line:712:1, line:726:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5634a63f0b30 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5634a63f1188 <line:713:1, line:726:1>
|   |-CallExpr 0x5634a63f0cd8 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f0cc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f0c70 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634a63f0d38 <line:715:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5634a63f0cf8 <col:3> 'int' lvalue Var 0x5634a63efc88 'b' 'int'
|   | `-IntegerLiteral 0x5634a63f0d18 <col:7> 'int' 1
|   |-CallExpr 0x5634a63f0d90 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f0d78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f0d58 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634a63f0de8 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f0dd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f0db0 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634a63f0e48 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5634a63f0e08 <col:3> 'int' lvalue Var 0x5634a63efe98 'x' 'int'
|   | `-IntegerLiteral 0x5634a63f0e28 <col:7> 'int' 1
|   |-CallExpr 0x5634a63f0ea0 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f0e88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f0e68 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634a63f0ef8 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f0ee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f0ec0 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5634a63f0f50 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f0f38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f0f18 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634a63f0fb8 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f0fa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f0f80 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634a63f1070 <line:723:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5634a63f0fd8 <col:3> 'int' lvalue Var 0x5634a63ef6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5634a63f1050 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5634a63f1038 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5634a63f0ff8 <col:22> 'int' lvalue Var 0x5634a63ef6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5634a63f1018 <col:41> 'int' 1
|   |-CallExpr 0x5634a63f10c8 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f10b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f1090 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5634a63f1178 <line:725:3, col:36>
|     `-CallExpr 0x5634a63f1158 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5634a63f1140 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5634a63f10e8 <col:10> 'void *(void)' Function 0x5634a6395e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5634a63f12a8 prev 0x5634a63ef0b8 <line:727:1, line:741:1> line:727:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5634a63f1210 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5634a63f1808 <line:728:1, line:741:1>
|   |-CallExpr 0x5634a63f1388 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f1370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f1350 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634a63f13e8 <line:730:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5634a63f13a8 <col:3> 'int' lvalue Var 0x5634a63efe98 'x' 'int'
|   | `-IntegerLiteral 0x5634a63f13c8 <col:7> 'int' 2
|   |-CallExpr 0x5634a63f1440 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f1428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f1408 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634a63f1498 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f1480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f1460 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634a63f1510 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5634a63f14b8 <col:3> 'int' lvalue Var 0x5634a63ef808 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5634a63f14f8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634a63f14d8 <col:25> 'int' lvalue Var 0x5634a63efff0 'y' 'int'
|   |-CallExpr 0x5634a63f1568 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f1550 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f1530 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634a63f15c0 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f15a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f1588 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5634a63f1618 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f1600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f15e0 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634a63f1670 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f1658 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f1638 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634a63f1728 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5634a63f1690 <col:3> 'int' lvalue Var 0x5634a63ef6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5634a63f1708 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5634a63f16f0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5634a63f16b0 <col:22> 'int' lvalue Var 0x5634a63ef6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5634a63f16d0 <col:41> 'int' 1
|   |-CallExpr 0x5634a63f1780 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f1768 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f1748 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5634a63f17f8 <line:740:3, col:36>
|     `-CallExpr 0x5634a63f17d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5634a63f17c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5634a63f17a0 <col:10> 'void *(void)' Function 0x5634a6395e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5634a63f1928 prev 0x5634a63ef210 <line:742:1, line:761:1> line:742:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5634a63f1890 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5634a63f2b58 <line:743:1, line:761:1>
|   |-CallExpr 0x5634a63f1a08 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f19f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f19d0 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634a63f1a68 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5634a63f1a28 <col:3> 'int' lvalue Var 0x5634a63efff0 'y' 'int'
|   | `-IntegerLiteral 0x5634a63f1a48 <col:7> 'int' 1
|   |-CallExpr 0x5634a63f1ac0 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f1aa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f1a88 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634a63f1b18 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f1b00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f1ae0 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634a63f1b78 <line:748:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5634a63f1b38 <col:3> 'int' lvalue Var 0x5634a63f0110 'z' 'int'
|   | `-IntegerLiteral 0x5634a63f1b58 <col:7> 'int' 1
|   |-CallExpr 0x5634a63f1bd0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f1bb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f1b98 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634a63f1c28 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f1c10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f1bf0 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634a63f1f10 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5634a63f1c48 <col:3> 'int' lvalue Var 0x5634a63f0110 'z' 'int'
|   | `-ConditionalOperator 0x5634a63f1ee0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5634a63f1d08 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5634a63f1cc0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5634a63f1ca8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5634a63f1c68 <col:7> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5634a63f1cf0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5634a63f1cd8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5634a63f1c88 <col:25> '_Bool' lvalue Var 0x5634a63f0408 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5634a63f1ec8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5634a63f1d28 <col:42> 'int' lvalue Var 0x5634a63f0850 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5634a63f1ea8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5634a63f1e78 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5634a63f1de8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5634a63f1da0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5634a63f1d88 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5634a63f1d48 <col:55> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5634a63f1dd0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5634a63f1db8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5634a63f1d68 <col:73> '_Bool' lvalue Var 0x5634a63f0660 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5634a63f1e48 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5634a63f1e08 <col:90> 'int' lvalue Var 0x5634a63f0948 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5634a63f1e60 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634a63f1e28 <col:102> 'int' lvalue Var 0x5634a63f0110 'z' 'int'
|   |-BinaryOperator 0x5634a63f2138 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5634a63f1f30 <col:3> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5634a63f2120 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634a63f20f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5634a63f2010 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5634a63f1fc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5634a63f1fb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5634a63f1f50 <col:20> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5634a63f1ff8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5634a63f1fe0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5634a63f1f90 <col:38> '_Bool' lvalue Var 0x5634a63f0408 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5634a63f20a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634a63f2060 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634a63f2030 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5634a63f20d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634a63f20c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634a63f2088 <col:66> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5634a63f2420 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5634a63f2158 <col:3> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5634a63f2408 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634a63f23d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5634a63f22f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5634a63f2218 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5634a63f21d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5634a63f21b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5634a63f2178 <col:20> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5634a63f2200 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5634a63f21e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5634a63f2198 <col:38> '_Bool' lvalue Var 0x5634a63f0408 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5634a63f22d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5634a63f2290 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5634a63f2278 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5634a63f2238 <col:56> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5634a63f22c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5634a63f22a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5634a63f2258 <col:74> '_Bool' lvalue Var 0x5634a63f0660 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5634a63f2390 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634a63f2348 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634a63f2318 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5634a63f23c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634a63f23a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634a63f2370 <col:102> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5634a63f2628 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5634a63f2440 <col:3> '_Bool' lvalue Var 0x5634a63f0408 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5634a63f2610 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634a63f25e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5634a63f2500 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5634a63f24b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5634a63f24a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5634a63f2460 <col:20> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5634a63f24e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5634a63f24d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5634a63f2480 <col:38> '_Bool' lvalue Var 0x5634a63f0408 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5634a63f2598 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634a63f2550 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634a63f2520 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5634a63f25c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634a63f25b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634a63f2578 <col:66> '_Bool' lvalue Var 0x5634a63f0408 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5634a63f2910 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5634a63f2648 <col:3> '_Bool' lvalue Var 0x5634a63f0660 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5634a63f28f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634a63f28c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5634a63f27e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5634a63f2708 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5634a63f26c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5634a63f26a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5634a63f2668 <col:20> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5634a63f26f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5634a63f26d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5634a63f2688 <col:38> '_Bool' lvalue Var 0x5634a63f0408 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5634a63f27c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5634a63f2780 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5634a63f2768 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5634a63f2728 <col:56> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5634a63f27b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5634a63f2798 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5634a63f2748 <col:74> '_Bool' lvalue Var 0x5634a63f0660 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5634a63f2880 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634a63f2838 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634a63f2808 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5634a63f28b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634a63f2898 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634a63f2860 <col:102> '_Bool' lvalue Var 0x5634a63f0660 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5634a63f2968 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f2950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f2930 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634a63f29c0 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f29a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f2988 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634a63f2a78 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5634a63f29e0 <col:3> 'int' lvalue Var 0x5634a63ef6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5634a63f2a58 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5634a63f2a40 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5634a63f2a00 <col:22> 'int' lvalue Var 0x5634a63ef6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5634a63f2a20 <col:41> 'int' 1
|   |-CallExpr 0x5634a63f2ad0 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f2ab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f2a98 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5634a63f2b48 <line:760:3, col:36>
|     `-CallExpr 0x5634a63f2b28 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5634a63f2b10 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5634a63f2af0 <col:10> 'void *(void)' Function 0x5634a6395e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5634a63f2ca0 prev 0x5634a63ef368 <line:762:1, line:797:1> line:762:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x5634a63f2c08 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5634a63f4730 <line:763:1, line:797:1>
|   |-CallExpr 0x5634a63f2d80 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f2d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f2d48 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634a63f2df8 <line:765:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5634a63f2da0 <col:3> 'int' lvalue Var 0x5634a63f0948 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5634a63f2de0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634a63f2dc0 <col:15> 'int' lvalue Var 0x5634a63f0850 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5634a63f2e58 <line:766:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5634a63f2e18 <col:3> 'int' lvalue Var 0x5634a63f0850 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x5634a63f2e38 <col:15> 'int' 2
|   |-BinaryOperator 0x5634a63f2ed0 <line:767:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5634a63f2e78 <col:3> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5634a63f2eb8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634a63f2e98 <col:20> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5634a63f2f68 <line:768:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5634a63f2ef0 <col:3> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5634a63f2f40 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5634a63f2f10 <col:27> 'int' 1
|   |-CallExpr 0x5634a63f3108 <line:769:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5634a63f30f0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5634a63f2fa0 <col:3> 'void (int)' Function 0x5634a63960d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5634a63f30a0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5634a63f3080 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5634a63f3060 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5634a63f3018 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5634a63f3000 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5634a63f2fc0 <col:23> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5634a63f3048 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5634a63f3030 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5634a63f2fe0 <col:41> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5634a63f3188 <line:770:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5634a63f3130 <col:3> '_Bool' lvalue Var 0x5634a63f04f8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5634a63f3170 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634a63f3150 <col:20> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5634a63f3200 <line:771:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5634a63f31a8 <col:3> '_Bool' lvalue Var 0x5634a63f0570 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5634a63f31e8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634a63f31c8 <col:20> '_Bool' lvalue Var 0x5634a63f0318 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5634a63f3278 <line:772:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5634a63f3220 <col:3> '_Bool' lvalue Var 0x5634a63f05e8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5634a63f3260 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634a63f3240 <col:20> '_Bool' lvalue Var 0x5634a63f0390 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5634a63f32f0 <line:773:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5634a63f3298 <col:3> '_Bool' lvalue Var 0x5634a63f0660 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5634a63f32d8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634a63f32b8 <col:20> '_Bool' lvalue Var 0x5634a63f0408 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5634a63f3368 <line:774:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5634a63f3310 <col:3> '_Bool' lvalue Var 0x5634a63f06d8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5634a63f3350 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634a63f3330 <col:20> '_Bool' lvalue Var 0x5634a63f0480 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5634a63f3400 <line:775:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5634a63f3388 <col:3> '_Bool' lvalue Var 0x5634a63f0480 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x5634a63f33d8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5634a63f33a8 <col:27> 'int' 1
|   |-CallExpr 0x5634a63f3458 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f3440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f3420 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634a63f34b0 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f3498 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f3478 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634a63f3510 <line:778:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5634a63f34d0 <col:3> 'int' lvalue Var 0x5634a63efb68 'a' 'int'
|   | `-IntegerLiteral 0x5634a63f34f0 <col:7> 'int' 1
|   |-CallExpr 0x5634a63f3568 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f3550 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f3530 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634a63f35c0 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f35a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f3588 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634a63f3638 <line:781:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5634a63f35e0 <col:3> 'int' lvalue Var 0x5634a63ef928 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5634a63f3620 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634a63f3600 <col:25> 'int' lvalue Var 0x5634a63efb68 'a' 'int'
|   |-CallExpr 0x5634a63f3690 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f3678 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f3658 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634a63f36e8 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f36d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f36b0 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634a63f3760 <line:784:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5634a63f3708 <col:3> 'int' lvalue Var 0x5634a63efa48 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x5634a63f3748 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634a63f3728 <col:25> 'int' lvalue Var 0x5634a63efc88 'b' 'int'
|   |-CallExpr 0x5634a63f37b8 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f37a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f3780 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634a63f3810 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f37f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f37d8 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634a63f3af8 <line:787:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5634a63f3830 <col:3> 'int' lvalue Var 0x5634a63f0110 'z' 'int'
|   | `-ConditionalOperator 0x5634a63f3ac8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5634a63f38f0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5634a63f38a8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5634a63f3890 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5634a63f3850 <col:7> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5634a63f38d8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5634a63f38c0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5634a63f3870 <col:25> '_Bool' lvalue Var 0x5634a63f0480 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5634a63f3ab0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5634a63f3910 <col:42> 'int' lvalue Var 0x5634a63f0850 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5634a63f3a90 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5634a63f3a60 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5634a63f39d0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5634a63f3988 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5634a63f3970 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5634a63f3930 <col:55> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5634a63f39b8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5634a63f39a0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5634a63f3950 <col:73> '_Bool' lvalue Var 0x5634a63f06d8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5634a63f3a30 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5634a63f39f0 <col:90> 'int' lvalue Var 0x5634a63f0948 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5634a63f3a48 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634a63f3a10 <col:102> 'int' lvalue Var 0x5634a63f0110 'z' 'int'
|   |-BinaryOperator 0x5634a63f3d00 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5634a63f3b18 <col:3> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5634a63f3ce8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634a63f3cb8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5634a63f3bd8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5634a63f3b90 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5634a63f3b78 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5634a63f3b38 <col:20> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5634a63f3bc0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5634a63f3ba8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5634a63f3b58 <col:38> '_Bool' lvalue Var 0x5634a63f0480 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5634a63f3c70 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634a63f3c28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634a63f3bf8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5634a63f3ca0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634a63f3c88 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634a63f3c50 <col:66> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5634a63f3ff8 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5634a63f3d20 <col:3> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5634a63f3fe0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634a63f3fb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5634a63f3ec0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5634a63f3de0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5634a63f3d98 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5634a63f3d80 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5634a63f3d40 <col:20> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5634a63f3dc8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5634a63f3db0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5634a63f3d60 <col:38> '_Bool' lvalue Var 0x5634a63f0480 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5634a63f3ea0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5634a63f3e58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5634a63f3e40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5634a63f3e00 <col:56> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5634a63f3e88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5634a63f3e70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5634a63f3e20 <col:74> '_Bool' lvalue Var 0x5634a63f06d8 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5634a63f3f58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634a63f3f10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634a63f3ee0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5634a63f3f88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634a63f3f70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634a63f3f38 <col:102> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5634a63f4200 <line:790:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5634a63f4018 <col:3> '_Bool' lvalue Var 0x5634a63f0480 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5634a63f41e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634a63f41b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5634a63f40d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5634a63f4090 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5634a63f4078 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5634a63f4038 <col:20> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5634a63f40c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5634a63f40a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5634a63f4058 <col:38> '_Bool' lvalue Var 0x5634a63f0480 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5634a63f4170 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634a63f4128 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634a63f40f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5634a63f41a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634a63f4188 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634a63f4150 <col:66> '_Bool' lvalue Var 0x5634a63f0480 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5634a63f44e8 <line:791:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5634a63f4220 <col:3> '_Bool' lvalue Var 0x5634a63f06d8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5634a63f44d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634a63f44a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5634a63f43c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5634a63f42e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5634a63f4298 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5634a63f4280 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5634a63f4240 <col:20> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5634a63f42c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5634a63f42b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5634a63f4260 <col:38> '_Bool' lvalue Var 0x5634a63f0480 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5634a63f43a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5634a63f4358 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5634a63f4340 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5634a63f4300 <col:56> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5634a63f4388 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5634a63f4370 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5634a63f4320 <col:74> '_Bool' lvalue Var 0x5634a63f06d8 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5634a63f4458 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634a63f4410 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634a63f43e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5634a63f4488 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634a63f4470 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634a63f4438 <col:102> '_Bool' lvalue Var 0x5634a63f06d8 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x5634a63f4540 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f4528 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f4508 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634a63f4598 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634a63f4580 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f4560 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634a63f4650 <line:794:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5634a63f45b8 <col:3> 'int' lvalue Var 0x5634a63ef6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5634a63f4630 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5634a63f4618 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5634a63f45d8 <col:22> 'int' lvalue Var 0x5634a63ef6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5634a63f45f8 <col:41> 'int' 1
|   |-CallExpr 0x5634a63f46a8 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634a63f4690 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634a63f4670 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5634a63f4720 <line:796:3, col:36>
|     `-CallExpr 0x5634a63f4700 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5634a63f46e8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5634a63f46c8 <col:10> 'void *(void)' Function 0x5634a6395e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5634a63f4868 prev 0x5634a63ef430 <line:798:1, line:800:1> line:798:6 fence 'void ()'
| `-CompoundStmt 0x5634a63f4908 <line:799:1, line:800:1>
|-FunctionDecl 0x5634a63f4938 prev 0x5634a63ef4f0 <line:801:1, line:803:1> line:801:6 isync 'void ()'
| `-CompoundStmt 0x5634a63f49d8 <line:802:1, line:803:1>
|-FunctionDecl 0x5634a63f4a08 prev 0x5634a63ef5b0 <line:804:1, line:806:1> line:804:6 lwfence 'void ()'
| `-CompoundStmt 0x5634a63f4aa8 <line:805:1, line:806:1>
`-FunctionDecl 0x5634a63f4b18 <line:807:1, line:846:1> line:807:5 main 'int ()'
  `-CompoundStmt 0x5634a63f94a0 <line:808:1, line:846:1>
    |-DeclStmt 0x5634a63f4c30 <line:809:3, col:18>
    | `-VarDecl 0x5634a63f4bc8 <col:3, col:13> col:13 used t1175 'pthread_t':'unsigned long'
    |-CallExpr 0x5634a63f4e38 <line:810:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5634a63f4e20 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634a63f4c48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5634a63d68f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5634a63f4c88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5634a63f4c68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5634a63f4bc8 't1175' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5634a63f4e78 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5634a63f4d00 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5634a63f4cd8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5634a63f4ca0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5634a63f4e90 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634a63f4d20 <col:39> 'void *(void *)' Function 0x5634a63f0bc8 'P0' 'void *(void *)'
    | `-ParenExpr 0x5634a63f4da0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5634a63f4d78 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5634a63f4d40 <col:52> 'int' 0
    |-DeclStmt 0x5634a63f4f20 <line:811:3, col:18>
    | `-VarDecl 0x5634a63f4eb8 <col:3, col:13> col:13 used t1176 'pthread_t':'unsigned long'
    |-CallExpr 0x5634a63f50d8 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5634a63f50c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634a63f4f38 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5634a63d68f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5634a63f4f78 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5634a63f4f58 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5634a63f4eb8 't1176' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5634a63f5118 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5634a63f5000 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5634a63f4fd8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5634a63f4f90 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5634a63f5130 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634a63f5020 <col:39> 'void *(void *)' Function 0x5634a63f12a8 'P1' 'void *(void *)'
    | `-ParenExpr 0x5634a63f50a0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5634a63f5078 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5634a63f5040 <col:52> 'int' 0
    |-DeclStmt 0x5634a63f51c0 <line:813:3, col:18>
    | `-VarDecl 0x5634a63f5158 <col:3, col:13> col:13 used t1177 'pthread_t':'unsigned long'
    |-CallExpr 0x5634a63f5368 <line:814:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5634a63f5350 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634a63f51d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5634a63d68f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5634a63f5218 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5634a63f51f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5634a63f5158 't1177' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5634a63f53a8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5634a63f5290 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5634a63f5268 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5634a63f5230 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5634a63f53c0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634a63f52b0 <col:39> 'void *(void *)' Function 0x5634a63f1928 'P2' 'void *(void *)'
    | `-ParenExpr 0x5634a63f5330 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5634a63f5308 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5634a63f52d0 <col:52> 'int' 0
    |-DeclStmt 0x5634a63f5450 <line:815:3, col:18>
    | `-VarDecl 0x5634a63f53e8 <col:3, col:13> col:13 used t1178 'pthread_t':'unsigned long'
    |-CallExpr 0x5634a63f55f8 <line:816:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5634a63f55e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634a63f5468 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5634a63d68f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5634a63f54a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5634a63f5488 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5634a63f53e8 't1178' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5634a63f5638 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5634a63f5520 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5634a63f54f8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5634a63f54c0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5634a63f5650 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634a63f5540 <col:39> 'void *(void *)' Function 0x5634a63f2ca0 'P3' 'void *(void *)'
    | `-ParenExpr 0x5634a63f55c0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5634a63f5598 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5634a63f5560 <col:52> 'int' 0
    |-CallExpr 0x5634a63f56a0 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5634a63f5688 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5634a63f5668 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5634a63f5770 <line:818:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5634a63f56c0 <col:3> '_Bool' lvalue Var 0x5634a63efd20 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5634a63f5758 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5634a63f5738 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5634a63f5720 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5634a63f56e0 <col:21> 'int' lvalue Var 0x5634a63ef6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5634a63f5700 <col:41> 'int' 4
    |-CallExpr 0x5634a63f57c8 <line:819:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5634a63f57b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5634a63f5790 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5634a63f5840 <line:820:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5634a63f5828 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634a63f57e8 <col:3> 'void (int)' Function 0x5634a6395ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5634a63f5880 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5634a63f5868 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5634a63f5808 <col:21> '_Bool' lvalue Var 0x5634a63efd20 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5634a63f58d0 <line:821:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5634a63f58b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5634a63f5898 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5634a63f5bb8 <line:822:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5634a63f58f0 <col:3> 'int' lvalue Var 0x5634a63f0110 'z' 'int'
    | `-ConditionalOperator 0x5634a63f5b88 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5634a63f59b0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5634a63f5968 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5634a63f5950 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5634a63f5910 <col:7> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5634a63f5998 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5634a63f5980 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5634a63f5930 <col:25> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5634a63f5b70 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5634a63f59d0 <col:42> 'int' lvalue Var 0x5634a63f0850 'z$w_buff0' 'int'
    |   `-ParenExpr 0x5634a63f5b50 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5634a63f5b20 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5634a63f5a90 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5634a63f5a48 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5634a63f5a30 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5634a63f59f0 <col:55> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5634a63f5a78 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5634a63f5a60 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5634a63f5a10 <col:73> '_Bool' lvalue Var 0x5634a63f04f8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5634a63f5af0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5634a63f5ab0 <col:90> 'int' lvalue Var 0x5634a63f0948 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5634a63f5b08 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5634a63f5ad0 <col:102> 'int' lvalue Var 0x5634a63f0110 'z' 'int'
    |-BinaryOperator 0x5634a63f5dc0 <line:823:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5634a63f5bd8 <col:3> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5634a63f5da8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5634a63f5d78 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5634a63f5c98 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5634a63f5c50 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5634a63f5c38 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5634a63f5bf8 <col:20> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5634a63f5c80 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5634a63f5c68 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5634a63f5c18 <col:38> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5634a63f5d30 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5634a63f5ce8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5634a63f5cb8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5634a63f5d60 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5634a63f5d48 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5634a63f5d10 <col:66> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5634a63f60b8 <line:824:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5634a63f5de0 <col:3> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5634a63f60a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5634a63f6070 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5634a63f5f80 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5634a63f5ea0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5634a63f5e58 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5634a63f5e40 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5634a63f5e00 <col:20> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5634a63f5e88 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5634a63f5e70 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5634a63f5e20 <col:38> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5634a63f5f60 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5634a63f5f18 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5634a63f5f00 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5634a63f5ec0 <col:56> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5634a63f5f48 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5634a63f5f30 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5634a63f5ee0 <col:74> '_Bool' lvalue Var 0x5634a63f04f8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5634a63f6028 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5634a63f5fe0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5634a63f5fa0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5634a63f6058 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5634a63f6040 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5634a63f6008 <col:102> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5634a63f62c0 <line:825:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5634a63f60d8 <col:3> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5634a63f62a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5634a63f6278 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5634a63f6198 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5634a63f6150 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5634a63f6138 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5634a63f60f8 <col:20> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5634a63f6180 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5634a63f6168 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5634a63f6118 <col:38> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5634a63f6230 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5634a63f61e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5634a63f61b8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5634a63f6260 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5634a63f6248 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5634a63f6210 <col:66> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5634a63f65a8 <line:826:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5634a63f62e0 <col:3> '_Bool' lvalue Var 0x5634a63f04f8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5634a63f6590 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5634a63f6560 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5634a63f6480 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5634a63f63a0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5634a63f6358 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5634a63f6340 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5634a63f6300 <col:20> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5634a63f6388 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5634a63f6370 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5634a63f6320 <col:38> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5634a63f6460 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5634a63f6418 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5634a63f6400 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5634a63f63c0 <col:56> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5634a63f6448 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5634a63f6430 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5634a63f63e0 <col:74> '_Bool' lvalue Var 0x5634a63f04f8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5634a63f6518 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5634a63f64d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5634a63f64a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5634a63f6548 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5634a63f6530 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5634a63f64f8 <col:102> '_Bool' lvalue Var 0x5634a63f04f8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5634a63f6600 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5634a63f65e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5634a63f65c8 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5634a63f6658 <line:828:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5634a63f6640 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5634a63f6620 <col:3> 'void ()' Function 0x5634a6396350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5634a63f6708 <line:829:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5634a63f6678 <col:3> '_Bool' lvalue Var 0x5634a63f0a38 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x5634a63f66f0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5634a63f66d0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5634a63f66b8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5634a63f6698 <col:19> 'void *(void)' Function 0x5634a6395e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5634a63f67b8 <line:830:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5634a63f6728 <col:3> '_Bool' lvalue Var 0x5634a63f0ab0 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x5634a63f67a0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5634a63f6780 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5634a63f6768 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5634a63f6748 <col:19> 'void *(void)' Function 0x5634a6395e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5634a63f6830 <line:831:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x5634a63f67d8 <col:3> '_Bool' lvalue Var 0x5634a63f01a8 'z$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x5634a63f6818 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x5634a63f67f8 <col:21> '_Bool' lvalue Var 0x5634a63f0ab0 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x5634a63f68a8 <line:832:3, col:15> 'int' '='
    | |-DeclRefExpr 0x5634a63f6850 <col:3> 'int' lvalue Var 0x5634a63f0228 'z$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x5634a63f6890 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5634a63f6870 <col:15> 'int' lvalue Var 0x5634a63f0110 'z' 'int'
    |-BinaryOperator 0x5634a63f6ce0 <line:833:3, col:162> 'int' '='
    | |-DeclRefExpr 0x5634a63f68c8 <col:3> 'int' lvalue Var 0x5634a63f0110 'z' 'int'
    | `-ConditionalOperator 0x5634a63f6cb0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x5634a63f6ad8 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x5634a63f69f8 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x5634a63f6920 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x5634a63f6908 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x5634a63f68e8 <col:8> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x5634a63f69d8 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x5634a63f6970 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x5634a63f6958 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x5634a63f6938 <col:27> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x5634a63f69c0 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x5634a63f69a8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x5634a63f6988 <col:46> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x5634a63f6ab8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x5634a63f6a50 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x5634a63f6a38 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5634a63f6a18 <col:65> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x5634a63f6aa0 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x5634a63f6a88 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5634a63f6a68 <col:84> '_Bool' lvalue Var 0x5634a63f04f8 'z$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5634a63f6c98 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5634a63f6af8 <col:101> 'int' lvalue Var 0x5634a63f0110 'z' 'int'
    |   `-ParenExpr 0x5634a63f6c78 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x5634a63f6c48 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x5634a63f6bb8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5634a63f6b70 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5634a63f6b58 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5634a63f6b18 <col:106> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5634a63f6ba0 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5634a63f6b88 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5634a63f6b38 <col:124> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5634a63f6c18 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5634a63f6bd8 <col:141> 'int' lvalue Var 0x5634a63f0850 'z$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x5634a63f6c30 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5634a63f6bf8 <col:153> 'int' lvalue Var 0x5634a63f0948 'z$w_buff1' 'int'
    |-BinaryOperator 0x5634a63f7200 <line:834:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5634a63f6d00 <col:3> 'int' lvalue Var 0x5634a63f0850 'z$w_buff0' 'int'
    | `-ConditionalOperator 0x5634a63f71d0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5634a63f71a0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5634a63f7188 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5634a63f6d20 <col:15> '_Bool' lvalue Var 0x5634a63f0ab0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5634a63f71b8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5634a63f6d40 <col:31> 'int' lvalue Var 0x5634a63f0850 'z$w_buff0' 'int'
    |   `-ParenExpr 0x5634a63f7168 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5634a63f7138 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5634a63f6f50 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5634a63f6e70 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5634a63f6d98 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5634a63f6d80 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5634a63f6d60 <col:45> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5634a63f6e50 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5634a63f6de8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5634a63f6dd0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5634a63f6db0 <col:64> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5634a63f6e38 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5634a63f6e20 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5634a63f6e00 <col:83> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5634a63f6f30 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5634a63f6ec8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5634a63f6eb0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5634a63f6e90 <col:102> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5634a63f6f18 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5634a63f6f00 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5634a63f6ee0 <col:121> '_Bool' lvalue Var 0x5634a63f04f8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5634a63f7120 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5634a63f6f70 <col:138> 'int' lvalue Var 0x5634a63f0850 'z$w_buff0' 'int'
    |       `-ParenExpr 0x5634a63f7100 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5634a63f70d0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5634a63f7040 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5634a63f6ff8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5634a63f6fe0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5634a63f6f90 <col:151> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5634a63f7028 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5634a63f7010 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5634a63f6fb0 <col:169> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5634a63f70a0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5634a63f7060 <col:186> 'int' lvalue Var 0x5634a63f0850 'z$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x5634a63f70b8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5634a63f7080 <col:198> 'int' lvalue Var 0x5634a63f0850 'z$w_buff0' 'int'
    |-BinaryOperator 0x5634a63f7710 <line:835:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5634a63f7220 <col:3> 'int' lvalue Var 0x5634a63f0948 'z$w_buff1' 'int'
    | `-ConditionalOperator 0x5634a63f76e0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5634a63f76b0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5634a63f7698 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5634a63f7240 <col:15> '_Bool' lvalue Var 0x5634a63f0ab0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5634a63f76c8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5634a63f7260 <col:31> 'int' lvalue Var 0x5634a63f0948 'z$w_buff1' 'int'
    |   `-ParenExpr 0x5634a63f7678 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5634a63f7648 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5634a63f7470 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5634a63f7390 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5634a63f72b8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5634a63f72a0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5634a63f7280 <col:45> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5634a63f7370 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5634a63f7308 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5634a63f72f0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5634a63f72d0 <col:64> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5634a63f7358 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5634a63f7340 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5634a63f7320 <col:83> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5634a63f7450 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5634a63f73e8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5634a63f73d0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5634a63f73b0 <col:102> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5634a63f7438 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5634a63f7420 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5634a63f7400 <col:121> '_Bool' lvalue Var 0x5634a63f04f8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5634a63f7630 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5634a63f7490 <col:138> 'int' lvalue Var 0x5634a63f0948 'z$w_buff1' 'int'
    |       `-ParenExpr 0x5634a63f7610 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5634a63f75e0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5634a63f7550 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5634a63f7508 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5634a63f74f0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5634a63f74b0 <col:151> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5634a63f7538 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5634a63f7520 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5634a63f74d0 <col:169> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5634a63f75b0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5634a63f7570 <col:186> 'int' lvalue Var 0x5634a63f0948 'z$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x5634a63f75c8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5634a63f7590 <col:198> 'int' lvalue Var 0x5634a63f0948 'z$w_buff1' 'int'
    |-BinaryOperator 0x5634a63f7cb8 <line:836:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5634a63f7730 <col:3> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5634a63f7ca0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5634a63f7c70 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5634a63f7c28 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5634a63f7c10 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5634a63f7750 <col:20> '_Bool' lvalue Var 0x5634a63f0ab0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5634a63f7c58 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5634a63f7c40 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5634a63f7770 <col:36> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x5634a63f7bf0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5634a63f7bc0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5634a63f7980 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5634a63f78a0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5634a63f77c8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5634a63f77b0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5634a63f7790 <col:55> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5634a63f7880 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5634a63f7818 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5634a63f7800 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5634a63f77e0 <col:74> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5634a63f7868 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5634a63f7850 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5634a63f7830 <col:93> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5634a63f7960 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5634a63f78f8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5634a63f78e0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5634a63f78c0 <col:112> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5634a63f7948 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5634a63f7930 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5634a63f7910 <col:131> '_Bool' lvalue Var 0x5634a63f04f8 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5634a63f7ba8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5634a63f7b90 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5634a63f79a0 <col:148> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x5634a63f7b70 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5634a63f7b40 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5634a63f7a60 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5634a63f7a18 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5634a63f7a00 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5634a63f79c0 <col:166> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5634a63f7a48 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5634a63f7a30 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5634a63f79e0 <col:184> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5634a63f7af8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5634a63f7ab0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5634a63f7a80 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5634a63f7b28 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5634a63f7b10 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5634a63f7ad8 <col:212> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5634a63f8298 <line:837:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5634a63f7cd8 <col:3> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5634a63f8280 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5634a63f8250 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5634a63f8208 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5634a63f81f0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5634a63f7cf8 <col:20> '_Bool' lvalue Var 0x5634a63f0ab0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5634a63f8238 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5634a63f8220 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5634a63f7d18 <col:36> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x5634a63f81d0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5634a63f81a0 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5634a63f7f28 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5634a63f7e48 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5634a63f7d70 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5634a63f7d58 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5634a63f7d38 <col:55> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5634a63f7e28 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5634a63f7dc0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5634a63f7da8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5634a63f7d88 <col:74> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5634a63f7e10 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5634a63f7df8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5634a63f7dd8 <col:93> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5634a63f7f08 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5634a63f7ea0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5634a63f7e88 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5634a63f7e68 <col:112> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5634a63f7ef0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5634a63f7ed8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5634a63f7eb8 <col:131> '_Bool' lvalue Var 0x5634a63f04f8 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5634a63f8188 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5634a63f8170 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5634a63f7f48 <col:148> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x5634a63f8150 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5634a63f8120 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5634a63f8020 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5634a63f7fc0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5634a63f7fa8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5634a63f7f68 <col:166> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5634a63f8008 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5634a63f7ff0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5634a63f7f88 <col:184> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5634a63f80f0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5634a63f8070 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5634a63f8040 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5634a63f8108 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5634a63f80c8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5634a63f8098 <col:219> 'int' 0
    |-BinaryOperator 0x5634a63f8840 <line:838:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5634a63f82b8 <col:3> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5634a63f8828 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5634a63f87f8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5634a63f87b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5634a63f8798 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5634a63f82d8 <col:20> '_Bool' lvalue Var 0x5634a63f0ab0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5634a63f87e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5634a63f87c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5634a63f82f8 <col:36> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x5634a63f8778 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5634a63f8748 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5634a63f8508 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5634a63f8428 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5634a63f8350 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5634a63f8338 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5634a63f8318 <col:55> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5634a63f8408 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5634a63f83a0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5634a63f8388 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5634a63f8368 <col:74> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5634a63f83f0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5634a63f83d8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5634a63f83b8 <col:93> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5634a63f84e8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5634a63f8480 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5634a63f8468 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5634a63f8448 <col:112> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5634a63f84d0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5634a63f84b8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5634a63f8498 <col:131> '_Bool' lvalue Var 0x5634a63f04f8 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5634a63f8730 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5634a63f8718 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5634a63f8528 <col:148> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x5634a63f86f8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5634a63f86c8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5634a63f85e8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5634a63f85a0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5634a63f8588 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5634a63f8548 <col:166> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5634a63f85d0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5634a63f85b8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5634a63f8568 <col:184> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5634a63f8680 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5634a63f8638 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5634a63f8608 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5634a63f86b0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5634a63f8698 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5634a63f8660 <col:212> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5634a63f8e08 <line:839:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5634a63f8860 <col:3> '_Bool' lvalue Var 0x5634a63f04f8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5634a63f8df0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5634a63f8dc0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5634a63f8d78 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5634a63f8d60 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5634a63f8880 <col:20> '_Bool' lvalue Var 0x5634a63f0ab0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5634a63f8da8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5634a63f8d90 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5634a63f88a0 <col:36> '_Bool' lvalue Var 0x5634a63f04f8 'z$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x5634a63f8d40 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5634a63f8d10 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5634a63f8ab0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5634a63f89d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5634a63f88f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5634a63f88e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5634a63f88c0 <col:55> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5634a63f89b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5634a63f8948 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5634a63f8930 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5634a63f8910 <col:74> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5634a63f8998 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5634a63f8980 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5634a63f8960 <col:93> '_Bool' lvalue Var 0x5634a63f09c0 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5634a63f8a90 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5634a63f8a28 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5634a63f8a10 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5634a63f89f0 <col:112> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5634a63f8a78 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5634a63f8a60 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5634a63f8a40 <col:131> '_Bool' lvalue Var 0x5634a63f04f8 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5634a63f8cf8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5634a63f8ce0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5634a63f8ad0 <col:148> '_Bool' lvalue Var 0x5634a63f04f8 'z$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x5634a63f8cc0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5634a63f8c90 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5634a63f8b90 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5634a63f8b48 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5634a63f8b30 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5634a63f8af0 <col:166> '_Bool' lvalue Var 0x5634a63f08c8 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5634a63f8b78 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5634a63f8b60 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5634a63f8b10 <col:184> '_Bool' lvalue Var 0x5634a63f02a0 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5634a63f8c60 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5634a63f8be0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5634a63f8bb0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5634a63f8c78 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5634a63f8c38 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5634a63f8c08 <col:219> 'int' 0
    |-BinaryOperator 0x5634a63f9180 <line:840:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x5634a63f8e28 <col:3> '_Bool' lvalue Var 0x5634a63efd98 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5634a63f9168 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5634a63f9150 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5634a63f9130 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x5634a63f9110 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x5634a63f9078 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x5634a63f8fd0 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x5634a63f8f38 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x5634a63f8ea0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5634a63f8e88 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5634a63f8e48 <col:23> 'int' lvalue Var 0x5634a63efe98 'x' 'int'
    |         | | | | `-IntegerLiteral 0x5634a63f8e68 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x5634a63f8f18 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5634a63f8f00 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5634a63f8ec0 <col:33> 'int' lvalue Var 0x5634a63f0110 'z' 'int'
    |         | | |   `-IntegerLiteral 0x5634a63f8ee0 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x5634a63f8fb0 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5634a63f8f98 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5634a63f8f58 <col:43> 'int' lvalue Var 0x5634a63ef808 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5634a63f8f78 <col:66> 'int' 0
    |         | `-BinaryOperator 0x5634a63f9058 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5634a63f9040 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5634a63f9000 <col:71> 'int' lvalue Var 0x5634a63ef928 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x5634a63f9020 <col:94> 'int' 1
    |         `-BinaryOperator 0x5634a63f90f0 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x5634a63f90d8 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5634a63f9098 <col:99> 'int' lvalue Var 0x5634a63efa48 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x5634a63f90b8 <col:122> 'int' 0
    |-BinaryOperator 0x5634a63f92b0 <line:841:3, col:37> 'int' '='
    | |-DeclRefExpr 0x5634a63f91a0 <col:3> 'int' lvalue Var 0x5634a63f0110 'z' 'int'
    | `-ConditionalOperator 0x5634a63f9280 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x5634a63f9238 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5634a63f9220 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5634a63f91c0 <col:7> '_Bool' lvalue Var 0x5634a63f01a8 'z$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x5634a63f9250 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5634a63f91e0 <col:25> 'int' lvalue Var 0x5634a63f0228 'z$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x5634a63f9268 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5634a63f9200 <col:37> 'int' lvalue Var 0x5634a63f0110 'z' 'int'
    |-BinaryOperator 0x5634a63f9348 <line:842:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x5634a63f92d0 <col:3> '_Bool' lvalue Var 0x5634a63f01a8 'z$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x5634a63f9320 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x5634a63f92f0 <col:28> 'int' 0
    |-CallExpr 0x5634a63f93a0 <line:843:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5634a63f9388 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5634a63f9368 <col:3> 'void ()' Function 0x5634a6396410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5634a63f9418 <line:844:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5634a63f9400 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634a63f93c0 <col:3> 'void (int)' Function 0x5634a63960d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5634a63f9458 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5634a63f9440 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5634a63f93e0 <col:21> '_Bool' lvalue Var 0x5634a63efd98 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5634a63f9490 <line:845:3, col:10>
      `-IntegerLiteral 0x5634a63f9470 <col:10> 'int' 0
