TranslationUnitDecl 0x559951b14f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x559951b15848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x559951b15520 '__int128'
|-TypedefDecl 0x559951b158b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x559951b15540 'unsigned __int128'
|-TypedefDecl 0x559951b15bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x559951b15990 'struct __NSConstantString_tag'
|   `-Record 0x559951b15910 '__NSConstantString_tag'
|-TypedefDecl 0x559951b15c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x559951b15c20 'char *'
|   `-BuiltinType 0x559951b15020 'char'
|-TypedefDecl 0x559951b54b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x559951b15f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x559951b15d40 'struct __va_list_tag'
|     `-Record 0x559951b15cc0 '__va_list_tag'
|-FunctionDecl 0x559951b54ca0 <pthread-wmm/mix051_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x559951b54bd0 <col:31> col:34 'int'
|-FunctionDecl 0x559951b54e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x559951b54f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x559951b550d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x559951b55048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x559951b55308 <col:40, col:99>
|   |-IfStmt 0x559951b552d8 <col:42, col:88>
|   | |-UnaryOperator 0x559951b551b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x559951b551a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x559951b55180 <col:47> 'int' lvalue ParmVar 0x559951b55048 'expression' 'int'
|   | `-CompoundStmt 0x559951b552c0 <col:59, col:88>
|   |   `-LabelStmt 0x559951b552a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x559951b55238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x559951b55220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x559951b551d0 <col:68> 'void () __attribute__((noreturn))' Function 0x559951b54f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x559951b552f0 <col:89>
|   `-ReturnStmt 0x559951b552f8 <col:91>
|-FunctionDecl 0x559951b55350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x559951b55410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x559951b55790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559951b554c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x559951b55548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x559951b555c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559951b55648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559951b55850 <line:10:22>
|-FunctionDecl 0x559951b7b8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559951b558c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x559951b55940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x559951b559c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559951b55a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559951b7b960 <line:13:22>
|-FunctionDecl 0x559951b7bc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559951b7b9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x559951b7ba50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x559951b7bad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x559951b7bcc8 <line:15:22>
|-TypedefDecl 0x559951b7bd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x559951b150e0 'unsigned char'
|-TypedefDecl 0x559951b7bda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x559951b15100 'unsigned short'
|-TypedefDecl 0x559951b7be18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x559951b15120 'unsigned int'
|-TypedefDecl 0x559951b7be88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-TypedefDecl 0x559951b7bef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x559951b15040 'signed char'
|-TypedefDecl 0x559951b7bf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x559951b150e0 'unsigned char'
|-TypedefDecl 0x559951b7bfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x559951b15060 'short'
|-TypedefDecl 0x559951b7c048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x559951b15100 'unsigned short'
|-TypedefDecl 0x559951b7c0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x559951b15080 'int'
|-TypedefDecl 0x559951b7c128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x559951b15120 'unsigned int'
|-TypedefDecl 0x559951b7c198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b7c208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-TypedefDecl 0x559951b7c278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b7c2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-TypedefDecl 0x559951b7c358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-TypedefDecl 0x559951b7c3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x559951b15120 'unsigned int'
|-TypedefDecl 0x559951b7c438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x559951b15120 'unsigned int'
|-TypedefDecl 0x559951b7c4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-TypedefDecl 0x559951b7c518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-TypedefDecl 0x559951b7c588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x559951b15120 'unsigned int'
|-TypedefDecl 0x559951b7c5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-TypedefDecl 0x559951b7c668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b7c6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b7c748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x559951b15080 'int'
|-RecordDecl 0x559951b7c7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x559951b7c918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x559951b7c9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x559951b7c970 'struct __fsid_t' sugar
|   `-RecordType 0x559951b7c820 '__fsid_t'
|     `-Record 0x559951b7c7a0 ''
|-TypedefDecl 0x559951b7ca58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b7cac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-TypedefDecl 0x559951b7cb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-TypedefDecl 0x559951b7cba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x559951b15120 'unsigned int'
|-TypedefDecl 0x559951b7cc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b7cc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x559951b15120 'unsigned int'
|-TypedefDecl 0x559951b7ccf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b7cd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x559951b15080 'int'
|-TypedefDecl 0x559951b7cdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x559951b15080 'int'
|-TypedefDecl 0x559951b7ce48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x559951b15080 'int'
|-TypedefDecl 0x559951b7ceb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x559951b157a0 'void *'
|   `-BuiltinType 0x559951b14fe0 'void'
|-TypedefDecl 0x559951b7cf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b7cf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b7d008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b7d078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-TypedefDecl 0x559951b7d0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-TypedefDecl 0x559951b7d158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-TypedefDecl 0x559951b7d1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-TypedefDecl 0x559951b7d238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b7d2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b7d318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b7d388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-TypedefDecl 0x559951b7d418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x559951b7d3e0 '__off64_t' sugar
|   |-Typedef 0x559951b7c6d8 '__off64_t'
|   `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b7d510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x559951b7d4d0 '__quad_t *'
|   `-TypedefType 0x559951b7d470 '__quad_t' sugar
|     |-Typedef 0x559951b7c278 '__quad_t'
|     `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b7d580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x559951b15c20 'char *'
|   `-BuiltinType 0x559951b15020 'char'
|-TypedefDecl 0x559951b7d5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b7d660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x559951b15120 'unsigned int'
|-FunctionDecl 0x559951b7d7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x559951b7d6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x559951b7dae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x559951b7dad8 <line:72:3, col:34>
|     `-CallExpr 0x559951b7da98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x559951b7da80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559951b7da10 <col:10> '<builtin fn type>' Function 0x559951b7d880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x559951b7dac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559951b7da30 <col:29> 'unsigned int' lvalue ParmVar 0x559951b7d6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x559951b7d880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x559951b7d920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x559951b7d990 <col:10> Implicit
| `-ConstAttr 0x559951b7d9e8 <col:10> Implicit
|-FunctionDecl 0x559951b7dc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x559951b7db38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x559951b7df58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x559951b7df48 <line:77:3, col:34>
|     `-CallExpr 0x559951b7df08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x559951b7def0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559951b7de78 <col:10> '<builtin fn type>' Function 0x559951b7dce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x559951b7df30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x559951b7de98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x559951b7db38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x559951b7dce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x559951b7dd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x559951b7ddf8 <col:10> Implicit
| `-ConstAttr 0x559951b7de50 <col:10> Implicit
|-TypedefDecl 0x559951b7df88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-TypedefDecl 0x559951b7e018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x559951b7dfe0 '__time_t' sugar
|   |-Typedef 0x559951b7cc18 '__time_t'
|   `-BuiltinType 0x559951b150a0 'long'
|-RecordDecl 0x559951b7e070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x559951b7e128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x559951b7e1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x559951b7e248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x559951b7e210 '__pid_t' sugar
|   |-Typedef 0x559951b7c748 '__pid_t'
|   `-BuiltinType 0x559951b15080 'int'
|-RecordDecl 0x559951b7e2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x559951b7e360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x559951b7e3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x559951b7e470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x559951b7e4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-RecordDecl 0x559951b7e530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x559951b7e7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x559951b808b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x559951b7e810 'struct cpu_set_t' sugar
|   `-RecordType 0x559951b7e5b0 'cpu_set_t'
|     `-Record 0x559951b7e530 ''
|-FunctionDecl 0x559951b80b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x559951b80958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559951b80a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x559951b80c38 <line:107:19>
|-FunctionDecl 0x559951b80e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x559951b80ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x559951b80eb8 <col:69>
|-FunctionDecl 0x559951b81030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x559951b80f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x559951b810d8 <col:64>
|-FunctionDecl 0x559951b81398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x559951b81140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559951b81278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559951b81448 <line:113:22>
|-FunctionDecl 0x559951b816c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x559951b814b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559951b815a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x559951b81778 <col:88>
|-FunctionDecl 0x559951b81a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559951b817e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559951b818c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x559951b81950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559951b81b50 <col:62>
|-FunctionDecl 0x559951b81cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x559951b81bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x559951b81d70 <col:63>
|-FunctionDecl 0x559951b81e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x559951b81f38 <col:47>
|-FunctionDecl 0x559951b82040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x559951b81fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559951b820e8 <col:69>
|-FunctionDecl 0x559951b821f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x559951b82158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559951b82298 <col:69>
|-FunctionDecl 0x559951b82558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559951b82300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559951b82438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x559951b82608 <col:88>
|-TypedefDecl 0x559951b82698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x559951b82660 '__clock_t' sugar
|   |-Typedef 0x559951b7ca58 '__clock_t'
|   `-BuiltinType 0x559951b150a0 'long'
|-TypedefDecl 0x559951b82728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x559951b826f0 '__clockid_t' sugar
|   |-Typedef 0x559951b7ce48 '__clockid_t'
|   `-BuiltinType 0x559951b15080 'int'
|-TypedefDecl 0x559951b827b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x559951b82780 '__timer_t' sugar
|   |-Typedef 0x559951b7ceb8 '__timer_t'
|   `-PointerType 0x559951b157a0 'void *'
|     `-BuiltinType 0x559951b14fe0 'void'
|-RecordDecl 0x559951b82810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x559951b828e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x559951b82950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x559951b829b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x559951b82a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x559951b82a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x559951b82af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x559951b82b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x559951b82bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x559951b82c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x559951b82c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x559951b82cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x559951b82d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x559951b82e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x559951b82e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x559951b82f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x559951b83100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x559951b831a0 <col:45>
|-FunctionDecl 0x559951b83380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x559951b83270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x559951b83428 <col:54>
|-FunctionDecl 0x559951b83628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x559951b83490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x559951b83508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x559951b836d8 <line:157:22>
| `-ConstAttr 0x559951b83730 <col:63>
|-FunctionDecl 0x559951b84560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559951b83828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559951b84608 <col:56>
|-FunctionDecl 0x559951b849b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x559951b84678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x559951b846f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559951b84770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x559951b84868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x559951b84a70 <col:54>
|-RecordDecl 0x559951b84ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x559951b84b78 parent 0x559951b14f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x559951b84dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x559951b84e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x559951b84ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x559951b84f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x559951b85038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x559951b85158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x559951b85100 'struct __locale_struct *'
|   `-ElaboratedType 0x559951b85090 'struct __locale_struct' sugar
|     `-RecordType 0x559951b84b50 'struct __locale_struct'
|       `-Record 0x559951b84ac8 '__locale_struct'
|-TypedefDecl 0x559951b85208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x559951b851d0 '__locale_t' sugar
|   |-Typedef 0x559951b85158 '__locale_t'
|   `-PointerType 0x559951b85100 'struct __locale_struct *'
|     `-ElaboratedType 0x559951b85090 'struct __locale_struct' sugar
|       `-RecordType 0x559951b84b50 'struct __locale_struct'
|         `-Record 0x559951b84ac8 '__locale_struct'
|-FunctionDecl 0x559951b85610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x559951b85278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x559951b852f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559951b85370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x559951b85400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559951b85478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x559951b856d8 <col:40>
|-FunctionDecl 0x559951b858c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559951b857a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x559951b85970 <col:66>
|-FunctionDecl 0x559951b85a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559951b859d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x559951b85b28 <col:69>
|-FunctionDecl 0x559951b85d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559951b85b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559951b85c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559951b85e08 <col:52>
|-FunctionDecl 0x559951b85fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559951b85e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559951b85f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559951b86060 <col:55>
|-FunctionDecl 0x559951b861f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x559951b860e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x559951b862a0 <col:62>
|-FunctionDecl 0x559951b86418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x559951b86308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x559951b864c0 <col:60>
|-FunctionDecl 0x559951b86718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559951b86578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559951b865f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x559951b867c8 <col:44>
|-FunctionDecl 0x559951b869d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559951b86830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559951b868b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x559951b86a88 <col:49>
|-VarDecl 0x559951b86b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x559951b86c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x559951b86c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x559951b86d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x559951b86e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x559951b86f20 <col:42>
|-VarDecl 0x559951b86f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x559951b87010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x559951b87198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x559951b87088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x559951b87240 <col:57>
|-FunctionDecl 0x559951b87350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559951b872c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559951b873f8 <col:56>
|-FunctionDecl 0x559951b88540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559951b87478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x559951b885e8 <col:59>
|-FunctionDecl 0x559951b886f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x559951b88658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x559951b88798 <col:48>
| `-ConstAttr 0x559951b887f0 <col:89>
|-FunctionDecl 0x559951b88a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559951b888a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x559951b88938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x559951b88cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559951b88b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559951b88bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x559951b88d68 <col:88>
|-FunctionDecl 0x559951b88f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559951b88dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559951b88e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x559951b88fb0 <col:88>
|-FunctionDecl 0x559951b891c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x559951b89018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559951b890a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x559951b89278 <line:208:22>
|-FunctionDecl 0x559951b895e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559951b892e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559951b89360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x559951b893f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x559951b89480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x559951b898e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x559951b896e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x559951b897c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x559951b89998 <col:85>
|-FunctionDecl 0x559951b89d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x559951b89a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559951b89b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x559951b89c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x559951b89e40 <col:52>
|-FunctionDecl 0x559951b89fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x559951b89ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559951b8a060 <col:61>
|-FunctionDecl 0x559951b8a560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x559951b8a0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559951b8a148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x559951b8a278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x559951b8a368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x559951b8a620 <col:62>
|-FunctionDecl 0x559951b8a838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x559951b8a688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559951b8a718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x559951b8a8e8 <line:221:22>
|-FunctionDecl 0x559951b8a9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x559951b8a950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559951b8aa90 <col:65>
|-TypedefDecl 0x559951b8ab00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x559951b15140 'unsigned long'
|-RecordDecl 0x559951b8ab58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x559951b8aca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559951b8ad08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559951b8adb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x559951b8ad60 'union pthread_attr_t' sugar
|   `-RecordType 0x559951b8abe0 'union pthread_attr_t'
|     `-Record 0x559951b8ab58 'pthread_attr_t'
|-RecordDecl 0x559951b8ae10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x559951b8af88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x559951b8b000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x559951b8b0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x559951b8b050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x559951b8ae90 'struct __pthread_internal_list'
|     `-Record 0x559951b8ae10 '__pthread_internal_list'
|-RecordDecl 0x559951b8b120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x559951b8b1c8 parent 0x559951b14f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x559951b8b2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559951b8b308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x559951b8b370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x559951b8b3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x559951b8b440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x559951b8b4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x559951b8f580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x559951b8f630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x559951b8f720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x559951b8f788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559951b8f910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x559951b8f8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x559951b8b1a0 'pthread_mutex_t'
|     `-Record 0x559951b8b120 ''
|-RecordDecl 0x559951b8f980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x559951b8fac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559951b8fb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559951b8fbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x559951b8fb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x559951b8fa00 'pthread_mutexattr_t'
|     `-Record 0x559951b8f980 ''
|-RecordDecl 0x559951b8fc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x559951b8fcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x559951b8fdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559951b8fe28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x559951b8fe90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x559951b8fef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x559951b8ff60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x559951b8ffc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x559951b90030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x559951b90098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x559951b90150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix051_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix051_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x559951b90240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x559951b902a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x559951b903e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x559951b90380 'union pthread_cond_t' sugar
|   `-RecordType 0x559951b8fcd0 'pthread_cond_t'
|     `-Record 0x559951b8fc50 ''
|-RecordDecl 0x559951b90450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x559951b90590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559951b905f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559951b906b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x559951b90650 'union pthread_condattr_t' sugar
|   `-RecordType 0x559951b904d0 'pthread_condattr_t'
|     `-Record 0x559951b90450 ''
|-TypedefDecl 0x559951b90738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x559951b15120 'unsigned int'
|-TypedefDecl 0x559951b907a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x559951b15080 'int'
|-RecordDecl 0x559951b90800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x559951b908a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x559951b90970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559951b909d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x559951b90a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x559951b90aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x559951b90b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x559951b90b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x559951b90be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x559951b90c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x559951b90cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x559951b90d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x559951b90d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x559951b90e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix051_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix051_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x559951b90ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559951b90f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559951b91090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x559951b91030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x559951b90880 'pthread_rwlock_t'
|     `-Record 0x559951b90800 ''
|-RecordDecl 0x559951b91100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x559951b91240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x559951b912a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559951b91360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x559951b91300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x559951b91180 'pthread_rwlockattr_t'
|     `-Record 0x559951b91100 ''
|-TypedefDecl 0x559951b913e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x559951b15084 'volatile int' volatile
|   `-BuiltinType 0x559951b15080 'int'
|-RecordDecl 0x559951b91440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x559951b935b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x559951b93618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559951b936d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x559951b93670 'union pthread_barrier_t' sugar
|   `-RecordType 0x559951b914c0 'pthread_barrier_t'
|     `-Record 0x559951b91440 ''
|-RecordDecl 0x559951b93740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x559951b93840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559951b938a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559951b93960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x559951b93900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x559951b937c0 'pthread_barrierattr_t'
|     `-Record 0x559951b93740 ''
|-TypedefDecl 0x559951b93a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x559951b93a10 'long [8]' 8 
|   `-BuiltinType 0x559951b150a0 'long'
|-EnumDecl 0x559951b93ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x559951b93b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x559951b93be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x559951b93c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x559951b93d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x559951b93d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x559951b93da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x559951b93df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x559951b93e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x559951b93e68 <col:26> 'int'
| |   `-DeclRefExpr 0x559951b93e48 <col:26> 'int' EnumConstant 0x559951b93d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x559951b93f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x559951b93ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x559951b93ed0 <col:29> 'int' EnumConstant 0x559951b93d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x559951b93f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x559951b93f78 <col:30> 'int'
| |   `-DeclRefExpr 0x559951b93f58 <col:30> 'int' EnumConstant 0x559951b93da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x559951b94018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x559951b94000 <col:27> 'int'
|     `-DeclRefExpr 0x559951b93fe0 <col:27> 'int' EnumConstant 0x559951b93e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x559951b94068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x559951b94138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x559951b941c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x559951b941a8 <col:30> 'int'
| |   `-DeclRefExpr 0x559951b94188 <col:30> 'int' EnumConstant 0x559951b94138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x559951b94210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x559951b94298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x559951b94280 <col:29> 'int'
|     `-DeclRefExpr 0x559951b94260 <col:29> 'int' EnumConstant 0x559951b94210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x559951b942e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x559951b943b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x559951b94408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x559951b94458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x559951b944a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x559951b945c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x559951b94610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x559951b94660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x559951b946e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x559951b946d0 <col:31> 'int'
|     `-DeclRefExpr 0x559951b946b0 <col:31> 'int' EnumConstant 0x559951b945c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x559951b94738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x559951b94808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x559951b94858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x559951b948a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x559951b94978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x559951b949c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x559951b94a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x559951b94ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x559951b94b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x559951b94b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x559951b94dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x559951b94e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x559951b94e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x559951b94fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x559951b95008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x559951b950d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x559951b95128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x559951b95178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x559951b95248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x559951b95298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x559951b958f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x559951b95390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x559951b954a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559951b956e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x559951b95760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x559951b959b8 <col:47>
| |-NonNullAttr 0x559951b95a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x559951b95a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x559951b95b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x559951b95aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x559951b95dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x559951b95c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x559951b95ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x559951b95f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x559951b95e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x559951b96040 <col:60>
|-FunctionDecl 0x559951b96190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x559951b96230 <col:54>
| `-ConstAttr 0x559951b96288 <col:95>
|-FunctionDecl 0x559951b96458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x559951b962c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559951b96338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x559951b96508 <line:394:19>
| `-ConstAttr 0x559951b96560 <col:60>
|-FunctionDecl 0x559951b96f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559951b96e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559951b97010 <col:71>
| `-NonNullAttr 0x559951b97068 <col:112, col:126> 1
|-FunctionDecl 0x559951b97170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559951b970b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559951b97218 <line:397:22>
| `-NonNullAttr 0x559951b97270 <col:63, col:77> 1
|-FunctionDecl 0x559951b97498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x559951b972b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559951b97338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x559951b97548 <line:400:22>
| `-NonNullAttr 0x559951b975a0 <col:63, col:80> 1 2
|-FunctionDecl 0x559951b977a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559951b975e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559951b97668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x559951b97858 <line:403:22>
| `-NonNullAttr 0x559951b978b0 <col:63, col:77> 1
|-FunctionDecl 0x559951b97b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x559951b978f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559951b979a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x559951b97bb8 <line:406:22>
| `-NonNullAttr 0x559951b97c10 <col:63, col:80> 1 2
|-FunctionDecl 0x559951b98e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559951b97c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559951b97cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559951b98ef8 <line:409:22>
| `-NonNullAttr 0x559951b98f50 <col:63, col:77> 1
|-FunctionDecl 0x559951b99188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559951b98f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559951b99028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559951b99238 <line:412:22>
| `-NonNullAttr 0x559951b99290 <col:63, col:80> 1 2
|-FunctionDecl 0x559951b994c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559951b992d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x559951b99368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x559951b99578 <col:37>
| `-NonNullAttr 0x559951b995d0 <col:78, col:95> 1 2
|-FunctionDecl 0x559951b997b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559951b99618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559951b99698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x559951b99868 <line:418:22>
| `-NonNullAttr 0x559951b998c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559951b99a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559951b99908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559951b99988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x559951b99af8 <line:420:22>
| `-NonNullAttr 0x559951b99b50 <col:63, col:77> 1
|-FunctionDecl 0x559951b99cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559951b99b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559951b99c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x559951b99da8 <line:423:22>
| `-NonNullAttr 0x559951b9ae30 <col:63, col:80> 1 2
|-FunctionDecl 0x559951b9afb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559951b9ae78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559951b9aef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x559951b9b068 <line:426:22>
| `-NonNullAttr 0x559951b9b0c0 <col:63, col:77> 1
|-FunctionDecl 0x559951b9b268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559951b9b108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559951b9b188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x559951b9b318 <line:429:22>
| `-NonNullAttr 0x559951b9b370 <col:63, col:80> 1 2
|-FunctionDecl 0x559951b9b4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559951b9b3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559951b9b438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x559951b9b5a8 <line:431:22>
| `-NonNullAttr 0x559951b9b600 <col:63, col:77> 1
|-FunctionDecl 0x559951b9b828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x559951b9b648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559951b9b6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x559951b9b8d8 <line:434:22>
| |-NonNullAttr 0x559951b9b930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x559951b9b968 <col:100> "" ""
|-FunctionDecl 0x559951b9bb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x559951b9b9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559951b9ba38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x559951b9bc28 <line:437:22>
| |-NonNullAttr 0x559951b9bc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x559951b9bcb8 <col:97> "" ""
|-FunctionDecl 0x559951b9beb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559951b9bd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559951b9bd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559951b9bf68 <line:440:22>
| `-NonNullAttr 0x559951b9bfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x559951b9c140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559951b9c008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559951b9c080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559951b9c1f0 <line:443:22>
| `-NonNullAttr 0x559951b9c248 <col:63, col:77> 1
|-FunctionDecl 0x559951b9c538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559951b9c298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559951b9c318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x559951b9c390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559951b9c5f0 <line:447:22>
| `-NonNullAttr 0x559951b9c648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x559951b9c8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x559951b9c6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559951b9c720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x559951b9c798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559951b9c9b0 <col:43>
| `-NonNullAttr 0x559951b9ca08 <col:84, col:98> 1
|-FunctionDecl 0x559951b9ccc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559951b9ca58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559951b9cad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x559951b9cb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x559951b9cd80 <line:452:22>
| `-NonNullAttr 0x559951b9cdd8 <col:63, col:77> 3
|-FunctionDecl 0x559951b9d0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559951b9ce50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559951b9ced0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x559951b9cf60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559951b9d1a0 <line:456:22>
| `-NonNullAttr 0x559951b9d1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x559951b9d3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x559951b9d248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559951b9d2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x559951b9d498 <line:458:22>
|-FunctionDecl 0x559951b9d868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x559951b9d560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x559951b9d700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x559951b9d918 <col:52, col:69> 1 2
|-FunctionDecl 0x559951b9dac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x559951b9d9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x559951b9da20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x559951b9dca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x559951b9db88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x559951b9dc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x559951b9de60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x559951b9dd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x559951b9dfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x559951b9e040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x559951b9e0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x559951b9e1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x559951b9e240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x559951b9e410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix051_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x559951b9e508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x559951b9e5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x559951b9e560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x559951b9e0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x559951b9e040 ''
| `-AlignedAttr 0x559951b9e618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x559951b9e690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x559951b9e7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x559951b9e858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x559951b9e8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x559951b9e928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x559951b9eb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559951b9ea20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559951b9ec78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559951b9ebe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559951b9ee70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559951b9ed30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x559951b9ef18 <line:487:22>
|-RecordDecl 0x559951b9ef70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x559951b9f288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x559951b9f0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x559951b9f168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x559951b9f338 <col:86>
| `-ReturnsTwiceAttr 0x559951b9f390 <col:12> Implicit
|-FunctionDecl 0x559951b9f6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559951b9f460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x559951b9f570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x559951b9f768 <line:493:22>
| `-NonNullAttr 0x559951b9f7c0 <col:63, col:77> 1
|-FunctionDecl 0x559951b9f938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559951b9f808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559951b9f9e0 <line:495:22>
| `-NonNullAttr 0x559951b9fa38 <col:63, col:77> 1
|-FunctionDecl 0x559951b9fb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559951b9fa88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559951b9fbe8 <line:497:22>
| `-NonNullAttr 0x559951b9fc40 <col:52, col:66> 1
|-FunctionDecl 0x559951b9fd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559951b9fc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559951b9fde8 <line:499:22>
| `-NonNullAttr 0x559951b9fe40 <col:52, col:66> 1
|-FunctionDecl 0x559951ba0088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559951b9fe98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559951b9ff28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559951ba0138 <col:36>
| `-NonNullAttr 0x559951ba0190 <col:66, col:83> 1 2
|-FunctionDecl 0x559951ba0290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559951ba01d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559951ba0338 <line:504:22>
| `-NonNullAttr 0x559951ba0390 <col:52, col:66> 1
|-FunctionDecl 0x559951ba0628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559951ba0440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559951ba04c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559951ba06d8 <line:508:22>
| `-NonNullAttr 0x559951ba0730 <col:63, col:80> 1 2
|-FunctionDecl 0x559951ba09f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x559951ba0778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559951ba07f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x559951ba0878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x559951ba0ab0 <line:512:22>
| `-NonNullAttr 0x559951ba0b08 <col:63, col:80> 1 3
|-FunctionDecl 0x559951ba0c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559951ba0b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559951ba0cb8 <line:514:22>
| `-NonNullAttr 0x559951ba0d10 <col:63, col:77> 1
|-FunctionDecl 0x559951ba0f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559951ba0dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559951ba0fe0 <line:516:22>
| `-NonNullAttr 0x559951ba1038 <col:63, col:77> 1
|-FunctionDecl 0x559951ba1140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559951ba1088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559951ba11e8 <line:518:22>
| `-NonNullAttr 0x559951ba1240 <col:63, col:77> 1
|-FunctionDecl 0x559951ba1468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559951ba1288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559951ba1308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x559951ba1518 <line:522:22>
| `-NonNullAttr 0x559951ba1570 <col:63, col:80> 1 2
|-FunctionDecl 0x559951ba1778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559951ba15b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559951ba1638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x559951ba1828 <line:525:22>
| `-NonNullAttr 0x559951ba1880 <col:63, col:77> 1
|-FunctionDecl 0x559951ba1a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559951ba18c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559951ba1948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x559951ba1ad8 <line:528:22>
| `-NonNullAttr 0x559951ba1b30 <col:63, col:80> 1 2
|-FunctionDecl 0x559951ba1cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559951ba1b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559951ba1bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x559951ba1d68 <line:530:22>
| `-NonNullAttr 0x559951ba1dc0 <col:63, col:77> 1
|-FunctionDecl 0x559951ba2f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559951ba1e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559951ba2eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x559951ba3040 <line:534:22>
| `-NonNullAttr 0x559951ba3098 <col:63, col:80> 1 2
|-FunctionDecl 0x559951ba3228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559951ba30e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559951ba3168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x559951ba32d8 <line:537:22>
| `-NonNullAttr 0x559951ba3330 <col:63, col:77> 1
|-FunctionDecl 0x559951ba34d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559951ba3378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559951ba33f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559951ba3588 <line:541:22>
| `-NonNullAttr 0x559951ba35e0 <col:63, col:80> 1 2
|-FunctionDecl 0x559951ba3768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559951ba3628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559951ba36a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x559951ba3818 <line:544:22>
| `-NonNullAttr 0x559951ba3870 <col:63, col:77> 1
|-FunctionDecl 0x559951ba3a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x559951ba38b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x559951ba3938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x559951ba3b08 <line:547:22>
| `-NonNullAttr 0x559951ba3b60 <col:63, col:80> 1 2
|-FunctionDecl 0x559951ba3ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559951ba3ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559951ba3c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x559951ba3d98 <line:550:22>
| `-NonNullAttr 0x559951ba3df0 <col:63, col:77> 1
|-FunctionDecl 0x559951ba5168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x559951ba4f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559951ba5020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x559951ba5218 <col:29>
| `-NonNullAttr 0x559951ba5270 <col:70, col:84> 1
|-FunctionDecl 0x559951ba53e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559951ba52b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559951ba5490 <line:555:22>
| `-NonNullAttr 0x559951ba54e8 <col:63, col:77> 1
|-FunctionDecl 0x559951ba55f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559951ba5538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559951ba5698 <line:557:22>
| `-NonNullAttr 0x559951ba56f0 <col:52, col:66> 1
|-FunctionDecl 0x559951ba57f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559951ba5738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559951ba5898 <line:559:19>
| `-NonNullAttr 0x559951ba58f0 <col:49, col:63> 1
|-FunctionDecl 0x559951ba5b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559951ba5938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559951ba59c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559951ba5bd8 <col:39>
| `-NonNullAttr 0x559951ba5c30 <col:69, col:86> 1 2
|-FunctionDecl 0x559951ba5d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559951ba5c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559951ba5dd8 <line:564:22>
| `-NonNullAttr 0x559951ba5e30 <col:52, col:66> 1
|-FunctionDecl 0x559951ba5f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559951ba5ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559951ba6040 <line:566:22>
| `-NonNullAttr 0x559951ba6098 <col:52, col:66> 1
|-FunctionDecl 0x559951ba6258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559951ba60e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559951ba6178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559951ba6308 <col:39>
| `-NonNullAttr 0x559951ba6360 <col:69, col:86> 1 2
|-FunctionDecl 0x559951ba6460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559951ba63a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559951ba6508 <line:571:22>
| `-NonNullAttr 0x559951ba6560 <col:52, col:66> 1
|-FunctionDecl 0x559951ba6748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559951ba6610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559951ba67f0 <line:573:22>
| `-NonNullAttr 0x559951ba6848 <col:63, col:77> 1
|-FunctionDecl 0x559951ba6950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559951ba6898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559951ba69f8 <line:575:22>
| `-NonNullAttr 0x559951ba6a50 <col:63, col:77> 1
|-FunctionDecl 0x559951ba6c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559951ba6a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559951ba6b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x559951ba6d28 <line:579:22>
| `-NonNullAttr 0x559951ba6d80 <col:63, col:80> 1 2
|-FunctionDecl 0x559951ba6fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559951ba6dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559951ba6e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x559951ba7058 <line:582:22>
| `-NonNullAttr 0x559951ba70b0 <col:63, col:77> 1
|-FunctionDecl 0x559951ba7258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559951ba70f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559951ba7178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x559951ba7308 <line:586:22>
| `-NonNullAttr 0x559951ba7360 <col:63, col:80> 1 2
|-FunctionDecl 0x559951ba74e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559951ba73a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559951ba7428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x559951ba7598 <col:36>
| `-NonNullAttr 0x559951ba75f0 <col:77, col:91> 1
|-FunctionDecl 0x559951ba7928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x559951ba76d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559951ba77e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x559951ba79d8 <line:591:22>
| `-NonNullAttr 0x559951ba7a30 <col:63, col:77> 1
|-FunctionDecl 0x559951ba7ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559951ba7a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559951ba7c50 <line:593:22>
| `-NonNullAttr 0x559951ba7ca8 <col:63, col:77> 1
|-FunctionDecl 0x559951ba7db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559951ba7cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559951ba7e58 <line:595:22>
| `-NonNullAttr 0x559951ba7eb0 <col:52, col:66> 1
|-FunctionDecl 0x559951ba7fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559951ba7f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559951ba8070 <line:597:22>
| `-NonNullAttr 0x559951ba80c8 <col:52, col:66> 1
|-FunctionDecl 0x559951ba82f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x559951ba8118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559951ba8190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x559951ba83a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x559951ba86d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559951ba8428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559951ba84a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559951ba8530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x559951ba8790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x559951ba89a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559951ba8870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559951ba8a50 <line:606:22>
| `-NonNullAttr 0x559951ba8aa8 <col:63, col:77> 1
|-FunctionDecl 0x559951ba8bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559951ba8af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559951ba8c58 <line:608:22>
| `-NonNullAttr 0x559951ba8cb0 <col:63, col:77> 1
|-FunctionDecl 0x559951ba8f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559951ba8cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559951ba8d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x559951ba8fc0 <line:612:22>
| `-NonNullAttr 0x559951ba9018 <col:63, col:80> 1 2
|-FunctionDecl 0x559951ba9228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x559951ba9068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559951ba90e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x559951ba92d8 <col:37>
| `-NonNullAttr 0x559951ba9330 <col:78, col:92> 1
|-FunctionDecl 0x559951ba9548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x559951ba9378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559951ba9420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x559951ba95f8 <line:618:22>
| `-NonNullAttr 0x559951ba9650 <col:63, col:80> 1 2
|-FunctionDecl 0x559951ba9818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x559951ba9698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559951ba9710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x559951ba98c8 <line:621:22>
| `-NonNullAttr 0x559951ba9920 <col:63, col:77> 1
|-FunctionDecl 0x559951ba9bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x559951ba9a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x559951ba9a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x559951ba9c78 <line:623:22>
| `-NonNullAttr 0x559951ba9cd0 <col:63, col:77> 1
|-FunctionDecl 0x559951ba9e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559951ba9d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559951ba9f20 <line:625:22>
| `-NonNullAttr 0x559951ba9f78 <col:63, col:77> 1
|-FunctionDecl 0x559951baa080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559951ba9fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559951baa128 <line:627:22>
| `-NonNullAttr 0x559951baa180 <col:52, col:66> 1
|-FunctionDecl 0x559951baa280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559951baa1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559951baa328 <line:629:22>
| `-NonNullAttr 0x559951baa380 <col:52, col:66> 1
|-FunctionDecl 0x559951baa480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559951baa3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559951baa528 <line:631:22>
| `-NonNullAttr 0x559951baa580 <col:52, col:66> 1
|-FunctionDecl 0x559951baa958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x559951baa660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x559951baa770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559951baa7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x559951baaa10 <line:635:22>
| `-NonNullAttr 0x559951baaa68 <col:63, col:77> 1
|-FunctionDecl 0x559951baabe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559951baaab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559951baac90 <line:637:22>
| `-NonNullAttr 0x559951baace8 <col:63, col:77> 1
|-FunctionDecl 0x559951baadf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559951baad38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559951baae98 <line:639:22>
| `-NonNullAttr 0x559951baaef0 <col:52, col:66> 1
|-FunctionDecl 0x559951bab0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559951baafb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559951bab190 <line:641:22>
| `-NonNullAttr 0x559951bab1e8 <col:63, col:77> 1
|-FunctionDecl 0x559951bab2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559951bab238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559951bab398 <line:643:22>
| `-NonNullAttr 0x559951bab3f0 <col:63, col:77> 1
|-FunctionDecl 0x559951bab618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559951bab438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559951bab4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x559951bab6c8 <line:647:22>
| `-NonNullAttr 0x559951bab720 <col:63, col:80> 1 2
|-FunctionDecl 0x559951bab928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x559951bab768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x559951bab7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x559951bab9d8 <line:650:22>
| `-NonNullAttr 0x559951baba30 <col:63, col:77> 1
|-FunctionDecl 0x559951babd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x559951babb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x559951babc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x559951babe28 <line:653:22>
| `-NonNullAttr 0x559951babe80 <col:63, col:77> 1
|-FunctionDecl 0x559951babfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x559951babec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559951bac090 <col:69>
|-FunctionDecl 0x559951bac208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x559951bac0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559951bac2b0 <col:72>
|-FunctionDecl 0x559951bac4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x559951bac318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x559951bac3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x559951bac598 <col:44>
|-FunctionDecl 0x559951bac7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x559951bac600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559951bac678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x559951bac868 <line:660:22>
| `-NonNullAttr 0x559951bac8c0 <col:63, col:77> 2
|-FunctionDecl 0x559951bacd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x559951bac9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x559951bacab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x559951bacbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x559951bacdc0 <col:47>
|-FunctionDecl 0x559951badf60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x559951bace30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559951bae0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x559951bae020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559951bae210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x559951bae178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559951bae368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x559951bae2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559951bae430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x559951bae4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x559951bae5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x559951bae668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x559951bae6e8 prev 0x559951bae668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x559951bae750 <col:24> 'int' 0
|-VarDecl 0x559951bae788 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x559951bae808 prev 0x559951bae788 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x559951bae870 <col:27> 'int' 0
|-VarDecl 0x559951bae8a8 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x559951bae928 prev 0x559951bae8a8 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x559951bae990 <col:27> 'int' 0
|-VarDecl 0x559951bae9c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x559951baea48 prev 0x559951bae9c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x559951baeab0 <col:27> 'int' 0
|-VarDecl 0x559951baeae8 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x559951baeb68 prev 0x559951baeae8 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x559951baebd0 <col:9> 'int' 0
|-VarDecl 0x559951baec00 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x559951baec78 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x559951baecf8 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x559951baed78 prev 0x559951baecf8 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x559951baede0 <col:9> 'int' 0
|-VarDecl 0x559951baee18 <line:686:1, col:5> col:5 used y 'int'
|-VarDecl 0x559951baee98 prev 0x559951baee18 <line:687:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x559951baef00 <col:9> 'int' 0
|-VarDecl 0x559951baef70 <line:688:1, col:5> col:5 used z 'int'
|-VarDecl 0x559951baeff0 prev 0x559951baef70 <line:689:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x559951baf058 <col:9> 'int' 0
|-VarDecl 0x559951baf088 <line:690:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x559951baf108 <line:691:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x559951baf180 <line:692:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x559951baf1f8 <line:693:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x559951baf270 <line:694:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x559951baf2e8 <line:695:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x559951baf360 <line:696:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x559951baf3d8 <line:697:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x559951baf450 <line:698:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x559951baf4c8 <line:699:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x559951baf540 <line:700:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x559951baf5b8 <line:701:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x559951baf630 <line:702:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x559951baf6b0 <line:703:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x559951baf730 <line:704:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x559951baf7a8 <line:705:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x559951baf828 <line:706:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x559951baf8a0 <line:707:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x559951baf918 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x559951baf990 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x559951bafaa8 prev 0x559951badf60 <line:710:1, line:724:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x559951bafa10 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559951bb0078 <line:711:1, line:724:1>
|   |-CallExpr 0x559951bafbb8 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559951bafba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bafb50 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559951bafc18 <line:713:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559951bafbd8 <col:3> 'int' lvalue Var 0x559951baeb68 'a' 'int'
|   | `-IntegerLiteral 0x559951bafbf8 <col:7> 'int' 1
|   |-CallExpr 0x559951bafc70 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559951bafc58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bafc38 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559951bafcc8 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559951bafcb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bafc90 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559951bafd28 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559951bafce8 <col:3> 'int' lvalue Var 0x559951baed78 'x' 'int'
|   | `-IntegerLiteral 0x559951bafd08 <col:7> 'int' 1
|   |-CallExpr 0x559951bafd80 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559951bafd68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bafd48 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559951bafdd8 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559951bafdc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bafda0 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x559951bafe30 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559951bafe18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bafdf8 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559951bafe88 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559951bafe70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bafe50 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559951baff40 <line:721:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559951bafea8 <col:3> 'int' lvalue Var 0x559951bae6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559951baff20 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559951baff08 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559951bafec8 <col:22> 'int' lvalue Var 0x559951bae6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559951bafee8 <col:41> 'int' 1
|   |-CallExpr 0x559951baffb8 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559951baffa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951baff80 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559951bb0068 <line:723:3, col:36>
|     `-CallExpr 0x559951bb0048 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559951bb0030 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559951baffd8 <col:10> 'void *(void)' Function 0x559951b54e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559951bb0198 prev 0x559951bae0b8 <line:725:1, line:739:1> line:725:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x559951bb0100 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559951bb06f8 <line:726:1, line:739:1>
|   |-CallExpr 0x559951bb0278 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559951bb0260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb0240 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559951bb02d8 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559951bb0298 <col:3> 'int' lvalue Var 0x559951baed78 'x' 'int'
|   | `-IntegerLiteral 0x559951bb02b8 <col:7> 'int' 2
|   |-CallExpr 0x559951bb0330 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559951bb0318 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb02f8 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559951bb0388 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559951bb0370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb0350 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559951bb0400 <line:731:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559951bb03a8 <col:3> 'int' lvalue Var 0x559951bae808 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x559951bb03e8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559951bb03c8 <col:25> 'int' lvalue Var 0x559951baee98 'y' 'int'
|   |-CallExpr 0x559951bb0458 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559951bb0440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb0420 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559951bb04b0 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559951bb0498 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb0478 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x559951bb0508 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559951bb04f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb04d0 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559951bb0560 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559951bb0548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb0528 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559951bb0618 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559951bb0580 <col:3> 'int' lvalue Var 0x559951bae6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559951bb05f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559951bb05e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559951bb05a0 <col:22> 'int' lvalue Var 0x559951bae6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559951bb05c0 <col:41> 'int' 1
|   |-CallExpr 0x559951bb0670 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559951bb0658 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb0638 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559951bb06e8 <line:738:3, col:36>
|     `-CallExpr 0x559951bb06c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559951bb06b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559951bb0690 <col:10> 'void *(void)' Function 0x559951b54e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559951bb0818 prev 0x559951bae210 <line:740:1, line:767:1> line:740:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x559951bb0780 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559951bb3720 <line:741:1, line:767:1>
|   |-CallExpr 0x559951bb08f8 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559951bb08e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb08c0 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559951bb0958 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559951bb0918 <col:3> 'int' lvalue Var 0x559951baee98 'y' 'int'
|   | `-IntegerLiteral 0x559951bb0938 <col:7> 'int' 1
|   |-CallExpr 0x559951bb09b0 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559951bb0998 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb0978 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559951bb0a08 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559951bb09f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb09d0 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559951bb0ab8 <line:746:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb0a28 <col:3> '_Bool' lvalue Var 0x559951baf918 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb0aa0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559951bb0a80 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559951bb0a68 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559951bb0a48 <col:19> 'void *(void)' Function 0x559951b54e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559951bb0b68 <line:747:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb0ad8 <col:3> '_Bool' lvalue Var 0x559951baf990 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb0b50 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559951bb0b30 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559951bb0b18 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559951bb0af8 <col:19> 'void *(void)' Function 0x559951b54e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559951bb0be0 <line:748:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb0b88 <col:3> '_Bool' lvalue Var 0x559951baf088 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb0bc8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559951bb0ba8 <col:21> '_Bool' lvalue Var 0x559951baf990 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x559951bb0c58 <line:749:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559951bb0c00 <col:3> 'int' lvalue Var 0x559951baf108 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x559951bb0c40 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559951bb0c20 <col:15> 'int' lvalue Var 0x559951baeff0 'z' 'int'
|   |-BinaryOperator 0x559951bb10b8 <line:750:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x559951bb0c78 <col:3> 'int' lvalue Var 0x559951baeff0 'z' 'int'
|   | `-ConditionalOperator 0x559951bb1088 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x559951bb0e88 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x559951bb0da8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x559951bb0cd0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x559951bb0cb8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x559951bb0c98 <col:8> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x559951bb0d88 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x559951bb0d20 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x559951bb0d08 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x559951bb0ce8 <col:27> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x559951bb0d70 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x559951bb0d58 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x559951bb0d38 <col:46> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x559951bb0e68 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x559951bb0e00 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x559951bb0de8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x559951bb0dc8 <col:65> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x559951bb0e50 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x559951bb0e38 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x559951bb0e18 <col:84> '_Bool' lvalue Var 0x559951baf540 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x559951bb1070 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559951bb0ea8 <col:101> 'int' lvalue Var 0x559951baeff0 'z' 'int'
|   |   `-ParenExpr 0x559951bb1050 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x559951bb1020 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x559951bb0f90 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559951bb0f20 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559951bb0f08 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559951bb0ec8 <col:106> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559951bb0f50 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559951bb0f38 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559951bb0ee8 <col:124> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559951bb0ff0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559951bb0fb0 <col:141> 'int' lvalue Var 0x559951baf730 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x559951bb1008 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559951bb0fd0 <col:153> 'int' lvalue Var 0x559951baf828 'z$w_buff1' 'int'
|   |-BinaryOperator 0x559951bb15c8 <line:751:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559951bb10d8 <col:3> 'int' lvalue Var 0x559951baf730 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x559951bb1598 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559951bb1568 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559951bb1550 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559951bb10f8 <col:15> '_Bool' lvalue Var 0x559951baf990 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559951bb1580 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559951bb1118 <col:31> 'int' lvalue Var 0x559951baf730 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x559951bb1530 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559951bb1500 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559951bb1328 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559951bb1248 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559951bb1170 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559951bb1158 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559951bb1138 <col:45> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559951bb1228 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559951bb11c0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559951bb11a8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559951bb1188 <col:64> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x559951bb1210 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559951bb11f8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559951bb11d8 <col:83> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559951bb1308 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559951bb12a0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559951bb1288 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559951bb1268 <col:102> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x559951bb12f0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559951bb12d8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559951bb12b8 <col:121> '_Bool' lvalue Var 0x559951baf540 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559951bb14e8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559951bb1348 <col:138> 'int' lvalue Var 0x559951baf730 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x559951bb14c8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559951bb1498 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559951bb1408 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559951bb13c0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559951bb13a8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559951bb1368 <col:151> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559951bb13f0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559951bb13d8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559951bb1388 <col:169> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x559951bb1468 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559951bb1428 <col:186> 'int' lvalue Var 0x559951baf730 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x559951bb1480 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559951bb1448 <col:198> 'int' lvalue Var 0x559951baf730 'z$w_buff0' 'int'
|   |-BinaryOperator 0x559951bb1ad8 <line:752:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559951bb15e8 <col:3> 'int' lvalue Var 0x559951baf828 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x559951bb1aa8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559951bb1a78 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559951bb1a60 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559951bb1608 <col:15> '_Bool' lvalue Var 0x559951baf990 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559951bb1a90 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559951bb1628 <col:31> 'int' lvalue Var 0x559951baf828 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x559951bb1a40 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559951bb1a10 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559951bb1838 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559951bb1758 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559951bb1680 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559951bb1668 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559951bb1648 <col:45> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559951bb1738 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559951bb16d0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559951bb16b8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559951bb1698 <col:64> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x559951bb1720 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559951bb1708 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559951bb16e8 <col:83> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559951bb1818 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559951bb17b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559951bb1798 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559951bb1778 <col:102> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x559951bb1800 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559951bb17e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559951bb17c8 <col:121> '_Bool' lvalue Var 0x559951baf540 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559951bb19f8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559951bb1858 <col:138> 'int' lvalue Var 0x559951baf828 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x559951bb19d8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559951bb19a8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559951bb1918 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559951bb18d0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559951bb18b8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559951bb1878 <col:151> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559951bb1900 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559951bb18e8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559951bb1898 <col:169> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x559951bb1978 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559951bb1938 <col:186> 'int' lvalue Var 0x559951baf828 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x559951bb1990 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559951bb1958 <col:198> 'int' lvalue Var 0x559951baf828 'z$w_buff1' 'int'
|   |-BinaryOperator 0x559951bb2098 <line:753:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb1af8 <col:3> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb2080 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559951bb2050 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559951bb2008 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559951bb1ff0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559951bb1b18 <col:20> '_Bool' lvalue Var 0x559951baf990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559951bb2038 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559951bb2020 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559951bb1b38 <col:36> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x559951bb1fd0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559951bb1fa0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559951bb1d48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559951bb1c68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559951bb1b90 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559951bb1b78 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559951bb1b58 <col:55> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559951bb1c48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559951bb1be0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559951bb1bc8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559951bb1ba8 <col:74> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559951bb1c30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559951bb1c18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559951bb1bf8 <col:93> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559951bb1d28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559951bb1cc0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559951bb1ca8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559951bb1c88 <col:112> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559951bb1d10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559951bb1cf8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559951bb1cd8 <col:131> '_Bool' lvalue Var 0x559951baf540 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559951bb1f70 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559951bb1f58 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559951bb1d68 <col:148> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x559951bb1f38 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559951bb1f08 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559951bb1e28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559951bb1de0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559951bb1dc8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559951bb1d88 <col:166> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559951bb1e10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559951bb1df8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559951bb1da8 <col:184> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559951bb1ec0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559951bb1e78 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559951bb1e48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559951bb1ef0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559951bb1ed8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559951bb1ea0 <col:212> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559951bb2660 <line:754:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb20b8 <col:3> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb2648 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559951bb2618 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559951bb25d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559951bb25b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559951bb20d8 <col:20> '_Bool' lvalue Var 0x559951baf990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559951bb2600 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559951bb25e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559951bb20f8 <col:36> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559951bb2598 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559951bb2568 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559951bb2308 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559951bb2228 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559951bb2150 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559951bb2138 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559951bb2118 <col:55> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559951bb2208 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559951bb21a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559951bb2188 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559951bb2168 <col:74> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559951bb21f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559951bb21d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559951bb21b8 <col:93> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559951bb22e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559951bb2280 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559951bb2268 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559951bb2248 <col:112> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559951bb22d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559951bb22b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559951bb2298 <col:131> '_Bool' lvalue Var 0x559951baf540 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559951bb2550 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559951bb2538 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559951bb2328 <col:148> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x559951bb2518 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559951bb24e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559951bb23e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559951bb23a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559951bb2388 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559951bb2348 <col:166> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559951bb23d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559951bb23b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559951bb2368 <col:184> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559951bb24b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559951bb2438 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559951bb2408 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559951bb24d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559951bb2490 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559951bb2460 <col:219> 'int' 0
|   |-BinaryOperator 0x559951bb2c08 <line:755:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb2680 <col:3> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb2bf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559951bb2bc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559951bb2b78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559951bb2b60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559951bb26a0 <col:20> '_Bool' lvalue Var 0x559951baf990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559951bb2ba8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559951bb2b90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559951bb26c0 <col:36> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x559951bb2b40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559951bb2b10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559951bb28d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559951bb27f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559951bb2718 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559951bb2700 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559951bb26e0 <col:55> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559951bb27d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559951bb2768 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559951bb2750 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559951bb2730 <col:74> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559951bb27b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559951bb27a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559951bb2780 <col:93> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559951bb28b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559951bb2848 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559951bb2830 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559951bb2810 <col:112> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559951bb2898 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559951bb2880 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559951bb2860 <col:131> '_Bool' lvalue Var 0x559951baf540 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559951bb2af8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559951bb2ae0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559951bb28f0 <col:148> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x559951bb2ac0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559951bb2a90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559951bb29b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559951bb2968 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559951bb2950 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559951bb2910 <col:166> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559951bb2998 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559951bb2980 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559951bb2930 <col:184> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559951bb2a48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559951bb2a00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559951bb29d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559951bb2a78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559951bb2a60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559951bb2a28 <col:212> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559951bb31e8 <line:756:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb2c28 <col:3> '_Bool' lvalue Var 0x559951baf540 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb31d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559951bb31a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559951bb3158 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559951bb3140 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559951bb2c48 <col:20> '_Bool' lvalue Var 0x559951baf990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559951bb3188 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559951bb3170 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559951bb2c68 <col:36> '_Bool' lvalue Var 0x559951baf540 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x559951bb3120 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559951bb30f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559951bb2e78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559951bb2d98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559951bb2cc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559951bb2ca8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559951bb2c88 <col:55> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559951bb2d78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559951bb2d10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559951bb2cf8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559951bb2cd8 <col:74> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559951bb2d60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559951bb2d48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559951bb2d28 <col:93> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559951bb2e58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559951bb2df0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559951bb2dd8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559951bb2db8 <col:112> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559951bb2e40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559951bb2e28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559951bb2e08 <col:131> '_Bool' lvalue Var 0x559951baf540 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559951bb30d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559951bb30c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559951bb2e98 <col:148> '_Bool' lvalue Var 0x559951baf540 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x559951bb30a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559951bb3070 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559951bb2f58 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559951bb2f10 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559951bb2ef8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559951bb2eb8 <col:166> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559951bb2f40 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559951bb2f28 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559951bb2ed8 <col:184> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559951bb3040 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559951bb2fc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559951bb2f78 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559951bb3058 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559951bb3018 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559951bb2fe8 <col:219> 'int' 0
|   |-BinaryOperator 0x559951bb3260 <line:757:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559951bb3208 <col:3> 'int' lvalue Var 0x559951bae928 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x559951bb3248 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559951bb3228 <col:25> 'int' lvalue Var 0x559951baeff0 'z' 'int'
|   |-BinaryOperator 0x559951bb3390 <line:758:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x559951bb3280 <col:3> 'int' lvalue Var 0x559951baeff0 'z' 'int'
|   | `-ConditionalOperator 0x559951bb3360 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559951bb3318 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559951bb3300 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559951bb32a0 <col:7> '_Bool' lvalue Var 0x559951baf088 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559951bb3330 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559951bb32c0 <col:25> 'int' lvalue Var 0x559951baf108 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559951bb3348 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559951bb32e0 <col:37> 'int' lvalue Var 0x559951baeff0 'z' 'int'
|   |-BinaryOperator 0x559951bb3428 <line:759:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb33b0 <col:3> '_Bool' lvalue Var 0x559951baf088 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559951bb3400 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559951bb33d0 <col:28> 'int' 0
|   |-CallExpr 0x559951bb3480 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559951bb3468 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb3448 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559951bb34d8 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559951bb34c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb34a0 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x559951bb3530 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559951bb3518 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb34f8 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559951bb3588 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559951bb3570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb3550 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559951bb3640 <line:764:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559951bb35a8 <col:3> 'int' lvalue Var 0x559951bae6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559951bb3620 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559951bb3608 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559951bb35c8 <col:22> 'int' lvalue Var 0x559951bae6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559951bb35e8 <col:41> 'int' 1
|   |-CallExpr 0x559951bb3698 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559951bb3680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb3660 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559951bb3710 <line:766:3, col:36>
|     `-CallExpr 0x559951bb36f0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559951bb36d8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559951bb36b8 <col:10> 'void *(void)' Function 0x559951b54e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559951bb38a8 prev 0x559951bae368 <line:768:1, line:797:1> line:768:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x559951bb3810 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559951bb5128 <line:769:1, line:797:1>
|   |-CallExpr 0x559951bb3988 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559951bb3970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb3950 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559951bb3a00 <line:771:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559951bb39a8 <col:3> 'int' lvalue Var 0x559951baf828 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x559951bb39e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559951bb39c8 <col:15> 'int' lvalue Var 0x559951baf730 'z$w_buff0' 'int'
|   |-BinaryOperator 0x559951bb3a60 <line:772:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559951bb3a20 <col:3> 'int' lvalue Var 0x559951baf730 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x559951bb3a40 <col:15> 'int' 1
|   |-BinaryOperator 0x559951bb3ad8 <line:773:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb3a80 <col:3> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb3ac0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559951bb3aa0 <col:20> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559951bb3b70 <line:774:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb3af8 <col:3> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x559951bb3b48 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559951bb3b18 <col:27> 'int' 1
|   |-CallExpr 0x559951bb3cf8 <line:775:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x559951bb3ce0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x559951bb3b90 <col:3> 'void (int)' Function 0x559951b550d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x559951bb3c90 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x559951bb3c70 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x559951bb3c50 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x559951bb3c08 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x559951bb3bf0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x559951bb3bb0 <col:23> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x559951bb3c38 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x559951bb3c20 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x559951bb3bd0 <col:41> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559951bb3d78 <line:776:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb3d20 <col:3> '_Bool' lvalue Var 0x559951baf3d8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb3d60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559951bb3d40 <col:20> '_Bool' lvalue Var 0x559951baf180 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x559951bb3df0 <line:777:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb3d98 <col:3> '_Bool' lvalue Var 0x559951baf450 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb3dd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559951bb3db8 <col:20> '_Bool' lvalue Var 0x559951baf1f8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559951bb3e68 <line:778:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb3e10 <col:3> '_Bool' lvalue Var 0x559951baf4c8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb3e50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559951bb3e30 <col:20> '_Bool' lvalue Var 0x559951baf270 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559951bb3ee0 <line:779:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb3e88 <col:3> '_Bool' lvalue Var 0x559951baf540 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb3ec8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559951bb3ea8 <col:20> '_Bool' lvalue Var 0x559951baf2e8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559951bb3f58 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb3f00 <col:3> '_Bool' lvalue Var 0x559951baf5b8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb3f40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559951bb3f20 <col:20> '_Bool' lvalue Var 0x559951baf360 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559951bb4018 <line:781:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb3f78 <col:3> '_Bool' lvalue Var 0x559951baf360 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x559951bb3ff0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559951bb3fc0 <col:27> 'int' 1
|   |-CallExpr 0x559951bb4070 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559951bb4058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb4038 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559951bb40c8 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559951bb40b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb4090 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559951bb4140 <line:784:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559951bb40e8 <col:3> 'int' lvalue Var 0x559951baea48 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x559951bb4128 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559951bb4108 <col:25> 'int' lvalue Var 0x559951baeb68 'a' 'int'
|   |-CallExpr 0x559951bb4198 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559951bb4180 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb4160 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559951bb41f0 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559951bb41d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb41b8 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559951bb44d8 <line:787:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559951bb4210 <col:3> 'int' lvalue Var 0x559951baeff0 'z' 'int'
|   | `-ConditionalOperator 0x559951bb44a8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559951bb42d0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559951bb4288 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559951bb4270 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559951bb4230 <col:7> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559951bb42b8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559951bb42a0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559951bb4250 <col:25> '_Bool' lvalue Var 0x559951baf360 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x559951bb4490 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559951bb42f0 <col:42> 'int' lvalue Var 0x559951baf730 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x559951bb4470 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559951bb4440 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559951bb43b0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559951bb4368 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559951bb4350 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559951bb4310 <col:55> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559951bb4398 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559951bb4380 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559951bb4330 <col:73> '_Bool' lvalue Var 0x559951baf5b8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559951bb4410 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559951bb43d0 <col:90> 'int' lvalue Var 0x559951baf828 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559951bb4428 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559951bb43f0 <col:102> 'int' lvalue Var 0x559951baeff0 'z' 'int'
|   |-BinaryOperator 0x559951bb46e0 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb44f8 <col:3> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb46c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559951bb4698 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559951bb45b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559951bb4570 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559951bb4558 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559951bb4518 <col:20> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559951bb45a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559951bb4588 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559951bb4538 <col:38> '_Bool' lvalue Var 0x559951baf360 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559951bb4650 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559951bb4608 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559951bb45d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559951bb4680 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559951bb4668 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559951bb4630 <col:66> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559951bb49c8 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb4700 <col:3> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb49b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559951bb4980 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559951bb48a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559951bb47c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559951bb4778 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559951bb4760 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559951bb4720 <col:20> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559951bb47a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559951bb4790 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559951bb4740 <col:38> '_Bool' lvalue Var 0x559951baf360 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x559951bb4880 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559951bb4838 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559951bb4820 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559951bb47e0 <col:56> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559951bb4868 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559951bb4850 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559951bb4800 <col:74> '_Bool' lvalue Var 0x559951baf5b8 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559951bb4938 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559951bb48f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559951bb48c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559951bb4968 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559951bb4950 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559951bb4918 <col:102> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559951bb4bd0 <line:790:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb49e8 <col:3> '_Bool' lvalue Var 0x559951baf360 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb4bb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559951bb4b88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559951bb4aa8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559951bb4a60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559951bb4a48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559951bb4a08 <col:20> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559951bb4a90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559951bb4a78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559951bb4a28 <col:38> '_Bool' lvalue Var 0x559951baf360 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559951bb4b40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559951bb4af8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559951bb4ac8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559951bb4b70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559951bb4b58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559951bb4b20 <col:66> '_Bool' lvalue Var 0x559951baf360 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559951bb4eb8 <line:791:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559951bb4bf0 <col:3> '_Bool' lvalue Var 0x559951baf5b8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559951bb4ea0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559951bb4e70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559951bb4d90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559951bb4cb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559951bb4c68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559951bb4c50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559951bb4c10 <col:20> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559951bb4c98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559951bb4c80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559951bb4c30 <col:38> '_Bool' lvalue Var 0x559951baf360 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x559951bb4d70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559951bb4d28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559951bb4d10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559951bb4cd0 <col:56> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559951bb4d58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559951bb4d40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559951bb4cf0 <col:74> '_Bool' lvalue Var 0x559951baf5b8 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559951bb4e28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559951bb4de0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559951bb4db0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559951bb4e58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559951bb4e40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559951bb4e08 <col:102> '_Bool' lvalue Var 0x559951baf5b8 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x559951bb4f10 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559951bb4ef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb4ed8 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559951bb4f68 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559951bb4f50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb4f30 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559951bb5048 <line:794:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559951bb4f88 <col:3> 'int' lvalue Var 0x559951bae6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559951bb5028 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559951bb5010 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559951bb4fd0 <col:22> 'int' lvalue Var 0x559951bae6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559951bb4ff0 <col:41> 'int' 1
|   |-CallExpr 0x559951bb50a0 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559951bb5088 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559951bb5068 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559951bb5118 <line:796:3, col:36>
|     `-CallExpr 0x559951bb50f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559951bb50e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559951bb50c0 <col:10> 'void *(void)' Function 0x559951b54e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559951bb5230 prev 0x559951bae430 <line:798:1, line:800:1> line:798:6 fence 'void ()'
| `-CompoundStmt 0x559951bb52d0 <line:799:1, line:800:1>
|-FunctionDecl 0x559951bb5300 prev 0x559951bae4f0 <line:801:1, line:803:1> line:801:6 isync 'void ()'
| `-CompoundStmt 0x559951bb53a0 <line:802:1, line:803:1>
|-FunctionDecl 0x559951bb53d0 prev 0x559951bae5b0 <line:804:1, line:806:1> line:804:6 lwfence 'void ()'
| `-CompoundStmt 0x559951bb5470 <line:805:1, line:806:1>
`-FunctionDecl 0x559951bb54d8 <line:807:1, line:833:1> line:807:5 main 'int ()'
  `-CompoundStmt 0x559951bb7470 <line:808:1, line:833:1>
    |-DeclStmt 0x559951bb55f0 <line:809:3, col:18>
    | `-VarDecl 0x559951bb5588 <col:3, col:13> col:13 used t1375 'pthread_t':'unsigned long'
    |-CallExpr 0x559951bb57f8 <line:810:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559951bb57e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559951bb5608 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559951b958f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559951bb5648 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559951bb5628 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559951bb5588 't1375' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559951bb5838 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559951bb56c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559951bb5698 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559951bb5660 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559951bb5850 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559951bb56e0 <col:39> 'void *(void *)' Function 0x559951bafaa8 'P0' 'void *(void *)'
    | `-ParenExpr 0x559951bb5760 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559951bb5738 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559951bb5700 <col:52> 'int' 0
    |-DeclStmt 0x559951bb58e0 <line:811:3, col:18>
    | `-VarDecl 0x559951bb5878 <col:3, col:13> col:13 used t1376 'pthread_t':'unsigned long'
    |-CallExpr 0x559951bb5a88 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559951bb5a70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559951bb58f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559951b958f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559951bb5938 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559951bb5918 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559951bb5878 't1376' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559951bb5ac8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559951bb59b0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559951bb5988 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559951bb5950 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559951bb5ae0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559951bb59d0 <col:39> 'void *(void *)' Function 0x559951bb0198 'P1' 'void *(void *)'
    | `-ParenExpr 0x559951bb5a50 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559951bb5a28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559951bb59f0 <col:52> 'int' 0
    |-DeclStmt 0x559951bb5b70 <line:813:3, col:18>
    | `-VarDecl 0x559951bb5b08 <col:3, col:13> col:13 used t1377 'pthread_t':'unsigned long'
    |-CallExpr 0x559951bb5d18 <line:814:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559951bb5d00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559951bb5b88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559951b958f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559951bb5bc8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559951bb5ba8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559951bb5b08 't1377' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559951bb5d58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559951bb5c40 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559951bb5c18 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559951bb5be0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559951bb5d70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559951bb5c60 <col:39> 'void *(void *)' Function 0x559951bb0818 'P2' 'void *(void *)'
    | `-ParenExpr 0x559951bb5ce0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559951bb5cb8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559951bb5c80 <col:52> 'int' 0
    |-DeclStmt 0x559951bb5e00 <line:815:3, col:18>
    | `-VarDecl 0x559951bb5d98 <col:3, col:13> col:13 used t1378 'pthread_t':'unsigned long'
    |-CallExpr 0x559951bb5fe0 <line:816:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559951bb5f90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559951bb5e18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559951b958f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559951bb5e58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559951bb5e38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559951bb5d98 't1378' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559951bb6020 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559951bb5ed0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559951bb5ea8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559951bb5e70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559951bb6038 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559951bb5ef0 <col:39> 'void *(void *)' Function 0x559951bb38a8 'P3' 'void *(void *)'
    | `-ParenExpr 0x559951bb5f70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559951bb5f48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559951bb5f10 <col:52> 'int' 0
    |-CallExpr 0x559951bb6088 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559951bb6070 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559951bb6050 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559951bb6158 <line:818:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x559951bb60a8 <col:3> '_Bool' lvalue Var 0x559951baec00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x559951bb6140 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x559951bb6120 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x559951bb6108 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x559951bb60c8 <col:21> 'int' lvalue Var 0x559951bae6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x559951bb60e8 <col:41> 'int' 4
    |-CallExpr 0x559951bb61b0 <line:819:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559951bb6198 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559951bb6178 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559951bb6228 <line:820:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559951bb6210 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559951bb61d0 <col:3> 'void (int)' Function 0x559951b54ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x559951bb6268 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559951bb6250 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559951bb61f0 <col:21> '_Bool' lvalue Var 0x559951baec00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x559951bb62b8 <line:821:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559951bb62a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559951bb6280 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559951bb65a0 <line:822:3, col:103> 'int' '='
    | |-DeclRefExpr 0x559951bb62d8 <col:3> 'int' lvalue Var 0x559951baeff0 'z' 'int'
    | `-ConditionalOperator 0x559951bb6570 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x559951bb6398 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x559951bb6350 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x559951bb6338 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x559951bb62f8 <col:7> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x559951bb6380 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x559951bb6368 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x559951bb6318 <col:25> '_Bool' lvalue Var 0x559951baf180 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x559951bb6558 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559951bb63b8 <col:42> 'int' lvalue Var 0x559951baf730 'z$w_buff0' 'int'
    |   `-ParenExpr 0x559951bb6538 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x559951bb6508 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x559951bb6478 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x559951bb6430 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x559951bb6418 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x559951bb63d8 <col:55> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x559951bb6460 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x559951bb6448 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x559951bb63f8 <col:73> '_Bool' lvalue Var 0x559951baf3d8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559951bb64d8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x559951bb6498 <col:90> 'int' lvalue Var 0x559951baf828 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x559951bb64f0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x559951bb64b8 <col:102> 'int' lvalue Var 0x559951baeff0 'z' 'int'
    |-BinaryOperator 0x559951bb67a8 <line:823:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559951bb65c0 <col:3> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x559951bb6790 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559951bb6760 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559951bb6680 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559951bb6638 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559951bb6620 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559951bb65e0 <col:20> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559951bb6668 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559951bb6650 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559951bb6600 <col:38> '_Bool' lvalue Var 0x559951baf180 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559951bb6718 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559951bb66d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559951bb66a0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559951bb6748 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559951bb6730 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559951bb66f8 <col:66> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x559951bb6a90 <line:824:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559951bb67c8 <col:3> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x559951bb6a78 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559951bb6a48 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559951bb6968 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559951bb6888 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559951bb6840 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559951bb6828 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559951bb67e8 <col:20> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559951bb6870 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559951bb6858 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559951bb6808 <col:38> '_Bool' lvalue Var 0x559951baf180 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559951bb6948 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559951bb6900 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559951bb68e8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559951bb68a8 <col:56> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559951bb6930 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559951bb6918 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559951bb68c8 <col:74> '_Bool' lvalue Var 0x559951baf3d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559951bb6a00 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559951bb69b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559951bb6988 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559951bb6a30 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559951bb6a18 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559951bb69e0 <col:102> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x559951bb6c98 <line:825:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559951bb6ab0 <col:3> '_Bool' lvalue Var 0x559951baf180 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559951bb6c80 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559951bb6c50 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559951bb6b70 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559951bb6b28 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559951bb6b10 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559951bb6ad0 <col:20> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559951bb6b58 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559951bb6b40 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559951bb6af0 <col:38> '_Bool' lvalue Var 0x559951baf180 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559951bb6c08 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559951bb6bc0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559951bb6b90 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559951bb6c38 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559951bb6c20 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559951bb6be8 <col:66> '_Bool' lvalue Var 0x559951baf180 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x559951bb6f80 <line:826:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559951bb6cb8 <col:3> '_Bool' lvalue Var 0x559951baf3d8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559951bb6f68 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559951bb6f38 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559951bb6e58 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559951bb6d78 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559951bb6d30 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559951bb6d18 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559951bb6cd8 <col:20> '_Bool' lvalue Var 0x559951baf7a8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559951bb6d60 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559951bb6d48 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559951bb6cf8 <col:38> '_Bool' lvalue Var 0x559951baf180 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559951bb6e38 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559951bb6df0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559951bb6dd8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559951bb6d98 <col:56> '_Bool' lvalue Var 0x559951baf8a0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559951bb6e20 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559951bb6e08 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559951bb6db8 <col:74> '_Bool' lvalue Var 0x559951baf3d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559951bb6ef0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559951bb6ea8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559951bb6e78 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559951bb6f20 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559951bb6f08 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559951bb6ed0 <col:102> '_Bool' lvalue Var 0x559951baf3d8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x559951bb6ff0 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559951bb6fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559951bb6fa0 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559951bb7048 <line:828:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559951bb7030 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559951bb7010 <col:3> 'void ()' Function 0x559951b55350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559951bb7318 <line:829:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x559951bb7068 <col:3> '_Bool' lvalue Var 0x559951baec78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x559951bb7300 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x559951bb72e8 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x559951bb72c8 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x559951bb72a8 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x559951bb7210 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x559951bb7178 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x559951bb70e0 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x559951bb70c8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x559951bb7088 <col:23> 'int' lvalue Var 0x559951baed78 'x' 'int'
    |         | | | `-IntegerLiteral 0x559951bb70a8 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x559951bb7158 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x559951bb7140 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x559951bb7100 <col:33> 'int' lvalue Var 0x559951bae808 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x559951bb7120 <col:56> 'int' 0
    |         | `-BinaryOperator 0x559951bb71f0 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x559951bb71d8 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x559951bb7198 <col:61> 'int' lvalue Var 0x559951bae928 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x559951bb71b8 <col:84> 'int' 0
    |         `-BinaryOperator 0x559951bb7288 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x559951bb7270 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x559951bb7230 <col:89> 'int' lvalue Var 0x559951baea48 '__unbuffered_p3_EAX' 'int'
    |           `-IntegerLiteral 0x559951bb7250 <col:112> 'int' 0
    |-CallExpr 0x559951bb7370 <line:830:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559951bb7358 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559951bb7338 <col:3> 'void ()' Function 0x559951b55410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559951bb73e8 <line:831:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559951bb73d0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559951bb7390 <col:3> 'void (int)' Function 0x559951b550d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x559951bb7428 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559951bb7410 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559951bb73b0 <col:21> '_Bool' lvalue Var 0x559951baec78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x559951bb7460 <line:832:3, col:10>
      `-IntegerLiteral 0x559951bb7440 <col:10> 'int' 0
