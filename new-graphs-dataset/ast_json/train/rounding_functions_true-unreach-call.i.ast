TranslationUnitDecl 0x562f07202da8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x562f07203668 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x562f07203340 '__int128'
|-TypedefDecl 0x562f072036d8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x562f07203360 'unsigned __int128'
|-TypedefDecl 0x562f072039e0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x562f072037b0 'struct __NSConstantString_tag'
|   `-Record 0x562f07203730 '__NSConstantString_tag'
|-TypedefDecl 0x562f07203a88 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x562f07203a40 'char *'
|   `-BuiltinType 0x562f07202e40 'char'
|-TypedefDecl 0x562f07242960 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x562f07203d20 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x562f07203b60 'struct __va_list_tag'
|     `-Record 0x562f07203ae0 '__va_list_tag'
|-TypedefDecl 0x562f072429d0 <floats-esbmc-regression/rounding_functions_true-unreach-call.i:22:1, col:15> col:15 float_t 'float'
| `-BuiltinType 0x562f07202fa0 'float'
|-TypedefDecl 0x562f07242a40 <line:23:1, col:16> col:16 double_t 'double'
| `-BuiltinType 0x562f07202fc0 'double'
|-FunctionDecl 0x562f07242b88 <line:24:15> col:15 implicit acos 'double (double)' extern
| |-ParmVarDecl 0x562f07242c28 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f07242c98 <col:15> Implicit
|-FunctionDecl 0x562f07242cf0 prev 0x562f07242b88 <col:1, col:62> col:15 acos 'double (double)' extern
| |-ParmVarDecl 0x562f07242ab0 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x562f07242d98 <col:49>
|-FunctionDecl 0x562f07242ea0 <col:65, col:128> col:79 __acos 'double (double)' extern
| |-ParmVarDecl 0x562f07242e08 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x562f07242f48 <col:115>
|-FunctionDecl 0x562f07243098 <line:26:15> col:15 implicit asin 'double (double)' extern
| |-ParmVarDecl 0x562f07243138 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f072431a8 <col:15> Implicit
|-FunctionDecl 0x562f07243200 prev 0x562f07243098 <col:1, col:62> col:15 asin 'double (double)' extern
| |-ParmVarDecl 0x562f07243000 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x562f072432a8 <col:49>
|-FunctionDecl 0x562f072433b0 <col:65, col:128> col:79 __asin 'double (double)' extern
| |-ParmVarDecl 0x562f07243318 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x562f07243458 <col:115>
|-FunctionDecl 0x562f07243560 <line:28:15> col:15 implicit atan 'double (double)' extern
| |-ParmVarDecl 0x562f07243600 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f07243670 <col:15> Implicit
|-FunctionDecl 0x562f072436c8 prev 0x562f07243560 <col:1, col:62> col:15 atan 'double (double)' extern
| |-ParmVarDecl 0x562f072434c8 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x562f07243770 <col:49>
|-FunctionDecl 0x562f07243878 <col:65, col:128> col:79 __atan 'double (double)' extern
| |-ParmVarDecl 0x562f072437e0 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x562f07243920 <col:115>
|-FunctionDecl 0x562f072667c8 <line:30:15> col:15 implicit atan2 'double (double, double)' extern
| |-ParmVarDecl 0x562f07266868 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f072668d0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f07266948 <col:15> Implicit
|-FunctionDecl 0x562f072669a0 prev 0x562f072667c8 <col:1, col:75> col:15 atan2 'double (double, double)' extern
| |-ParmVarDecl 0x562f07266668 <col:22, col:29> col:29 __y 'double'
| |-ParmVarDecl 0x562f072666e8 <col:34, col:41> col:41 __x 'double'
| `-NoThrowAttr 0x562f07266a50 <col:62>
|-FunctionDecl 0x562f07266be0 <col:78, col:154> col:92 __atan2 'double (double, double)' extern
| |-ParmVarDecl 0x562f07266ac0 <col:101, col:108> col:108 __y 'double'
| |-ParmVarDecl 0x562f07266b40 <col:113, col:120> col:120 __x 'double'
| `-NoThrowAttr 0x562f07266c90 <col:141>
|-FunctionDecl 0x562f07266d98 <line:33:16> col:16 implicit cos 'double (double)' extern
| |-ParmVarDecl 0x562f07266e38 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f07266ea8 <col:16> Implicit
|-FunctionDecl 0x562f07266f00 prev 0x562f07266d98 <col:2, col:62> col:16 cos 'double (double)' extern
| |-ParmVarDecl 0x562f07266d00 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x562f07266fa8 <col:49>
|-FunctionDecl 0x562f072670b0 <col:65, col:127> col:79 __cos 'double (double)' extern
| |-ParmVarDecl 0x562f07267018 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x562f07267158 <col:114>
|-FunctionDecl 0x562f07267260 <line:35:16> col:16 implicit sin 'double (double)' extern
| |-ParmVarDecl 0x562f07267300 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f07267370 <col:16> Implicit
|-FunctionDecl 0x562f072673c8 prev 0x562f07267260 <col:2, col:62> col:16 sin 'double (double)' extern
| |-ParmVarDecl 0x562f072671c8 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x562f07267470 <col:49>
|-FunctionDecl 0x562f07267578 <col:65, col:127> col:79 __sin 'double (double)' extern
| |-ParmVarDecl 0x562f072674e0 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x562f07269660 <col:114>
|-FunctionDecl 0x562f07269768 <line:37:15> col:15 implicit tan 'double (double)' extern
| |-ParmVarDecl 0x562f07269808 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f07269878 <col:15> Implicit
|-FunctionDecl 0x562f072698d0 prev 0x562f07269768 <col:1, col:61> col:15 tan 'double (double)' extern
| |-ParmVarDecl 0x562f072696d0 <col:20, col:27> col:27 __x 'double'
| `-NoThrowAttr 0x562f07269978 <col:48>
|-FunctionDecl 0x562f07269a80 <col:64, col:126> col:78 __tan 'double (double)' extern
| |-ParmVarDecl 0x562f072699e8 <col:85, col:92> col:92 __x 'double'
| `-NoThrowAttr 0x562f07269b28 <col:113>
|-FunctionDecl 0x562f07269c30 <line:42:15> col:15 implicit cosh 'double (double)' extern
| |-ParmVarDecl 0x562f07269cd0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f07269d40 <col:15> Implicit
|-FunctionDecl 0x562f07269d98 prev 0x562f07269c30 <col:1, col:62> col:15 cosh 'double (double)' extern
| |-ParmVarDecl 0x562f07269b98 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x562f07269e40 <col:49>
|-FunctionDecl 0x562f07269f48 <col:65, col:128> col:79 __cosh 'double (double)' extern
| |-ParmVarDecl 0x562f07269eb0 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x562f07269ff0 <col:115>
|-FunctionDecl 0x562f0726a0f8 <line:44:15> col:15 implicit sinh 'double (double)' extern
| |-ParmVarDecl 0x562f0726a198 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0726a208 <col:15> Implicit
|-FunctionDecl 0x562f0726a260 prev 0x562f0726a0f8 <col:1, col:62> col:15 sinh 'double (double)' extern
| |-ParmVarDecl 0x562f0726a060 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x562f0726a308 <col:49>
|-FunctionDecl 0x562f0726a410 <col:65, col:128> col:79 __sinh 'double (double)' extern
| |-ParmVarDecl 0x562f0726a378 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x562f0726a4b8 <col:115>
|-FunctionDecl 0x562f0726a5c0 <line:46:15> col:15 implicit tanh 'double (double)' extern
| |-ParmVarDecl 0x562f0726a670 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0726a6e0 <col:15> Implicit
|-FunctionDecl 0x562f0726a738 prev 0x562f0726a5c0 <col:1, col:62> col:15 tanh 'double (double)' extern
| |-ParmVarDecl 0x562f0726a528 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x562f0726a7e0 <col:49>
|-FunctionDecl 0x562f0726a8e8 <col:65, col:128> col:79 __tanh 'double (double)' extern
| |-ParmVarDecl 0x562f0726a850 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x562f0726a990 <col:115>
|-FunctionDecl 0x562f0726aa98 <line:47:15> col:15 implicit acosh 'double (double)' extern
| |-ParmVarDecl 0x562f0726ab38 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0726aba8 <col:15> Implicit
|-FunctionDecl 0x562f0726ac00 prev 0x562f0726aa98 <col:1, col:63> col:15 acosh 'double (double)' extern
| |-ParmVarDecl 0x562f0726aa00 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x562f0726aca8 <col:50>
|-FunctionDecl 0x562f0726adb0 <col:66, col:130> col:80 __acosh 'double (double)' extern
| |-ParmVarDecl 0x562f0726ad18 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x562f0726ae58 <col:117>
|-FunctionDecl 0x562f0726af60 <line:49:15> col:15 implicit asinh 'double (double)' extern
| |-ParmVarDecl 0x562f0726b000 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0726b070 <col:15> Implicit
|-FunctionDecl 0x562f0726b0c8 prev 0x562f0726af60 <col:1, col:63> col:15 asinh 'double (double)' extern
| |-ParmVarDecl 0x562f0726aec8 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x562f0726b170 <col:50>
|-FunctionDecl 0x562f0726b278 <col:66, col:130> col:80 __asinh 'double (double)' extern
| |-ParmVarDecl 0x562f0726b1e0 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x562f0726b320 <col:117>
|-FunctionDecl 0x562f0726b428 <line:51:15> col:15 implicit atanh 'double (double)' extern
| |-ParmVarDecl 0x562f0726b4c8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0726b538 <col:15> Implicit
|-FunctionDecl 0x562f0726b590 prev 0x562f0726b428 <col:1, col:63> col:15 atanh 'double (double)' extern
| |-ParmVarDecl 0x562f0726b390 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x562f0726b638 <col:50>
|-FunctionDecl 0x562f0726b760 <col:66, col:130> col:80 __atanh 'double (double)' extern
| |-ParmVarDecl 0x562f0726b6c8 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x562f0726b808 <col:117>
|-FunctionDecl 0x562f0726b910 <line:59:16> col:16 implicit exp 'double (double)' extern
| |-ParmVarDecl 0x562f0726b9b0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0726ba20 <col:16> Implicit
|-FunctionDecl 0x562f0726ba78 prev 0x562f0726b910 <col:2, col:62> col:16 exp 'double (double)' extern
| |-ParmVarDecl 0x562f0726b878 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x562f0726bb20 <col:49>
|-FunctionDecl 0x562f0726bc28 <col:65, col:127> col:79 __exp 'double (double)' extern
| |-ParmVarDecl 0x562f0726bb90 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x562f0726bcd0 <col:114>
|-FunctionDecl 0x562f0726bed8 <line:62:15> col:15 implicit frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x562f0726bf78 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f0726bfe0 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x562f0726c058 <col:15> Implicit
|-FunctionDecl 0x562f0726c0b0 prev 0x562f0726bed8 <col:1, col:80> col:15 frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x562f0726bd40 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x562f0726bdf8 <col:34, col:39> col:39 __exponent 'int *'
| `-NoThrowAttr 0x562f0726c160 <col:67>
|-FunctionDecl 0x562f0726c2f0 <col:83, col:164> col:97 __frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x562f0726c1d0 <col:106, col:113> col:113 __x 'double'
| |-ParmVarDecl 0x562f0726c250 <col:118, col:123> col:123 __exponent 'int *'
| `-NoThrowAttr 0x562f0726c3a0 <col:151>
|-FunctionDecl 0x562f0726c578 <line:65:15> col:15 implicit ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x562f0726c618 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f0726c690 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x562f0726c708 <col:15> Implicit
|-FunctionDecl 0x562f0726c760 prev 0x562f0726c578 <col:1, col:79> col:15 ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x562f0726c410 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x562f0726c490 <col:34, col:38> col:38 __exponent 'int'
| `-NoThrowAttr 0x562f0726c810 <col:66>
|-FunctionDecl 0x562f0726c9a0 <col:82, col:162> col:96 __ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x562f0726c880 <col:105, col:112> col:112 __x 'double'
| |-ParmVarDecl 0x562f0726c900 <col:117, col:121> col:121 __exponent 'int'
| `-NoThrowAttr 0x562f0726ca50 <col:149>
|-FunctionDecl 0x562f0726cb58 <line:68:16> col:16 implicit log 'double (double)' extern
| |-ParmVarDecl 0x562f0726cbf8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0726cc68 <col:16> Implicit
|-FunctionDecl 0x562f0726ccc0 prev 0x562f0726cb58 <col:2, col:62> col:16 log 'double (double)' extern
| |-ParmVarDecl 0x562f0726cac0 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x562f0726cd68 <col:49>
|-FunctionDecl 0x562f0726ce70 <col:65, col:127> col:79 __log 'double (double)' extern
| |-ParmVarDecl 0x562f0726cdd8 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x562f0726cf18 <col:114>
|-FunctionDecl 0x562f0726d020 <line:71:15> col:15 implicit log10 'double (double)' extern
| |-ParmVarDecl 0x562f0726d0c0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0726d130 <col:15> Implicit
|-FunctionDecl 0x562f0726d188 prev 0x562f0726d020 <col:1, col:63> col:15 log10 'double (double)' extern
| |-ParmVarDecl 0x562f0726cf88 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x562f0726d230 <col:50>
|-FunctionDecl 0x562f0726d338 <col:66, col:130> col:80 __log10 'double (double)' extern
| |-ParmVarDecl 0x562f0726d2a0 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x562f0726d3e0 <col:117>
|-FunctionDecl 0x562f0726d5e8 <line:74:15> col:15 implicit modf 'double (double, double *)' extern
| |-ParmVarDecl 0x562f0726deb0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f0726df18 <<invalid sloc>> <invalid sloc> 'double *'
| `-NoThrowAttr 0x562f0726df90 <col:15> Implicit
|-FunctionDecl 0x562f0726dfe8 prev 0x562f0726d5e8 <col:1, col:78> col:15 modf 'double (double, double *)' extern
| |-ParmVarDecl 0x562f0726d450 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x562f0726d508 <col:33, col:41> col:41 __iptr 'double *'
| `-NoThrowAttr 0x562f0726e098 <col:65>
|-FunctionDecl 0x562f0726e248 <col:81, col:194> col:95 __modf 'double (double, double *)' extern
| |-ParmVarDecl 0x562f0726e108 <col:103, col:110> col:110 __x 'double'
| |-ParmVarDecl 0x562f0726e188 <col:115, col:123> col:123 __iptr 'double *'
| |-NoThrowAttr 0x562f0726e2f8 <col:147>
| `-NonNullAttr 0x562f0726e350 <col:178, col:192> 2
|-FunctionDecl 0x562f0726e438 <line:75:15> col:15 implicit expm1 'double (double)' extern
| |-ParmVarDecl 0x562f0726e4d8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0726e548 <col:15> Implicit
|-FunctionDecl 0x562f0726e5a0 prev 0x562f0726e438 <col:1, col:63> col:15 expm1 'double (double)' extern
| |-ParmVarDecl 0x562f0726e3a0 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x562f0726e648 <col:50>
|-FunctionDecl 0x562f0726e750 <col:66, col:130> col:80 __expm1 'double (double)' extern
| |-ParmVarDecl 0x562f0726e6b8 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x562f0726e7f8 <col:117>
|-FunctionDecl 0x562f0726e900 <line:78:15> col:15 implicit log1p 'double (double)' extern
| |-ParmVarDecl 0x562f0726e9a0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0726ea10 <col:15> Implicit
|-FunctionDecl 0x562f0726ea68 prev 0x562f0726e900 <col:1, col:63> col:15 log1p 'double (double)' extern
| |-ParmVarDecl 0x562f0726e868 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x562f0726eb10 <col:50>
|-FunctionDecl 0x562f0726ec18 <col:66, col:130> col:80 __log1p 'double (double)' extern
| |-ParmVarDecl 0x562f0726eb80 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x562f0726ecc0 <col:117>
|-FunctionDecl 0x562f0726edc8 <line:81:15> col:15 implicit logb 'double (double)' extern
| |-ParmVarDecl 0x562f0726eec0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0726ef30 <col:15> Implicit
|-FunctionDecl 0x562f0726ef88 prev 0x562f0726edc8 <col:1, col:62> col:15 logb 'double (double)' extern
| |-ParmVarDecl 0x562f0726ed30 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x562f0726f030 <col:49>
|-FunctionDecl 0x562f0726f138 <col:65, col:128> col:79 __logb 'double (double)' extern
| |-ParmVarDecl 0x562f0726f0a0 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x562f0726f1e0 <col:115>
|-FunctionDecl 0x562f0726f2e8 <line:88:15> col:15 implicit exp2 'double (double)' extern
| |-ParmVarDecl 0x562f0726f388 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0726f3f8 <col:15> Implicit
|-FunctionDecl 0x562f0726f450 prev 0x562f0726f2e8 <col:1, col:62> col:15 exp2 'double (double)' extern
| |-ParmVarDecl 0x562f0726f250 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x562f0726f4f8 <col:49>
|-FunctionDecl 0x562f0726f600 <col:65, col:128> col:79 __exp2 'double (double)' extern
| |-ParmVarDecl 0x562f0726f568 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x562f0726f6a8 <col:115>
|-FunctionDecl 0x562f0726f7b0 <line:91:15> col:15 implicit log2 'double (double)' extern
| |-ParmVarDecl 0x562f0726f850 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0726f8c0 <col:15> Implicit
|-FunctionDecl 0x562f0726f918 prev 0x562f0726f7b0 <col:1, col:62> col:15 log2 'double (double)' extern
| |-ParmVarDecl 0x562f0726f718 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x562f0726f9c0 <col:49>
|-FunctionDecl 0x562f0726fac8 <col:65, col:128> col:79 __log2 'double (double)' extern
| |-ParmVarDecl 0x562f0726fa30 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x562f0726fb70 <col:115>
|-FunctionDecl 0x562f0726fd00 <line:92:16> col:16 implicit pow 'double (double, double)' extern
| |-ParmVarDecl 0x562f0726fda0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f0726fe08 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0726fe80 <col:16> Implicit
|-FunctionDecl 0x562f0726ff00 prev 0x562f0726fd00 <col:2, col:74> col:16 pow 'double (double, double)' extern
| |-ParmVarDecl 0x562f0726fbe0 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x562f0726fc60 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x562f0726ffb0 <col:61>
|-FunctionDecl 0x562f07270140 <col:77, col:151> col:91 __pow 'double (double, double)' extern
| |-ParmVarDecl 0x562f07270020 <col:98, col:105> col:105 __x 'double'
| |-ParmVarDecl 0x562f072700a0 <col:110, col:117> col:117 __y 'double'
| `-NoThrowAttr 0x562f072701f0 <col:138>
|-FunctionDecl 0x562f072702f8 <line:95:15> col:15 implicit sqrt 'double (double)' extern
| |-ParmVarDecl 0x562f07270398 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f07270408 <col:15> Implicit
|-FunctionDecl 0x562f07270460 prev 0x562f072702f8 <col:1, col:62> col:15 sqrt 'double (double)' extern
| |-ParmVarDecl 0x562f07270260 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x562f07270508 <col:49>
|-FunctionDecl 0x562f07270610 <col:65, col:128> col:79 __sqrt 'double (double)' extern
| |-ParmVarDecl 0x562f07270578 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x562f072706b8 <col:115>
|-FunctionDecl 0x562f07270848 <line:101:15> col:15 implicit hypot 'double (double, double)' extern
| |-ParmVarDecl 0x562f072708e8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f07270950 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f072709c8 <col:15> Implicit
|-FunctionDecl 0x562f07270a20 prev 0x562f07270848 <col:1, col:75> col:15 hypot 'double (double, double)' extern
| |-ParmVarDecl 0x562f07270728 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x562f072707a8 <col:34, col:41> col:41 __y 'double'
| `-NoThrowAttr 0x562f07270ad0 <col:62>
|-FunctionDecl 0x562f07270c60 <col:78, col:154> col:92 __hypot 'double (double, double)' extern
| |-ParmVarDecl 0x562f07270b40 <col:101, col:108> col:108 __x 'double'
| |-ParmVarDecl 0x562f07270bc0 <col:113, col:120> col:120 __y 'double'
| `-NoThrowAttr 0x562f07270d10 <col:141>
|-FunctionDecl 0x562f07270e18 <line:108:15> col:15 implicit cbrt 'double (double)' extern
| |-ParmVarDecl 0x562f07270ee0 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x562f07270f50 <col:15> Implicit
| `-ConstAttr 0x562f07270fa8 <col:15> Implicit
|-FunctionDecl 0x562f07270fd0 prev 0x562f07270e18 <col:1, col:62> col:15 cbrt 'double (double)' extern
| |-ParmVarDecl 0x562f07270d80 <col:21, col:28> col:28 __x 'double'
| |-ConstAttr 0x562f072710d0 <col:15> Inherited Implicit
| `-NoThrowAttr 0x562f07271078 <col:49>
|-FunctionDecl 0x562f072711a8 <col:65, col:128> col:79 __cbrt 'double (double)' extern
| |-ParmVarDecl 0x562f07271110 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x562f07271250 <col:115>
|-FunctionDecl 0x562f07271358 <line:109:15> col:15 implicit used ceil 'double (double)' extern
| |-ParmVarDecl 0x562f072713f8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x562f07271468 <col:15> Implicit
| `-ConstAttr 0x562f072714c0 <col:15> Implicit
|-FunctionDecl 0x562f072714e8 prev 0x562f07271358 <col:1, col:90> col:15 used ceil 'double (double)' extern
| |-ParmVarDecl 0x562f072712c0 <col:21, col:28> col:28 __x 'double'
| |-NoThrowAttr 0x562f07271590 <col:49>
| `-ConstAttr 0x562f072715e8 <col:80>
|-FunctionDecl 0x562f072716c0 <col:93, col:184> col:107 __ceil 'double (double)' extern
| |-ParmVarDecl 0x562f07271628 <col:115, col:122> col:122 __x 'double'
| |-NoThrowAttr 0x562f07271768 <col:143>
| `-ConstAttr 0x562f072717c0 <col:174>
|-FunctionDecl 0x562f07271898 <line:112:15> col:15 implicit fabs 'double (double)' extern
| |-ParmVarDecl 0x562f07271938 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x562f072719a8 <col:15> Implicit
| `-ConstAttr 0x562f07271a00 <col:15> Implicit
|-FunctionDecl 0x562f07271a28 prev 0x562f07271898 <col:1, col:90> col:15 fabs 'double (double)' extern
| |-ParmVarDecl 0x562f07271800 <col:21, col:28> col:28 __x 'double'
| |-NoThrowAttr 0x562f07271ad0 <col:49>
| `-ConstAttr 0x562f07271b28 <col:80>
|-FunctionDecl 0x562f07271c00 <col:93, col:184> col:107 __fabs 'double (double)' extern
| |-ParmVarDecl 0x562f07271b68 <col:115, col:122> col:122 __x 'double'
| |-NoThrowAttr 0x562f07271ca8 <col:143>
| `-ConstAttr 0x562f07271d00 <col:174>
|-FunctionDecl 0x562f07271dd8 <line:115:15> col:15 implicit used floor 'double (double)' extern
| |-ParmVarDecl 0x562f07271e78 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x562f07271ef8 <col:15> Implicit
| `-ConstAttr 0x562f07271f50 <col:15> Implicit
|-FunctionDecl 0x562f07271f78 prev 0x562f07271dd8 <col:1, col:91> col:15 used floor 'double (double)' extern
| |-ParmVarDecl 0x562f07271d40 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x562f07272020 <col:50>
| `-ConstAttr 0x562f07272078 <col:81>
|-FunctionDecl 0x562f07272150 <col:94, col:186> col:108 __floor 'double (double)' extern
| |-ParmVarDecl 0x562f072720b8 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x562f072721f8 <col:145>
| `-ConstAttr 0x562f07272250 <col:176>
|-FunctionDecl 0x562f072723b0 <line:118:15> col:15 implicit fmod 'double (double, double)' extern
| |-ParmVarDecl 0x562f07272450 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f072724b8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f07272530 <col:15> Implicit
|-FunctionDecl 0x562f07272588 prev 0x562f072723b0 <col:1, col:74> col:15 fmod 'double (double, double)' extern
| |-ParmVarDecl 0x562f07272290 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x562f07272310 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x562f07272638 <col:61>
|-FunctionDecl 0x562f072727c8 <col:77, col:152> col:91 __fmod 'double (double, double)' extern
| |-ParmVarDecl 0x562f072726a8 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x562f07272728 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x562f07272878 <col:139>
|-FunctionDecl 0x562f072729b8 <line:123:1, col:94> col:12 __isinf 'int (double)' extern
| |-ParmVarDecl 0x562f072728e8 <col:21, col:28> col:28 __value 'double'
| |-NoThrowAttr 0x562f07272a60 <col:53>
| `-ConstAttr 0x562f07272ab8 <col:84>
|-FunctionDecl 0x562f07272b90 <line:126:12> col:12 implicit __finite 'int (double)' extern
| |-ParmVarDecl 0x562f07272c30 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x562f07272ca0 <col:12> Implicit
| `-ConstAttr 0x562f07272cf8 <col:12> Implicit
|-FunctionDecl 0x562f07272d20 prev 0x562f07272b90 <col:1, col:95> col:12 __finite 'int (double)' extern
| |-ParmVarDecl 0x562f07272af8 <col:22, col:29> col:29 __value 'double'
| |-NoThrowAttr 0x562f07272dc8 <col:54>
| `-ConstAttr 0x562f07272e20 <col:85>
|-FunctionDecl 0x562f07273f40 <line:132:1, col:92> col:12 isinf 'int (double)' extern
| |-ParmVarDecl 0x562f07272e60 <col:19, col:26> col:26 __value 'double'
| |-NoThrowAttr 0x562f07273fe8 <col:51>
| `-ConstAttr 0x562f07274040 <col:82>
|-FunctionDecl 0x562f07274118 <line:135:12> col:12 implicit finite 'int (double)' extern
| |-ParmVarDecl 0x562f072741b8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x562f07274228 <col:12> Implicit
| `-ConstAttr 0x562f07274280 <col:12> Implicit
|-FunctionDecl 0x562f072742a8 prev 0x562f07274118 <col:1, col:93> col:12 finite 'int (double)' extern
| |-ParmVarDecl 0x562f07274080 <col:20, col:27> col:27 __value 'double'
| |-NoThrowAttr 0x562f07274350 <col:52>
| `-ConstAttr 0x562f072743a8 <col:83>
|-FunctionDecl 0x562f07274508 <line:138:1, col:74> col:15 drem 'double (double, double)' extern
| |-ParmVarDecl 0x562f072743e8 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x562f07274468 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x562f072745b8 <col:61>
|-FunctionDecl 0x562f07274748 <col:77, col:152> col:91 __drem 'double (double, double)' extern
| |-ParmVarDecl 0x562f07274628 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x562f072746a8 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x562f072747f8 <col:139>
|-FunctionDecl 0x562f07274900 <line:142:1, col:69> col:15 significand 'double (double)' extern
| |-ParmVarDecl 0x562f07274868 <col:28, col:35> col:35 __x 'double'
| `-NoThrowAttr 0x562f072749a8 <col:56>
|-FunctionDecl 0x562f07274ab0 <col:72, col:142> col:86 __significand 'double (double)' extern
| |-ParmVarDecl 0x562f07274a18 <col:101, col:108> col:108 __x 'double'
| `-NoThrowAttr 0x562f07274b58 <col:129>
|-FunctionDecl 0x562f07274ce8 <line:148:15> col:15 implicit copysign 'double (double, double)' extern
| |-ParmVarDecl 0x562f07274d88 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f07274df0 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x562f07274e68 <col:15> Implicit
| `-ConstAttr 0x562f07274ec0 <col:15> Implicit
|-FunctionDecl 0x562f07274f20 prev 0x562f07274ce8 <col:1, col:106> col:15 copysign 'double (double, double)' extern
| |-ParmVarDecl 0x562f07274bc8 <col:25, col:32> col:32 __x 'double'
| |-ParmVarDecl 0x562f07274c48 <col:37, col:44> col:44 __y 'double'
| |-NoThrowAttr 0x562f07274fd0 <col:65>
| `-ConstAttr 0x562f07275028 <col:96>
|-FunctionDecl 0x562f07275188 <col:109, col:216> col:123 __copysign 'double (double, double)' extern
| |-ParmVarDecl 0x562f07275068 <col:135, col:142> col:142 __x 'double'
| |-ParmVarDecl 0x562f072750e8 <col:147, col:154> col:154 __y 'double'
| |-NoThrowAttr 0x562f07275238 <col:175>
| `-ConstAttr 0x562f07275290 <col:206>
|-FunctionDecl 0x562f072753a8 <line:155:15> col:15 implicit nan 'double (const char *)' extern
| |-ParmVarDecl 0x562f07275448 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x562f072754b8 <col:15> Implicit
| `-PureAttr 0x562f07275510 <col:15> Implicit
|-FunctionDecl 0x562f07275538 prev 0x562f072753a8 <col:1, col:97> col:15 nan 'double (const char *)' extern
| |-ParmVarDecl 0x562f072752d0 <col:20, col:32> col:32 __tagb 'const char *'
| |-PureAttr 0x562f07275660 <col:15> Inherited Implicit
| |-NoThrowAttr 0x562f072755e0 <col:56>
| `-ConstAttr 0x562f07275638 <col:87>
|-FunctionDecl 0x562f07275738 <col:100, col:198> col:114 __nan 'double (const char *)' extern
| |-ParmVarDecl 0x562f072756a0 <col:121, col:133> col:133 __tagb 'const char *'
| |-NoThrowAttr 0x562f072757e0 <col:157>
| `-ConstAttr 0x562f07275838 <col:188>
|-FunctionDecl 0x562f07275910 <line:161:1, col:94> col:12 __isnan 'int (double)' extern
| |-ParmVarDecl 0x562f07275878 <col:21, col:28> col:28 __value 'double'
| |-NoThrowAttr 0x562f072759b8 <col:53>
| `-ConstAttr 0x562f07275a10 <col:84>
|-FunctionDecl 0x562f07275ae8 <line:165:1, col:92> col:12 isnan 'int (double)' extern
| |-ParmVarDecl 0x562f07275a50 <col:19, col:26> col:26 __value 'double'
| |-NoThrowAttr 0x562f07275b90 <col:51>
| `-ConstAttr 0x562f07275be8 <col:82>
|-FunctionDecl 0x562f07275cc0 <line:168:1, col:56> col:15 j0 'double (double)' extern
| |-ParmVarDecl 0x562f07275c28 <col:19> col:25 'double'
| `-NoThrowAttr 0x562f07275d68 <col:43>
|-FunctionDecl 0x562f07275e70 <col:59, col:116> col:73 __j0 'double (double)' extern
| |-ParmVarDecl 0x562f07275dd8 <col:79> col:85 'double'
| `-NoThrowAttr 0x562f07275f30 <col:103>
|-FunctionDecl 0x562f07276038 <line:169:1, col:56> col:15 j1 'double (double)' extern
| |-ParmVarDecl 0x562f07275fa0 <col:19> col:25 'double'
| `-NoThrowAttr 0x562f072760e0 <col:43>
|-FunctionDecl 0x562f072761e8 <col:59, col:116> col:73 __j1 'double (double)' extern
| |-ParmVarDecl 0x562f07276150 <col:79> col:85 'double'
| `-NoThrowAttr 0x562f07276290 <col:103>
|-FunctionDecl 0x562f07276468 <line:170:1, col:61> col:15 jn 'double (int, double)' extern
| |-ParmVarDecl 0x562f07276300 <col:19> col:22 'int'
| |-ParmVarDecl 0x562f07276380 <col:24> col:30 'double'
| `-NoThrowAttr 0x562f07276518 <col:48>
|-FunctionDecl 0x562f072766a8 <col:64, col:126> col:78 __jn 'double (int, double)' extern
| |-ParmVarDecl 0x562f07276588 <col:84> col:87 'int'
| |-ParmVarDecl 0x562f07276608 <col:89> col:95 'double'
| `-NoThrowAttr 0x562f07276758 <col:113>
|-FunctionDecl 0x562f07276860 <line:171:1, col:56> col:15 y0 'double (double)' extern
| |-ParmVarDecl 0x562f072767c8 <col:19> col:25 'double'
| `-NoThrowAttr 0x562f07276908 <col:43>
|-FunctionDecl 0x562f07276a10 <col:59, col:116> col:73 __y0 'double (double)' extern
| |-ParmVarDecl 0x562f07276978 <col:79> col:85 'double'
| `-NoThrowAttr 0x562f07276ab8 <col:103>
|-FunctionDecl 0x562f07276bc0 <line:172:1, col:56> col:15 y1 'double (double)' extern
| |-ParmVarDecl 0x562f07276b28 <col:19> col:25 'double'
| `-NoThrowAttr 0x562f07276c68 <col:43>
|-FunctionDecl 0x562f07276d70 <col:59, col:116> col:73 __y1 'double (double)' extern
| |-ParmVarDecl 0x562f07276cd8 <col:79> col:85 'double'
| `-NoThrowAttr 0x562f07276e18 <col:103>
|-FunctionDecl 0x562f07276fe0 <line:173:1, col:61> col:15 yn 'double (int, double)' extern
| |-ParmVarDecl 0x562f07276e88 <col:19> col:22 'int'
| |-ParmVarDecl 0x562f07276f40 <col:24> col:30 'double'
| `-NoThrowAttr 0x562f07277090 <col:48>
|-FunctionDecl 0x562f07277220 <col:64, col:126> col:78 __yn 'double (int, double)' extern
| |-ParmVarDecl 0x562f07277100 <col:84> col:87 'int'
| |-ParmVarDecl 0x562f07277180 <col:89> col:95 'double'
| `-NoThrowAttr 0x562f072772d0 <col:113>
|-FunctionDecl 0x562f072773d8 <line:180:15> col:15 implicit erf 'double (double)' extern
| |-ParmVarDecl 0x562f07277478 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f072774e8 <col:15> Implicit
|-FunctionDecl 0x562f07277540 prev 0x562f072773d8 <col:1, col:57> col:15 erf 'double (double)' extern
| |-ParmVarDecl 0x562f07277340 <col:20> col:26 'double'
| `-NoThrowAttr 0x562f072775e8 <col:44>
|-FunctionDecl 0x562f072776f0 <col:60, col:118> col:74 __erf 'double (double)' extern
| |-ParmVarDecl 0x562f07277658 <col:81> col:87 'double'
| `-NoThrowAttr 0x562f07277798 <col:105>
|-FunctionDecl 0x562f072778a0 <line:181:15> col:15 implicit erfc 'double (double)' extern
| |-ParmVarDecl 0x562f07277940 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f072779b0 <col:15> Implicit
|-FunctionDecl 0x562f07277a08 prev 0x562f072778a0 <col:1, col:58> col:15 erfc 'double (double)' extern
| |-ParmVarDecl 0x562f07277808 <col:21> col:27 'double'
| `-NoThrowAttr 0x562f07277ab0 <col:45>
|-FunctionDecl 0x562f07277bb8 <col:61, col:120> col:75 __erfc 'double (double)' extern
| |-ParmVarDecl 0x562f07277b20 <col:83> col:89 'double'
| `-NoThrowAttr 0x562f07277c60 <col:107>
|-FunctionDecl 0x562f07277d68 <line:182:15> col:15 implicit lgamma 'double (double)' extern
| |-ParmVarDecl 0x562f07277e08 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f07277e78 <col:15> Implicit
|-FunctionDecl 0x562f07277f50 prev 0x562f07277d68 <col:1, col:60> col:15 lgamma 'double (double)' extern
| |-ParmVarDecl 0x562f07277cd0 <col:23> col:29 'double'
| `-NoThrowAttr 0x562f07277ff8 <col:47>
|-FunctionDecl 0x562f07278100 <col:63, col:124> col:77 __lgamma 'double (double)' extern
| |-ParmVarDecl 0x562f07278068 <col:87> col:93 'double'
| `-NoThrowAttr 0x562f072781a8 <col:111>
|-FunctionDecl 0x562f072782b0 <line:189:15> col:15 implicit tgamma 'double (double)' extern
| |-ParmVarDecl 0x562f07278350 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f072783c0 <col:15> Implicit
|-FunctionDecl 0x562f07278418 prev 0x562f072782b0 <col:1, col:60> col:15 tgamma 'double (double)' extern
| |-ParmVarDecl 0x562f07278218 <col:23> col:29 'double'
| `-NoThrowAttr 0x562f072784c0 <col:47>
|-FunctionDecl 0x562f072785c8 <col:63, col:124> col:77 __tgamma 'double (double)' extern
| |-ParmVarDecl 0x562f07278530 <col:87> col:93 'double'
| `-NoThrowAttr 0x562f07278670 <col:111>
|-FunctionDecl 0x562f07278778 <line:195:1, col:59> col:15 gamma 'double (double)' extern
| |-ParmVarDecl 0x562f072786e0 <col:22> col:28 'double'
| `-NoThrowAttr 0x562f07278820 <col:46>
|-FunctionDecl 0x562f07278928 <col:62, col:122> col:76 __gamma 'double (double)' extern
| |-ParmVarDecl 0x562f07278890 <col:85> col:91 'double'
| `-NoThrowAttr 0x562f072789d0 <col:109>
|-FunctionDecl 0x562f07278b60 <line:202:1, col:79> col:15 lgamma_r 'double (double, int *)' extern
| |-ParmVarDecl 0x562f07278a40 <col:25> col:31 'double'
| |-ParmVarDecl 0x562f07278ac0 <col:33, col:38> col:38 __signgamp 'int *'
| `-NoThrowAttr 0x562f07278c10 <col:66>
|-FunctionDecl 0x562f07278da0 <col:82, col:162> col:96 __lgamma_r 'double (double, int *)' extern
| |-ParmVarDecl 0x562f07278c80 <col:108> col:114 'double'
| |-ParmVarDecl 0x562f07278d00 <col:116, col:121> col:121 __signgamp 'int *'
| `-NoThrowAttr 0x562f07278e50 <col:149>
|-FunctionDecl 0x562f07278f90 <line:210:15> col:15 implicit rint 'double (double)' extern
| |-ParmVarDecl 0x562f07279030 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x562f072790a0 <col:15> Implicit
| `-ConstAttr 0x562f072790f8 <col:15> Implicit
|-FunctionDecl 0x562f07279120 prev 0x562f07278f90 <col:1, col:62> col:15 rint 'double (double)' extern
| |-ParmVarDecl 0x562f07278ec0 <col:21, col:28> col:28 __x 'double'
| |-ConstAttr 0x562f07279220 <col:15> Inherited Implicit
| `-NoThrowAttr 0x562f072791c8 <col:49>
|-FunctionDecl 0x562f072792f8 <col:65, col:128> col:79 __rint 'double (double)' extern
| |-ParmVarDecl 0x562f07279260 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x562f072793a0 <col:115>
|-FunctionDecl 0x562f07279530 <line:213:15> col:15 implicit nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x562f072795d0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f07279638 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f072796b0 <col:15> Implicit
|-FunctionDecl 0x562f07279708 prev 0x562f07279530 <col:1, col:107> col:15 nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x562f07279410 <col:26, col:33> col:33 __x 'double'
| |-ParmVarDecl 0x562f07279490 <col:38, col:45> col:45 __y 'double'
| |-NoThrowAttr 0x562f072797b8 <col:66>
| `-ConstAttr 0x562f07279810 <col:97>
|-FunctionDecl 0x562f07279970 <col:110, col:218> col:124 __nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x562f07279850 <col:137, col:144> col:144 __x 'double'
| |-ParmVarDecl 0x562f072798d0 <col:149, col:156> col:156 __y 'double'
| |-NoThrowAttr 0x562f07279a20 <col:177>
| `-ConstAttr 0x562f07279a78 <col:208>
|-FunctionDecl 0x562f07279c18 <line:215:15> col:15 implicit nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x562f07279cb8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f07279d20 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f07279d98 <col:15> Implicit
|-FunctionDecl 0x562f07279df0 prev 0x562f07279c18 <col:1, col:113> col:15 nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x562f07279ab8 <col:27, col:34> col:34 __x 'double'
| |-ParmVarDecl 0x562f07279b38 <col:39, col:51> col:51 __y 'long double'
| |-NoThrowAttr 0x562f07279ea0 <col:72>
| `-ConstAttr 0x562f07279ef8 <col:103>
|-FunctionDecl 0x562f0727a090 <col:116, col:230> col:130 __nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x562f07279f70 <col:144, col:151> col:151 __x 'double'
| |-ParmVarDecl 0x562f07279ff0 <col:156, col:168> col:168 __y 'long double'
| |-NoThrowAttr 0x562f0727a140 <col:189>
| `-ConstAttr 0x562f0727a198 <col:220>
|-FunctionDecl 0x562f0727a2f8 <line:219:15> col:15 implicit remainder 'double (double, double)' extern
| |-ParmVarDecl 0x562f0727a398 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f0727a400 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0727a478 <col:15> Implicit
|-FunctionDecl 0x562f0727a4d0 prev 0x562f0727a2f8 <col:1, col:79> col:15 remainder 'double (double, double)' extern
| |-ParmVarDecl 0x562f0727a1d8 <col:26, col:33> col:33 __x 'double'
| |-ParmVarDecl 0x562f0727a258 <col:38, col:45> col:45 __y 'double'
| `-NoThrowAttr 0x562f0727a580 <col:66>
|-FunctionDecl 0x562f0727a710 <col:82, col:162> col:96 __remainder 'double (double, double)' extern
| |-ParmVarDecl 0x562f0727a5f0 <col:109, col:116> col:116 __x 'double'
| |-ParmVarDecl 0x562f0727a670 <col:121, col:128> col:128 __y 'double'
| `-NoThrowAttr 0x562f0727a7c0 <col:149>
|-FunctionDecl 0x562f0727a950 <line:223:15> col:15 implicit scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x562f0727a9f0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f0727aa58 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x562f0727aad0 <col:15> Implicit
|-FunctionDecl 0x562f0727ab28 prev 0x562f0727a950 <col:1, col:73> col:15 scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x562f0727a830 <col:23, col:30> col:30 __x 'double'
| |-ParmVarDecl 0x562f0727a8b0 <col:35, col:39> col:39 __n 'int'
| `-NoThrowAttr 0x562f0727abd8 <col:60>
|-FunctionDecl 0x562f0727ad68 <col:76, col:150> col:90 __scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x562f0727ac48 <col:100, col:107> col:107 __x 'double'
| |-ParmVarDecl 0x562f0727acc8 <col:112, col:116> col:116 __n 'int'
| `-NoThrowAttr 0x562f0727ae18 <col:137>
|-FunctionDecl 0x562f0727af80 <line:227:12> col:12 implicit ilogb 'int (double)' extern
| |-ParmVarDecl 0x562f0727b020 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0727b090 <col:12> Implicit
|-FunctionDecl 0x562f0727b0e8 prev 0x562f0727af80 <col:1, col:60> col:12 ilogb 'int (double)' extern
| |-ParmVarDecl 0x562f0727ae88 <col:19, col:26> col:26 __x 'double'
| `-NoThrowAttr 0x562f0727b190 <col:47>
|-FunctionDecl 0x562f0727b298 <col:63, col:124> col:74 __ilogb 'int (double)' extern
| |-ParmVarDecl 0x562f0727b200 <col:83, col:90> col:90 __x 'double'
| `-NoThrowAttr 0x562f0727b340 <col:111>
|-FunctionDecl 0x562f0727b518 <line:232:15> col:15 implicit scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x562f0727b5b8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f0727b620 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x562f0727b698 <col:15> Implicit
|-FunctionDecl 0x562f0727b6f0 prev 0x562f0727b518 <col:1, col:79> col:15 scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x562f0727b3b0 <col:24, col:31> col:31 __x 'double'
| |-ParmVarDecl 0x562f0727b430 <col:36, col:45> col:45 __n 'long'
| `-NoThrowAttr 0x562f0727b7a0 <col:66>
|-FunctionDecl 0x562f0727b930 <col:82, col:162> col:96 __scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x562f0727b810 <col:107, col:114> col:114 __x 'double'
| |-ParmVarDecl 0x562f0727b890 <col:119, col:128> col:128 __n 'long'
| `-NoThrowAttr 0x562f0727b9e0 <col:149>
|-FunctionDecl 0x562f0727bae8 <line:236:15> col:15 implicit nearbyint 'double (double)' extern
| |-ParmVarDecl 0x562f0727bb88 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x562f0727bbf8 <col:15> Implicit
| `-ConstAttr 0x562f0727bc50 <col:15> Implicit
|-FunctionDecl 0x562f0727bc78 prev 0x562f0727bae8 <col:1, col:67> col:15 nearbyint 'double (double)' extern
| |-ParmVarDecl 0x562f0727ba50 <col:26, col:33> col:33 __x 'double'
| |-ConstAttr 0x562f0727bd78 <col:15> Inherited Implicit
| `-NoThrowAttr 0x562f0727bd20 <col:54>
|-FunctionDecl 0x562f0727be50 <col:70, col:138> col:84 __nearbyint 'double (double)' extern
| |-ParmVarDecl 0x562f0727bdb8 <col:97, col:104> col:104 __x 'double'
| `-NoThrowAttr 0x562f0727bef8 <col:125>
|-FunctionDecl 0x562f0727c028 <line:240:15> col:15 implicit used round 'double (double)' extern
| |-ParmVarDecl 0x562f0727c0c8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x562f0727c138 <col:15> Implicit
| `-ConstAttr 0x562f0727c190 <col:15> Implicit
|-FunctionDecl 0x562f0727c1b8 prev 0x562f0727c028 <col:1, col:91> col:15 used round 'double (double)' extern
| |-ParmVarDecl 0x562f0727bf90 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x562f0727c260 <col:50>
| `-ConstAttr 0x562f0727c2b8 <col:81>
|-FunctionDecl 0x562f0727c390 <col:94, col:186> col:108 __round 'double (double)' extern
| |-ParmVarDecl 0x562f0727c2f8 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x562f0727c438 <col:145>
| `-ConstAttr 0x562f0727c490 <col:176>
|-FunctionDecl 0x562f0727c568 <line:244:15> col:15 implicit used trunc 'double (double)' extern
| |-ParmVarDecl 0x562f0727c608 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x562f0727c678 <col:15> Implicit
| `-ConstAttr 0x562f0727c6d0 <col:15> Implicit
|-FunctionDecl 0x562f0727c6f8 prev 0x562f0727c568 <col:1, col:91> col:15 used trunc 'double (double)' extern
| |-ParmVarDecl 0x562f0727c4d0 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x562f0727c7a0 <col:50>
| `-ConstAttr 0x562f0727c7f8 <col:81>
|-FunctionDecl 0x562f0727c8d0 <col:94, col:186> col:108 __trunc 'double (double)' extern
| |-ParmVarDecl 0x562f0727c838 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x562f0727c978 <col:145>
| `-ConstAttr 0x562f0727c9d0 <col:176>
|-FunctionDecl 0x562f0727cc08 <line:249:15> col:15 implicit remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x562f0727cca8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f0727cd10 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f0727cd78 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x562f0727cdf8 <col:15> Implicit
|-FunctionDecl 0x562f0727ce50 prev 0x562f0727cc08 <col:1, col:88> col:15 remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x562f0727ca10 <col:23, col:30> col:30 __x 'double'
| |-ParmVarDecl 0x562f0727ca90 <col:35, col:42> col:42 __y 'double'
| |-ParmVarDecl 0x562f0727cb10 <col:47, col:52> col:52 __quo 'int *'
| `-NoThrowAttr 0x562f0727cf08 <col:75>
|-FunctionDecl 0x562f0727d148 <col:91, col:180> col:105 __remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x562f0727cfa0 <col:115, col:122> col:122 __x 'double'
| |-ParmVarDecl 0x562f0727d020 <col:127, col:134> col:134 __y 'double'
| |-ParmVarDecl 0x562f0727d0a0 <col:139, col:144> col:144 __quo 'int *'
| `-NoThrowAttr 0x562f0727d200 <col:167>
|-FunctionDecl 0x562f0727d348 <line:256:17> col:17 implicit lrint 'long (double)' extern
| |-ParmVarDecl 0x562f0727d3e8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0727d458 <col:17> Implicit
|-FunctionDecl 0x562f0727d4b0 prev 0x562f0727d348 <col:1, col:65> col:17 lrint 'long (double)' extern
| |-ParmVarDecl 0x562f0727d270 <col:24, col:31> col:31 __x 'double'
| `-NoThrowAttr 0x562f0727d558 <col:52>
|-FunctionDecl 0x562f0727d660 <col:68, col:134> col:84 __lrint 'long (double)' extern
| |-ParmVarDecl 0x562f0727d5c8 <col:93, col:100> col:100 __x 'double'
| `-NoThrowAttr 0x562f0727d708 <col:121>
|-FunctionDecl 0x562f0727d848 <line:258:22> col:22 implicit llrint 'long long (double)' extern
| |-ParmVarDecl 0x562f0727d8e8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0727d958 <col:22> Implicit
|-FunctionDecl 0x562f0727d9b0 prev 0x562f0727d848 <col:1, col:71> col:22 llrint 'long long (double)' extern
| |-ParmVarDecl 0x562f0727d778 <col:30, col:37> col:37 __x 'double'
| `-NoThrowAttr 0x562f0727da58 <col:58>
|-FunctionDecl 0x562f0727db60 <col:74, col:146> col:95 __llrint 'long long (double)' extern
| |-ParmVarDecl 0x562f0727dac8 <col:105, col:112> col:112 __x 'double'
| `-NoThrowAttr 0x562f0727dc08 <col:133>
|-FunctionDecl 0x562f0727dd10 <line:262:17> col:17 implicit lround 'long (double)' extern
| |-ParmVarDecl 0x562f0727ddb0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0727de20 <col:17> Implicit
|-FunctionDecl 0x562f0727de78 prev 0x562f0727dd10 <col:1, col:66> col:17 lround 'long (double)' extern
| |-ParmVarDecl 0x562f0727dc78 <col:25, col:32> col:32 __x 'double'
| `-NoThrowAttr 0x562f0727df20 <col:53>
|-FunctionDecl 0x562f0727e048 <col:69, col:136> col:85 __lround 'long (double)' extern
| |-ParmVarDecl 0x562f0727dfb0 <col:95, col:102> col:102 __x 'double'
| `-NoThrowAttr 0x562f0727e0f0 <col:123>
|-FunctionDecl 0x562f0727e1f8 <line:264:22> col:22 implicit llround 'long long (double)' extern
| |-ParmVarDecl 0x562f0727e298 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0727e308 <col:22> Implicit
|-FunctionDecl 0x562f0727e360 prev 0x562f0727e1f8 <col:1, col:72> col:22 llround 'long long (double)' extern
| |-ParmVarDecl 0x562f0727e160 <col:31, col:38> col:38 __x 'double'
| `-NoThrowAttr 0x562f0727e408 <col:59>
|-FunctionDecl 0x562f0727e510 <col:75, col:148> col:96 __llround 'long long (double)' extern
| |-ParmVarDecl 0x562f0727e478 <col:107, col:114> col:114 __x 'double'
| `-NoThrowAttr 0x562f0727e5b8 <col:135>
|-FunctionDecl 0x562f0727e748 <line:268:15> col:15 implicit fdim 'double (double, double)' extern
| |-ParmVarDecl 0x562f0727e7e8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f0727e850 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x562f0727e8c8 <col:15> Implicit
|-FunctionDecl 0x562f0727e920 prev 0x562f0727e748 <col:1, col:74> col:15 fdim 'double (double, double)' extern
| |-ParmVarDecl 0x562f0727e628 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x562f0727e6a8 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x562f0727e9d0 <col:61>
|-FunctionDecl 0x562f0727eb60 <col:77, col:152> col:91 __fdim 'double (double, double)' extern
| |-ParmVarDecl 0x562f0727ea40 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x562f0727eac0 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x562f0727ec10 <col:139>
|-FunctionDecl 0x562f0727eda0 <line:271:15> col:15 implicit fmax 'double (double, double)' extern
| |-ParmVarDecl 0x562f0727ee40 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f0727eea8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x562f0727ef20 <col:15> Implicit
| `-ConstAttr 0x562f0727ef78 <col:15> Implicit
|-FunctionDecl 0x562f07272f00 prev 0x562f0727eda0 <col:1, col:102> col:15 fmax 'double (double, double)' extern
| |-ParmVarDecl 0x562f0727ec80 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x562f0727ed00 <col:33, col:40> col:40 __y 'double'
| |-NoThrowAttr 0x562f07272fb0 <col:61>
| `-ConstAttr 0x562f07273008 <col:92>
|-FunctionDecl 0x562f07273168 <col:105, col:208> col:119 __fmax 'double (double, double)' extern
| |-ParmVarDecl 0x562f07273048 <col:127, col:134> col:134 __x 'double'
| |-ParmVarDecl 0x562f072730c8 <col:139, col:146> col:146 __y 'double'
| |-NoThrowAttr 0x562f07273218 <col:167>
| `-ConstAttr 0x562f07273270 <col:198>
|-FunctionDecl 0x562f072733d0 <line:274:15> col:15 implicit fmin 'double (double, double)' extern
| |-ParmVarDecl 0x562f07273470 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f072734d8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x562f07273550 <col:15> Implicit
| `-ConstAttr 0x562f072735a8 <col:15> Implicit
|-FunctionDecl 0x562f072735d0 prev 0x562f072733d0 <col:1, col:102> col:15 fmin 'double (double, double)' extern
| |-ParmVarDecl 0x562f072732b0 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x562f07273330 <col:33, col:40> col:40 __y 'double'
| |-NoThrowAttr 0x562f07273680 <col:61>
| `-ConstAttr 0x562f072736d8 <col:92>
|-FunctionDecl 0x562f07273838 <col:105, col:208> col:119 __fmin 'double (double, double)' extern
| |-ParmVarDecl 0x562f07273718 <col:127, col:134> col:134 __x 'double'
| |-ParmVarDecl 0x562f07273798 <col:139, col:146> col:146 __y 'double'
| |-NoThrowAttr 0x562f072738e8 <col:167>
| `-ConstAttr 0x562f07273940 <col:198>
|-FunctionDecl 0x562f07273a18 <line:278:1, line:279:32> line:278:12 __fpclassify 'int (double)' extern
| |-ParmVarDecl 0x562f07273980 <col:26, col:33> col:33 __value 'double'
| |-NoThrowAttr 0x562f07273ac0 <col:58>
| `-ConstAttr 0x562f07273b18 <line:279:22>
|-FunctionDecl 0x562f07273bf0 <line:282:1, line:283:32> line:282:12 __signbit 'int (double)' extern
| |-ParmVarDecl 0x562f07273b58 <col:23, col:30> col:30 __value 'double'
| |-NoThrowAttr 0x562f07273c98 <col:55>
| `-ConstAttr 0x562f07273cf0 <line:283:22>
|-FunctionDecl 0x562f07282020 <line:287:15> col:15 implicit fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x562f072820c0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f07282128 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x562f07282190 <<invalid sloc>> <invalid sloc> 'double'
| |-ConstAttr 0x562f07282210 <col:15> Implicit
| `-NoThrowAttr 0x562f07282268 <col:15> Implicit
|-FunctionDecl 0x562f07282290 prev 0x562f07282020 <col:1, col:85> col:15 fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x562f07273d30 <col:20, col:27> col:27 __x 'double'
| |-ParmVarDecl 0x562f07273db0 <col:32, col:39> col:39 __y 'double'
| |-ParmVarDecl 0x562f07273e30 <col:44, col:51> col:51 __z 'double'
| |-ConstAttr 0x562f072823a0 <col:15> Inherited Implicit
| `-NoThrowAttr 0x562f07282348 <col:72>
|-FunctionDecl 0x562f07282588 <col:88, col:174> col:102 __fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x562f072823e0 <col:109, col:116> col:116 __x 'double'
| |-ParmVarDecl 0x562f07282460 <col:121, col:128> col:128 __y 'double'
| |-ParmVarDecl 0x562f072824e0 <col:133, col:140> col:140 __z 'double'
| `-NoThrowAttr 0x562f07282640 <col:161>
|-FunctionDecl 0x562f072827d0 <line:288:1, col:75> col:15 scalb 'double (double, double)' extern
| |-ParmVarDecl 0x562f072826b0 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x562f07282730 <col:34, col:41> col:41 __n 'double'
| `-NoThrowAttr 0x562f07282880 <col:62>
|-FunctionDecl 0x562f07282a10 <col:78, col:154> col:92 __scalb 'double (double, double)' extern
| |-ParmVarDecl 0x562f072828f0 <col:101, col:108> col:108 __x 'double'
| |-ParmVarDecl 0x562f07282970 <col:113, col:120> col:120 __n 'double'
| `-NoThrowAttr 0x562f07282ac0 <col:141>
|-FunctionDecl 0x562f07282c08 <line:289:14> col:14 implicit acosf 'float (float)' extern
| |-ParmVarDecl 0x562f07282ca8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07282d18 <col:14> Implicit
|-FunctionDecl 0x562f07282d70 prev 0x562f07282c08 <col:1, col:61> col:14 acosf 'float (float)' extern
| |-ParmVarDecl 0x562f07282b30 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x562f07282e18 <col:48>
|-FunctionDecl 0x562f07282f20 <col:64, col:126> col:77 __acosf 'float (float)' extern
| |-ParmVarDecl 0x562f07282e88 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x562f07282ff0 <col:113>
|-FunctionDecl 0x562f072830f8 <line:291:14> col:14 implicit asinf 'float (float)' extern
| |-ParmVarDecl 0x562f07283198 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07283208 <col:14> Implicit
|-FunctionDecl 0x562f07283260 prev 0x562f072830f8 <col:1, col:61> col:14 asinf 'float (float)' extern
| |-ParmVarDecl 0x562f07283060 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x562f07283308 <col:48>
|-FunctionDecl 0x562f07283410 <col:64, col:126> col:77 __asinf 'float (float)' extern
| |-ParmVarDecl 0x562f07283378 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x562f072834b8 <col:113>
|-FunctionDecl 0x562f072835c0 <line:293:14> col:14 implicit atanf 'float (float)' extern
| |-ParmVarDecl 0x562f07283660 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f072836d0 <col:14> Implicit
|-FunctionDecl 0x562f07283728 prev 0x562f072835c0 <col:1, col:61> col:14 atanf 'float (float)' extern
| |-ParmVarDecl 0x562f07283528 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x562f072837d0 <col:48>
|-FunctionDecl 0x562f072838d8 <col:64, col:126> col:77 __atanf 'float (float)' extern
| |-ParmVarDecl 0x562f07283840 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x562f07283980 <col:113>
|-FunctionDecl 0x562f07283b58 <line:295:14> col:14 implicit atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x562f07283bf8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f07283c60 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07283cd8 <col:14> Implicit
|-FunctionDecl 0x562f07283d30 prev 0x562f07283b58 <col:1, col:73> col:14 atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x562f072839f0 <col:22, col:28> col:28 __y 'float'
| |-ParmVarDecl 0x562f07283a70 <col:33, col:39> col:39 __x 'float'
| `-NoThrowAttr 0x562f07283de0 <col:60>
|-FunctionDecl 0x562f07284000 <col:76, col:150> col:89 __atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x562f07283e50 <col:99, col:105> col:105 __y 'float'
| |-ParmVarDecl 0x562f07283ed0 <col:110, col:116> col:116 __x 'float'
| `-NoThrowAttr 0x562f072840b0 <col:137>
|-FunctionDecl 0x562f072841b8 <line:298:15> col:15 implicit cosf 'float (float)' extern
| |-ParmVarDecl 0x562f07284258 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f072842c8 <col:15> Implicit
|-FunctionDecl 0x562f07284320 prev 0x562f072841b8 <col:2, col:61> col:15 cosf 'float (float)' extern
| |-ParmVarDecl 0x562f07284120 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x562f072843c8 <col:48>
|-FunctionDecl 0x562f072844d0 <col:64, col:125> col:77 __cosf 'float (float)' extern
| |-ParmVarDecl 0x562f07284438 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x562f07284578 <col:112>
|-FunctionDecl 0x562f07284680 <line:300:15> col:15 implicit sinf 'float (float)' extern
| |-ParmVarDecl 0x562f07284720 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07284790 <col:15> Implicit
|-FunctionDecl 0x562f072847e8 prev 0x562f07284680 <col:2, col:61> col:15 sinf 'float (float)' extern
| |-ParmVarDecl 0x562f072845e8 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x562f07284890 <col:48>
|-FunctionDecl 0x562f07284998 <col:64, col:125> col:77 __sinf 'float (float)' extern
| |-ParmVarDecl 0x562f07284900 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x562f07284a40 <col:112>
|-FunctionDecl 0x562f07284b48 <line:302:14> col:14 implicit tanf 'float (float)' extern
| |-ParmVarDecl 0x562f07284be8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07284c58 <col:14> Implicit
|-FunctionDecl 0x562f07284cb0 prev 0x562f07284b48 <col:1, col:60> col:14 tanf 'float (float)' extern
| |-ParmVarDecl 0x562f07284ab0 <col:20, col:26> col:26 __x 'float'
| `-NoThrowAttr 0x562f07284d58 <col:47>
|-FunctionDecl 0x562f07284e60 <col:63, col:124> col:76 __tanf 'float (float)' extern
| |-ParmVarDecl 0x562f07284dc8 <col:84, col:90> col:90 __x 'float'
| `-NoThrowAttr 0x562f07284f08 <col:111>
|-FunctionDecl 0x562f07285040 <line:307:14> col:14 implicit coshf 'float (float)' extern
| |-ParmVarDecl 0x562f072850e0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07285150 <col:14> Implicit
|-FunctionDecl 0x562f072851a8 prev 0x562f07285040 <col:1, col:61> col:14 coshf 'float (float)' extern
| |-ParmVarDecl 0x562f07284f78 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x562f07285250 <col:48>
|-FunctionDecl 0x562f07285358 <col:64, col:126> col:77 __coshf 'float (float)' extern
| |-ParmVarDecl 0x562f072852c0 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x562f07285400 <col:113>
|-FunctionDecl 0x562f07285508 <line:309:14> col:14 implicit sinhf 'float (float)' extern
| |-ParmVarDecl 0x562f072855a8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07285618 <col:14> Implicit
|-FunctionDecl 0x562f07285670 prev 0x562f07285508 <col:1, col:61> col:14 sinhf 'float (float)' extern
| |-ParmVarDecl 0x562f07285470 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x562f07285718 <col:48>
|-FunctionDecl 0x562f07285820 <col:64, col:126> col:77 __sinhf 'float (float)' extern
| |-ParmVarDecl 0x562f07285788 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x562f072858c8 <col:113>
|-FunctionDecl 0x562f072859d0 <line:311:14> col:14 implicit tanhf 'float (float)' extern
| |-ParmVarDecl 0x562f07285a70 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07285ae0 <col:14> Implicit
|-FunctionDecl 0x562f07285b38 prev 0x562f072859d0 <col:1, col:61> col:14 tanhf 'float (float)' extern
| |-ParmVarDecl 0x562f07285938 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x562f07285be0 <col:48>
|-FunctionDecl 0x562f07285ce8 <col:64, col:126> col:77 __tanhf 'float (float)' extern
| |-ParmVarDecl 0x562f07285c50 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x562f07285d90 <col:113>
|-FunctionDecl 0x562f07285e98 <line:312:14> col:14 implicit acoshf 'float (float)' extern
| |-ParmVarDecl 0x562f07285f38 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07285fa8 <col:14> Implicit
|-FunctionDecl 0x562f07286020 prev 0x562f07285e98 <col:1, col:62> col:14 acoshf 'float (float)' extern
| |-ParmVarDecl 0x562f07285e00 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x562f072860c8 <col:49>
|-FunctionDecl 0x562f072861d0 <col:65, col:128> col:78 __acoshf 'float (float)' extern
| |-ParmVarDecl 0x562f07286138 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x562f07286278 <col:115>
|-FunctionDecl 0x562f07286380 <line:314:14> col:14 implicit asinhf 'float (float)' extern
| |-ParmVarDecl 0x562f07286420 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07286490 <col:14> Implicit
|-FunctionDecl 0x562f072864e8 prev 0x562f07286380 <col:1, col:62> col:14 asinhf 'float (float)' extern
| |-ParmVarDecl 0x562f072862e8 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x562f07286590 <col:49>
|-FunctionDecl 0x562f07286698 <col:65, col:128> col:78 __asinhf 'float (float)' extern
| |-ParmVarDecl 0x562f07286600 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x562f07286740 <col:115>
|-FunctionDecl 0x562f07286848 <line:316:14> col:14 implicit atanhf 'float (float)' extern
| |-ParmVarDecl 0x562f072868e8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07286958 <col:14> Implicit
|-FunctionDecl 0x562f072869b0 prev 0x562f07286848 <col:1, col:62> col:14 atanhf 'float (float)' extern
| |-ParmVarDecl 0x562f072867b0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x562f07286a58 <col:49>
|-FunctionDecl 0x562f07286b60 <col:65, col:128> col:78 __atanhf 'float (float)' extern
| |-ParmVarDecl 0x562f07286ac8 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x562f07286c08 <col:115>
|-FunctionDecl 0x562f07286d10 <line:324:15> col:15 implicit expf 'float (float)' extern
| |-ParmVarDecl 0x562f07286db0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07286e20 <col:15> Implicit
|-FunctionDecl 0x562f07286e78 prev 0x562f07286d10 <col:2, col:61> col:15 expf 'float (float)' extern
| |-ParmVarDecl 0x562f07286c78 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x562f07286f20 <col:48>
|-FunctionDecl 0x562f07287060 <col:64, col:125> col:77 __expf 'float (float)' extern
| |-ParmVarDecl 0x562f07286f90 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x562f07287108 <col:112>
|-FunctionDecl 0x562f072872d8 <line:327:14> col:14 implicit frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x562f07287378 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f072873e0 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x562f07287458 <col:14> Implicit
|-FunctionDecl 0x562f072874b0 prev 0x562f072872d8 <col:1, col:79> col:14 frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x562f07287178 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x562f072871f8 <col:33, col:38> col:38 __exponent 'int *'
| `-NoThrowAttr 0x562f07287560 <col:66>
|-FunctionDecl 0x562f072876f0 <col:82, col:162> col:95 __frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x562f072875d0 <col:105, col:111> col:111 __x 'float'
| |-ParmVarDecl 0x562f07287650 <col:116, col:121> col:121 __exponent 'int *'
| `-NoThrowAttr 0x562f072877a0 <col:149>
|-FunctionDecl 0x562f07287978 <line:330:14> col:14 implicit ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x562f07287a18 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f07287a80 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x562f07287af8 <col:14> Implicit
|-FunctionDecl 0x562f07287b50 prev 0x562f07287978 <col:1, col:78> col:14 ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x562f07287810 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x562f07287890 <col:33, col:37> col:37 __exponent 'int'
| `-NoThrowAttr 0x562f07287c00 <col:65>
|-FunctionDecl 0x562f07287d90 <col:81, col:160> col:94 __ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x562f07287c70 <col:104, col:110> col:110 __x 'float'
| |-ParmVarDecl 0x562f07287cf0 <col:115, col:119> col:119 __exponent 'int'
| `-NoThrowAttr 0x562f07287e40 <col:147>
|-FunctionDecl 0x562f07287f48 <line:333:15> col:15 implicit logf 'float (float)' extern
| |-ParmVarDecl 0x562f07288040 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f072880b0 <col:15> Implicit
|-FunctionDecl 0x562f07288108 prev 0x562f07287f48 <col:2, col:61> col:15 logf 'float (float)' extern
| |-ParmVarDecl 0x562f07287eb0 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x562f072881b0 <col:48>
|-FunctionDecl 0x562f072882b8 <col:64, col:125> col:77 __logf 'float (float)' extern
| |-ParmVarDecl 0x562f07288220 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x562f07288360 <col:112>
|-FunctionDecl 0x562f07288468 <line:336:14> col:14 implicit log10f 'float (float)' extern
| |-ParmVarDecl 0x562f07288508 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07288578 <col:14> Implicit
|-FunctionDecl 0x562f072885d0 prev 0x562f07288468 <col:1, col:62> col:14 log10f 'float (float)' extern
| |-ParmVarDecl 0x562f072883d0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x562f07288678 <col:49>
|-FunctionDecl 0x562f07288780 <col:65, col:128> col:78 __log10f 'float (float)' extern
| |-ParmVarDecl 0x562f072886e8 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x562f07288828 <col:115>
|-FunctionDecl 0x562f07288a28 <line:339:14> col:14 implicit modff 'float (float, float *)' extern
| |-ParmVarDecl 0x562f07288ac8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f07288b30 <<invalid sloc>> <invalid sloc> 'float *'
| `-NoThrowAttr 0x562f07288ba8 <col:14> Implicit
|-FunctionDecl 0x562f07288c00 prev 0x562f07288a28 <col:1, col:76> col:14 modff 'float (float, float *)' extern
| |-ParmVarDecl 0x562f07288898 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x562f07288948 <col:32, col:39> col:39 __iptr 'float *'
| `-NoThrowAttr 0x562f07288cb0 <col:63>
|-FunctionDecl 0x562f07288e60 <col:79, col:190> col:92 __modff 'float (float, float *)' extern
| |-ParmVarDecl 0x562f07288d20 <col:101, col:107> col:107 __x 'float'
| |-ParmVarDecl 0x562f07288da0 <col:112, col:119> col:119 __iptr 'float *'
| |-NoThrowAttr 0x562f07288f10 <col:143>
| `-NonNullAttr 0x562f07288f68 <col:174, col:188> 2
|-FunctionDecl 0x562f07289080 <line:340:14> col:14 implicit expm1f 'float (float)' extern
| |-ParmVarDecl 0x562f07289120 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07289190 <col:14> Implicit
|-FunctionDecl 0x562f072891e8 prev 0x562f07289080 <col:1, col:62> col:14 expm1f 'float (float)' extern
| |-ParmVarDecl 0x562f07288fc0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x562f07289290 <col:49>
|-FunctionDecl 0x562f07289398 <col:65, col:128> col:78 __expm1f 'float (float)' extern
| |-ParmVarDecl 0x562f07289300 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x562f07289440 <col:115>
|-FunctionDecl 0x562f07289548 <line:343:14> col:14 implicit log1pf 'float (float)' extern
| |-ParmVarDecl 0x562f072895e8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07289658 <col:14> Implicit
|-FunctionDecl 0x562f072896b0 prev 0x562f07289548 <col:1, col:62> col:14 log1pf 'float (float)' extern
| |-ParmVarDecl 0x562f072894b0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x562f07289758 <col:49>
|-FunctionDecl 0x562f07289860 <col:65, col:128> col:78 __log1pf 'float (float)' extern
| |-ParmVarDecl 0x562f072897c8 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x562f07289908 <col:115>
|-FunctionDecl 0x562f07289a10 <line:346:14> col:14 implicit logbf 'float (float)' extern
| |-ParmVarDecl 0x562f07289ab0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07289b20 <col:14> Implicit
|-FunctionDecl 0x562f07289b78 prev 0x562f07289a10 <col:1, col:61> col:14 logbf 'float (float)' extern
| |-ParmVarDecl 0x562f07289978 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x562f07289c20 <col:48>
|-FunctionDecl 0x562f07289d28 <col:64, col:126> col:77 __logbf 'float (float)' extern
| |-ParmVarDecl 0x562f07289c90 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x562f07289dd0 <col:113>
|-FunctionDecl 0x562f07289ed8 <line:353:14> col:14 implicit exp2f 'float (float)' extern
| |-ParmVarDecl 0x562f07289f78 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07289fe8 <col:14> Implicit
|-FunctionDecl 0x562f0728b070 prev 0x562f07289ed8 <col:1, col:61> col:14 exp2f 'float (float)' extern
| |-ParmVarDecl 0x562f07289e40 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x562f0728b118 <col:48>
|-FunctionDecl 0x562f0728b220 <col:64, col:126> col:77 __exp2f 'float (float)' extern
| |-ParmVarDecl 0x562f0728b188 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x562f0728b2c8 <col:113>
|-FunctionDecl 0x562f0728b3d0 <line:356:14> col:14 implicit log2f 'float (float)' extern
| |-ParmVarDecl 0x562f0728b470 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f0728b4e0 <col:14> Implicit
|-FunctionDecl 0x562f0728b538 prev 0x562f0728b3d0 <col:1, col:61> col:14 log2f 'float (float)' extern
| |-ParmVarDecl 0x562f0728b338 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x562f0728b5e0 <col:48>
|-FunctionDecl 0x562f0728b6e8 <col:64, col:126> col:77 __log2f 'float (float)' extern
| |-ParmVarDecl 0x562f0728b650 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x562f0728b790 <col:113>
|-FunctionDecl 0x562f0728b920 <line:357:15> col:15 implicit powf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0728b9c0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f0728ba28 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f0728baa0 <col:15> Implicit
|-FunctionDecl 0x562f0728baf8 prev 0x562f0728b920 <col:2, col:72> col:15 powf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0728b800 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x562f0728b880 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x562f0728bba8 <col:59>
|-FunctionDecl 0x562f0728bd38 <col:75, col:147> col:88 __powf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0728bc18 <col:96, col:102> col:102 __x 'float'
| |-ParmVarDecl 0x562f0728bc98 <col:107, col:113> col:113 __y 'float'
| `-NoThrowAttr 0x562f0728bde8 <col:134>
|-FunctionDecl 0x562f0728bef0 <line:360:14> col:14 implicit sqrtf 'float (float)' extern
| |-ParmVarDecl 0x562f0728bf90 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f0728c000 <col:14> Implicit
|-FunctionDecl 0x562f0728c080 prev 0x562f0728bef0 <col:1, col:61> col:14 sqrtf 'float (float)' extern
| |-ParmVarDecl 0x562f0728be58 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x562f0728c128 <col:48>
|-FunctionDecl 0x562f0728c230 <col:64, col:126> col:77 __sqrtf 'float (float)' extern
| |-ParmVarDecl 0x562f0728c198 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x562f0728c2d8 <col:113>
|-FunctionDecl 0x562f0728c468 <line:366:14> col:14 implicit hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0728c508 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f0728c570 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f0728c5e8 <col:14> Implicit
|-FunctionDecl 0x562f0728c640 prev 0x562f0728c468 <col:1, col:73> col:14 hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0728c348 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x562f0728c3c8 <col:33, col:39> col:39 __y 'float'
| `-NoThrowAttr 0x562f0728c6f0 <col:60>
|-FunctionDecl 0x562f0728c880 <col:76, col:150> col:89 __hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0728c760 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x562f0728c7e0 <col:110, col:116> col:116 __y 'float'
| `-NoThrowAttr 0x562f0728c930 <col:137>
|-FunctionDecl 0x562f0728ca38 <line:373:14> col:14 implicit cbrtf 'float (float)' extern
| |-ParmVarDecl 0x562f0728cad8 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x562f0728cb48 <col:14> Implicit
| `-ConstAttr 0x562f0728cba0 <col:14> Implicit
|-FunctionDecl 0x562f0728cbc8 prev 0x562f0728ca38 <col:1, col:61> col:14 cbrtf 'float (float)' extern
| |-ParmVarDecl 0x562f0728c9a0 <col:21, col:27> col:27 __x 'float'
| |-ConstAttr 0x562f0728ccc8 <col:14> Inherited Implicit
| `-NoThrowAttr 0x562f0728cc70 <col:48>
|-FunctionDecl 0x562f0728cda0 <col:64, col:126> col:77 __cbrtf 'float (float)' extern
| |-ParmVarDecl 0x562f0728cd08 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x562f0728ce48 <col:113>
|-FunctionDecl 0x562f0728cf50 <line:374:14> col:14 implicit ceilf 'float (float)' extern
| |-ParmVarDecl 0x562f0728cff0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x562f0728d090 <col:14> Implicit
| `-ConstAttr 0x562f0728d0e8 <col:14> Implicit
|-FunctionDecl 0x562f0728d110 prev 0x562f0728cf50 <col:1, col:89> col:14 ceilf 'float (float)' extern
| |-ParmVarDecl 0x562f0728ceb8 <col:21, col:27> col:27 __x 'float'
| |-NoThrowAttr 0x562f0728d1b8 <col:48>
| `-ConstAttr 0x562f0728d210 <col:79>
|-FunctionDecl 0x562f0728d2e8 <col:92, col:182> col:105 __ceilf 'float (float)' extern
| |-ParmVarDecl 0x562f0728d250 <col:114, col:120> col:120 __x 'float'
| |-NoThrowAttr 0x562f0728d390 <col:141>
| `-ConstAttr 0x562f0728d3e8 <col:172>
|-FunctionDecl 0x562f0728d4c0 <line:377:14> col:14 implicit fabsf 'float (float)' extern
| |-ParmVarDecl 0x562f0728d560 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x562f0728d5d0 <col:14> Implicit
| `-ConstAttr 0x562f0728d628 <col:14> Implicit
|-FunctionDecl 0x562f0728d650 prev 0x562f0728d4c0 <col:1, col:89> col:14 fabsf 'float (float)' extern
| |-ParmVarDecl 0x562f0728d428 <col:21, col:27> col:27 __x 'float'
| |-NoThrowAttr 0x562f0728d6f8 <col:48>
| `-ConstAttr 0x562f0728d750 <col:79>
|-FunctionDecl 0x562f0728d828 <col:92, col:182> col:105 __fabsf 'float (float)' extern
| |-ParmVarDecl 0x562f0728d790 <col:114, col:120> col:120 __x 'float'
| |-NoThrowAttr 0x562f0728d8d0 <col:141>
| `-ConstAttr 0x562f0728d928 <col:172>
|-FunctionDecl 0x562f0728da00 <line:380:14> col:14 implicit floorf 'float (float)' extern
| |-ParmVarDecl 0x562f0728daa0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x562f0728db10 <col:14> Implicit
| `-ConstAttr 0x562f0728db68 <col:14> Implicit
|-FunctionDecl 0x562f0728db90 prev 0x562f0728da00 <col:1, col:90> col:14 floorf 'float (float)' extern
| |-ParmVarDecl 0x562f0728d968 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x562f0728dc38 <col:49>
| `-ConstAttr 0x562f0728dc90 <col:80>
|-FunctionDecl 0x562f0728dd68 <col:93, col:184> col:106 __floorf 'float (float)' extern
| |-ParmVarDecl 0x562f0728dcd0 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x562f0728de10 <col:143>
| `-ConstAttr 0x562f0728de68 <col:174>
|-FunctionDecl 0x562f0728dfc8 <line:383:14> col:14 implicit fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0728e0a0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f0728e108 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f0728e180 <col:14> Implicit
|-FunctionDecl 0x562f0728e1d8 prev 0x562f0728dfc8 <col:1, col:72> col:14 fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0728dea8 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x562f0728df28 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x562f0728e288 <col:59>
|-FunctionDecl 0x562f0728e418 <col:75, col:148> col:88 __fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0728e2f8 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x562f0728e378 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x562f0728e4c8 <col:135>
|-FunctionDecl 0x562f0728e608 <line:388:1, col:94> col:12 __isinff 'int (float)' extern
| |-ParmVarDecl 0x562f0728e538 <col:22, col:28> col:28 __value 'float'
| |-NoThrowAttr 0x562f0728e6b0 <col:53>
| `-ConstAttr 0x562f0728e708 <col:84>
|-FunctionDecl 0x562f0728e7e0 <line:391:12> col:12 implicit __finitef 'int (float)' extern
| |-ParmVarDecl 0x562f0728e880 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x562f0728e8f0 <col:12> Implicit
| `-ConstAttr 0x562f0728e948 <col:12> Implicit
|-FunctionDecl 0x562f0728e970 prev 0x562f0728e7e0 <col:1, col:95> col:12 __finitef 'int (float)' extern
| |-ParmVarDecl 0x562f0728e748 <col:23, col:29> col:29 __value 'float'
| |-NoThrowAttr 0x562f0728ea18 <col:54>
| `-ConstAttr 0x562f0728ea70 <col:85>
|-FunctionDecl 0x562f0728eb48 <line:397:1, col:92> col:12 isinff 'int (float)' extern
| |-ParmVarDecl 0x562f0728eab0 <col:20, col:26> col:26 __value 'float'
| |-NoThrowAttr 0x562f0728ebf0 <col:51>
| `-ConstAttr 0x562f0728ec48 <col:82>
|-FunctionDecl 0x562f0728ed20 <line:400:12> col:12 implicit finitef 'int (float)' extern
| |-ParmVarDecl 0x562f0728edc0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x562f0728ee30 <col:12> Implicit
| `-ConstAttr 0x562f0728ee88 <col:12> Implicit
|-FunctionDecl 0x562f0728eeb0 prev 0x562f0728ed20 <col:1, col:93> col:12 finitef 'int (float)' extern
| |-ParmVarDecl 0x562f0728ec88 <col:21, col:27> col:27 __value 'float'
| |-NoThrowAttr 0x562f0728ef58 <col:52>
| `-ConstAttr 0x562f0728efb0 <col:83>
|-FunctionDecl 0x562f0728f150 <line:403:1, col:72> col:14 dremf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0728eff0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x562f0728f0b0 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x562f0728f200 <col:59>
|-FunctionDecl 0x562f0728f390 <col:75, col:148> col:88 __dremf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0728f270 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x562f0728f2f0 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x562f0728f440 <col:135>
|-FunctionDecl 0x562f0728f548 <line:407:1, col:68> col:14 significandf 'float (float)' extern
| |-ParmVarDecl 0x562f0728f4b0 <col:28, col:34> col:34 __x 'float'
| `-NoThrowAttr 0x562f0728f5f0 <col:55>
|-FunctionDecl 0x562f0728f6f8 <col:71, col:140> col:84 __significandf 'float (float)' extern
| |-ParmVarDecl 0x562f0728f660 <col:100, col:106> col:106 __x 'float'
| `-NoThrowAttr 0x562f0728f7a0 <col:127>
|-FunctionDecl 0x562f0728f930 <line:413:14> col:14 implicit copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0728f9d0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f0728fa38 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x562f0728fab0 <col:14> Implicit
| `-ConstAttr 0x562f0728fb08 <col:14> Implicit
|-FunctionDecl 0x562f0728fb30 prev 0x562f0728f930 <col:1, col:104> col:14 copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0728f810 <col:25, col:31> col:31 __x 'float'
| |-ParmVarDecl 0x562f0728f890 <col:36, col:42> col:42 __y 'float'
| |-NoThrowAttr 0x562f0728fbe0 <col:63>
| `-ConstAttr 0x562f0728fc38 <col:94>
|-FunctionDecl 0x562f0728fd98 <col:107, col:212> col:120 __copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0728fc78 <col:133, col:139> col:139 __x 'float'
| |-ParmVarDecl 0x562f0728fcf8 <col:144, col:150> col:150 __y 'float'
| |-NoThrowAttr 0x562f0728fe48 <col:171>
| `-ConstAttr 0x562f0728fea0 <col:202>
|-FunctionDecl 0x562f0728ffb8 <line:420:14> col:14 implicit nanf 'float (const char *)' extern
| |-ParmVarDecl 0x562f072900c0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x562f07290130 <col:14> Implicit
| `-PureAttr 0x562f07290188 <col:14> Implicit
|-FunctionDecl 0x562f072901b0 prev 0x562f0728ffb8 <col:1, col:97> col:14 nanf 'float (const char *)' extern
| |-ParmVarDecl 0x562f0728fee0 <col:20, col:32> col:32 __tagb 'const char *'
| |-PureAttr 0x562f072902d8 <col:14> Inherited Implicit
| |-NoThrowAttr 0x562f07290258 <col:56>
| `-ConstAttr 0x562f072902b0 <col:87>
|-FunctionDecl 0x562f072903b0 <col:100, col:198> col:113 __nanf 'float (const char *)' extern
| |-ParmVarDecl 0x562f07290318 <col:121, col:133> col:133 __tagb 'const char *'
| |-NoThrowAttr 0x562f07290458 <col:157>
| `-ConstAttr 0x562f072904b0 <col:188>
|-FunctionDecl 0x562f07290588 <line:426:1, col:94> col:12 __isnanf 'int (float)' extern
| |-ParmVarDecl 0x562f072904f0 <col:22, col:28> col:28 __value 'float'
| |-NoThrowAttr 0x562f07290630 <col:53>
| `-ConstAttr 0x562f07290688 <col:84>
|-FunctionDecl 0x562f07290760 <line:430:1, col:92> col:12 isnanf 'int (float)' extern
| |-ParmVarDecl 0x562f072906c8 <col:20, col:26> col:26 __value 'float'
| |-NoThrowAttr 0x562f07290808 <col:51>
| `-ConstAttr 0x562f07290860 <col:82>
|-FunctionDecl 0x562f07290938 <line:433:1, col:55> col:14 j0f 'float (float)' extern
| |-ParmVarDecl 0x562f072908a0 <col:19> col:24 'float'
| `-NoThrowAttr 0x562f072909e0 <col:42>
|-FunctionDecl 0x562f07290ae8 <col:58, col:114> col:71 __j0f 'float (float)' extern
| |-ParmVarDecl 0x562f07290a50 <col:78> col:83 'float'
| `-NoThrowAttr 0x562f07290b90 <col:101>
|-FunctionDecl 0x562f07290c98 <line:434:1, col:55> col:14 j1f 'float (float)' extern
| |-ParmVarDecl 0x562f07290c00 <col:19> col:24 'float'
| `-NoThrowAttr 0x562f07290d40 <col:42>
|-FunctionDecl 0x562f07290e48 <col:58, col:114> col:71 __j1f 'float (float)' extern
| |-ParmVarDecl 0x562f07290db0 <col:78> col:83 'float'
| `-NoThrowAttr 0x562f07290ef0 <col:101>
|-FunctionDecl 0x562f07291108 <line:435:1, col:60> col:14 jnf 'float (int, float)' extern
| |-ParmVarDecl 0x562f07290f60 <col:19> col:22 'int'
| |-ParmVarDecl 0x562f07290fe0 <col:24> col:29 'float'
| `-NoThrowAttr 0x562f072911b8 <col:47>
|-FunctionDecl 0x562f07291348 <col:63, col:124> col:76 __jnf 'float (int, float)' extern
| |-ParmVarDecl 0x562f07291228 <col:83> col:86 'int'
| |-ParmVarDecl 0x562f072912a8 <col:88> col:93 'float'
| `-NoThrowAttr 0x562f072913f8 <col:111>
|-FunctionDecl 0x562f07291500 <line:436:1, col:55> col:14 y0f 'float (float)' extern
| |-ParmVarDecl 0x562f07291468 <col:19> col:24 'float'
| `-NoThrowAttr 0x562f072915a8 <col:42>
|-FunctionDecl 0x562f072916b0 <col:58, col:114> col:71 __y0f 'float (float)' extern
| |-ParmVarDecl 0x562f07291618 <col:78> col:83 'float'
| `-NoThrowAttr 0x562f07291758 <col:101>
|-FunctionDecl 0x562f07291860 <line:437:1, col:55> col:14 y1f 'float (float)' extern
| |-ParmVarDecl 0x562f072917c8 <col:19> col:24 'float'
| `-NoThrowAttr 0x562f07291908 <col:42>
|-FunctionDecl 0x562f07291a10 <col:58, col:114> col:71 __y1f 'float (float)' extern
| |-ParmVarDecl 0x562f07291978 <col:78> col:83 'float'
| `-NoThrowAttr 0x562f07291ab8 <col:101>
|-FunctionDecl 0x562f07291c48 <line:438:1, col:60> col:14 ynf 'float (int, float)' extern
| |-ParmVarDecl 0x562f07291b28 <col:19> col:22 'int'
| |-ParmVarDecl 0x562f07291ba8 <col:24> col:29 'float'
| `-NoThrowAttr 0x562f07291cf8 <col:47>
|-FunctionDecl 0x562f07291e88 <col:63, col:124> col:76 __ynf 'float (int, float)' extern
| |-ParmVarDecl 0x562f07291d68 <col:83> col:86 'int'
| |-ParmVarDecl 0x562f07291de8 <col:88> col:93 'float'
| `-NoThrowAttr 0x562f07291f38 <col:111>
|-FunctionDecl 0x562f072920e0 <line:445:14> col:14 implicit erff 'float (float)' extern
| |-ParmVarDecl 0x562f07292180 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f072921f0 <col:14> Implicit
|-FunctionDecl 0x562f07292248 prev 0x562f072920e0 <col:1, col:56> col:14 erff 'float (float)' extern
| |-ParmVarDecl 0x562f07291fa8 <col:20> col:25 'float'
| `-NoThrowAttr 0x562f072922f0 <col:43>
|-FunctionDecl 0x562f072923f8 <col:59, col:116> col:72 __erff 'float (float)' extern
| |-ParmVarDecl 0x562f07292360 <col:80> col:85 'float'
| `-NoThrowAttr 0x562f072924a0 <col:103>
|-FunctionDecl 0x562f072925a8 <line:446:14> col:14 implicit erfcf 'float (float)' extern
| |-ParmVarDecl 0x562f07292648 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f072926b8 <col:14> Implicit
|-FunctionDecl 0x562f07292710 prev 0x562f072925a8 <col:1, col:57> col:14 erfcf 'float (float)' extern
| |-ParmVarDecl 0x562f07292510 <col:21> col:26 'float'
| `-NoThrowAttr 0x562f072927b8 <col:44>
|-FunctionDecl 0x562f072928c0 <col:60, col:118> col:73 __erfcf 'float (float)' extern
| |-ParmVarDecl 0x562f07292828 <col:82> col:87 'float'
| `-NoThrowAttr 0x562f07292968 <col:105>
|-FunctionDecl 0x562f07292a70 <line:447:14> col:14 implicit lgammaf 'float (float)' extern
| |-ParmVarDecl 0x562f07292b10 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07292b80 <col:14> Implicit
|-FunctionDecl 0x562f07292bd8 prev 0x562f07292a70 <col:1, col:59> col:14 lgammaf 'float (float)' extern
| |-ParmVarDecl 0x562f072929d8 <col:23> col:28 'float'
| `-NoThrowAttr 0x562f07292c80 <col:46>
|-FunctionDecl 0x562f07292d88 <col:62, col:122> col:75 __lgammaf 'float (float)' extern
| |-ParmVarDecl 0x562f07292cf0 <col:86> col:91 'float'
| `-NoThrowAttr 0x562f07292e30 <col:109>
|-FunctionDecl 0x562f07292f38 <line:454:14> col:14 implicit tgammaf 'float (float)' extern
| |-ParmVarDecl 0x562f07292fd8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07293048 <col:14> Implicit
|-FunctionDecl 0x562f072930f0 prev 0x562f07292f38 <col:1, col:59> col:14 tgammaf 'float (float)' extern
| |-ParmVarDecl 0x562f07292ea0 <col:23> col:28 'float'
| `-NoThrowAttr 0x562f07293198 <col:46>
|-FunctionDecl 0x562f072932a0 <col:62, col:122> col:75 __tgammaf 'float (float)' extern
| |-ParmVarDecl 0x562f07293208 <col:86> col:91 'float'
| `-NoThrowAttr 0x562f07293348 <col:109>
|-FunctionDecl 0x562f07293450 <line:460:1, col:58> col:14 gammaf 'float (float)' extern
| |-ParmVarDecl 0x562f072933b8 <col:22> col:27 'float'
| `-NoThrowAttr 0x562f072934f8 <col:45>
|-FunctionDecl 0x562f07293600 <col:61, col:120> col:74 __gammaf 'float (float)' extern
| |-ParmVarDecl 0x562f07293568 <col:84> col:89 'float'
| `-NoThrowAttr 0x562f072936a8 <col:107>
|-FunctionDecl 0x562f07293838 <line:467:1, col:78> col:14 lgammaf_r 'float (float, int *)' extern
| |-ParmVarDecl 0x562f07293718 <col:25> col:30 'float'
| |-ParmVarDecl 0x562f07293798 <col:32, col:37> col:37 __signgamp 'int *'
| `-NoThrowAttr 0x562f072938e8 <col:65>
|-FunctionDecl 0x562f07293a78 <col:81, col:160> col:94 __lgammaf_r 'float (float, int *)' extern
| |-ParmVarDecl 0x562f07293958 <col:107> col:112 'float'
| |-ParmVarDecl 0x562f072939d8 <col:114, col:119> col:119 __signgamp 'int *'
| `-NoThrowAttr 0x562f07293b28 <col:147>
|-FunctionDecl 0x562f07293c30 <line:475:14> col:14 implicit rintf 'float (float)' extern
| |-ParmVarDecl 0x562f07293cd0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x562f07293d40 <col:14> Implicit
| `-ConstAttr 0x562f07293d98 <col:14> Implicit
|-FunctionDecl 0x562f07293dc0 prev 0x562f07293c30 <col:1, col:61> col:14 rintf 'float (float)' extern
| |-ParmVarDecl 0x562f07293b98 <col:21, col:27> col:27 __x 'float'
| |-ConstAttr 0x562f07293ec0 <col:14> Inherited Implicit
| `-NoThrowAttr 0x562f07293e68 <col:48>
|-FunctionDecl 0x562f07293f98 <col:64, col:126> col:77 __rintf 'float (float)' extern
| |-ParmVarDecl 0x562f07293f00 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x562f07294040 <col:113>
|-FunctionDecl 0x562f07294220 <line:478:14> col:14 implicit nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x562f072942c0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f07294328 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f072943a0 <col:14> Implicit
|-FunctionDecl 0x562f072943f8 prev 0x562f07294220 <col:1, col:105> col:14 nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x562f07294100 <col:26, col:32> col:32 __x 'float'
| |-ParmVarDecl 0x562f07294180 <col:37, col:43> col:43 __y 'float'
| |-NoThrowAttr 0x562f072944a8 <col:64>
| `-ConstAttr 0x562f07294500 <col:95>
|-FunctionDecl 0x562f07294660 <col:108, col:214> col:121 __nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x562f07294540 <col:135, col:141> col:141 __x 'float'
| |-ParmVarDecl 0x562f072945c0 <col:146, col:152> col:152 __y 'float'
| |-NoThrowAttr 0x562f07294710 <col:173>
| `-ConstAttr 0x562f07294768 <col:204>
|-FunctionDecl 0x562f07294908 <line:480:14> col:14 implicit nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x562f072949a8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f07294a10 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f07294a88 <col:14> Implicit
|-FunctionDecl 0x562f07294ae0 prev 0x562f07294908 <col:1, col:112> col:14 nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x562f072947a8 <col:27, col:33> col:33 __x 'float'
| |-ParmVarDecl 0x562f07294828 <col:38, col:50> col:50 __y 'long double'
| |-NoThrowAttr 0x562f07294b90 <col:71>
| `-ConstAttr 0x562f07294be8 <col:102>
|-FunctionDecl 0x562f07294d48 <col:115, col:228> col:128 __nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x562f07294c28 <col:143, col:149> col:149 __x 'float'
| |-ParmVarDecl 0x562f07294ca8 <col:154, col:166> col:166 __y 'long double'
| |-NoThrowAttr 0x562f07294df8 <col:187>
| `-ConstAttr 0x562f07294e50 <col:218>
|-FunctionDecl 0x562f07294fb0 <line:484:14> col:14 implicit remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x562f07295050 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f07295110 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07295188 <col:14> Implicit
|-FunctionDecl 0x562f072951e0 prev 0x562f07294fb0 <col:1, col:77> col:14 remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x562f07294e90 <col:26, col:32> col:32 __x 'float'
| |-ParmVarDecl 0x562f07294f10 <col:37, col:43> col:43 __y 'float'
| `-NoThrowAttr 0x562f07295290 <col:64>
|-FunctionDecl 0x562f07295420 <col:80, col:158> col:93 __remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x562f07295300 <col:107, col:113> col:113 __x 'float'
| |-ParmVarDecl 0x562f07295380 <col:118, col:124> col:124 __y 'float'
| `-NoThrowAttr 0x562f072954d0 <col:145>
|-FunctionDecl 0x562f07295660 <line:488:14> col:14 implicit scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x562f07295700 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f07295768 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x562f072957e0 <col:14> Implicit
|-FunctionDecl 0x562f07295838 prev 0x562f07295660 <col:1, col:72> col:14 scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x562f07295540 <col:23, col:29> col:29 __x 'float'
| |-ParmVarDecl 0x562f072955c0 <col:34, col:38> col:38 __n 'int'
| `-NoThrowAttr 0x562f072958e8 <col:59>
|-FunctionDecl 0x562f07295a78 <col:75, col:148> col:88 __scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x562f07295958 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x562f072959d8 <col:110, col:114> col:114 __n 'int'
| `-NoThrowAttr 0x562f07295b28 <col:135>
|-FunctionDecl 0x562f07295c30 <line:492:12> col:12 implicit ilogbf 'int (float)' extern
| |-ParmVarDecl 0x562f07295cd0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07295d40 <col:12> Implicit
|-FunctionDecl 0x562f07295d98 prev 0x562f07295c30 <col:1, col:60> col:12 ilogbf 'int (float)' extern
| |-ParmVarDecl 0x562f07295b98 <col:20, col:26> col:26 __x 'float'
| `-NoThrowAttr 0x562f07295e40 <col:47>
|-FunctionDecl 0x562f07295f48 <col:63, col:124> col:74 __ilogbf 'int (float)' extern
| |-ParmVarDecl 0x562f07295eb0 <col:84, col:90> col:90 __x 'float'
| `-NoThrowAttr 0x562f07295ff0 <col:111>
|-FunctionDecl 0x562f07296208 <line:497:14> col:14 implicit scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x562f072962a8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f07296310 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x562f07296388 <col:14> Implicit
|-FunctionDecl 0x562f072963e0 prev 0x562f07296208 <col:1, col:78> col:14 scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x562f07296060 <col:24, col:30> col:30 __x 'float'
| |-ParmVarDecl 0x562f07296120 <col:35, col:44> col:44 __n 'long'
| `-NoThrowAttr 0x562f07296490 <col:65>
|-FunctionDecl 0x562f07296620 <col:81, col:160> col:94 __scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x562f07296500 <col:106, col:112> col:112 __x 'float'
| |-ParmVarDecl 0x562f07296580 <col:117, col:126> col:126 __n 'long'
| `-NoThrowAttr 0x562f072966d0 <col:147>
|-FunctionDecl 0x562f072967d8 <line:501:14> col:14 implicit nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x562f07296878 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x562f072968e8 <col:14> Implicit
| `-ConstAttr 0x562f07296940 <col:14> Implicit
|-FunctionDecl 0x562f07296968 prev 0x562f072967d8 <col:1, col:66> col:14 nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x562f07296740 <col:26, col:32> col:32 __x 'float'
| |-ConstAttr 0x562f07296a68 <col:14> Inherited Implicit
| `-NoThrowAttr 0x562f07296a10 <col:53>
|-FunctionDecl 0x562f07296b40 <col:69, col:136> col:82 __nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x562f07296aa8 <col:96, col:102> col:102 __x 'float'
| `-NoThrowAttr 0x562f07296be8 <col:123>
|-FunctionDecl 0x562f07296cf0 <line:505:14> col:14 implicit roundf 'float (float)' extern
| |-ParmVarDecl 0x562f07296d90 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x562f07296e00 <col:14> Implicit
| `-ConstAttr 0x562f07296e58 <col:14> Implicit
|-FunctionDecl 0x562f07296e80 prev 0x562f07296cf0 <col:1, col:90> col:14 roundf 'float (float)' extern
| |-ParmVarDecl 0x562f07296c58 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x562f07296f28 <col:49>
| `-ConstAttr 0x562f07296f80 <col:80>
|-FunctionDecl 0x562f07297058 <col:93, col:184> col:106 __roundf 'float (float)' extern
| |-ParmVarDecl 0x562f07296fc0 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x562f07297130 <col:143>
| `-ConstAttr 0x562f07297188 <col:174>
|-FunctionDecl 0x562f07297260 <line:509:14> col:14 implicit truncf 'float (float)' extern
| |-ParmVarDecl 0x562f07297300 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x562f07297370 <col:14> Implicit
| `-ConstAttr 0x562f072973c8 <col:14> Implicit
|-FunctionDecl 0x562f072973f0 prev 0x562f07297260 <col:1, col:90> col:14 truncf 'float (float)' extern
| |-ParmVarDecl 0x562f072971c8 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x562f07297498 <col:49>
| `-ConstAttr 0x562f072974f0 <col:80>
|-FunctionDecl 0x562f072975c8 <col:93, col:184> col:106 __truncf 'float (float)' extern
| |-ParmVarDecl 0x562f07297530 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x562f07297670 <col:143>
| `-ConstAttr 0x562f072976c8 <col:174>
|-FunctionDecl 0x562f072978f8 <line:514:14> col:14 implicit remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x562f07297998 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f07297a00 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f07297a68 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x562f07297ae8 <col:14> Implicit
|-FunctionDecl 0x562f07297b40 prev 0x562f072978f8 <col:1, col:86> col:14 remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x562f07297708 <col:23, col:29> col:29 __x 'float'
| |-ParmVarDecl 0x562f07297788 <col:34, col:40> col:40 __y 'float'
| |-ParmVarDecl 0x562f07297808 <col:45, col:50> col:50 __quo 'int *'
| `-NoThrowAttr 0x562f07297bf8 <col:73>
|-FunctionDecl 0x562f07297e10 <col:89, col:176> col:102 __remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x562f07297c68 <col:113, col:119> col:119 __x 'float'
| |-ParmVarDecl 0x562f07297ce8 <col:124, col:130> col:130 __y 'float'
| |-ParmVarDecl 0x562f07297d68 <col:135, col:140> col:140 __quo 'int *'
| `-NoThrowAttr 0x562f07297ec8 <col:163>
|-FunctionDecl 0x562f07298008 <line:521:17> col:17 implicit lrintf 'long (float)' extern
| |-ParmVarDecl 0x562f072980a8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07299150 <col:17> Implicit
|-FunctionDecl 0x562f072991a8 prev 0x562f07298008 <col:1, col:65> col:17 lrintf 'long (float)' extern
| |-ParmVarDecl 0x562f07297f38 <col:25, col:31> col:31 __x 'float'
| `-NoThrowAttr 0x562f07299250 <col:52>
|-FunctionDecl 0x562f07299358 <col:68, col:134> col:84 __lrintf 'long (float)' extern
| |-ParmVarDecl 0x562f072992c0 <col:94, col:100> col:100 __x 'float'
| `-NoThrowAttr 0x562f07299400 <col:121>
|-FunctionDecl 0x562f07299548 <line:523:22> col:22 implicit llrintf 'long long (float)' extern
| |-ParmVarDecl 0x562f072995e8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07299658 <col:22> Implicit
|-FunctionDecl 0x562f072996b0 prev 0x562f07299548 <col:1, col:71> col:22 llrintf 'long long (float)' extern
| |-ParmVarDecl 0x562f07299470 <col:31, col:37> col:37 __x 'float'
| `-NoThrowAttr 0x562f07299758 <col:58>
|-FunctionDecl 0x562f07299860 <col:74, col:146> col:95 __llrintf 'long long (float)' extern
| |-ParmVarDecl 0x562f072997c8 <col:106, col:112> col:112 __x 'float'
| `-NoThrowAttr 0x562f07299908 <col:133>
|-FunctionDecl 0x562f07299a10 <line:527:17> col:17 implicit lroundf 'long (float)' extern
| |-ParmVarDecl 0x562f07299ab0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07299b20 <col:17> Implicit
|-FunctionDecl 0x562f07299b78 prev 0x562f07299a10 <col:1, col:66> col:17 lroundf 'long (float)' extern
| |-ParmVarDecl 0x562f07299978 <col:26, col:32> col:32 __x 'float'
| `-NoThrowAttr 0x562f07299c20 <col:53>
|-FunctionDecl 0x562f07299d28 <col:69, col:136> col:85 __lroundf 'long (float)' extern
| |-ParmVarDecl 0x562f07299c90 <col:96, col:102> col:102 __x 'float'
| `-NoThrowAttr 0x562f07299dd0 <col:123>
|-FunctionDecl 0x562f07299ed8 <line:529:22> col:22 implicit llroundf 'long long (float)' extern
| |-ParmVarDecl 0x562f07299f78 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07299fe8 <col:22> Implicit
|-FunctionDecl 0x562f0729a040 prev 0x562f07299ed8 <col:1, col:72> col:22 llroundf 'long long (float)' extern
| |-ParmVarDecl 0x562f07299e40 <col:32, col:38> col:38 __x 'float'
| `-NoThrowAttr 0x562f0729a0e8 <col:59>
|-FunctionDecl 0x562f07280080 <col:75, col:148> col:96 __llroundf 'long long (float)' extern
| |-ParmVarDecl 0x562f0727ffe8 <col:108, col:114> col:114 __x 'float'
| `-NoThrowAttr 0x562f07280128 <col:135>
|-FunctionDecl 0x562f072802b8 <line:533:14> col:14 implicit fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x562f07280358 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f072803c0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x562f07280438 <col:14> Implicit
|-FunctionDecl 0x562f07280490 prev 0x562f072802b8 <col:1, col:72> col:14 fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x562f07280198 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x562f07280218 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x562f07280540 <col:59>
|-FunctionDecl 0x562f072806d0 <col:75, col:148> col:88 __fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x562f072805b0 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x562f07280630 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x562f07280780 <col:135>
|-FunctionDecl 0x562f07280910 <line:536:14> col:14 implicit fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x562f072809b0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f07280a18 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x562f07280a90 <col:14> Implicit
| `-ConstAttr 0x562f07280ae8 <col:14> Implicit
|-FunctionDecl 0x562f07280b10 prev 0x562f07280910 <col:1, col:100> col:14 fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x562f072807f0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x562f07280870 <col:32, col:38> col:38 __y 'float'
| |-NoThrowAttr 0x562f07280bc0 <col:59>
| `-ConstAttr 0x562f07280c18 <col:90>
|-FunctionDecl 0x562f07280d78 <col:103, col:204> col:116 __fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x562f07280c58 <col:125, col:131> col:131 __x 'float'
| |-ParmVarDecl 0x562f07280cd8 <col:136, col:142> col:142 __y 'float'
| |-NoThrowAttr 0x562f07280e28 <col:163>
| `-ConstAttr 0x562f07280e80 <col:194>
|-FunctionDecl 0x562f0729e1a8 <line:539:14> col:14 implicit fminf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0729e248 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f0729e2b0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x562f0729e328 <col:14> Implicit
| `-ConstAttr 0x562f0729e380 <col:14> Implicit
|-FunctionDecl 0x562f0729e3a8 prev 0x562f0729e1a8 <col:1, col:100> col:14 fminf 'float (float, float)' extern
| |-ParmVarDecl 0x562f07280ec0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x562f07280f40 <col:32, col:38> col:38 __y 'float'
| |-NoThrowAttr 0x562f0729e458 <col:59>
| `-ConstAttr 0x562f0729e4b0 <col:90>
|-FunctionDecl 0x562f0729e610 <col:103, col:204> col:116 __fminf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0729e4f0 <col:125, col:131> col:131 __x 'float'
| |-ParmVarDecl 0x562f0729e570 <col:136, col:142> col:142 __y 'float'
| |-NoThrowAttr 0x562f0729e6c0 <col:163>
| `-ConstAttr 0x562f0729e718 <col:194>
|-FunctionDecl 0x562f0729e7f0 <line:543:1, line:544:32> line:543:12 __fpclassifyf 'int (float)' extern
| |-ParmVarDecl 0x562f0729e758 <col:27, col:33> col:33 __value 'float'
| |-NoThrowAttr 0x562f0729e898 <col:58>
| `-ConstAttr 0x562f0729e8f0 <line:544:22>
|-FunctionDecl 0x562f0729e9c8 <line:547:1, line:548:32> line:547:12 __signbitf 'int (float)' extern
| |-ParmVarDecl 0x562f0729e930 <col:24, col:30> col:30 __value 'float'
| |-NoThrowAttr 0x562f0729ea70 <col:55>
| `-ConstAttr 0x562f0729eac8 <line:548:22>
|-FunctionDecl 0x562f0729ecf8 <line:552:14> col:14 implicit fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x562f0729ed98 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f0729ee00 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x562f0729ee68 <<invalid sloc>> <invalid sloc> 'float'
| |-ConstAttr 0x562f0729eee8 <col:14> Implicit
| `-NoThrowAttr 0x562f0729ef40 <col:14> Implicit
|-FunctionDecl 0x562f0729ef68 prev 0x562f0729ecf8 <col:1, col:82> col:14 fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x562f0729eb08 <col:20, col:26> col:26 __x 'float'
| |-ParmVarDecl 0x562f0729eb88 <col:31, col:37> col:37 __y 'float'
| |-ParmVarDecl 0x562f0729ec08 <col:42, col:48> col:48 __z 'float'
| |-ConstAttr 0x562f0729f078 <col:14> Inherited Implicit
| `-NoThrowAttr 0x562f0729f020 <col:69>
|-FunctionDecl 0x562f0729f2a8 <col:85, col:168> col:98 __fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x562f0729f0b8 <col:106, col:112> col:112 __x 'float'
| |-ParmVarDecl 0x562f0729f180 <col:117, col:123> col:123 __y 'float'
| |-ParmVarDecl 0x562f0729f200 <col:128, col:134> col:134 __z 'float'
| `-NoThrowAttr 0x562f0729f360 <col:155>
|-FunctionDecl 0x562f0729f4f0 <line:553:1, col:73> col:14 scalbf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0729f3d0 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x562f0729f450 <col:33, col:39> col:39 __n 'float'
| `-NoThrowAttr 0x562f0729f5a0 <col:60>
|-FunctionDecl 0x562f0729f730 <col:76, col:150> col:89 __scalbf 'float (float, float)' extern
| |-ParmVarDecl 0x562f0729f610 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x562f0729f690 <col:110, col:116> col:116 __n 'float'
| `-NoThrowAttr 0x562f0729f7e0 <col:137>
|-FunctionDecl 0x562f0729f928 <line:554:20> col:20 implicit acosl 'long double (long double)' extern
| |-ParmVarDecl 0x562f0729f9c8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f0729fa38 <col:20> Implicit
|-FunctionDecl 0x562f0729fa90 prev 0x562f0729f928 <col:1, col:73> col:20 acosl 'long double (long double)' extern
| |-ParmVarDecl 0x562f0729f850 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x562f0729fb38 <col:60>
|-FunctionDecl 0x562f0729fc40 <col:76, col:150> col:95 __acosl 'long double (long double)' extern
| |-ParmVarDecl 0x562f0729fba8 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x562f0729fce8 <col:137>
|-FunctionDecl 0x562f0729fdf0 <line:556:20> col:20 implicit asinl 'long double (long double)' extern
| |-ParmVarDecl 0x562f0729fe90 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f0729ff00 <col:20> Implicit
|-FunctionDecl 0x562f0729ff58 prev 0x562f0729fdf0 <col:1, col:73> col:20 asinl 'long double (long double)' extern
| |-ParmVarDecl 0x562f0729fd58 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x562f072a0000 <col:60>
|-FunctionDecl 0x562f072a0190 <col:76, col:150> col:95 __asinl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a0070 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x562f072a0238 <col:137>
|-FunctionDecl 0x562f072a0340 <line:558:20> col:20 implicit atanl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a03e0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a0450 <col:20> Implicit
|-FunctionDecl 0x562f072a04a8 prev 0x562f072a0340 <col:1, col:73> col:20 atanl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a02a8 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x562f072a0550 <col:60>
|-FunctionDecl 0x562f072a0658 <col:76, col:150> col:95 __atanl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a05c0 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x562f072a0700 <col:137>
|-FunctionDecl 0x562f072a08d8 <line:560:20> col:20 implicit atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072a0978 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072a09e0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a0a58 <col:20> Implicit
|-FunctionDecl 0x562f072a0ab0 prev 0x562f072a08d8 <col:1, col:91> col:20 atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072a0770 <col:28, col:40> col:40 __y 'long double'
| |-ParmVarDecl 0x562f072a07f0 <col:45, col:57> col:57 __x 'long double'
| `-NoThrowAttr 0x562f072a0b60 <col:78>
|-FunctionDecl 0x562f072a0cf0 <col:94, col:186> col:113 __atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072a0bd0 <col:123, col:135> col:135 __y 'long double'
| |-ParmVarDecl 0x562f072a0c50 <col:140, col:152> col:152 __x 'long double'
| `-NoThrowAttr 0x562f072a0da0 <col:173>
|-FunctionDecl 0x562f072a0ea8 <line:563:21> col:21 implicit cosl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a0f48 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a0fb8 <col:21> Implicit
|-FunctionDecl 0x562f072a1010 prev 0x562f072a0ea8 <col:2, col:73> col:21 cosl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a0e10 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x562f072a10b8 <col:60>
|-FunctionDecl 0x562f072a11d0 <col:76, col:149> col:95 __cosl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a1128 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x562f072a1278 <col:136>
|-FunctionDecl 0x562f072a1380 <line:565:21> col:21 implicit sinl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a1420 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a1490 <col:21> Implicit
|-FunctionDecl 0x562f072a14e8 prev 0x562f072a1380 <col:2, col:73> col:21 sinl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a12e8 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x562f072a1590 <col:60>
|-FunctionDecl 0x562f072a1698 <col:76, col:149> col:95 __sinl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a1600 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x562f072a1740 <col:136>
|-FunctionDecl 0x562f072a1848 <line:567:20> col:20 implicit tanl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a18e8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a1958 <col:20> Implicit
|-FunctionDecl 0x562f072a19b0 prev 0x562f072a1848 <col:1, col:72> col:20 tanl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a17b0 <col:26, col:38> col:38 __x 'long double'
| `-NoThrowAttr 0x562f072a1a58 <col:59>
|-FunctionDecl 0x562f072a1b60 <col:75, col:148> col:94 __tanl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a1ac8 <col:102, col:114> col:114 __x 'long double'
| `-NoThrowAttr 0x562f072a1c08 <col:135>
|-FunctionDecl 0x562f072a1d10 <line:572:20> col:20 implicit coshl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a1db0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a1e20 <col:20> Implicit
|-FunctionDecl 0x562f072a1e78 prev 0x562f072a1d10 <col:1, col:73> col:20 coshl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a1c78 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x562f072a1f20 <col:60>
|-FunctionDecl 0x562f072a2028 <col:76, col:150> col:95 __coshl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a1f90 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x562f072a20d0 <col:137>
|-FunctionDecl 0x562f072a2248 <line:574:20> col:20 implicit sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a22e8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a2358 <col:20> Implicit
|-FunctionDecl 0x562f072a23b0 prev 0x562f072a2248 <col:1, col:73> col:20 sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a21b0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x562f072a2458 <col:60>
|-FunctionDecl 0x562f072a2560 <col:76, col:150> col:95 __sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a24c8 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x562f072a2608 <col:137>
|-FunctionDecl 0x562f072a2710 <line:576:20> col:20 implicit tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a27b0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a2820 <col:20> Implicit
|-FunctionDecl 0x562f072a2878 prev 0x562f072a2710 <col:1, col:73> col:20 tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a2678 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x562f072a2920 <col:60>
|-FunctionDecl 0x562f072a2a28 <col:76, col:150> col:95 __tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a2990 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x562f072a2ad0 <col:137>
|-FunctionDecl 0x562f072a2bd8 <line:577:20> col:20 implicit acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a2c78 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a2ce8 <col:20> Implicit
|-FunctionDecl 0x562f072a2d40 prev 0x562f072a2bd8 <col:1, col:74> col:20 acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a2b40 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x562f072a2de8 <col:61>
|-FunctionDecl 0x562f072a2ef0 <col:77, col:152> col:96 __acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a2e58 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x562f072a2f98 <col:139>
|-FunctionDecl 0x562f072a30a0 <line:579:20> col:20 implicit asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a3140 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a31c0 <col:20> Implicit
|-FunctionDecl 0x562f072a3218 prev 0x562f072a30a0 <col:1, col:74> col:20 asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a3008 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x562f072a32c0 <col:61>
|-FunctionDecl 0x562f072a33c8 <col:77, col:152> col:96 __asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a3330 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x562f072a3470 <col:139>
|-FunctionDecl 0x562f072a3578 <line:581:20> col:20 implicit atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a3618 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a3688 <col:20> Implicit
|-FunctionDecl 0x562f072a36e0 prev 0x562f072a3578 <col:1, col:74> col:20 atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a34e0 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x562f072a3788 <col:61>
|-FunctionDecl 0x562f072a3890 <col:77, col:152> col:96 __atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a37f8 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x562f072a3938 <col:139>
|-FunctionDecl 0x562f072a3a40 <line:589:21> col:21 implicit expl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a3ae0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a3b50 <col:21> Implicit
|-FunctionDecl 0x562f072a3ba8 prev 0x562f072a3a40 <col:2, col:73> col:21 expl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a39a8 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x562f072a3c50 <col:60>
|-FunctionDecl 0x562f072a3d58 <col:76, col:149> col:95 __expl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a3cc0 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x562f072a3e00 <col:136>
|-FunctionDecl 0x562f072a3fd8 <line:592:20> col:20 implicit frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x562f072a4078 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072a40e0 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x562f072a4158 <col:20> Implicit
|-FunctionDecl 0x562f072a41d0 prev 0x562f072a3fd8 <col:1, col:91> col:20 frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x562f072a3e70 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x562f072a3ef0 <col:45, col:50> col:50 __exponent 'int *'
| `-NoThrowAttr 0x562f072a4280 <col:78>
|-FunctionDecl 0x562f072a4410 <col:94, col:186> col:113 __frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x562f072a42f0 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x562f072a4370 <col:140, col:145> col:145 __exponent 'int *'
| `-NoThrowAttr 0x562f072a44c0 <col:173>
|-FunctionDecl 0x562f072a4698 <line:595:20> col:20 implicit ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x562f072a4738 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072a47a0 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x562f072a4818 <col:20> Implicit
|-FunctionDecl 0x562f072a4870 prev 0x562f072a4698 <col:1, col:90> col:20 ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x562f072a4530 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x562f072a45b0 <col:45, col:49> col:49 __exponent 'int'
| `-NoThrowAttr 0x562f072a4920 <col:77>
|-FunctionDecl 0x562f072a4ab0 <col:93, col:184> col:112 __ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x562f072a4990 <col:122, col:134> col:134 __x 'long double'
| |-ParmVarDecl 0x562f072a4a10 <col:139, col:143> col:143 __exponent 'int'
| `-NoThrowAttr 0x562f072a4b60 <col:171>
|-FunctionDecl 0x562f072a4c68 <line:598:21> col:21 implicit logl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a4d08 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a4d78 <col:21> Implicit
|-FunctionDecl 0x562f072a4dd0 prev 0x562f072a4c68 <col:2, col:73> col:21 logl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a4bd0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x562f072a4e78 <col:60>
|-FunctionDecl 0x562f072a4f80 <col:76, col:149> col:95 __logl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a4ee8 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x562f072a5028 <col:136>
|-FunctionDecl 0x562f072a5130 <line:601:20> col:20 implicit log10l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a51e0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a5250 <col:20> Implicit
|-FunctionDecl 0x562f072a52a8 prev 0x562f072a5130 <col:1, col:74> col:20 log10l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a5098 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x562f072a5350 <col:61>
|-FunctionDecl 0x562f072a5458 <col:77, col:152> col:96 __log10l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a53c0 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x562f072a5500 <col:139>
|-FunctionDecl 0x562f072a5708 <line:604:20> col:20 implicit modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x562f072a57a8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072a5810 <<invalid sloc>> <invalid sloc> 'long double *'
| `-NoThrowAttr 0x562f072a5888 <col:20> Implicit
|-FunctionDecl 0x562f072a58e0 prev 0x562f072a5708 <col:1, col:94> col:20 modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x562f072a5570 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x562f072a5628 <col:44, col:57> col:57 __iptr 'long double *'
| `-NoThrowAttr 0x562f072a5990 <col:81>
|-FunctionDecl 0x562f072a5b40 <col:97, col:226> col:116 __modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x562f072a5a00 <col:125, col:137> col:137 __x 'long double'
| |-ParmVarDecl 0x562f072a5a80 <col:142, col:155> col:155 __iptr 'long double *'
| |-NoThrowAttr 0x562f072a5bf0 <col:179>
| `-NonNullAttr 0x562f072a5c48 <col:210, col:224> 2
|-FunctionDecl 0x562f072a5d38 <line:605:20> col:20 implicit expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a5dd8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a5e48 <col:20> Implicit
|-FunctionDecl 0x562f072a5ea0 prev 0x562f072a5d38 <col:1, col:74> col:20 expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a5ca0 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x562f072a5f48 <col:61>
|-FunctionDecl 0x562f072a6050 <col:77, col:152> col:96 __expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a5fb8 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x562f072a60f8 <col:139>
|-FunctionDecl 0x562f072a6220 <line:608:20> col:20 implicit log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a62c0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a6330 <col:20> Implicit
|-FunctionDecl 0x562f072a6388 prev 0x562f072a6220 <col:1, col:74> col:20 log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a6168 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x562f072a6430 <col:61>
|-FunctionDecl 0x562f072a6538 <col:77, col:152> col:96 __log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a64a0 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x562f072a65e0 <col:139>
|-FunctionDecl 0x562f072a66e8 <line:611:20> col:20 implicit logbl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a6788 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a67f8 <col:20> Implicit
|-FunctionDecl 0x562f072a6850 prev 0x562f072a66e8 <col:1, col:73> col:20 logbl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a6650 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x562f072a68f8 <col:60>
|-FunctionDecl 0x562f072a6a00 <col:76, col:150> col:95 __logbl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a6968 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x562f072a6aa8 <col:137>
|-FunctionDecl 0x562f072a6bb0 <line:618:20> col:20 implicit exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a6c50 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a6cc0 <col:20> Implicit
|-FunctionDecl 0x562f072a6d18 prev 0x562f072a6bb0 <col:1, col:73> col:20 exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a6b18 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x562f072a6dc0 <col:60>
|-FunctionDecl 0x562f072a6ec8 <col:76, col:150> col:95 __exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a6e30 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x562f072a6f70 <col:137>
|-FunctionDecl 0x562f072a7078 <line:621:20> col:20 implicit log2l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a7118 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a7188 <col:20> Implicit
|-FunctionDecl 0x562f072a7200 prev 0x562f072a7078 <col:1, col:73> col:20 log2l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a6fe0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x562f072a72a8 <col:60>
|-FunctionDecl 0x562f072a73b0 <col:76, col:150> col:95 __log2l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a7318 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x562f072a7458 <col:137>
|-FunctionDecl 0x562f072a75e8 <line:622:21> col:21 implicit powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072a7688 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072a76f0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a7768 <col:21> Implicit
|-FunctionDecl 0x562f072a77c0 prev 0x562f072a75e8 <col:2, col:90> col:21 powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072a74c8 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x562f072a7548 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x562f072a7870 <col:77>
|-FunctionDecl 0x562f072a7a00 <col:93, col:183> col:112 __powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072a78e0 <col:120, col:132> col:132 __x 'long double'
| |-ParmVarDecl 0x562f072a7960 <col:137, col:149> col:149 __y 'long double'
| `-NoThrowAttr 0x562f072a7ab0 <col:170>
|-FunctionDecl 0x562f072a7bb8 <line:625:20> col:20 implicit sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a7c58 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a7cc8 <col:20> Implicit
|-FunctionDecl 0x562f072a7d20 prev 0x562f072a7bb8 <col:1, col:73> col:20 sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a7b20 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x562f072a7dc8 <col:60>
|-FunctionDecl 0x562f072a7ed0 <col:76, col:150> col:95 __sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a7e38 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x562f072a7f78 <col:137>
|-FunctionDecl 0x562f072a8108 <line:631:20> col:20 implicit hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072a8210 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072a8278 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a82f0 <col:20> Implicit
|-FunctionDecl 0x562f072a8348 prev 0x562f072a8108 <col:1, col:91> col:20 hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072a7fe8 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x562f072a8068 <col:45, col:57> col:57 __y 'long double'
| `-NoThrowAttr 0x562f072a83f8 <col:78>
|-FunctionDecl 0x562f072a8588 <col:94, col:186> col:113 __hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072a8468 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x562f072a84e8 <col:140, col:152> col:152 __y 'long double'
| `-NoThrowAttr 0x562f072a8638 <col:173>
|-FunctionDecl 0x562f072a8740 <line:638:20> col:20 implicit cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a87e0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x562f072a8850 <col:20> Implicit
| `-ConstAttr 0x562f072a88a8 <col:20> Implicit
|-FunctionDecl 0x562f072a88d0 prev 0x562f072a8740 <col:1, col:73> col:20 cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a86a8 <col:27, col:39> col:39 __x 'long double'
| |-ConstAttr 0x562f072a89d0 <col:20> Inherited Implicit
| `-NoThrowAttr 0x562f072a8978 <col:60>
|-FunctionDecl 0x562f072a8aa8 <col:76, col:150> col:95 __cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a8a10 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x562f072a8b50 <col:137>
|-FunctionDecl 0x562f072a8c58 <line:639:20> col:20 implicit ceill 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a8cf8 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x562f072a8d68 <col:20> Implicit
| `-ConstAttr 0x562f072a8dc0 <col:20> Implicit
|-FunctionDecl 0x562f072a8de8 prev 0x562f072a8c58 <col:1, col:101> col:20 ceill 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a8bc0 <col:27, col:39> col:39 __x 'long double'
| |-NoThrowAttr 0x562f072a8e90 <col:60>
| `-ConstAttr 0x562f072a8ee8 <col:91>
|-FunctionDecl 0x562f072a8fc0 <col:104, col:206> col:123 __ceill 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a8f28 <col:132, col:144> col:144 __x 'long double'
| |-NoThrowAttr 0x562f072a9068 <col:165>
| `-ConstAttr 0x562f072a90c0 <col:196>
|-FunctionDecl 0x562f072a9220 <line:642:20> col:20 implicit fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a92c0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x562f072a9330 <col:20> Implicit
| `-ConstAttr 0x562f072a9388 <col:20> Implicit
|-FunctionDecl 0x562f072a93b0 prev 0x562f072a9220 <col:1, col:101> col:20 fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a9100 <col:27, col:39> col:39 __x 'long double'
| |-NoThrowAttr 0x562f072a9458 <col:60>
| `-ConstAttr 0x562f072a94b0 <col:91>
|-FunctionDecl 0x562f072a9588 <col:104, col:206> col:123 __fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a94f0 <col:132, col:144> col:144 __x 'long double'
| |-NoThrowAttr 0x562f072a9630 <col:165>
| `-ConstAttr 0x562f072a9688 <col:196>
|-FunctionDecl 0x562f072a9760 <line:645:20> col:20 implicit floorl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a9800 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x562f072a9870 <col:20> Implicit
| `-ConstAttr 0x562f072a98c8 <col:20> Implicit
|-FunctionDecl 0x562f072a98f0 prev 0x562f072a9760 <col:1, col:102> col:20 floorl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a96c8 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x562f072a9998 <col:61>
| `-ConstAttr 0x562f072a99f0 <col:92>
|-FunctionDecl 0x562f072a9ac8 <col:105, col:208> col:124 __floorl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072a9a30 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x562f072a9b70 <col:167>
| `-ConstAttr 0x562f072a9bc8 <col:198>
|-FunctionDecl 0x562f072a9d28 <line:648:20> col:20 implicit fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072a9dc8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072a9e30 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072a9ea8 <col:20> Implicit
|-FunctionDecl 0x562f072a9f00 prev 0x562f072a9d28 <col:1, col:90> col:20 fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072a9c08 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x562f072a9c88 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x562f072a9fb0 <col:77>
|-FunctionDecl 0x562f072aa140 <col:93, col:184> col:112 __fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072aa020 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x562f072aa0a0 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x562f072aa1f0 <col:171>
|-FunctionDecl 0x562f072aa348 <line:653:1, col:100> col:12 __isinfl 'int (long double)' extern
| |-ParmVarDecl 0x562f072aa278 <col:22, col:34> col:34 __value 'long double'
| |-NoThrowAttr 0x562f072aa3f0 <col:59>
| `-ConstAttr 0x562f072aa448 <col:90>
|-FunctionDecl 0x562f072aa520 <line:656:12> col:12 implicit __finitel 'int (long double)' extern
| |-ParmVarDecl 0x562f072aa5c0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x562f072aa630 <col:12> Implicit
| `-ConstAttr 0x562f072aa688 <col:12> Implicit
|-FunctionDecl 0x562f072aa6b0 prev 0x562f072aa520 <col:1, col:101> col:12 __finitel 'int (long double)' extern
| |-ParmVarDecl 0x562f072aa488 <col:23, col:35> col:35 __value 'long double'
| |-NoThrowAttr 0x562f072aa758 <col:60>
| `-ConstAttr 0x562f072aa7b0 <col:91>
|-FunctionDecl 0x562f072aa888 <line:662:1, col:98> col:12 isinfl 'int (long double)' extern
| |-ParmVarDecl 0x562f072aa7f0 <col:20, col:32> col:32 __value 'long double'
| |-NoThrowAttr 0x562f072aa930 <col:57>
| `-ConstAttr 0x562f072aa988 <col:88>
|-FunctionDecl 0x562f072aaa60 <line:665:12> col:12 implicit finitel 'int (long double)' extern
| |-ParmVarDecl 0x562f072aab00 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x562f072aab70 <col:12> Implicit
| `-ConstAttr 0x562f072aabc8 <col:12> Implicit
|-FunctionDecl 0x562f072aabf0 prev 0x562f072aaa60 <col:1, col:99> col:12 finitel 'int (long double)' extern
| |-ParmVarDecl 0x562f072aa9c8 <col:21, col:33> col:33 __value 'long double'
| |-NoThrowAttr 0x562f072aac98 <col:58>
| `-ConstAttr 0x562f072aacf0 <col:89>
|-FunctionDecl 0x562f072aae50 <line:668:1, col:90> col:20 dreml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072aad30 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x562f072aadb0 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x562f072aaf00 <col:77>
|-FunctionDecl 0x562f072ab090 <col:93, col:184> col:112 __dreml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072aaf70 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x562f072aaff0 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x562f072ab140 <col:171>
|-FunctionDecl 0x562f072ab270 <line:672:1, col:80> col:20 significandl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072ab1b0 <col:34, col:46> col:46 __x 'long double'
| `-NoThrowAttr 0x562f072ab318 <col:67>
|-FunctionDecl 0x562f072ab420 <col:83, col:164> col:102 __significandl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072ab388 <col:118, col:130> col:130 __x 'long double'
| `-NoThrowAttr 0x562f072ab4c8 <col:151>
|-FunctionDecl 0x562f072ab658 <line:678:20> col:20 implicit copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072ab6f8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072ab760 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x562f072ab7d8 <col:20> Implicit
| `-ConstAttr 0x562f072ab830 <col:20> Implicit
|-FunctionDecl 0x562f072ab858 prev 0x562f072ab658 <col:1, col:122> col:20 copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072ab538 <col:31, col:43> col:43 __x 'long double'
| |-ParmVarDecl 0x562f072ab5b8 <col:48, col:60> col:60 __y 'long double'
| |-NoThrowAttr 0x562f072ab908 <col:81>
| `-ConstAttr 0x562f072ab960 <col:112>
|-FunctionDecl 0x562f072abac0 <col:125, col:248> col:144 __copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072ab9a0 <col:157, col:169> col:169 __x 'long double'
| |-ParmVarDecl 0x562f072aba20 <col:174, col:186> col:186 __y 'long double'
| |-NoThrowAttr 0x562f072abb70 <col:207>
| `-ConstAttr 0x562f072abbc8 <col:238>
|-FunctionDecl 0x562f072abcd8 <line:685:20> col:20 implicit nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x562f072abd78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x562f072abde8 <col:20> Implicit
| `-PureAttr 0x562f072abe40 <col:20> Implicit
|-FunctionDecl 0x562f072abe68 prev 0x562f072abcd8 <col:1, col:103> col:20 nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x562f072abc08 <col:26, col:38> col:38 __tagb 'const char *'
| |-PureAttr 0x562f072abf90 <col:20> Inherited Implicit
| |-NoThrowAttr 0x562f072abf10 <col:62>
| `-ConstAttr 0x562f072abf68 <col:93>
|-FunctionDecl 0x562f072ac068 <col:106, col:210> col:125 __nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x562f072abfd0 <col:133, col:145> col:145 __tagb 'const char *'
| |-NoThrowAttr 0x562f072ac110 <col:169>
| `-ConstAttr 0x562f072ac168 <col:200>
|-FunctionDecl 0x562f072ac250 <line:691:1, col:100> col:12 __isnanl 'int (long double)' extern
| |-ParmVarDecl 0x562f072ac1a8 <col:22, col:34> col:34 __value 'long double'
| |-NoThrowAttr 0x562f072ac2f8 <col:59>
| `-ConstAttr 0x562f072ac350 <col:90>
|-FunctionDecl 0x562f072ac428 <line:695:1, col:98> col:12 isnanl 'int (long double)' extern
| |-ParmVarDecl 0x562f072ac390 <col:20, col:32> col:32 __value 'long double'
| |-NoThrowAttr 0x562f072ac4d0 <col:57>
| `-ConstAttr 0x562f072ac528 <col:88>
|-FunctionDecl 0x562f072ac600 <line:698:1, col:67> col:20 j0l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072ac568 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x562f072ac6a8 <col:54>
|-FunctionDecl 0x562f072ac7b0 <col:70, col:138> col:89 __j0l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072ac718 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x562f072ac858 <col:125>
|-FunctionDecl 0x562f072ac960 <line:699:1, col:67> col:20 j1l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072ac8c8 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x562f072aca08 <col:54>
|-FunctionDecl 0x562f072acb10 <col:70, col:138> col:89 __j1l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072aca78 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x562f072acbb8 <col:125>
|-FunctionDecl 0x562f072acd88 <line:700:1, col:72> col:20 jnl 'long double (int, long double)' extern
| |-ParmVarDecl 0x562f072acc28 <col:25> col:28 'int'
| |-ParmVarDecl 0x562f072acca8 <col:30, col:35> col:41 'long double'
| `-NoThrowAttr 0x562f072ace38 <col:59>
|-FunctionDecl 0x562f072acfc8 <col:75, col:148> col:94 __jnl 'long double (int, long double)' extern
| |-ParmVarDecl 0x562f072acea8 <col:101> col:104 'int'
| |-ParmVarDecl 0x562f072acf28 <col:106, col:111> col:117 'long double'
| `-NoThrowAttr 0x562f072ad078 <col:135>
|-FunctionDecl 0x562f072ad180 <line:701:1, col:67> col:20 y0l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072ad0e8 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x562f072ad228 <col:54>
|-FunctionDecl 0x562f072ad340 <col:70, col:138> col:89 __y0l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072ad2a8 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x562f072ad3e8 <col:125>
|-FunctionDecl 0x562f072ad4f0 <line:702:1, col:67> col:20 y1l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072ad458 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x562f072ad598 <col:54>
|-FunctionDecl 0x562f072ad6a0 <col:70, col:138> col:89 __y1l 'long double (long double)' extern
| |-ParmVarDecl 0x562f072ad608 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x562f072ad748 <col:125>
|-FunctionDecl 0x562f072ad8d8 <line:703:1, col:72> col:20 ynl 'long double (int, long double)' extern
| |-ParmVarDecl 0x562f072ad7b8 <col:25> col:28 'int'
| |-ParmVarDecl 0x562f072ad838 <col:30, col:35> col:41 'long double'
| `-NoThrowAttr 0x562f072ad988 <col:59>
|-FunctionDecl 0x562f072adb18 <col:75, col:148> col:94 __ynl 'long double (int, long double)' extern
| |-ParmVarDecl 0x562f072ad9f8 <col:101> col:104 'int'
| |-ParmVarDecl 0x562f072ada78 <col:106, col:111> col:117 'long double'
| `-NoThrowAttr 0x562f072adbc8 <col:135>
|-FunctionDecl 0x562f072adcd0 <line:710:20> col:20 implicit erfl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072add70 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072adde0 <col:20> Implicit
|-FunctionDecl 0x562f072ade38 prev 0x562f072adcd0 <col:1, col:68> col:20 erfl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072adc38 <col:26, col:31> col:37 'long double'
| `-NoThrowAttr 0x562f072adee0 <col:55>
|-FunctionDecl 0x562f072adfe8 <col:71, col:140> col:90 __erfl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072adf50 <col:98, col:103> col:109 'long double'
| `-NoThrowAttr 0x562f072ae090 <col:127>
|-FunctionDecl 0x562f072ae198 <line:711:20> col:20 implicit erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x562f0728a060 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f0728a0d0 <col:20> Implicit
|-FunctionDecl 0x562f0728a128 prev 0x562f072ae198 <col:1, col:69> col:20 erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072ae100 <col:27, col:32> col:38 'long double'
| `-NoThrowAttr 0x562f0728a1d0 <col:56>
|-FunctionDecl 0x562f0728a2d8 <col:72, col:142> col:91 __erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x562f0728a240 <col:100, col:105> col:111 'long double'
| `-NoThrowAttr 0x562f0728a380 <col:129>
|-FunctionDecl 0x562f0728a488 <line:712:20> col:20 implicit lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x562f0728a528 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f0728a598 <col:20> Implicit
|-FunctionDecl 0x562f0728a5f0 prev 0x562f0728a488 <col:1, col:71> col:20 lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x562f0728a3f0 <col:29, col:34> col:40 'long double'
| `-NoThrowAttr 0x562f0728a698 <col:58>
|-FunctionDecl 0x562f0728a7a0 <col:74, col:146> col:93 __lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x562f0728a708 <col:104, col:109> col:115 'long double'
| `-NoThrowAttr 0x562f0728a848 <col:133>
|-FunctionDecl 0x562f0728a950 <line:719:20> col:20 implicit tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x562f0728a9f0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f0728aa60 <col:20> Implicit
|-FunctionDecl 0x562f0728aab8 prev 0x562f0728a950 <col:1, col:71> col:20 tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x562f0728a8b8 <col:29, col:34> col:40 'long double'
| `-NoThrowAttr 0x562f0728ab60 <col:58>
|-FunctionDecl 0x562f0728ac68 <col:74, col:146> col:93 __tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x562f0728abd0 <col:104, col:109> col:115 'long double'
| `-NoThrowAttr 0x562f0728ad10 <col:133>
|-FunctionDecl 0x562f0728ae18 <line:725:1, col:70> col:20 gammal 'long double (long double)' extern
| |-ParmVarDecl 0x562f0728ad80 <col:28, col:33> col:39 'long double'
| `-NoThrowAttr 0x562f0728aec0 <col:57>
|-FunctionDecl 0x562f072b0280 <col:73, col:144> col:92 __gammal 'long double (long double)' extern
| |-ParmVarDecl 0x562f0728af30 <col:102, col:107> col:113 'long double'
| `-NoThrowAttr 0x562f072b0328 <col:131>
|-FunctionDecl 0x562f072b04b8 <line:732:1, col:90> col:20 lgammal_r 'long double (long double, int *)' extern
| |-ParmVarDecl 0x562f072b0398 <col:31, col:36> col:42 'long double'
| |-ParmVarDecl 0x562f072b0418 <col:44, col:49> col:49 __signgamp 'int *'
| `-NoThrowAttr 0x562f072b0568 <col:77>
|-FunctionDecl 0x562f072b06f8 <col:93, col:184> col:112 __lgammal_r 'long double (long double, int *)' extern
| |-ParmVarDecl 0x562f072b05d8 <col:125, col:130> col:136 'long double'
| |-ParmVarDecl 0x562f072b0658 <col:138, col:143> col:143 __signgamp 'int *'
| `-NoThrowAttr 0x562f072b07a8 <col:171>
|-FunctionDecl 0x562f072b08b0 <line:740:20> col:20 implicit rintl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072b0950 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x562f072b09c0 <col:20> Implicit
| `-ConstAttr 0x562f072b0a18 <col:20> Implicit
|-FunctionDecl 0x562f072b0a40 prev 0x562f072b08b0 <col:1, col:73> col:20 rintl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072b0818 <col:27, col:39> col:39 __x 'long double'
| |-ConstAttr 0x562f072b0b40 <col:20> Inherited Implicit
| `-NoThrowAttr 0x562f072b0ae8 <col:60>
|-FunctionDecl 0x562f072b0c18 <col:76, col:150> col:95 __rintl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072b0b80 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x562f072b0cc0 <col:137>
|-FunctionDecl 0x562f072b0e50 <line:743:20> col:20 implicit nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b0ef0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072b0f58 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072b0fd0 <col:20> Implicit
|-FunctionDecl 0x562f072b1028 prev 0x562f072b0e50 <col:1, col:123> col:20 nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b0d30 <col:32, col:44> col:44 __x 'long double'
| |-ParmVarDecl 0x562f072b0db0 <col:49, col:61> col:61 __y 'long double'
| |-NoThrowAttr 0x562f072b10d8 <col:82>
| `-ConstAttr 0x562f072b1130 <col:113>
|-FunctionDecl 0x562f072b12c8 <col:126, col:250> col:145 __nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b1170 <col:159, col:171> col:171 __x 'long double'
| |-ParmVarDecl 0x562f072b11f0 <col:176, col:188> col:188 __y 'long double'
| |-NoThrowAttr 0x562f072b1378 <col:209>
| `-ConstAttr 0x562f072b13d0 <col:240>
|-FunctionDecl 0x562f072b1530 <line:745:20> col:20 implicit nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b15d0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072b1638 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072b16b0 <col:20> Implicit
|-FunctionDecl 0x562f072b1708 prev 0x562f072b1530 <col:1, col:124> col:20 nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b1410 <col:33, col:45> col:45 __x 'long double'
| |-ParmVarDecl 0x562f072b1490 <col:50, col:62> col:62 __y 'long double'
| |-NoThrowAttr 0x562f072b17b8 <col:83>
| `-ConstAttr 0x562f072b1810 <col:114>
|-FunctionDecl 0x562f072b1970 <col:127, col:252> col:146 __nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b1850 <col:161, col:173> col:173 __x 'long double'
| |-ParmVarDecl 0x562f072b18d0 <col:178, col:190> col:190 __y 'long double'
| |-NoThrowAttr 0x562f072b1a20 <col:211>
| `-ConstAttr 0x562f072b1a78 <col:242>
|-FunctionDecl 0x562f072b1bd8 <line:749:20> col:20 implicit remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b1c78 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072b1ce0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072b1d58 <col:20> Implicit
|-FunctionDecl 0x562f072b1db0 prev 0x562f072b1bd8 <col:1, col:95> col:20 remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b1ab8 <col:32, col:44> col:44 __x 'long double'
| |-ParmVarDecl 0x562f072b1b38 <col:49, col:61> col:61 __y 'long double'
| `-NoThrowAttr 0x562f072b1e60 <col:82>
|-FunctionDecl 0x562f072b1ff0 <col:98, col:194> col:117 __remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b1ed0 <col:131, col:143> col:143 __x 'long double'
| |-ParmVarDecl 0x562f072b1f50 <col:148, col:160> col:160 __y 'long double'
| `-NoThrowAttr 0x562f072b20a0 <col:181>
|-FunctionDecl 0x562f072b32b0 <line:753:20> col:20 implicit scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x562f072b3350 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072b33b8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x562f072b3430 <col:20> Implicit
|-FunctionDecl 0x562f072b3488 prev 0x562f072b32b0 <col:1, col:84> col:20 scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x562f072b2110 <col:29, col:41> col:41 __x 'long double'
| |-ParmVarDecl 0x562f072b2190 <col:46, col:50> col:50 __n 'int'
| `-NoThrowAttr 0x562f072b3538 <col:71>
|-FunctionDecl 0x562f072b36c8 <col:87, col:172> col:106 __scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x562f072b35a8 <col:117, col:129> col:129 __x 'long double'
| |-ParmVarDecl 0x562f072b3628 <col:134, col:138> col:138 __n 'int'
| `-NoThrowAttr 0x562f072b3778 <col:159>
|-FunctionDecl 0x562f072b3880 <line:757:12> col:12 implicit ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x562f072b3920 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072b3990 <col:12> Implicit
|-FunctionDecl 0x562f072b39e8 prev 0x562f072b3880 <col:1, col:66> col:12 ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x562f072b37e8 <col:20, col:32> col:32 __x 'long double'
| `-NoThrowAttr 0x562f072b3a90 <col:53>
|-FunctionDecl 0x562f072b3b98 <col:69, col:136> col:80 __ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x562f072b3b00 <col:90, col:102> col:102 __x 'long double'
| `-NoThrowAttr 0x562f072b3c40 <col:123>
|-FunctionDecl 0x562f072b3e18 <line:762:20> col:20 implicit scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x562f072b3eb8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072b3f20 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x562f072b3f98 <col:20> Implicit
|-FunctionDecl 0x562f072b3ff0 prev 0x562f072b3e18 <col:1, col:90> col:20 scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x562f072b3cb0 <col:30, col:42> col:42 __x 'long double'
| |-ParmVarDecl 0x562f072b3d30 <col:47, col:56> col:56 __n 'long'
| `-NoThrowAttr 0x562f072b40a0 <col:77>
|-FunctionDecl 0x562f072b42c0 <col:93, col:184> col:112 __scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x562f072b4110 <col:124, col:136> col:136 __x 'long double'
| |-ParmVarDecl 0x562f072b4190 <col:141, col:150> col:150 __n 'long'
| `-NoThrowAttr 0x562f072b4370 <col:171>
|-FunctionDecl 0x562f072b4478 <line:766:20> col:20 implicit nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072b4518 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x562f072b4588 <col:20> Implicit
| `-ConstAttr 0x562f072b45e0 <col:20> Implicit
|-FunctionDecl 0x562f072b4608 prev 0x562f072b4478 <col:1, col:78> col:20 nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072b43e0 <col:32, col:44> col:44 __x 'long double'
| |-ConstAttr 0x562f072b4708 <col:20> Inherited Implicit
| `-NoThrowAttr 0x562f072b46b0 <col:65>
|-FunctionDecl 0x562f072b47e0 <col:81, col:160> col:100 __nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072b4748 <col:114, col:126> col:126 __x 'long double'
| `-NoThrowAttr 0x562f072b4888 <col:147>
|-FunctionDecl 0x562f072b4990 <line:770:20> col:20 implicit roundl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072b4a30 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x562f072b4aa0 <col:20> Implicit
| `-ConstAttr 0x562f072b4af8 <col:20> Implicit
|-FunctionDecl 0x562f072b4b20 prev 0x562f072b4990 <col:1, col:102> col:20 roundl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072b48f8 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x562f072b4bc8 <col:61>
| `-ConstAttr 0x562f072b4c20 <col:92>
|-FunctionDecl 0x562f072b4cf8 <col:105, col:208> col:124 __roundl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072b4c60 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x562f072b4da0 <col:167>
| `-ConstAttr 0x562f072b4df8 <col:198>
|-FunctionDecl 0x562f072b4ed0 <line:774:20> col:20 implicit truncl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072b4f70 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x562f072b4fe0 <col:20> Implicit
| `-ConstAttr 0x562f072b5038 <col:20> Implicit
|-FunctionDecl 0x562f072b5060 prev 0x562f072b4ed0 <col:1, col:102> col:20 truncl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072b4e38 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x562f072b5108 <col:61>
| `-ConstAttr 0x562f072b5160 <col:92>
|-FunctionDecl 0x562f072b52d0 <col:105, col:208> col:124 __truncl 'long double (long double)' extern
| |-ParmVarDecl 0x562f072b51a0 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x562f072b5378 <col:167>
| `-ConstAttr 0x562f072b53d0 <col:198>
|-FunctionDecl 0x562f072b5608 <line:779:20> col:20 implicit remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x562f072b56a8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072b5710 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072b5778 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x562f072b57f8 <col:20> Implicit
|-FunctionDecl 0x562f072b5850 prev 0x562f072b5608 <col:1, col:104> col:20 remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x562f072b5410 <col:29, col:41> col:41 __x 'long double'
| |-ParmVarDecl 0x562f072b5490 <col:46, col:58> col:58 __y 'long double'
| |-ParmVarDecl 0x562f072b5510 <col:63, col:68> col:68 __quo 'int *'
| `-NoThrowAttr 0x562f072b5908 <col:91>
|-FunctionDecl 0x562f072b5b20 <col:107, col:212> col:126 __remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x562f072b5978 <col:137, col:149> col:149 __x 'long double'
| |-ParmVarDecl 0x562f072b59f8 <col:154, col:166> col:166 __y 'long double'
| |-ParmVarDecl 0x562f072b5a78 <col:171, col:176> col:176 __quo 'int *'
| `-NoThrowAttr 0x562f072b5bd8 <col:199>
|-FunctionDecl 0x562f072b5d18 <line:786:17> col:17 implicit lrintl 'long (long double)' extern
| |-ParmVarDecl 0x562f072b5db8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072b5e28 <col:17> Implicit
|-FunctionDecl 0x562f072b5e80 prev 0x562f072b5d18 <col:1, col:71> col:17 lrintl 'long (long double)' extern
| |-ParmVarDecl 0x562f072b5c48 <col:25, col:37> col:37 __x 'long double'
| `-NoThrowAttr 0x562f072b5f28 <col:58>
|-FunctionDecl 0x562f072b6030 <col:74, col:146> col:90 __lrintl 'long (long double)' extern
| |-ParmVarDecl 0x562f072b5f98 <col:100, col:112> col:112 __x 'long double'
| `-NoThrowAttr 0x562f072b60d8 <col:133>
|-FunctionDecl 0x562f072b6218 <line:788:22> col:22 implicit llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x562f072b62e0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072b6350 <col:22> Implicit
|-FunctionDecl 0x562f072b63a8 prev 0x562f072b6218 <col:1, col:77> col:22 llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x562f072b6148 <col:31, col:43> col:43 __x 'long double'
| `-NoThrowAttr 0x562f072b6450 <col:64>
|-FunctionDecl 0x562f072b6558 <col:80, col:158> col:101 __llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x562f072b64c0 <col:112, col:124> col:124 __x 'long double'
| `-NoThrowAttr 0x562f072b6600 <col:145>
|-FunctionDecl 0x562f072b6708 <line:792:17> col:17 implicit lroundl 'long (long double)' extern
| |-ParmVarDecl 0x562f072b67a8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072b6818 <col:17> Implicit
|-FunctionDecl 0x562f072b6870 prev 0x562f072b6708 <col:1, col:72> col:17 lroundl 'long (long double)' extern
| |-ParmVarDecl 0x562f072b6670 <col:26, col:38> col:38 __x 'long double'
| `-NoThrowAttr 0x562f072b6918 <col:59>
|-FunctionDecl 0x562f072b6a20 <col:75, col:148> col:91 __lroundl 'long (long double)' extern
| |-ParmVarDecl 0x562f072b6988 <col:102, col:114> col:114 __x 'long double'
| `-NoThrowAttr 0x562f072b6ac8 <col:135>
|-FunctionDecl 0x562f072b6bd0 <line:794:22> col:22 implicit llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x562f072b6c70 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072b6ce0 <col:22> Implicit
|-FunctionDecl 0x562f072b6d38 prev 0x562f072b6bd0 <col:1, col:78> col:22 llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x562f072b6b38 <col:32, col:44> col:44 __x 'long double'
| `-NoThrowAttr 0x562f072b6de0 <col:65>
|-FunctionDecl 0x562f072b6ee8 <col:81, col:160> col:102 __llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x562f072b6e50 <col:114, col:126> col:126 __x 'long double'
| `-NoThrowAttr 0x562f072b6f90 <col:147>
|-FunctionDecl 0x562f072b7120 <line:798:20> col:20 implicit fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b71c0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072b7228 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x562f072b72a0 <col:20> Implicit
|-FunctionDecl 0x562f072b7320 prev 0x562f072b7120 <col:1, col:90> col:20 fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b7000 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x562f072b7080 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x562f072b73d0 <col:77>
|-FunctionDecl 0x562f072b7560 <col:93, col:184> col:112 __fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b7440 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x562f072b74c0 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x562f072b7610 <col:171>
|-FunctionDecl 0x562f072b77a0 <line:801:20> col:20 implicit fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b7840 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072b78a8 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x562f072b7920 <col:20> Implicit
| `-ConstAttr 0x562f072b7978 <col:20> Implicit
|-FunctionDecl 0x562f072b79a0 prev 0x562f072b77a0 <col:1, col:118> col:20 fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b7680 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x562f072b7700 <col:44, col:56> col:56 __y 'long double'
| |-NoThrowAttr 0x562f072b7a50 <col:77>
| `-ConstAttr 0x562f072b7aa8 <col:108>
|-FunctionDecl 0x562f072b7c08 <col:121, col:240> col:140 __fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b7ae8 <col:149, col:161> col:161 __x 'long double'
| |-ParmVarDecl 0x562f072b7b68 <col:166, col:178> col:178 __y 'long double'
| |-NoThrowAttr 0x562f072b7cb8 <col:199>
| `-ConstAttr 0x562f072b7d10 <col:230>
|-FunctionDecl 0x562f072b7e70 <line:804:20> col:20 implicit fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b7f10 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072b7f78 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x562f072b7ff0 <col:20> Implicit
| `-ConstAttr 0x562f072b8048 <col:20> Implicit
|-FunctionDecl 0x562f072b8070 prev 0x562f072b7e70 <col:1, col:118> col:20 fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b7d50 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x562f072b7dd0 <col:44, col:56> col:56 __y 'long double'
| |-NoThrowAttr 0x562f072b8120 <col:77>
| `-ConstAttr 0x562f072b8178 <col:108>
|-FunctionDecl 0x562f072b8300 <col:121, col:240> col:140 __fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b81b8 <col:149, col:161> col:161 __x 'long double'
| |-ParmVarDecl 0x562f072b8238 <col:166, col:178> col:178 __y 'long double'
| |-NoThrowAttr 0x562f072b83b0 <col:199>
| `-ConstAttr 0x562f072b8408 <col:230>
|-FunctionDecl 0x562f072b84e0 <line:808:1, line:809:32> line:808:12 __fpclassifyl 'int (long double)' extern
| |-ParmVarDecl 0x562f072b8448 <col:27, col:39> col:39 __value 'long double'
| |-NoThrowAttr 0x562f072b8588 <col:64>
| `-ConstAttr 0x562f072b85e0 <line:809:22>
|-FunctionDecl 0x562f072b86b8 <line:812:1, line:813:32> line:812:12 __signbitl 'int (long double)' extern
| |-ParmVarDecl 0x562f072b8620 <col:24, col:36> col:36 __value 'long double'
| |-NoThrowAttr 0x562f072b8760 <col:61>
| `-ConstAttr 0x562f072b87b8 <line:813:22>
|-FunctionDecl 0x562f072b89e8 <line:817:20> col:20 implicit fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x562f072b8a88 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072b8af0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x562f072b8b58 <<invalid sloc>> <invalid sloc> 'long double'
| |-ConstAttr 0x562f072b8bd8 <col:20> Implicit
| `-NoThrowAttr 0x562f072b8c30 <col:20> Implicit
|-FunctionDecl 0x562f072b8c58 prev 0x562f072b89e8 <col:1, col:106> col:20 fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x562f072b87f8 <col:26, col:38> col:38 __x 'long double'
| |-ParmVarDecl 0x562f072b8878 <col:43, col:55> col:55 __y 'long double'
| |-ParmVarDecl 0x562f072b88f8 <col:60, col:72> col:72 __z 'long double'
| |-ConstAttr 0x562f072b8d68 <col:20> Inherited Implicit
| `-NoThrowAttr 0x562f072b8d10 <col:93>
|-FunctionDecl 0x562f072b8f50 <col:109, col:216> col:128 __fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x562f072b8da8 <col:136, col:148> col:148 __x 'long double'
| |-ParmVarDecl 0x562f072b8e28 <col:153, col:165> col:165 __y 'long double'
| |-ParmVarDecl 0x562f072b8ea8 <col:170, col:182> col:182 __z 'long double'
| `-NoThrowAttr 0x562f072b9008 <col:203>
|-FunctionDecl 0x562f072b9198 <line:818:1, col:91> col:20 scalbl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b9078 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x562f072b90f8 <col:45, col:57> col:57 __n 'long double'
| `-NoThrowAttr 0x562f072b9248 <col:78>
|-FunctionDecl 0x562f072b9430 <col:94, col:186> col:113 __scalbl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x562f072b9310 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x562f072b9390 <col:140, col:152> col:152 __n 'long double'
| `-NoThrowAttr 0x562f072b94e0 <col:173>
|-VarDecl 0x562f072b9550 <line:819:1, col:12> col:12 signgam 'int' extern
|-EnumDecl 0x562f072b95b8 <line:820:1, line:837:3> line:820:1
| |-EnumConstantDecl 0x562f072b96c0 <line:822:5, line:824:7> line:822:5 FP_NAN 'int'
| | `-ConstantExpr 0x562f072b96a8 <line:824:7> 'int'
| |   `-IntegerLiteral 0x562f072b9688 <col:7> 'int' 0
| |-EnumConstantDecl 0x562f072b9748 <line:825:5, line:827:7> line:825:5 FP_INFINITE 'int'
| | `-ConstantExpr 0x562f072b9730 <line:827:7> 'int'
| |   `-IntegerLiteral 0x562f072b9710 <col:7> 'int' 1
| |-EnumConstantDecl 0x562f072b97d0 <line:828:5, line:830:7> line:828:5 FP_ZERO 'int'
| | `-ConstantExpr 0x562f072b97b8 <line:830:7> 'int'
| |   `-IntegerLiteral 0x562f072b9798 <col:7> 'int' 2
| |-EnumConstantDecl 0x562f072b9858 <line:831:5, line:833:7> line:831:5 FP_SUBNORMAL 'int'
| | `-ConstantExpr 0x562f072b9840 <line:833:7> 'int'
| |   `-IntegerLiteral 0x562f072b9820 <col:7> 'int' 3
| `-EnumConstantDecl 0x562f072b98e0 <line:834:5, line:836:7> line:834:5 FP_NORMAL 'int'
|   `-ConstantExpr 0x562f072b98c8 <line:836:7> 'int'
|     `-IntegerLiteral 0x562f072b98a8 <col:7> 'int' 4
|-EnumDecl 0x562f072b9930 <line:838:9, line:845:1> line:838:9
| |-EnumConstantDecl 0x562f072b9a48 <line:840:3, col:13> col:3 _IEEE_ 'int'
| | `-ConstantExpr 0x562f072b9a30 <col:12, col:13> 'int'
| |   `-UnaryOperator 0x562f072b9a18 <col:12, col:13> 'int' prefix '-'
| |     `-IntegerLiteral 0x562f072b99f8 <col:13> 'int' 1
| |-EnumConstantDecl 0x562f072b9a98 <line:841:3> col:3 _SVID_ 'int'
| |-EnumConstantDecl 0x562f072b9ae8 <line:842:3> col:3 _XOPEN_ 'int'
| |-EnumConstantDecl 0x562f072b9b38 <line:843:3> col:3 _POSIX_ 'int'
| `-EnumConstantDecl 0x562f072b9b88 <line:844:3> col:3 _ISOC_ 'int'
|-TypedefDecl 0x562f072b9c40 <line:838:1, line:845:3> col:3 referenced _LIB_VERSION_TYPE 'enum _LIB_VERSION_TYPE':'_LIB_VERSION_TYPE'
| `-ElaboratedType 0x562f072b9be0 'enum _LIB_VERSION_TYPE' sugar
|   `-EnumType 0x562f072b99d0 '_LIB_VERSION_TYPE'
|     `-Enum 0x562f072b9930 ''
|-VarDecl 0x562f072b9ce8 <line:850:1, col:26> col:26 _LIB_VERSION '_LIB_VERSION_TYPE':'_LIB_VERSION_TYPE' extern
|-RecordDecl 0x562f072b9d50 <line:851:1, line:859:3> line:851:8 struct exception definition
| |-FieldDecl 0x562f072b9e10 <line:854:5, col:9> col:9 type 'int'
| |-FieldDecl 0x562f072b9e78 <line:855:5, col:11> col:11 name 'char *'
| |-FieldDecl 0x562f072b9ee0 <line:856:5, col:12> col:12 arg1 'double'
| |-FieldDecl 0x562f072b9f48 <line:857:5, col:12> col:12 arg2 'double'
| `-FieldDecl 0x562f072b9fb0 <line:858:5, col:12> col:12 retval 'double'
|-FunctionDecl 0x562f072ba1d8 <line:864:1, col:44> col:12 matherr 'int (struct exception *)' extern
| `-ParmVarDecl 0x562f072ba0c8 <col:21, col:39> col:39 __exc 'struct exception *'
|-FunctionDecl 0x562f072ba320 <line:866:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x562f072ba4a0 <line:867:1, col:88> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x562f072ba3d8 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x562f072ba6f0 <col:34, col:88>
|   |-IfStmt 0x562f072ba6c8 <col:36, col:78>
|   | |-UnaryOperator 0x562f072ba5a0 <col:40, col:46> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x562f072ba588 <col:41, col:46> 'int' <LValueToRValue>
|   | |   `-ParenExpr 0x562f072ba568 <col:41, col:46> 'int' lvalue
|   | |     `-DeclRefExpr 0x562f072ba548 <col:42> 'int' lvalue ParmVar 0x562f072ba3d8 'cond' 'int'
|   | `-CompoundStmt 0x562f072ba6b0 <col:49, col:78>
|   |   `-LabelStmt 0x562f072ba698 <col:51, col:75> 'ERROR'
|   |     `-CallExpr 0x562f072ba628 <col:58, col:75> 'void'
|   |       `-ImplicitCastExpr 0x562f072ba610 <col:58> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x562f072ba5b8 <col:58> 'void () __attribute__((noreturn))' Function 0x562f072ba320 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   `-ReturnStmt 0x562f072ba6e0 <col:80>
`-FunctionDecl 0x562f072ba7e8 <line:869:1, line:899:1> line:869:5 main 'int (void)'
  `-CompoundStmt 0x562f072bc6a0 <line:870:1, line:899:1>
    |-CallExpr 0x562f072baa18 <line:871:3, col:38> 'void'
    | |-ImplicitCastExpr 0x562f072baa00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072ba8c0 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072ba9b0 <col:21, col:35> 'int' '=='
    |   |-CallExpr 0x562f072ba968 <col:21, col:30> 'double'
    |   | |-ImplicitCastExpr 0x562f072ba950 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072ba8e0 <col:21> 'double (double)' Function 0x562f0727c1b8 'round' 'double (double)'
    |   | `-FloatingLiteral 0x562f072ba900 <col:27> 'double' 2.300000e+00
    |   `-FloatingLiteral 0x562f072ba990 <col:35> 'double' 2.000000e+00
    |-CallExpr 0x562f072bab38 <line:872:3, col:38> 'void'
    | |-ImplicitCastExpr 0x562f072bab20 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072baa40 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bab00 <col:21, col:35> 'int' '=='
    |   |-CallExpr 0x562f072baab8 <col:21, col:30> 'double'
    |   | |-ImplicitCastExpr 0x562f072baaa0 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072baa60 <col:21> 'double (double)' Function 0x562f0727c1b8 'round' 'double (double)'
    |   | `-FloatingLiteral 0x562f072baa80 <col:27> 'double' 3.800000e+00
    |   `-FloatingLiteral 0x562f072baae0 <col:35> 'double' 4.000000e+00
    |-CallExpr 0x562f072bac58 <line:873:3, col:38> 'void'
    | |-ImplicitCastExpr 0x562f072bac40 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bab60 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bac20 <col:21, col:35> 'int' '=='
    |   |-CallExpr 0x562f072babd8 <col:21, col:30> 'double'
    |   | |-ImplicitCastExpr 0x562f072babc0 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bab80 <col:21> 'double (double)' Function 0x562f0727c1b8 'round' 'double (double)'
    |   | `-FloatingLiteral 0x562f072baba0 <col:27> 'double' 5.500000e+00
    |   `-FloatingLiteral 0x562f072bac00 <col:35> 'double' 6.000000e+00
    |-CallExpr 0x562f072bada8 <line:874:3, col:40> 'void'
    | |-ImplicitCastExpr 0x562f072bad90 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bac80 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bad70 <col:21, col:37> 'int' '=='
    |   |-CallExpr 0x562f072bad10 <col:21, col:31> 'double'
    |   | |-ImplicitCastExpr 0x562f072bacf8 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072baca0 <col:21> 'double (double)' Function 0x562f0727c1b8 'round' 'double (double)'
    |   | `-UnaryOperator 0x562f072bace0 <col:27, col:28> 'double' prefix '-'
    |   |   `-FloatingLiteral 0x562f072bacc0 <col:28> 'double' 2.300000e+00
    |   `-UnaryOperator 0x562f072bad58 <col:36, col:37> 'double' prefix '-'
    |     `-FloatingLiteral 0x562f072bad38 <col:37> 'double' 2.000000e+00
    |-CallExpr 0x562f072baef8 <line:875:3, col:40> 'void'
    | |-ImplicitCastExpr 0x562f072baee0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072badd0 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072baec0 <col:21, col:37> 'int' '=='
    |   |-CallExpr 0x562f072bae60 <col:21, col:31> 'double'
    |   | |-ImplicitCastExpr 0x562f072bae48 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072badf0 <col:21> 'double (double)' Function 0x562f0727c1b8 'round' 'double (double)'
    |   | `-UnaryOperator 0x562f072bae30 <col:27, col:28> 'double' prefix '-'
    |   |   `-FloatingLiteral 0x562f072bae10 <col:28> 'double' 3.800000e+00
    |   `-UnaryOperator 0x562f072baea8 <col:36, col:37> 'double' prefix '-'
    |     `-FloatingLiteral 0x562f072bae88 <col:37> 'double' 4.000000e+00
    |-CallExpr 0x562f072bb048 <line:876:3, col:40> 'void'
    | |-ImplicitCastExpr 0x562f072bb030 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072baf20 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bb010 <col:21, col:37> 'int' '=='
    |   |-CallExpr 0x562f072bafb0 <col:21, col:31> 'double'
    |   | |-ImplicitCastExpr 0x562f072baf98 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072baf40 <col:21> 'double (double)' Function 0x562f0727c1b8 'round' 'double (double)'
    |   | `-UnaryOperator 0x562f072baf80 <col:27, col:28> 'double' prefix '-'
    |   |   `-FloatingLiteral 0x562f072baf60 <col:28> 'double' 5.500000e+00
    |   `-UnaryOperator 0x562f072baff8 <col:36, col:37> 'double' prefix '-'
    |     `-FloatingLiteral 0x562f072bafd8 <col:37> 'double' 6.000000e+00
    |-CallExpr 0x562f072bb168 <line:878:3, col:38> 'void'
    | |-ImplicitCastExpr 0x562f072bb150 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bb070 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bb130 <col:21, col:35> 'int' '=='
    |   |-CallExpr 0x562f072bb0e8 <col:21, col:30> 'double'
    |   | |-ImplicitCastExpr 0x562f072bb0d0 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bb090 <col:21> 'double (double)' Function 0x562f07271f78 'floor' 'double (double)'
    |   | `-FloatingLiteral 0x562f072bb0b0 <col:27> 'double' 2.300000e+00
    |   `-FloatingLiteral 0x562f072bb110 <col:35> 'double' 2.000000e+00
    |-CallExpr 0x562f072bb288 <line:879:3, col:38> 'void'
    | |-ImplicitCastExpr 0x562f072bb270 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bb190 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bb250 <col:21, col:35> 'int' '=='
    |   |-CallExpr 0x562f072bb208 <col:21, col:30> 'double'
    |   | |-ImplicitCastExpr 0x562f072bb1f0 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bb1b0 <col:21> 'double (double)' Function 0x562f07271f78 'floor' 'double (double)'
    |   | `-FloatingLiteral 0x562f072bb1d0 <col:27> 'double' 3.800000e+00
    |   `-FloatingLiteral 0x562f072bb230 <col:35> 'double' 3.000000e+00
    |-CallExpr 0x562f072bb3c8 <line:880:3, col:38> 'void'
    | |-ImplicitCastExpr 0x562f072bb3b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bb2b0 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bb390 <col:21, col:35> 'int' '=='
    |   |-CallExpr 0x562f072bb348 <col:21, col:30> 'double'
    |   | |-ImplicitCastExpr 0x562f072bb330 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bb2d0 <col:21> 'double (double)' Function 0x562f07271f78 'floor' 'double (double)'
    |   | `-FloatingLiteral 0x562f072bb2f0 <col:27> 'double' 5.500000e+00
    |   `-FloatingLiteral 0x562f072bb370 <col:35> 'double' 5.000000e+00
    |-CallExpr 0x562f072bb518 <line:881:3, col:40> 'void'
    | |-ImplicitCastExpr 0x562f072bb500 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bb3f0 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bb4e0 <col:21, col:37> 'int' '=='
    |   |-CallExpr 0x562f072bb480 <col:21, col:31> 'double'
    |   | |-ImplicitCastExpr 0x562f072bb468 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bb410 <col:21> 'double (double)' Function 0x562f07271f78 'floor' 'double (double)'
    |   | `-UnaryOperator 0x562f072bb450 <col:27, col:28> 'double' prefix '-'
    |   |   `-FloatingLiteral 0x562f072bb430 <col:28> 'double' 2.300000e+00
    |   `-UnaryOperator 0x562f072bb4c8 <col:36, col:37> 'double' prefix '-'
    |     `-FloatingLiteral 0x562f072bb4a8 <col:37> 'double' 3.000000e+00
    |-CallExpr 0x562f072bb668 <line:882:3, col:40> 'void'
    | |-ImplicitCastExpr 0x562f072bb650 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bb540 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bb630 <col:21, col:37> 'int' '=='
    |   |-CallExpr 0x562f072bb5d0 <col:21, col:31> 'double'
    |   | |-ImplicitCastExpr 0x562f072bb5b8 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bb560 <col:21> 'double (double)' Function 0x562f07271f78 'floor' 'double (double)'
    |   | `-UnaryOperator 0x562f072bb5a0 <col:27, col:28> 'double' prefix '-'
    |   |   `-FloatingLiteral 0x562f072bb580 <col:28> 'double' 3.800000e+00
    |   `-UnaryOperator 0x562f072bb618 <col:36, col:37> 'double' prefix '-'
    |     `-FloatingLiteral 0x562f072bb5f8 <col:37> 'double' 4.000000e+00
    |-CallExpr 0x562f072bb7b8 <line:883:3, col:40> 'void'
    | |-ImplicitCastExpr 0x562f072bb7a0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bb690 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bb780 <col:21, col:37> 'int' '=='
    |   |-CallExpr 0x562f072bb720 <col:21, col:31> 'double'
    |   | |-ImplicitCastExpr 0x562f072bb708 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bb6b0 <col:21> 'double (double)' Function 0x562f07271f78 'floor' 'double (double)'
    |   | `-UnaryOperator 0x562f072bb6f0 <col:27, col:28> 'double' prefix '-'
    |   |   `-FloatingLiteral 0x562f072bb6d0 <col:28> 'double' 5.500000e+00
    |   `-UnaryOperator 0x562f072bb768 <col:36, col:37> 'double' prefix '-'
    |     `-FloatingLiteral 0x562f072bb748 <col:37> 'double' 6.000000e+00
    |-CallExpr 0x562f072bb8d8 <line:885:3, col:37> 'void'
    | |-ImplicitCastExpr 0x562f072bb8c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bb7e0 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bb8a0 <col:21, col:34> 'int' '=='
    |   |-CallExpr 0x562f072bb858 <col:21, col:29> 'double'
    |   | |-ImplicitCastExpr 0x562f072bb840 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bb800 <col:21> 'double (double)' Function 0x562f072714e8 'ceil' 'double (double)'
    |   | `-FloatingLiteral 0x562f072bb820 <col:26> 'double' 2.300000e+00
    |   `-FloatingLiteral 0x562f072bb880 <col:34> 'double' 3.000000e+00
    |-CallExpr 0x562f072bb9f8 <line:886:3, col:37> 'void'
    | |-ImplicitCastExpr 0x562f072bb9e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bb900 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bb9c0 <col:21, col:34> 'int' '=='
    |   |-CallExpr 0x562f072bb978 <col:21, col:29> 'double'
    |   | |-ImplicitCastExpr 0x562f072bb960 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bb920 <col:21> 'double (double)' Function 0x562f072714e8 'ceil' 'double (double)'
    |   | `-FloatingLiteral 0x562f072bb940 <col:26> 'double' 3.800000e+00
    |   `-FloatingLiteral 0x562f072bb9a0 <col:34> 'double' 4.000000e+00
    |-CallExpr 0x562f072bbb18 <line:887:3, col:37> 'void'
    | |-ImplicitCastExpr 0x562f072bbb00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bba20 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bbae0 <col:21, col:34> 'int' '=='
    |   |-CallExpr 0x562f072bba98 <col:21, col:29> 'double'
    |   | |-ImplicitCastExpr 0x562f072bba80 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bba40 <col:21> 'double (double)' Function 0x562f072714e8 'ceil' 'double (double)'
    |   | `-FloatingLiteral 0x562f072bba60 <col:26> 'double' 5.500000e+00
    |   `-FloatingLiteral 0x562f072bbac0 <col:34> 'double' 6.000000e+00
    |-CallExpr 0x562f072bbc68 <line:888:3, col:39> 'void'
    | |-ImplicitCastExpr 0x562f072bbc50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bbb40 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bbc30 <col:21, col:36> 'int' '=='
    |   |-CallExpr 0x562f072bbbd0 <col:21, col:30> 'double'
    |   | |-ImplicitCastExpr 0x562f072bbbb8 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bbb60 <col:21> 'double (double)' Function 0x562f072714e8 'ceil' 'double (double)'
    |   | `-UnaryOperator 0x562f072bbba0 <col:26, col:27> 'double' prefix '-'
    |   |   `-FloatingLiteral 0x562f072bbb80 <col:27> 'double' 2.300000e+00
    |   `-UnaryOperator 0x562f072bbc18 <col:35, col:36> 'double' prefix '-'
    |     `-FloatingLiteral 0x562f072bbbf8 <col:36> 'double' 2.000000e+00
    |-CallExpr 0x562f072bbdb8 <line:889:3, col:39> 'void'
    | |-ImplicitCastExpr 0x562f072bbda0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bbc90 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bbd80 <col:21, col:36> 'int' '=='
    |   |-CallExpr 0x562f072bbd20 <col:21, col:30> 'double'
    |   | |-ImplicitCastExpr 0x562f072bbd08 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bbcb0 <col:21> 'double (double)' Function 0x562f072714e8 'ceil' 'double (double)'
    |   | `-UnaryOperator 0x562f072bbcf0 <col:26, col:27> 'double' prefix '-'
    |   |   `-FloatingLiteral 0x562f072bbcd0 <col:27> 'double' 3.800000e+00
    |   `-UnaryOperator 0x562f072bbd68 <col:35, col:36> 'double' prefix '-'
    |     `-FloatingLiteral 0x562f072bbd48 <col:36> 'double' 3.000000e+00
    |-CallExpr 0x562f072bbf08 <line:890:3, col:39> 'void'
    | |-ImplicitCastExpr 0x562f072bbef0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bbde0 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bbed0 <col:21, col:36> 'int' '=='
    |   |-CallExpr 0x562f072bbe70 <col:21, col:30> 'double'
    |   | |-ImplicitCastExpr 0x562f072bbe58 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bbe00 <col:21> 'double (double)' Function 0x562f072714e8 'ceil' 'double (double)'
    |   | `-UnaryOperator 0x562f072bbe40 <col:26, col:27> 'double' prefix '-'
    |   |   `-FloatingLiteral 0x562f072bbe20 <col:27> 'double' 5.500000e+00
    |   `-UnaryOperator 0x562f072bbeb8 <col:35, col:36> 'double' prefix '-'
    |     `-FloatingLiteral 0x562f072bbe98 <col:36> 'double' 5.000000e+00
    |-CallExpr 0x562f072bc028 <line:892:3, col:38> 'void'
    | |-ImplicitCastExpr 0x562f072bc010 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bbf30 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bbff0 <col:21, col:35> 'int' '=='
    |   |-CallExpr 0x562f072bbfa8 <col:21, col:30> 'double'
    |   | |-ImplicitCastExpr 0x562f072bbf90 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bbf50 <col:21> 'double (double)' Function 0x562f0727c6f8 'trunc' 'double (double)'
    |   | `-FloatingLiteral 0x562f072bbf70 <col:27> 'double' 2.300000e+00
    |   `-FloatingLiteral 0x562f072bbfd0 <col:35> 'double' 2.000000e+00
    |-CallExpr 0x562f072bc148 <line:893:3, col:38> 'void'
    | |-ImplicitCastExpr 0x562f072bc130 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bc050 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bc110 <col:21, col:35> 'int' '=='
    |   |-CallExpr 0x562f072bc0c8 <col:21, col:30> 'double'
    |   | |-ImplicitCastExpr 0x562f072bc0b0 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bc070 <col:21> 'double (double)' Function 0x562f0727c6f8 'trunc' 'double (double)'
    |   | `-FloatingLiteral 0x562f072bc090 <col:27> 'double' 3.800000e+00
    |   `-FloatingLiteral 0x562f072bc0f0 <col:35> 'double' 3.000000e+00
    |-CallExpr 0x562f072bc268 <line:894:3, col:38> 'void'
    | |-ImplicitCastExpr 0x562f072bc250 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bc170 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bc230 <col:21, col:35> 'int' '=='
    |   |-CallExpr 0x562f072bc1e8 <col:21, col:30> 'double'
    |   | |-ImplicitCastExpr 0x562f072bc1d0 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bc190 <col:21> 'double (double)' Function 0x562f0727c6f8 'trunc' 'double (double)'
    |   | `-FloatingLiteral 0x562f072bc1b0 <col:27> 'double' 5.500000e+00
    |   `-FloatingLiteral 0x562f072bc210 <col:35> 'double' 5.000000e+00
    |-CallExpr 0x562f072bc3d8 <line:895:3, col:40> 'void'
    | |-ImplicitCastExpr 0x562f072bc3c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bc290 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bc3a0 <col:21, col:37> 'int' '=='
    |   |-CallExpr 0x562f072bc340 <col:21, col:31> 'double'
    |   | |-ImplicitCastExpr 0x562f072bc308 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bc2b0 <col:21> 'double (double)' Function 0x562f0727c6f8 'trunc' 'double (double)'
    |   | `-UnaryOperator 0x562f072bc2f0 <col:27, col:28> 'double' prefix '-'
    |   |   `-FloatingLiteral 0x562f072bc2d0 <col:28> 'double' 2.300000e+00
    |   `-UnaryOperator 0x562f072bc388 <col:36, col:37> 'double' prefix '-'
    |     `-FloatingLiteral 0x562f072bc368 <col:37> 'double' 2.000000e+00
    |-CallExpr 0x562f072bc528 <line:896:3, col:40> 'void'
    | |-ImplicitCastExpr 0x562f072bc510 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562f072bc400 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x562f072bc4f0 <col:21, col:37> 'int' '=='
    |   |-CallExpr 0x562f072bc490 <col:21, col:31> 'double'
    |   | |-ImplicitCastExpr 0x562f072bc478 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x562f072bc420 <col:21> 'double (double)' Function 0x562f0727c6f8 'trunc' 'double (double)'
    |   | `-UnaryOperator 0x562f072bc460 <col:27, col:28> 'double' prefix '-'
    |   |   `-FloatingLiteral 0x562f072bc440 <col:28> 'double' 3.800000e+00
    |   `-UnaryOperator 0x562f072bc4d8 <col:36, col:37> 'double' prefix '-'
    |     `-FloatingLiteral 0x562f072bc4b8 <col:37> 'double' 3.000000e+00
    `-CallExpr 0x562f072bc678 <line:897:3, col:40> 'void'
      |-ImplicitCastExpr 0x562f072bc660 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x562f072bc550 <col:3> 'void (int)' Function 0x562f072ba4a0 '__VERIFIER_assert' 'void (int)'
      `-BinaryOperator 0x562f072bc640 <col:21, col:37> 'int' '=='
        |-CallExpr 0x562f072bc5e0 <col:21, col:31> 'double'
        | |-ImplicitCastExpr 0x562f072bc5c8 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x562f072bc570 <col:21> 'double (double)' Function 0x562f0727c6f8 'trunc' 'double (double)'
        | `-UnaryOperator 0x562f072bc5b0 <col:27, col:28> 'double' prefix '-'
        |   `-FloatingLiteral 0x562f072bc590 <col:28> 'double' 5.500000e+00
        `-UnaryOperator 0x562f072bc628 <col:36, col:37> 'double' prefix '-'
          `-FloatingLiteral 0x562f072bc608 <col:37> 'double' 5.000000e+00
