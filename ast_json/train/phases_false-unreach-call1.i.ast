TranslationUnitDecl 0x561ad7db7f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561ad7db8848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561ad7db8520 '__int128'
|-TypedefDecl 0x561ad7db88b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561ad7db8540 'unsigned __int128'
|-TypedefDecl 0x561ad7db8bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561ad7db8990 'struct __NSConstantString_tag'
|   `-Record 0x561ad7db8910 '__NSConstantString_tag'
|-TypedefDecl 0x561ad7db8c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561ad7db8c20 'char *'
|   `-BuiltinType 0x561ad7db8020 'char'
|-TypedefDecl 0x561ad7df7d10 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561ad7db8f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561ad7db8d40 'struct __va_list_tag'
|     `-Record 0x561ad7db8cc0 '__va_list_tag'
|-FunctionDecl 0x561ad7df7df0 <loop-acceleration/phases_false-unreach-call1.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x561ad7df7fc0 <line:2:1, line:7:1> line:2:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x561ad7df7ef0 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x561ad7df8210 <col:34, line:7:1>
|   |-IfStmt 0x561ad7df81e8 <line:3:3, line:5:3>
|   | |-UnaryOperator 0x561ad7df80c0 <line:3:7, col:13> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x561ad7df80a8 <col:8, col:13> 'int' <LValueToRValue>
|   | |   `-ParenExpr 0x561ad7df8088 <col:8, col:13> 'int' lvalue
|   | |     `-DeclRefExpr 0x561ad7df8068 <col:9> 'int' lvalue ParmVar 0x561ad7df7ef0 'cond' 'int'
|   | `-CompoundStmt 0x561ad7df81d0 <col:16, line:5:3>
|   |   `-LabelStmt 0x561ad7df81b8 <line:4:5, col:29> 'ERROR'
|   |     `-CallExpr 0x561ad7df8148 <col:12, col:29> 'void'
|   |       `-ImplicitCastExpr 0x561ad7df8130 <col:12> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x561ad7df80d8 <col:12> 'void () __attribute__((noreturn))' Function 0x561ad7df7df0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   `-ReturnStmt 0x561ad7df8200 <line:6:3>
`-FunctionDecl 0x561ad7df8308 <line:8:1, line:18:1> line:8:5 main 'int (void)'
  `-CompoundStmt 0x561ad7df8870 <col:16, line:18:1>
    |-DeclStmt 0x561ad7df8498 <line:9:3, col:21>
    | `-VarDecl 0x561ad7df83f8 <col:3, col:20> col:16 used x 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x561ad7df8480 <col:20> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x561ad7df8460 <col:20> 'int' 0
    |-WhileStmt 0x561ad7df8700 <line:10:3, line:16:3>
    | |-BinaryOperator 0x561ad7df8520 <line:10:10, col:14> 'int' '<'
    | | |-ImplicitCastExpr 0x561ad7df84f0 <col:10> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x561ad7df84b0 <col:10> 'unsigned int' lvalue Var 0x561ad7df83f8 'x' 'unsigned int'
    | | `-ImplicitCastExpr 0x561ad7df8508 <col:14> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x561ad7df84d0 <col:14> 'int' 268435455
    | `-CompoundStmt 0x561ad7df86e8 <col:26, line:16:3>
    |   `-IfStmt 0x561ad7df86c0 <line:11:5, line:15:5> has_else
    |     |-BinaryOperator 0x561ad7df85b0 <line:11:9, col:13> 'int' '<'
    |     | |-ImplicitCastExpr 0x561ad7df8580 <col:9> 'unsigned int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x561ad7df8540 <col:9> 'unsigned int' lvalue Var 0x561ad7df83f8 'x' 'unsigned int'
    |     | `-ImplicitCastExpr 0x561ad7df8598 <col:13> 'unsigned int' <IntegralCast>
    |     |   `-IntegerLiteral 0x561ad7df8560 <col:13> 'int' 65521
    |     |-CompoundStmt 0x561ad7df8608 <col:21, line:13:5>
    |     | `-UnaryOperator 0x561ad7df85f0 <line:12:7, col:8> 'unsigned int' postfix '++'
    |     |   `-DeclRefExpr 0x561ad7df85d0 <col:7> 'unsigned int' lvalue Var 0x561ad7df83f8 'x' 'unsigned int'
    |     `-CompoundStmt 0x561ad7df86a8 <line:13:12, line:15:5>
    |       `-CompoundAssignOperator 0x561ad7df8678 <line:14:7, col:12> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |         |-DeclRefExpr 0x561ad7df8620 <col:7> 'unsigned int' lvalue Var 0x561ad7df83f8 'x' 'unsigned int'
    |         `-ImplicitCastExpr 0x561ad7df8660 <col:12> 'unsigned int' <IntegralCast>
    |           `-IntegerLiteral 0x561ad7df8640 <col:12> 'int' 2
    `-CallExpr 0x561ad7df8848 <line:17:3, col:29> 'void'
      |-ImplicitCastExpr 0x561ad7df8830 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x561ad7df8718 <col:3> 'void (int)' Function 0x561ad7df7fc0 '__VERIFIER_assert' 'void (int)'
      `-UnaryOperator 0x561ad7df87e8 <col:21, col:28> 'int' prefix '!' cannot overflow
        `-ParenExpr 0x561ad7df87c8 <col:22, col:28> 'unsigned int'
          `-BinaryOperator 0x561ad7df87a8 <col:23, col:27> 'unsigned int' '%'
            |-ImplicitCastExpr 0x561ad7df8778 <col:23> 'unsigned int' <LValueToRValue>
            | `-DeclRefExpr 0x561ad7df8738 <col:23> 'unsigned int' lvalue Var 0x561ad7df83f8 'x' 'unsigned int'
            `-ImplicitCastExpr 0x561ad7df8790 <col:27> 'unsigned int' <IntegralCast>
              `-IntegerLiteral 0x561ad7df8758 <col:27> 'int' 2
