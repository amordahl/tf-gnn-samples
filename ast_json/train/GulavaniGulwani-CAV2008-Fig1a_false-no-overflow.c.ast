TranslationUnitDecl 0x55763fd2b698 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55763fd2bf58 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55763fd2bc30 '__int128'
|-TypedefDecl 0x55763fd2bfc8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55763fd2bc50 'unsigned __int128'
|-TypedefDecl 0x55763fd2c2d0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55763fd2c0a0 'struct __NSConstantString_tag'
|   `-Record 0x55763fd2c020 '__NSConstantString_tag'
|-TypedefDecl 0x55763fd2c378 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55763fd2c330 'char *'
|   `-BuiltinType 0x55763fd2b730 'char'
|-TypedefDecl 0x55763fd6b5e0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55763fd2c610 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55763fd2c450 'struct __va_list_tag'
|     `-Record 0x55763fd2c3d0 '__va_list_tag'
|-EnumDecl 0x55763fd6b638 <termination-crafted-lit/GulavaniGulwani-CAV2008-Fig1a_false-no-overflow.c:9:9, col:26> col:9
| |-EnumConstantDecl 0x55763fd6b708 <col:15> col:15 false 'int'
| `-EnumConstantDecl 0x55763fd6b758 <col:22> col:22 true 'int'
|-TypedefDecl 0x55763fd6b810 <col:1, col:28> col:28 bool 'enum bool':'bool'
| `-ElaboratedType 0x55763fd6b7b0 'enum bool' sugar
|   `-EnumType 0x55763fd6b6e0 'bool'
|     `-Enum 0x55763fd6b638 ''
|-FunctionDecl 0x55763fd6b958 <line:11:1, col:38> col:12 used __VERIFIER_nondet_int 'int (void)' extern
`-FunctionDecl 0x55763fd6ba98 <line:13:1, line:28:1> line:13:5 main 'int ()'
  `-CompoundStmt 0x55763fd6c418 <col:12, line:28:1>
    |-DeclStmt 0x55763fd6bd60 <line:14:5, col:19>
    | |-VarDecl 0x55763fd6bb50 <col:5, col:9> col:9 used x 'int'
    | |-VarDecl 0x55763fd6bbd0 <col:5, col:12> col:12 used y 'int'
    | |-VarDecl 0x55763fd6bc50 <col:5, col:15> col:15 used z 'int'
    | `-VarDecl 0x55763fd6bcd0 <col:5, col:18> col:18 used i 'int'
    |-BinaryOperator 0x55763fd6be28 <line:15:2, col:28> 'int' '='
    | |-DeclRefExpr 0x55763fd6bd78 <col:2> 'int' lvalue Var 0x55763fd6bb50 'x' 'int'
    | `-CallExpr 0x55763fd6be08 <col:6, col:28> 'int'
    |   `-ImplicitCastExpr 0x55763fd6bdf0 <col:6> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55763fd6bd98 <col:6> 'int (void)' Function 0x55763fd6b958 '__VERIFIER_nondet_int' 'int (void)'
    |-BinaryOperator 0x55763fd6bec0 <line:16:2, col:28> 'int' '='
    | |-DeclRefExpr 0x55763fd6be48 <col:2> 'int' lvalue Var 0x55763fd6bbd0 'y' 'int'
    | `-CallExpr 0x55763fd6bea0 <col:6, col:28> 'int'
    |   `-ImplicitCastExpr 0x55763fd6be88 <col:6> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55763fd6be68 <col:6> 'int (void)' Function 0x55763fd6b958 '__VERIFIER_nondet_int' 'int (void)'
    |-BinaryOperator 0x55763fd6bf58 <line:17:2, col:28> 'int' '='
    | |-DeclRefExpr 0x55763fd6bee0 <col:2> 'int' lvalue Var 0x55763fd6bc50 'z' 'int'
    | `-CallExpr 0x55763fd6bf38 <col:6, col:28> 'int'
    |   `-ImplicitCastExpr 0x55763fd6bf20 <col:6> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55763fd6bf00 <col:6> 'int (void)' Function 0x55763fd6b958 '__VERIFIER_nondet_int' 'int (void)'
    |-BinaryOperator 0x55763fd6bff0 <line:18:2, col:28> 'int' '='
    | |-DeclRefExpr 0x55763fd6bf78 <col:2> 'int' lvalue Var 0x55763fd6bcd0 'i' 'int'
    | `-CallExpr 0x55763fd6bfd0 <col:6, col:28> 'int'
    |   `-ImplicitCastExpr 0x55763fd6bfb8 <col:6> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55763fd6bf98 <col:6> 'int (void)' Function 0x55763fd6b958 '__VERIFIER_nondet_int' 'int (void)'
    |-WhileStmt 0x55763fd6c3d0 <line:19:2, line:26:2>
    | |-BinaryOperator 0x55763fd6c080 <line:19:9, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x55763fd6c050 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x55763fd6c010 <col:9> 'int' lvalue Var 0x55763fd6bb50 'x' 'int'
    | | `-ImplicitCastExpr 0x55763fd6c068 <col:13> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x55763fd6c030 <col:13> 'int' lvalue Var 0x55763fd6bbd0 'y' 'int'
    | `-CompoundStmt 0x55763fd6c3b0 <col:16, line:26:2>
    |   |-BinaryOperator 0x55763fd6c138 <line:20:3, col:11> 'int' '='
    |   | |-DeclRefExpr 0x55763fd6c0a0 <col:3> 'int' lvalue Var 0x55763fd6bcd0 'i' 'int'
    |   | `-BinaryOperator 0x55763fd6c118 <col:7, col:11> 'int' '+'
    |   |   |-ImplicitCastExpr 0x55763fd6c100 <col:7> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x55763fd6c0c0 <col:7> 'int' lvalue Var 0x55763fd6bcd0 'i' 'int'
    |   |   `-IntegerLiteral 0x55763fd6c0e0 <col:11> 'int' 1
    |   `-IfStmt 0x55763fd6c388 <line:21:3, line:25:3> has_else
    |     |-BinaryOperator 0x55763fd6c1c8 <line:21:7, col:11> 'int' '>'
    |     | |-ImplicitCastExpr 0x55763fd6c198 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x55763fd6c158 <col:7> 'int' lvalue Var 0x55763fd6bc50 'z' 'int'
    |     | `-ImplicitCastExpr 0x55763fd6c1b0 <col:11> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55763fd6c178 <col:11> 'int' lvalue Var 0x55763fd6bb50 'x' 'int'
    |     |-CompoundStmt 0x55763fd6c2a0 <col:14, line:23:3>
    |     | `-BinaryOperator 0x55763fd6c280 <line:22:4, col:12> 'int' '='
    |     |   |-DeclRefExpr 0x55763fd6c1e8 <col:4> 'int' lvalue Var 0x55763fd6bb50 'x' 'int'
    |     |   `-BinaryOperator 0x55763fd6c260 <col:8, col:12> 'int' '+'
    |     |     |-ImplicitCastExpr 0x55763fd6c248 <col:8> 'int' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x55763fd6c208 <col:8> 'int' lvalue Var 0x55763fd6bb50 'x' 'int'
    |     |     `-IntegerLiteral 0x55763fd6c228 <col:12> 'int' 1
    |     `-CompoundStmt 0x55763fd6c370 <line:23:10, line:25:3>
    |       `-BinaryOperator 0x55763fd6c350 <line:24:4, col:12> 'int' '='
    |         |-DeclRefExpr 0x55763fd6c2b8 <col:4> 'int' lvalue Var 0x55763fd6bc50 'z' 'int'
    |         `-BinaryOperator 0x55763fd6c330 <col:8, col:12> 'int' '+'
    |           |-ImplicitCastExpr 0x55763fd6c318 <col:8> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55763fd6c2d8 <col:8> 'int' lvalue Var 0x55763fd6bc50 'z' 'int'
    |           `-IntegerLiteral 0x55763fd6c2f8 <col:12> 'int' 1
    `-ReturnStmt 0x55763fd6c408 <line:27:2, col:9>
      `-IntegerLiteral 0x55763fd6c3e8 <col:9> 'int' 0
