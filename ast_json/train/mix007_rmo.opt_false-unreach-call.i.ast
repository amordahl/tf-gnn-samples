TranslationUnitDecl 0x560781ca5f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x560781ca6848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x560781ca6520 '__int128'
|-TypedefDecl 0x560781ca68b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x560781ca6540 'unsigned __int128'
|-TypedefDecl 0x560781ca6bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x560781ca6990 'struct __NSConstantString_tag'
|   `-Record 0x560781ca6910 '__NSConstantString_tag'
|-TypedefDecl 0x560781ca6c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x560781ca6c20 'char *'
|   `-BuiltinType 0x560781ca6020 'char'
|-TypedefDecl 0x560781ce5b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x560781ca6f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x560781ca6d40 'struct __va_list_tag'
|     `-Record 0x560781ca6cc0 '__va_list_tag'
|-FunctionDecl 0x560781ce5ca0 <pthread-wmm/mix007_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x560781ce5bd0 <col:31> col:34 'int'
|-FunctionDecl 0x560781ce5e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x560781ce5f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x560781ce60d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x560781ce6048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x560781ce6308 <col:40, col:99>
|   |-IfStmt 0x560781ce62d8 <col:42, col:88>
|   | |-UnaryOperator 0x560781ce61b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x560781ce61a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x560781ce6180 <col:47> 'int' lvalue ParmVar 0x560781ce6048 'expression' 'int'
|   | `-CompoundStmt 0x560781ce62c0 <col:59, col:88>
|   |   `-LabelStmt 0x560781ce62a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x560781ce6238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x560781ce6220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x560781ce61d0 <col:68> 'void () __attribute__((noreturn))' Function 0x560781ce5f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x560781ce62f0 <col:89>
|   `-ReturnStmt 0x560781ce62f8 <col:91>
|-FunctionDecl 0x560781ce6350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x560781ce6410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x560781ce6790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560781ce64c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x560781ce6548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x560781ce65c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560781ce6648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560781ce6850 <line:10:22>
|-FunctionDecl 0x560781d0c8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560781ce68c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x560781ce6940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x560781ce69c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560781ce6a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560781d0c960 <line:13:22>
|-FunctionDecl 0x560781d0cc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560781d0c9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x560781d0ca50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x560781d0cad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x560781d0ccc8 <line:15:22>
|-TypedefDecl 0x560781d0cd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x560781ca60e0 'unsigned char'
|-TypedefDecl 0x560781d0cda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x560781ca6100 'unsigned short'
|-TypedefDecl 0x560781d0ce18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x560781ca6120 'unsigned int'
|-TypedefDecl 0x560781d0ce88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-TypedefDecl 0x560781d0cef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x560781ca6040 'signed char'
|-TypedefDecl 0x560781d0cf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x560781ca60e0 'unsigned char'
|-TypedefDecl 0x560781d0cfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x560781ca6060 'short'
|-TypedefDecl 0x560781d0d048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x560781ca6100 'unsigned short'
|-TypedefDecl 0x560781d0d0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x560781ca6080 'int'
|-TypedefDecl 0x560781d0d128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x560781ca6120 'unsigned int'
|-TypedefDecl 0x560781d0d198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d0d208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-TypedefDecl 0x560781d0d278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d0d2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-TypedefDecl 0x560781d0d358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-TypedefDecl 0x560781d0d3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x560781ca6120 'unsigned int'
|-TypedefDecl 0x560781d0d438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x560781ca6120 'unsigned int'
|-TypedefDecl 0x560781d0d4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-TypedefDecl 0x560781d0d518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-TypedefDecl 0x560781d0d588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x560781ca6120 'unsigned int'
|-TypedefDecl 0x560781d0d5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-TypedefDecl 0x560781d0d668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d0d6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d0d748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x560781ca6080 'int'
|-RecordDecl 0x560781d0d7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x560781d0d918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x560781d0d9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x560781d0d970 'struct __fsid_t' sugar
|   `-RecordType 0x560781d0d820 '__fsid_t'
|     `-Record 0x560781d0d7a0 ''
|-TypedefDecl 0x560781d0da58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d0dac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-TypedefDecl 0x560781d0db38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-TypedefDecl 0x560781d0dba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x560781ca6120 'unsigned int'
|-TypedefDecl 0x560781d0dc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d0dc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x560781ca6120 'unsigned int'
|-TypedefDecl 0x560781d0dcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d0dd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x560781ca6080 'int'
|-TypedefDecl 0x560781d0ddd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x560781ca6080 'int'
|-TypedefDecl 0x560781d0de48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x560781ca6080 'int'
|-TypedefDecl 0x560781d0deb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x560781ca67a0 'void *'
|   `-BuiltinType 0x560781ca5fe0 'void'
|-TypedefDecl 0x560781d0df28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d0df98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d0e008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d0e078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-TypedefDecl 0x560781d0e0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-TypedefDecl 0x560781d0e158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-TypedefDecl 0x560781d0e1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-TypedefDecl 0x560781d0e238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d0e2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d0e318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d0e388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-TypedefDecl 0x560781d0e418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x560781d0e3e0 '__off64_t' sugar
|   |-Typedef 0x560781d0d6d8 '__off64_t'
|   `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d0e510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x560781d0e4d0 '__quad_t *'
|   `-TypedefType 0x560781d0e470 '__quad_t' sugar
|     |-Typedef 0x560781d0d278 '__quad_t'
|     `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d0e580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x560781ca6c20 'char *'
|   `-BuiltinType 0x560781ca6020 'char'
|-TypedefDecl 0x560781d0e5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d0e660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x560781ca6120 'unsigned int'
|-FunctionDecl 0x560781d0e7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x560781d0e6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x560781d0eae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x560781d0ead8 <line:72:3, col:34>
|     `-CallExpr 0x560781d0ea98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x560781d0ea80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560781d0ea10 <col:10> '<builtin fn type>' Function 0x560781d0e880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x560781d0eac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560781d0ea30 <col:29> 'unsigned int' lvalue ParmVar 0x560781d0e6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x560781d0e880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x560781d0e920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x560781d0e990 <col:10> Implicit
| `-ConstAttr 0x560781d0e9e8 <col:10> Implicit
|-FunctionDecl 0x560781d0ec40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x560781d0eb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x560781d0ef58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x560781d0ef48 <line:77:3, col:34>
|     `-CallExpr 0x560781d0ef08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x560781d0eef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560781d0ee78 <col:10> '<builtin fn type>' Function 0x560781d0ece8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x560781d0ef30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x560781d0ee98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x560781d0eb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x560781d0ece8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x560781d0ed88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x560781d0edf8 <col:10> Implicit
| `-ConstAttr 0x560781d0ee50 <col:10> Implicit
|-TypedefDecl 0x560781d0ef88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-TypedefDecl 0x560781d0f018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x560781d0efe0 '__time_t' sugar
|   |-Typedef 0x560781d0dc18 '__time_t'
|   `-BuiltinType 0x560781ca60a0 'long'
|-RecordDecl 0x560781d0f070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x560781d0f128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x560781d0f1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x560781d0f248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x560781d0f210 '__pid_t' sugar
|   |-Typedef 0x560781d0d748 '__pid_t'
|   `-BuiltinType 0x560781ca6080 'int'
|-RecordDecl 0x560781d0f2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x560781d0f360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x560781d0f3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x560781d0f470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x560781d0f4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-RecordDecl 0x560781d0f530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x560781d0f7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x560781d118b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x560781d0f810 'struct cpu_set_t' sugar
|   `-RecordType 0x560781d0f5b0 'cpu_set_t'
|     `-Record 0x560781d0f530 ''
|-FunctionDecl 0x560781d11b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x560781d11958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560781d11a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x560781d11c38 <line:107:19>
|-FunctionDecl 0x560781d11e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x560781d11ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x560781d11eb8 <col:69>
|-FunctionDecl 0x560781d12030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x560781d11f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x560781d120d8 <col:64>
|-FunctionDecl 0x560781d12398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x560781d12140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560781d12278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560781d12448 <line:113:22>
|-FunctionDecl 0x560781d126c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x560781d124b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560781d125a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x560781d12778 <col:88>
|-FunctionDecl 0x560781d12a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560781d127e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560781d128c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x560781d12950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560781d12b50 <col:62>
|-FunctionDecl 0x560781d12cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x560781d12bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x560781d12d70 <col:63>
|-FunctionDecl 0x560781d12e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x560781d12f38 <col:47>
|-FunctionDecl 0x560781d13040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x560781d12fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560781d130e8 <col:69>
|-FunctionDecl 0x560781d131f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x560781d13158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560781d13298 <col:69>
|-FunctionDecl 0x560781d13558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560781d13300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560781d13438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x560781d13608 <col:88>
|-TypedefDecl 0x560781d13698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560781d13660 '__clock_t' sugar
|   |-Typedef 0x560781d0da58 '__clock_t'
|   `-BuiltinType 0x560781ca60a0 'long'
|-TypedefDecl 0x560781d13728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x560781d136f0 '__clockid_t' sugar
|   |-Typedef 0x560781d0de48 '__clockid_t'
|   `-BuiltinType 0x560781ca6080 'int'
|-TypedefDecl 0x560781d137b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560781d13780 '__timer_t' sugar
|   |-Typedef 0x560781d0deb8 '__timer_t'
|   `-PointerType 0x560781ca67a0 'void *'
|     `-BuiltinType 0x560781ca5fe0 'void'
|-RecordDecl 0x560781d13810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x560781d138e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x560781d13950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x560781d139b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560781d13a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560781d13a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x560781d13af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560781d13b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x560781d13bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560781d13c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560781d13c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x560781d13cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560781d13d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x560781d13e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560781d13e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560781d13f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x560781d14100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560781d141a0 <col:45>
|-FunctionDecl 0x560781d14380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560781d14270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x560781d14428 <col:54>
|-FunctionDecl 0x560781d14628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560781d14490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x560781d14508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x560781d146d8 <line:157:22>
| `-ConstAttr 0x560781d14730 <col:63>
|-FunctionDecl 0x560781d15560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560781d14828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560781d15608 <col:56>
|-FunctionDecl 0x560781d159b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560781d15678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x560781d156f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560781d15770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560781d15868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560781d15a70 <col:54>
|-RecordDecl 0x560781d15ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x560781d15b78 parent 0x560781ca5f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x560781d15dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560781d15e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x560781d15ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560781d15f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x560781d16038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x560781d16158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x560781d16100 'struct __locale_struct *'
|   `-ElaboratedType 0x560781d16090 'struct __locale_struct' sugar
|     `-RecordType 0x560781d15b50 'struct __locale_struct'
|       `-Record 0x560781d15ac8 '__locale_struct'
|-TypedefDecl 0x560781d16208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x560781d161d0 '__locale_t' sugar
|   |-Typedef 0x560781d16158 '__locale_t'
|   `-PointerType 0x560781d16100 'struct __locale_struct *'
|     `-ElaboratedType 0x560781d16090 'struct __locale_struct' sugar
|       `-RecordType 0x560781d15b50 'struct __locale_struct'
|         `-Record 0x560781d15ac8 '__locale_struct'
|-FunctionDecl 0x560781d16610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x560781d16278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x560781d162f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560781d16370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x560781d16400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560781d16478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x560781d166d8 <col:40>
|-FunctionDecl 0x560781d168c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560781d167a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x560781d16970 <col:66>
|-FunctionDecl 0x560781d16a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560781d169d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x560781d16b28 <col:69>
|-FunctionDecl 0x560781d16d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560781d16b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560781d16c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560781d16e08 <col:52>
|-FunctionDecl 0x560781d16fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560781d16e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560781d16f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560781d17060 <col:55>
|-FunctionDecl 0x560781d171f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x560781d170e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x560781d172a0 <col:62>
|-FunctionDecl 0x560781d17418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x560781d17308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x560781d174c0 <col:60>
|-FunctionDecl 0x560781d17718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560781d17578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560781d175f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x560781d177c8 <col:44>
|-FunctionDecl 0x560781d179d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560781d17830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560781d178b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x560781d17a88 <col:49>
|-VarDecl 0x560781d17b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x560781d17c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x560781d17c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x560781d17d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x560781d17e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x560781d17f20 <col:42>
|-VarDecl 0x560781d17f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x560781d18010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x560781d18198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x560781d18088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x560781d18240 <col:57>
|-FunctionDecl 0x560781d18350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560781d182c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560781d183f8 <col:56>
|-FunctionDecl 0x560781d19540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560781d18478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x560781d195e8 <col:59>
|-FunctionDecl 0x560781d196f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x560781d19658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x560781d19798 <col:48>
| `-ConstAttr 0x560781d197f0 <col:89>
|-FunctionDecl 0x560781d19a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560781d198a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x560781d19938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x560781d19cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560781d19b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560781d19bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x560781d19d68 <col:88>
|-FunctionDecl 0x560781d19f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560781d19dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560781d19e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x560781d19fb0 <col:88>
|-FunctionDecl 0x560781d1a1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x560781d1a018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560781d1a0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x560781d1a278 <line:208:22>
|-FunctionDecl 0x560781d1a5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560781d1a2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560781d1a360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x560781d1a3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x560781d1a480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x560781d1a8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x560781d1a6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x560781d1a7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x560781d1a998 <col:85>
|-FunctionDecl 0x560781d1ad88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x560781d1aa00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560781d1ab38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x560781d1ac40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x560781d1ae40 <col:52>
|-FunctionDecl 0x560781d1afb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x560781d1aea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560781d1b060 <col:61>
|-FunctionDecl 0x560781d1b560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x560781d1b0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560781d1b148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x560781d1b278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x560781d1b368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x560781d1b620 <col:62>
|-FunctionDecl 0x560781d1b838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x560781d1b688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560781d1b718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x560781d1b8e8 <line:221:22>
|-FunctionDecl 0x560781d1b9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x560781d1b950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560781d1ba90 <col:65>
|-TypedefDecl 0x560781d1bb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x560781ca6140 'unsigned long'
|-RecordDecl 0x560781d1bb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x560781d1bca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560781d1bd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560781d1bdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x560781d1bd60 'union pthread_attr_t' sugar
|   `-RecordType 0x560781d1bbe0 'union pthread_attr_t'
|     `-Record 0x560781d1bb58 'pthread_attr_t'
|-RecordDecl 0x560781d1be10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560781d1bf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560781d1c000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x560781d1c0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560781d1c050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x560781d1be90 'struct __pthread_internal_list'
|     `-Record 0x560781d1be10 '__pthread_internal_list'
|-RecordDecl 0x560781d1c120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x560781d1c1c8 parent 0x560781ca5f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x560781d1c2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560781d1c308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560781d1c370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560781d1c3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560781d1c440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560781d1c4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x560781d20580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x560781d20630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x560781d20720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x560781d20788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560781d20910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x560781d208b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x560781d1c1a0 'pthread_mutex_t'
|     `-Record 0x560781d1c120 ''
|-RecordDecl 0x560781d20980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x560781d20ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560781d20b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560781d20be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x560781d20b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x560781d20a00 'pthread_mutexattr_t'
|     `-Record 0x560781d20980 ''
|-RecordDecl 0x560781d20c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x560781d20cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x560781d20dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560781d20e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x560781d20e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x560781d20ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x560781d20f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x560781d20fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x560781d21030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x560781d21098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x560781d21150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix007_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix007_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x560781d21240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x560781d212a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x560781d213e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x560781d21380 'union pthread_cond_t' sugar
|   `-RecordType 0x560781d20cd0 'pthread_cond_t'
|     `-Record 0x560781d20c50 ''
|-RecordDecl 0x560781d21450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x560781d21590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560781d215f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560781d216b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x560781d21650 'union pthread_condattr_t' sugar
|   `-RecordType 0x560781d214d0 'pthread_condattr_t'
|     `-Record 0x560781d21450 ''
|-TypedefDecl 0x560781d21738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x560781ca6120 'unsigned int'
|-TypedefDecl 0x560781d217a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x560781ca6080 'int'
|-RecordDecl 0x560781d21800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x560781d218a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x560781d21970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560781d219d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x560781d21a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x560781d21aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x560781d21b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x560781d21b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x560781d21be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x560781d21c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x560781d21cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x560781d21d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x560781d21d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x560781d21e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix007_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix007_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x560781d21ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560781d21f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560781d22090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x560781d22030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x560781d21880 'pthread_rwlock_t'
|     `-Record 0x560781d21800 ''
|-RecordDecl 0x560781d22100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x560781d22240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x560781d222a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560781d22360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x560781d22300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x560781d22180 'pthread_rwlockattr_t'
|     `-Record 0x560781d22100 ''
|-TypedefDecl 0x560781d223e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x560781ca6084 'volatile int' volatile
|   `-BuiltinType 0x560781ca6080 'int'
|-RecordDecl 0x560781d22440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x560781d245b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x560781d24618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560781d246d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x560781d24670 'union pthread_barrier_t' sugar
|   `-RecordType 0x560781d224c0 'pthread_barrier_t'
|     `-Record 0x560781d22440 ''
|-RecordDecl 0x560781d24740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x560781d24840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560781d248a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560781d24960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560781d24900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560781d247c0 'pthread_barrierattr_t'
|     `-Record 0x560781d24740 ''
|-TypedefDecl 0x560781d24a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x560781d24a10 'long [8]' 8 
|   `-BuiltinType 0x560781ca60a0 'long'
|-EnumDecl 0x560781d24ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x560781d24b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560781d24be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x560781d24c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x560781d24d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x560781d24d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560781d24da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560781d24df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560781d24e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x560781d24e68 <col:26> 'int'
| |   `-DeclRefExpr 0x560781d24e48 <col:26> 'int' EnumConstant 0x560781d24d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560781d24f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560781d24ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x560781d24ed0 <col:29> 'int' EnumConstant 0x560781d24d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x560781d24f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x560781d24f78 <col:30> 'int'
| |   `-DeclRefExpr 0x560781d24f58 <col:30> 'int' EnumConstant 0x560781d24da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560781d25018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560781d25000 <col:27> 'int'
|     `-DeclRefExpr 0x560781d24fe0 <col:27> 'int' EnumConstant 0x560781d24e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x560781d25068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x560781d25138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560781d251c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x560781d251a8 <col:30> 'int'
| |   `-DeclRefExpr 0x560781d25188 <col:30> 'int' EnumConstant 0x560781d25138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560781d25210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x560781d25298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x560781d25280 <col:29> 'int'
|     `-DeclRefExpr 0x560781d25260 <col:29> 'int' EnumConstant 0x560781d25210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560781d252e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x560781d253b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560781d25408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x560781d25458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560781d254a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x560781d255c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x560781d25610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x560781d25660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560781d256e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x560781d256d0 <col:31> 'int'
|     `-DeclRefExpr 0x560781d256b0 <col:31> 'int' EnumConstant 0x560781d255c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x560781d25738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x560781d25808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x560781d25858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x560781d258a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x560781d25978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560781d259c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x560781d25a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x560781d25ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x560781d25b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560781d25b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560781d25dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x560781d25e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560781d25e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x560781d25fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x560781d26008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x560781d260d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x560781d26128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x560781d26178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x560781d26248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x560781d26298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x560781d268f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x560781d26390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x560781d264a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560781d266e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x560781d26760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x560781d269b8 <col:47>
| |-NonNullAttr 0x560781d26a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x560781d26a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x560781d26b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x560781d26aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x560781d26dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x560781d26c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x560781d26ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x560781d26f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x560781d26e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x560781d27040 <col:60>
|-FunctionDecl 0x560781d27190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x560781d27230 <col:54>
| `-ConstAttr 0x560781d27288 <col:95>
|-FunctionDecl 0x560781d27458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x560781d272c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560781d27338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x560781d27508 <line:394:19>
| `-ConstAttr 0x560781d27560 <col:60>
|-FunctionDecl 0x560781d27f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560781d27e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560781d28010 <col:71>
| `-NonNullAttr 0x560781d28068 <col:112, col:126> 1
|-FunctionDecl 0x560781d28170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560781d280b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560781d28218 <line:397:22>
| `-NonNullAttr 0x560781d28270 <col:63, col:77> 1
|-FunctionDecl 0x560781d28498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x560781d282b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560781d28338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x560781d28548 <line:400:22>
| `-NonNullAttr 0x560781d285a0 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d287a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560781d285e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560781d28668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x560781d28858 <line:403:22>
| `-NonNullAttr 0x560781d288b0 <col:63, col:77> 1
|-FunctionDecl 0x560781d28b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x560781d288f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560781d289a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x560781d28bb8 <line:406:22>
| `-NonNullAttr 0x560781d28c10 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d29e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560781d28c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560781d28cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560781d29ef8 <line:409:22>
| `-NonNullAttr 0x560781d29f50 <col:63, col:77> 1
|-FunctionDecl 0x560781d2a188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560781d29f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560781d2a028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560781d2a238 <line:412:22>
| `-NonNullAttr 0x560781d2a290 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d2a4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560781d2a2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x560781d2a368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x560781d2a578 <col:37>
| `-NonNullAttr 0x560781d2a5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x560781d2a7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560781d2a618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560781d2a698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x560781d2a868 <line:418:22>
| `-NonNullAttr 0x560781d2a8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d2aa48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560781d2a908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560781d2a988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x560781d2aaf8 <line:420:22>
| `-NonNullAttr 0x560781d2ab50 <col:63, col:77> 1
|-FunctionDecl 0x560781d2acf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560781d2ab98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560781d2ac18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x560781d2ada8 <line:423:22>
| `-NonNullAttr 0x560781d2be30 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d2bfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560781d2be78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560781d2bef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560781d2c068 <line:426:22>
| `-NonNullAttr 0x560781d2c0c0 <col:63, col:77> 1
|-FunctionDecl 0x560781d2c268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560781d2c108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560781d2c188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560781d2c318 <line:429:22>
| `-NonNullAttr 0x560781d2c370 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d2c4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560781d2c3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560781d2c438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x560781d2c5a8 <line:431:22>
| `-NonNullAttr 0x560781d2c600 <col:63, col:77> 1
|-FunctionDecl 0x560781d2c828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x560781d2c648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560781d2c6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560781d2c8d8 <line:434:22>
| |-NonNullAttr 0x560781d2c930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x560781d2c968 <col:100> "" ""
|-FunctionDecl 0x560781d2cb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560781d2c9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560781d2ca38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x560781d2cc28 <line:437:22>
| |-NonNullAttr 0x560781d2cc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x560781d2ccb8 <col:97> "" ""
|-FunctionDecl 0x560781d2ceb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560781d2cd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560781d2cd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560781d2cf68 <line:440:22>
| `-NonNullAttr 0x560781d2cfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d2d140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560781d2d008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560781d2d080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560781d2d1f0 <line:443:22>
| `-NonNullAttr 0x560781d2d248 <col:63, col:77> 1
|-FunctionDecl 0x560781d2d538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560781d2d298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560781d2d318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x560781d2d390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560781d2d5f0 <line:447:22>
| `-NonNullAttr 0x560781d2d648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x560781d2d8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x560781d2d6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560781d2d720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x560781d2d798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560781d2d9b0 <col:43>
| `-NonNullAttr 0x560781d2da08 <col:84, col:98> 1
|-FunctionDecl 0x560781d2dcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560781d2da58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560781d2dad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x560781d2db68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x560781d2dd80 <line:452:22>
| `-NonNullAttr 0x560781d2ddd8 <col:63, col:77> 3
|-FunctionDecl 0x560781d2e0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560781d2de50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560781d2ded0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x560781d2df60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560781d2e1a0 <line:456:22>
| `-NonNullAttr 0x560781d2e1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x560781d2e3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x560781d2e248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560781d2e2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x560781d2e498 <line:458:22>
|-FunctionDecl 0x560781d2e868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x560781d2e560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x560781d2e700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x560781d2e918 <col:52, col:69> 1 2
|-FunctionDecl 0x560781d2eac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x560781d2e9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x560781d2ea20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x560781d2eca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x560781d2eb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x560781d2ec08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x560781d2ee60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x560781d2ed68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x560781d2efa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x560781d2f040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x560781d2f0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x560781d2f1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x560781d2f240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x560781d2f410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix007_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x560781d2f508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x560781d2f5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x560781d2f560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x560781d2f0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x560781d2f040 ''
| `-AlignedAttr 0x560781d2f618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x560781d2f690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x560781d2f7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x560781d2f858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x560781d2f8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x560781d2f928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x560781d2fb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560781d2fa20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560781d2fc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560781d2fbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560781d2fe70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560781d2fd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x560781d2ff18 <line:487:22>
|-RecordDecl 0x560781d2ff70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x560781d30288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x560781d300e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x560781d30168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x560781d30338 <col:86>
| `-ReturnsTwiceAttr 0x560781d30390 <col:12> Implicit
|-FunctionDecl 0x560781d306b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560781d30460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x560781d30570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x560781d30768 <line:493:22>
| `-NonNullAttr 0x560781d307c0 <col:63, col:77> 1
|-FunctionDecl 0x560781d30938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560781d30808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560781d309e0 <line:495:22>
| `-NonNullAttr 0x560781d30a38 <col:63, col:77> 1
|-FunctionDecl 0x560781d30b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560781d30a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560781d30be8 <line:497:22>
| `-NonNullAttr 0x560781d30c40 <col:52, col:66> 1
|-FunctionDecl 0x560781d30d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560781d30c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560781d30de8 <line:499:22>
| `-NonNullAttr 0x560781d30e40 <col:52, col:66> 1
|-FunctionDecl 0x560781d31088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560781d30e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560781d30f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560781d31138 <col:36>
| `-NonNullAttr 0x560781d31190 <col:66, col:83> 1 2
|-FunctionDecl 0x560781d31290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560781d311d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560781d31338 <line:504:22>
| `-NonNullAttr 0x560781d31390 <col:52, col:66> 1
|-FunctionDecl 0x560781d31628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560781d31440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560781d314c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560781d316d8 <line:508:22>
| `-NonNullAttr 0x560781d31730 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d319f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x560781d31778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560781d317f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x560781d31878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x560781d31ab0 <line:512:22>
| `-NonNullAttr 0x560781d31b08 <col:63, col:80> 1 3
|-FunctionDecl 0x560781d31c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560781d31b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560781d31cb8 <line:514:22>
| `-NonNullAttr 0x560781d31d10 <col:63, col:77> 1
|-FunctionDecl 0x560781d31f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560781d31dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560781d31fe0 <line:516:22>
| `-NonNullAttr 0x560781d32038 <col:63, col:77> 1
|-FunctionDecl 0x560781d32140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560781d32088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560781d321e8 <line:518:22>
| `-NonNullAttr 0x560781d32240 <col:63, col:77> 1
|-FunctionDecl 0x560781d32468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560781d32288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560781d32308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x560781d32518 <line:522:22>
| `-NonNullAttr 0x560781d32570 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d32778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560781d325b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560781d32638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x560781d32828 <line:525:22>
| `-NonNullAttr 0x560781d32880 <col:63, col:77> 1
|-FunctionDecl 0x560781d32a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560781d328c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560781d32948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560781d32ad8 <line:528:22>
| `-NonNullAttr 0x560781d32b30 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d32cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560781d32b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560781d32bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560781d32d68 <line:530:22>
| `-NonNullAttr 0x560781d32dc0 <col:63, col:77> 1
|-FunctionDecl 0x560781d33f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560781d32e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560781d33eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560781d34040 <line:534:22>
| `-NonNullAttr 0x560781d34098 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d34228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560781d340e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560781d34168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560781d342d8 <line:537:22>
| `-NonNullAttr 0x560781d34330 <col:63, col:77> 1
|-FunctionDecl 0x560781d344d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560781d34378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560781d343f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560781d34588 <line:541:22>
| `-NonNullAttr 0x560781d345e0 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d34768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560781d34628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560781d346a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x560781d34818 <line:544:22>
| `-NonNullAttr 0x560781d34870 <col:63, col:77> 1
|-FunctionDecl 0x560781d34a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560781d348b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x560781d34938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560781d34b08 <line:547:22>
| `-NonNullAttr 0x560781d34b60 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d34ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560781d34ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560781d34c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x560781d34d98 <line:550:22>
| `-NonNullAttr 0x560781d34df0 <col:63, col:77> 1
|-FunctionDecl 0x560781d36168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x560781d35f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560781d36020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x560781d36218 <col:29>
| `-NonNullAttr 0x560781d36270 <col:70, col:84> 1
|-FunctionDecl 0x560781d363e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560781d362b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560781d36490 <line:555:22>
| `-NonNullAttr 0x560781d364e8 <col:63, col:77> 1
|-FunctionDecl 0x560781d365f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560781d36538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560781d36698 <line:557:22>
| `-NonNullAttr 0x560781d366f0 <col:52, col:66> 1
|-FunctionDecl 0x560781d367f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560781d36738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560781d36898 <line:559:19>
| `-NonNullAttr 0x560781d368f0 <col:49, col:63> 1
|-FunctionDecl 0x560781d36b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560781d36938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560781d369c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560781d36bd8 <col:39>
| `-NonNullAttr 0x560781d36c30 <col:69, col:86> 1 2
|-FunctionDecl 0x560781d36d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560781d36c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560781d36dd8 <line:564:22>
| `-NonNullAttr 0x560781d36e30 <col:52, col:66> 1
|-FunctionDecl 0x560781d36f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560781d36ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560781d37040 <line:566:22>
| `-NonNullAttr 0x560781d37098 <col:52, col:66> 1
|-FunctionDecl 0x560781d37258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560781d370e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560781d37178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560781d37308 <col:39>
| `-NonNullAttr 0x560781d37360 <col:69, col:86> 1 2
|-FunctionDecl 0x560781d37460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560781d373a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560781d37508 <line:571:22>
| `-NonNullAttr 0x560781d37560 <col:52, col:66> 1
|-FunctionDecl 0x560781d37748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560781d37610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560781d377f0 <line:573:22>
| `-NonNullAttr 0x560781d37848 <col:63, col:77> 1
|-FunctionDecl 0x560781d37950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560781d37898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560781d379f8 <line:575:22>
| `-NonNullAttr 0x560781d37a50 <col:63, col:77> 1
|-FunctionDecl 0x560781d37c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560781d37a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560781d37b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x560781d37d28 <line:579:22>
| `-NonNullAttr 0x560781d37d80 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d37fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560781d37dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560781d37e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x560781d38058 <line:582:22>
| `-NonNullAttr 0x560781d380b0 <col:63, col:77> 1
|-FunctionDecl 0x560781d38258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560781d380f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560781d38178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x560781d38308 <line:586:22>
| `-NonNullAttr 0x560781d38360 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d384e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560781d383a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560781d38428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x560781d38598 <col:36>
| `-NonNullAttr 0x560781d385f0 <col:77, col:91> 1
|-FunctionDecl 0x560781d38928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x560781d386d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560781d387e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x560781d389d8 <line:591:22>
| `-NonNullAttr 0x560781d38a30 <col:63, col:77> 1
|-FunctionDecl 0x560781d38ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560781d38a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560781d38c50 <line:593:22>
| `-NonNullAttr 0x560781d38ca8 <col:63, col:77> 1
|-FunctionDecl 0x560781d38db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560781d38cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560781d38e58 <line:595:22>
| `-NonNullAttr 0x560781d38eb0 <col:52, col:66> 1
|-FunctionDecl 0x560781d38fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560781d38f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560781d39070 <line:597:22>
| `-NonNullAttr 0x560781d390c8 <col:52, col:66> 1
|-FunctionDecl 0x560781d392f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x560781d39118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560781d39190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x560781d393a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x560781d396d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560781d39428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560781d394a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560781d39530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x560781d39790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x560781d399a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560781d39870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560781d39a50 <line:606:22>
| `-NonNullAttr 0x560781d39aa8 <col:63, col:77> 1
|-FunctionDecl 0x560781d39bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560781d39af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560781d39c58 <line:608:22>
| `-NonNullAttr 0x560781d39cb0 <col:63, col:77> 1
|-FunctionDecl 0x560781d39f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560781d39cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560781d39d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x560781d39fc0 <line:612:22>
| `-NonNullAttr 0x560781d3a018 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d3a228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x560781d3a068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560781d3a0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x560781d3a2d8 <col:37>
| `-NonNullAttr 0x560781d3a330 <col:78, col:92> 1
|-FunctionDecl 0x560781d3a548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x560781d3a378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560781d3a420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x560781d3a5f8 <line:618:22>
| `-NonNullAttr 0x560781d3a650 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d3a818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x560781d3a698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560781d3a710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x560781d3a8c8 <line:621:22>
| `-NonNullAttr 0x560781d3a920 <col:63, col:77> 1
|-FunctionDecl 0x560781d3abc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x560781d3aa00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x560781d3aa80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x560781d3ac78 <line:623:22>
| `-NonNullAttr 0x560781d3acd0 <col:63, col:77> 1
|-FunctionDecl 0x560781d3ae48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560781d3ad18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560781d3af20 <line:625:22>
| `-NonNullAttr 0x560781d3af78 <col:63, col:77> 1
|-FunctionDecl 0x560781d3b080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560781d3afc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560781d3b128 <line:627:22>
| `-NonNullAttr 0x560781d3b180 <col:52, col:66> 1
|-FunctionDecl 0x560781d3b280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560781d3b1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560781d3b328 <line:629:22>
| `-NonNullAttr 0x560781d3b380 <col:52, col:66> 1
|-FunctionDecl 0x560781d3b480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560781d3b3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560781d3b528 <line:631:22>
| `-NonNullAttr 0x560781d3b580 <col:52, col:66> 1
|-FunctionDecl 0x560781d3b958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x560781d3b660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x560781d3b770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560781d3b7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x560781d3ba10 <line:635:22>
| `-NonNullAttr 0x560781d3ba68 <col:63, col:77> 1
|-FunctionDecl 0x560781d3bbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560781d3bab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560781d3bc90 <line:637:22>
| `-NonNullAttr 0x560781d3bce8 <col:63, col:77> 1
|-FunctionDecl 0x560781d3bdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560781d3bd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560781d3be98 <line:639:22>
| `-NonNullAttr 0x560781d3bef0 <col:52, col:66> 1
|-FunctionDecl 0x560781d3c0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560781d3bfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560781d3c190 <line:641:22>
| `-NonNullAttr 0x560781d3c1e8 <col:63, col:77> 1
|-FunctionDecl 0x560781d3c2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560781d3c238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560781d3c398 <line:643:22>
| `-NonNullAttr 0x560781d3c3f0 <col:63, col:77> 1
|-FunctionDecl 0x560781d3c618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560781d3c438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560781d3c4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x560781d3c6c8 <line:647:22>
| `-NonNullAttr 0x560781d3c720 <col:63, col:80> 1 2
|-FunctionDecl 0x560781d3c928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x560781d3c768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x560781d3c7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x560781d3c9d8 <line:650:22>
| `-NonNullAttr 0x560781d3ca30 <col:63, col:77> 1
|-FunctionDecl 0x560781d3cd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x560781d3cb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x560781d3cc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x560781d3ce28 <line:653:22>
| `-NonNullAttr 0x560781d3ce80 <col:63, col:77> 1
|-FunctionDecl 0x560781d3cfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x560781d3cec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560781d3d090 <col:69>
|-FunctionDecl 0x560781d3d208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x560781d3d0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560781d3d2b0 <col:72>
|-FunctionDecl 0x560781d3d4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x560781d3d318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x560781d3d3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x560781d3d598 <col:44>
|-FunctionDecl 0x560781d3d7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x560781d3d600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560781d3d678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x560781d3d868 <line:660:22>
| `-NonNullAttr 0x560781d3d8c0 <col:63, col:77> 2
|-FunctionDecl 0x560781d3dd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x560781d3d9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x560781d3dab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x560781d3dbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x560781d3ddc0 <col:47>
|-FunctionDecl 0x560781d3ef60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x560781d3de30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560781d3f0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x560781d3f020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560781d3f210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x560781d3f178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560781d3f368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x560781d3f2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560781d3f430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x560781d3f4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x560781d3f5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x560781d3f668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x560781d3f6e8 prev 0x560781d3f668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x560781d3f750 <col:24> 'int' 0
|-VarDecl 0x560781d3f788 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x560781d3f808 prev 0x560781d3f788 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x560781d3f870 <col:27> 'int' 0
|-VarDecl 0x560781d3f8a8 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x560781d3f928 prev 0x560781d3f8a8 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x560781d3f990 <col:27> 'int' 0
|-VarDecl 0x560781d3f9c8 <line:678:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x560781d3fa48 prev 0x560781d3f9c8 <line:679:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x560781d3fab0 <col:27> 'int' 0
|-VarDecl 0x560781d3fae8 <line:680:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x560781d3fb68 prev 0x560781d3fae8 <line:681:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x560781d3fbd0 <col:27> 'int' 0
|-VarDecl 0x560781d3fc08 <line:682:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x560781d3fc88 prev 0x560781d3fc08 <line:683:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x560781d3fcf0 <col:27> 'int' 0
|-VarDecl 0x560781d3fd28 <line:684:1, col:5> col:5 used a 'int'
|-VarDecl 0x560781d3fda8 prev 0x560781d3fd28 <line:685:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x560781d3fe10 <col:9> 'int' 0
|-VarDecl 0x560781d3fe40 <line:686:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x560781d3feb8 <line:687:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x560781d3ff70 <line:688:1, col:5> col:5 used x 'int'
|-VarDecl 0x560781d3fff0 prev 0x560781d3ff70 <line:689:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x560781d40058 <col:9> 'int' 0
|-VarDecl 0x560781d40090 <line:690:1, col:5> col:5 used y 'int'
|-VarDecl 0x560781d40110 prev 0x560781d40090 <line:691:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x560781d40178 <col:9> 'int' 0
|-VarDecl 0x560781d401b0 <line:692:1, col:5> col:5 used z 'int'
|-VarDecl 0x560781d40230 prev 0x560781d401b0 <line:693:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x560781d40298 <col:9> 'int' 0
|-VarDecl 0x560781d402c8 <line:694:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x560781d40348 <line:695:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x560781d403c0 <line:696:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x560781d40438 <line:697:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x560781d404b0 <line:698:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x560781d40528 <line:699:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x560781d405a0 <line:700:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x560781d40618 <line:701:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x560781d40690 <line:702:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x560781d40708 <line:703:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x560781d40780 <line:704:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x560781d407f8 <line:705:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x560781d40870 <line:706:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x560781d408f0 <line:707:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x560781d40970 <line:708:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x560781d409e8 <line:709:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x560781d40a68 <line:710:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x560781d40ae0 <line:711:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x560781d40b58 <line:712:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x560781d40bd0 <line:713:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x560781d40ce8 prev 0x560781d3ef60 <line:714:1, line:728:1> line:714:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x560781d40c50 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560781d412c8 <line:715:1, line:728:1>
|   |-CallExpr 0x560781d40df8 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d40de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d40d90 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560781d40e58 <line:717:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560781d40e18 <col:3> 'int' lvalue Var 0x560781d3fda8 'a' 'int'
|   | `-IntegerLiteral 0x560781d40e38 <col:7> 'int' 1
|   |-CallExpr 0x560781d40eb0 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d40e98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d40e78 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560781d40f08 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d40ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d40ed0 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560781d40f98 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560781d40f28 <col:3> 'int' lvalue Var 0x560781d3f808 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x560781d40f80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560781d40f48 <col:25> 'int' lvalue Var 0x560781d3fff0 'x' 'int'
|   |-CallExpr 0x560781d40ff0 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d40fd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d40fb8 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560781d41048 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d41030 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d41010 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x560781d410a0 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d41088 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d41068 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560781d410f8 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d410e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d410c0 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560781d411b0 <line:725:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560781d41118 <col:3> 'int' lvalue Var 0x560781d3f6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560781d41190 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560781d41178 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560781d41138 <col:22> 'int' lvalue Var 0x560781d3f6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560781d41158 <col:41> 'int' 1
|   |-CallExpr 0x560781d41208 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d411f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d411d0 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560781d412b8 <line:727:3, col:36>
|     `-CallExpr 0x560781d41298 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560781d41280 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560781d41228 <col:10> 'void *(void)' Function 0x560781ce5e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560781d413e8 prev 0x560781d3f0b8 <line:729:1, line:743:1> line:729:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x560781d41350 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560781d41930 <line:730:1, line:743:1>
|   |-CallExpr 0x560781d414c8 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d414b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d41490 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560781d41528 <line:732:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560781d414e8 <col:3> 'int' lvalue Var 0x560781d3fff0 'x' 'int'
|   | `-IntegerLiteral 0x560781d41508 <col:7> 'int' 1
|   |-CallExpr 0x560781d41580 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d41568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d41548 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560781d415d8 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d415c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d415a0 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560781d41638 <line:735:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560781d415f8 <col:3> 'int' lvalue Var 0x560781d40110 'y' 'int'
|   | `-IntegerLiteral 0x560781d41618 <col:7> 'int' 1
|   |-CallExpr 0x560781d41690 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d41678 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d41658 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560781d416e8 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d416d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d416b0 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x560781d41740 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d41728 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d41708 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560781d41798 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d41780 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d41760 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560781d41850 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560781d417b8 <col:3> 'int' lvalue Var 0x560781d3f6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560781d41830 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560781d41818 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560781d417d8 <col:22> 'int' lvalue Var 0x560781d3f6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560781d417f8 <col:41> 'int' 1
|   |-CallExpr 0x560781d418a8 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d41890 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d41870 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560781d41920 <line:742:3, col:36>
|     `-CallExpr 0x560781d41900 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560781d418e8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560781d418c8 <col:10> 'void *(void)' Function 0x560781ce5e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560781d41a50 prev 0x560781d3f210 <line:744:1, line:774:1> line:744:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x560781d419b8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560781d44a70 <line:745:1, line:774:1>
|   |-CallExpr 0x560781d41b30 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d41b18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d41af8 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560781d41b90 <line:747:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560781d41b50 <col:3> 'int' lvalue Var 0x560781d40110 'y' 'int'
|   | `-IntegerLiteral 0x560781d41b70 <col:7> 'int' 2
|   |-CallExpr 0x560781d41be8 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d41bd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d41bb0 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560781d41c40 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d41c28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d41c08 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560781d41cb8 <line:750:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560781d41c60 <col:3> 'int' lvalue Var 0x560781d3f928 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x560781d41ca0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560781d41c80 <col:25> 'int' lvalue Var 0x560781d40110 'y' 'int'
|   |-CallExpr 0x560781d41d10 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d41cf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d41cd8 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560781d41d68 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d41d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d41d30 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560781d41e18 <line:753:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560781d41d88 <col:3> '_Bool' lvalue Var 0x560781d40b58 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x560781d41e00 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560781d41de0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560781d41dc8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560781d41da8 <col:19> 'void *(void)' Function 0x560781ce5e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560781d41ec8 <line:754:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560781d41e38 <col:3> '_Bool' lvalue Var 0x560781d40bd0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x560781d41eb0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560781d41e90 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560781d41e78 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560781d41e58 <col:19> 'void *(void)' Function 0x560781ce5e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560781d41f40 <line:755:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560781d41ee8 <col:3> '_Bool' lvalue Var 0x560781d402c8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560781d41f28 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560781d41f08 <col:21> '_Bool' lvalue Var 0x560781d40bd0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560781d41fc8 <line:756:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560781d41f60 <col:3> 'int' lvalue Var 0x560781d40348 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560781d41fb0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560781d41f90 <col:15> 'int' lvalue Var 0x560781d40230 'z' 'int'
|   |-BinaryOperator 0x560781d42400 <line:757:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560781d41fe8 <col:3> 'int' lvalue Var 0x560781d40230 'z' 'int'
|   | `-ConditionalOperator 0x560781d423d0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560781d421f8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560781d42118 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560781d42040 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560781d42028 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560781d42008 <col:8> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560781d420f8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560781d42090 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560781d42078 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560781d42058 <col:27> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x560781d420e0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560781d420c8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560781d420a8 <col:46> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560781d421d8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560781d42170 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560781d42158 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560781d42138 <col:65> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x560781d421c0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560781d421a8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560781d42188 <col:84> '_Bool' lvalue Var 0x560781d40780 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560781d423b8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560781d42218 <col:101> 'int' lvalue Var 0x560781d40230 'z' 'int'
|   |   `-ParenExpr 0x560781d42398 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560781d42368 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560781d422d8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560781d42290 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560781d42278 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560781d42238 <col:106> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560781d422c0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560781d422a8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560781d42258 <col:124> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560781d42338 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560781d422f8 <col:141> 'int' lvalue Var 0x560781d40970 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560781d42350 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560781d42318 <col:153> 'int' lvalue Var 0x560781d40a68 'z$w_buff1' 'int'
|   |-BinaryOperator 0x560781d42910 <line:758:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560781d42420 <col:3> 'int' lvalue Var 0x560781d40970 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x560781d428e0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560781d428b0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560781d42898 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560781d42440 <col:15> '_Bool' lvalue Var 0x560781d40bd0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560781d428c8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560781d42460 <col:31> 'int' lvalue Var 0x560781d40970 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560781d42878 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560781d42848 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560781d42670 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560781d42590 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560781d424b8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560781d424a0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560781d42480 <col:45> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560781d42570 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560781d42508 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560781d424f0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560781d424d0 <col:64> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x560781d42558 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560781d42540 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560781d42520 <col:83> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560781d42650 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560781d425e8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560781d425d0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560781d425b0 <col:102> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x560781d42638 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560781d42620 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560781d42600 <col:121> '_Bool' lvalue Var 0x560781d40780 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560781d42830 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560781d42690 <col:138> 'int' lvalue Var 0x560781d40970 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x560781d42810 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560781d427e0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560781d42750 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560781d42708 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560781d426f0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560781d426b0 <col:151> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560781d42738 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560781d42720 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560781d426d0 <col:169> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x560781d427b0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560781d42770 <col:186> 'int' lvalue Var 0x560781d40970 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560781d427c8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560781d42790 <col:198> 'int' lvalue Var 0x560781d40970 'z$w_buff0' 'int'
|   |-BinaryOperator 0x560781d42e20 <line:759:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560781d42930 <col:3> 'int' lvalue Var 0x560781d40a68 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x560781d42df0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560781d42dc0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560781d42da8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560781d42950 <col:15> '_Bool' lvalue Var 0x560781d40bd0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560781d42dd8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560781d42970 <col:31> 'int' lvalue Var 0x560781d40a68 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x560781d42d88 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560781d42d58 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560781d42b80 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560781d42aa0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560781d429c8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560781d429b0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560781d42990 <col:45> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560781d42a80 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560781d42a18 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560781d42a00 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560781d429e0 <col:64> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x560781d42a68 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560781d42a50 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560781d42a30 <col:83> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560781d42b60 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560781d42af8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560781d42ae0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560781d42ac0 <col:102> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x560781d42b48 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560781d42b30 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560781d42b10 <col:121> '_Bool' lvalue Var 0x560781d40780 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560781d42d40 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560781d42ba0 <col:138> 'int' lvalue Var 0x560781d40a68 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x560781d42d20 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560781d42cf0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560781d42c60 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560781d42c18 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560781d42c00 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560781d42bc0 <col:151> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560781d42c48 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560781d42c30 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560781d42be0 <col:169> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x560781d42cc0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560781d42c80 <col:186> 'int' lvalue Var 0x560781d40a68 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560781d42cd8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560781d42ca0 <col:198> 'int' lvalue Var 0x560781d40a68 'z$w_buff1' 'int'
|   |-BinaryOperator 0x560781d433d8 <line:760:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560781d42e40 <col:3> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560781d433c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560781d43390 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560781d43348 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560781d43330 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560781d42e60 <col:20> '_Bool' lvalue Var 0x560781d40bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560781d43378 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560781d43360 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560781d42e80 <col:36> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560781d43310 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560781d432e0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560781d430a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560781d42fc0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560781d42ed8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560781d42ec0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560781d42ea0 <col:55> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560781d42fa0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560781d42f28 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560781d42f10 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560781d42ef0 <col:74> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560781d42f78 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560781d42f60 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560781d42f40 <col:93> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560781d43080 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560781d43018 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560781d43000 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560781d42fe0 <col:112> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560781d43068 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560781d43050 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560781d43030 <col:131> '_Bool' lvalue Var 0x560781d40780 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560781d432c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560781d432b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560781d430c0 <col:148> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560781d43290 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560781d43260 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560781d43180 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560781d43138 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560781d43120 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560781d430e0 <col:166> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560781d43168 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560781d43150 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560781d43100 <col:184> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560781d43218 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560781d431d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560781d431a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560781d43248 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560781d43230 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560781d431f8 <col:212> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560781d439a0 <line:761:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560781d433f8 <col:3> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560781d43988 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560781d43958 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560781d43910 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560781d438f8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560781d43418 <col:20> '_Bool' lvalue Var 0x560781d40bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560781d43940 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560781d43928 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560781d43438 <col:36> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560781d438d8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560781d438a8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560781d43648 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560781d43568 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560781d43490 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560781d43478 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560781d43458 <col:55> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560781d43548 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560781d434e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560781d434c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560781d434a8 <col:74> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560781d43530 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560781d43518 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560781d434f8 <col:93> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560781d43628 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560781d435c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560781d435a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560781d43588 <col:112> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560781d43610 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560781d435f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560781d435d8 <col:131> '_Bool' lvalue Var 0x560781d40780 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560781d43890 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560781d43878 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560781d43668 <col:148> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560781d43858 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560781d43828 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560781d43728 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560781d436e0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560781d436c8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560781d43688 <col:166> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560781d43710 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560781d436f8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560781d436a8 <col:184> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560781d437f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560781d43778 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560781d43748 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560781d43810 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560781d437d0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560781d437a0 <col:219> 'int' 0
|   |-BinaryOperator 0x560781d43f48 <line:762:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560781d439c0 <col:3> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560781d43f30 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560781d43f00 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560781d43eb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560781d43ea0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560781d439e0 <col:20> '_Bool' lvalue Var 0x560781d40bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560781d43ee8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560781d43ed0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560781d43a00 <col:36> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x560781d43e80 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560781d43e50 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560781d43c10 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560781d43b30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560781d43a58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560781d43a40 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560781d43a20 <col:55> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560781d43b10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560781d43aa8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560781d43a90 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560781d43a70 <col:74> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560781d43af8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560781d43ae0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560781d43ac0 <col:93> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560781d43bf0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560781d43b88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560781d43b70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560781d43b50 <col:112> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560781d43bd8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560781d43bc0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560781d43ba0 <col:131> '_Bool' lvalue Var 0x560781d40780 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560781d43e38 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560781d43e20 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560781d43c30 <col:148> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x560781d43e00 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560781d43dd0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560781d43cf0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560781d43ca8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560781d43c90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560781d43c50 <col:166> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560781d43cd8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560781d43cc0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560781d43c70 <col:184> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560781d43d88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560781d43d40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560781d43d10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560781d43db8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560781d43da0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560781d43d68 <col:212> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560781d44538 <line:763:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560781d43f68 <col:3> '_Bool' lvalue Var 0x560781d40780 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560781d44520 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560781d444f0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560781d444a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560781d44490 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560781d43fb0 <col:20> '_Bool' lvalue Var 0x560781d40bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560781d444d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560781d444c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560781d43fd0 <col:36> '_Bool' lvalue Var 0x560781d40780 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x560781d44470 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560781d44440 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560781d441e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560781d44100 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560781d44028 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560781d44010 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560781d43ff0 <col:55> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560781d440e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560781d44078 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560781d44060 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560781d44040 <col:74> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560781d440c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560781d440b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560781d44090 <col:93> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560781d441c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560781d44158 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560781d44140 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560781d44120 <col:112> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560781d441a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560781d44190 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560781d44170 <col:131> '_Bool' lvalue Var 0x560781d40780 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560781d44428 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560781d44410 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560781d44200 <col:148> '_Bool' lvalue Var 0x560781d40780 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x560781d443f0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560781d443c0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560781d442c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560781d44278 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560781d44260 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560781d44220 <col:166> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560781d442a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560781d44290 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560781d44240 <col:184> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560781d44390 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560781d44310 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560781d442e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560781d443a8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560781d44368 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560781d44338 <col:219> 'int' 0
|   |-BinaryOperator 0x560781d445b0 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560781d44558 <col:3> 'int' lvalue Var 0x560781d3fa48 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x560781d44598 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560781d44578 <col:25> 'int' lvalue Var 0x560781d40230 'z' 'int'
|   |-BinaryOperator 0x560781d446e0 <line:765:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560781d445d0 <col:3> 'int' lvalue Var 0x560781d40230 'z' 'int'
|   | `-ConditionalOperator 0x560781d446b0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560781d44668 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560781d44650 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560781d445f0 <col:7> '_Bool' lvalue Var 0x560781d402c8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560781d44680 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560781d44610 <col:25> 'int' lvalue Var 0x560781d40348 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560781d44698 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560781d44630 <col:37> 'int' lvalue Var 0x560781d40230 'z' 'int'
|   |-BinaryOperator 0x560781d44778 <line:766:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560781d44700 <col:3> '_Bool' lvalue Var 0x560781d402c8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560781d44750 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560781d44720 <col:28> 'int' 0
|   |-CallExpr 0x560781d447d0 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d447b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d44798 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560781d44828 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d44810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d447f0 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x560781d44880 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d44868 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d44848 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560781d448d8 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d448c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d448a0 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560781d44990 <line:771:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560781d448f8 <col:3> 'int' lvalue Var 0x560781d3f6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560781d44970 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560781d44958 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560781d44918 <col:22> 'int' lvalue Var 0x560781d3f6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560781d44938 <col:41> 'int' 1
|   |-CallExpr 0x560781d449e8 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d449d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d449b0 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560781d44a60 <line:773:3, col:36>
|     `-CallExpr 0x560781d44a40 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560781d44a28 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560781d44a08 <col:10> 'void *(void)' Function 0x560781ce5e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560781d44c10 prev 0x560781d3f368 <line:775:1, line:820:1> line:775:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x560781d44b78 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560781d49000 <line:776:1, line:820:1>
|   |-CallExpr 0x560781d44cf0 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d44cd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d44cb8 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560781d44d68 <line:778:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560781d44d10 <col:3> 'int' lvalue Var 0x560781d40a68 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x560781d44d50 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560781d44d30 <col:15> 'int' lvalue Var 0x560781d40970 'z$w_buff0' 'int'
|   |-BinaryOperator 0x560781d44dc8 <line:779:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560781d44d88 <col:3> 'int' lvalue Var 0x560781d40970 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x560781d44da8 <col:15> 'int' 1
|   |-BinaryOperator 0x560781d44e40 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560781d44de8 <col:3> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560781d44e28 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560781d44e08 <col:20> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560781d44ed8 <line:781:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560781d44e60 <col:3> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x560781d44eb0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560781d44e80 <col:27> 'int' 1
|   |-CallExpr 0x560781d45078 <line:782:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x560781d45060 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560781d44ef8 <col:3> 'void (int)' Function 0x560781ce60d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x560781d45018 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x560781d44ff8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x560781d44fd8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x560781d44f70 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x560781d44f58 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560781d44f18 <col:23> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x560781d44fc0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x560781d44f88 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x560781d44f38 <col:41> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560781d450f8 <line:783:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560781d450a0 <col:3> '_Bool' lvalue Var 0x560781d40618 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x560781d450e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560781d450c0 <col:20> '_Bool' lvalue Var 0x560781d403c0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x560781d45170 <line:784:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560781d45118 <col:3> '_Bool' lvalue Var 0x560781d40690 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560781d45158 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560781d45138 <col:20> '_Bool' lvalue Var 0x560781d40438 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560781d451e8 <line:785:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560781d45190 <col:3> '_Bool' lvalue Var 0x560781d40708 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560781d451d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560781d451b0 <col:20> '_Bool' lvalue Var 0x560781d404b0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560781d45260 <line:786:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560781d45208 <col:3> '_Bool' lvalue Var 0x560781d40780 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560781d45248 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560781d45228 <col:20> '_Bool' lvalue Var 0x560781d40528 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560781d452d8 <line:787:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560781d45280 <col:3> '_Bool' lvalue Var 0x560781d407f8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560781d452c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560781d452a0 <col:20> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x560781d45370 <line:788:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560781d452f8 <col:3> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x560781d45348 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560781d45318 <col:27> 'int' 1
|   |-CallExpr 0x560781d453c8 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d453b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d45390 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560781d45420 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d45408 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d453e8 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560781d454d0 <line:791:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560781d45440 <col:3> '_Bool' lvalue Var 0x560781d40b58 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x560781d454b8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560781d45498 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560781d45480 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560781d45460 <col:19> 'void *(void)' Function 0x560781ce5e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560781d45580 <line:792:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560781d454f0 <col:3> '_Bool' lvalue Var 0x560781d40bd0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x560781d45568 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560781d45548 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560781d45530 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560781d45510 <col:19> 'void *(void)' Function 0x560781ce5e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560781d455f8 <line:793:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560781d455a0 <col:3> '_Bool' lvalue Var 0x560781d402c8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560781d455e0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560781d455c0 <col:21> '_Bool' lvalue Var 0x560781d40bd0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560781d45670 <line:794:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560781d45618 <col:3> 'int' lvalue Var 0x560781d40348 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560781d45658 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560781d45638 <col:15> 'int' lvalue Var 0x560781d40230 'z' 'int'
|   |-BinaryOperator 0x560781d45aa8 <line:795:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560781d45690 <col:3> 'int' lvalue Var 0x560781d40230 'z' 'int'
|   | `-ConditionalOperator 0x560781d45a78 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560781d458a0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560781d457c0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560781d456e8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560781d456d0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560781d456b0 <col:8> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560781d457a0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560781d45738 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560781d45720 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560781d45700 <col:27> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x560781d45788 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560781d45770 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560781d45750 <col:46> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560781d45880 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560781d45818 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560781d45800 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560781d457e0 <col:65> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x560781d45868 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560781d45850 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560781d45830 <col:84> '_Bool' lvalue Var 0x560781d407f8 'z$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x560781d45a60 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560781d458c0 <col:101> 'int' lvalue Var 0x560781d40230 'z' 'int'
|   |   `-ParenExpr 0x560781d45a40 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560781d45a10 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560781d45980 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560781d45938 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560781d45920 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560781d458e0 <col:106> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560781d45968 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560781d45950 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560781d45900 <col:124> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560781d459e0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560781d459a0 <col:141> 'int' lvalue Var 0x560781d40970 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560781d459f8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560781d459c0 <col:153> 'int' lvalue Var 0x560781d40a68 'z$w_buff1' 'int'
|   |-BinaryOperator 0x560781d45fd0 <line:796:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560781d45ac8 <col:3> 'int' lvalue Var 0x560781d40970 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x560781d45f88 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560781d45f58 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560781d45f40 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560781d45ae8 <col:15> '_Bool' lvalue Var 0x560781d40bd0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560781d45f70 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560781d45b08 <col:31> 'int' lvalue Var 0x560781d40970 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560781d45f20 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560781d45ef0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560781d45d18 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560781d45c38 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560781d45b60 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560781d45b48 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560781d45b28 <col:45> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560781d45c18 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560781d45bb0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560781d45b98 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560781d45b78 <col:64> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x560781d45c00 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560781d45be8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560781d45bc8 <col:83> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560781d45cf8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560781d45c90 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560781d45c78 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560781d45c58 <col:102> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x560781d45ce0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560781d45cc8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560781d45ca8 <col:121> '_Bool' lvalue Var 0x560781d407f8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560781d45ed8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560781d45d38 <col:138> 'int' lvalue Var 0x560781d40970 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x560781d45eb8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560781d45e88 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560781d45df8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560781d45db0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560781d45d98 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560781d45d58 <col:151> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560781d45de0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560781d45dc8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560781d45d78 <col:169> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x560781d45e58 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560781d45e18 <col:186> 'int' lvalue Var 0x560781d40970 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560781d45e70 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560781d45e38 <col:198> 'int' lvalue Var 0x560781d40970 'z$w_buff0' 'int'
|   |-BinaryOperator 0x560781d464e0 <line:797:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560781d45ff0 <col:3> 'int' lvalue Var 0x560781d40a68 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x560781d464b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560781d46480 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560781d46468 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560781d46010 <col:15> '_Bool' lvalue Var 0x560781d40bd0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560781d46498 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560781d46030 <col:31> 'int' lvalue Var 0x560781d40a68 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x560781d46448 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560781d46418 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560781d46240 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560781d46160 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560781d46088 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560781d46070 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560781d46050 <col:45> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560781d46140 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560781d460d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560781d460c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560781d460a0 <col:64> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x560781d46128 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560781d46110 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560781d460f0 <col:83> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560781d46220 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560781d461b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560781d461a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560781d46180 <col:102> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x560781d46208 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560781d461f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560781d461d0 <col:121> '_Bool' lvalue Var 0x560781d407f8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560781d46400 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560781d46260 <col:138> 'int' lvalue Var 0x560781d40a68 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x560781d463e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560781d463b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560781d46320 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560781d462d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560781d462c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560781d46280 <col:151> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560781d46308 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560781d462f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560781d462a0 <col:169> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x560781d46380 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560781d46340 <col:186> 'int' lvalue Var 0x560781d40a68 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560781d46398 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560781d46360 <col:198> 'int' lvalue Var 0x560781d40a68 'z$w_buff1' 'int'
|   |-BinaryOperator 0x560781d46a88 <line:798:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560781d46500 <col:3> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560781d46a70 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560781d46a40 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560781d469f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560781d469e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560781d46520 <col:20> '_Bool' lvalue Var 0x560781d40bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560781d46a28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560781d46a10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560781d46540 <col:36> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560781d469c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560781d46990 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560781d46750 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560781d46670 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560781d46598 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560781d46580 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560781d46560 <col:55> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560781d46650 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560781d465e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560781d465d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560781d465b0 <col:74> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560781d46638 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560781d46620 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560781d46600 <col:93> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560781d46730 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560781d466c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560781d466b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560781d46690 <col:112> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560781d46718 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560781d46700 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560781d466e0 <col:131> '_Bool' lvalue Var 0x560781d407f8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560781d46978 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560781d46960 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560781d46770 <col:148> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560781d46940 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560781d46910 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560781d46830 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560781d467e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560781d467d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560781d46790 <col:166> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560781d46818 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560781d46800 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560781d467b0 <col:184> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560781d468c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560781d46880 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560781d46850 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560781d468f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560781d468e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560781d468a8 <col:212> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560781d47070 <line:799:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560781d46aa8 <col:3> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560781d47058 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560781d47028 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560781d46fe0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560781d46fa8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560781d46ac8 <col:20> '_Bool' lvalue Var 0x560781d40bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560781d47010 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560781d46ff8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560781d46ae8 <col:36> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560781d46f88 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560781d46f58 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560781d46cf8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560781d46c18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560781d46b40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560781d46b28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560781d46b08 <col:55> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560781d46bf8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560781d46b90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560781d46b78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560781d46b58 <col:74> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560781d46be0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560781d46bc8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560781d46ba8 <col:93> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560781d46cd8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560781d46c70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560781d46c58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560781d46c38 <col:112> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560781d46cc0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560781d46ca8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560781d46c88 <col:131> '_Bool' lvalue Var 0x560781d407f8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560781d46f40 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560781d46f28 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560781d46d18 <col:148> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560781d46f08 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560781d46ed8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560781d46dd8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560781d46d90 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560781d46d78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560781d46d38 <col:166> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560781d46dc0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560781d46da8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560781d46d58 <col:184> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560781d46ea8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560781d46e28 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560781d46df8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560781d46ec0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560781d46e80 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560781d46e50 <col:219> 'int' 0
|   |-BinaryOperator 0x560781d47618 <line:800:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560781d47090 <col:3> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560781d47600 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560781d475d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560781d47588 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560781d47570 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560781d470b0 <col:20> '_Bool' lvalue Var 0x560781d40bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560781d475b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560781d475a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560781d470d0 <col:36> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x560781d47550 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560781d47520 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560781d472e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560781d47200 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560781d47128 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560781d47110 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560781d470f0 <col:55> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560781d471e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560781d47178 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560781d47160 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560781d47140 <col:74> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560781d471c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560781d471b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560781d47190 <col:93> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560781d472c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560781d47258 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560781d47240 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560781d47220 <col:112> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560781d472a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560781d47290 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560781d47270 <col:131> '_Bool' lvalue Var 0x560781d407f8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560781d47508 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560781d474f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560781d47300 <col:148> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x560781d474d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560781d474a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560781d473c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560781d47378 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560781d47360 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560781d47320 <col:166> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560781d473a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560781d47390 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560781d47340 <col:184> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560781d47458 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560781d47410 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560781d473e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560781d47488 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560781d47470 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560781d47438 <col:212> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x560781d47be0 <line:801:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560781d47638 <col:3> '_Bool' lvalue Var 0x560781d407f8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560781d47bc8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560781d47b98 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560781d47b50 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560781d47b38 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560781d47658 <col:20> '_Bool' lvalue Var 0x560781d40bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560781d47b80 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560781d47b68 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560781d47678 <col:36> '_Bool' lvalue Var 0x560781d407f8 'z$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x560781d47b18 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560781d47ae8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560781d47888 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560781d477a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560781d476d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560781d476b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560781d47698 <col:55> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560781d47788 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560781d47720 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560781d47708 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560781d476e8 <col:74> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560781d47770 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560781d47758 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560781d47738 <col:93> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560781d47868 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560781d47800 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560781d477e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560781d477c8 <col:112> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560781d47850 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560781d47838 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560781d47818 <col:131> '_Bool' lvalue Var 0x560781d407f8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560781d47ad0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560781d47ab8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560781d478a8 <col:148> '_Bool' lvalue Var 0x560781d407f8 'z$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x560781d47a98 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560781d47a68 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560781d47968 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560781d47920 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560781d47908 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560781d478c8 <col:166> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560781d47950 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560781d47938 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560781d478e8 <col:184> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560781d47a38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560781d479b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560781d47988 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560781d47a50 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560781d47a10 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560781d479e0 <col:219> 'int' 0
|   |-BinaryOperator 0x560781d47c58 <line:802:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560781d47c00 <col:3> 'int' lvalue Var 0x560781d3fb68 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x560781d47c40 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560781d47c20 <col:25> 'int' lvalue Var 0x560781d40230 'z' 'int'
|   |-BinaryOperator 0x560781d47d88 <line:803:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560781d47c78 <col:3> 'int' lvalue Var 0x560781d40230 'z' 'int'
|   | `-ConditionalOperator 0x560781d47d58 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560781d47d10 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560781d47cf8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560781d47c98 <col:7> '_Bool' lvalue Var 0x560781d402c8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560781d47d28 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560781d47cb8 <col:25> 'int' lvalue Var 0x560781d40348 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560781d47d40 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560781d47cd8 <col:37> 'int' lvalue Var 0x560781d40230 'z' 'int'
|   |-BinaryOperator 0x560781d47e20 <line:804:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560781d47da8 <col:3> '_Bool' lvalue Var 0x560781d402c8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560781d47df8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560781d47dc8 <col:28> 'int' 0
|   |-CallExpr 0x560781d47e78 <line:805:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d47e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d47e40 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560781d47ed0 <line:806:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d47eb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d47e98 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560781d47f48 <line:807:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560781d47ef0 <col:3> 'int' lvalue Var 0x560781d3fc88 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x560781d47f30 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560781d47f10 <col:25> 'int' lvalue Var 0x560781d3fda8 'a' 'int'
|   |-CallExpr 0x560781d47fa0 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d47f88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d47f68 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560781d48008 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d47ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d47fc0 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560781d482f0 <line:810:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560781d48028 <col:3> 'int' lvalue Var 0x560781d40230 'z' 'int'
|   | `-ConditionalOperator 0x560781d482c0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560781d480e8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560781d480a0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560781d48088 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560781d48048 <col:7> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560781d480d0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560781d480b8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560781d48068 <col:25> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x560781d482a8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560781d48108 <col:42> 'int' lvalue Var 0x560781d40970 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560781d48288 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560781d48258 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560781d481c8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560781d48180 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560781d48168 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560781d48128 <col:55> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560781d481b0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560781d48198 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560781d48148 <col:73> '_Bool' lvalue Var 0x560781d407f8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560781d48228 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560781d481e8 <col:90> 'int' lvalue Var 0x560781d40a68 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560781d48240 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560781d48208 <col:102> 'int' lvalue Var 0x560781d40230 'z' 'int'
|   |-BinaryOperator 0x560781d484f8 <line:811:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560781d48310 <col:3> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560781d484e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560781d484b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560781d483d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560781d48388 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560781d48370 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560781d48330 <col:20> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560781d483b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560781d483a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560781d48350 <col:38> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560781d48468 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560781d48420 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560781d483f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560781d48498 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560781d48480 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560781d48448 <col:66> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560781d487e0 <line:812:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560781d48518 <col:3> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560781d487c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560781d48798 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560781d486b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560781d485d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560781d48590 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560781d48578 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560781d48538 <col:20> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560781d485c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560781d485a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560781d48558 <col:38> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x560781d48698 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560781d48650 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560781d48638 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560781d485f8 <col:56> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560781d48680 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560781d48668 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560781d48618 <col:74> '_Bool' lvalue Var 0x560781d407f8 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560781d48750 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560781d48708 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560781d486d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560781d48780 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560781d48768 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560781d48730 <col:102> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560781d489e8 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560781d48800 <col:3> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560781d489d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560781d489a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560781d488c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560781d48878 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560781d48860 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560781d48820 <col:20> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560781d488a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560781d48890 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560781d48840 <col:38> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560781d48958 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560781d48910 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560781d488e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560781d48988 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560781d48970 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560781d48938 <col:66> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x560781d48cd0 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560781d48a08 <col:3> '_Bool' lvalue Var 0x560781d407f8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560781d48cb8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560781d48c88 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560781d48ba8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560781d48ac8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560781d48a80 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560781d48a68 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560781d48a28 <col:20> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560781d48ab0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560781d48a98 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560781d48a48 <col:38> '_Bool' lvalue Var 0x560781d405a0 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x560781d48b88 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560781d48b40 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560781d48b28 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560781d48ae8 <col:56> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560781d48b70 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560781d48b58 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560781d48b08 <col:74> '_Bool' lvalue Var 0x560781d407f8 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560781d48c40 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560781d48bf8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560781d48bc8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560781d48c70 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560781d48c58 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560781d48c20 <col:102> '_Bool' lvalue Var 0x560781d407f8 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x560781d48d28 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d48d10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d48cf0 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560781d48d80 <line:816:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560781d48d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d48d48 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560781d48e38 <line:817:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560781d48da0 <col:3> 'int' lvalue Var 0x560781d3f6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560781d48e18 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560781d48e00 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560781d48dc0 <col:22> 'int' lvalue Var 0x560781d3f6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560781d48de0 <col:41> 'int' 1
|   |-CallExpr 0x560781d48e90 <line:818:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560781d48e78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560781d48e58 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560781d48f08 <line:819:3, col:36>
|     `-CallExpr 0x560781d48ee8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560781d48ed0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560781d48eb0 <col:10> 'void *(void)' Function 0x560781ce5e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560781d49188 prev 0x560781d3f430 <line:821:1, line:823:1> line:821:6 fence 'void ()'
| `-CompoundStmt 0x560781d49228 <line:822:1, line:823:1>
|-FunctionDecl 0x560781d49258 prev 0x560781d3f4f0 <line:824:1, line:826:1> line:824:6 isync 'void ()'
| `-CompoundStmt 0x560781d492f8 <line:825:1, line:826:1>
|-FunctionDecl 0x560781d49328 prev 0x560781d3f5b0 <line:827:1, line:829:1> line:827:6 lwfence 'void ()'
| `-CompoundStmt 0x560781d493c8 <line:828:1, line:829:1>
`-FunctionDecl 0x560781d49438 <line:830:1, line:856:1> line:830:5 main 'int ()'
  `-CompoundStmt 0x560781d4b4e0 <line:831:1, line:856:1>
    |-DeclStmt 0x560781d49550 <line:832:3, col:17>
    | `-VarDecl 0x560781d494e8 <col:3, col:13> col:13 used t199 'pthread_t':'unsigned long'
    |-CallExpr 0x560781d49758 <line:833:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560781d49740 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560781d49568 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560781d268f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560781d495a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560781d49588 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560781d494e8 't199' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560781d49798 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560781d49620 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560781d495f8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560781d495c0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560781d497b0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560781d49640 <col:38> 'void *(void *)' Function 0x560781d40ce8 'P0' 'void *(void *)'
    | `-ParenExpr 0x560781d496c0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560781d49698 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560781d49660 <col:51> 'int' 0
    |-DeclStmt 0x560781d49840 <line:834:3, col:17>
    | `-VarDecl 0x560781d497d8 <col:3, col:13> col:13 used t200 'pthread_t':'unsigned long'
    |-CallExpr 0x560781d499e8 <line:835:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560781d499d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560781d49858 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560781d268f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560781d49898 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560781d49878 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560781d497d8 't200' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560781d49a28 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560781d49910 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560781d498e8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560781d498b0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560781d49a40 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560781d49930 <col:38> 'void *(void *)' Function 0x560781d413e8 'P1' 'void *(void *)'
    | `-ParenExpr 0x560781d499b0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560781d49988 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560781d49950 <col:51> 'int' 0
    |-DeclStmt 0x560781d49ad0 <line:836:3, col:17>
    | `-VarDecl 0x560781d49a68 <col:3, col:13> col:13 used t201 'pthread_t':'unsigned long'
    |-CallExpr 0x560781d49c78 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560781d49c60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560781d49ae8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560781d268f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560781d49b28 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560781d49b08 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560781d49a68 't201' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560781d49cb8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560781d49ba0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560781d49b78 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560781d49b40 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560781d49cd0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560781d49bc0 <col:38> 'void *(void *)' Function 0x560781d41a50 'P2' 'void *(void *)'
    | `-ParenExpr 0x560781d49c40 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560781d49c18 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560781d49be0 <col:51> 'int' 0
    |-DeclStmt 0x560781d49d60 <line:838:3, col:17>
    | `-VarDecl 0x560781d49cf8 <col:3, col:13> col:13 used t202 'pthread_t':'unsigned long'
    |-CallExpr 0x560781d49f08 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560781d49ef0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560781d49d78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560781d268f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560781d49db8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560781d49d98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560781d49cf8 't202' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560781d49f48 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560781d49e30 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560781d49e08 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560781d49dd0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560781d49f60 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560781d49e50 <col:38> 'void *(void *)' Function 0x560781d44c10 'P3' 'void *(void *)'
    | `-ParenExpr 0x560781d49ed0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560781d49ea8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560781d49e70 <col:51> 'int' 0
    |-CallExpr 0x560781d49fb0 <line:840:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560781d49f98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560781d49f78 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560781d4a0a0 <line:841:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x560781d49fd0 <col:3> '_Bool' lvalue Var 0x560781d3fe40 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x560781d4a088 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x560781d4a068 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x560781d4a050 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x560781d4a010 <col:21> 'int' lvalue Var 0x560781d3f6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x560781d4a030 <col:41> 'int' 4
    |-CallExpr 0x560781d4a0f8 <line:842:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560781d4a0e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560781d4a0c0 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560781d4a170 <line:843:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560781d4a158 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560781d4a118 <col:3> 'void (int)' Function 0x560781ce5ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x560781d4a1b0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560781d4a198 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560781d4a138 <col:21> '_Bool' lvalue Var 0x560781d3fe40 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x560781d4a200 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560781d4a1e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560781d4a1c8 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560781d4a4e8 <line:845:3, col:103> 'int' '='
    | |-DeclRefExpr 0x560781d4a220 <col:3> 'int' lvalue Var 0x560781d40230 'z' 'int'
    | `-ConditionalOperator 0x560781d4a4b8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x560781d4a2e0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x560781d4a298 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x560781d4a280 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x560781d4a240 <col:7> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x560781d4a2c8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x560781d4a2b0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560781d4a260 <col:25> '_Bool' lvalue Var 0x560781d403c0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560781d4a4a0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560781d4a300 <col:42> 'int' lvalue Var 0x560781d40970 'z$w_buff0' 'int'
    |   `-ParenExpr 0x560781d4a480 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x560781d4a450 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x560781d4a3c0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560781d4a378 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560781d4a360 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560781d4a320 <col:55> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560781d4a3a8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560781d4a390 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560781d4a340 <col:73> '_Bool' lvalue Var 0x560781d40618 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560781d4a420 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560781d4a3e0 <col:90> 'int' lvalue Var 0x560781d40a68 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x560781d4a438 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560781d4a400 <col:102> 'int' lvalue Var 0x560781d40230 'z' 'int'
    |-BinaryOperator 0x560781d4a6f0 <line:846:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560781d4a508 <col:3> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560781d4a6d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560781d4a6a8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560781d4a5c8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560781d4a580 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560781d4a568 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560781d4a528 <col:20> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560781d4a5b0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560781d4a598 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560781d4a548 <col:38> '_Bool' lvalue Var 0x560781d403c0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560781d4a660 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560781d4a618 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560781d4a5e8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560781d4a690 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560781d4a678 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560781d4a640 <col:66> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560781d4a9d8 <line:847:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560781d4a710 <col:3> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560781d4a9c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560781d4a990 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560781d4a8b0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560781d4a7d0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560781d4a788 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560781d4a770 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560781d4a730 <col:20> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560781d4a7b8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560781d4a7a0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560781d4a750 <col:38> '_Bool' lvalue Var 0x560781d403c0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560781d4a890 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560781d4a848 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560781d4a830 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560781d4a7f0 <col:56> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560781d4a878 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560781d4a860 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560781d4a810 <col:74> '_Bool' lvalue Var 0x560781d40618 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560781d4a948 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560781d4a900 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560781d4a8d0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560781d4a978 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560781d4a960 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560781d4a928 <col:102> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x560781d4abe0 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560781d4a9f8 <col:3> '_Bool' lvalue Var 0x560781d403c0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560781d4abc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560781d4ab98 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560781d4aab8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560781d4aa70 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560781d4aa58 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560781d4aa18 <col:20> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560781d4aaa0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560781d4aa88 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560781d4aa38 <col:38> '_Bool' lvalue Var 0x560781d403c0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560781d4ab50 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560781d4ab08 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560781d4aad8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560781d4ab80 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560781d4ab68 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560781d4ab30 <col:66> '_Bool' lvalue Var 0x560781d403c0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560781d4aec8 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560781d4ac00 <col:3> '_Bool' lvalue Var 0x560781d40618 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560781d4aeb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560781d4ae80 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560781d4ada0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560781d4acc0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560781d4ac78 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560781d4ac60 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560781d4ac20 <col:20> '_Bool' lvalue Var 0x560781d409e8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560781d4aca8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560781d4ac90 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560781d4ac40 <col:38> '_Bool' lvalue Var 0x560781d403c0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560781d4ad80 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560781d4ad38 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560781d4ad20 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560781d4ace0 <col:56> '_Bool' lvalue Var 0x560781d40ae0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560781d4ad68 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560781d4ad50 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560781d4ad00 <col:74> '_Bool' lvalue Var 0x560781d40618 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560781d4ae38 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560781d4adf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560781d4adc0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560781d4ae68 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560781d4ae50 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560781d4ae18 <col:102> '_Bool' lvalue Var 0x560781d40618 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x560781d4af20 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560781d4af08 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560781d4aee8 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560781d4af78 <line:851:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560781d4af60 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560781d4af40 <col:3> 'void ()' Function 0x560781ce6350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560781d4b388 <line:852:3, col:169> '_Bool' '='
    | |-DeclRefExpr 0x560781d4af98 <col:3> '_Bool' lvalue Var 0x560781d3feb8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x560781d4b370 <col:21, col:169> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x560781d4b358 <col:21, col:169> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x560781d4b338 <col:22, col:169> 'int'
    |       `-BinaryOperator 0x560781d4b318 <col:23, col:168> 'int' '&&'
    |         |-BinaryOperator 0x560781d4b280 <col:23, col:140> 'int' '&&'
    |         | |-BinaryOperator 0x560781d4b1e8 <col:23, col:112> 'int' '&&'
    |         | | |-BinaryOperator 0x560781d4b150 <col:23, col:84> 'int' '&&'
    |         | | | |-BinaryOperator 0x560781d4b0b8 <col:23, col:56> 'int' '&&'
    |         | | | | |-BinaryOperator 0x560781d4b020 <col:23, col:28> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x560781d4aff8 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x560781d4afb8 <col:23> 'int' lvalue Var 0x560781d40110 'y' 'int'
    |         | | | | | `-IntegerLiteral 0x560781d4afd8 <col:28> 'int' 2
    |         | | | | `-BinaryOperator 0x560781d4b098 <col:33, col:56> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x560781d4b080 <col:33> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x560781d4b040 <col:33> 'int' lvalue Var 0x560781d3f808 '__unbuffered_p0_EAX' 'int'
    |         | | | |   `-IntegerLiteral 0x560781d4b060 <col:56> 'int' 0
    |         | | | `-BinaryOperator 0x560781d4b130 <col:61, col:84> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x560781d4b118 <col:61> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x560781d4b0d8 <col:61> 'int' lvalue Var 0x560781d3f928 '__unbuffered_p2_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x560781d4b0f8 <col:84> 'int' 2
    |         | | `-BinaryOperator 0x560781d4b1c8 <col:89, col:112> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x560781d4b1b0 <col:89> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x560781d4b170 <col:89> 'int' lvalue Var 0x560781d3fa48 '__unbuffered_p2_EBX' 'int'
    |         | |   `-IntegerLiteral 0x560781d4b190 <col:112> 'int' 0
    |         | `-BinaryOperator 0x560781d4b260 <col:117, col:140> 'int' '=='
    |         |   |-ImplicitCastExpr 0x560781d4b248 <col:117> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x560781d4b208 <col:117> 'int' lvalue Var 0x560781d3fb68 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x560781d4b228 <col:140> 'int' 1
    |         `-BinaryOperator 0x560781d4b2f8 <col:145, col:168> 'int' '=='
    |           |-ImplicitCastExpr 0x560781d4b2e0 <col:145> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560781d4b2a0 <col:145> 'int' lvalue Var 0x560781d3fc88 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x560781d4b2c0 <col:168> 'int' 0
    |-CallExpr 0x560781d4b3e0 <line:853:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560781d4b3c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560781d4b3a8 <col:3> 'void ()' Function 0x560781ce6410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560781d4b458 <line:854:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560781d4b440 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560781d4b400 <col:3> 'void (int)' Function 0x560781ce60d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x560781d4b498 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560781d4b480 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560781d4b420 <col:21> '_Bool' lvalue Var 0x560781d3feb8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x560781d4b4d0 <line:855:3, col:10>
      `-IntegerLiteral 0x560781d4b4b0 <col:10> 'int' 0
