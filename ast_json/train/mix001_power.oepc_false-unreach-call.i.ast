TranslationUnitDecl 0x560cef4a9f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x560cef4aa848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x560cef4aa520 '__int128'
|-TypedefDecl 0x560cef4aa8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x560cef4aa540 'unsigned __int128'
|-TypedefDecl 0x560cef4aabc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x560cef4aa990 'struct __NSConstantString_tag'
|   `-Record 0x560cef4aa910 '__NSConstantString_tag'
|-TypedefDecl 0x560cef4aac68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x560cef4aac20 'char *'
|   `-BuiltinType 0x560cef4aa020 'char'
|-TypedefDecl 0x560cef4e9b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x560cef4aaf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x560cef4aad40 'struct __va_list_tag'
|     `-Record 0x560cef4aacc0 '__va_list_tag'
|-FunctionDecl 0x560cef4e9c80 <pthread-wmm/mix001_power.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x560cef4e9e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x560cef4e9d80 <col:31> col:34 'int'
|-FunctionDecl 0x560cef4e9fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x560cef4ea0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x560cef4ea238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x560cef4ea1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x560cef4ea468 <col:40, col:99>
|   |-IfStmt 0x560cef4ea438 <col:42, col:88>
|   | |-UnaryOperator 0x560cef4ea318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x560cef4ea300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x560cef4ea2e0 <col:47> 'int' lvalue ParmVar 0x560cef4ea1a8 'expression' 'int'
|   | `-CompoundStmt 0x560cef4ea420 <col:59, col:88>
|   |   `-LabelStmt 0x560cef4ea408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x560cef4ea398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x560cef4ea380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x560cef4ea330 <col:68> 'void () __attribute__((noreturn))' Function 0x560cef4ea0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x560cef4ea450 <col:89>
|   `-ReturnStmt 0x560cef4ea458 <col:91>
|-FunctionDecl 0x560cef4ea4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x560cef4ea570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x560cef4ea8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560cef4ea628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x560cef4ea6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x560cef4ea728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560cef4ea7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560cef4ea9b0 <line:11:22>
|-FunctionDecl 0x560cef50ff10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560cef4eaa20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x560cef4eaaa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x560cef50fd40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560cef50fdc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560cef50ffd0 <line:14:22>
|-FunctionDecl 0x560cef510280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560cef510040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x560cef5100c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x560cef510140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x560cef510338 <line:16:22>
|-TypedefDecl 0x560cef5103a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x560cef4aa0e0 'unsigned char'
|-TypedefDecl 0x560cef510418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x560cef4aa100 'unsigned short'
|-TypedefDecl 0x560cef510488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x560cef4aa120 'unsigned int'
|-TypedefDecl 0x560cef5104f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-TypedefDecl 0x560cef510568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x560cef4aa040 'signed char'
|-TypedefDecl 0x560cef5105d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x560cef4aa0e0 'unsigned char'
|-TypedefDecl 0x560cef510648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x560cef4aa060 'short'
|-TypedefDecl 0x560cef5106b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x560cef4aa100 'unsigned short'
|-TypedefDecl 0x560cef510728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x560cef4aa080 'int'
|-TypedefDecl 0x560cef510798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x560cef4aa120 'unsigned int'
|-TypedefDecl 0x560cef510808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef510878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-TypedefDecl 0x560cef5108e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef510958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-TypedefDecl 0x560cef5109c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-TypedefDecl 0x560cef510a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x560cef4aa120 'unsigned int'
|-TypedefDecl 0x560cef510aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x560cef4aa120 'unsigned int'
|-TypedefDecl 0x560cef510b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-TypedefDecl 0x560cef510b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-TypedefDecl 0x560cef510bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x560cef4aa120 'unsigned int'
|-TypedefDecl 0x560cef510c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-TypedefDecl 0x560cef510cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef510d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef510dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x560cef4aa080 'int'
|-RecordDecl 0x560cef510e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x560cef510f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x560cef511030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x560cef510fd0 'struct __fsid_t' sugar
|   `-RecordType 0x560cef510eb0 '__fsid_t'
|     `-Record 0x560cef510e30 ''
|-TypedefDecl 0x560cef5110b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef511128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-TypedefDecl 0x560cef511198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-TypedefDecl 0x560cef511208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x560cef4aa120 'unsigned int'
|-TypedefDecl 0x560cef511278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef5112e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x560cef4aa120 'unsigned int'
|-TypedefDecl 0x560cef511358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef5113c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x560cef4aa080 'int'
|-TypedefDecl 0x560cef511438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x560cef4aa080 'int'
|-TypedefDecl 0x560cef5114a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x560cef4aa080 'int'
|-TypedefDecl 0x560cef511518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x560cef4aa7a0 'void *'
|   `-BuiltinType 0x560cef4a9fe0 'void'
|-TypedefDecl 0x560cef511588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef5115f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef511668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef5116d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-TypedefDecl 0x560cef511748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-TypedefDecl 0x560cef5117b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-TypedefDecl 0x560cef511828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-TypedefDecl 0x560cef511898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef511908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef511978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef5119e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-TypedefDecl 0x560cef511a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x560cef511a40 '__off64_t' sugar
|   |-Typedef 0x560cef510d68 '__off64_t'
|   `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef511b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x560cef511b30 '__quad_t *'
|   `-TypedefType 0x560cef511ad0 '__quad_t' sugar
|     |-Typedef 0x560cef5108e8 '__quad_t'
|     `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef511be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x560cef4aac20 'char *'
|   `-BuiltinType 0x560cef4aa020 'char'
|-TypedefDecl 0x560cef511c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef511cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x560cef4aa120 'unsigned int'
|-FunctionDecl 0x560cef511e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x560cef511d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x560cef512148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x560cef512138 <line:73:3, col:34>
|     `-CallExpr 0x560cef5120f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x560cef5120e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560cef512070 <col:10> '<builtin fn type>' Function 0x560cef511ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x560cef512120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560cef512090 <col:29> 'unsigned int' lvalue ParmVar 0x560cef511d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x560cef511ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x560cef511f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x560cef511ff0 <col:10> Implicit
| `-ConstAttr 0x560cef512048 <col:10> Implicit
|-FunctionDecl 0x560cef5122a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x560cef512198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x560cef5125b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x560cef5125a8 <line:78:3, col:34>
|     `-CallExpr 0x560cef512568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x560cef512550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560cef5124d8 <col:10> '<builtin fn type>' Function 0x560cef512348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x560cef512590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x560cef5124f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x560cef512198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x560cef512348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x560cef5123e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x560cef512458 <col:10> Implicit
| `-ConstAttr 0x560cef5124b0 <col:10> Implicit
|-TypedefDecl 0x560cef5125e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-TypedefDecl 0x560cef512678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x560cef512640 '__time_t' sugar
|   |-Typedef 0x560cef511278 '__time_t'
|   `-BuiltinType 0x560cef4aa0a0 'long'
|-RecordDecl 0x560cef5126d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x560cef512788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x560cef512818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x560cef5128a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x560cef512870 '__pid_t' sugar
|   |-Typedef 0x560cef510dd8 '__pid_t'
|   `-BuiltinType 0x560cef4aa080 'int'
|-RecordDecl 0x560cef512900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x560cef5129c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x560cef512a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x560cef512ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x560cef512b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-RecordDecl 0x560cef512b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x560cef514e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x560cef514f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x560cef514ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x560cef512c10 'cpu_set_t'
|     `-Record 0x560cef512b90 ''
|-FunctionDecl 0x560cef5151f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x560cef514fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560cef5150d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x560cef5152a8 <line:108:19>
|-FunctionDecl 0x560cef515480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x560cef515310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x560cef515528 <col:69>
|-FunctionDecl 0x560cef5156a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x560cef515590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x560cef515748 <col:64>
|-FunctionDecl 0x560cef515a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x560cef5157b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560cef5158e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560cef515ab8 <line:114:22>
|-FunctionDecl 0x560cef515e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x560cef515b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560cef515c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x560cef515f10 <col:88>
|-FunctionDecl 0x560cef5161c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560cef515f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560cef515ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x560cef516088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560cef516280 <col:62>
|-FunctionDecl 0x560cef5163f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x560cef5162e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x560cef5164a0 <col:63>
|-FunctionDecl 0x560cef5165c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x560cef516668 <col:47>
|-FunctionDecl 0x560cef516770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x560cef5166d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560cef516818 <col:69>
|-FunctionDecl 0x560cef516920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x560cef516888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560cef5169c8 <col:69>
|-FunctionDecl 0x560cef516c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560cef516a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560cef516b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x560cef516d38 <col:88>
|-TypedefDecl 0x560cef516dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560cef516d90 '__clock_t' sugar
|   |-Typedef 0x560cef5110b8 '__clock_t'
|   `-BuiltinType 0x560cef4aa0a0 'long'
|-TypedefDecl 0x560cef5177e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x560cef516e20 '__clockid_t' sugar
|   |-Typedef 0x560cef5114a8 '__clockid_t'
|   `-BuiltinType 0x560cef4aa080 'int'
|-TypedefDecl 0x560cef517878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560cef517840 '__timer_t' sugar
|   |-Typedef 0x560cef511518 '__timer_t'
|   `-PointerType 0x560cef4aa7a0 'void *'
|     `-BuiltinType 0x560cef4a9fe0 'void'
|-RecordDecl 0x560cef5178d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x560cef517990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x560cef5179f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x560cef517a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560cef517ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560cef517b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x560cef517b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560cef517c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x560cef517c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560cef517cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560cef517d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x560cef517da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560cef517df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x560cef517eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560cef517f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560cef517fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x560cef5181a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560cef518240 <col:45>
|-FunctionDecl 0x560cef518420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560cef518310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x560cef5184c8 <col:54>
|-FunctionDecl 0x560cef5186c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560cef518530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x560cef5185a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x560cef518778 <line:158:22>
| `-ConstAttr 0x560cef519410 <col:63>
|-FunctionDecl 0x560cef519610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560cef519508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560cef5196b8 <col:56>
|-FunctionDecl 0x560cef519a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560cef519728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x560cef5197a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560cef519820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560cef519918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560cef519b20 <col:54>
|-RecordDecl 0x560cef519b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x560cef519c28 parent 0x560cef4a9f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x560cef519e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560cef519f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x560cef519f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560cef519ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x560cef51a0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x560cef51a208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x560cef51a1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x560cef51a140 'struct __locale_struct' sugar
|     `-RecordType 0x560cef519c00 'struct __locale_struct'
|       `-Record 0x560cef519b78 '__locale_struct'
|-TypedefDecl 0x560cef51a2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x560cef51a280 '__locale_t' sugar
|   |-Typedef 0x560cef51a208 '__locale_t'
|   `-PointerType 0x560cef51a1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x560cef51a140 'struct __locale_struct' sugar
|       `-RecordType 0x560cef519c00 'struct __locale_struct'
|         `-Record 0x560cef519b78 '__locale_struct'
|-FunctionDecl 0x560cef51a6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x560cef51a328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x560cef51a3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560cef51a438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x560cef51a4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560cef51a540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x560cef51a778 <col:40>
|-FunctionDecl 0x560cef51a968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560cef51a840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x560cef51aa10 <col:66>
|-FunctionDecl 0x560cef51ab20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560cef51aa78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x560cef51abc8 <col:69>
|-FunctionDecl 0x560cef51adf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560cef51ac30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560cef51acc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560cef51aea8 <col:52>
|-FunctionDecl 0x560cef51b050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560cef51af10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560cef51afa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560cef51b100 <col:55>
|-FunctionDecl 0x560cef51b298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x560cef51b180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x560cef51b340 <col:62>
|-FunctionDecl 0x560cef51b578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x560cef51b3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x560cef51b620 <col:60>
|-FunctionDecl 0x560cef51b848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560cef51b6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560cef51b720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x560cef51b8f8 <col:44>
|-FunctionDecl 0x560cef51bb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560cef51b960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560cef51b9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x560cef51bbb8 <col:49>
|-VarDecl 0x560cef51bcb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x560cef51bd38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x560cef51bdb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x560cef51be80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x560cef51bfb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x560cef51c050 <col:42>
|-VarDecl 0x560cef51c0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x560cef51c140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x560cef51c2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x560cef51c1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x560cef51c370 <col:57>
|-FunctionDecl 0x560cef51d4f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560cef51c3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560cef51d598 <col:56>
|-FunctionDecl 0x560cef51d6a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560cef51d618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x560cef51d750 <col:59>
|-FunctionDecl 0x560cef51d858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x560cef51d7c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x560cef51d900 <col:48>
| `-ConstAttr 0x560cef51d958 <col:89>
|-FunctionDecl 0x560cef51dbb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560cef51da08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x560cef51da98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x560cef51de18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560cef51dca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560cef51dd38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x560cef51dec8 <col:88>
|-FunctionDecl 0x560cef51e060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560cef51df30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560cef51dfc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x560cef51e110 <col:88>
|-FunctionDecl 0x560cef51e328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x560cef51e178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560cef51e208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x560cef51e3d8 <line:209:22>
|-FunctionDecl 0x560cef51e778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560cef51e440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560cef51e500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x560cef51e590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x560cef51e620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x560cef51ea78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x560cef51e878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x560cef51e950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x560cef51eb28 <col:85>
|-FunctionDecl 0x560cef51ef18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x560cef51eb90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560cef51ecc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x560cef51edd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x560cef51efd0 <col:52>
|-FunctionDecl 0x560cef51f148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x560cef51f038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560cef51f1f0 <col:61>
|-FunctionDecl 0x560cef51f668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x560cef51f258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560cef51f2d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x560cef51f408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x560cef51f510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x560cef51f728 <col:62>
|-FunctionDecl 0x560cef51f948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x560cef51f790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560cef51f820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x560cef51f9f8 <line:222:22>
|-FunctionDecl 0x560cef51faf8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x560cef51fa60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560cef51fba0 <col:65>
|-TypedefDecl 0x560cef51fc10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x560cef4aa140 'unsigned long'
|-RecordDecl 0x560cef51fc68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x560cef51fdb0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560cef51fe18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560cef51fec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x560cef51fe70 'union pthread_attr_t' sugar
|   `-RecordType 0x560cef51fcf0 'union pthread_attr_t'
|     `-Record 0x560cef51fc68 'pthread_attr_t'
|-RecordDecl 0x560cef51ff20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560cef520098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560cef520110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x560cef5201c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560cef520160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x560cef51ffa0 'struct __pthread_internal_list'
|     `-Record 0x560cef51ff20 '__pthread_internal_list'
|-RecordDecl 0x560cef520230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x560cef5202d8 parent 0x560cef4a9f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x560cef5203b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560cef520418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560cef520480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560cef524530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560cef524598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560cef524600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x560cef524688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x560cef524740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x560cef524830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x560cef524898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560cef524a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x560cef5249c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x560cef5202b0 'pthread_mutex_t'
|     `-Record 0x560cef520230 ''
|-RecordDecl 0x560cef524a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x560cef524bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560cef524c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560cef524cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x560cef524c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x560cef524b10 'pthread_mutexattr_t'
|     `-Record 0x560cef524a90 ''
|-RecordDecl 0x560cef524d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x560cef524e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x560cef524ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560cef524f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x560cef524fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x560cef525008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x560cef525070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x560cef5250d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x560cef525140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x560cef5251a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x560cef525260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix001_power.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix001_power.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x560cef525350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x560cef5253b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x560cef525540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x560cef525490 'union pthread_cond_t' sugar
|   `-RecordType 0x560cef524de0 'pthread_cond_t'
|     `-Record 0x560cef524d60 ''
|-RecordDecl 0x560cef5255b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x560cef5256b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560cef525718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560cef5257d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x560cef525770 'union pthread_condattr_t' sugar
|   `-RecordType 0x560cef525630 'pthread_condattr_t'
|     `-Record 0x560cef5255b0 ''
|-TypedefDecl 0x560cef525858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x560cef4aa120 'unsigned int'
|-TypedefDecl 0x560cef5258c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x560cef4aa080 'int'
|-RecordDecl 0x560cef525920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x560cef5259c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x560cef525a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560cef525af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x560cef525b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x560cef525bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x560cef525c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x560cef525c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x560cef525d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x560cef525d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x560cef525dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x560cef525e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x560cef525ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x560cef525f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix001_power.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix001_power.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x560cef525ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560cef526060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560cef5261b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x560cef526150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x560cef5259a0 'pthread_rwlock_t'
|     `-Record 0x560cef525920 ''
|-RecordDecl 0x560cef526220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x560cef526360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x560cef5263c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560cef526480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x560cef526420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x560cef5262a0 'pthread_rwlockattr_t'
|     `-Record 0x560cef526220 ''
|-TypedefDecl 0x560cef528560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x560cef4aa084 'volatile int' volatile
|   `-BuiltinType 0x560cef4aa080 'int'
|-RecordDecl 0x560cef5285b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x560cef528700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x560cef528768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560cef528820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x560cef5287c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x560cef528640 'pthread_barrier_t'
|     `-Record 0x560cef5285b8 ''
|-RecordDecl 0x560cef528890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x560cef528990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560cef5289f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560cef528ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560cef528a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560cef528910 'pthread_barrierattr_t'
|     `-Record 0x560cef528890 ''
|-TypedefDecl 0x560cef528bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x560cef528b60 'long [8]' 8 
|   `-BuiltinType 0x560cef4aa0a0 'long'
|-EnumDecl 0x560cef528c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x560cef528ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560cef528d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x560cef528d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x560cef528e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x560cef528ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560cef528ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560cef528f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560cef528fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x560cef528fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x560cef528f98 <col:26> 'int' EnumConstant 0x560cef528e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560cef529058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560cef529040 <col:29> 'int'
| |   `-DeclRefExpr 0x560cef529020 <col:29> 'int' EnumConstant 0x560cef528ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x560cef5290e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x560cef5290c8 <col:30> 'int'
| |   `-DeclRefExpr 0x560cef5290a8 <col:30> 'int' EnumConstant 0x560cef528ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560cef529168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560cef529150 <col:27> 'int'
|     `-DeclRefExpr 0x560cef529130 <col:27> 'int' EnumConstant 0x560cef528fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x560cef5291b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x560cef529288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560cef529310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x560cef5292f8 <col:30> 'int'
| |   `-DeclRefExpr 0x560cef5292d8 <col:30> 'int' EnumConstant 0x560cef529288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560cef529360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x560cef5293e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x560cef5293d0 <col:29> 'int'
|     `-DeclRefExpr 0x560cef5293b0 <col:29> 'int' EnumConstant 0x560cef529360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560cef529438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x560cef529508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560cef529570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x560cef5295c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560cef529610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x560cef5296d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x560cef529728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x560cef529778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560cef529800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x560cef5297e8 <col:31> 'int'
|     `-DeclRefExpr 0x560cef5297c8 <col:31> 'int' EnumConstant 0x560cef5296d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x560cef529850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x560cef529918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x560cef529968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x560cef5299b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x560cef529a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560cef529ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x560cef529b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x560cef529bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x560cef529c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560cef529c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560cef529ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x560cef529f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560cef529fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x560cef52a0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x560cef52a118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x560cef52a1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x560cef52a238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x560cef52a288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x560cef52a358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x560cef52a3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x560cef52a9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x560cef52a4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x560cef52a5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cef52a7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x560cef52a840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x560cef52aa98 <col:47>
| |-NonNullAttr 0x560cef52aaf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x560cef52ab28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x560cef52ac50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x560cef52ab80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x560cef52aea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x560cef52ad08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x560cef52ad88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x560cef52b078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x560cef52af68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x560cef52b120 <col:60>
|-FunctionDecl 0x560cef52b270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x560cef52b310 <col:54>
| `-ConstAttr 0x560cef52b368 <col:95>
|-FunctionDecl 0x560cef52bda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x560cef52b3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560cef52b418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x560cef52be50 <line:395:19>
| `-ConstAttr 0x560cef52bea8 <col:60>
|-FunctionDecl 0x560cef52c078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560cef52bf40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560cef52c120 <col:71>
| `-NonNullAttr 0x560cef52c178 <col:112, col:126> 1
|-FunctionDecl 0x560cef52c280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560cef52c1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560cef52c328 <line:398:22>
| `-NonNullAttr 0x560cef52c380 <col:63, col:77> 1
|-FunctionDecl 0x560cef52c5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x560cef52c3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560cef52c448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x560cef52c658 <line:401:22>
| `-NonNullAttr 0x560cef52c6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef52c8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560cef52c6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cef52c778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x560cef52c968 <line:404:22>
| `-NonNullAttr 0x560cef52c9c0 <col:63, col:77> 1
|-FunctionDecl 0x560cef52cc18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x560cef52ca08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560cef52cab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x560cef52ccc8 <line:407:22>
| `-NonNullAttr 0x560cef52cd20 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef52df78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560cef52ddc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cef52de38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560cef52e028 <line:410:22>
| `-NonNullAttr 0x560cef52e080 <col:63, col:77> 1
|-FunctionDecl 0x560cef52e2b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560cef52e0c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cef52e158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560cef52e368 <line:413:22>
| `-NonNullAttr 0x560cef52e3c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef52e5f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560cef52e408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cef52e498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x560cef52e6a8 <col:37>
| `-NonNullAttr 0x560cef52e700 <col:78, col:95> 1 2
|-FunctionDecl 0x560cef52e8e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cef52e748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cef52e7c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x560cef52e998 <line:419:22>
| `-NonNullAttr 0x560cef52e9f0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef52eb78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560cef52ea38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cef52eab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x560cef52ec28 <line:421:22>
| `-NonNullAttr 0x560cef52ec80 <col:63, col:77> 1
|-FunctionDecl 0x560cef52fe58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cef52ecc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cef52ed48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x560cef52ff08 <line:424:22>
| `-NonNullAttr 0x560cef52ff60 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef5300e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560cef52ffa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cef530028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560cef530198 <line:427:22>
| `-NonNullAttr 0x560cef5301f0 <col:63, col:77> 1
|-FunctionDecl 0x560cef530398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cef530238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cef5302b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560cef530448 <line:430:22>
| `-NonNullAttr 0x560cef5304a0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef530628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560cef5304e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cef530568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x560cef5306d8 <line:432:22>
| `-NonNullAttr 0x560cef530730 <col:63, col:77> 1
|-FunctionDecl 0x560cef530958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x560cef530778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cef5307f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560cef530a08 <line:435:22>
| |-NonNullAttr 0x560cef530a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x560cef530a98 <col:100> "" ""
|-FunctionDecl 0x560cef530ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560cef530ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cef530b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x560cef530d58 <line:438:22>
| |-NonNullAttr 0x560cef530db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x560cef530df8 <col:97> "" ""
|-FunctionDecl 0x560cef530fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560cef530e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cef530ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560cef531098 <line:441:22>
| `-NonNullAttr 0x560cef5310f0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef531270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560cef531138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cef5311b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560cef531320 <line:444:22>
| `-NonNullAttr 0x560cef531378 <col:63, col:77> 1
|-FunctionDecl 0x560cef531668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560cef5313c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cef531448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x560cef5314c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560cef531720 <line:448:22>
| `-NonNullAttr 0x560cef531778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x560cef531a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x560cef5317d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cef531850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x560cef5318c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560cef531ae0 <col:43>
| `-NonNullAttr 0x560cef531b38 <col:84, col:98> 1
|-FunctionDecl 0x560cef531e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560cef531b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560cef531c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x560cef531c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x560cef531ef8 <line:453:22>
| `-NonNullAttr 0x560cef531f50 <col:63, col:77> 3
|-FunctionDecl 0x560cef532228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560cef531f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560cef532018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x560cef5320a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560cef5322e0 <line:457:22>
| `-NonNullAttr 0x560cef532338 <col:63, col:80> 2 3
|-FunctionDecl 0x560cef532528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x560cef532388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560cef532408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x560cef5325d8 <line:459:22>
|-FunctionDecl 0x560cef5329a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x560cef5326a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x560cef532840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x560cef532a58 <col:52, col:69> 1 2
|-FunctionDecl 0x560cef532c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x560cef532ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x560cef532b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x560cef532e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x560cef532cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x560cef532d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x560cef532f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x560cef532ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x560cef5330a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x560cef533148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x560cef5331f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x560cef5332e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x560cef533350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x560cef533520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix001_power.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x560cef533618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x560cef5336d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x560cef533670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x560cef5331d0 '__pthread_unwind_buf_t'
| |   `-Record 0x560cef533148 ''
| `-AlignedAttr 0x560cef533728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x560cef5337a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x560cef533900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x560cef533968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x560cef5339d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x560cef533a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x560cef533c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560cef533b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560cef533e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560cef533cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560cef533fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560cef533ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x560cef534088 <line:488:22>
|-RecordDecl 0x560cef5340e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x560cef5343f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x560cef534258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x560cef5342d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x560cef5344a8 <col:86>
| `-ReturnsTwiceAttr 0x560cef534500 <col:12> Implicit
|-FunctionDecl 0x560cef534828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560cef5345d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x560cef5346e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x560cef5348d8 <line:494:22>
| `-NonNullAttr 0x560cef534930 <col:63, col:77> 1
|-FunctionDecl 0x560cef534aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560cef534978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560cef534b50 <line:496:22>
| `-NonNullAttr 0x560cef534ba8 <col:63, col:77> 1
|-FunctionDecl 0x560cef534cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560cef534bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560cef534d58 <line:498:22>
| `-NonNullAttr 0x560cef534db0 <col:52, col:66> 1
|-FunctionDecl 0x560cef534ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560cef534e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560cef534f90 <line:500:22>
| `-NonNullAttr 0x560cef534fe8 <col:52, col:66> 1
|-FunctionDecl 0x560cef535228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560cef535038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560cef5350c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560cef5352d8 <col:36>
| `-NonNullAttr 0x560cef535330 <col:66, col:83> 1 2
|-FunctionDecl 0x560cef535430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560cef535378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560cef5354d8 <line:505:22>
| `-NonNullAttr 0x560cef535530 <col:52, col:66> 1
|-FunctionDecl 0x560cef5357c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cef5355e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560cef535660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560cef535878 <line:509:22>
| `-NonNullAttr 0x560cef5358d0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef535b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x560cef535918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560cef535998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x560cef535a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x560cef535c50 <line:513:22>
| `-NonNullAttr 0x560cef535ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x560cef535e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560cef535cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560cef535ee8 <line:515:22>
| `-NonNullAttr 0x560cef535f40 <col:63, col:77> 1
|-FunctionDecl 0x560cef536128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560cef535ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560cef5361d0 <line:517:22>
| `-NonNullAttr 0x560cef536228 <col:63, col:77> 1
|-FunctionDecl 0x560cef536330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560cef536278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560cef5363d8 <line:519:22>
| `-NonNullAttr 0x560cef536430 <col:63, col:77> 1
|-FunctionDecl 0x560cef536658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cef536478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560cef5364f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x560cef536708 <line:523:22>
| `-NonNullAttr 0x560cef536760 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef536968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560cef5367a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cef536828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x560cef536a18 <line:526:22>
| `-NonNullAttr 0x560cef536a70 <col:63, col:77> 1
|-FunctionDecl 0x560cef536c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cef536ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560cef536b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560cef536cc8 <line:529:22>
| `-NonNullAttr 0x560cef536d20 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef537f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560cef536d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cef537e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560cef537fd0 <line:531:22>
| `-NonNullAttr 0x560cef538028 <col:63, col:77> 1
|-FunctionDecl 0x560cef5381d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cef538078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560cef5380f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560cef538288 <line:535:22>
| `-NonNullAttr 0x560cef5382e0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef538468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560cef538328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cef5383a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560cef538518 <line:538:22>
| `-NonNullAttr 0x560cef538570 <col:63, col:77> 1
|-FunctionDecl 0x560cef538718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cef5385b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560cef538638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560cef5387c8 <line:542:22>
| `-NonNullAttr 0x560cef538820 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef5389a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560cef538868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cef5388e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x560cef538a58 <line:545:22>
| `-NonNullAttr 0x560cef538ab0 <col:63, col:77> 1
|-FunctionDecl 0x560cef538c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560cef538af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cef538b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560cef538d48 <line:548:22>
| `-NonNullAttr 0x560cef538da0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef539f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560cef538de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cef539e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x560cef53a008 <line:551:22>
| `-NonNullAttr 0x560cef53a060 <col:63, col:77> 1
|-FunctionDecl 0x560cef53a398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x560cef53a140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560cef53a250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x560cef53a448 <col:29>
| `-NonNullAttr 0x560cef53a4a0 <col:70, col:84> 1
|-FunctionDecl 0x560cef53a618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cef53a4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cef53a6c0 <line:556:22>
| `-NonNullAttr 0x560cef53a718 <col:63, col:77> 1
|-FunctionDecl 0x560cef53a820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cef53a768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cef53a8c8 <line:558:22>
| `-NonNullAttr 0x560cef53a920 <col:52, col:66> 1
|-FunctionDecl 0x560cef53aa20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cef53a968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cef53aac8 <line:560:19>
| `-NonNullAttr 0x560cef53ab20 <col:49, col:63> 1
|-FunctionDecl 0x560cef53ad58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560cef53ab68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560cef53abf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560cef53ae08 <col:39>
| `-NonNullAttr 0x560cef53ae90 <col:69, col:86> 1 2
|-FunctionDecl 0x560cef53af90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cef53aed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cef53b038 <line:565:22>
| `-NonNullAttr 0x560cef53b090 <col:52, col:66> 1
|-FunctionDecl 0x560cef53b190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cef53b0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cef53b238 <line:567:22>
| `-NonNullAttr 0x560cef53b290 <col:52, col:66> 1
|-FunctionDecl 0x560cef53b448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560cef53b2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560cef53b368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560cef53b4f8 <col:39>
| `-NonNullAttr 0x560cef53b550 <col:69, col:86> 1 2
|-FunctionDecl 0x560cef53b650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cef53b598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cef53b6f8 <line:572:22>
| `-NonNullAttr 0x560cef53b750 <col:52, col:66> 1
|-FunctionDecl 0x560cef53b938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560cef53b800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560cef53b9e0 <line:574:22>
| `-NonNullAttr 0x560cef53ba38 <col:63, col:77> 1
|-FunctionDecl 0x560cef53bb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560cef53ba88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560cef53bbe8 <line:576:22>
| `-NonNullAttr 0x560cef53bc40 <col:63, col:77> 1
|-FunctionDecl 0x560cef53bea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cef53bc88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560cef53bd08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x560cef53bf50 <line:580:22>
| `-NonNullAttr 0x560cef53bfa8 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef53c1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560cef53bff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560cef53c078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x560cef53c268 <line:583:22>
| `-NonNullAttr 0x560cef53c2c0 <col:63, col:77> 1
|-FunctionDecl 0x560cef53c468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cef53c308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560cef53c388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x560cef53c518 <line:587:22>
| `-NonNullAttr 0x560cef53c570 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef53c6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560cef53c5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560cef53c638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x560cef53c7a8 <col:36>
| `-NonNullAttr 0x560cef53c800 <col:77, col:91> 1
|-FunctionDecl 0x560cef53cb38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x560cef53c8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560cef53c9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x560cef53cbe8 <line:592:22>
| `-NonNullAttr 0x560cef53cc40 <col:63, col:77> 1
|-FunctionDecl 0x560cef53cdb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560cef53cc88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560cef53ce60 <line:594:22>
| `-NonNullAttr 0x560cef53cee0 <col:63, col:77> 1
|-FunctionDecl 0x560cef53cfe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560cef53cf28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560cef53d088 <line:596:22>
| `-NonNullAttr 0x560cef53d0e0 <col:52, col:66> 1
|-FunctionDecl 0x560cef53d1e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560cef53d128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560cef53d288 <line:598:22>
| `-NonNullAttr 0x560cef53d2e0 <col:52, col:66> 1
|-FunctionDecl 0x560cef53d508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x560cef53d328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560cef53d3a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x560cef53d5b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x560cef53d8e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560cef53d638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560cef53d6b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560cef53d740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x560cef53d9a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x560cef53dbb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560cef53da80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560cef53dc60 <line:607:22>
| `-NonNullAttr 0x560cef53dcb8 <col:63, col:77> 1
|-FunctionDecl 0x560cef53ddc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560cef53dd08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560cef53de68 <line:609:22>
| `-NonNullAttr 0x560cef53def0 <col:63, col:77> 1
|-FunctionDecl 0x560cef53e118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cef53df38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560cef53dfb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x560cef53e1c8 <line:613:22>
| `-NonNullAttr 0x560cef53e220 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef53e428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x560cef53e268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560cef53e2e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x560cef53e4d8 <col:37>
| `-NonNullAttr 0x560cef53e530 <col:78, col:92> 1
|-FunctionDecl 0x560cef53e748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x560cef53e578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560cef53e620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x560cef53e7f8 <line:619:22>
| `-NonNullAttr 0x560cef53e850 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef53ea18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x560cef53e898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560cef53e910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x560cef53eac8 <line:622:22>
| `-NonNullAttr 0x560cef53eb20 <col:63, col:77> 1
|-FunctionDecl 0x560cef53edc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x560cef53ec00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x560cef53ec80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x560cef53ee78 <line:624:22>
| `-NonNullAttr 0x560cef53ef00 <col:63, col:77> 1
|-FunctionDecl 0x560cef53f078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560cef53ef48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560cef53f120 <line:626:22>
| `-NonNullAttr 0x560cef53f178 <col:63, col:77> 1
|-FunctionDecl 0x560cef53f280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560cef53f1c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560cef53f328 <line:628:22>
| `-NonNullAttr 0x560cef53f380 <col:52, col:66> 1
|-FunctionDecl 0x560cef53f480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560cef53f3c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560cef53f528 <line:630:22>
| `-NonNullAttr 0x560cef53f580 <col:52, col:66> 1
|-FunctionDecl 0x560cef53f680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560cef53f5c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560cef53f728 <line:632:22>
| `-NonNullAttr 0x560cef53f780 <col:52, col:66> 1
|-FunctionDecl 0x560cef53fb58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x560cef53f860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x560cef53f970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560cef53f9f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x560cef53fc10 <line:636:22>
| `-NonNullAttr 0x560cef53fc68 <col:63, col:77> 1
|-FunctionDecl 0x560cef53fde8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560cef53fcb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560cef53fe90 <line:638:22>
| `-NonNullAttr 0x560cef53ff10 <col:63, col:77> 1
|-FunctionDecl 0x560cef540010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560cef53ff58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560cef5400b8 <line:640:22>
| `-NonNullAttr 0x560cef540110 <col:52, col:66> 1
|-FunctionDecl 0x560cef5402f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560cef5401c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560cef5403a0 <line:642:22>
| `-NonNullAttr 0x560cef5403f8 <col:63, col:77> 1
|-FunctionDecl 0x560cef540500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560cef540448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560cef5405a8 <line:644:22>
| `-NonNullAttr 0x560cef540600 <col:63, col:77> 1
|-FunctionDecl 0x560cef540828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cef540648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560cef5406c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x560cef5408d8 <line:648:22>
| `-NonNullAttr 0x560cef540930 <col:63, col:80> 1 2
|-FunctionDecl 0x560cef540b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x560cef540978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x560cef5409f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x560cef540be8 <line:651:22>
| `-NonNullAttr 0x560cef540c40 <col:63, col:77> 1
|-FunctionDecl 0x560cef540fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x560cef540d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x560cef540e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x560cef541058 <line:654:22>
| `-NonNullAttr 0x560cef5410b0 <col:63, col:77> 1
|-FunctionDecl 0x560cef541208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x560cef5410f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560cef5412b0 <col:69>
|-FunctionDecl 0x560cef541428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x560cef541318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560cef5414d0 <col:72>
|-FunctionDecl 0x560cef541708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x560cef541538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x560cef5415e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x560cef5417b8 <col:44>
|-FunctionDecl 0x560cef5419d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x560cef541820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560cef541898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x560cef541a88 <line:661:22>
| `-NonNullAttr 0x560cef541ae0 <col:63, col:77> 2
|-FunctionDecl 0x560cef542f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x560cef541bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x560cef541cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x560cef541de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x560cef543008 <col:47>
|-FunctionDecl 0x560cef543110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x560cef543078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560cef543268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x560cef5431d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560cef5433c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x560cef543328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560cef543488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x560cef543548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x560cef543608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x560cef5436c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x560cef543740 prev 0x560cef5436c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x560cef5437a8 <col:24> 'int' 0
|-VarDecl 0x560cef5437e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x560cef543860 prev 0x560cef5437e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x560cef5438c8 <col:27> 'int' 0
|-VarDecl 0x560cef543900 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x560cef543980 prev 0x560cef543900 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x560cef5439e8 <col:27> 'int' 0
|-VarDecl 0x560cef543a20 <line:678:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x560cef543aa0 prev 0x560cef543a20 <line:679:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x560cef543b08 <col:27> 'int' 0
|-VarDecl 0x560cef543b40 <line:680:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x560cef543bc0 prev 0x560cef543b40 <line:681:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x560cef543c28 <col:27> 'int' 0
|-VarDecl 0x560cef543c60 <line:682:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x560cef543ce0 prev 0x560cef543c60 <line:683:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x560cef543d48 <col:27> 'int' 0
|-VarDecl 0x560cef543d80 <line:684:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x560cef543e00 prev 0x560cef543d80 <line:685:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x560cef543e68 <col:27> 'int' 0
|-VarDecl 0x560cef543e98 <line:686:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x560cef543f20 <line:687:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x560cef543fa0 <line:688:1, col:5> col:5 used x 'int'
|-VarDecl 0x560cef544020 prev 0x560cef543fa0 <line:689:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x560cef544088 <col:9> 'int' 0
|-VarDecl 0x560cef5440c0 <line:690:1, col:5> col:5 used y 'int'
|-VarDecl 0x560cef544140 prev 0x560cef5440c0 <line:691:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x560cef5441a8 <col:9> 'int' 0
|-VarDecl 0x560cef5441e0 <line:692:1, col:5> col:5 used z 'int'
|-VarDecl 0x560cef544260 prev 0x560cef5441e0 <line:693:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x560cef5442c8 <col:9> 'int' 0
|-VarDecl 0x560cef5442f8 <line:694:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x560cef544378 <line:695:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x560cef5443f0 <line:696:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x560cef544468 <line:697:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x560cef5444e0 <line:698:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x560cef544558 <line:699:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x560cef5445d0 <line:700:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x560cef544648 <line:701:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x560cef5446c0 <line:702:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x560cef544738 <line:703:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x560cef5447b0 <line:704:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x560cef544830 <line:705:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x560cef5448b0 <line:706:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x560cef544928 <line:707:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x560cef5449a8 <line:708:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x560cef544a20 <line:709:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x560cef544a98 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x560cef544b10 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x560cef544c28 prev 0x560cef543110 <line:712:1, line:756:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x560cef544b90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560cef548f70 <line:713:1, line:756:1>
|   |-CallExpr 0x560cef544d38 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cef544d20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef544cd0 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cef544db0 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560cef544d58 <col:3> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x560cef544d98 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cef544d78 <col:15> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x560cef544e10 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560cef544dd0 <col:3> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x560cef544df0 <col:15> 'int' 1
|   |-BinaryOperator 0x560cef544e88 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560cef544e30 <col:3> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cef544e70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cef544e50 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cef544f30 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560cef544ea8 <col:3> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x560cef544ef8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560cef544ec8 <col:27> 'int' 1
|   |-CallExpr 0x560cef5450b8 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x560cef5450a0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560cef544f50 <col:3> 'void (int)' Function 0x560cef4ea238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x560cef545050 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x560cef545030 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x560cef545010 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x560cef544fc8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x560cef544fb0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560cef544f70 <col:23> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x560cef544ff8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x560cef544fe0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x560cef544f90 <col:41> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cef545138 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560cef5450e0 <col:3> '_Bool' lvalue Var 0x560cef5445d0 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x560cef545120 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cef545100 <col:20> '_Bool' lvalue Var 0x560cef5443f0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x560cef5451b0 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560cef545158 <col:3> '_Bool' lvalue Var 0x560cef544648 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560cef545198 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cef545178 <col:20> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560cef545228 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560cef5451d0 <col:3> '_Bool' lvalue Var 0x560cef5446c0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560cef545210 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cef5451f0 <col:20> '_Bool' lvalue Var 0x560cef5444e0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560cef5452a0 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560cef545248 <col:3> '_Bool' lvalue Var 0x560cef544738 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560cef545288 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cef545268 <col:20> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560cef545338 <line:724:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560cef5452c0 <col:3> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x560cef545310 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560cef5452e0 <col:27> 'int' 1
|   |-CallExpr 0x560cef545390 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cef545378 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef545358 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cef5453e8 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cef5453d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef5453b0 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cef5454b8 <line:727:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560cef545408 <col:3> '_Bool' lvalue Var 0x560cef544a98 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x560cef545498 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560cef545480 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560cef545428 <col:19> '_Bool (void)' Function 0x560cef4e9c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560cef545550 <line:728:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560cef5454d8 <col:3> '_Bool' lvalue Var 0x560cef544b10 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x560cef545530 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560cef545518 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560cef5454f8 <col:19> '_Bool (void)' Function 0x560cef4e9c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560cef5455c8 <line:729:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560cef545570 <col:3> '_Bool' lvalue Var 0x560cef5442f8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560cef5455b0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cef545590 <col:21> '_Bool' lvalue Var 0x560cef544b10 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560cef545640 <line:730:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560cef5455e8 <col:3> 'int' lvalue Var 0x560cef544378 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560cef545628 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cef545608 <col:15> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   |-BinaryOperator 0x560cef545a78 <line:731:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560cef545660 <col:3> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   | `-ConditionalOperator 0x560cef545a48 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560cef545870 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560cef545790 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560cef5456b8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560cef5456a0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560cef545680 <col:8> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560cef545770 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560cef545708 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560cef5456f0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560cef5456d0 <col:27> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x560cef545758 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560cef545740 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560cef545720 <col:46> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560cef545850 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560cef5457e8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560cef5457d0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560cef5457b0 <col:65> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x560cef545838 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560cef545820 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560cef545800 <col:84> '_Bool' lvalue Var 0x560cef544648 'z$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x560cef545a30 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cef545890 <col:101> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   |   `-ParenExpr 0x560cef545a10 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560cef5459e0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560cef545950 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560cef545908 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560cef5458f0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560cef5458b0 <col:106> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560cef545938 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560cef545920 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560cef5458d0 <col:124> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560cef5459b0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cef545970 <col:141> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560cef5459c8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef545990 <col:153> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x560cef545fa0 <line:732:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560cef545a98 <col:3> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x560cef545f70 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560cef545f40 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cef545f10 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cef545ab8 <col:15> '_Bool' lvalue Var 0x560cef544b10 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560cef545f58 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cef545ad8 <col:31> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560cef545ef0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560cef545ec0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560cef545ce8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560cef545c08 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560cef545b30 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560cef545b18 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560cef545af8 <col:45> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560cef545be8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560cef545b80 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560cef545b68 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560cef545b48 <col:64> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x560cef545bd0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560cef545bb8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560cef545b98 <col:83> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560cef545cc8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560cef545c60 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560cef545c48 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560cef545c28 <col:102> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x560cef545cb0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560cef545c98 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560cef545c78 <col:121> '_Bool' lvalue Var 0x560cef544648 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560cef545ea8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cef545d08 <col:138> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x560cef545e88 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560cef545e58 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560cef545dc8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560cef545d80 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560cef545d68 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560cef545d28 <col:151> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560cef545db0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560cef545d98 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560cef545d48 <col:169> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x560cef545e28 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560cef545de8 <col:186> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560cef545e40 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560cef545e08 <col:198> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x560cef5464b0 <line:733:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560cef545fc0 <col:3> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x560cef546480 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560cef546450 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cef546438 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cef545fe0 <col:15> '_Bool' lvalue Var 0x560cef544b10 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560cef546468 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cef546000 <col:31> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x560cef546418 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560cef5463e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560cef546210 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560cef546130 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560cef546058 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560cef546040 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560cef546020 <col:45> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560cef546110 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560cef5460a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560cef546090 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560cef546070 <col:64> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x560cef5460f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560cef5460e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560cef5460c0 <col:83> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560cef5461f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560cef546188 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560cef546170 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560cef546150 <col:102> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x560cef5461d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560cef5461c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560cef5461a0 <col:121> '_Bool' lvalue Var 0x560cef544648 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560cef5463d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cef546230 <col:138> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x560cef5463b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560cef546380 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560cef5462f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560cef5462a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560cef546290 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560cef546250 <col:151> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560cef5462d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560cef5462c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560cef546270 <col:169> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x560cef546350 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560cef546310 <col:186> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560cef546368 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560cef546330 <col:198> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x560cef546a58 <line:734:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560cef5464d0 <col:3> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cef546a40 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef546a10 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560cef5469c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cef5469b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cef5464f0 <col:20> '_Bool' lvalue Var 0x560cef544b10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef5469f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cef5469e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cef546510 <col:36> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560cef546990 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560cef546960 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560cef546720 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cef546640 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cef546568 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cef546550 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cef546530 <col:55> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cef546620 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cef5465b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cef5465a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cef546580 <col:74> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560cef546608 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cef5465f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cef5465d0 <col:93> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cef546700 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cef546698 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cef546680 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cef546660 <col:112> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560cef5466e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cef5466d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cef5466b0 <col:131> '_Bool' lvalue Var 0x560cef544648 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560cef546948 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cef546930 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cef546740 <col:148> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560cef546910 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560cef5468e0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560cef546800 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cef5467b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cef5467a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cef546760 <col:166> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cef5467e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cef5467d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cef546780 <col:184> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560cef546898 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cef546850 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cef546820 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cef5468c8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560cef5468b0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560cef546878 <col:212> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cef547048 <line:735:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560cef546a78 <col:3> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cef547030 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef547000 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560cef546fb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cef546fa0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cef546a98 <col:20> '_Bool' lvalue Var 0x560cef544b10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef546fe8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cef546fd0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cef546ab8 <col:36> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560cef546f80 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560cef546f50 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560cef546cc8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cef546be8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cef546b10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cef546af8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cef546ad8 <col:55> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cef546bc8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cef546b60 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cef546b48 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cef546b28 <col:74> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560cef546bb0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cef546b98 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cef546b78 <col:93> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cef546ca8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cef546c40 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cef546c28 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cef546c08 <col:112> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560cef546c90 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cef546c78 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cef546c58 <col:131> '_Bool' lvalue Var 0x560cef544648 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560cef546f10 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cef546ef8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cef546ce8 <col:148> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560cef546ed8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560cef546ea8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560cef546da8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cef546d60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cef546d48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cef546d08 <col:166> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cef546d90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cef546d78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cef546d28 <col:184> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560cef546e78 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cef546df8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cef546dc8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cef546e90 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560cef546e50 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560cef546e20 <col:219> 'int' 0
|   |-BinaryOperator 0x560cef5475f0 <line:736:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560cef547068 <col:3> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560cef5475d8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef5475a8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560cef547560 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cef547548 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cef547088 <col:20> '_Bool' lvalue Var 0x560cef544b10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef547590 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cef547578 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cef5470a8 <col:36> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x560cef547528 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560cef5474f8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560cef5472b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cef5471d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cef547100 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cef5470e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cef5470c8 <col:55> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cef5471b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cef547150 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cef547138 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cef547118 <col:74> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560cef5471a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cef547188 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cef547168 <col:93> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cef547298 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cef547230 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cef547218 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cef5471f8 <col:112> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560cef547280 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cef547268 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cef547248 <col:131> '_Bool' lvalue Var 0x560cef544648 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560cef5474e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cef5474c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cef5472d8 <col:148> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x560cef5474a8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560cef547478 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560cef547398 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cef547350 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cef547338 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cef5472f8 <col:166> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cef547380 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cef547368 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cef547318 <col:184> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560cef547430 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cef5473e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cef5473b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cef547460 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560cef547448 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560cef547410 <col:212> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560cef547bb8 <line:737:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560cef547610 <col:3> '_Bool' lvalue Var 0x560cef544648 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560cef547ba0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef547b70 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560cef547b28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cef547b10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cef547630 <col:20> '_Bool' lvalue Var 0x560cef544b10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef547b58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cef547b40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cef547650 <col:36> '_Bool' lvalue Var 0x560cef544648 'z$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x560cef547af0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560cef547ac0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560cef547860 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cef547780 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cef5476a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cef547690 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cef547670 <col:55> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cef547760 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cef5476f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cef5476e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cef5476c0 <col:74> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560cef547748 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cef547730 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cef547710 <col:93> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cef547840 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cef5477d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cef5477c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cef5477a0 <col:112> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560cef547828 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cef547810 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cef5477f0 <col:131> '_Bool' lvalue Var 0x560cef544648 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560cef547aa8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cef547a90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cef547880 <col:148> '_Bool' lvalue Var 0x560cef544648 'z$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x560cef547a70 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560cef547a40 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560cef547940 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cef5478f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cef5478e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cef5478a0 <col:166> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cef547928 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cef547910 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cef5478c0 <col:184> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560cef547a10 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cef547990 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cef547960 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cef547a28 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560cef5479e8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560cef5479b8 <col:219> 'int' 0
|   |-BinaryOperator 0x560cef547c30 <line:738:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560cef547bd8 <col:3> 'int' lvalue Var 0x560cef543860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x560cef547c18 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cef547bf8 <col:25> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   |-BinaryOperator 0x560cef547d60 <line:739:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560cef547c50 <col:3> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   | `-ConditionalOperator 0x560cef547d30 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560cef547ce8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cef547cd0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cef547c70 <col:7> '_Bool' lvalue Var 0x560cef5442f8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560cef547d00 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cef547c90 <col:25> 'int' lvalue Var 0x560cef544378 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560cef547d18 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560cef547cb0 <col:37> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   |-BinaryOperator 0x560cef547df8 <line:740:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560cef547d80 <col:3> '_Bool' lvalue Var 0x560cef5442f8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560cef547dd0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560cef547da0 <col:28> 'int' 0
|   |-CallExpr 0x560cef547e50 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cef547e38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef547e18 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cef547ea8 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cef547e90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef547e70 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cef547f20 <line:743:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560cef547ec8 <col:3> 'int' lvalue Var 0x560cef543980 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x560cef547f08 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cef547ee8 <col:25> 'int' lvalue Var 0x560cef544020 'x' 'int'
|   |-CallExpr 0x560cef547f98 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cef547f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef547f60 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cef547ff0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cef547fd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef547fb8 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cef5482d8 <line:746:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560cef548010 <col:3> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   | `-ConditionalOperator 0x560cef5482a8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560cef5480d0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560cef548088 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560cef548070 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560cef548030 <col:7> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560cef5480b8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560cef5480a0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560cef548050 <col:25> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x560cef548290 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cef5480f0 <col:42> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560cef548270 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560cef548240 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560cef5481b0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560cef548168 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560cef548150 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560cef548110 <col:55> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560cef548198 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560cef548180 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560cef548130 <col:73> '_Bool' lvalue Var 0x560cef544648 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560cef548210 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cef5481d0 <col:90> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560cef548228 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef5481f0 <col:102> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   |-BinaryOperator 0x560cef5484e0 <line:747:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560cef5482f8 <col:3> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cef5484c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef548498 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560cef5483b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560cef548370 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560cef548358 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560cef548318 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560cef5483a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560cef548388 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560cef548338 <col:38> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef548450 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cef548408 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cef5483d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560cef548480 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cef548468 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef548430 <col:66> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cef5487c8 <line:748:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560cef548500 <col:3> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cef5487b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef548780 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560cef5486a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560cef5485c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560cef548578 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560cef548560 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560cef548520 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560cef5485a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560cef548590 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560cef548540 <col:38> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560cef548680 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560cef548638 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560cef548620 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560cef5485e0 <col:56> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560cef548668 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560cef548650 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560cef548600 <col:74> '_Bool' lvalue Var 0x560cef544648 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef548738 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cef5486f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cef5486c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560cef548768 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cef548750 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef548718 <col:102> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560cef5489d0 <line:749:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560cef5487e8 <col:3> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560cef5489b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef548988 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560cef5488a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560cef548860 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560cef548848 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560cef548808 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560cef548890 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560cef548878 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560cef548828 <col:38> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef548940 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cef5488f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cef5488c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560cef548970 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cef548958 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef548920 <col:66> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560cef548cb8 <line:750:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560cef5489f0 <col:3> '_Bool' lvalue Var 0x560cef544648 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560cef548ca0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef548c70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560cef548b90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560cef548ab0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560cef548a68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560cef548a50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560cef548a10 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560cef548a98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560cef548a80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560cef548a30 <col:38> '_Bool' lvalue Var 0x560cef544468 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560cef548b70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560cef548b28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560cef548b10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560cef548ad0 <col:56> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560cef548b58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560cef548b40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560cef548af0 <col:74> '_Bool' lvalue Var 0x560cef544648 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef548c28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cef548be0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cef548bb0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560cef548c58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cef548c40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef548c08 <col:102> '_Bool' lvalue Var 0x560cef544648 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x560cef548d10 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cef548cf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef548cd8 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cef548d68 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cef548d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef548d30 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cef548e20 <line:753:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560cef548d88 <col:3> 'int' lvalue Var 0x560cef543740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560cef548e00 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560cef548de8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cef548da8 <col:22> 'int' lvalue Var 0x560cef543740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560cef548dc8 <col:41> 'int' 1
|   |-CallExpr 0x560cef548e78 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cef548e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef548e40 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560cef548f28 <line:755:3, col:36>
|     `-CallExpr 0x560cef548f08 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560cef548ef0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560cef548e98 <col:10> 'void *(void)' Function 0x560cef4e9fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560cef549180 prev 0x560cef543268 <line:757:1, line:779:1> line:757:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x560cef5490e8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560cef54a4f8 <line:758:1, line:779:1>
|   |-CallExpr 0x560cef549260 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cef549248 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef549228 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cef5492c0 <line:760:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560cef549280 <col:3> 'int' lvalue Var 0x560cef544020 'x' 'int'
|   | `-IntegerLiteral 0x560cef5492a0 <col:7> 'int' 1
|   |-CallExpr 0x560cef549318 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cef549300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef5492e0 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cef549370 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cef549358 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef549338 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cef5493e8 <line:763:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560cef549390 <col:3> 'int' lvalue Var 0x560cef543aa0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x560cef5493d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cef5493b0 <col:25> 'int' lvalue Var 0x560cef544020 'x' 'int'
|   |-CallExpr 0x560cef549440 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cef549428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef549408 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cef549498 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cef549480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef549460 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cef549510 <line:766:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560cef5494b8 <col:3> 'int' lvalue Var 0x560cef543bc0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x560cef5494f8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cef5494d8 <col:25> 'int' lvalue Var 0x560cef544140 'y' 'int'
|   |-CallExpr 0x560cef549568 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cef549550 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef549530 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cef5495c0 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cef5495a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef549588 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cef5498a8 <line:769:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560cef5495e0 <col:3> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   | `-ConditionalOperator 0x560cef549878 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560cef5496a0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560cef549658 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560cef549640 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560cef549600 <col:7> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560cef549688 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560cef549670 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560cef549620 <col:25> '_Bool' lvalue Var 0x560cef5444e0 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x560cef549860 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cef5496c0 <col:42> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560cef549840 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560cef549810 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560cef549780 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560cef549738 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560cef549720 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560cef5496e0 <col:55> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560cef549768 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560cef549750 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560cef549700 <col:73> '_Bool' lvalue Var 0x560cef5446c0 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560cef5497e0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cef5497a0 <col:90> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560cef5497f8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef5497c0 <col:102> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   |-BinaryOperator 0x560cef549ab0 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560cef5498c8 <col:3> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cef549a98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef549a68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560cef549988 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560cef549940 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560cef549928 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560cef5498e8 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560cef549970 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560cef549958 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560cef549908 <col:38> '_Bool' lvalue Var 0x560cef5444e0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef549a20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cef5499d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cef5499a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560cef549a50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cef549a38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef549a00 <col:66> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cef549d98 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560cef549ad0 <col:3> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cef549d80 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef549d50 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560cef549c70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560cef549b90 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560cef549b48 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560cef549b30 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560cef549af0 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560cef549b78 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560cef549b60 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560cef549b10 <col:38> '_Bool' lvalue Var 0x560cef5444e0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560cef549c50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560cef549c08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560cef549bf0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560cef549bb0 <col:56> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560cef549c38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560cef549c20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560cef549bd0 <col:74> '_Bool' lvalue Var 0x560cef5446c0 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef549d08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cef549cc0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cef549c90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560cef549d38 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cef549d20 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef549ce8 <col:102> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560cef549fc8 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560cef549db8 <col:3> '_Bool' lvalue Var 0x560cef5444e0 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560cef549fb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef549f80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560cef549e78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560cef549e30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560cef549e18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560cef549dd8 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560cef549e60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560cef549e48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560cef549df8 <col:38> '_Bool' lvalue Var 0x560cef5444e0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef549f10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cef549ec8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cef549e98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560cef549f40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cef549f28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef549ef0 <col:66> '_Bool' lvalue Var 0x560cef5444e0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560cef54a2b0 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560cef549fe8 <col:3> '_Bool' lvalue Var 0x560cef5446c0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560cef54a298 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef54a268 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560cef54a188 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560cef54a0a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560cef54a060 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560cef54a048 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560cef54a008 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560cef54a090 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560cef54a078 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560cef54a028 <col:38> '_Bool' lvalue Var 0x560cef5444e0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560cef54a168 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560cef54a120 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560cef54a108 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560cef54a0c8 <col:56> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560cef54a150 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560cef54a138 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560cef54a0e8 <col:74> '_Bool' lvalue Var 0x560cef5446c0 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef54a220 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cef54a1d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cef54a1a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560cef54a250 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cef54a238 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef54a200 <col:102> '_Bool' lvalue Var 0x560cef5446c0 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x560cef54a308 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cef54a2f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef54a2d0 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cef54a360 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cef54a348 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef54a328 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cef54a418 <line:776:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560cef54a380 <col:3> 'int' lvalue Var 0x560cef543740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560cef54a3f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560cef54a3e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cef54a3a0 <col:22> 'int' lvalue Var 0x560cef543740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560cef54a3c0 <col:41> 'int' 1
|   |-CallExpr 0x560cef54a470 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cef54a458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef54a438 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560cef54a4e8 <line:778:3, col:36>
|     `-CallExpr 0x560cef54a4c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560cef54a4b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560cef54a490 <col:10> 'void *(void)' Function 0x560cef4e9fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560cef54a658 prev 0x560cef5433c0 <line:780:1, line:815:1> line:780:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x560cef54a5c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560cef54e350 <line:781:1, line:815:1>
|   |-CallExpr 0x560cef54a738 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cef54a720 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef54a700 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cef54a798 <line:783:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560cef54a758 <col:3> 'int' lvalue Var 0x560cef544140 'y' 'int'
|   | `-IntegerLiteral 0x560cef54a778 <col:7> 'int' 1
|   |-CallExpr 0x560cef54a7f0 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cef54a7d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef54a7b8 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cef54a848 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cef54a830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef54a810 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cef54a8c0 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560cef54a868 <col:3> 'int' lvalue Var 0x560cef543ce0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x560cef54a8a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cef54a888 <col:25> 'int' lvalue Var 0x560cef544140 'y' 'int'
|   |-CallExpr 0x560cef54a918 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cef54a900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef54a8e0 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cef54a970 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cef54a958 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef54a938 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cef54aa08 <line:789:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560cef54a990 <col:3> '_Bool' lvalue Var 0x560cef544a98 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x560cef54a9e8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560cef54a9d0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560cef54a9b0 <col:19> '_Bool (void)' Function 0x560cef4e9c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560cef54aaa0 <line:790:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560cef54aa28 <col:3> '_Bool' lvalue Var 0x560cef544b10 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x560cef54aa80 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560cef54aa68 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560cef54aa48 <col:19> '_Bool (void)' Function 0x560cef4e9c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560cef54ab18 <line:791:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560cef54aac0 <col:3> '_Bool' lvalue Var 0x560cef5442f8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560cef54ab00 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cef54aae0 <col:21> '_Bool' lvalue Var 0x560cef544b10 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560cef54ab90 <line:792:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560cef54ab38 <col:3> 'int' lvalue Var 0x560cef544378 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560cef54ab78 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cef54ab58 <col:15> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   |-BinaryOperator 0x560cef54afd8 <line:793:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560cef54abb0 <col:3> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   | `-ConditionalOperator 0x560cef54afa8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560cef54adc0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560cef54ace0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560cef54ac08 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560cef54abf0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560cef54abd0 <col:8> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560cef54acc0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560cef54ac58 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560cef54ac40 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560cef54ac20 <col:27> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x560cef54aca8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560cef54ac90 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560cef54ac70 <col:46> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560cef54ada0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560cef54ad38 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560cef54ad20 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560cef54ad00 <col:65> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x560cef54ad88 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560cef54ad70 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560cef54ad50 <col:84> '_Bool' lvalue Var 0x560cef544738 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560cef54af90 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cef54ade0 <col:101> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   |   `-ParenExpr 0x560cef54af60 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560cef54af30 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560cef54aea0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560cef54ae58 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560cef54ae40 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560cef54ae00 <col:106> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560cef54ae88 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560cef54ae70 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560cef54ae20 <col:124> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560cef54af00 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cef54aec0 <col:141> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560cef54af18 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef54aee0 <col:153> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x560cef54b4e8 <line:794:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560cef54aff8 <col:3> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x560cef54b4b8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560cef54b488 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cef54b470 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cef54b018 <col:15> '_Bool' lvalue Var 0x560cef544b10 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560cef54b4a0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cef54b038 <col:31> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560cef54b450 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560cef54b420 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560cef54b248 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560cef54b168 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560cef54b090 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560cef54b078 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560cef54b058 <col:45> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560cef54b148 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560cef54b0e0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560cef54b0c8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560cef54b0a8 <col:64> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x560cef54b130 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560cef54b118 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560cef54b0f8 <col:83> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560cef54b228 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560cef54b1c0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560cef54b1a8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560cef54b188 <col:102> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x560cef54b210 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560cef54b1f8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560cef54b1d8 <col:121> '_Bool' lvalue Var 0x560cef544738 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560cef54b408 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cef54b268 <col:138> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x560cef54b3e8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560cef54b3b8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560cef54b328 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560cef54b2e0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560cef54b2c8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560cef54b288 <col:151> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560cef54b310 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560cef54b2f8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560cef54b2a8 <col:169> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x560cef54b388 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560cef54b348 <col:186> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560cef54b3a0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560cef54b368 <col:198> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x560cef54b9f8 <line:795:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560cef54b508 <col:3> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x560cef54b9c8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560cef54b998 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cef54b980 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cef54b528 <col:15> '_Bool' lvalue Var 0x560cef544b10 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560cef54b9b0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cef54b548 <col:31> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x560cef54b960 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560cef54b930 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560cef54b758 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560cef54b678 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560cef54b5a0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560cef54b588 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560cef54b568 <col:45> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560cef54b658 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560cef54b5f0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560cef54b5d8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560cef54b5b8 <col:64> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x560cef54b640 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560cef54b628 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560cef54b608 <col:83> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560cef54b738 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560cef54b6d0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560cef54b6b8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560cef54b698 <col:102> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x560cef54b720 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560cef54b708 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560cef54b6e8 <col:121> '_Bool' lvalue Var 0x560cef544738 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560cef54b918 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cef54b778 <col:138> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x560cef54b8f8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560cef54b8c8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560cef54b838 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560cef54b7f0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560cef54b7d8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560cef54b798 <col:151> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560cef54b820 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560cef54b808 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560cef54b7b8 <col:169> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x560cef54b898 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560cef54b858 <col:186> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560cef54b8b0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560cef54b878 <col:198> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x560cef54bfb8 <line:796:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560cef54ba18 <col:3> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cef54bfa0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef54bf58 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560cef54bf10 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cef54bef8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cef54ba38 <col:20> '_Bool' lvalue Var 0x560cef544b10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef54bf40 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cef54bf28 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cef54ba58 <col:36> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560cef54bed8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560cef54bea8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560cef54bc68 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cef54bb88 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cef54bab0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cef54ba98 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cef54ba78 <col:55> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cef54bb68 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cef54bb00 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cef54bae8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cef54bac8 <col:74> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560cef54bb50 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cef54bb38 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cef54bb18 <col:93> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cef54bc48 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cef54bbe0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cef54bbc8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cef54bba8 <col:112> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560cef54bc30 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cef54bc18 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cef54bbf8 <col:131> '_Bool' lvalue Var 0x560cef544738 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560cef54be90 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cef54be78 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cef54bc88 <col:148> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560cef54be58 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560cef54be28 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560cef54bd48 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cef54bd00 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cef54bce8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cef54bca8 <col:166> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cef54bd30 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cef54bd18 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cef54bcc8 <col:184> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560cef54bde0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cef54bd98 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cef54bd68 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cef54be10 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560cef54bdf8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560cef54bdc0 <col:212> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cef54c580 <line:797:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560cef54bfd8 <col:3> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cef54c568 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef54c538 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560cef54c4f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cef54c4d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cef54bff8 <col:20> '_Bool' lvalue Var 0x560cef544b10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef54c520 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cef54c508 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cef54c018 <col:36> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560cef54c4b8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560cef54c488 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560cef54c228 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cef54c148 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cef54c070 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cef54c058 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cef54c038 <col:55> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cef54c128 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cef54c0c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cef54c0a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cef54c088 <col:74> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560cef54c110 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cef54c0f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cef54c0d8 <col:93> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cef54c208 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cef54c1a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cef54c188 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cef54c168 <col:112> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560cef54c1f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cef54c1d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cef54c1b8 <col:131> '_Bool' lvalue Var 0x560cef544738 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560cef54c470 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cef54c458 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cef54c248 <col:148> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560cef54c438 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560cef54c408 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560cef54c308 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cef54c2c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cef54c2a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cef54c268 <col:166> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cef54c2f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cef54c2d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cef54c288 <col:184> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560cef54c3d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cef54c358 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cef54c328 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cef54c3f0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560cef54c3b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560cef54c380 <col:219> 'int' 0
|   |-BinaryOperator 0x560cef54cb28 <line:798:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560cef54c5a0 <col:3> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560cef54cb10 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef54cae0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560cef54ca98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cef54ca80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cef54c5c0 <col:20> '_Bool' lvalue Var 0x560cef544b10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef54cac8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cef54cab0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cef54c5e0 <col:36> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x560cef54ca60 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560cef54ca30 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560cef54c7f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cef54c710 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cef54c638 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cef54c620 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cef54c600 <col:55> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cef54c6f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cef54c688 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cef54c670 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cef54c650 <col:74> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560cef54c6d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cef54c6c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cef54c6a0 <col:93> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cef54c7d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cef54c768 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cef54c750 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cef54c730 <col:112> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560cef54c7b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cef54c7a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cef54c780 <col:131> '_Bool' lvalue Var 0x560cef544738 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560cef54ca18 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cef54ca00 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cef54c810 <col:148> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x560cef54c9e0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560cef54c9b0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560cef54c8d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cef54c888 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cef54c870 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cef54c830 <col:166> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cef54c8b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cef54c8a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cef54c850 <col:184> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560cef54c968 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cef54c920 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cef54c8f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cef54c998 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560cef54c980 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560cef54c948 <col:212> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560cef54d128 <line:799:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560cef54cb48 <col:3> '_Bool' lvalue Var 0x560cef544738 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560cef54d110 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef54d0e0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560cef54d098 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cef54d080 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cef54cb68 <col:20> '_Bool' lvalue Var 0x560cef544b10 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef54d0c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cef54d0b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cef54cb88 <col:36> '_Bool' lvalue Var 0x560cef544738 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x560cef54d060 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560cef54d030 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560cef54cd98 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cef54ccb8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cef54cbe0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cef54cbc8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cef54cba8 <col:55> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cef54cc98 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cef54cc30 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cef54cc18 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cef54cbf8 <col:74> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560cef54cc80 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cef54cc68 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cef54cc48 <col:93> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cef54cd78 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cef54cd10 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cef54ccf8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cef54ccd8 <col:112> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560cef54cd60 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cef54cd48 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cef54cd28 <col:131> '_Bool' lvalue Var 0x560cef544738 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560cef54d018 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cef54d000 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cef54cdb8 <col:148> '_Bool' lvalue Var 0x560cef544738 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x560cef54cfe0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560cef54cfb0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560cef54ce78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cef54ce30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cef54ce18 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cef54cdd8 <col:166> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cef54ce60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cef54ce48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cef54cdf8 <col:184> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560cef54cf48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cef54cec8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cef54ce98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cef54cf60 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560cef54cf20 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560cef54cef0 <col:219> 'int' 0
|   |-BinaryOperator 0x560cef54d1a0 <line:800:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560cef54d148 <col:3> 'int' lvalue Var 0x560cef543e00 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x560cef54d188 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cef54d168 <col:25> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   |-BinaryOperator 0x560cef54d2d0 <line:801:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560cef54d1c0 <col:3> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   | `-ConditionalOperator 0x560cef54d2a0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560cef54d258 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cef54d240 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cef54d1e0 <col:7> '_Bool' lvalue Var 0x560cef5442f8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560cef54d270 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cef54d200 <col:25> 'int' lvalue Var 0x560cef544378 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560cef54d288 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560cef54d220 <col:37> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   |-BinaryOperator 0x560cef54d368 <line:802:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560cef54d2f0 <col:3> '_Bool' lvalue Var 0x560cef5442f8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560cef54d340 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560cef54d310 <col:28> 'int' 0
|   |-CallExpr 0x560cef54d3c0 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cef54d3a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef54d388 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cef54d418 <line:804:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cef54d400 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef54d3e0 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cef54d700 <line:805:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560cef54d438 <col:3> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   | `-ConditionalOperator 0x560cef54d6d0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560cef54d4f8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560cef54d4b0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560cef54d498 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560cef54d458 <col:7> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560cef54d4e0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560cef54d4c8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560cef54d478 <col:25> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560cef54d6b8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cef54d518 <col:42> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560cef54d698 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560cef54d668 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560cef54d5d8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560cef54d590 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560cef54d578 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560cef54d538 <col:55> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560cef54d5c0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560cef54d5a8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560cef54d558 <col:73> '_Bool' lvalue Var 0x560cef544738 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560cef54d638 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cef54d5f8 <col:90> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560cef54d650 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef54d618 <col:102> 'int' lvalue Var 0x560cef544260 'z' 'int'
|   |-BinaryOperator 0x560cef54d908 <line:806:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560cef54d720 <col:3> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cef54d8f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef54d8c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560cef54d7e0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560cef54d798 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560cef54d780 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560cef54d740 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560cef54d7c8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560cef54d7b0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560cef54d760 <col:38> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef54d878 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cef54d830 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cef54d800 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560cef54d8a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cef54d890 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef54d858 <col:66> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cef54dbf0 <line:807:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560cef54d928 <col:3> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cef54dbd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef54dba8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560cef54dac8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560cef54d9e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560cef54d9a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560cef54d988 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560cef54d948 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560cef54d9d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560cef54d9b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560cef54d968 <col:38> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560cef54daa8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560cef54da60 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560cef54da48 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560cef54da08 <col:56> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560cef54da90 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560cef54da78 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560cef54da28 <col:74> '_Bool' lvalue Var 0x560cef544738 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef54db60 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cef54db18 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cef54dae8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560cef54db90 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cef54db78 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef54db40 <col:102> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560cef54ddf8 <line:808:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560cef54dc10 <col:3> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560cef54dde0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef54ddb0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560cef54dcd0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560cef54dc88 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560cef54dc70 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560cef54dc30 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560cef54dcb8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560cef54dca0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560cef54dc50 <col:38> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef54dd68 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cef54dd20 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cef54dcf0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560cef54dd98 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cef54dd80 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef54dd48 <col:66> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560cef54e108 <line:809:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560cef54de18 <col:3> '_Bool' lvalue Var 0x560cef544738 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560cef54e0f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cef54e0c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560cef54dfe0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560cef54ded8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560cef54de90 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560cef54de78 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560cef54de38 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560cef54dec0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560cef54dea8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560cef54de58 <col:38> '_Bool' lvalue Var 0x560cef544558 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560cef54dfc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560cef54df50 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560cef54df38 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560cef54def8 <col:56> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560cef54df80 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560cef54df68 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560cef54df18 <col:74> '_Bool' lvalue Var 0x560cef544738 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560cef54e078 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cef54e030 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cef54e000 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560cef54e0a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cef54e090 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cef54e058 <col:102> '_Bool' lvalue Var 0x560cef544738 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x560cef54e160 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cef54e148 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef54e128 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cef54e1b8 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cef54e1a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef54e180 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cef54e270 <line:812:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560cef54e1d8 <col:3> 'int' lvalue Var 0x560cef543740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560cef54e250 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560cef54e238 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cef54e1f8 <col:22> 'int' lvalue Var 0x560cef543740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560cef54e218 <col:41> 'int' 1
|   |-CallExpr 0x560cef54e2c8 <line:813:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cef54e2b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cef54e290 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560cef54e340 <line:814:3, col:36>
|     `-CallExpr 0x560cef54e320 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560cef54e308 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560cef54e2e8 <col:10> 'void *(void)' Function 0x560cef4e9fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560cef54e488 prev 0x560cef543488 <line:816:1, line:818:1> line:816:6 fence 'void ()'
| `-CompoundStmt 0x560cef54e528 <line:817:1, line:818:1>
|-FunctionDecl 0x560cef54e558 prev 0x560cef543548 <line:819:1, line:821:1> line:819:6 isync 'void ()'
| `-CompoundStmt 0x560cef54e5f8 <line:820:1, line:821:1>
|-FunctionDecl 0x560cef54e628 prev 0x560cef543608 <line:822:1, line:824:1> line:822:6 lwfence 'void ()'
| `-CompoundStmt 0x560cef54e6c8 <line:823:1, line:824:1>
`-FunctionDecl 0x560cef54e738 <line:825:1, line:849:1> line:825:5 main 'int ()'
  `-CompoundStmt 0x560cef550550 <line:826:1, line:849:1>
    |-DeclStmt 0x560cef54e850 <line:827:3, col:16>
    | `-VarDecl 0x560cef54e7e8 <col:3, col:13> col:13 used t16 'pthread_t':'unsigned long'
    |-CallExpr 0x560cef54ea58 <line:828:3, col:52> 'int'
    | |-ImplicitCastExpr 0x560cef54ea40 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cef54e868 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560cef52a9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560cef54e8a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560cef54e888 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560cef54e7e8 't16' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560cef54ea98 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560cef54e920 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x560cef54e8f8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560cef54e8c0 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x560cef54eab0 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cef54e940 <col:37> 'void *(void *)' Function 0x560cef544c28 'P0' 'void *(void *)'
    | `-ParenExpr 0x560cef54e9c0 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x560cef54e998 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560cef54e960 <col:50> 'int' 0
    |-DeclStmt 0x560cef54eb40 <line:829:3, col:16>
    | `-VarDecl 0x560cef54ead8 <col:3, col:13> col:13 used t17 'pthread_t':'unsigned long'
    |-CallExpr 0x560cef54ece8 <line:830:3, col:52> 'int'
    | |-ImplicitCastExpr 0x560cef54ecd0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cef54eb58 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560cef52a9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560cef54eb98 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560cef54eb78 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560cef54ead8 't17' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560cef54ed28 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560cef54ec10 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x560cef54ebe8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560cef54ebb0 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x560cef54ed40 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cef54ec30 <col:37> 'void *(void *)' Function 0x560cef549180 'P1' 'void *(void *)'
    | `-ParenExpr 0x560cef54ecb0 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x560cef54ec88 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560cef54ec50 <col:50> 'int' 0
    |-DeclStmt 0x560cef54edd0 <line:831:3, col:16>
    | `-VarDecl 0x560cef54ed68 <col:3, col:13> col:13 used t18 'pthread_t':'unsigned long'
    |-CallExpr 0x560cef54ef78 <line:832:3, col:52> 'int'
    | |-ImplicitCastExpr 0x560cef54ef60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cef54ede8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560cef52a9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560cef54ee28 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560cef54ee08 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560cef54ed68 't18' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560cef54efd0 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560cef54eea0 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x560cef54ee78 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560cef54ee40 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x560cef54efe8 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cef54eec0 <col:37> 'void *(void *)' Function 0x560cef54a658 'P2' 'void *(void *)'
    | `-ParenExpr 0x560cef54ef40 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x560cef54ef18 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560cef54eee0 <col:50> 'int' 0
    |-CallExpr 0x560cef54f038 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560cef54f020 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cef54f000 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560cef54f108 <line:834:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x560cef54f058 <col:3> '_Bool' lvalue Var 0x560cef543e98 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x560cef54f0f0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x560cef54f0d0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x560cef54f0b8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x560cef54f078 <col:21> 'int' lvalue Var 0x560cef543740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x560cef54f098 <col:41> 'int' 3
    |-CallExpr 0x560cef54f160 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560cef54f148 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cef54f128 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560cef54f1d8 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560cef54f1c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cef54f180 <col:3> 'void (int)' Function 0x560cef4e9e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x560cef54f218 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560cef54f200 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560cef54f1a0 <col:21> '_Bool' lvalue Var 0x560cef543e98 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x560cef54f268 <line:837:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560cef54f250 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cef54f230 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560cef54f550 <line:838:3, col:103> 'int' '='
    | |-DeclRefExpr 0x560cef54f288 <col:3> 'int' lvalue Var 0x560cef544260 'z' 'int'
    | `-ConditionalOperator 0x560cef54f520 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x560cef54f348 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x560cef54f300 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x560cef54f2e8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x560cef54f2a8 <col:7> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x560cef54f330 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x560cef54f318 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560cef54f2c8 <col:25> '_Bool' lvalue Var 0x560cef5443f0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560cef54f508 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560cef54f368 <col:42> 'int' lvalue Var 0x560cef5448b0 'z$w_buff0' 'int'
    |   `-ParenExpr 0x560cef54f4e8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x560cef54f4b8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x560cef54f428 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560cef54f3e0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560cef54f3c8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560cef54f388 <col:55> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560cef54f410 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560cef54f3f8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560cef54f3a8 <col:73> '_Bool' lvalue Var 0x560cef5445d0 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560cef54f488 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560cef54f448 <col:90> 'int' lvalue Var 0x560cef5449a8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x560cef54f4a0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560cef54f468 <col:102> 'int' lvalue Var 0x560cef544260 'z' 'int'
    |-BinaryOperator 0x560cef54f758 <line:839:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560cef54f570 <col:3> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560cef54f740 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560cef54f710 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560cef54f630 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560cef54f5e8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560cef54f5d0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560cef54f590 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560cef54f618 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560cef54f600 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560cef54f5b0 <col:38> '_Bool' lvalue Var 0x560cef5443f0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560cef54f6c8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560cef54f680 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560cef54f650 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560cef54f6f8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560cef54f6e0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560cef54f6a8 <col:66> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560cef54fa40 <line:840:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560cef54f778 <col:3> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560cef54fa28 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560cef54f9f8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560cef54f918 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560cef54f838 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560cef54f7f0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560cef54f7d8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560cef54f798 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560cef54f820 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560cef54f808 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560cef54f7b8 <col:38> '_Bool' lvalue Var 0x560cef5443f0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560cef54f8f8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560cef54f8b0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560cef54f898 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560cef54f858 <col:56> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560cef54f8e0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560cef54f8c8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560cef54f878 <col:74> '_Bool' lvalue Var 0x560cef5445d0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560cef54f9b0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560cef54f968 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560cef54f938 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560cef54f9e0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560cef54f9c8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560cef54f990 <col:102> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x560cef54fc48 <line:841:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560cef54fa60 <col:3> '_Bool' lvalue Var 0x560cef5443f0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560cef54fc30 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560cef54fc00 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560cef54fb20 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560cef54fad8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560cef54fac0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560cef54fa80 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560cef54fb08 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560cef54faf0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560cef54faa0 <col:38> '_Bool' lvalue Var 0x560cef5443f0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560cef54fbb8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560cef54fb70 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560cef54fb40 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560cef54fbe8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560cef54fbd0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560cef54fb98 <col:66> '_Bool' lvalue Var 0x560cef5443f0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560cef54ff30 <line:842:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560cef54fc68 <col:3> '_Bool' lvalue Var 0x560cef5445d0 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560cef54ff18 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560cef54fee8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560cef54fe08 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560cef54fd28 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560cef54fce0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560cef54fcc8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560cef54fc88 <col:20> '_Bool' lvalue Var 0x560cef544928 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560cef54fd10 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560cef54fcf8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560cef54fca8 <col:38> '_Bool' lvalue Var 0x560cef5443f0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560cef54fde8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560cef54fda0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560cef54fd88 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560cef54fd48 <col:56> '_Bool' lvalue Var 0x560cef544a20 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560cef54fdd0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560cef54fdb8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560cef54fd68 <col:74> '_Bool' lvalue Var 0x560cef5445d0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560cef54fea0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560cef54fe58 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560cef54fe28 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560cef54fed0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560cef54feb8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560cef54fe80 <col:102> '_Bool' lvalue Var 0x560cef5445d0 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x560cef54ff88 <line:843:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560cef54ff70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cef54ff50 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560cef54fff8 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560cef54ffe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cef54ffa8 <col:3> 'void ()' Function 0x560cef4ea4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560cef5503f8 <line:845:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x560cef550018 <col:3> '_Bool' lvalue Var 0x560cef543f20 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x560cef5503e0 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x560cef5503c8 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x560cef5503a8 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x560cef550388 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x560cef5502f0 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x560cef550258 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x560cef5501c0 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x560cef550128 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x560cef550090 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x560cef550078 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x560cef550038 <col:23> 'int' lvalue Var 0x560cef543860 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x560cef550058 <col:46> 'int' 1
    |         | | | | `-BinaryOperator 0x560cef550108 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x560cef5500f0 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x560cef5500b0 <col:51> 'int' lvalue Var 0x560cef543980 '__unbuffered_p0_EBX' 'int'
    |         | | | |   `-IntegerLiteral 0x560cef5500d0 <col:74> 'int' 0
    |         | | | `-BinaryOperator 0x560cef5501a0 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x560cef550188 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x560cef550148 <col:79> 'int' lvalue Var 0x560cef543aa0 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x560cef550168 <col:102> 'int' 1
    |         | | `-BinaryOperator 0x560cef550238 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x560cef550220 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x560cef5501e0 <col:107> 'int' lvalue Var 0x560cef543bc0 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x560cef550200 <col:130> 'int' 0
    |         | `-BinaryOperator 0x560cef5502d0 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x560cef5502b8 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x560cef550278 <col:135> 'int' lvalue Var 0x560cef543ce0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x560cef550298 <col:158> 'int' 1
    |         `-BinaryOperator 0x560cef550368 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x560cef550350 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560cef550310 <col:163> 'int' lvalue Var 0x560cef543e00 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x560cef550330 <col:186> 'int' 0
    |-CallExpr 0x560cef550450 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560cef550438 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cef550418 <col:3> 'void ()' Function 0x560cef4ea570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560cef5504c8 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560cef5504b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cef550470 <col:3> 'void (int)' Function 0x560cef4ea238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x560cef550508 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560cef5504f0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560cef550490 <col:21> '_Bool' lvalue Var 0x560cef543f20 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x560cef550540 <line:848:3, col:10>
      `-IntegerLiteral 0x560cef550520 <col:10> 'int' 0
